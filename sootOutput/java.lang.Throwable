    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.lang.StackTraceElement[] $r1;
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.lang.Throwable[] $r4;

        $r0 = class "java/lang/Throwable";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.lang.Throwable: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (java.lang.StackTraceElement)[0];

        <java.lang.Throwable: java.lang.StackTraceElement[] UNASSIGNED_STACK> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        <java.lang.Throwable: java.util.List SUPPRESSED_SENTINEL> = $r3;

        $r4 = newarray (java.lang.Throwable)[0];

        <java.lang.Throwable: java.lang.Throwable[] EMPTY_THROWABLE_ARRAY> = $r4;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.Throwable l0;
        java.lang.String l1;
        java.lang.StackTraceElement[] $r0;
        java.util.List $r1;

        l0 := @this: java.lang.Throwable;

        l1 := @parameter0: java.lang.String;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.Throwable: java.lang.Throwable cause> = l0;

        $r0 = <java.lang.Throwable: java.lang.StackTraceElement[] UNASSIGNED_STACK>;

        l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $r0;

        $r1 = <java.lang.Throwable: java.util.List SUPPRESSED_SENTINEL>;

        l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $r1;

        virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        l0.<java.lang.Throwable: java.lang.String detailMessage> = l1;

        return;
    }

    public synchronized java.lang.Throwable fillInStackTrace()
    {
        java.lang.Throwable l0;
        java.lang.StackTraceElement[] $r0, $r3;
        java.lang.Object $r1;

        l0 := @this: java.lang.Throwable;

        $r0 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>;

        if $r0 != null goto label1;

        $r1 = l0.<java.lang.Throwable: java.lang.Object backtrace>;

        if $r1 == null goto label2;

     label1:
        specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0);

        $r3 = <java.lang.Throwable: java.lang.StackTraceElement[] UNASSIGNED_STACK>;

        l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $r3;

     label2:
        return l0;
    }


