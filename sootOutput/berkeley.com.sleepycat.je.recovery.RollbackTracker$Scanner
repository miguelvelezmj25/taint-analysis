    public void rollback(java.lang.Long, berkeley.com.sleepycat.je.log.LNFileReader, berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner this;
        java.lang.Long txnId, $r16;
        berkeley.com.sleepycat.je.log.LNFileReader reader;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker;
        long undoLsn, $l0;
        berkeley.com.sleepycat.je.dbi.DbTree dbTree;
        berkeley.com.sleepycat.je.txn.UndoReader undo;
        berkeley.com.sleepycat.je.txn.TxnChain chain;
        berkeley.com.sleepycat.je.txn.TxnChain$RevertInfo revertTo;
        berkeley.com.sleepycat.je.tree.TreeLocation $r0;
        java.lang.Throwable l10, $r18;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod $r1, $r4, $r13;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.recovery.RollbackTracker $r2, $r5, $r7, $r14, $r20;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r3, $r6, $r8;
        java.util.logging.Logger $r9;
        java.util.logging.Level $r10;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r11, $r17, $r19;
        berkeley.com.sleepycat.je.log.entry.LNLogEntry $r12;
        java.util.List $r15;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner;

        txnId := @parameter0: java.lang.Long;

        reader := @parameter1: berkeley.com.sleepycat.je.log.LNFileReader;

        tracker := @parameter2: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod target>;

        $z0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean beforeCheckpointStart()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        undoLsn = virtualinvoke reader.<berkeley.com.sleepycat.je.log.LNFileReader: long getLastLsn()>();

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker this$0>;

        $r3 = staticinvoke <berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$000(berkeley.com.sleepycat.je.recovery.RollbackTracker)>($r2);

        dbTree = virtualinvoke $r3.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbTree getDbTree()>();

        undo = staticinvoke <berkeley.com.sleepycat.je.txn.UndoReader: berkeley.com.sleepycat.je.txn.UndoReader createForRecovery(berkeley.com.sleepycat.je.log.LNFileReader,berkeley.com.sleepycat.je.dbi.DbTree)>(reader, dbTree);

        if undo != null goto label2;

        return;

     label2:
        $r4 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod target>;

        $l0 = virtualinvoke txnId.<java.lang.Long: long longValue()>();

        $r5 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker this$0>;

        $r6 = staticinvoke <berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$000(berkeley.com.sleepycat.je.recovery.RollbackTracker)>($r5);

        chain = virtualinvoke $r4.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.txn.TxnChain getChain(long,long,berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>($l0, undoLsn, $r6);

     label3:
        revertTo = virtualinvoke chain.<berkeley.com.sleepycat.je.txn.TxnChain: berkeley.com.sleepycat.je.txn.TxnChain$RevertInfo pop()>();

        $r7 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker this$0>;

        $r8 = staticinvoke <berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$000(berkeley.com.sleepycat.je.recovery.RollbackTracker)>($r7);

        $r9 = virtualinvoke $r8.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger getLogger()>();

        $r10 = <java.util.logging.Level: java.util.logging.Level FINER>;

        $r0 = new berkeley.com.sleepycat.je.tree.TreeLocation;

        specialinvoke $r0.<berkeley.com.sleepycat.je.tree.TreeLocation: void <init>()>();

        $r11 = undo.<berkeley.com.sleepycat.je.txn.UndoReader: berkeley.com.sleepycat.je.dbi.DatabaseImpl db>;

        $r12 = undo.<berkeley.com.sleepycat.je.txn.UndoReader: berkeley.com.sleepycat.je.log.entry.LNLogEntry logEntry>;

        staticinvoke <berkeley.com.sleepycat.je.recovery.RecoveryManager: void rollbackUndo(java.util.logging.Logger,java.util.logging.Level,berkeley.com.sleepycat.je.tree.TreeLocation,berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.log.entry.LNLogEntry,long,berkeley.com.sleepycat.je.txn.TxnChain$RevertInfo)>($r9, $r10, $r0, $r11, $r12, undoLsn, revertTo);

        $r13 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod target>;

        $z1 = virtualinvoke $r13.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean hasRollbackEnd()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke reader.<berkeley.com.sleepycat.je.log.LNFileReader: boolean isInvisible()>();

        if $z2 != 0 goto label4;

        $r14 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker this$0>;

        $r15 = staticinvoke <berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List access$100(berkeley.com.sleepycat.je.recovery.RollbackTracker)>($r14);

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(undoLsn);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

     label4:
        $r17 = undo.<berkeley.com.sleepycat.je.txn.UndoReader: berkeley.com.sleepycat.je.dbi.DatabaseImpl db>;

        virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>($r17);

        goto label8;

     label5:
        $r18 := @caughtexception;

     label6:
        l10 = $r18;

     label7:
        $r19 = undo.<berkeley.com.sleepycat.je.txn.UndoReader: berkeley.com.sleepycat.je.dbi.DatabaseImpl db>;

        virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>($r19);

        throw l10;

     label8:
        $r20 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker this$0>;

        staticinvoke <berkeley.com.sleepycat.je.recovery.RollbackTracker: void access$200(berkeley.com.sleepycat.je.recovery.RollbackTracker,long,berkeley.com.sleepycat.je.txn.UndoReader,berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker)>($r20, undoLsn, undo, tracker);

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner this;
        berkeley.com.sleepycat.je.recovery.RollbackTracker this$0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner;

        this$0 := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner: berkeley.com.sleepycat.je.recovery.RollbackTracker this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


