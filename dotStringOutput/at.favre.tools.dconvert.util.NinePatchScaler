digraph <init> {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {871627665}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1195152770}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1195152770}" -> "$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {1437690202}";
"$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {1437690202}" -> "$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {2055265081}";
"$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {2055265081}" -> "specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {525389756}";
"specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {525389756}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1562669081}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1562669081}" -> "return {1440962974}";
}

digraph scale {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {327874692}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1571269603}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1571269603}" -> "dimensions := @parameter1: java.awt.Dimension {115937764}";
"dimensions := @parameter1: java.awt.Dimension {115937764}" -> "algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {996870368}";
"algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {996870368}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {634983675}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {634983675}" -> "trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {1492958432}";
"trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {1492958432}" -> "$i0 = dimensions.<java.awt.Dimension: int width> {1521283125}";
"$i0 = dimensions.<java.awt.Dimension: int width> {1521283125}" -> "$i1 = dimensions.<java.awt.Dimension: int height> {192938237}";
"$i1 = dimensions.<java.awt.Dimension: int height> {192938237}" -> "trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1433291568}";
"trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1433291568}" -> "w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1815901624}";
"w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1815901624}" -> "h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {608775582}";
"h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {608775582}" -> "borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {565905747}";
"borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {565905747}" -> "$i2 = w * h {1652762947}";
"$i2 = w * h {1652762947}" -> "rgbArray#28 = newarray (int)[$i2] {688159904}";
"rgbArray#28 = newarray (int)[$i2] {688159904}" -> "virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {1923343021}";
"virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {1923343021}" -> "virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {680264944}";
"virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {680264944}" -> "return borderImage {2122358832}";
}

digraph trim9PBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {902480462}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1851730925}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1851730925}" -> "$r0 = new java.awt.image.BufferedImage {1958985819}";
"$r0 = new java.awt.image.BufferedImage {1958985819}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1999694436}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1999694436}" -> "$i1 = $i0 - 2 {2091446000}";
"$i1 = $i0 - 2 {2091446000}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1471687866}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1471687866}" -> "$i3 = $i2 - 2 {2079510922}";
"$i3 = $i2 - 2 {2079510922}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {397117620}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {397117620}" -> "trimedImage = $r0 {508171426}";
"trimedImage = $r0 {508171426}" -> "g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {90379175}";
"g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {90379175}" -> "$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {2114706785}";
"$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {2114706785}" -> "$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1926851964}";
"$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1926851964}" -> "$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1010089699}";
"$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1010089699}" -> "$i7 = $i6 - 1 {1980160938}";
"$i7 = $i6 - 1 {1980160938}" -> "$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {255322749}";
"$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {255322749}" -> "$i9 = $i8 - 1 {416774813}";
"$i9 = $i8 - 1 {416774813}" -> "virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1358827326}";
"virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1358827326}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {557660777}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {557660777}" -> "return trimedImage {1913755775}";
}

digraph generateBordersImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1085960645}" -> "source := @parameter0: java.awt.image.BufferedImage {1447506170}";
"source := @parameter0: java.awt.image.BufferedImage {1447506170}" -> "trimedWidth := @parameter1: int {1297957963}";
"trimedWidth := @parameter1: int {1297957963}" -> "trimedHeight := @parameter2: int {778471961}";
"trimedHeight := @parameter2: int {778471961}" -> "$r0 = new java.awt.image.BufferedImage {106655944}";
"$r0 = new java.awt.image.BufferedImage {106655944}" -> "$i0 = trimedWidth + 2 {60272281}";
"$i0 = trimedWidth + 2 {60272281}" -> "$i1 = trimedHeight + 2 {1194701524}";
"$i1 = trimedHeight + 2 {1194701524}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1447014620}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1447014620}" -> "finalBorder = $r0 {73836038}";
"finalBorder = $r0 {73836038}" -> "$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1258038891}";
"$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1258038891}" -> "cutW = $i2 - 2 {1374779825}";
"cutW = $i2 - 2 {1374779825}" -> "$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {1581318934}";
"$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {1581318934}" -> "cutH = $i3 - 2 {1009519852}";
"cutH = $i3 - 2 {1009519852}" -> "$r1 = new java.awt.image.BufferedImage {1280157467}";
"$r1 = new java.awt.image.BufferedImage {1280157467}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1060017417}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1060017417}" -> "leftBorder#23 = $r1 {1514536172}";
"leftBorder#23 = $r1 {1514536172}" -> "$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1955502573}";
"$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1955502573}" -> "virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1719998606}";
"virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1719998606}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {2113691848}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {2113691848}" -> "leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {1184866041}";
"leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {1184866041}" -> "$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1217799196}";
"$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1217799196}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {180086271}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {180086271}" -> "$r4 = new java.awt.image.BufferedImage {1937016432}";
"$r4 = new java.awt.image.BufferedImage {1937016432}" -> "specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {120225625}";
"specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {120225625}" -> "rightBorder#69 = $r4 {1579536534}";
"rightBorder#69 = $r4 {1579536534}" -> "$i4 = cutW + 1 {1966782104}";
"$i4 = cutW + 1 {1966782104}" -> "$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {232239752}";
"$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {232239752}" -> "virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1129846381}";
"virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1129846381}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {877404450}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {877404450}" -> "rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1850297741}";
"rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1850297741}" -> "$i5 = trimedWidth + 1 {976392034}";
"$i5 = trimedWidth + 1 {976392034}" -> "$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1582409842}";
"$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1582409842}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1036939984}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1036939984}" -> "$r7 = new java.awt.image.BufferedImage {1846497059}";
"$r7 = new java.awt.image.BufferedImage {1846497059}" -> "specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1924567350}";
"specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1924567350}" -> "topBorder#119 = $r7 {154900945}";
"topBorder#119 = $r7 {154900945}" -> "$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1196923332}";
"$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1196923332}" -> "virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {2033373886}";
"virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {2033373886}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {992960478}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {992960478}" -> "topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1798486019}";
"topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1798486019}" -> "$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1641010334}";
"$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1641010334}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {2111779114}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {2111779114}" -> "$r10 = new java.awt.image.BufferedImage {1647010091}";
"$r10 = new java.awt.image.BufferedImage {1647010091}" -> "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {788740434}";
"specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {788740434}" -> "bottomBorder#165 = $r10 {985695963}";
"bottomBorder#165 = $r10 {985695963}" -> "$i6 = cutH + 1 {542544946}";
"$i6 = cutH + 1 {542544946}" -> "$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1882779878}";
"$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1882779878}" -> "virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {499209949}";
"virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {499209949}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {1584313529}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {1584313529}" -> "bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1911482222}";
"bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1911482222}" -> "$i7 = trimedHeight + 1 {445454139}";
"$i7 = trimedHeight + 1 {445454139}" -> "$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {2031456455}";
"$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {2031456455}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {159875870}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {159875870}" -> "return finalBorder {1386560580}";
}

digraph verifyBorderImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1106170007}" -> "border := @parameter0: java.awt.image.BufferedImage {437908876}";
"border := @parameter0: java.awt.image.BufferedImage {437908876}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {515899772}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {515899772}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1406714167}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1406714167}" -> "$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {981012431}";
"$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {981012431}" -> "rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {1284548580}";
"rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {1284548580}" -> "i#12 = 0 {1556894799}";
"i#12 = 0 {1556894799}" -> "$i3 = lengthof rgb {2113230951}";
"$i3 = lengthof rgb {2113230951}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1729118968}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1729118968}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1071887497}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1071887497}" -> "if i#12 >= $i3 goto return {1126503866}";
"if i#12 >= $i3 goto return {1126503866}" -> "$i4 = rgb[i#12] {1918363174}";
"if i#12 >= $i3 goto return {1126503866}" -> "return {1595969457}";
"$i4 = rgb[i#12] {1918363174}" -> "$i5 = -16777216 & $i4 {1370313789}";
"$i5 = -16777216 & $i4 {1370313789}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {367145755}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {367145755}" -> "if $i5 == 0 goto i#12 = i#12 + 1 {807682397}";
"if $i5 == 0 goto i#12 = i#12 + 1 {807682397}" -> "$i6 = rgb[i#12] {2062772642}";
"if $i5 == 0 goto i#12 = i#12 + 1 {807682397}" -> "i#12 = i#12 + 1 {367491235}";
"$i6 = rgb[i#12] {2062772642}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {2109098631}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {2109098631}" -> "if $i6 == -16777216 goto i#12 = i#12 + 1 {534040759}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {534040759}" -> "$i7 = rgb[i#12] {250624790}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {534040759}" -> "i#12 = i#12 + 1 {367491235}";
"$i7 = rgb[i#12] {250624790}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1923432898}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1923432898}" -> "if $i7 == -65536 goto i#12 = i#12 + 1 {936748741}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {936748741}" -> "$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {681501234}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {936748741}" -> "i#12 = i#12 + 1 {367491235}";
"$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {681501234}" -> "specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1347349495}";
"specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1347349495}" -> "throw $r0 {1253547189}";
"i#12 = i#12 + 1 {367491235}" -> "goto [?= $i3 = lengthof rgb] {2023145991}";
"goto [?= $i3 = lengthof rgb] {2023145991}" -> "$i3 = lengthof rgb {2113230951}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1923432898}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1071887497}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1729118968}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {367145755}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {2109098631}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph resizeBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {159960453}" -> "border := @parameter0: java.awt.image.BufferedImage {311010655}";
"border := @parameter0: java.awt.image.BufferedImage {311010655}" -> "targetWidth := @parameter1: int {1217588412}";
"targetWidth := @parameter1: int {1217588412}" -> "targetHeight := @parameter2: int {585667069}";
"targetHeight := @parameter2: int {585667069}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1678637396}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1678637396}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {859279066}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {859279066}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {845445407}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {845445407}" -> "if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {353765635}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {353765635}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1890199638}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {353765635}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {565572554}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1890199638}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1892557696}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1892557696}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1957735529}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1957735529}" -> "if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1431402833}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1431402833}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {565572554}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1431402833}" -> "w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {875105280}";
"$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {565572554}" -> "endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {1320633303}";
"endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {1320633303}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {115764547}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {115764547}" -> "return endImage {2042837122}";
"w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {875105280}" -> "h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {394136304}";
"h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {394136304}" -> "data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {398525393}";
"data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {398525393}" -> "$i2 = targetWidth * targetHeight {1096440458}";
"$i2 = targetWidth * targetHeight {1096440458}" -> "newData = newarray (int)[$i2] {375807649}";
"newData = newarray (int)[$i2] {375807649}" -> "$i3 = targetWidth - 1 {1251011369}";
"$i3 = targetWidth - 1 {1251011369}" -> "$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {901817877}";
"$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {901817877}" -> "$f0 = (float) $i4 {2131337417}";
"$f0 = (float) $i4 {2131337417}" -> "$i5 = w - 1 {1426193803}";
"$i5 = w - 1 {1426193803}" -> "$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {994109850}";
"$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {994109850}" -> "$f1 = (float) $i6 {1452611989}";
"$f1 = (float) $i6 {1452611989}" -> "widthRatio = $f0 / $f1 {925438567}";
"widthRatio = $f0 / $f1 {925438567}" -> "$i7 = targetHeight - 1 {361179065}";
"$i7 = targetHeight - 1 {361179065}" -> "$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {1419190118}";
"$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {1419190118}" -> "$f2 = (float) $i8 {1260287102}";
"$f2 = (float) $i8 {1260287102}" -> "$i9 = h - 1 {1948195105}";
"$i9 = h - 1 {1948195105}" -> "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {1794543072}";
"$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {1794543072}" -> "$f3 = (float) $i10 {146818516}";
"$f3 = (float) $i10 {146818516}" -> "heightRatio = $f2 / $f3 {1193808521}";
"heightRatio = $f2 / $f3 {1193808521}" -> "y#60 = 0 {2092528092}";
"y#60 = 0 {2092528092}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1137072350}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1137072350}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1135128892}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1135128892}" -> "if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {72445660}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {72445660}" -> "x#64 = 0 {1204299834}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {72445660}" -> "$r1 = new java.awt.image.BufferedImage {1606292095}";
"x#64 = 0 {1204299834}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1281795789}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1281795789}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1566282463}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1566282463}" -> "if x#64 >= w goto y#60 = y#60 + 1 {1865136710}";
"if x#64 >= w goto y#60 = y#60 + 1 {1865136710}" -> "$i11 = y#60 * w {1300381536}";
"if x#64 >= w goto y#60 = y#60 + 1 {1865136710}" -> "y#60 = y#60 + 1 {1467923847}";
"$i11 = y#60 * w {1300381536}" -> "$i12 = $i11 + x#64 {2009160620}";
"$i12 = $i11 + x#64 {2009160620}" -> "$i13 = data[$i12] {645823894}";
"$i13 = data[$i12] {645823894}" -> "$i14 = -16777216 & $i13 {2052796166}";
"$i14 = -16777216 & $i13 {2052796166}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {290600837}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {290600837}" -> "if $i14 == 0 goto x#64 = x#64 + 1 {556025540}";
"if $i14 == 0 goto x#64 = x#64 + 1 {556025540}" -> "$f4 = (float) x#64 {159527332}";
"if $i14 == 0 goto x#64 = x#64 + 1 {556025540}" -> "x#64 = x#64 + 1 {2015439163}";
"$f4 = (float) x#64 {159527332}" -> "$f5 = $f4 * widthRatio {689143167}";
"$f5 = $f4 * widthRatio {689143167}" -> "$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {1577737191}";
"$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {1577737191}" -> "$i16 = targetWidth - 1 {1309353675}";
"$i16 = targetWidth - 1 {1309353675}" -> "newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {403032950}";
"newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {403032950}" -> "$f6 = (float) y#60 {1508375873}";
"$f6 = (float) y#60 {1508375873}" -> "$f7 = $f6 * heightRatio {943425437}";
"$f7 = $f6 * heightRatio {943425437}" -> "$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {1262084826}";
"$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {1262084826}" -> "$i18 = targetHeight - 1 {1525371689}";
"$i18 = targetHeight - 1 {1525371689}" -> "newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {471881478}";
"newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {471881478}" -> "$i19 = newY * targetWidth {133313337}";
"$i19 = newY * targetWidth {133313337}" -> "$i20 = $i19 + newX {1573721454}";
"$i20 = $i19 + newX {1573721454}" -> "$i21 = y#60 * w {1318248347}";
"$i21 = y#60 * w {1318248347}" -> "$i22 = $i21 + x#64 {888218434}";
"$i22 = $i21 + x#64 {888218434}" -> "$i23 = data[$i22] {1096443943}";
"$i23 = data[$i22] {1096443943}" -> "newData[$i20] = $i23 {434899344}";
"newData[$i20] = $i23 {434899344}" -> "x#64 = x#64 + 1 {2015439163}";
"x#64 = x#64 + 1 {2015439163}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {1173876302}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {1173876302}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1281795789}";
"y#60 = y#60 + 1 {1467923847}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {774348401}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {774348401}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1137072350}";
"$r1 = new java.awt.image.BufferedImage {1606292095}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {399212676}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {399212676}" -> "img = $r1 {868075881}";
"img = $r1 {868075881}" -> "virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {391324927}";
"virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {391324927}" -> "return img {125237174}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1957735529}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1566282463}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1137072350}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {290600837}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {859279066}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {845445407}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1281795789}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1892557696}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1135128892}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph enforceBorderColors {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {965061774}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1281955924}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1281955924}" -> "g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1336459489}";
"g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1336459489}" -> "$r0 = new java.awt.Color {119479944}";
"$r0 = new java.awt.Color {119479944}" -> "specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {508845939}";
"specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {508845939}" -> "virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {517306127}";
"virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {517306127}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1651370616}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1651370616}" -> "$i1 = $i0 - 2 {1161875244}";
"$i1 = $i0 - 2 {1161875244}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1001392114}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1001392114}" -> "$i3 = $i2 - 2 {1432414453}";
"$i3 = $i2 - 2 {1432414453}" -> "virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {2070302652}";
"virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {2070302652}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {90766286}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {90766286}" -> "w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {243196542}";
"w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {243196542}" -> "h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {834054988}";
"h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {834054988}" -> "$i4 = w * h {1122483537}";
"$i4 = w * h {1122483537}" -> "rgb = newarray (int)[$i4] {1830205752}";
"rgb = newarray (int)[$i4] {1830205752}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1189515188}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1189515188}" -> "i#40 = 0 {968975463}";
"i#40 = 0 {968975463}" -> "$i5 = lengthof rgb {1358416983}";
"$i5 = lengthof rgb {1358416983}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {749351170}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {749351170}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {713905402}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {713905402}" -> "if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1646749810}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1646749810}" -> "$i6 = rgb[i#40] {1686655263}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1646749810}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {2102767150}";
"$i6 = rgb[i#40] {1686655263}" -> "$i7 = -16777216 & $i6 {349000399}";
"$i7 = -16777216 & $i6 {349000399}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1394925480}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1394925480}" -> "if $i7 == 0 goto i#40 = i#40 + 1 {908782678}";
"if $i7 == 0 goto i#40 = i#40 + 1 {908782678}" -> "rgb[i#40] = -16777216 {477567940}";
"if $i7 == 0 goto i#40 = i#40 + 1 {908782678}" -> "i#40 = i#40 + 1 {1460072164}";
"rgb[i#40] = -16777216 {477567940}" -> "i#40 = i#40 + 1 {1460072164}";
"i#40 = i#40 + 1 {1460072164}" -> "goto [?= $i5 = lengthof rgb] {254413154}";
"goto [?= $i5 = lengthof rgb] {254413154}" -> "$i5 = lengthof rgb {1358416983}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {2102767150}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {1635972368}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {1635972368}" -> "$i8 = h - 1 {1504401092}";
"$i8 = h - 1 {1504401092}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1579493049}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1579493049}" -> "$i9 = w - 1 {1777886482}";
"$i9 = w - 1 {1777886482}" -> "$i10 = h - 1 {2066071344}";
"$i10 = h - 1 {2066071344}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {22264433}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {22264433}" -> "$i11 = w - 1 {428099665}";
"$i11 = w - 1 {428099665}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1516652194}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1516652194}" -> "return {1637571455}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {749351170}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1394925480}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {713905402}"[fontcolor="blue", penwidth=3, color="blue"];
}


