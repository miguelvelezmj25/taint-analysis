    public static final transient java.util.Map parseArgs(java.lang.String, java.util.List, java.lang.Object[])
    {
        java.lang.String optionsKey, defaultKey, sarg, defaultKey, name#6, $r4;
        java.util.List defaultKeys;
        java.lang.Object[] args;
        java.util.LinkedHashMap map, $r0;
        java.lang.Object arg;
        int len, i#10, $i0, $i1, j#62;
        boolean allDefaultOperands#4, isOperandValue#25, $z0, $z1, $z2, $z3;
        java.util.ArrayList values#8, $r5;
        java.lang.StringBuilder $r1, $r2, $r3;
        char $c2;

        optionsKey := @parameter0: java.lang.String;

        defaultKeys := @parameter1: java.util.List;

        args := @parameter2: java.lang.Object[];

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        map = $r0;

        allDefaultOperands#4 = 0;

        name#6 = null;

        values#8 = null;

        i#10 = 0;

     label01:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#10);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#10 >= $i0 goto label11;

        arg = args[i#10];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(allDefaultOperands#4);

        if allDefaultOperands#4 == 0 goto label02;

        defaultKey = staticinvoke <org.unix4j.grep.util.ArgsUtil: java.lang.String getDefaultKey(java.util.Map,java.util.List)>(map, defaultKeys);

        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.util.Map,java.lang.String,java.lang.Object)>(map, defaultKey, arg);

        goto label10;

     label02:
        isOperandValue#25 = 1;

        $z0 = arg instanceof java.lang.String;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label07;

        sarg = (java.lang.String) arg;

        $z1 = virtualinvoke sarg.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label04;

        isOperandValue#25 = 0;

        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.lang.String,java.util.Map,java.lang.String,java.util.List)>(optionsKey, map, name#6, values#8);

        $i1 = virtualinvoke sarg.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 != 2 goto label03;

        allDefaultOperands#4 = 1;

        name#6 = null;

        values#8 = null;

        goto label07;

     label03:
        name#6 = virtualinvoke sarg.<java.lang.String: java.lang.String substring(int)>(2);

        values#8 = null;

        goto label07;

     label04:
        $z2 = virtualinvoke sarg.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label07;

        $z3 = staticinvoke <org.unix4j.grep.util.ArgsUtil: boolean isDigit(java.lang.String,int)>(sarg, 1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label07;

        isOperandValue#25 = 0;

        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.lang.String,java.util.Map,java.lang.String,java.util.List)>(optionsKey, map, name#6, values#8);

        len = virtualinvoke sarg.<java.lang.String: int length()>();

        j#62 = 1;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#62);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if j#62 >= len goto label06;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c2 = virtualinvoke sarg.<java.lang.String: char charAt(int)>(j#62);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.util.Map,java.lang.String,java.lang.Object)>(map, optionsKey, $r4);

        j#62 = j#62 + 1;

        goto label05;

     label06:
        name#6 = null;

        values#8 = null;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isOperandValue#25);

        if isOperandValue#25 == 0 goto label10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(name#6);

        if name#6 != null goto label08;

        defaultKey = staticinvoke <org.unix4j.grep.util.ArgsUtil: java.lang.String getDefaultKey(java.util.Map,java.util.List)>(map, defaultKeys);

        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.util.Map,java.lang.String,java.lang.Object)>(map, defaultKey, arg);

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(values#8);

        if values#8 != null goto label09;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(2);

        values#8 = $r5;

     label09:
        interfaceinvoke values#8.<java.util.List: boolean add(java.lang.Object)>(arg);

     label10:
        i#10 = i#10 + 1;

        goto label01;

     label11:
        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.lang.String,java.util.Map,java.lang.String,java.util.List)>(optionsKey, map, name#6, values#8);

        return map;
    }

    private static void add(java.lang.String, java.util.Map, java.lang.String, java.util.List)
    {
        java.lang.String optionsKey, key;
        java.util.Map map;
        java.util.List values, old;
        java.lang.Object $r0;

        optionsKey := @parameter0: java.lang.String;

        map := @parameter1: java.util.Map;

        key := @parameter2: java.lang.String;

        values := @parameter3: java.util.List;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(key);

        if key == null goto label3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(values);

        if values != null goto label1;

        staticinvoke <org.unix4j.grep.util.ArgsUtil: void add(java.util.Map,java.lang.String,java.lang.Object)>(map, optionsKey, key);

        goto label3;

     label1:
        $r0 = interfaceinvoke map.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        old = (java.util.List) $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(old);

        if old != null goto label2;

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, values);

        goto label3;

     label2:
        interfaceinvoke old.<java.util.List: boolean addAll(java.util.Collection)>(values);

     label3:
        return;
    }

    private static void add(java.util.Map, java.lang.String, java.lang.Object)
    {
        java.util.Map map;
        java.lang.String key;
        java.lang.Object value, $r1, values#5;
        java.util.ArrayList tmp$10674093;
        java.util.List tmp$1999583092;

        map := @parameter0: java.util.Map;

        key := @parameter1: java.lang.String;

        value := @parameter2: java.lang.Object;

        $r1 = interfaceinvoke map.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        values#5 = (java.util.List) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(values#5);

        if values#5 != null goto label1;

        tmp$10674093 = new java.util.ArrayList;

        specialinvoke tmp$10674093.<java.util.ArrayList: void <init>(int)>(2);

        values#5 = tmp$10674093;

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, tmp$10674093);

     label1:
        tmp$1999583092 = (java.util.List) values#5;

        interfaceinvoke tmp$1999583092.<java.util.List: boolean add(java.lang.Object)>(value);

        return;
    }

    private static java.lang.String getDefaultKey(java.util.Map, java.util.List)
    {
        java.util.Map map;
        java.util.List defaultKeys;
        java.util.Iterator l2;
        java.lang.String defaultKey, $r2;
        boolean $z0, $z1;
        java.lang.Object $r0, $r1;
        int $i0, $i1;

        map := @parameter0: java.util.Map;

        defaultKeys := @parameter1: java.util.List;

        l2 = interfaceinvoke defaultKeys.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r0 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        defaultKey = (java.lang.String) $r0;

        $z1 = interfaceinvoke map.<java.util.Map: boolean containsKey(java.lang.Object)>(defaultKey);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        return defaultKey;

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke defaultKeys.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r1 = interfaceinvoke defaultKeys.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    private static boolean isDigit(java.lang.String, int)
    {
        java.lang.String s;
        int pos, $i0;
        char $c1;
        boolean $z0, $z1;

        s := @parameter0: java.lang.String;

        pos := @parameter1: int;

        $i0 = virtualinvoke s.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pos);

        if $i0 <= pos goto label1;

        $c1 = virtualinvoke s.<java.lang.String: char charAt(int)>(pos);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }


