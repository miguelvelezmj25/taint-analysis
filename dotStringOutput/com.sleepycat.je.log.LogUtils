digraph <clinit> {
"$r0 = newarray (byte)[0] {193786995}" -> "<com.sleepycat.je.log.LogUtils: byte[] ZERO_LENGTH_BYTE_ARRAY> = $r0 {1052280804}";
"<com.sleepycat.je.log.LogUtils: byte[] ZERO_LENGTH_BYTE_ARRAY> = $r0 {1052280804}" -> "<com.sleepycat.je.log.LogUtils: java.nio.charset.Charset logCharset> = null {1090618843}";
"<com.sleepycat.je.log.LogUtils: java.nio.charset.Charset logCharset> = null {1090618843}" -> "charsetName = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"je.logCharset\") {1725507939}";
"charsetName = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"je.logCharset\") {1725507939}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charsetName) {291285128}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charsetName) {291285128}" -> "if charsetName == null goto return {1972928916}";
"if charsetName == null goto return {1972928916}" -> "$i0 = virtualinvoke charsetName.<java.lang.String: int length()>() {723238317}";
"if charsetName == null goto return {1972928916}" -> "return {1533382544}";
"$i0 = virtualinvoke charsetName.<java.lang.String: int length()>() {723238317}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1086998914}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1086998914}" -> "if $i0 <= 0 goto return {1239147538}";
"if $i0 <= 0 goto return {1239147538}" -> "$r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(charsetName) {1285506094}";
"if $i0 <= 0 goto return {1239147538}" -> "return {1533382544}";
"$r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(charsetName) {1285506094}" -> "<com.sleepycat.je.log.LogUtils: java.nio.charset.Charset logCharset> = $r1 {975138501}";
"<com.sleepycat.je.log.LogUtils: java.nio.charset.Charset logCharset> = $r1 {975138501}" -> "goto [?= return] {745727712}";
"goto [?= return] {745727712}" -> "return {1533382544}";
"$r2 := @caughtexception {403738075}" -> "e = $r2 {273317784}";
"e = $r2 {273317784}" -> "virtualinvoke e.<java.lang.RuntimeException: void printStackTrace()>() {1788668712}";
"virtualinvoke e.<java.lang.RuntimeException: void printStackTrace()>() {1788668712}" -> "return {1533382544}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1086998914}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charsetName) {291285128}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph readInt {
"logBuf := @parameter0: java.nio.ByteBuffer {1691997995}" -> "$b0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1002379898}";
"$b0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1002379898}" -> "$s1 = $b0 & 255 {255654563}";
"$s1 = $b0 & 255 {255654563}" -> "ret#7 = $s1 << 0 {1851738027}";
"ret#7 = $s1 << 0 {1851738027}" -> "$b2 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1377741579}";
"$b2 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1377741579}" -> "$s3 = $b2 & 255 {1487725329}";
"$s3 = $b2 & 255 {1487725329}" -> "$i4 = $s3 << 8 {2135093717}";
"$i4 = $s3 << 8 {2135093717}" -> "ret#16 = ret#7 + $i4 {327163820}";
"ret#16 = ret#7 + $i4 {327163820}" -> "$b5 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {473974319}";
"$b5 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {473974319}" -> "$s6 = $b5 & 255 {892833638}";
"$s6 = $b5 & 255 {892833638}" -> "$i7 = $s6 << 16 {1560501332}";
"$i7 = $s6 << 16 {1560501332}" -> "ret#25 = ret#16 + $i7 {690901683}";
"ret#25 = ret#16 + $i7 {690901683}" -> "$b8 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {807629123}";
"$b8 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {807629123}" -> "$s9 = $b8 & 255 {612101426}";
"$s9 = $b8 & 255 {612101426}" -> "$i10 = $s9 << 24 {930576742}";
"$i10 = $s9 << 24 {930576742}" -> "ret#34 = ret#25 + $i10 {1067392145}";
"ret#34 = ret#25 + $i10 {1067392145}" -> "return ret#34 {37615220}";
}

digraph readUnsignedInt {
"buf := @parameter0: java.nio.ByteBuffer {1826514448}" -> "$b0 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {237087070}";
"$b0 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {237087070}" -> "$l1 = (long) $b0 {290500716}";
"$l1 = (long) $b0 {290500716}" -> "$l2 = $l1 & 255L {1156083883}";
"$l2 = $l1 & 255L {1156083883}" -> "ret#8 = $l2 << 0 {875830774}";
"ret#8 = $l2 << 0 {875830774}" -> "$b3 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {1630566406}";
"$b3 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {1630566406}" -> "$l4 = (long) $b3 {1971262075}";
"$l4 = (long) $b3 {1971262075}" -> "$l5 = $l4 & 255L {830975189}";
"$l5 = $l4 & 255L {830975189}" -> "$l6 = $l5 << 8 {362120387}";
"$l6 = $l5 << 8 {362120387}" -> "ret#18 = ret#8 + $l6 {1650543198}";
"ret#18 = ret#8 + $l6 {1650543198}" -> "$b7 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {1492294152}";
"$b7 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {1492294152}" -> "$l8 = (long) $b7 {807999730}";
"$l8 = (long) $b7 {807999730}" -> "$l9 = $l8 & 255L {1490792673}";
"$l9 = $l8 & 255L {1490792673}" -> "$l10 = $l9 << 16 {1814247380}";
"$l10 = $l9 << 16 {1814247380}" -> "ret#28 = ret#18 + $l10 {1302147732}";
"ret#28 = ret#18 + $l10 {1302147732}" -> "$b11 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {1756581312}";
"$b11 = virtualinvoke buf.<java.nio.ByteBuffer: byte get()>() {1756581312}" -> "$l12 = (long) $b11 {1285475280}";
"$l12 = (long) $b11 {1285475280}" -> "$l13 = $l12 & 255L {2044860162}";
"$l13 = $l12 & 255L {2044860162}" -> "$l14 = $l13 << 24 {834077249}";
"$l14 = $l13 << 24 {834077249}" -> "ret#38 = ret#28 + $l14 {1340112850}";
"ret#38 = ret#28 + $l14 {1340112850}" -> "return ret#38 {555959495}";
}

digraph readIntMSB {
"logBuf := @parameter0: java.nio.ByteBuffer {446827147}" -> "$b0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {225907196}";
"$b0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {225907196}" -> "$s1 = $b0 & 255 {591019917}";
"$s1 = $b0 & 255 {591019917}" -> "ret#7 = $s1 << 24 {1229854945}";
"ret#7 = $s1 << 24 {1229854945}" -> "$b2 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1445059946}";
"$b2 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1445059946}" -> "$s3 = $b2 & 255 {135120667}";
"$s3 = $b2 & 255 {135120667}" -> "$i4 = $s3 << 16 {890887687}";
"$i4 = $s3 << 16 {890887687}" -> "ret#16 = ret#7 + $i4 {1997018816}";
"ret#16 = ret#7 + $i4 {1997018816}" -> "$b5 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1749191455}";
"$b5 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1749191455}" -> "$s6 = $b5 & 255 {588137796}";
"$s6 = $b5 & 255 {588137796}" -> "$i7 = $s6 << 8 {1223705628}";
"$i7 = $s6 << 8 {1223705628}" -> "ret#25 = ret#16 + $i7 {532553245}";
"ret#25 = ret#16 + $i7 {532553245}" -> "$b8 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1140883523}";
"$b8 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1140883523}" -> "$s9 = $b8 & 255 {639851784}";
"$s9 = $b8 & 255 {639851784}" -> "$i10 = $s9 << 0 {1927237425}";
"$i10 = $s9 << 0 {1927237425}" -> "ret#34 = ret#25 + $i10 {1814711596}";
"ret#34 = ret#25 + $i10 {1814711596}" -> "return ret#34 {945335539}";
}

digraph readByteArray {
"logBuf := @parameter0: java.nio.ByteBuffer {1922851683}" -> "unpacked := @parameter1: boolean {484250565}";
"unpacked := @parameter1: boolean {484250565}" -> "size = staticinvoke <com.sleepycat.je.log.LogUtils: int readInt(java.nio.ByteBuffer,boolean)>(logBuf, unpacked) {102345033}";
"size = staticinvoke <com.sleepycat.je.log.LogUtils: int readInt(java.nio.ByteBuffer,boolean)>(logBuf, unpacked) {102345033}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1654870368}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1654870368}" -> "if size >= 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1490036793}";
"if size >= 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1490036793}" -> "return null {1849401433}";
"if size >= 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1490036793}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {2084897457}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {2084897457}" -> "if size != 0 goto b = newarray (byte)[size] {844187300}";
"if size != 0 goto b = newarray (byte)[size] {844187300}" -> "$r0 = <com.sleepycat.je.log.LogUtils: byte[] ZERO_LENGTH_BYTE_ARRAY> {259882901}";
"if size != 0 goto b = newarray (byte)[size] {844187300}" -> "b = newarray (byte)[size] {1194171106}";
"$r0 = <com.sleepycat.je.log.LogUtils: byte[] ZERO_LENGTH_BYTE_ARRAY> {259882901}" -> "return $r0 {1014447947}";
"b = newarray (byte)[size] {1194171106}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(b) {434670017}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(b) {434670017}" -> "return b {1203296837}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1654870368}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {2084897457}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph readLong {
"logBuf := @parameter0: java.nio.ByteBuffer {391154674}" -> "unpacked := @parameter1: boolean {1754784548}";
"unpacked := @parameter1: boolean {1754784548}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(unpacked) {587670203}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(unpacked) {587670203}" -> "if unpacked == 0 goto $l1 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(logBuf) {1055105276}";
"if unpacked == 0 goto $l1 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(logBuf) {1055105276}" -> "$l0 = staticinvoke <com.sleepycat.je.log.LogUtils: long readLong(java.nio.ByteBuffer)>(logBuf) {65386460}";
"if unpacked == 0 goto $l1 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(logBuf) {1055105276}" -> "$l1 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(logBuf) {123007821}";
"$l0 = staticinvoke <com.sleepycat.je.log.LogUtils: long readLong(java.nio.ByteBuffer)>(logBuf) {65386460}" -> "return $l0 {448884124}";
"$l1 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(logBuf) {123007821}" -> "return $l1 {698478380}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(unpacked) {587670203}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph readPackedLong {
"logBuf := @parameter0: java.nio.ByteBuffer {674442819}" -> "a = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {1768845376}";
"a = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {1768845376}" -> "oldPos = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {1141897738}";
"oldPos = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {1141897738}" -> "$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {313395807}";
"$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {313395807}" -> "off = $i0 + oldPos {126600973}";
"off = $i0 + oldPos {126600973}" -> "len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadLongLength(byte[],int)>(a, off) {1245061245}";
"len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadLongLength(byte[],int)>(a, off) {1245061245}" -> "val = staticinvoke <com.sleepycat.util.PackedInteger: long readLong(byte[],int)>(a, off) {786076233}";
"val = staticinvoke <com.sleepycat.util.PackedInteger: long readLong(byte[],int)>(a, off) {786076233}" -> "$i1 = oldPos + len {1146855363}";
"$i1 = oldPos + len {1146855363}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1) {901805570}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1) {901805570}" -> "return val {457092784}";
}

digraph readInt {
"logBuf := @parameter0: java.nio.ByteBuffer {770650333}" -> "unpacked := @parameter1: boolean {900829133}";
"unpacked := @parameter1: boolean {900829133}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(unpacked) {492475356}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(unpacked) {492475356}" -> "if unpacked == 0 goto $i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int readPackedInt(java.nio.ByteBuffer)>(logBuf) {1175789316}";
"if unpacked == 0 goto $i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int readPackedInt(java.nio.ByteBuffer)>(logBuf) {1175789316}" -> "$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int readInt(java.nio.ByteBuffer)>(logBuf) {670454092}";
"if unpacked == 0 goto $i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int readPackedInt(java.nio.ByteBuffer)>(logBuf) {1175789316}" -> "$i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int readPackedInt(java.nio.ByteBuffer)>(logBuf) {1320883234}";
"$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int readInt(java.nio.ByteBuffer)>(logBuf) {670454092}" -> "return $i0 {1187125354}";
"$i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int readPackedInt(java.nio.ByteBuffer)>(logBuf) {1320883234}" -> "return $i1 {1532121224}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(unpacked) {492475356}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph readLong {
"logBuf := @parameter0: java.nio.ByteBuffer {1201826199}" -> "$b0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1871338923}";
"$b0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1871338923}" -> "$l1 = (long) $b0 {993034012}";
"$l1 = (long) $b0 {993034012}" -> "$l2 = $l1 & 255L {335943947}";
"$l2 = $l1 & 255L {335943947}" -> "ret#8 = $l2 << 0 {2717012}";
"ret#8 = $l2 << 0 {2717012}" -> "$b3 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1103287447}";
"$b3 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {1103287447}" -> "$l4 = (long) $b3 {176851502}";
"$l4 = (long) $b3 {176851502}" -> "$l5 = $l4 & 255L {1126220024}";
"$l5 = $l4 & 255L {1126220024}" -> "$l6 = $l5 << 8 {643951358}";
"$l6 = $l5 << 8 {643951358}" -> "ret#18 = ret#8 + $l6 {2043431710}";
"ret#18 = ret#8 + $l6 {2043431710}" -> "$b7 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {758431121}";
"$b7 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {758431121}" -> "$l8 = (long) $b7 {918263698}";
"$l8 = (long) $b7 {918263698}" -> "$l9 = $l8 & 255L {1725475321}";
"$l9 = $l8 & 255L {1725475321}" -> "$l10 = $l9 << 16 {73749954}";
"$l10 = $l9 << 16 {73749954}" -> "ret#28 = ret#18 + $l10 {254001353}";
"ret#28 = ret#18 + $l10 {254001353}" -> "$b11 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {414862560}";
"$b11 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {414862560}" -> "$l12 = (long) $b11 {160363190}";
"$l12 = (long) $b11 {160363190}" -> "$l13 = $l12 & 255L {197014961}";
"$l13 = $l12 & 255L {197014961}" -> "$l14 = $l13 << 24 {1070396603}";
"$l14 = $l13 << 24 {1070396603}" -> "ret#38 = ret#28 + $l14 {730704608}";
"ret#38 = ret#28 + $l14 {730704608}" -> "$b15 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {240196289}";
"$b15 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {240196289}" -> "$l16 = (long) $b15 {1213037377}";
"$l16 = (long) $b15 {1213037377}" -> "$l17 = $l16 & 255L {447037296}";
"$l17 = $l16 & 255L {447037296}" -> "$l18 = $l17 << 32 {1066421825}";
"$l18 = $l17 << 32 {1066421825}" -> "ret#48 = ret#38 + $l18 {1162388287}";
"ret#48 = ret#38 + $l18 {1162388287}" -> "$b19 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {492657300}";
"$b19 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {492657300}" -> "$l20 = (long) $b19 {495735643}";
"$l20 = (long) $b19 {495735643}" -> "$l21 = $l20 & 255L {1573867155}";
"$l21 = $l20 & 255L {1573867155}" -> "$l22 = $l21 << 40 {1431879362}";
"$l22 = $l21 << 40 {1431879362}" -> "ret#58 = ret#48 + $l22 {1574841319}";
"ret#58 = ret#48 + $l22 {1574841319}" -> "$b23 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {111522694}";
"$b23 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {111522694}" -> "$l24 = (long) $b23 {705180070}";
"$l24 = (long) $b23 {705180070}" -> "$l25 = $l24 & 255L {1252750441}";
"$l25 = $l24 & 255L {1252750441}" -> "$l26 = $l25 << 48 {173498297}";
"$l26 = $l25 << 48 {173498297}" -> "ret#68 = ret#58 + $l26 {856343823}";
"ret#68 = ret#58 + $l26 {856343823}" -> "$b27 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {288979416}";
"$b27 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {288979416}" -> "$l28 = (long) $b27 {1954477133}";
"$l28 = (long) $b27 {1954477133}" -> "$l29 = $l28 & 255L {359691095}";
"$l29 = $l28 & 255L {359691095}" -> "$l30 = $l29 << 56 {1275229874}";
"$l30 = $l29 << 56 {1275229874}" -> "ret#78 = ret#68 + $l30 {1640387150}";
"ret#78 = ret#68 + $l30 {1640387150}" -> "return ret#78 {413780397}";
}

digraph readPackedInt {
"logBuf := @parameter0: java.nio.ByteBuffer {1712277926}" -> "a = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {1427978550}";
"a = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {1427978550}" -> "oldPos = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {1238171659}";
"oldPos = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {1238171659}" -> "$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {2128718241}";
"$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {2128718241}" -> "off = $i0 + oldPos {1347880485}";
"off = $i0 + oldPos {1347880485}" -> "len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(a, off) {596006029}";
"len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(a, off) {596006029}" -> "val = staticinvoke <com.sleepycat.util.PackedInteger: int readInt(byte[],int)>(a, off) {639667861}";
"val = staticinvoke <com.sleepycat.util.PackedInteger: int readInt(byte[],int)>(a, off) {639667861}" -> "$i1 = oldPos + len {2004460267}";
"$i1 = oldPos + len {2004460267}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1) {160183565}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1) {160183565}" -> "return val {878210862}";
}

digraph readBytesNoLength {
"logBuf := @parameter0: java.nio.ByteBuffer {486254231}" -> "size := @parameter1: int {1915223292}";
"size := @parameter1: int {1915223292}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1268821998}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1268821998}" -> "if size != 0 goto b = newarray (byte)[size] {69051195}";
"if size != 0 goto b = newarray (byte)[size] {69051195}" -> "$r0 = <com.sleepycat.je.log.LogUtils: byte[] ZERO_LENGTH_BYTE_ARRAY> {1234202456}";
"if size != 0 goto b = newarray (byte)[size] {69051195}" -> "b = newarray (byte)[size] {310176908}";
"$r0 = <com.sleepycat.je.log.LogUtils: byte[] ZERO_LENGTH_BYTE_ARRAY> {1234202456}" -> "return $r0 {120132363}";
"b = newarray (byte)[size] {310176908}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(b) {1524036699}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(b) {1524036699}" -> "return b {1261386860}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size) {1268821998}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph writeInt {
"logBuf := @parameter0: java.nio.ByteBuffer {1484480027}" -> "i := @parameter1: int {1093668626}";
"i := @parameter1: int {1093668626}" -> "$i0 = i >> 0 {1089314682}";
"$i0 = i >> 0 {1089314682}" -> "$i1 = $i0 & 255 {437977458}";
"$i1 = $i0 & 255 {437977458}" -> "b#7 = (byte) $i1 {1986768286}";
"b#7 = (byte) $i1 {1986768286}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#7) {1686306490}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#7) {1686306490}" -> "$i2 = i >> 8 {1019090945}";
"$i2 = i >> 8 {1019090945}" -> "$i3 = $i2 & 255 {1292883096}";
"$i3 = $i2 & 255 {1292883096}" -> "b#17 = (byte) $i3 {1292498055}";
"b#17 = (byte) $i3 {1292498055}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#17) {2099249626}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#17) {2099249626}" -> "$i4 = i >> 16 {199647190}";
"$i4 = i >> 16 {199647190}" -> "$i5 = $i4 & 255 {362041114}";
"$i5 = $i4 & 255 {362041114}" -> "b#27 = (byte) $i5 {916158346}";
"b#27 = (byte) $i5 {916158346}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#27) {754522761}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#27) {754522761}" -> "$i6 = i >> 24 {430993738}";
"$i6 = i >> 24 {430993738}" -> "$i7 = $i6 & 255 {410561508}";
"$i7 = $i6 & 255 {410561508}" -> "b#37 = (byte) $i7 {793793553}";
"b#37 = (byte) $i7 {793793553}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#37) {881718074}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#37) {881718074}" -> "return {229910568}";
}

digraph writeUnsignedInt {
"buf := @parameter0: java.nio.ByteBuffer {240158921}" -> "value := @parameter1: long {1474341652}";
"value := @parameter1: long {1474341652}" -> "$l0 = value >>> 0 {978412753}";
"$l0 = value >>> 0 {978412753}" -> "$i1 = (int) $l0 {2147162681}";
"$i1 = (int) $l0 {2147162681}" -> "$b2 = (byte) $i1 {228759593}";
"$b2 = (byte) $i1 {228759593}" -> "virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2) {1415654212}";
"virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2) {1415654212}" -> "$l3 = value >>> 8 {1038276011}";
"$l3 = value >>> 8 {1038276011}" -> "$i4 = (int) $l3 {841475854}";
"$i4 = (int) $l3 {841475854}" -> "$b5 = (byte) $i4 {1902825283}";
"$b5 = (byte) $i4 {1902825283}" -> "virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5) {339378462}";
"virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5) {339378462}" -> "$l6 = value >>> 16 {517695607}";
"$l6 = value >>> 16 {517695607}" -> "$i7 = (int) $l6 {473789332}";
"$i7 = (int) $l6 {473789332}" -> "$b8 = (byte) $i7 {134067790}";
"$b8 = (byte) $i7 {134067790}" -> "virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b8) {1676553838}";
"virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b8) {1676553838}" -> "$l9 = value >>> 24 {728240883}";
"$l9 = value >>> 24 {728240883}" -> "$i10 = (int) $l9 {1966066081}";
"$i10 = (int) $l9 {1966066081}" -> "$b11 = (byte) $i10 {1831434899}";
"$b11 = (byte) $i10 {1831434899}" -> "virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b11) {1796966727}";
"virtualinvoke buf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b11) {1796966727}" -> "return {160665881}";
}

digraph getPackedIntLogSize {
"i := @parameter0: int {54003119}" -> "$i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(i) {1062153722}";
"$i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(i) {1062153722}" -> "return $i0 {2082034369}";
}

digraph getPackedLongLogSize {
"l := @parameter0: long {341724041}" -> "$i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteLongLength(long)>(l) {1025903417}";
"$i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteLongLength(long)>(l) {1025903417}" -> "return $i0 {1539443991}";
}

digraph getLongLogSize {
}

digraph getByteArrayLogSize {
"b := @parameter0: byte[] {562155244}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b) {610678008}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b) {610678008}" -> "if b != null goto len = lengthof b {100775856}";
"if b != null goto len = lengthof b {100775856}" -> "$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(-1) {1163704552}";
"if b != null goto len = lengthof b {100775856}" -> "len = lengthof b {241500728}";
"$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(-1) {1163704552}" -> "return $i0 {1967743774}";
"len = lengthof b {241500728}" -> "$i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(len) {447873347}";
"$i1 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(len) {447873347}" -> "$i2 = $i1 + len {1154590063}";
"$i2 = $i1 + len {1154590063}" -> "return $i2 {1323502767}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b) {610678008}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getBooleanLogSize {
}

digraph writePackedInt {
"logBuf := @parameter0: java.nio.ByteBuffer {679901413}" -> "i := @parameter1: int {645174871}";
"i := @parameter1: int {645174871}" -> "off = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {1843089282}";
"off = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {1843089282}" -> "$r0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {2064085618}";
"$r0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {2064085618}" -> "$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {641358912}";
"$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {641358912}" -> "$i1 = $i0 + off {1453646033}";
"$i1 = $i0 + off {1453646033}" -> "newPos = staticinvoke <com.sleepycat.util.PackedInteger: int writeInt(byte[],int,int)>($r0, $i1, i) {1211330156}";
"newPos = staticinvoke <com.sleepycat.util.PackedInteger: int writeInt(byte[],int,int)>($r0, $i1, i) {1211330156}" -> "$i2 = newPos - off {2027117675}";
"$i2 = newPos - off {2027117675}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2) {1768951703}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2) {1768951703}" -> "return {547307953}";
}

digraph writePackedLong {
"logBuf := @parameter0: java.nio.ByteBuffer {1128582126}" -> "l := @parameter1: long {1410394223}";
"l := @parameter1: long {1410394223}" -> "off = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {275937639}";
"off = virtualinvoke logBuf.<java.nio.ByteBuffer: int arrayOffset()>() {275937639}" -> "$r0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {735596147}";
"$r0 = virtualinvoke logBuf.<java.nio.ByteBuffer: byte[] array()>() {735596147}" -> "$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {2091440995}";
"$i0 = virtualinvoke logBuf.<java.nio.ByteBuffer: int position()>() {2091440995}" -> "$i1 = $i0 + off {1105591213}";
"$i1 = $i0 + off {1105591213}" -> "newPos = staticinvoke <com.sleepycat.util.PackedInteger: int writeLong(byte[],int,long)>($r0, $i1, l) {535825372}";
"newPos = staticinvoke <com.sleepycat.util.PackedInteger: int writeLong(byte[],int,long)>($r0, $i1, l) {535825372}" -> "$i2 = newPos - off {8502693}";
"$i2 = newPos - off {8502693}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2) {189546791}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2) {189546791}" -> "return {64053911}";
}

digraph writeLong {
"logBuf := @parameter0: java.nio.ByteBuffer {869855757}" -> "l := @parameter1: long {1168955030}";
"l := @parameter1: long {1168955030}" -> "$l0 = l >>> 0 {1287819431}";
"$l0 = l >>> 0 {1287819431}" -> "$i1 = (int) $l0 {937665871}";
"$i1 = (int) $l0 {937665871}" -> "b#6 = (byte) $i1 {399393937}";
"b#6 = (byte) $i1 {399393937}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#6) {1039034165}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#6) {1039034165}" -> "$l2 = l >>> 8 {2107540917}";
"$l2 = l >>> 8 {2107540917}" -> "$i3 = (int) $l2 {1486911645}";
"$i3 = (int) $l2 {1486911645}" -> "b#15 = (byte) $i3 {787004317}";
"b#15 = (byte) $i3 {787004317}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#15) {443778274}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#15) {443778274}" -> "$l4 = l >>> 16 {696972120}";
"$l4 = l >>> 16 {696972120}" -> "$i5 = (int) $l4 {1605248605}";
"$i5 = (int) $l4 {1605248605}" -> "b#24 = (byte) $i5 {1070165020}";
"b#24 = (byte) $i5 {1070165020}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#24) {1874045169}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#24) {1874045169}" -> "$l6 = l >>> 24 {1563877211}";
"$l6 = l >>> 24 {1563877211}" -> "$i7 = (int) $l6 {469156828}";
"$i7 = (int) $l6 {469156828}" -> "b#33 = (byte) $i7 {1180332963}";
"b#33 = (byte) $i7 {1180332963}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#33) {1252462284}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#33) {1252462284}" -> "$l8 = l >>> 32 {1205886163}";
"$l8 = l >>> 32 {1205886163}" -> "$i9 = (int) $l8 {1895730151}";
"$i9 = (int) $l8 {1895730151}" -> "b#42 = (byte) $i9 {2011916376}";
"b#42 = (byte) $i9 {2011916376}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#42) {79568738}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#42) {79568738}" -> "$l10 = l >>> 40 {1670427303}";
"$l10 = l >>> 40 {1670427303}" -> "$i11 = (int) $l10 {461458769}";
"$i11 = (int) $l10 {461458769}" -> "b#51 = (byte) $i11 {1507127732}";
"b#51 = (byte) $i11 {1507127732}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#51) {40685443}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#51) {40685443}" -> "$l12 = l >>> 48 {1517718533}";
"$l12 = l >>> 48 {1517718533}" -> "$i13 = (int) $l12 {736067469}";
"$i13 = (int) $l12 {736067469}" -> "b#60 = (byte) $i13 {350143464}";
"b#60 = (byte) $i13 {350143464}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#60) {1894390559}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#60) {1894390559}" -> "$l14 = l >>> 56 {1576206684}";
"$l14 = l >>> 56 {1576206684}" -> "$i15 = (int) $l14 {911481984}";
"$i15 = (int) $l14 {911481984}" -> "b#69 = (byte) $i15 {457950988}";
"b#69 = (byte) $i15 {457950988}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#69) {38382240}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#69) {38382240}" -> "return {747212184}";
}

digraph writeByteArray {
"logBuf := @parameter0: java.nio.ByteBuffer {302786847}" -> "b := @parameter1: byte[] {2102217451}";
"b := @parameter1: byte[] {2102217451}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b) {1968129492}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b) {1968129492}" -> "if b != null goto $i0 = lengthof b {2058961894}";
"if b != null goto $i0 = lengthof b {2058961894}" -> "staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedInt(java.nio.ByteBuffer,int)>(logBuf, -1) {305706442}";
"if b != null goto $i0 = lengthof b {2058961894}" -> "$i0 = lengthof b {1125206950}";
"staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedInt(java.nio.ByteBuffer,int)>(logBuf, -1) {305706442}" -> "return {1566647745}";
"$i0 = lengthof b {1125206950}" -> "staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedInt(java.nio.ByteBuffer,int)>(logBuf, $i0) {394932520}";
"staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedInt(java.nio.ByteBuffer,int)>(logBuf, $i0) {394932520}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(b) {687723660}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(b) {687723660}" -> "return {1587170355}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b) {1968129492}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph writeBoolean {
"logBuf := @parameter0: java.nio.ByteBuffer {1863277615}" -> "bool := @parameter1: boolean {1464915677}";
"bool := @parameter1: boolean {1464915677}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bool) {125853535}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bool) {125853535}" -> "if bool == 0 goto $b0 = 0 {1786188778}";
"if bool == 0 goto $b0 = 0 {1786188778}" -> "$b0 = 1 {994100807}";
"if bool == 0 goto $b0 = 0 {1786188778}" -> "$b0 = 0 {1882656056}";
"$b0 = 1 {994100807}" -> "goto [?= val = $b0] {324911}";
"goto [?= val = $b0] {324911}" -> "val = $b0 {532820079}";
"$b0 = 0 {1882656056}" -> "val = $b0 {532820079}";
"val = $b0 {532820079}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(val) {1405112706}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(val) {1405112706}" -> "return {1306137748}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bool) {125853535}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph readBoolean {
"logBuf := @parameter0: java.nio.ByteBuffer {226965592}" -> "val = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {932834627}";
"val = virtualinvoke logBuf.<java.nio.ByteBuffer: byte get()>() {932834627}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val) {525507779}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val) {525507779}" -> "if val != 1 goto $z0 = 0 {645809174}";
"if val != 1 goto $z0 = 0 {645809174}" -> "$z0 = 1 {2051223307}";
"if val != 1 goto $z0 = 0 {645809174}" -> "$z0 = 0 {1647773813}";
"$z0 = 1 {2051223307}" -> "goto [?= return $z0] {377331053}";
"goto [?= return $z0] {377331053}" -> "return $z0 {910012113}";
"$z0 = 0 {1647773813}" -> "return $z0 {910012113}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val) {525507779}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph writeIntMSB {
"logBuf := @parameter0: java.nio.ByteBuffer {435355514}" -> "i := @parameter1: int {733730572}";
"i := @parameter1: int {733730572}" -> "$i0 = i >> 24 {986227718}";
"$i0 = i >> 24 {986227718}" -> "$i1 = $i0 & 255 {752917947}";
"$i1 = $i0 & 255 {752917947}" -> "b#7 = (byte) $i1 {1366011010}";
"b#7 = (byte) $i1 {1366011010}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#7) {2134737242}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#7) {2134737242}" -> "$i2 = i >> 16 {378738139}";
"$i2 = i >> 16 {378738139}" -> "$i3 = $i2 & 255 {240756260}";
"$i3 = $i2 & 255 {240756260}" -> "b#17 = (byte) $i3 {541923123}";
"b#17 = (byte) $i3 {541923123}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#17) {801853741}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#17) {801853741}" -> "$i4 = i >> 8 {1143276839}";
"$i4 = i >> 8 {1143276839}" -> "$i5 = $i4 & 255 {1933012440}";
"$i5 = $i4 & 255 {1933012440}" -> "b#27 = (byte) $i5 {578402748}";
"b#27 = (byte) $i5 {578402748}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#27) {722361267}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#27) {722361267}" -> "$i6 = i >> 0 {1770072990}";
"$i6 = i >> 0 {1770072990}" -> "$i7 = $i6 & 255 {528818214}";
"$i7 = $i6 & 255 {528818214}" -> "b#37 = (byte) $i7 {673594019}";
"b#37 = (byte) $i7 {673594019}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#37) {833797182}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#37) {833797182}" -> "return {1671093964}";
}

digraph writeTimestamp {
"logBuf := @parameter0: java.nio.ByteBuffer {1376989022}" -> "time := @parameter1: com.sleepycat.je.utilint.Timestamp {1104573050}";
"time := @parameter1: com.sleepycat.je.utilint.Timestamp {1104573050}" -> "$l0 = virtualinvoke time.<com.sleepycat.je.utilint.Timestamp: long getTime()>() {651658767}";
"$l0 = virtualinvoke time.<com.sleepycat.je.utilint.Timestamp: long getTime()>() {651658767}" -> "staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuf, $l0) {161395227}";
"staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuf, $l0) {161395227}" -> "return {132981701}";
}

digraph writeString {
"logBuf := @parameter0: java.nio.ByteBuffer {1943588157}" -> "stringVal := @parameter1: java.lang.String {1924475878}";
"stringVal := @parameter1: java.lang.String {1924475878}" -> "$r0 = staticinvoke <com.sleepycat.utilint.StringUtils: byte[] toUTF8(java.lang.String)>(stringVal) {1268319776}";
"$r0 = staticinvoke <com.sleepycat.utilint.StringUtils: byte[] toUTF8(java.lang.String)>(stringVal) {1268319776}" -> "staticinvoke <com.sleepycat.je.log.LogUtils: void writeByteArray(java.nio.ByteBuffer,byte[])>(logBuf, $r0) {1915466871}";
"staticinvoke <com.sleepycat.je.log.LogUtils: void writeByteArray(java.nio.ByteBuffer,byte[])>(logBuf, $r0) {1915466871}" -> "return {809246359}";
}

digraph getTimestampLogSize {
"time := @parameter0: com.sleepycat.je.utilint.Timestamp {2127675769}" -> "$l0 = virtualinvoke time.<com.sleepycat.je.utilint.Timestamp: long getTime()>() {615552720}";
"$l0 = virtualinvoke time.<com.sleepycat.je.utilint.Timestamp: long getTime()>() {615552720}" -> "$i1 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteLongLength(long)>($l0) {1419395382}";
"$i1 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteLongLength(long)>($l0) {1419395382}" -> "return $i1 {516814823}";
}

digraph getStringLogSize {
"s := @parameter0: java.lang.String {1495919049}" -> "$r0 = staticinvoke <com.sleepycat.utilint.StringUtils: byte[] toUTF8(java.lang.String)>(s) {613580441}";
"$r0 = staticinvoke <com.sleepycat.utilint.StringUtils: byte[] toUTF8(java.lang.String)>(s) {613580441}" -> "$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getByteArrayLogSize(byte[])>($r0) {853781603}";
"$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getByteArrayLogSize(byte[])>($r0) {853781603}" -> "return $i0 {2052489591}";
}

digraph writeBytesNoLength {
"logBuf := @parameter0: java.nio.ByteBuffer {1855744827}" -> "b := @parameter1: byte[] {2077358845}";
"b := @parameter1: byte[] {2077358845}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(b) {893159281}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(b) {893159281}" -> "return {848375530}";
}

digraph writeShort {
"logBuf := @parameter0: java.nio.ByteBuffer {1470370432}" -> "i := @parameter1: short {1428269200}";
"i := @parameter1: short {1428269200}" -> "$s0 = i >> 0 {1500617724}";
"$s0 = i >> 0 {1500617724}" -> "$s1 = $s0 & 255 {1310108483}";
"$s1 = $s0 & 255 {1310108483}" -> "b#7 = (byte) $s1 {780699764}";
"b#7 = (byte) $s1 {780699764}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#7) {915358492}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#7) {915358492}" -> "$s2 = i >> 8 {285026796}";
"$s2 = i >> 8 {285026796}" -> "$s3 = $s2 & 255 {566730107}";
"$s3 = $s2 & 255 {566730107}" -> "b#17 = (byte) $s3 {114684421}";
"b#17 = (byte) $s3 {114684421}" -> "virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#17) {773423743}";
"virtualinvoke logBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b#17) {773423743}" -> "return {715421953}";
}

digraph getIntLogSize {
}


