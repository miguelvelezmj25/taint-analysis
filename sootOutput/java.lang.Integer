    public static java.lang.Integer valueOf(int)
    {
        int l0, $i0, $i1;
        java.lang.Integer $r0, $r2;
        java.lang.Integer[] $r1;

        l0 := @parameter0: int;

        if l0 < -128 goto label1;

        $i0 = <java.lang.Integer$IntegerCache: int high>;

        if l0 > $i0 goto label1;

        $r1 = <java.lang.Integer$IntegerCache: java.lang.Integer[] cache>;

        $i1 = l0 + 128;

        $r2 = $r1[$i1];

        return $r2;

     label1:
        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(l0);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        char[] $r1, $r2, $r3;
        int[] $r4;

        $r0 = staticinvoke <java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>("int");

        <java.lang.Integer: java.lang.Class TYPE> = $r0;

        $r1 = newarray (char)[36];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        $r1[16] = 103;

        $r1[17] = 104;

        $r1[18] = 105;

        $r1[19] = 106;

        $r1[20] = 107;

        $r1[21] = 108;

        $r1[22] = 109;

        $r1[23] = 110;

        $r1[24] = 111;

        $r1[25] = 112;

        $r1[26] = 113;

        $r1[27] = 114;

        $r1[28] = 115;

        $r1[29] = 116;

        $r1[30] = 117;

        $r1[31] = 118;

        $r1[32] = 119;

        $r1[33] = 120;

        $r1[34] = 121;

        $r1[35] = 122;

        <java.lang.Integer: char[] digits> = $r1;

        $r2 = newarray (char)[100];

        $r2[0] = 48;

        $r2[1] = 48;

        $r2[2] = 48;

        $r2[3] = 48;

        $r2[4] = 48;

        $r2[5] = 48;

        $r2[6] = 48;

        $r2[7] = 48;

        $r2[8] = 48;

        $r2[9] = 48;

        $r2[10] = 49;

        $r2[11] = 49;

        $r2[12] = 49;

        $r2[13] = 49;

        $r2[14] = 49;

        $r2[15] = 49;

        $r2[16] = 49;

        $r2[17] = 49;

        $r2[18] = 49;

        $r2[19] = 49;

        $r2[20] = 50;

        $r2[21] = 50;

        $r2[22] = 50;

        $r2[23] = 50;

        $r2[24] = 50;

        $r2[25] = 50;

        $r2[26] = 50;

        $r2[27] = 50;

        $r2[28] = 50;

        $r2[29] = 50;

        $r2[30] = 51;

        $r2[31] = 51;

        $r2[32] = 51;

        $r2[33] = 51;

        $r2[34] = 51;

        $r2[35] = 51;

        $r2[36] = 51;

        $r2[37] = 51;

        $r2[38] = 51;

        $r2[39] = 51;

        $r2[40] = 52;

        $r2[41] = 52;

        $r2[42] = 52;

        $r2[43] = 52;

        $r2[44] = 52;

        $r2[45] = 52;

        $r2[46] = 52;

        $r2[47] = 52;

        $r2[48] = 52;

        $r2[49] = 52;

        $r2[50] = 53;

        $r2[51] = 53;

        $r2[52] = 53;

        $r2[53] = 53;

        $r2[54] = 53;

        $r2[55] = 53;

        $r2[56] = 53;

        $r2[57] = 53;

        $r2[58] = 53;

        $r2[59] = 53;

        $r2[60] = 54;

        $r2[61] = 54;

        $r2[62] = 54;

        $r2[63] = 54;

        $r2[64] = 54;

        $r2[65] = 54;

        $r2[66] = 54;

        $r2[67] = 54;

        $r2[68] = 54;

        $r2[69] = 54;

        $r2[70] = 55;

        $r2[71] = 55;

        $r2[72] = 55;

        $r2[73] = 55;

        $r2[74] = 55;

        $r2[75] = 55;

        $r2[76] = 55;

        $r2[77] = 55;

        $r2[78] = 55;

        $r2[79] = 55;

        $r2[80] = 56;

        $r2[81] = 56;

        $r2[82] = 56;

        $r2[83] = 56;

        $r2[84] = 56;

        $r2[85] = 56;

        $r2[86] = 56;

        $r2[87] = 56;

        $r2[88] = 56;

        $r2[89] = 56;

        $r2[90] = 57;

        $r2[91] = 57;

        $r2[92] = 57;

        $r2[93] = 57;

        $r2[94] = 57;

        $r2[95] = 57;

        $r2[96] = 57;

        $r2[97] = 57;

        $r2[98] = 57;

        $r2[99] = 57;

        <java.lang.Integer: char[] DigitTens> = $r2;

        $r3 = newarray (char)[100];

        $r3[0] = 48;

        $r3[1] = 49;

        $r3[2] = 50;

        $r3[3] = 51;

        $r3[4] = 52;

        $r3[5] = 53;

        $r3[6] = 54;

        $r3[7] = 55;

        $r3[8] = 56;

        $r3[9] = 57;

        $r3[10] = 48;

        $r3[11] = 49;

        $r3[12] = 50;

        $r3[13] = 51;

        $r3[14] = 52;

        $r3[15] = 53;

        $r3[16] = 54;

        $r3[17] = 55;

        $r3[18] = 56;

        $r3[19] = 57;

        $r3[20] = 48;

        $r3[21] = 49;

        $r3[22] = 50;

        $r3[23] = 51;

        $r3[24] = 52;

        $r3[25] = 53;

        $r3[26] = 54;

        $r3[27] = 55;

        $r3[28] = 56;

        $r3[29] = 57;

        $r3[30] = 48;

        $r3[31] = 49;

        $r3[32] = 50;

        $r3[33] = 51;

        $r3[34] = 52;

        $r3[35] = 53;

        $r3[36] = 54;

        $r3[37] = 55;

        $r3[38] = 56;

        $r3[39] = 57;

        $r3[40] = 48;

        $r3[41] = 49;

        $r3[42] = 50;

        $r3[43] = 51;

        $r3[44] = 52;

        $r3[45] = 53;

        $r3[46] = 54;

        $r3[47] = 55;

        $r3[48] = 56;

        $r3[49] = 57;

        $r3[50] = 48;

        $r3[51] = 49;

        $r3[52] = 50;

        $r3[53] = 51;

        $r3[54] = 52;

        $r3[55] = 53;

        $r3[56] = 54;

        $r3[57] = 55;

        $r3[58] = 56;

        $r3[59] = 57;

        $r3[60] = 48;

        $r3[61] = 49;

        $r3[62] = 50;

        $r3[63] = 51;

        $r3[64] = 52;

        $r3[65] = 53;

        $r3[66] = 54;

        $r3[67] = 55;

        $r3[68] = 56;

        $r3[69] = 57;

        $r3[70] = 48;

        $r3[71] = 49;

        $r3[72] = 50;

        $r3[73] = 51;

        $r3[74] = 52;

        $r3[75] = 53;

        $r3[76] = 54;

        $r3[77] = 55;

        $r3[78] = 56;

        $r3[79] = 57;

        $r3[80] = 48;

        $r3[81] = 49;

        $r3[82] = 50;

        $r3[83] = 51;

        $r3[84] = 52;

        $r3[85] = 53;

        $r3[86] = 54;

        $r3[87] = 55;

        $r3[88] = 56;

        $r3[89] = 57;

        $r3[90] = 48;

        $r3[91] = 49;

        $r3[92] = 50;

        $r3[93] = 51;

        $r3[94] = 52;

        $r3[95] = 53;

        $r3[96] = 54;

        $r3[97] = 55;

        $r3[98] = 56;

        $r3[99] = 57;

        <java.lang.Integer: char[] DigitOnes> = $r3;

        $r4 = newarray (int)[10];

        $r4[0] = 9;

        $r4[1] = 99;

        $r4[2] = 999;

        $r4[3] = 9999;

        $r4[4] = 99999;

        $r4[5] = 999999;

        $r4[6] = 9999999;

        $r4[7] = 99999999;

        $r4[8] = 999999999;

        $r4[9] = 2147483647;

        <java.lang.Integer: int[] sizeTable> = $r4;

        return;
    }

    public void <init>(int)
    {
        java.lang.Integer l0;
        int l1;

        l0 := @this: java.lang.Integer;

        l1 := @parameter0: int;

        specialinvoke l0.<java.lang.Number: void <init>()>();

        l0.<java.lang.Integer: int value> = l1;

        return;
    }

    public int intValue()
    {
        java.lang.Integer l0;
        int $i0;

        l0 := @this: java.lang.Integer;

        $i0 = l0.<java.lang.Integer: int value>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Integer l0;
        int $i0;
        java.lang.String $r0;

        l0 := @this: java.lang.Integer;

        $i0 = l0.<java.lang.Integer: int value>;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r0;
    }

    public static java.lang.String toHexString(int)
    {
        int l0;
        java.lang.String $r0;

        l0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4);

        return $r0;
    }

    public static java.lang.String toString(int)
    {
        int l0, l1, $i0, $i1, $i2;
        char[] l2;
        java.lang.String $r0;

        l0 := @parameter0: int;

        if l0 != -2147483648 goto label1;

        return "-2147483648";

     label1:
        if l0 >= 0 goto label2;

        $i0 = neg l0;

        $i1 = staticinvoke <java.lang.Integer: int stringSize(int)>($i0);

        $i2 = $i1 + 1;

        goto label3;

     label2:
        $i2 = staticinvoke <java.lang.Integer: int stringSize(int)>(l0);

     label3:
        l1 = $i2;

        l2 = newarray (char)[l1];

        staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l0, l1, l2);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[],boolean)>(l2, 1);

        return $r0;
    }

    private static java.lang.String toUnsignedString0(int, int)
    {
        int l0, l1, l2, l3, $i0, $i1, $i2, $i3;
        char[] l4;
        java.lang.String $r0;

        l0 := @parameter0: int;

        l1 := @parameter1: int;

        $i0 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0);

        l2 = 32 - $i0;

        $i1 = l1 - 1;

        $i2 = l2 + $i1;

        $i3 = $i2 / l1;

        l3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1);

        l4 = newarray (char)[l3];

        staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[],boolean)>(l4, 1);

        return $r0;
    }

    static void getChars(int, int, char[])
    {
        int l1, $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, l0#1, l5#2, l3#8, l4#9, l5#10, l3#11, l4#12, l5#13;
        char[] l2, $r0, $r1, $r2;
        char $c4, $c10, $c11, l6#3;

        l0#1 := @parameter0: int;

        l1 := @parameter1: int;

        l2 := @parameter2: char[];

        l5#2 = l1;

        l6#3 = 0;

        if l0#1 >= 0 goto label1;

        l6#3 = 45;

        l0#1 = neg l0#1;

     label1:
        if l0#1 < 65536 goto label2;

        l3#8 = l0#1 / 100;

        $i6 = l3#8 << 6;

        $i5 = l3#8 << 5;

        $i8 = $i6 + $i5;

        $i7 = l3#8 << 2;

        $i9 = $i8 + $i7;

        l4#9 = l0#1 - $i9;

        l0#1 = l3#8;

        l5#10 = l5#2 + -1;

        $r1 = <java.lang.Integer: char[] DigitOnes>;

        $c10 = $r1[l4#9];

        l2[l5#10] = $c10;

        l5#2 = l5#10 + -1;

        $r2 = <java.lang.Integer: char[] DigitTens>;

        $c11 = $r2[l4#9];

        l2[l5#2] = $c11;

        goto label1;

     label2:
        $i0 = l0#1 * 52429;

        l3#11 = $i0 >>> 19;

        $i2 = l3#11 << 3;

        $i1 = l3#11 << 1;

        $i3 = $i2 + $i1;

        l4#12 = l0#1 - $i3;

        l5#2 = l5#2 + -1;

        $r0 = <java.lang.Integer: char[] digits>;

        $c4 = $r0[l4#12];

        l2[l5#2] = $c4;

        l0#1 = l3#11;

        if l0#1 != 0 goto label2;

        goto label3;

     label3:
        if l6#3 == 0 goto label4;

        l5#13 = l5#2 + -1;

        l2[l5#13] = l6#3;

     label4:
        return;
    }

    static int stringSize(int)
    {
        int l0, $i0, $i1, l1#1;
        int[] $r0;

        l0 := @parameter0: int;

        l1#1 = 0;

     label1:
        $r0 = <java.lang.Integer: int[] sizeTable>;

        $i0 = $r0[l1#1];

        if l0 > $i0 goto label2;

        $i1 = l1#1 + 1;

        return $i1;

     label2:
        l1#1 = l1#1 + 1;

        goto label1;
    }

    static int formatUnsignedInt(int, int, char[], int, int)
    {
        int l1, l3, l4, l6, l7, $i0, $i2, l0#1, l5#2;
        char[] l2, $r0;
        char $c1;

        l0#1 := @parameter0: int;

        l1 := @parameter1: int;

        l2 := @parameter2: char[];

        l3 := @parameter3: int;

        l4 := @parameter4: int;

        l5#2 = l4;

        l6 = 1 << l1;

        l7 = l6 - 1;

     label1:
        l5#2 = l5#2 + -1;

        $i2 = l3 + l5#2;

        $r0 = <java.lang.Integer: char[] digits>;

        $i0 = l0#1 & l7;

        $c1 = $r0[$i0];

        l2[$i2] = $c1;

        l0#1 = l0#1 >>> l1;

        if l0#1 == 0 goto label2;

        if l5#2 > 0 goto label1;

     label2:
        return l5#2;
    }

    public static int numberOfLeadingZeros(int)
    {
        int $i0, $i1, $i2, $i3, $i4, l0#1, l1#2, l1#3;

        l0#1 := @parameter0: int;

        if l0#1 != 0 goto label1;

        return 32;

     label1:
        l1#2 = 1;

        $i0 = l0#1 >>> 16;

        if $i0 != 0 goto label2;

        l1#2 = l1#2 + 16;

        l0#1 = l0#1 << 16;

     label2:
        $i1 = l0#1 >>> 24;

        if $i1 != 0 goto label3;

        l1#2 = l1#2 + 8;

        l0#1 = l0#1 << 8;

     label3:
        $i2 = l0#1 >>> 28;

        if $i2 != 0 goto label4;

        l1#2 = l1#2 + 4;

        l0#1 = l0#1 << 4;

     label4:
        $i3 = l0#1 >>> 30;

        if $i3 != 0 goto label5;

        l1#2 = l1#2 + 2;

        l0#1 = l0#1 << 2;

     label5:
        $i4 = l0#1 >>> 31;

        l1#3 = l1#2 - $i4;

        return l1#3;
    }

    public int hashCode()
    {
        java.lang.Integer l0;
        int $i0, $i1;

        l0 := @this: java.lang.Integer;

        $i0 = l0.<java.lang.Integer: int value>;

        $i1 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        return $i1;
    }

    public static int hashCode(int)
    {
        int l0;

        l0 := @parameter0: int;

        return l0;
    }


