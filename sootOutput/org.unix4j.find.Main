    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        boolean isTypeDirectory, isTypeFile, isTypeSymlink, isTypeOther, isRegex, isIgnoreCase, isTimeNewer, isTimeOlder, isTimeCreate, isTimeAccess, isTimeModified, isPrint0;
        org.unix4j.find.unix.find.FindArguments findArgs, $r0;
        org.unix4j.find.unix.find.FindCommand find, $r1;
        org.unix4j.find.context.DefaultExecutionContext executionContext, $r2;
        org.unix4j.find.io.StdOutput out, $r3;
        org.unix4j.find.processor.LineProcessor exec;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        isTypeDirectory = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeDirectory(boolean)>(0);

        isTypeFile = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeFile(boolean)>(0);

        isTypeSymlink = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeSymlink(boolean)>(0);

        isTypeOther = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeOther(boolean)>(0);

        isRegex = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsRegex(boolean)>(0);

        isIgnoreCase = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsIgnoreCase(boolean)>(0);

        isTimeNewer = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeNewer(boolean)>(0);

        isTimeOlder = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeOlder(boolean)>(0);

        isTimeCreate = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeCreate(boolean)>(0);

        isTimeAccess = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeAccess(boolean)>(0);

        isTimeModified = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeModified(boolean)>(0);

        isPrint0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsPrint0(boolean)>(0);

        $r0 = new org.unix4j.find.unix.find.FindArguments;

        specialinvoke $r0.<org.unix4j.find.unix.find.FindArguments: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)>(isTypeDirectory, isTypeFile, isTypeSymlink, isTypeOther, isRegex, isIgnoreCase, isTimeNewer, isTimeOlder, isTimeCreate, isTimeAccess, isTimeModified, isPrint0);

        findArgs = $r0;

        virtualinvoke findArgs.<org.unix4j.find.unix.find.FindArguments: void setPath(java.lang.String)>(".");

        $r1 = new org.unix4j.find.unix.find.FindCommand;

        specialinvoke $r1.<org.unix4j.find.unix.find.FindCommand: void <init>(org.unix4j.find.unix.find.FindArguments)>(findArgs);

        find = $r1;

        $r2 = new org.unix4j.find.context.DefaultExecutionContext;

        specialinvoke $r2.<org.unix4j.find.context.DefaultExecutionContext: void <init>()>();

        executionContext = $r2;

        $r3 = new org.unix4j.find.io.StdOutput;

        specialinvoke $r3.<org.unix4j.find.io.StdOutput: void <init>()>();

        out = $r3;

        exec = virtualinvoke find.<org.unix4j.find.unix.find.FindCommand: org.unix4j.find.processor.LineProcessor execute(org.unix4j.find.context.ExecutionContext,org.unix4j.find.processor.LineProcessor)>(executionContext, out);

        interfaceinvoke exec.<org.unix4j.find.processor.LineProcessor: void finish()>();

        return;
    }

    public void <init>()
    {
        org.unix4j.find.Main this;

        this := @this: org.unix4j.find.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


