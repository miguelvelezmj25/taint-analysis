    public void <init>(tool.dconvert.WorkerHandler, java.io.File, java.lang.Object, tool.dconvert.arg.Arguments, tool.dconvert.WorkerHandler$InternalCallback)
    {
        tool.dconvert.WorkerHandler$Worker this;
        tool.dconvert.WorkerHandler l1;
        java.io.File unprocessedFile;
        java.lang.Object processors;
        tool.dconvert.arg.Arguments arguments;
        tool.dconvert.WorkerHandler$InternalCallback callback;

        this := @this: tool.dconvert.WorkerHandler$Worker;

        l1 := @parameter0: tool.dconvert.WorkerHandler;

        unprocessedFile := @parameter1: java.io.File;

        processors := @parameter2: java.lang.Object;

        arguments := @parameter3: tool.dconvert.arg.Arguments;

        callback := @parameter4: tool.dconvert.WorkerHandler$InternalCallback;

        this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.WorkerHandler this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile> = unprocessedFile;

        this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments> = arguments;

        this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor> = processors;

        this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.WorkerHandler$InternalCallback callback> = callback;

        return;
    }

    public void run()
    {
        tool.dconvert.WorkerHandler$Worker this;
        tool.dconvert.converters.AndroidConverter ac, $r9;
        tool.dconvert.converters.IOSConverter ic, $r13;
        tool.dconvert.converters.Result result#2;
        java.lang.Class $r0, $r6;
        java.lang.Object $r1, $r2, $r7, $r8, $r12, $r16, $r20, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        tool.dconvert.converters.postprocessing.IPostProcessor $r3;
        java.io.File $r4, $r10, $r14, $r18, $r22, $r26;
        tool.dconvert.arg.Arguments $r5, $r11, $r15, $r19, $r23, $r27;
        tool.dconvert.converters.WindowsConverter $r17, wc#47;
        tool.dconvert.converters.WebConverter $r21, wc#59;
        tool.dconvert.converters.IPlatformConverter $r25;
        tool.dconvert.WorkerHandler$InternalCallback $r28;

        this := @this: tool.dconvert.WorkerHandler$Worker;

        result#2 = null;

        $r0 = class "tool/dconvert/converters/postprocessing/IPostProcessor";

        $r1 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r2 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $r3 = (tool.dconvert.converters.postprocessing.IPostProcessor) $r2;

        $r4 = this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r5 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments>;

        $z1 = $r5.<tool.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor>;

        result#2 = interfaceinvoke $r3.<tool.dconvert.converters.postprocessing.IPostProcessor: tool.dconvert.converters.Result process(java.io.File,boolean)>($r4, $z1);

        goto label6;

     label1:
        $r6 = class "tool/dconvert/converters/IPlatformConverter";

        $r7 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z2 = virtualinvoke $r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label6;

        $r8 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z3 = $r8 instanceof tool.dconvert.converters.AndroidConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label2;

        $r9 = new tool.dconvert.converters.AndroidConverter;

        specialinvoke $r9.<tool.dconvert.converters.AndroidConverter: void <init>()>();

        ac = $r9;

        $r10 = this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r11 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke ac.<tool.dconvert.converters.AndroidConverter: tool.dconvert.converters.Result convert(java.io.File,tool.dconvert.arg.Arguments)>($r10, $r11);

        goto label6;

     label2:
        $r12 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z4 = $r12 instanceof tool.dconvert.converters.IOSConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label3;

        $r13 = new tool.dconvert.converters.IOSConverter;

        specialinvoke $r13.<tool.dconvert.converters.IOSConverter: void <init>()>();

        ic = $r13;

        $r14 = this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r15 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke ic.<tool.dconvert.converters.IOSConverter: tool.dconvert.converters.Result convert(java.io.File,tool.dconvert.arg.Arguments)>($r14, $r15);

        goto label6;

     label3:
        $r16 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z5 = $r16 instanceof tool.dconvert.converters.WindowsConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label4;

        $r17 = new tool.dconvert.converters.WindowsConverter;

        specialinvoke $r17.<tool.dconvert.converters.WindowsConverter: void <init>()>();

        wc#47 = $r17;

        $r18 = this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r19 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke wc#47.<tool.dconvert.converters.WindowsConverter: tool.dconvert.converters.Result convert(java.io.File,tool.dconvert.arg.Arguments)>($r18, $r19);

        goto label6;

     label4:
        $r20 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z6 = $r20 instanceof tool.dconvert.converters.WebConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label5;

        $r21 = new tool.dconvert.converters.WebConverter;

        specialinvoke $r21.<tool.dconvert.converters.WebConverter: void <init>()>();

        wc#59 = $r21;

        $r22 = this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r23 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke wc#59.<tool.dconvert.converters.WebConverter: tool.dconvert.converters.Result convert(java.io.File,tool.dconvert.arg.Arguments)>($r22, $r23);

        goto label6;

     label5:
        $r24 = this.<tool.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $r25 = (tool.dconvert.converters.IPlatformConverter) $r24;

        $r26 = this.<tool.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r27 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.arg.Arguments arguments>;

        result#2 = interfaceinvoke $r25.<tool.dconvert.converters.IPlatformConverter: tool.dconvert.converters.Result convert(java.io.File,tool.dconvert.arg.Arguments)>($r26, $r27);

     label6:
        $r28 = this.<tool.dconvert.WorkerHandler$Worker: tool.dconvert.WorkerHandler$InternalCallback callback>;

        virtualinvoke $r28.<tool.dconvert.WorkerHandler$InternalCallback: void onJobFinished(tool.dconvert.converters.Result)>(result#2);

        return;
    }


