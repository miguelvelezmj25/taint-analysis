    static void <clinit>()
    {
        java.lang.Class $r0, $r12, $r14;
        boolean $z0, $z1;
        java.io.FileSystem $r1, $r2, $r7;
        char $c0, $c1, $c2, $c3;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;
        sun.misc.Unsafe l0#24;
        java.lang.reflect.Field $r13, $r15;
        long $l4, $l5;
        java.lang.ReflectiveOperationException $r16, l0#37;
        java.lang.Error $r17;

        $r0 = class "java/io/File";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.io.File: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.io.DefaultFileSystem: java.io.FileSystem getFileSystem()>();

        <java.io.File: java.io.FileSystem fs> = $r1;

        $r2 = <java.io.File: java.io.FileSystem fs>;

        $c0 = virtualinvoke $r2.<java.io.FileSystem: char getSeparator()>();

        <java.io.File: char separatorChar> = $c0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = <java.io.File: char separatorChar>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        <java.io.File: java.lang.String separator> = $r6;

        $r7 = <java.io.File: java.io.FileSystem fs>;

        $c2 = virtualinvoke $r7.<java.io.FileSystem: char getPathSeparator()>();

        <java.io.File: char pathSeparatorChar> = $c2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c3 = <java.io.File: char pathSeparatorChar>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        <java.io.File: java.lang.String pathSeparator> = $r11;

     label3:
        l0#24 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>();

        $r12 = class "java/io/File";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("path");

        $l4 = virtualinvoke l0#24.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r13);

        <java.io.File: long PATH_OFFSET> = $l4;

        $r14 = class "java/io/File";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("prefixLength");

        $l5 = virtualinvoke l0#24.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r15);

        <java.io.File: long PREFIX_LENGTH_OFFSET> = $l5;

        <java.io.File: sun.misc.Unsafe UNSAFE> = l0#24;

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        l0#37 = $r16;

        $r17 = new java.lang.Error;

        specialinvoke $r17.<java.lang.Error: void <init>(java.lang.Throwable)>(l0#37);

        throw $r17;

     label6:
        return;

        catch java.lang.ReflectiveOperationException from label3 to label4 with label5;
    }

    public void <init>(java.lang.String)
    {
        java.io.File l0;
        java.lang.String l1, $r2, $r4;
        java.lang.NullPointerException $r0;
        java.io.FileSystem $r1, $r3;
        int $i0;

        l0 := @this: java.io.File;

        l1 := @parameter0: java.lang.String;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.io.File: java.io.File$PathStatus status> = null;

        if l1 != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>()>();

        throw $r0;

     label1:
        $r1 = <java.io.File: java.io.FileSystem fs>;

        $r2 = virtualinvoke $r1.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(l1);

        l0.<java.io.File: java.lang.String path> = $r2;

        $r3 = <java.io.File: java.io.FileSystem fs>;

        $r4 = l0.<java.io.File: java.lang.String path>;

        $i0 = virtualinvoke $r3.<java.io.FileSystem: int prefixLength(java.lang.String)>($r4);

        l0.<java.io.File: int prefixLength> = $i0;

        return;
    }

    public java.lang.String getPath()
    {
        java.io.File l0;
        java.lang.String $r0;

        l0 := @this: java.io.File;

        $r0 = l0.<java.io.File: java.lang.String path>;

        return $r0;
    }

    final boolean isInvalid()
    {
        java.io.File l0;
        java.io.File$PathStatus $r0, $r3, $r4, $r5;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        l0 := @this: java.io.File;

        $r0 = l0.<java.io.File: java.io.File$PathStatus status>;

        if $r0 != null goto label3;

        $r2 = l0.<java.io.File: java.lang.String path>;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(0);

        if $i0 >= 0 goto label1;

        $r3 = <java.io.File$PathStatus: java.io.File$PathStatus CHECKED>;

        goto label2;

     label1:
        $r3 = <java.io.File$PathStatus: java.io.File$PathStatus INVALID>;

     label2:
        l0.<java.io.File: java.io.File$PathStatus status> = $r3;

     label3:
        $r4 = l0.<java.io.File: java.io.File$PathStatus status>;

        $r5 = <java.io.File$PathStatus: java.io.File$PathStatus INVALID>;

        if $r4 != $r5 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public long length()
    {
        java.io.File l0;
        java.lang.SecurityManager l1;
        java.lang.String $r0;
        boolean $z0;
        java.io.FileSystem $r1;
        long $l0;

        l0 := @this: java.io.File;

        l1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if l1 == null goto label1;

        $r0 = l0.<java.io.File: java.lang.String path>;

        virtualinvoke l1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r0);

     label1:
        $z0 = virtualinvoke l0.<java.io.File: boolean isInvalid()>();

        if $z0 == 0 goto label2;

        return 0L;

     label2:
        $r1 = <java.io.File: java.io.FileSystem fs>;

        $l0 = virtualinvoke $r1.<java.io.FileSystem: long getLength(java.io.File)>(l0);

        return $l0;
    }

    public boolean exists()
    {
        java.io.File l0;
        java.lang.SecurityManager l1;
        java.lang.String $r0;
        boolean $z0, $z1;
        java.io.FileSystem $r1;
        int $i0, $i1;

        l0 := @this: java.io.File;

        l1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if l1 == null goto label1;

        $r0 = l0.<java.io.File: java.lang.String path>;

        virtualinvoke l1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r0);

     label1:
        $z0 = virtualinvoke l0.<java.io.File: boolean isInvalid()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r1 = <java.io.File: java.io.FileSystem fs>;

        $i0 = virtualinvoke $r1.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(l0);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean mkdirs()
    {
        java.io.File l0, l1#11, l2#17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.IOException $r0;

        l0 := @this: java.io.File;

        $z0 = virtualinvoke l0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke l0.<java.io.File: boolean mkdir()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        l1#11 = virtualinvoke l0.<java.io.File: java.io.File getCanonicalFile()>();

     label3:
        goto label5;

     label4:
        $r0 := @caughtexception;

        return 0;

     label5:
        l2#17 = virtualinvoke l1#11.<java.io.File: java.io.File getParentFile()>();

        if l2#17 == null goto label7;

        $z2 = virtualinvoke l2#17.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke l2#17.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label7;

     label6:
        $z4 = virtualinvoke l1#11.<java.io.File: boolean mkdir()>();

        if $z4 == 0 goto label7;

        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        return $z5;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public java.lang.String getCanonicalPath() throws java.io.IOException
    {
        java.io.File l0;
        boolean $z0;
        java.io.IOException $r0;
        java.io.FileSystem $r1, $r2;
        java.lang.String $r3, $r4;

        l0 := @this: java.io.File;

        $z0 = virtualinvoke l0.<java.io.File: boolean isInvalid()>();

        if $z0 == 0 goto label1;

        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("Invalid file path");

        throw $r0;

     label1:
        $r1 = <java.io.File: java.io.FileSystem fs>;

        $r2 = <java.io.File: java.io.FileSystem fs>;

        $r3 = virtualinvoke $r2.<java.io.FileSystem: java.lang.String resolve(java.io.File)>(l0);

        $r4 = virtualinvoke $r1.<java.io.FileSystem: java.lang.String canonicalize(java.lang.String)>($r3);

        return $r4;
    }

    public boolean isDirectory()
    {
        java.io.File l0;
        java.lang.SecurityManager l1;
        java.lang.String $r0;
        boolean $z0, $z1;
        java.io.FileSystem $r1;
        int $i0, $i1;

        l0 := @this: java.io.File;

        l1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if l1 == null goto label1;

        $r0 = l0.<java.io.File: java.lang.String path>;

        virtualinvoke l1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r0);

     label1:
        $z0 = virtualinvoke l0.<java.io.File: boolean isInvalid()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r1 = <java.io.File: java.io.FileSystem fs>;

        $i0 = virtualinvoke $r1.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(l0);

        $i1 = $i0 & 4;

        if $i1 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public java.lang.String getName()
    {
        java.io.File l0;
        int l1, $i1, $i2, $i3;
        java.lang.String $r0, $r1, $r2, $r3, $r4;
        char $c0;

        l0 := @this: java.io.File;

        $r0 = l0.<java.io.File: java.lang.String path>;

        $c0 = <java.io.File: char separatorChar>;

        l1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>($c0);

        $i1 = l0.<java.io.File: int prefixLength>;

        if l1 >= $i1 goto label1;

        $r1 = l0.<java.io.File: java.lang.String path>;

        $i2 = l0.<java.io.File: int prefixLength>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r2;

     label1:
        $r3 = l0.<java.io.File: java.lang.String path>;

        $i3 = l1 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i3);

        return $r4;
    }

    int getPrefixLength()
    {
        java.io.File l0;
        int $i0;

        l0 := @this: java.io.File;

        $i0 = l0.<java.io.File: int prefixLength>;

        return $i0;
    }

    public boolean mkdir()
    {
        java.io.File l0;
        java.lang.SecurityManager l1;
        java.lang.String $r0;
        boolean $z0, $z1;
        java.io.FileSystem $r1;

        l0 := @this: java.io.File;

        l1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if l1 == null goto label1;

        $r0 = l0.<java.io.File: java.lang.String path>;

        virtualinvoke l1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r0);

     label1:
        $z0 = virtualinvoke l0.<java.io.File: boolean isInvalid()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r1 = <java.io.File: java.io.FileSystem fs>;

        $z1 = virtualinvoke $r1.<java.io.FileSystem: boolean createDirectory(java.io.File)>(l0);

        return $z1;
    }

    public java.io.File getCanonicalFile() throws java.io.IOException
    {
        java.io.File l0, $r0;
        java.lang.String l1;
        java.io.FileSystem $r1;
        int $i0;

        l0 := @this: java.io.File;

        l1 = virtualinvoke l0.<java.io.File: java.lang.String getCanonicalPath()>();

        $r0 = new java.io.File;

        $r1 = <java.io.File: java.io.FileSystem fs>;

        $i0 = virtualinvoke $r1.<java.io.FileSystem: int prefixLength(java.lang.String)>(l1);

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String,int)>(l1, $i0);

        return $r0;
    }

    public java.io.File getParentFile()
    {
        java.io.File l0, $r0;
        java.lang.String l1;
        int $i0;

        l0 := @this: java.io.File;

        l1 = virtualinvoke l0.<java.io.File: java.lang.String getParent()>();

        if l1 != null goto label1;

        return null;

     label1:
        $r0 = new java.io.File;

        $i0 = l0.<java.io.File: int prefixLength>;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String,int)>(l1, $i0);

        return $r0;
    }

    private void <init>(java.lang.String, int)
    {
        java.io.File l0;
        java.lang.String l1;
        int l2;

        l0 := @this: java.io.File;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.io.File: java.io.File$PathStatus status> = null;

        l0.<java.io.File: java.lang.String path> = l1;

        l0.<java.io.File: int prefixLength> = l2;

        return;
    }

    public java.lang.String getParent()
    {
        java.io.File l0;
        int l1, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5;
        char $c0;

        l0 := @this: java.io.File;

        $r0 = l0.<java.io.File: java.lang.String path>;

        $c0 = <java.io.File: char separatorChar>;

        l1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>($c0);

        $i1 = l0.<java.io.File: int prefixLength>;

        if l1 >= $i1 goto label2;

        $i2 = l0.<java.io.File: int prefixLength>;

        if $i2 <= 0 goto label1;

        $r1 = l0.<java.io.File: java.lang.String path>;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = l0.<java.io.File: int prefixLength>;

        if $i3 <= $i4 goto label1;

        $r2 = l0.<java.io.File: java.lang.String path>;

        $i5 = l0.<java.io.File: int prefixLength>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        return $r3;

     label1:
        return null;

     label2:
        $r4 = l0.<java.io.File: java.lang.String path>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, l1);

        return $r5;
    }


