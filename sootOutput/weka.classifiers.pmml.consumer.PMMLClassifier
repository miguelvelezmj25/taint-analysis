    void <init>(weka.core.Instances, weka.core.pmml.MiningSchema)
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        weka.core.Instances dataDictionary;
        weka.core.pmml.MiningSchema miningSchema;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        dataDictionary := @parameter0: weka.core.Instances;

        miningSchema := @parameter1: weka.core.pmml.MiningSchema;

        specialinvoke this.<weka.classifiers.AbstractClassifier: void <init>()>();

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: java.lang.String m_pmmlVersion> = "?";

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: java.lang.String m_creatorApplication> = "?";

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.gui.Logger m_log> = null;

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: boolean m_initialized> = 0;

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.core.Instances m_dataDictionary> = dataDictionary;

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.core.pmml.MiningSchema m_miningSchema> = miningSchema;

        return;
    }

    public java.lang.String getPMMLVersion()
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        java.lang.String $r0;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        $r0 = this.<weka.classifiers.pmml.consumer.PMMLClassifier: java.lang.String m_pmmlVersion>;

        return $r0;
    }

    public void setPMMLVersion(org.w3c.dom.Document)
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        org.w3c.dom.Document doc;
        org.w3c.dom.NodeList tempL;
        org.w3c.dom.Node pmml;
        java.lang.String version;
        short $s0;
        org.w3c.dom.Element $r0;
        int $i1;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        doc := @parameter0: org.w3c.dom.Document;

        tempL = interfaceinvoke doc.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("PMML");

        pmml = interfaceinvoke tempL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $s0 = interfaceinvoke pmml.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s0);

        if $s0 != 1 goto label1;

        $r0 = (org.w3c.dom.Element) pmml;

        version = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("version");

        $i1 = virtualinvoke version.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label1;

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: java.lang.String m_pmmlVersion> = version;

     label1:
        return;
    }

    public void setCreatorApplication(org.w3c.dom.Document)
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        org.w3c.dom.Document doc;
        org.w3c.dom.NodeList tempL, appL;
        org.w3c.dom.Node header, app;
        java.lang.String version, appName#26;
        short $s0, $s2;
        org.w3c.dom.Element $r0, $r1, $r2;
        int $i1, $i3, $i4;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        doc := @parameter0: org.w3c.dom.Document;

        tempL = interfaceinvoke doc.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("Header");

        header = interfaceinvoke tempL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $s0 = interfaceinvoke header.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s0);

        if $s0 != 1 goto label2;

        $r0 = (org.w3c.dom.Element) header;

        appL = interfaceinvoke $r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("Application");

        $i1 = interfaceinvoke appL.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label2;

        app = interfaceinvoke appL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $s2 = interfaceinvoke app.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2);

        if $s2 != 1 goto label2;

        $r1 = (org.w3c.dom.Element) app;

        appName#26 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(appName#26);

        if appName#26 == null goto label2;

        $i3 = virtualinvoke appName#26.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 0 goto label2;

        $r2 = (org.w3c.dom.Element) app;

        version = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("version");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(version);

        if version == null goto label1;

        $i4 = virtualinvoke version.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(appName#26);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v. ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        appName#26 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        this.<weka.classifiers.pmml.consumer.PMMLClassifier: java.lang.String m_creatorApplication> = appName#26;

     label2:
        return;
    }

    public void setLog(weka.gui.Logger)
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        weka.gui.Logger log;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        log := @parameter0: weka.gui.Logger;

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.gui.Logger m_log> = log;

        return;
    }

    public void mapToMiningSchema(weka.core.Instances) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        weka.core.Instances dataSet;
        weka.core.pmml.MappingInfo $r0, $r1;
        weka.core.pmml.MiningSchema $r2;
        weka.gui.Logger $r3;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        dataSet := @parameter0: weka.core.Instances;

        $r0 = this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.core.pmml.MappingInfo m_fieldsMap>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = new weka.core.pmml.MappingInfo;

        $r2 = this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.core.pmml.MiningSchema m_miningSchema>;

        $r3 = this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.gui.Logger m_log>;

        specialinvoke $r1.<weka.core.pmml.MappingInfo: void <init>(weka.core.Instances,weka.core.pmml.MiningSchema,weka.gui.Logger)>(dataSet, $r2, $r3);

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: weka.core.pmml.MappingInfo m_fieldsMap> = $r1;

        this.<weka.classifiers.pmml.consumer.PMMLClassifier: boolean m_initialized> = 1;

     label1:
        return;
    }

    public void buildClassifier(weka.core.Instances) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        weka.core.Instances data;
        java.lang.Exception $r0;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        data := @parameter0: weka.core.Instances;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>("[PMMLClassifier] PMML models are pre-built and static!");

        throw $r0;
    }

    public java.lang.String getCreatorApplication()
    {
        weka.classifiers.pmml.consumer.PMMLClassifier this;
        java.lang.String $r0;

        this := @this: weka.classifiers.pmml.consumer.PMMLClassifier;

        $r0 = this.<weka.classifiers.pmml.consumer.PMMLClassifier: java.lang.String m_creatorApplication>;

        return $r0;
    }


