    public static java.lang.Double valueOf(double)
    {
        double l0;
        java.lang.Double $r0;

        l0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(l0);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>("double");

        <java.lang.Double: java.lang.Class TYPE> = $r0;

        return;
    }

    public int intValue()
    {
        java.lang.Double l0;
        double $d0;
        int $i0;

        l0 := @this: java.lang.Double;

        $d0 = l0.<java.lang.Double: double value>;

        $i0 = (int) $d0;

        return $i0;
    }

    public void <init>(double)
    {
        java.lang.Double l0;
        double l1;

        l0 := @this: java.lang.Double;

        l1 := @parameter0: double;

        specialinvoke l0.<java.lang.Number: void <init>()>();

        l0.<java.lang.Double: double value> = l1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Double l0;
        double $d0;
        java.lang.String $r0;

        l0 := @this: java.lang.Double;

        $d0 = l0.<java.lang.Double: double value>;

        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r0;
    }

    public static java.lang.String toString(double)
    {
        double l0;
        java.lang.String $r0;

        l0 := @parameter0: double;

        $r0 = staticinvoke <sun.misc.FloatingDecimal: java.lang.String toJavaFormatString(double)>(l0);

        return $r0;
    }

    public int hashCode()
    {
        java.lang.Double l0;
        double $d0;
        int $i0;

        l0 := @this: java.lang.Double;

        $d0 = l0.<java.lang.Double: double value>;

        $i0 = staticinvoke <java.lang.Double: int hashCode(double)>($d0);

        return $i0;
    }

    public static int hashCode(double)
    {
        double l0;
        long l2, $l0, $l1;
        int $i2;

        l0 := @parameter0: double;

        l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(l0);

        $l0 = l2 >>> 32;

        $l1 = l2 ^ $l0;

        $i2 = (int) $l1;

        return $i2;
    }

    public static long doubleToLongBits(double)
    {
        double l0;
        long $l0, $l2, l2#1;
        byte $b1, $b3;

        l0 := @parameter0: double;

        l2#1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(l0);

        $l0 = l2#1 & 9218868437227405312L;

        $b1 = $l0 cmp 9218868437227405312L;

        if $b1 != 0 goto label1;

        $l2 = l2#1 & 4503599627370495L;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        l2#1 = 9221120237041090560L;

     label1:
        return l2#1;
    }


