    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "java/util/Formatter";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(java.util.Formatter, java.util.regex.Matcher)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.util.Formatter l1;
        java.util.regex.Matcher l2;
        java.lang.String l4, $r1, $r2, $r4, $r5, $r9, $r11;
        java.util.Formatter$Flags $r0, $r6, $r7;
        byte l3#11;
        int l3#15, l3#21, l3#27, l3#33, l3#38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        char $c4, $c5, $c6, $c7, $c8, $c9;
        java.util.UnknownFormatConversionException $r10;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.util.Formatter;

        l2 := @parameter1: java.util.regex.Matcher;

        l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0> = l1;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.util.Formatter$FormatSpecifier: int index> = -1;

        $r0 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f> = $r0;

        l0.<java.util.Formatter$FormatSpecifier: boolean dt> = 0;

        $r1 = virtualinvoke l2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>($r1);

        $r2 = virtualinvoke l2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags flags(java.lang.String)>($r2);

        $r4 = virtualinvoke l2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>($r4);

        $r5 = virtualinvoke l2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>($r5);

        l4 = virtualinvoke l2.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        if l4 == null goto label1;

        l0.<java.util.Formatter$FormatSpecifier: boolean dt> = 1;

        $z0 = virtualinvoke l4.<java.lang.String: boolean equals(java.lang.Object)>("T");

        if $z0 == 0 goto label1;

        $r6 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r7 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        staticinvoke <java.util.Formatter$Flags: java.util.Formatter$Flags access$100(java.util.Formatter$Flags,java.util.Formatter$Flags)>($r6, $r7);

     label1:
        $r9 = virtualinvoke l2.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>($r9);

        $z1 = l0.<java.util.Formatter$FormatSpecifier: boolean dt>;

        if $z1 == 0 goto label2;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkDateTime()>();

        goto label8;

     label2:
        $c4 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z2 = staticinvoke <java.util.Formatter$Conversion: boolean isGeneral(char)>($c4);

        if $z2 == 0 goto label3;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkGeneral()>();

        goto label8;

     label3:
        $c5 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z3 = staticinvoke <java.util.Formatter$Conversion: boolean isCharacter(char)>($c5);

        if $z3 == 0 goto label4;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkCharacter()>();

        goto label8;

     label4:
        $c6 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z4 = staticinvoke <java.util.Formatter$Conversion: boolean isInteger(char)>($c6);

        if $z4 == 0 goto label5;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkInteger()>();

        goto label8;

     label5:
        $c7 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z5 = staticinvoke <java.util.Formatter$Conversion: boolean isFloat(char)>($c7);

        if $z5 == 0 goto label6;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkFloat()>();

        goto label8;

     label6:
        $c8 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z6 = staticinvoke <java.util.Formatter$Conversion: boolean isText(char)>($c8);

        if $z6 == 0 goto label7;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkText()>();

        goto label8;

     label7:
        $r10 = new java.util.UnknownFormatConversionException;

        $c9 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c9);

        specialinvoke $r10.<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label8:
        return;
    }

    private int index(java.lang.String)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1, $r0;
        java.lang.NumberFormatException l2, $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.AssertionError $r2;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.String;

        if l1 == null goto label5;

     label1:
        $i0 = virtualinvoke l1.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r0 = virtualinvoke l1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        l0.<java.util.Formatter$FormatSpecifier: int index> = $i2;

     label2:
        goto label6;

     label3:
        $r1 := @caughtexception;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label4:
        goto label6;

     label5:
        l0.<java.util.Formatter$FormatSpecifier: int index> = 0;

     label6:
        $i3 = l0.<java.util.Formatter$FormatSpecifier: int index>;

        return $i3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.util.Formatter$Flags flags(java.lang.String)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1;
        java.util.Formatter$Flags $r0, $r1, $r2, $r3;
        boolean $z0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>(l1);

        l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f> = $r0;

        $r1 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags PREVIOUS>;

        $z0 = virtualinvoke $r1.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r2);

        if $z0 == 0 goto label1;

        l0.<java.util.Formatter$FormatSpecifier: int index> = -1;

     label1:
        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        return $r3;
    }

    private int width(java.lang.String)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1;
        java.lang.NumberFormatException l2, $r1;
        int $i0, $i1, $i2, $i3;
        java.util.IllegalFormatWidthException $r0;
        boolean $z0;
        java.lang.AssertionError $r2;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.String;

        l0.<java.util.Formatter$FormatSpecifier: int width> = -1;

        if l1 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(l1);

        l0.<java.util.Formatter$FormatSpecifier: int width> = $i0;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i1 >= 0 goto label2;

        $r0 = new java.util.IllegalFormatWidthException;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        specialinvoke $r0.<java.util.IllegalFormatWidthException: void <init>(int)>($i2);

        throw $r0;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label4:
        $i3 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        return $i3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private int precision(java.lang.String)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1, $r0;
        java.lang.NumberFormatException l2, $r2;
        int $i0, $i1, $i2, $i3;
        java.util.IllegalFormatPrecisionException $r1;
        boolean $z0;
        java.lang.AssertionError $r3;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.String;

        l0.<java.util.Formatter$FormatSpecifier: int precision> = -1;

        if l1 == null goto label4;

     label1:
        $r0 = virtualinvoke l1.<java.lang.String: java.lang.String substring(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        l0.<java.util.Formatter$FormatSpecifier: int precision> = $i0;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i1 >= 0 goto label2;

        $r1 = new java.util.IllegalFormatPrecisionException;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke $r1.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i2);

        throw $r1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $i3 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        return $i3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private char conversion(java.lang.String)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1, $r1;
        char $c0, $c1, $c2, $c3, $c4, $c5, $c6, $c7;
        boolean $z0, $z1, $z2, $z3;
        java.util.UnknownFormatConversionException $r0;
        java.util.Formatter$Flags $r2, $r3;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0);

        l0.<java.util.Formatter$FormatSpecifier: char c> = $c0;

        $z0 = l0.<java.util.Formatter$FormatSpecifier: boolean dt>;

        if $z0 != 0 goto label3;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z1 = staticinvoke <java.util.Formatter$Conversion: boolean isValid(char)>($c1);

        if $z1 != 0 goto label1;

        $r0 = new java.util.UnknownFormatConversionException;

        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        specialinvoke $r0.<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>($r1);

        throw $r0;

     label1:
        $c3 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z2 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c3);

        if $z2 == 0 goto label2;

        $r2 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r3 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        staticinvoke <java.util.Formatter$Flags: java.util.Formatter$Flags access$100(java.util.Formatter$Flags,java.util.Formatter$Flags)>($r2, $r3);

     label2:
        $c4 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        l0.<java.util.Formatter$FormatSpecifier: char c> = $c5;

        $c6 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z3 = staticinvoke <java.util.Formatter$Conversion: boolean isText(char)>($c6);

        if $z3 == 0 goto label3;

        l0.<java.util.Formatter$FormatSpecifier: int index> = -2;

     label3:
        $c7 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        return $c7;
    }

    private void checkDateTime()
    {
        java.util.Formatter$FormatSpecifier l0;
        int $i0, $i1, $i4;
        java.util.IllegalFormatPrecisionException $r0;
        char $c2, $c3;
        boolean $z0, $z1;
        java.util.UnknownFormatConversionException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5, $r16;
        java.util.Formatter$Flags[] $r6;
        java.util.Formatter$Flags $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.util.MissingFormatWidthException $r15;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i0 == -1 goto label1;

        $r0 = new java.util.IllegalFormatPrecisionException;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke $r0.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i1);

        throw $r0;

     label1:
        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $z0 = staticinvoke <java.util.Formatter$DateTime: boolean isValid(char)>($c2);

        if $z0 != 0 goto label2;

        $r1 = new java.util.UnknownFormatConversionException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t");

        $c3 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        $r6 = newarray (java.util.Formatter$Flags)[6];

        $r7 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $r6[0] = $r7;

        $r8 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $r6[1] = $r8;

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $r6[2] = $r9;

        $r10 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $r6[3] = $r10;

        $r11 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r6[4] = $r11;

        $r12 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $r6[5] = $r12;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r6);

        $i4 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i4 != -1 goto label3;

        $r13 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r14 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $z1 = virtualinvoke $r13.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r14);

        if $z1 == 0 goto label3;

        $r15 = new java.util.MissingFormatWidthException;

        $r16 = virtualinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String toString()>();

        specialinvoke $r15.<java.util.MissingFormatWidthException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label3:
        return;
    }

    private void checkGeneral()
    {
        java.util.Formatter$FormatSpecifier l0;
        char $c0, $c1, $c2;
        java.util.Formatter$Flags $r0, $r1, $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r12;
        boolean $z0, $z1;
        int $i3;
        java.util.MissingFormatWidthException $r5;
        java.lang.String $r6;
        java.util.Formatter$Flags[] $r7;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 == 98 goto label1;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c1 != 104 goto label2;

     label1:
        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z0 = virtualinvoke $r0.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r1);

        if $z0 == 0 goto label2;

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>($r2, $c2);

     label2:
        $i3 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i3 != -1 goto label3;

        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $z1 = virtualinvoke $r3.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r4);

        if $z1 == 0 goto label3;

        $r5 = new java.util.MissingFormatWidthException;

        $r6 = virtualinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String toString()>();

        specialinvoke $r5.<java.util.MissingFormatWidthException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        $r7 = newarray (java.util.Formatter$Flags)[5];

        $r8 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $r7[0] = $r8;

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $r7[1] = $r9;

        $r10 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $r7[2] = $r10;

        $r11 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r7[3] = $r11;

        $r12 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $r7[4] = $r12;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r7);

        return;
    }

    private void checkCharacter()
    {
        java.util.Formatter$FormatSpecifier l0;
        int $i0, $i1, $i2;
        java.util.IllegalFormatPrecisionException $r0;
        java.util.Formatter$Flags[] $r1;
        java.util.Formatter$Flags $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;
        java.util.MissingFormatWidthException $r10;
        java.lang.String $r11;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i0 == -1 goto label1;

        $r0 = new java.util.IllegalFormatPrecisionException;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke $r0.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i1);

        throw $r0;

     label1:
        $r1 = newarray (java.util.Formatter$Flags)[6];

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $r1[0] = $r2;

        $r3 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $r1[1] = $r3;

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $r1[2] = $r4;

        $r5 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $r1[3] = $r5;

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r1[4] = $r6;

        $r7 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $r1[5] = $r7;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r1);

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i2 != -1 goto label2;

        $r8 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $z0 = virtualinvoke $r8.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r9);

        if $z0 == 0 goto label2;

        $r10 = new java.util.MissingFormatWidthException;

        $r11 = virtualinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String toString()>();

        specialinvoke $r10.<java.util.MissingFormatWidthException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        return;
    }

    private void checkInteger()
    {
        java.util.Formatter$FormatSpecifier l0;
        int $i0, $i1;
        java.util.IllegalFormatPrecisionException $r0;
        char $c2, $c3;
        java.util.Formatter$Flags[] $r1, $r3, $r5;
        java.util.Formatter$Flags $r2, $r4, $r6;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkNumeric()>();

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i0 == -1 goto label1;

        $r0 = new java.util.IllegalFormatPrecisionException;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke $r0.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i1);

        throw $r0;

     label1:
        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c2 != 100 goto label2;

        $r1 = newarray (java.util.Formatter$Flags)[1];

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $r1[0] = $r2;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r1);

        goto label4;

     label2:
        $c3 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c3 != 111 goto label3;

        $r3 = newarray (java.util.Formatter$Flags)[1];

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r3[0] = $r4;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r3);

        goto label4;

     label3:
        $r5 = newarray (java.util.Formatter$Flags)[1];

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r5[0] = $r6;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r5);

     label4:
        return;
    }

    private void checkFloat()
    {
        java.util.Formatter$FormatSpecifier l0;
        char $c0, $c1, $c2, $c3;
        java.util.Formatter$Flags[] $r0, $r3, $r5;
        java.util.Formatter$Flags $r1, $r2, $r4, $r6;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkNumeric()>();

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 != 102 goto label1;

        goto label4;

     label1:
        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c1 != 97 goto label2;

        $r0 = newarray (java.util.Formatter$Flags)[2];

        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $r0[0] = $r1;

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r0[1] = $r2;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r0);

        goto label4;

     label2:
        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c2 != 101 goto label3;

        $r3 = newarray (java.util.Formatter$Flags)[1];

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $r3[0] = $r4;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r3);

        goto label4;

     label3:
        $c3 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c3 != 103 goto label4;

        $r5 = newarray (java.util.Formatter$Flags)[1];

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $r5[0] = $r6;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r5);

     label4:
        return;
    }

    private void checkText()
    {
        java.util.Formatter$FormatSpecifier l0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.IllegalFormatPrecisionException $r0;
        char $c2;
        java.util.Formatter$Flags $r1, $r2, $r3, $r4, $r6, $r8, $r9, $r13, $r14, $r16;
        java.util.IllegalFormatFlagsException $r5, $r15;
        java.lang.String $r7, $r11, $r17;
        boolean $z0, $z1;
        java.util.MissingFormatWidthException $r10;
        java.util.IllegalFormatWidthException $r12;
        java.lang.AssertionError $r18;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i0 == -1 goto label1;

        $r0 = new java.util.IllegalFormatPrecisionException;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke $r0.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i1);

        throw $r0;

     label1:
        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        lookupswitch($c2)
        {
            case 37: goto label2;
            case 110: goto label4;
            default: goto label6;
        };

     label2:
        $r1 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i3 = virtualinvoke $r1.<java.util.Formatter$Flags: int valueOf()>();

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $i4 = virtualinvoke $r2.<java.util.Formatter$Flags: int valueOf()>();

        if $i3 == $i4 goto label3;

        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i5 = virtualinvoke $r3.<java.util.Formatter$Flags: int valueOf()>();

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $i6 = virtualinvoke $r4.<java.util.Formatter$Flags: int valueOf()>();

        if $i5 == $i6 goto label3;

        $r5 = new java.util.IllegalFormatFlagsException;

        $r6 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r7 = virtualinvoke $r6.<java.util.Formatter$Flags: java.lang.String toString()>();

        specialinvoke $r5.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label3:
        $i7 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i7 != -1 goto label7;

        $r8 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $z0 = virtualinvoke $r8.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r9);

        if $z0 == 0 goto label7;

        $r10 = new java.util.MissingFormatWidthException;

        $r11 = virtualinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String toString()>();

        specialinvoke $r10.<java.util.MissingFormatWidthException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        $i8 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i8 == -1 goto label5;

        $r12 = new java.util.IllegalFormatWidthException;

        $i9 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        specialinvoke $r12.<java.util.IllegalFormatWidthException: void <init>(int)>($i9);

        throw $r12;

     label5:
        $r13 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i10 = virtualinvoke $r13.<java.util.Formatter$Flags: int valueOf()>();

        $r14 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $i11 = virtualinvoke $r14.<java.util.Formatter$Flags: int valueOf()>();

        if $i10 == $i11 goto label7;

        $r15 = new java.util.IllegalFormatFlagsException;

        $r16 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r17 = virtualinvoke $r16.<java.util.Formatter$Flags: java.lang.String toString()>();

        specialinvoke $r15.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>($r17);

        throw $r15;

     label6:
        $z1 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label7;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label7:
        return;
    }

    public java.lang.String toString()
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.StringBuilder l1, $r0, $r6, $r9;
        java.util.Formatter$Flags l2, $r1, $r2, $r3, $r12, $r13, $r16, $r17;
        java.lang.String $r4, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        char $c6, $c7, $c8;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("%");

        l1 = $r0;

        $r1 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r2 = virtualinvoke $r1.<java.util.Formatter$Flags: java.util.Formatter$Flags dup()>();

        $r3 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        l2 = virtualinvoke $r2.<java.util.Formatter$Flags: java.util.Formatter$Flags remove(java.util.Formatter$Flags)>($r3);

        $r4 = virtualinvoke l2.<java.util.Formatter$Flags: java.lang.String toString()>();

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int index>;

        if $i0 <= 0 goto label1;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int index>;

        $r6 = virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);

     label1:
        $i2 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i2 == -1 goto label2;

        $i3 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label2:
        $i4 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i4 == -1 goto label3;

        $r9 = virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i5 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label3:
        $z0 = l0.<java.util.Formatter$FormatSpecifier: boolean dt>;

        if $z0 == 0 goto label6;

        $r12 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r13 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z1 = virtualinvoke $r12.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r13);

        if $z1 == 0 goto label4;

        $c6 = 84;

        goto label5;

     label4:
        $c6 = 116;

     label5:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

     label6:
        $r16 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r17 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z2 = virtualinvoke $r16.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r17);

        if $z2 == 0 goto label7;

        $c7 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $c8 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c7);

        goto label8;

     label7:
        $c8 = l0.<java.util.Formatter$FormatSpecifier: char c>;

     label8:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r19 = virtualinvoke l1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }

    private void checkNumeric()
    {
        java.util.Formatter$FormatSpecifier l0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.IllegalFormatWidthException $r0;
        java.util.IllegalFormatPrecisionException $r1;
        java.util.Formatter$Flags $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.MissingFormatWidthException $r6;
        java.lang.String $r7, $r18;
        java.util.IllegalFormatFlagsException $r16;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i0 == -1 goto label1;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i1 >= 0 goto label1;

        $r0 = new java.util.IllegalFormatWidthException;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        specialinvoke $r0.<java.util.IllegalFormatWidthException: void <init>(int)>($i2);

        throw $r0;

     label1:
        $i3 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i3 == -1 goto label2;

        $i4 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i4 >= 0 goto label2;

        $r1 = new java.util.IllegalFormatPrecisionException;

        $i5 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke $r1.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i5);

        throw $r1;

     label2:
        $i6 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i6 != -1 goto label4;

        $r2 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r3 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $z0 = virtualinvoke $r2.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r3);

        if $z0 != 0 goto label3;

        $r4 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r5 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z1 = virtualinvoke $r4.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r5);

        if $z1 == 0 goto label4;

     label3:
        $r6 = new java.util.MissingFormatWidthException;

        $r7 = virtualinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String toString()>();

        specialinvoke $r6.<java.util.MissingFormatWidthException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r8 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $z2 = virtualinvoke $r8.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r9);

        if $z2 == 0 goto label5;

        $r10 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r11 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $z3 = virtualinvoke $r10.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r11);

        if $z3 != 0 goto label6;

     label5:
        $r12 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r13 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        $z4 = virtualinvoke $r12.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r13);

        if $z4 == 0 goto label7;

        $r14 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r15 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z5 = virtualinvoke $r14.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r15);

        if $z5 == 0 goto label7;

     label6:
        $r16 = new java.util.IllegalFormatFlagsException;

        $r17 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r18 = virtualinvoke $r17.<java.util.Formatter$Flags: java.lang.String toString()>();

        specialinvoke $r16.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label7:
        return;
    }

    private transient void checkBadFlags(java.util.Formatter$Flags[])
    {
        java.util.Formatter$FormatSpecifier l0;
        java.util.Formatter$Flags[] l1;
        int l2#2, $i0;
        java.util.Formatter$Flags $r0, $r1, $r2;
        boolean $z0;
        char $c1;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.util.Formatter$Flags[];

        l2#2 = 0;

     label1:
        $i0 = lengthof l1;

        if l2#2 >= $i0 goto label3;

        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r1 = l1[l2#2];

        $z0 = virtualinvoke $r0.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r1);

        if $z0 == 0 goto label2;

        $r2 = l1[l2#2];

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>($r2, $c1);

     label2:
        l2#2 = l2#2 + 1;

        goto label1;

     label3:
        return;
    }

    private void failMismatch(java.util.Formatter$Flags, char)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.util.Formatter$Flags l1;
        char l2;
        java.lang.String l3;
        java.util.FormatFlagsConversionMismatchException $r0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.util.Formatter$Flags;

        l2 := @parameter1: char;

        l3 = virtualinvoke l1.<java.util.Formatter$Flags: java.lang.String toString()>();

        $r0 = new java.util.FormatFlagsConversionMismatchException;

        specialinvoke $r0.<java.util.FormatFlagsConversionMismatchException: void <init>(java.lang.String,char)>(l3, l2);

        throw $r0;
    }

    public int index()
    {
        java.util.Formatter$FormatSpecifier l0;
        int $i0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int index>;

        return $i0;
    }

    public void print(java.lang.Object, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        java.util.Locale l2;
        boolean $z0, $z1;
        char $c0;
        java.util.Formatter $r0, $r4;
        java.lang.Appendable $r1, $r5;
        java.lang.String $r2;
        java.lang.AssertionError $r7;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.util.Locale;

        $z0 = l0.<java.util.Formatter$FormatSpecifier: boolean dt>;

        if $z0 == 0 goto label01;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printDateTime(java.lang.Object,java.util.Locale)>(l1, l2);

        return;

     label01:
        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        lookupswitch($c0)
        {
            case 37: goto label09;
            case 67: goto label04;
            case 97: goto label03;
            case 98: goto label05;
            case 99: goto label04;
            case 100: goto label02;
            case 101: goto label03;
            case 102: goto label03;
            case 103: goto label03;
            case 104: goto label07;
            case 110: goto label08;
            case 111: goto label02;
            case 115: goto label06;
            case 120: goto label02;
            default: goto label10;
        };

     label02:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printInteger(java.lang.Object,java.util.Locale)>(l1, l2);

        goto label11;

     label03:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printFloat(java.lang.Object,java.util.Locale)>(l1, l2);

        goto label11;

     label04:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>(l1);

        goto label11;

     label05:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printBoolean(java.lang.Object)>(l1);

        goto label11;

     label06:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>(l1, l2);

        goto label11;

     label07:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>(l1);

        goto label11;

     label08:
        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r1 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r0);

        $r2 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

        goto label11;

     label09:
        $r4 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r5 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r4);

        interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>(37);

        goto label11;

     label10:
        $z1 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label11;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label11:
        return;
    }

    private void printDateTime(java.lang.Object, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1, $r5;
        java.util.Locale l2, $r0, $r2;
        java.util.Calendar l3#5, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Long $r1;
        long $l0;
        java.util.Date $r3;
        java.time.temporal.TemporalAccessor $r6;
        char $c1, $c2, $c3;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.util.Locale;

        if l1 != null goto label01;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>("null");

        return;

     label01:
        l3#5 = null;

        $z0 = l1 instanceof java.lang.Long;

        if $z0 == 0 goto label04;

        if l2 != null goto label02;

        $r0 = <java.util.Locale: java.util.Locale US>;

        goto label03;

     label02:
        $r0 = l2;

     label03:
        l3#5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r0);

        $r1 = (java.lang.Long) l1;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke l3#5.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        goto label10;

     label04:
        $z1 = l1 instanceof java.util.Date;

        if $z1 == 0 goto label07;

        if l2 != null goto label05;

        $r2 = <java.util.Locale: java.util.Locale US>;

        goto label06;

     label05:
        $r2 = l2;

     label06:
        l3#5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r2);

        $r3 = (java.util.Date) l1;

        virtualinvoke l3#5.<java.util.Calendar: void setTime(java.util.Date)>($r3);

        goto label10;

     label07:
        $z2 = l1 instanceof java.util.Calendar;

        if $z2 == 0 goto label08;

        $r4 = (java.util.Calendar) l1;

        $r5 = virtualinvoke $r4.<java.util.Calendar: java.lang.Object clone()>();

        l3#5 = (java.util.Calendar) $r5;

        virtualinvoke l3#5.<java.util.Calendar: void setLenient(boolean)>(1);

        goto label10;

     label08:
        $z3 = l1 instanceof java.time.temporal.TemporalAccessor;

        if $z3 == 0 goto label09;

        $r6 = (java.time.temporal.TemporalAccessor) l1;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.time.temporal.TemporalAccessor,char,java.util.Locale)>($r6, $c1, l2);

        return;

     label09:
        $c2 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failConversion(char,java.lang.Object)>($c2, l1);

     label10:
        $c3 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.util.Calendar,char,java.util.Locale)>(l3#5, $c3, l2);

        return;
    }

    private void printInteger(java.lang.Object, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        java.util.Locale l2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Byte $r0;
        byte $b0;
        java.lang.Short $r1;
        short $s1;
        java.lang.Integer $r2;
        int $i2;
        java.lang.Long $r3;
        long $l3;
        java.math.BigInteger $r4;
        char $c4;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.util.Locale;

        if l1 != null goto label1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>("null");

        goto label7;

     label1:
        $z0 = l1 instanceof java.lang.Byte;

        if $z0 == 0 goto label2;

        $r0 = (java.lang.Byte) l1;

        $b0 = virtualinvoke $r0.<java.lang.Byte: byte byteValue()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(byte,java.util.Locale)>($b0, l2);

        goto label7;

     label2:
        $z1 = l1 instanceof java.lang.Short;

        if $z1 == 0 goto label3;

        $r1 = (java.lang.Short) l1;

        $s1 = virtualinvoke $r1.<java.lang.Short: short shortValue()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(short,java.util.Locale)>($s1, l2);

        goto label7;

     label3:
        $z2 = l1 instanceof java.lang.Integer;

        if $z2 == 0 goto label4;

        $r2 = (java.lang.Integer) l1;

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(int,java.util.Locale)>($i2, l2);

        goto label7;

     label4:
        $z3 = l1 instanceof java.lang.Long;

        if $z3 == 0 goto label5;

        $r3 = (java.lang.Long) l1;

        $l3 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(long,java.util.Locale)>($l3, l2);

        goto label7;

     label5:
        $z4 = l1 instanceof java.math.BigInteger;

        if $z4 == 0 goto label6;

        $r4 = (java.math.BigInteger) l1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.math.BigInteger,java.util.Locale)>($r4, l2);

        goto label7;

     label6:
        $c4 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failConversion(char,java.lang.Object)>($c4, l1);

     label7:
        return;
    }

    private void printFloat(java.lang.Object, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        java.util.Locale l2;
        boolean $z0, $z1, $z2;
        java.lang.Float $r0;
        float $f0;
        java.lang.Double $r1;
        double $d0;
        java.math.BigDecimal $r2;
        char $c0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.util.Locale;

        if l1 != null goto label1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>("null");

        goto label5;

     label1:
        $z0 = l1 instanceof java.lang.Float;

        if $z0 == 0 goto label2;

        $r0 = (java.lang.Float) l1;

        $f0 = virtualinvoke $r0.<java.lang.Float: float floatValue()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(float,java.util.Locale)>($f0, l2);

        goto label5;

     label2:
        $z1 = l1 instanceof java.lang.Double;

        if $z1 == 0 goto label3;

        $r1 = (java.lang.Double) l1;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(double,java.util.Locale)>($d0, l2);

        goto label5;

     label3:
        $z2 = l1 instanceof java.math.BigDecimal;

        if $z2 == 0 goto label4;

        $r2 = (java.math.BigDecimal) l1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.math.BigDecimal,java.util.Locale)>($r2, l2);

        goto label5;

     label4:
        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failConversion(char,java.lang.Object)>($c0, l1);

     label5:
        return;
    }

    private void printCharacter(java.lang.Object) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        java.lang.String l2#5, $r2, $r6, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Character $r0;
        java.lang.Byte $r1;
        byte l3#16;
        char[] $r3, $r7, $r11;
        java.util.IllegalFormatCodePointException $r4, $r8, $r12;
        java.lang.Short $r5;
        short l3#31;
        java.lang.Integer $r9;
        int l3#46;
        char $c0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        if l1 != null goto label01;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>("null");

        return;

     label01:
        l2#5 = null;

        $z0 = l1 instanceof java.lang.Character;

        if $z0 == 0 goto label02;

        $r0 = (java.lang.Character) l1;

        l2#5 = virtualinvoke $r0.<java.lang.Character: java.lang.String toString()>();

        goto label12;

     label02:
        $z1 = l1 instanceof java.lang.Byte;

        if $z1 == 0 goto label05;

        $r1 = (java.lang.Byte) l1;

        l3#16 = virtualinvoke $r1.<java.lang.Byte: byte byteValue()>();

        $z2 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(l3#16);

        if $z2 == 0 goto label03;

        $r2 = new java.lang.String;

        $r3 = staticinvoke <java.lang.Character: char[] toChars(int)>(l3#16);

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        l2#5 = $r2;

        goto label04;

     label03:
        $r4 = new java.util.IllegalFormatCodePointException;

        specialinvoke $r4.<java.util.IllegalFormatCodePointException: void <init>(int)>(l3#16);

        throw $r4;

     label04:
        goto label12;

     label05:
        $z3 = l1 instanceof java.lang.Short;

        if $z3 == 0 goto label08;

        $r5 = (java.lang.Short) l1;

        l3#31 = virtualinvoke $r5.<java.lang.Short: short shortValue()>();

        $z4 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(l3#31);

        if $z4 == 0 goto label06;

        $r6 = new java.lang.String;

        $r7 = staticinvoke <java.lang.Character: char[] toChars(int)>(l3#31);

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        l2#5 = $r6;

        goto label07;

     label06:
        $r8 = new java.util.IllegalFormatCodePointException;

        specialinvoke $r8.<java.util.IllegalFormatCodePointException: void <init>(int)>(l3#31);

        throw $r8;

     label07:
        goto label12;

     label08:
        $z5 = l1 instanceof java.lang.Integer;

        if $z5 == 0 goto label11;

        $r9 = (java.lang.Integer) l1;

        l3#46 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $z6 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(l3#46);

        if $z6 == 0 goto label09;

        $r10 = new java.lang.String;

        $r11 = staticinvoke <java.lang.Character: char[] toChars(int)>(l3#46);

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        l2#5 = $r10;

        goto label10;

     label09:
        $r12 = new java.util.IllegalFormatCodePointException;

        specialinvoke $r12.<java.util.IllegalFormatCodePointException: void <init>(int)>(l3#46);

        throw $r12;

     label10:
        goto label12;

     label11:
        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failConversion(char,java.lang.Object)>($c0, l1);

     label12:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>(l2#5);

        return;
    }

    private void printBoolean(java.lang.Object) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        boolean $z0;
        java.lang.Boolean $r0;
        java.lang.String $r1, l2#8;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        if l1 == null goto label3;

        $z0 = l1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r0 = (java.lang.Boolean) l1;

        $r1 = virtualinvoke $r0.<java.lang.Boolean: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(1);

     label2:
        l2#8 = $r1;

        goto label4;

     label3:
        l2#8 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(0);

     label4:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>(l2#8);

        return;
    }

    private void printString(java.lang.Object, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        java.util.Locale l2, $r0;
        boolean $z0, $z1;
        java.util.Formatter l3#5, $r1;
        java.lang.Appendable $r2;
        java.util.Formattable $r3;
        java.util.Formatter$Flags $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r8;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.util.Locale;

        $z0 = l1 instanceof java.util.Formattable;

        if $z0 == 0 goto label2;

        l3#5 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r0 = virtualinvoke l3#5.<java.util.Formatter: java.util.Locale locale()>();

        if $r0 == l2 goto label1;

        $r1 = new java.util.Formatter;

        $r2 = virtualinvoke l3#5.<java.util.Formatter: java.lang.Appendable out()>();

        specialinvoke $r1.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r2, l2);

        l3#5 = $r1;

     label1:
        $r3 = (java.util.Formattable) l1;

        $r4 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i0 = virtualinvoke $r4.<java.util.Formatter$Flags: int valueOf()>();

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        interfaceinvoke $r3.<java.util.Formattable: void formatTo(java.util.Formatter,int,int,int)>(l3#5, $i0, $i1, $i2);

        goto label5;

     label2:
        $r5 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z1 = virtualinvoke $r5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r6);

        if $z1 == 0 goto label3;

        $r7 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>($r7, 115);

     label3:
        if l1 != null goto label4;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>("null");

        goto label5;

     label4:
        $r8 = virtualinvoke l1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>($r8);

     label5:
        return;
    }

    private void printHashCode(java.lang.Object) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.Object l1;
        java.lang.String l2, $r0;
        int $i0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.Object;

        if l1 != null goto label1;

        $r0 = "null";

        goto label2;

     label1:
        $i0 = virtualinvoke l1.<java.lang.Object: int hashCode()>();

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

     label2:
        l2 = $r0;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>(l2);

        return;
    }

    private void print(java.lang.String) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1#1, $r4;
        int $i0, $i1, $i2, $i3;
        java.util.Formatter$Flags $r0, $r1;
        boolean $z0;
        java.util.Formatter $r2;
        java.lang.Appendable $r3;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1#1 := @parameter0: java.lang.String;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        if $i0 == -1 goto label1;

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        $i2 = virtualinvoke l1#1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label1;

        $i3 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        l1#1 = virtualinvoke l1#1.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label1:
        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z0 = virtualinvoke $r0.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r1);

        if $z0 == 0 goto label2;

        l1#1 = virtualinvoke l1#1.<java.lang.String: java.lang.String toUpperCase()>();

     label2:
        $r2 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r3 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r2);

        $r4 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>(l1#1);

        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

        return;
    }

    private java.lang.String justify(java.lang.String)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.String l1, $r6;
        java.lang.StringBuilder l2, $r0;
        boolean l3;
        int l4, $i0, $i1, $i2, l5#18, l5#29;
        java.util.Formatter$Flags $r1, $r2;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.String;

        $i0 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i0 != -1 goto label1;

        return l1;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l2 = $r0;

        $r1 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEFT_JUSTIFY>;

        l3 = virtualinvoke $r1.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r2);

        $i1 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i2 = virtualinvoke l1.<java.lang.String: int length()>();

        l4 = $i1 - $i2;

        if l3 != 0 goto label3;

        l5#18 = 0;

     label2:
        if l5#18 >= l4 goto label3;

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        l5#18 = l5#18 + 1;

        goto label2;

     label3:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        if l3 == 0 goto label5;

        l5#29 = 0;

     label4:
        if l5#29 >= l4 goto label5;

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        l5#29 = l5#29 + 1;

        goto label4;

     label5:
        $r6 = virtualinvoke l2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void failConversion(char, java.lang.Object)
    {
        java.util.Formatter$FormatSpecifier l0;
        char l1;
        java.lang.Object l2;
        java.util.IllegalFormatConversionException $r0;
        java.lang.Class $r1;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: char;

        l2 := @parameter1: java.lang.Object;

        $r0 = new java.util.IllegalFormatConversionException;

        $r1 = virtualinvoke l2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r0.<java.util.IllegalFormatConversionException: void <init>(char,java.lang.Class)>(l1, $r1);

        throw $r0;
    }

    private void print(float, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        float l1;
        java.util.Locale l2;
        double $d0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: float;

        l2 := @parameter1: java.util.Locale;

        $d0 = (double) l1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(double,java.util.Locale)>($d0, l2);

        return;
    }

    private void print(double, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        double l1, l6;
        java.util.Locale l3;
        java.lang.StringBuilder l4, $r0;
        boolean l5, $z0, $z1, $z2, $z3, $z4;
        int $i0, $i2;
        java.util.Formatter$Flags $r2, $r4, $r5, $r10, $r11;
        char $c1;
        java.lang.String $r6, $r12, $r16, $r17;
        java.util.Formatter $r14;
        java.lang.Appendable $r15;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: double;

        l3 := @parameter1: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l4 = $r0;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>(l1, 0.0);

        if $i0 != -1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        l5 = $z0;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(l1);

        if $z1 != 0 goto label07;

        l6 = staticinvoke <java.lang.Math: double abs(double)>(l1);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder leadingSign(java.lang.StringBuilder,boolean)>(l4, l5);

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(l6);

        if $z2 != 0 goto label03;

        $r2 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>(l4, l6, l3, $r2, $c1, $i2, l5);

        goto label06;

     label03:
        $r4 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r5 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z3 = virtualinvoke $r4.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r5);

        if $z3 == 0 goto label04;

        $r6 = "INFINITY";

        goto label05;

     label04:
        $r6 = "Infinity";

     label05:
        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label06:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder trailingSign(java.lang.StringBuilder,boolean)>(l4, l5);

        goto label10;

     label07:
        $r10 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r11 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z4 = virtualinvoke $r10.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r11);

        if $z4 == 0 goto label08;

        $r12 = "NAN";

        goto label09;

     label08:
        $r12 = "NaN";

     label09:
        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label10:
        $r14 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r15 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r14);

        $r16 = virtualinvoke l4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>($r16);

        interfaceinvoke $r15.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r17);

        return;
    }

    private void print(java.math.BigDecimal, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.math.BigDecimal l1, l5;
        java.util.Locale l2;
        java.lang.StringBuilder l3, $r0;
        boolean l4, $z0;
        char $c0, $c1, $c3;
        int $i2, $i4;
        java.util.Formatter$Flags $r2;
        java.util.Formatter $r4;
        java.lang.Appendable $r5;
        java.lang.String $r6, $r7;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.math.BigDecimal;

        l2 := @parameter1: java.util.Locale;

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 != 97 goto label1;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void failConversion(char,java.lang.Object)>($c1, l1);

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l3 = $r0;

        $i2 = virtualinvoke l1.<java.math.BigDecimal: int signum()>();

        if $i2 != -1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        l4 = $z0;

        l5 = virtualinvoke l1.<java.math.BigDecimal: java.math.BigDecimal abs()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder leadingSign(java.lang.StringBuilder,boolean)>(l3, l4);

        $r2 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $c3 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        $i4 = l0.<java.util.Formatter$FormatSpecifier: int precision>;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>(l3, l5, l2, $r2, $c3, $i4, l4);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder trailingSign(java.lang.StringBuilder,boolean)>(l3, l4);

        $r4 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r5 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r4);

        $r6 = virtualinvoke l3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>($r6);

        interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

        return;
    }

    private java.lang.StringBuilder leadingSign(java.lang.StringBuilder, boolean)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.StringBuilder l1;
        boolean l2, $z0, $z1, $z2;
        java.util.Formatter$Flags $r0, $r1, $r3, $r4, $r6, $r7;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: boolean;

        if l2 != 0 goto label2;

        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $z0 = virtualinvoke $r0.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        goto label4;

     label1:
        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $z1 = virtualinvoke $r3.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r4);

        if $z1 == 0 goto label4;

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label4;

     label2:
        $r6 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r7 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $z2 = virtualinvoke $r6.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r7);

        if $z2 == 0 goto label3;

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        goto label4;

     label3:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label4:
        return l1;
    }

    private void print(java.lang.StringBuilder, java.math.BigDecimal, java.util.Locale, java.util.Formatter$Flags, char, int, boolean) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.StringBuilder l1, $r15;
        java.util.Locale l3;
        java.util.Formatter$Flags l4, l19, $r6, $r9, $r11, $r12, $r24;
        char l5, l20, $c9, $c10;
        int l6, $i0, l8#7, l9#10, l10#13, l11#15, $i1, l12#21, $i2, $i3, l18#70, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, l8#144, l9#147, l10#152, $i16, l10#164, $i17, $i18, $i19, $i20, l12#192, $i21, $i22, $i23, l8#223, $i24, $i25, $i26, $i27, $i28, $i29, $i30, l11#259, $i31, l8#265, $i32;
        boolean l7, $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.math.MathContext l13, $r0, $r20;
        java.math.BigDecimal l14, l2#1, $r1, $r18, l9#232, l10#237, $r27;
        java.util.Formatter$FormatSpecifier$BigDecimalLayout l15, $r3, $r21, l10#181;
        char[] l17, l21, l16#49, l16#65, l11#184, $r25, l11#207;
        java.math.BigInteger $r2, $r4, $r19, $r22, $r28;
        java.util.Formatter$BigDecimalLayoutForm $r5, $r23;
        java.lang.AssertionError $r13, $r30;
        java.math.RoundingMode $r17;
        java.lang.String $r29;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.StringBuilder;

        l2#1 := @parameter1: java.math.BigDecimal;

        l3 := @parameter2: java.util.Locale;

        l4 := @parameter3: java.util.Formatter$Flags;

        l5 := @parameter4: char;

        l6 := @parameter5: int;

        l7 := @parameter6: boolean;

        if l5 != 101 goto label12;

        if l6 != -1 goto label01;

        $i0 = 6;

        goto label02;

     label01:
        $i0 = l6;

     label02:
        l8#7 = $i0;

        l9#10 = virtualinvoke l2#1.<java.math.BigDecimal: int scale()>();

        l10#13 = virtualinvoke l2#1.<java.math.BigDecimal: int precision()>();

        l11#15 = 0;

        $i1 = l10#13 - 1;

        if l8#7 <= $i1 goto label03;

        l12#21 = l10#13;

        $i2 = l10#13 - 1;

        l11#15 = l8#7 - $i2;

        goto label04;

     label03:
        l12#21 = l8#7 + 1;

     label04:
        $r0 = new java.math.MathContext;

        specialinvoke $r0.<java.math.MathContext: void <init>(int)>(l12#21);

        l13 = $r0;

        $r1 = new java.math.BigDecimal;

        $r2 = virtualinvoke l2#1.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger,int,java.math.MathContext)>($r2, l9#10, l13);

        l14 = $r1;

        $r3 = new java.util.Formatter$FormatSpecifier$BigDecimalLayout;

        $r4 = virtualinvoke l14.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $i3 = virtualinvoke l14.<java.math.BigDecimal: int scale()>();

        $r5 = <java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm SCIENTIFIC>;

        specialinvoke $r3.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: void <init>(java.util.Formatter$FormatSpecifier,java.math.BigInteger,int,java.util.Formatter$BigDecimalLayoutForm)>(l0, $r4, $i3, $r5);

        l15 = $r3;

        l16#49 = virtualinvoke l15.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] mantissa()>();

        if l10#13 == 1 goto label05;

        $z0 = virtualinvoke l15.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: boolean hasDot()>();

        if $z0 != 0 goto label07;

     label05:
        if l11#15 > 0 goto label06;

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z1 = virtualinvoke l4.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r6);

        if $z1 == 0 goto label07;

     label06:
        l16#49 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>(l16#49);

     label07:
        l16#65 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] trailingZeros(char[],int)>(l16#49, l11#15);

        l17 = virtualinvoke l15.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] exponent()>();

        l18#70 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i4 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i4 == -1 goto label08;

        $i5 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i6 = lengthof l17;

        $i7 = $i5 - $i6;

        $i8 = $i7 - 1;

        l18#70 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i8, l4, l7);

     label08:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l1, l16#65, l4, l18#70, l3);

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z2 = virtualinvoke l4.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r9);

        if $z2 == 0 goto label09;

        $c9 = 69;

        goto label10;

     label09:
        $c9 = 101;

     label10:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        $r11 = virtualinvoke l4.<java.util.Formatter$Flags: java.util.Formatter$Flags dup()>();

        $r12 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        l19 = virtualinvoke $r11.<java.util.Formatter$Flags: java.util.Formatter$Flags remove(java.util.Formatter$Flags)>($r12);

        l20 = l17[0];

        $z3 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z3 != 0 goto label11;

        if l20 == 43 goto label11;

        if l20 == 45 goto label11;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label11:
        $c10 = l17[0];

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        $i11 = lengthof l17;

        $i12 = $i11 - 1;

        l21 = newarray (char)[$i12];

        $i13 = lengthof l17;

        $i14 = $i13 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l17, 1, l21, 0, $i14);

        $r15 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(null, l21, l19, -1, l3);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r15);

        goto label28;

     label12:
        if l5 != 102 goto label21;

        if l6 != -1 goto label13;

        $i15 = 6;

        goto label14;

     label13:
        $i15 = l6;

     label14:
        l8#144 = $i15;

        l9#147 = virtualinvoke l2#1.<java.math.BigDecimal: int scale()>();

        if l9#147 <= l8#144 goto label16;

        l10#152 = virtualinvoke l2#1.<java.math.BigDecimal: int precision()>();

        if l10#152 > l9#147 goto label15;

        $r17 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;

        l2#1 = virtualinvoke l2#1.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(l8#144, $r17);

        goto label16;

     label15:
        $i16 = l9#147 - l8#144;

        l10#164 = l10#152 - $i16;

        $r18 = new java.math.BigDecimal;

        $r19 = virtualinvoke l2#1.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r20 = new java.math.MathContext;

        specialinvoke $r20.<java.math.MathContext: void <init>(int)>(l10#164);

        specialinvoke $r18.<java.math.BigDecimal: void <init>(java.math.BigInteger,int,java.math.MathContext)>($r19, l9#147, $r20);

        l2#1 = $r18;

     label16:
        $r21 = new java.util.Formatter$FormatSpecifier$BigDecimalLayout;

        $r22 = virtualinvoke l2#1.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $i17 = virtualinvoke l2#1.<java.math.BigDecimal: int scale()>();

        $r23 = <java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm DECIMAL_FLOAT>;

        specialinvoke $r21.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: void <init>(java.util.Formatter$FormatSpecifier,java.math.BigInteger,int,java.util.Formatter$BigDecimalLayoutForm)>(l0, $r22, $i17, $r23);

        l10#181 = $r21;

        l11#184 = virtualinvoke l10#181.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] mantissa()>();

        $i18 = virtualinvoke l10#181.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: int scale()>();

        if $i18 >= l8#144 goto label17;

        $i19 = virtualinvoke l10#181.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: int scale()>();

        $i20 = l8#144 - $i19;

        goto label18;

     label17:
        $i20 = 0;

     label18:
        l12#192 = $i20;

        $i21 = virtualinvoke l10#181.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: int scale()>();

        if $i21 != 0 goto label20;

        $r24 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z4 = virtualinvoke l4.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r24);

        if $z4 != 0 goto label19;

        if l12#192 <= 0 goto label20;

     label19:
        $r25 = virtualinvoke l10#181.<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] mantissa()>();

        l11#184 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>($r25);

     label20:
        l11#207 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] trailingZeros(char[],int)>(l11#184, l12#192);

        $i22 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i23 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i22, l4, l7);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l1, l11#207, l4, $i23, l3);

        goto label28;

     label21:
        if l5 != 103 goto label27;

        l8#223 = l6;

        if l6 != -1 goto label22;

        l8#223 = 6;

        goto label23;

     label22:
        if l6 != 0 goto label23;

        l8#223 = 1;

     label23:
        l9#232 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, 4);

        $i24 = neg l8#223;

        l10#237 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, $i24);

        $r27 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        $z5 = virtualinvoke l2#1.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r27);

        if $z5 != 0 goto label24;

        $i25 = virtualinvoke l2#1.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(l9#232);

        if $i25 == -1 goto label25;

        $i26 = virtualinvoke l2#1.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>(l10#237);

        if $i26 != -1 goto label25;

     label24:
        $i27 = virtualinvoke l2#1.<java.math.BigDecimal: int scale()>();

        $i28 = neg $i27;

        $r28 = virtualinvoke l2#1.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r29 = virtualinvoke $r28.<java.math.BigInteger: java.lang.String toString()>();

        $i29 = virtualinvoke $r29.<java.lang.String: int length()>();

        $i30 = $i29 - 1;

        l11#259 = $i28 + $i30;

        $i31 = l8#223 - l11#259;

        l8#265 = $i31 - 1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>(l1, l2#1, l3, l4, 102, l8#265, l7);

        goto label26;

     label25:
        $i32 = l8#223 - 1;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>(l1, l2#1, l3, l4, 101, $i32, l7);

     label26:
        goto label28;

     label27:
        if l5 != 97 goto label28;

        $z6 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z6 != 0 goto label28;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label28:
        return;
    }

    private java.lang.StringBuilder trailingSign(java.lang.StringBuilder, boolean)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.StringBuilder l1;
        boolean l2, $z0;
        java.util.Formatter$Flags $r0, $r1;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: boolean;

        if l2 == 0 goto label1;

        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $z0 = virtualinvoke $r0.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label1:
        return l1;
    }

    private char[] addDot(char[])
    {
        java.util.Formatter$FormatSpecifier l0;
        char[] l1, l2#2, l2#8;
        int $i0, $i1, $i2, $i3, $i4;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: char[];

        $i0 = lengthof l1;

        $i1 = $i0 + 1;

        l2#8 = newarray (char)[$i1];

        $i2 = lengthof l1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l1, 0, l2#8, 0, $i2);

        $i3 = lengthof l2#8;

        $i4 = $i3 - 1;

        l2#8[$i4] = 46;

        return l2#8;
    }

    private char[] trailingZeros(char[], int)
    {
        java.util.Formatter$FormatSpecifier l0;
        char[] l1, l3#2;
        int l2, $i0, $i1, $i2, l4#16, $i3;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        l3#2 = l1;

        if l2 <= 0 goto label2;

        $i0 = lengthof l1;

        $i1 = $i0 + l2;

        l3#2 = newarray (char)[$i1];

        $i2 = lengthof l1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l1, 0, l3#2, 0, $i2);

        l4#16 = lengthof l1;

     label1:
        $i3 = lengthof l3#2;

        if l4#16 >= $i3 goto label2;

        l3#2[l4#16] = 48;

        l4#16 = l4#16 + 1;

        goto label1;

     label2:
        return l3#2;
    }

    private int adjustWidth(int, java.util.Formatter$Flags, boolean)
    {
        java.util.Formatter$FormatSpecifier l0;
        int l1, l4#2;
        java.util.Formatter$Flags l2, $r0;
        boolean l3, $z0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: int;

        l2 := @parameter1: java.util.Formatter$Flags;

        l3 := @parameter2: boolean;

        l4#2 = l1;

        if l4#2 == -1 goto label1;

        if l3 == 0 goto label1;

        $r0 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $z0 = virtualinvoke l2.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r0);

        if $z0 == 0 goto label1;

        l4#2 = l4#2 + -1;

     label1:
        return l4#2;
    }

    private java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder, char[], java.util.Formatter$Flags, int, java.util.Locale)
    {
        java.util.Formatter$FormatSpecifier l0;
        char[] l2;
        java.util.Formatter$Flags l3, $r2, $r8;
        int l4, l6, l9#13, l11#18, l12#20, l13#22, l13#63, $i1, $i2, $i4, $i5, $i6, l11#100, l13#107, $i7;
        java.util.Locale l5, $r1, $r3;
        char l7, l8#11, l10#15, $c0, l14#75, $c3;
        java.lang.StringBuilder l1#1, $r0;
        boolean $z0, $z1, $z2, $z3;
        java.text.DecimalFormatSymbols l13#39, l13#53;
        java.text.NumberFormat $r4;
        java.text.DecimalFormat l14#59;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1#1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: char[];

        l3 := @parameter2: java.util.Formatter$Flags;

        l4 := @parameter3: int;

        l5 := @parameter4: java.util.Locale;

        if l1#1 != null goto label01;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l1#1 = $r0;

     label01:
        l6 = virtualinvoke l1#1.<java.lang.StringBuilder: int length()>();

        l7 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char getZero(java.util.Locale)>(l5);

        l8#11 = 0;

        l9#13 = -1;

        l10#15 = 0;

        l11#18 = lengthof l2;

        l12#20 = l11#18;

        l13#22 = 0;

     label02:
        if l13#22 >= l11#18 goto label04;

        $c0 = l2[l13#22];

        if $c0 != 46 goto label03;

        l12#20 = l13#22;

        goto label04;

     label03:
        l13#22 = l13#22 + 1;

        goto label02;

     label04:
        if l12#20 >= l11#18 goto label07;

        if l5 == null goto label05;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $z0 = virtualinvoke l5.<java.util.Locale: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label06;

     label05:
        l10#15 = 46;

        goto label07;

     label06:
        l13#39 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>(l5);

        l10#15 = virtualinvoke l13#39.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>();

     label07:
        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        $z1 = virtualinvoke l3.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r2);

        if $z1 == 0 goto label10;

        if l5 == null goto label08;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $z2 = virtualinvoke l5.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label09;

     label08:
        l8#11 = 44;

        l9#13 = 3;

        goto label10;

     label09:
        l13#53 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>(l5);

        l8#11 = virtualinvoke l13#53.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>();

        $r4 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>(l5);

        l14#59 = (java.text.DecimalFormat) $r4;

        l9#13 = virtualinvoke l14#59.<java.text.DecimalFormat: int getGroupingSize()>();

     label10:
        l13#63 = 0;

     label11:
        if l13#63 >= l11#18 goto label14;

        if l13#63 != l12#20 goto label12;

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l10#15);

        l8#11 = 0;

        goto label13;

     label12:
        l14#75 = l2[l13#63];

        $i1 = l14#75 - 48;

        $i2 = $i1 + l7;

        $c3 = (char) $i2;

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        if l8#11 == 0 goto label13;

        $i4 = l12#20 - 1;

        if l13#63 == $i4 goto label13;

        $i5 = l12#20 - l13#63;

        $i6 = $i5 % l9#13;

        if $i6 != 1 goto label13;

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8#11);

     label13:
        l13#63 = l13#63 + 1;

        goto label11;

     label14:
        l11#100 = virtualinvoke l1#1.<java.lang.StringBuilder: int length()>();

        if l4 == -1 goto label16;

        $r8 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z3 = virtualinvoke l3.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r8);

        if $z3 == 0 goto label16;

        l13#107 = 0;

     label15:
        $i7 = l4 - l11#100;

        if l13#107 >= $i7 goto label16;

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(l6, l7);

        l13#107 = l13#107 + 1;

        goto label15;

     label16:
        return l1#1;
    }

    private char getZero(java.util.Locale)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.util.Locale l1, $r1;
        java.text.DecimalFormatSymbols l2;
        java.util.Formatter $r0, $r2;
        boolean $z0;
        char $c0, $c1;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.util.Locale;

        if l1 == null goto label1;

        $r0 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r1 = virtualinvoke $r0.<java.util.Formatter: java.util.Locale locale()>();

        $z0 = virtualinvoke l1.<java.util.Locale: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        l2 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>(l1);

        $c0 = virtualinvoke l2.<java.text.DecimalFormatSymbols: char getZeroDigit()>();

        return $c0;

     label1:
        $r2 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $c1 = staticinvoke <java.util.Formatter: char access$300(java.util.Formatter)>($r2);

        return $c1;
    }

    private void print(java.lang.StringBuilder, double, java.util.Locale, java.util.Formatter$Flags, char, int, boolean) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.StringBuilder l1, $r12, $r29;
        double l2;
        java.util.Locale l4, $r39;
        java.util.Formatter$Flags l5, $r2, $r6, $r8, $r9, l14#75, $r16, $r20, $r23, $r25, $r26, l14#250, $r31, $r35;
        char l6, $c7, l15#79, $c23, l15#254, $c32;
        int l7, $i0, l9#6, l13#43, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, l9#118, l12#139, $i13, $i14, l9#159, l12#177, l9#190, $i16, l13#210, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, l9#291, l13#314, $i28, $i29, $i30, $i31, l13#329, $i33;
        boolean l8, $z0, $z1, $z2, $z3, $z4, $z5, $z6, l12#305, $z7;
        sun.misc.FormattedFloatingDecimal$Form $r0, $r14, $r19;
        sun.misc.FormattedFloatingDecimal l10#11, l10#123, l13#182;
        char[] $r1, l11#17, $r3, l12#40, l16#95, $r15, l11#129, l10#169, $r18, l11#175, l11#200, l16#270, l11#335, $r41;
        byte $b1, $b15;
        java.lang.AssertionError $r10, $r27;
        java.lang.String l10#301, $r33, $r37, $r38, l14#340, l14#344, $r45;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: double;

        l4 := @parameter2: java.util.Locale;

        l5 := @parameter3: java.util.Formatter$Flags;

        l6 := @parameter4: char;

        l7 := @parameter5: int;

        l8 := @parameter6: boolean;

        if l6 != 101 goto label10;

        if l7 != -1 goto label01;

        $i0 = 6;

        goto label02;

     label01:
        $i0 = l7;

     label02:
        l9#6 = $i0;

        $r0 = <sun.misc.FormattedFloatingDecimal$Form: sun.misc.FormattedFloatingDecimal$Form SCIENTIFIC>;

        l10#11 = staticinvoke <sun.misc.FormattedFloatingDecimal: sun.misc.FormattedFloatingDecimal valueOf(double,int,sun.misc.FormattedFloatingDecimal$Form)>(l2, l9#6, $r0);

        $r1 = virtualinvoke l10#11.<sun.misc.FormattedFloatingDecimal: char[] getMantissa()>();

        l11#17 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>($r1, l9#6);

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z0 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r2);

        if $z0 == 0 goto label03;

        if l9#6 != 0 goto label03;

        l11#17 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>(l11#17);

     label03:
        $b1 = l2 cmpl 0.0;

        if $b1 != 0 goto label04;

        $r3 = newarray (char)[3];

        $r3[0] = 43;

        $r3[1] = 48;

        $r3[2] = 48;

        goto label05;

     label04:
        $r3 = virtualinvoke l10#11.<sun.misc.FormattedFloatingDecimal: char[] getExponent()>();

     label05:
        l12#40 = $r3;

        l13#43 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i2 == -1 goto label06;

        $i3 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i4 = lengthof l12#40;

        $i5 = $i3 - $i4;

        $i6 = $i5 - 1;

        l13#43 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i6, l5, l8);

     label06:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l1, l11#17, l5, l13#43, l4);

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z1 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r6);

        if $z1 == 0 goto label07;

        $c7 = 69;

        goto label08;

     label07:
        $c7 = 101;

     label08:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r8 = virtualinvoke l5.<java.util.Formatter$Flags: java.util.Formatter$Flags dup()>();

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        l14#75 = virtualinvoke $r8.<java.util.Formatter$Flags: java.util.Formatter$Flags remove(java.util.Formatter$Flags)>($r9);

        l15#79 = l12#40[0];

        $z2 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        if l15#79 == 43 goto label09;

        if l15#79 == 45 goto label09;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label09:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l15#79);

        $i8 = lengthof l12#40;

        $i9 = $i8 - 1;

        l16#95 = newarray (char)[$i9];

        $i10 = lengthof l12#40;

        $i11 = $i10 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l12#40, 1, l16#95, 0, $i11);

        $r12 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(null, l16#95, l14#75, -1, l4);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r12);

        goto label41;

     label10:
        if l6 != 102 goto label15;

        if l7 != -1 goto label11;

        $i12 = 6;

        goto label12;

     label11:
        $i12 = l7;

     label12:
        l9#118 = $i12;

        $r14 = <sun.misc.FormattedFloatingDecimal$Form: sun.misc.FormattedFloatingDecimal$Form DECIMAL_FLOAT>;

        l10#123 = staticinvoke <sun.misc.FormattedFloatingDecimal: sun.misc.FormattedFloatingDecimal valueOf(double,int,sun.misc.FormattedFloatingDecimal$Form)>(l2, l9#118, $r14);

        $r15 = virtualinvoke l10#123.<sun.misc.FormattedFloatingDecimal: char[] getMantissa()>();

        l11#129 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>($r15, l9#118);

        $r16 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z3 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r16);

        if $z3 == 0 goto label13;

        if l9#118 != 0 goto label13;

        l11#129 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>(l11#129);

     label13:
        l12#139 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i13 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i13 == -1 goto label14;

        $i14 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        l12#139 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i14, l5, l8);

     label14:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l1, l11#129, l5, l12#139, l4);

        goto label41;

     label15:
        if l6 != 103 goto label29;

        l9#159 = l7;

        if l7 != -1 goto label16;

        l9#159 = 6;

        goto label17;

     label16:
        if l7 != 0 goto label17;

        l9#159 = 1;

     label17:
        $b15 = l2 cmpl 0.0;

        if $b15 != 0 goto label18;

        l10#169 = null;

        $r18 = newarray (char)[1];

        $r18[0] = 48;

        l11#175 = $r18;

        l12#177 = 0;

        goto label19;

     label18:
        $r19 = <sun.misc.FormattedFloatingDecimal$Form: sun.misc.FormattedFloatingDecimal$Form GENERAL>;

        l13#182 = staticinvoke <sun.misc.FormattedFloatingDecimal: sun.misc.FormattedFloatingDecimal valueOf(double,int,sun.misc.FormattedFloatingDecimal$Form)>(l2, l9#159, $r19);

        l10#169 = virtualinvoke l13#182.<sun.misc.FormattedFloatingDecimal: char[] getExponent()>();

        l11#175 = virtualinvoke l13#182.<sun.misc.FormattedFloatingDecimal: char[] getMantissa()>();

        l12#177 = virtualinvoke l13#182.<sun.misc.FormattedFloatingDecimal: int getExponentRounded()>();

     label19:
        if l10#169 == null goto label20;

        l9#190 = l9#159 + -1;

        goto label21;

     label20:
        $i16 = l12#177 + 1;

        l9#190 = l9#159 - $i16;

     label21:
        l11#200 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>(l11#175, l9#190);

        $r20 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z4 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r20);

        if $z4 == 0 goto label22;

        if l9#190 != 0 goto label22;

        l11#200 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>(l11#200);

     label22:
        l13#210 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i17 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        if $i17 == -1 goto label24;

        if l10#169 == null goto label23;

        $i18 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i19 = lengthof l10#169;

        $i20 = $i18 - $i19;

        $i21 = $i20 - 1;

        l13#210 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i21, l5, l8);

        goto label24;

     label23:
        $i22 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        l13#210 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i22, l5, l8);

     label24:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l1, l11#200, l5, l13#210, l4);

        if l10#169 == null goto label28;

        $r23 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z5 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r23);

        if $z5 == 0 goto label25;

        $c23 = 69;

        goto label26;

     label25:
        $c23 = 101;

     label26:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c23);

        $r25 = virtualinvoke l5.<java.util.Formatter$Flags: java.util.Formatter$Flags dup()>();

        $r26 = <java.util.Formatter$Flags: java.util.Formatter$Flags GROUP>;

        l14#250 = virtualinvoke $r25.<java.util.Formatter$Flags: java.util.Formatter$Flags remove(java.util.Formatter$Flags)>($r26);

        l15#254 = l10#169[0];

        $z6 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z6 != 0 goto label27;

        if l15#254 == 43 goto label27;

        if l15#254 == 45 goto label27;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label27:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l15#254);

        $i24 = lengthof l10#169;

        $i25 = $i24 - 1;

        l16#270 = newarray (char)[$i25];

        $i26 = lengthof l10#169;

        $i27 = $i26 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l10#169, 1, l16#270, 0, $i27);

        $r29 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(null, l16#270, l14#250, -1, l4);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r29);

     label28:
        goto label41;

     label29:
        if l6 != 97 goto label41;

        l9#291 = l7;

        if l7 != -1 goto label30;

        l9#291 = 0;

        goto label31;

     label30:
        if l7 != 0 goto label31;

        l9#291 = 1;

     label31:
        l10#301 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String hexDouble(double,int)>(l2, l9#291);

        $r31 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        l12#305 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r31);

        if l12#305 == 0 goto label32;

        $r33 = "0X";

        goto label33;

     label32:
        $r33 = "0x";

     label33:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z7 = virtualinvoke l5.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r35);

        if $z7 == 0 goto label35;

        l13#314 = 0;

     label34:
        $i28 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i29 = virtualinvoke l10#301.<java.lang.String: int length()>();

        $i30 = $i28 - $i29;

        $i31 = $i30 - 2;

        if l13#314 >= $i31 goto label35;

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        l13#314 = l13#314 + 1;

        goto label34;

     label35:
        l13#329 = virtualinvoke l10#301.<java.lang.String: int indexOf(int)>(112);

        $r37 = virtualinvoke l10#301.<java.lang.String: java.lang.String substring(int,int)>(0, l13#329);

        l11#335 = virtualinvoke $r37.<java.lang.String: char[] toCharArray()>();

        if l12#305 == 0 goto label36;

        $r38 = new java.lang.String;

        specialinvoke $r38.<java.lang.String: void <init>(char[])>(l11#335);

        l14#340 = $r38;

        $r39 = <java.util.Locale: java.util.Locale US>;

        l14#344 = virtualinvoke l14#340.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r39);

        l11#335 = virtualinvoke l14#344.<java.lang.String: char[] toCharArray()>();

     label36:
        if l9#291 == 0 goto label37;

        $r41 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>(l11#335, l9#291);

        goto label38;

     label37:
        $r41 = l11#335;

     label38:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r41);

        if l12#305 == 0 goto label39;

        $c32 = 80;

        goto label40;

     label39:
        $c32 = 112;

     label40:
        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c32);

        $i33 = l13#329 + 1;

        $r45 = virtualinvoke l10#301.<java.lang.String: java.lang.String substring(int)>($i33);

        virtualinvoke l1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

     label41:
        return;
    }

    private char[] addZeros(char[], int)
    {
        java.util.Formatter$FormatSpecifier l0;
        char[] l1, l6;
        int l2, l5, l3#2, $i0, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, l7#48, $i12, l8#55, $i13;
        char $c1;
        boolean l4#11, $z0;
        byte $b5, $b9;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        l3#2 = 0;

     label01:
        $i0 = lengthof l1;

        if l3#2 >= $i0 goto label03;

        $c1 = l1[l3#2];

        if $c1 != 46 goto label02;

        goto label03;

     label02:
        l3#2 = l3#2 + 1;

        goto label01;

     label03:
        l4#11 = 0;

        $i2 = lengthof l1;

        if l3#2 != $i2 goto label04;

        l4#11 = 1;

     label04:
        $i3 = lengthof l1;

        $i4 = $i3 - l3#2;

        if l4#11 == 0 goto label05;

        $b5 = 0;

        goto label06;

     label05:
        $b5 = 1;

     label06:
        l5 = $i4 - $b5;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        if l5 <= l2 goto label07;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label07:
        if l5 != l2 goto label08;

        return l1;

     label08:
        $i6 = lengthof l1;

        $i7 = $i6 + l2;

        $i8 = $i7 - l5;

        if l4#11 == 0 goto label09;

        $b9 = 1;

        goto label10;

     label09:
        $b9 = 0;

     label10:
        $i10 = $i8 + $b9;

        l6 = newarray (char)[$i10];

        $i11 = lengthof l1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l1, 0, l6, 0, $i11);

        l7#48 = lengthof l1;

        if l4#11 == 0 goto label11;

        $i12 = lengthof l1;

        l6[$i12] = 46;

        l7#48 = l7#48 + 1;

     label11:
        l8#55 = l7#48;

     label12:
        $i13 = lengthof l6;

        if l8#55 >= $i13 goto label13;

        l6[l8#55] = 48;

        l8#55 = l8#55 + 1;

        goto label12;

     label13:
        return l6;
    }

    private java.lang.String hexDouble(double, int)
    {
        java.util.Formatter$FormatSpecifier l0;
        int l3, l6, l7, l22, l24, l4#23, l4#37, $i1, $i7, $i11, $i17, $i18;
        boolean l5, l14, l15, l16, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long l8, l12, l17, $l2, l10#68, $l3, $l4, $l5, $l8, $l9, $l12, $l13, $l14, $l16, l10#122;
        double l19, l1#1, $d0, $d2;
        java.lang.String l21, l23, $r0, $r1, $r5, $r8, $r11, $r13;
        byte $b0, $b6, $b10, $b15;
        java.lang.AssertionError $r2, $r3, $r4, $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r12;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1#1 := @parameter0: double;

        l3 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Double: boolean isFinite(double)>(l1#1);

        if $z0 == 0 goto label01;

        $b0 = l1#1 cmpl 0.0;

        if $b0 == 0 goto label01;

        if l3 == 0 goto label01;

        if l3 < 13 goto label02;

     label01:
        $r0 = staticinvoke <java.lang.Double: java.lang.String toHexString(double)>(l1#1);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(2);

        return $r1;

     label02:
        $z1 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        if l3 < 1 goto label03;

        if l3 <= 12 goto label04;

     label03:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label04:
        l4#23 = staticinvoke <java.lang.Math: int getExponent(double)>(l1#1);

        if l4#23 != -1023 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        l5 = $z2;

        if l5 == 0 goto label08;

        $d0 = staticinvoke <java.lang.Math: double scalb(double,int)>(1.0, 54);

        staticinvoke <java.util.Formatter: double access$202(double)>($d0);

        $d2 = staticinvoke <java.util.Formatter: double access$200()>();

        l1#1 = l1#1 * $d2;

        l4#37 = staticinvoke <java.lang.Math: int getExponent(double)>(l1#1);

        $z3 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z3 != 0 goto label08;

        if l4#37 < -1022 goto label07;

        if l4#37 <= 1023 goto label08;

     label07:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(int)>(l4#37);

        throw $r3;

     label08:
        $i1 = l3 * 4;

        l6 = 1 + $i1;

        l7 = 53 - l6;

        $z4 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z4 != 0 goto label10;

        if l7 < 1 goto label09;

        if l7 < 53 goto label10;

     label09:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label10:
        l8 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(l1#1);

        $l2 = l8 & 9223372036854775807L;

        l10#68 = $l2 >> l7;

        $l3 = -1L << l7;

        $l4 = $l3 ^ -1L;

        l12 = l8 & $l4;

        $l5 = l10#68 & 1L;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        l14 = $z5;

        $i7 = l7 - 1;

        $l8 = 1L << $i7;

        $l9 = $l8 & l12;

        $b10 = $l9 cmp 0L;

        if $b10 == 0 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        l15 = $z6;

        if l7 <= 1 goto label15;

        $i11 = l7 - 1;

        $l12 = 1L << $i11;

        $l13 = $l12 ^ -1L;

        $l14 = $l13 & l12;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label15;

        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        l16 = $z7;

        if l14 == 0 goto label17;

        if l15 == 0 goto label17;

        if l16 != 0 goto label18;

     label17:
        if l14 != 0 goto label19;

        if l15 == 0 goto label19;

     label18:
        l10#68 = l10#68 + 1L;

     label19:
        l17 = l8 & -9223372036854775808L;

        $l16 = l10#68 << l7;

        l10#122 = l17 | $l16;

        l19 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(l10#122);

        $z8 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(l19);

        if $z8 == 0 goto label20;

        return "1.0p1024";

     label20:
        $r5 = staticinvoke <java.lang.Double: java.lang.String toHexString(double)>(l19);

        l21 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(2);

        if l5 != 0 goto label21;

        return l21;

     label21:
        l22 = virtualinvoke l21.<java.lang.String: int indexOf(int)>(112);

        if l22 != -1 goto label23;

        $z9 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z9 != 0 goto label22;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label22:
        return null;

     label23:
        $i17 = l22 + 1;

        l23 = virtualinvoke l21.<java.lang.String: java.lang.String substring(int)>($i17);

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(l23);

        l24 = $i18 - 54;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke l21.<java.lang.String: java.lang.String substring(int,int)>(0, l22);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l24);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    private void print(byte, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        byte l1, $b2;
        java.util.Locale l2;
        long l3#3;
        char $c0, $c1;
        boolean $z0;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: byte;

        l2 := @parameter1: java.util.Locale;

        l3#3 = (long) l1;

        if l1 >= 0 goto label2;

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 == 111 goto label1;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c1 != 120 goto label2;

     label1:
        l3#3 = l3#3 + 256L;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b2 = l3#3 cmp 0L;

        if $b2 >= 0 goto label2;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(long)>(l3#3);

        throw $r0;

     label2:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(long,java.util.Locale)>(l3#3, l2);

        return;
    }

    private void print(short, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        short l1;
        java.util.Locale l2;
        long l3#3;
        char $c0, $c1;
        boolean $z0;
        byte $b2;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: short;

        l2 := @parameter1: java.util.Locale;

        l3#3 = (long) l1;

        if l1 >= 0 goto label2;

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 == 111 goto label1;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c1 != 120 goto label2;

     label1:
        l3#3 = l3#3 + 65536L;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b2 = l3#3 cmp 0L;

        if $b2 >= 0 goto label2;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(long)>(l3#3);

        throw $r0;

     label2:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(long,java.util.Locale)>(l3#3, l2);

        return;
    }

    private void print(int, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        int l1;
        java.util.Locale l2;
        long l3#3;
        char $c0, $c1;
        boolean $z0;
        byte $b2;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: int;

        l2 := @parameter1: java.util.Locale;

        l3#3 = (long) l1;

        if l1 >= 0 goto label2;

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 == 111 goto label1;

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c1 != 120 goto label2;

     label1:
        l3#3 = l3#3 + 4294967296L;

        $z0 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b2 = l3#3 cmp 0L;

        if $b2 >= 0 goto label2;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(long)>(l3#3);

        throw $r0;

     label2:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void print(long,java.util.Locale)>(l3#3, l2);

        return;
    }

    private void print(long, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        long l1;
        java.util.Locale l3;
        java.lang.StringBuilder l4, $r0;
        char $c0, $c5, $c10;
        byte $b1, $b2;
        boolean $z0, l5#10, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String $r1, $r2, $r3, l5#63, l5#115, $r33, $r43, $r44;
        char[] l6#20;
        java.util.Formatter$Flags $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r35, $r36, $r38, $r39;
        int $i3, $i4, $i6, $i7, l6#73, l7#86, $i8, $i9, $i11, $i12, l6#125, l7#142, $i13, $i14;
        java.util.Formatter$Flags[] $r9, $r22;
        java.util.Formatter $r41;
        java.lang.Appendable $r42;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: long;

        l3 := @parameter1: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l4 = $r0;

        $c0 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c0 != 100 goto label05;

        $b1 = l1 cmp 0L;

        if $b1 >= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        l5#10 = $z0;

        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label03;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l1, 10);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        l6#20 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        goto label04;

     label03:
        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l1, 10);

        l6#20 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

     label04:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder leadingSign(java.lang.StringBuilder,boolean)>(l4, l5#10);

        $r5 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i3 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $r6 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i4 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i3, $r6, l5#10);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l4, l6#20, $r5, $i4, l3);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder trailingSign(java.lang.StringBuilder,boolean)>(l4, l5#10);

        goto label20;

     label05:
        $c5 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c5 != 111 goto label11;

        $r9 = newarray (java.util.Formatter$Flags)[3];

        $r10 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $r9[0] = $r10;

        $r11 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $r9[1] = $r11;

        $r12 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $r9[2] = $r12;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r9);

        l5#63 = staticinvoke <java.lang.Long: java.lang.String toOctalString(long)>(l1);

        $r13 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r14 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z1 = virtualinvoke $r13.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r14);

        if $z1 == 0 goto label06;

        $i6 = virtualinvoke l5#63.<java.lang.String: int length()>();

        $i7 = $i6 + 1;

        goto label07;

     label06:
        $i7 = virtualinvoke l5#63.<java.lang.String: int length()>();

     label07:
        l6#73 = $i7;

        $r15 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r16 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z2 = virtualinvoke $r15.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r16);

        if $z2 == 0 goto label08;

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label08:
        $r18 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r19 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z3 = virtualinvoke $r18.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r19);

        if $z3 == 0 goto label10;

        l7#86 = 0;

     label09:
        $i8 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i9 = $i8 - l6#73;

        if l7#86 >= $i9 goto label10;

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        l7#86 = l7#86 + 1;

        goto label09;

     label10:
        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l5#63);

        goto label20;

     label11:
        $c10 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c10 != 120 goto label20;

        $r22 = newarray (java.util.Formatter$Flags)[3];

        $r23 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $r22[0] = $r23;

        $r24 = <java.util.Formatter$Flags: java.util.Formatter$Flags LEADING_SPACE>;

        $r22[1] = $r24;

        $r25 = <java.util.Formatter$Flags: java.util.Formatter$Flags PLUS>;

        $r22[2] = $r25;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>($r22);

        l5#115 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        $r26 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r27 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z4 = virtualinvoke $r26.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r27);

        if $z4 == 0 goto label12;

        $i11 = virtualinvoke l5#115.<java.lang.String: int length()>();

        $i12 = $i11 + 2;

        goto label13;

     label12:
        $i12 = virtualinvoke l5#115.<java.lang.String: int length()>();

     label13:
        l6#125 = $i12;

        $r28 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r29 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z5 = virtualinvoke $r28.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r29);

        if $z5 == 0 goto label16;

        $r31 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r32 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z6 = virtualinvoke $r31.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r32);

        if $z6 == 0 goto label14;

        $r33 = "0X";

        goto label15;

     label14:
        $r33 = "0x";

     label15:
        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

     label16:
        $r35 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r36 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z7 = virtualinvoke $r35.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r36);

        if $z7 == 0 goto label18;

        l7#142 = 0;

     label17:
        $i13 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i14 = $i13 - l6#125;

        if l7#142 >= $i14 goto label18;

        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        l7#142 = l7#142 + 1;

        goto label17;

     label18:
        $r38 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r39 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z8 = virtualinvoke $r38.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r39);

        if $z8 == 0 goto label19;

        l5#115 = virtualinvoke l5#115.<java.lang.String: java.lang.String toUpperCase()>();

     label19:
        virtualinvoke l4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l5#115);

     label20:
        $r41 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r42 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r41);

        $r43 = virtualinvoke l4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>($r43);

        interfaceinvoke $r42.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r44);

        return;
    }

    private void print(java.math.BigInteger, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.math.BigInteger l1, l5;
        java.util.Locale l2;
        java.lang.StringBuilder l3, $r0;
        boolean l4, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i0, $i2, $i3, $i5, $i6, l7#45, l8#63, $i7, $i8, $i10, $i11, l7#87, l8#109, $i12, $i13, $i14;
        char $c1, $c4, $c9;
        java.lang.String $r2, l6#39, l6#81, $r22, $r35, $r36;
        char[] l6#19;
        java.util.Formatter$Flags $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r15, $r16, $r17, $r18, $r20, $r21, $r24, $r25, $r27, $r28;
        java.util.Formatter $r33;
        java.lang.Appendable $r34;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.math.BigInteger;

        l2 := @parameter1: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l3 = $r0;

        $i0 = virtualinvoke l1.<java.math.BigInteger: int signum()>();

        if $i0 != -1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        l4 = $z0;

        l5 = virtualinvoke l1.<java.math.BigInteger: java.math.BigInteger abs()>();

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder leadingSign(java.lang.StringBuilder,boolean)>(l3, l4);

        $c1 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c1 != 100 goto label03;

        $r2 = virtualinvoke l5.<java.math.BigInteger: java.lang.String toString()>();

        l6#19 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i2 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $r4 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $i3 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>($i2, $r4, l4);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(l3, l6#19, $r3, $i3, l2);

        goto label16;

     label03:
        $c4 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c4 != 111 goto label08;

        l6#39 = virtualinvoke l5.<java.math.BigInteger: java.lang.String toString(int)>(8);

        $i5 = virtualinvoke l6#39.<java.lang.String: int length()>();

        $i6 = virtualinvoke l3.<java.lang.StringBuilder: int length()>();

        l7#45 = $i5 + $i6;

        if l4 == 0 goto label04;

        $r6 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r7 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $z1 = virtualinvoke $r6.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r7);

        if $z1 == 0 goto label04;

        l7#45 = l7#45 + 1;

     label04:
        $r8 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r9 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z2 = virtualinvoke $r8.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r9);

        if $z2 == 0 goto label05;

        l7#45 = l7#45 + 1;

        virtualinvoke l3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label05:
        $r11 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r12 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z3 = virtualinvoke $r11.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r12);

        if $z3 == 0 goto label07;

        l8#63 = 0;

     label06:
        $i7 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i8 = $i7 - l7#45;

        if l8#63 >= $i8 goto label07;

        virtualinvoke l3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        l8#63 = l8#63 + 1;

        goto label06;

     label07:
        virtualinvoke l3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l6#39);

        goto label16;

     label08:
        $c9 = l0.<java.util.Formatter$FormatSpecifier: char c>;

        if $c9 != 120 goto label16;

        l6#81 = virtualinvoke l5.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $i10 = virtualinvoke l6#81.<java.lang.String: int length()>();

        $i11 = virtualinvoke l3.<java.lang.StringBuilder: int length()>();

        l7#87 = $i10 + $i11;

        if l4 == 0 goto label09;

        $r15 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r16 = <java.util.Formatter$Flags: java.util.Formatter$Flags PARENTHESES>;

        $z4 = virtualinvoke $r15.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r16);

        if $z4 == 0 goto label09;

        l7#87 = l7#87 + 1;

     label09:
        $r17 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r18 = <java.util.Formatter$Flags: java.util.Formatter$Flags ALTERNATE>;

        $z5 = virtualinvoke $r17.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r18);

        if $z5 == 0 goto label12;

        l7#87 = l7#87 + 2;

        $r20 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r21 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z6 = virtualinvoke $r20.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r21);

        if $z6 == 0 goto label10;

        $r22 = "0X";

        goto label11;

     label10:
        $r22 = "0x";

     label11:
        virtualinvoke l3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label12:
        $r24 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r25 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $z7 = virtualinvoke $r24.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r25);

        if $z7 == 0 goto label14;

        l8#109 = 0;

     label13:
        $i12 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $i13 = $i12 - l7#87;

        if l8#109 >= $i13 goto label14;

        virtualinvoke l3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        l8#109 = l8#109 + 1;

        goto label13;

     label14:
        $r27 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r28 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z8 = virtualinvoke $r27.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r28);

        if $z8 == 0 goto label15;

        l6#81 = virtualinvoke l6#81.<java.lang.String: java.lang.String toUpperCase()>();

     label15:
        virtualinvoke l3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l6#81);

     label16:
        $i14 = virtualinvoke l1.<java.math.BigInteger: int signum()>();

        if $i14 != -1 goto label17;

        $z9 = 1;

        goto label18;

     label17:
        $z9 = 0;

     label18:
        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder trailingSign(java.lang.StringBuilder,boolean)>(l3, $z9);

        $r33 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r34 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r33);

        $r35 = virtualinvoke l3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>($r35);

        interfaceinvoke $r34.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r36);

        return;
    }

    private void print(java.time.temporal.TemporalAccessor, char, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.time.temporal.TemporalAccessor l1;
        char l2;
        java.util.Locale l3;
        java.lang.StringBuilder l4, $r0;
        java.lang.String $r2, l5#10;
        java.util.Formatter$Flags $r3, $r4;
        boolean $z0;
        java.util.Formatter $r5;
        java.lang.Appendable $r6;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.time.temporal.TemporalAccessor;

        l2 := @parameter1: char;

        l3 := @parameter2: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l4 = $r0;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l4, l1, l2, l3);

        $r2 = virtualinvoke l4.<java.lang.StringBuilder: java.lang.String toString()>();

        l5#10 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>($r2);

        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z0 = virtualinvoke $r3.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r4);

        if $z0 == 0 goto label1;

        l5#10 = virtualinvoke l5#10.<java.lang.String: java.lang.String toUpperCase()>();

     label1:
        $r5 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r6 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r5);

        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(l5#10);

        return;
    }

    private void print(java.util.Calendar, char, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.util.Calendar l1;
        char l2;
        java.util.Locale l3;
        java.lang.StringBuilder l4, $r0;
        java.lang.String $r2, l5#10;
        java.util.Formatter$Flags $r3, $r4;
        boolean $z0;
        java.util.Formatter $r5;
        java.lang.Appendable $r6;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.util.Calendar;

        l2 := @parameter1: char;

        l3 := @parameter2: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l4 = $r0;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l4, l1, l2, l3);

        $r2 = virtualinvoke l4.<java.lang.StringBuilder: java.lang.String toString()>();

        l5#10 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>($r2);

        $r3 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags f>;

        $r4 = <java.util.Formatter$Flags: java.util.Formatter$Flags UPPERCASE>;

        $z0 = virtualinvoke $r3.<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>($r4);

        if $z0 == 0 goto label1;

        l5#10 = virtualinvoke l5#10.<java.lang.String: java.lang.String toUpperCase()>();

     label1:
        $r5 = l0.<java.util.Formatter$FormatSpecifier: java.util.Formatter this$0>;

        $r6 = staticinvoke <java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>($r5);

        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(l5#10);

        return;
    }

    private java.lang.Appendable print(java.lang.StringBuilder, java.util.Calendar, char, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.util.Calendar l2;
        char l3, $c13, l5#346, l5#373, l5#415, l5#463, l5#487;
        java.util.Locale l4, $r13, $r16, $r29, $r32, l6#225, $r39, l6#249, $r70;
        int l8, l5#9, $i0, l5#39, $i3, l5#57, l5#73, $i6, $i7, $i9, l5#150, $i11, $i12, l5#170, l7#184, $i14, $i15, $i16, $i18, l5#222, l5#246, l5#270, l5#296, l5#314, $i23, l5#332;
        java.util.Formatter$Flags l9, $r1, l6#25, l6#41, l6#59, l6#75, l7#90, l7#136, l6#152, l7#282, $r48, l6#300, l6#316, l6#334;
        java.lang.StringBuilder l1#1, $r0, $r2, $r4, $r6, $r8, $r10, $r14, $r19, $r21, $r23, $r25, $r27, $r46, $r49, $r51, $r53, $r66, l6#400, $r68;
        long $l1, $l2, $l4, $l5, l5#88, $l8, l5#134, $l10, $l17, $l20, $l21, $l22, $l24;
        java.lang.String[] $r12, l5#109, $r33, $r36, $r40, $r43;
        java.text.DateFormatSymbols l6#115, l7#228, l7#252;
        java.lang.String l6#123, $r17, $r30, $r34, $r37, $r41, $r44, $r69, $r71;
        boolean $z0, l6#173, $z1, $z2;
        java.util.TimeZone l5#207;
        byte l6#272;
        java.lang.Appendable $r55, $r60, $r62, $r64, $r73, $r75, $r77, $r79, $r81, $r84, $r86, $r89, $r91;
        java.lang.AssertionError $r94;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1#1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: java.util.Calendar;

        l3 := @parameter2: char;

        l4 := @parameter3: java.util.Locale;

        if l1#1 != null goto label01;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l1#1 = $r0;

     label01:
        tableswitch(l3)
        {
            case 65: goto label32;
            case 66: goto label36;
            case 67: goto label40;
            case 68: goto label55;
            case 69: goto label57;
            case 70: goto label56;
            case 71: goto label57;
            case 72: goto label02;
            case 73: goto label02;
            case 74: goto label57;
            case 75: goto label57;
            case 76: goto label13;
            case 77: goto label11;
            case 78: goto label12;
            case 79: goto label57;
            case 80: goto label57;
            case 81: goto label14;
            case 82: goto label50;
            case 83: goto label20;
            case 84: goto label50;
            case 85: goto label57;
            case 86: goto label57;
            case 87: goto label57;
            case 88: goto label57;
            case 89: goto label40;
            case 90: goto label27;
            case 91: goto label57;
            case 92: goto label57;
            case 93: goto label57;
            case 94: goto label57;
            case 95: goto label57;
            case 96: goto label57;
            case 97: goto label32;
            case 98: goto label36;
            case 99: goto label54;
            case 100: goto label45;
            case 101: goto label45;
            case 102: goto label57;
            case 103: goto label57;
            case 104: goto label36;
            case 105: goto label57;
            case 106: goto label48;
            case 107: goto label02;
            case 108: goto label02;
            case 109: goto label49;
            case 110: goto label57;
            case 111: goto label57;
            case 112: goto label15;
            case 113: goto label57;
            case 114: goto label51;
            case 115: goto label19;
            case 116: goto label57;
            case 117: goto label57;
            case 118: goto label57;
            case 119: goto label57;
            case 120: goto label57;
            case 121: goto label40;
            case 122: goto label21;
            default: goto label57;
        };

     label02:
        l5#9 = virtualinvoke l2.<java.util.Calendar: int get(int)>(11);

        if l3 == 73 goto label03;

        if l3 != 108 goto label07;

     label03:
        if l5#9 == 0 goto label04;

        if l5#9 != 12 goto label05;

     label04:
        $i0 = 12;

        goto label06;

     label05:
        $i0 = l5#9 % 12;

     label06:
        l5#9 = $i0;

     label07:
        if l3 == 72 goto label08;

        if l3 != 73 goto label09;

     label08:
        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        goto label10;

     label09:
        $r1 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

     label10:
        l6#25 = $r1;

        $l1 = (long) l5#9;

        $r2 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l1, l6#25, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r2);

        goto label58;

     label11:
        l5#39 = virtualinvoke l2.<java.util.Calendar: int get(int)>(12);

        l6#41 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l2 = (long) l5#39;

        $r4 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l2, l6#41, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        goto label58;

     label12:
        $i3 = virtualinvoke l2.<java.util.Calendar: int get(int)>(14);

        l5#57 = $i3 * 1000000;

        l6#59 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l4 = (long) l5#57;

        $r6 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l4, l6#59, 9, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r6);

        goto label58;

     label13:
        l5#73 = virtualinvoke l2.<java.util.Calendar: int get(int)>(14);

        l6#75 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l5 = (long) l5#73;

        $r8 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l5, l6#75, 3, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r8);

        goto label58;

     label14:
        l5#88 = virtualinvoke l2.<java.util.Calendar: long getTimeInMillis()>();

        l7#90 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $i6 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $r10 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, l5#88, l7#90, $i6, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r10);

        goto label58;

     label15:
        $r12 = newarray (java.lang.String)[2];

        $r12[0] = "AM";

        $r12[1] = "PM";

        l5#109 = $r12;

        if l4 == null goto label16;

        $r13 = <java.util.Locale: java.util.Locale US>;

        if l4 == $r13 goto label16;

        l6#115 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(l4);

        l5#109 = virtualinvoke l6#115.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

     label16:
        $i7 = virtualinvoke l2.<java.util.Calendar: int get(int)>(9);

        l6#123 = l5#109[$i7];

        $r14 = l1#1;

        if l4 == null goto label17;

        $r16 = l4;

        goto label18;

     label17:
        $r16 = <java.util.Locale: java.util.Locale US>;

     label18:
        $r17 = virtualinvoke l6#123.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        goto label58;

     label19:
        $l8 = virtualinvoke l2.<java.util.Calendar: long getTimeInMillis()>();

        l5#134 = $l8 / 1000L;

        l7#136 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $i9 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $r19 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, l5#134, l7#136, $i9, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r19);

        goto label58;

     label20:
        l5#150 = virtualinvoke l2.<java.util.Calendar: int get(int)>(13);

        l6#152 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l10 = (long) l5#150;

        $r21 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l10, l6#152, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r21);

        goto label58;

     label21:
        $i11 = virtualinvoke l2.<java.util.Calendar: int get(int)>(15);

        $i12 = virtualinvoke l2.<java.util.Calendar: int get(int)>(16);

        l5#170 = $i11 + $i12;

        if l5#170 >= 0 goto label22;

        $z0 = 1;

        goto label23;

     label22:
        $z0 = 0;

     label23:
        l6#173 = $z0;

        $r23 = l1#1;

        if l6#173 == 0 goto label24;

        $c13 = 45;

        goto label25;

     label24:
        $c13 = 43;

     label25:
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c13);

        if l6#173 == 0 goto label26;

        l5#170 = neg l5#170;

     label26:
        l7#184 = l5#170 / 60000;

        $i14 = l7#184 / 60;

        $i15 = $i14 * 100;

        $i16 = l7#184 % 60;

        l8 = $i15 + $i16;

        l9 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l17 = (long) l8;

        $r25 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l17, l9, 4, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r25);

        goto label58;

     label27:
        l5#207 = virtualinvoke l2.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r27 = l1#1;

        $i18 = virtualinvoke l2.<java.util.Calendar: int get(int)>(16);

        if $i18 == 0 goto label28;

        $z1 = 1;

        goto label29;

     label28:
        $z1 = 0;

     label29:
        if l4 != null goto label30;

        $r29 = <java.util.Locale: java.util.Locale US>;

        goto label31;

     label30:
        $r29 = l4;

     label31:
        $r30 = virtualinvoke l5#207.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>($z1, 0, $r29);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        goto label58;

     label32:
        l5#222 = virtualinvoke l2.<java.util.Calendar: int get(int)>(7);

        if l4 != null goto label33;

        $r32 = <java.util.Locale: java.util.Locale US>;

        goto label34;

     label33:
        $r32 = l4;

     label34:
        l6#225 = $r32;

        l7#228 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(l6#225);

        if l3 != 65 goto label35;

        $r33 = virtualinvoke l7#228.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();

        $r34 = $r33[l5#222];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        goto label58;

     label35:
        $r36 = virtualinvoke l7#228.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();

        $r37 = $r36[l5#222];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        goto label58;

     label36:
        l5#246 = virtualinvoke l2.<java.util.Calendar: int get(int)>(2);

        if l4 != null goto label37;

        $r39 = <java.util.Locale: java.util.Locale US>;

        goto label38;

     label37:
        $r39 = l4;

     label38:
        l6#249 = $r39;

        l7#252 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(l6#249);

        if l3 != 66 goto label39;

        $r40 = virtualinvoke l7#252.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();

        $r41 = $r40[l5#246];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        goto label58;

     label39:
        $r43 = virtualinvoke l7#252.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        $r44 = $r43[l5#246];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        goto label58;

     label40:
        l5#270 = virtualinvoke l2.<java.util.Calendar: int get(int)>(1);

        l6#272 = 2;

        lookupswitch(l3)
        {
            case 67: goto label41;
            case 89: goto label43;
            case 121: goto label42;
            default: goto label44;
        };

     label41:
        l5#270 = l5#270 / 100;

        goto label44;

     label42:
        l5#270 = l5#270 % 100;

        goto label44;

     label43:
        l6#272 = 4;

     label44:
        l7#282 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l20 = (long) l5#270;

        $r46 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l20, l7#282, l6#272, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r46);

        goto label58;

     label45:
        l5#296 = virtualinvoke l2.<java.util.Calendar: int get(int)>(5);

        if l3 != 100 goto label46;

        $r48 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        goto label47;

     label46:
        $r48 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

     label47:
        l6#300 = $r48;

        $l21 = (long) l5#296;

        $r49 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l21, l6#300, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r49);

        goto label58;

     label48:
        l5#314 = virtualinvoke l2.<java.util.Calendar: int get(int)>(6);

        l6#316 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l22 = (long) l5#314;

        $r51 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l22, l6#316, 3, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r51);

        goto label58;

     label49:
        $i23 = virtualinvoke l2.<java.util.Calendar: int get(int)>(2);

        l5#332 = $i23 + 1;

        l6#334 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l24 = (long) l5#332;

        $r53 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l24, l6#334, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r53);

        goto label58;

     label50:
        $r55 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 72, l4);

        interfaceinvoke $r55.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 77, l4);

        if l3 != 84 goto label58;

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 83, l4);

        goto label58;

     label51:
        $r60 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 73, l4);

        interfaceinvoke $r60.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        $r62 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 77, l4);

        interfaceinvoke $r62.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        $r64 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 83, l4);

        interfaceinvoke $r64.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        l6#400 = $r66;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l6#400, l2, 112, l4);

        $r68 = l1#1;

        $r69 = virtualinvoke l6#400.<java.lang.StringBuilder: java.lang.String toString()>();

        if l4 == null goto label52;

        $r70 = l4;

        goto label53;

     label52:
        $r70 = <java.util.Locale: java.util.Locale US>;

     label53:
        $r71 = virtualinvoke $r69.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r70);

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        goto label58;

     label54:
        $r73 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 97, l4);

        interfaceinvoke $r73.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r75 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 98, l4);

        interfaceinvoke $r75.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r77 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 100, l4);

        interfaceinvoke $r77.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r79 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 84, l4);

        interfaceinvoke $r79.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r81 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 90, l4);

        interfaceinvoke $r81.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 89, l4);

        goto label58;

     label55:
        $r84 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 109, l4);

        interfaceinvoke $r84.<java.lang.Appendable: java.lang.Appendable append(char)>(47);

        $r86 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 100, l4);

        interfaceinvoke $r86.<java.lang.Appendable: java.lang.Appendable append(char)>(47);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 121, l4);

        goto label58;

     label56:
        $r89 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 89, l4);

        interfaceinvoke $r89.<java.lang.Appendable: java.lang.Appendable append(char)>(45);

        $r91 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 109, l4);

        interfaceinvoke $r91.<java.lang.Appendable: java.lang.Appendable append(char)>(45);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>(l1#1, l2, 100, l4);

        goto label58;

     label57:
        $z2 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z2 != 0 goto label58;

        $r94 = new java.lang.AssertionError;

        specialinvoke $r94.<java.lang.AssertionError: void <init>()>();

        throw $r94;

     label58:
        return l1#1;
    }

    private java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder, long, java.util.Formatter$Flags, int, java.util.Locale)
    {
        java.util.Formatter$FormatSpecifier l0;
        java.lang.StringBuilder l1, $r1;
        long l2;
        java.util.Formatter$Flags l4;
        int l5;
        java.util.Locale l6;
        char[] l7;
        java.lang.String $r0;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: long;

        l4 := @parameter2: java.util.Formatter$Flags;

        l5 := @parameter3: int;

        l6 := @parameter4: java.util.Locale;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l2, 10);

        l7 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r1 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>(null, l7, l4, l5, l6);

        return $r1;
    }

    private java.lang.Appendable print(java.lang.StringBuilder, java.time.temporal.TemporalAccessor, char, java.util.Locale) throws java.io.IOException
    {
        java.util.Formatter$FormatSpecifier l0;
        java.time.temporal.TemporalAccessor l2;
        char l3, $c15, l5#400, l5#427, l5#469, l5#517, l5#541;
        java.util.Locale l4, $r31, $r35, $r58, $r64, l6#279, $r72, l6#305, $r107;
        int l8, l5#9, l5#23, l5#37, l5#51, l5#65, $i5, l5#83, l5#99, $i11, $i12, $i13, l5#182, l5#198, l7#212, $i16, $i17, $i18, $i21, $i22, l5#276, $i23, l5#302, l5#326, l5#352, l5#370, l5#386;
        java.util.Formatter$Flags l9, $r2, $r6, $r10, $r14, l6#67, l6#85, l6#101, l7#123, l7#168, l6#184, l7#338, $r83, l6#356, l6#372, l6#388;
        java.lang.StringBuilder l1#1, $r0, $r3, $r7, $r11, $r15, $r18, $r21, $r24, $r28, $r33, $r39, $r42, $r45, $r47, $r54, $r80, $r84, $r87, $r90, $r103, l6#454, $r105;
        java.time.temporal.ChronoField $r1, $r5, $r9, $r13, $r17, $r20, $r23, $r26, $r27, $r32, $r38, $r41, $r44, $r53, $r63, $r71, $r79, $r82, $r86, $r89;
        long $l0, $l1, $l2, $l3, $l4, $l6, $l7, $l8, $l9, $l10, l5#121, l5#166, $l14, $l19, $l24, $l25, $l26, $l27;
        java.lang.String[] $r30, l5#142, $r65, $r68, $r73, $r76;
        java.text.DateFormatSymbols l6#148, l7#282, l7#308;
        java.lang.String l6#156, $r36, $r55, $r59, $r61, $r66, $r69, $r74, $r77, $r106, $r108;
        boolean $z0, l6#201, $z1, $z2, $z3, $z4;
        java.time.temporal.TemporalQuery $r49;
        java.lang.Object $r50;
        java.time.ZoneId l5#237;
        java.util.IllegalFormatConversionException $r51, $r133;
        java.lang.Class $r52, $r134;
        java.time.Instant l6#251;
        java.util.TimeZone $r56;
        java.time.zone.ZoneRules $r57;
        byte l6#328;
        java.lang.Appendable $r92, $r97, $r99, $r101, $r110, $r112, $r114, $r116, $r118, $r121, $r123, $r126, $r128;
        java.lang.AssertionError $r131;
        java.time.DateTimeException $r132, l5#568;

        l0 := @this: java.util.Formatter$FormatSpecifier;

        l1#1 := @parameter0: java.lang.StringBuilder;

        l2 := @parameter1: java.time.temporal.TemporalAccessor;

        l3 := @parameter2: char;

        l4 := @parameter3: java.util.Locale;

        if l1#1 != null goto label01;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l1#1 = $r0;

     label01:
        tableswitch(l3)
        {
            case 65: goto label27;
            case 66: goto label31;
            case 67: goto label35;
            case 68: goto label50;
            case 69: goto label52;
            case 70: goto label51;
            case 71: goto label52;
            case 72: goto label02;
            case 73: goto label04;
            case 74: goto label52;
            case 75: goto label52;
            case 76: goto label08;
            case 77: goto label06;
            case 78: goto label07;
            case 79: goto label52;
            case 80: goto label52;
            case 81: goto label09;
            case 82: goto label45;
            case 83: goto label15;
            case 84: goto label45;
            case 85: goto label52;
            case 86: goto label52;
            case 87: goto label52;
            case 88: goto label52;
            case 89: goto label35;
            case 90: goto label22;
            case 91: goto label52;
            case 92: goto label52;
            case 93: goto label52;
            case 94: goto label52;
            case 95: goto label52;
            case 96: goto label52;
            case 97: goto label27;
            case 98: goto label31;
            case 99: goto label49;
            case 100: goto label40;
            case 101: goto label40;
            case 102: goto label52;
            case 103: goto label52;
            case 104: goto label31;
            case 105: goto label52;
            case 106: goto label43;
            case 107: goto label03;
            case 108: goto label05;
            case 109: goto label44;
            case 110: goto label52;
            case 111: goto label52;
            case 112: goto label10;
            case 113: goto label52;
            case 114: goto label46;
            case 115: goto label14;
            case 116: goto label52;
            case 117: goto label52;
            case 118: goto label52;
            case 119: goto label52;
            case 120: goto label52;
            case 121: goto label35;
            case 122: goto label16;
            default: goto label52;
        };

     label02:
        $r1 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField HOUR_OF_DAY>;

        l5#9 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r1);

        $l0 = (long) l5#9;

        $r2 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $r3 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l0, $r2, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r3);

        goto label53;

     label03:
        $r5 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField HOUR_OF_DAY>;

        l5#23 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r5);

        $l1 = (long) l5#23;

        $r6 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $r7 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l1, $r6, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r7);

        goto label53;

     label04:
        $r9 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField CLOCK_HOUR_OF_AMPM>;

        l5#37 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r9);

        $l2 = (long) l5#37;

        $r10 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $r11 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l2, $r10, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r11);

        goto label53;

     label05:
        $r13 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField CLOCK_HOUR_OF_AMPM>;

        l5#51 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r13);

        $l3 = (long) l5#51;

        $r14 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $r15 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l3, $r14, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r15);

        goto label53;

     label06:
        $r17 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MINUTE_OF_HOUR>;

        l5#65 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r17);

        l6#67 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l4 = (long) l5#65;

        $r18 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l4, l6#67, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r18);

        goto label53;

     label07:
        $r20 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MILLI_OF_SECOND>;

        $i5 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r20);

        l5#83 = $i5 * 1000000;

        l6#85 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l6 = (long) l5#83;

        $r21 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l6, l6#85, 9, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r21);

        goto label53;

     label08:
        $r23 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MILLI_OF_SECOND>;

        l5#99 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r23);

        l6#101 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l7 = (long) l5#99;

        $r24 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l7, l6#101, 3, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r24);

        goto label53;

     label09:
        $r26 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField INSTANT_SECONDS>;

        $l8 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: long getLong(java.time.temporal.TemporalField)>($r26);

        $l9 = $l8 * 1000L;

        $r27 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MILLI_OF_SECOND>;

        $l10 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: long getLong(java.time.temporal.TemporalField)>($r27);

        l5#121 = $l9 + $l10;

        l7#123 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $i11 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $r28 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, l5#121, l7#123, $i11, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r28);

        goto label53;

     label10:
        $r30 = newarray (java.lang.String)[2];

        $r30[0] = "AM";

        $r30[1] = "PM";

        l5#142 = $r30;

        if l4 == null goto label11;

        $r31 = <java.util.Locale: java.util.Locale US>;

        if l4 == $r31 goto label11;

        l6#148 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(l4);

        l5#142 = virtualinvoke l6#148.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

     label11:
        $r32 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField AMPM_OF_DAY>;

        $i12 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r32);

        l6#156 = l5#142[$i12];

        $r33 = l1#1;

        if l4 == null goto label12;

        $r35 = l4;

        goto label13;

     label12:
        $r35 = <java.util.Locale: java.util.Locale US>;

     label13:
        $r36 = virtualinvoke l6#156.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r35);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        goto label53;

     label14:
        $r38 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField INSTANT_SECONDS>;

        l5#166 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: long getLong(java.time.temporal.TemporalField)>($r38);

        l7#168 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

        $i13 = l0.<java.util.Formatter$FormatSpecifier: int width>;

        $r39 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, l5#166, l7#168, $i13, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r39);

        goto label53;

     label15:
        $r41 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField SECOND_OF_MINUTE>;

        l5#182 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r41);

        l6#184 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l14 = (long) l5#182;

        $r42 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l14, l6#184, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r42);

        goto label53;

     label16:
        $r44 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField OFFSET_SECONDS>;

        l5#198 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r44);

        if l5#198 >= 0 goto label17;

        $z0 = 1;

        goto label18;

     label17:
        $z0 = 0;

     label18:
        l6#201 = $z0;

        $r45 = l1#1;

        if l6#201 == 0 goto label19;

        $c15 = 45;

        goto label20;

     label19:
        $c15 = 43;

     label20:
        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c15);

        if l6#201 == 0 goto label21;

        l5#198 = neg l5#198;

     label21:
        l7#212 = l5#198 / 60;

        $i16 = l7#212 / 60;

        $i17 = $i16 * 100;

        $i18 = l7#212 % 60;

        l8 = $i17 + $i18;

        l9 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l19 = (long) l8;

        $r47 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l19, l9, 4, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r47);

        goto label53;

     label22:
        $r49 = staticinvoke <java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery zone()>();

        $r50 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: java.lang.Object query(java.time.temporal.TemporalQuery)>($r49);

        l5#237 = (java.time.ZoneId) $r50;

        if l5#237 != null goto label23;

        $r51 = new java.util.IllegalFormatConversionException;

        $r52 = virtualinvoke l2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r51.<java.util.IllegalFormatConversionException: void <init>(char,java.lang.Class)>(l3, $r52);

        throw $r51;

     label23:
        $z1 = l5#237 instanceof java.time.ZoneOffset;

        if $z1 != 0 goto label26;

        $r53 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField INSTANT_SECONDS>;

        $z2 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: boolean isSupported(java.time.temporal.TemporalField)>($r53);

        if $z2 == 0 goto label26;

        l6#251 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(l2);

        $r54 = l1#1;

        $r55 = virtualinvoke l5#237.<java.time.ZoneId: java.lang.String getId()>();

        $r56 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r55);

        $r57 = virtualinvoke l5#237.<java.time.ZoneId: java.time.zone.ZoneRules getRules()>();

        $z3 = virtualinvoke $r57.<java.time.zone.ZoneRules: boolean isDaylightSavings(java.time.Instant)>(l6#251);

        if l4 != null goto label24;

        $r58 = <java.util.Locale: java.util.Locale US>;

        goto label25;

     label24:
        $r58 = l4;

     label25:
        $r59 = virtualinvoke $r56.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>($z3, 0, $r58);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        goto label53;

     label26:
        $r61 = virtualinvoke l5#237.<java.time.ZoneId: java.lang.String getId()>();

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        goto label53;

     label27:
        $r63 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField DAY_OF_WEEK>;

        $i21 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r63);

        $i22 = $i21 % 7;

        l5#276 = $i22 + 1;

        if l4 != null goto label28;

        $r64 = <java.util.Locale: java.util.Locale US>;

        goto label29;

     label28:
        $r64 = l4;

     label29:
        l6#279 = $r64;

        l7#282 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(l6#279);

        if l3 != 65 goto label30;

        $r65 = virtualinvoke l7#282.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();

        $r66 = $r65[l5#276];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        goto label53;

     label30:
        $r68 = virtualinvoke l7#282.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();

        $r69 = $r68[l5#276];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        goto label53;

     label31:
        $r71 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MONTH_OF_YEAR>;

        $i23 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r71);

        l5#302 = $i23 - 1;

        if l4 != null goto label32;

        $r72 = <java.util.Locale: java.util.Locale US>;

        goto label33;

     label32:
        $r72 = l4;

     label33:
        l6#305 = $r72;

        l7#308 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(l6#305);

        if l3 != 66 goto label34;

        $r73 = virtualinvoke l7#308.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();

        $r74 = $r73[l5#302];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        goto label53;

     label34:
        $r76 = virtualinvoke l7#308.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        $r77 = $r76[l5#302];

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        goto label53;

     label35:
        $r79 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField YEAR_OF_ERA>;

        l5#326 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r79);

        l6#328 = 2;

        lookupswitch(l3)
        {
            case 67: goto label36;
            case 89: goto label38;
            case 121: goto label37;
            default: goto label39;
        };

     label36:
        l5#326 = l5#326 / 100;

        goto label39;

     label37:
        l5#326 = l5#326 % 100;

        goto label39;

     label38:
        l6#328 = 4;

     label39:
        l7#338 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l24 = (long) l5#326;

        $r80 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l24, l7#338, l6#328, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r80);

        goto label53;

     label40:
        $r82 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField DAY_OF_MONTH>;

        l5#352 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r82);

        if l3 != 100 goto label41;

        $r83 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        goto label42;

     label41:
        $r83 = <java.util.Formatter$Flags: java.util.Formatter$Flags NONE>;

     label42:
        l6#356 = $r83;

        $l25 = (long) l5#352;

        $r84 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l25, l6#356, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r84);

        goto label53;

     label43:
        $r86 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField DAY_OF_YEAR>;

        l5#370 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r86);

        l6#372 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l26 = (long) l5#370;

        $r87 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l26, l6#372, 3, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r87);

        goto label53;

     label44:
        $r89 = <java.time.temporal.ChronoField: java.time.temporal.ChronoField MONTH_OF_YEAR>;

        l5#386 = interfaceinvoke l2.<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>($r89);

        l6#388 = <java.util.Formatter$Flags: java.util.Formatter$Flags ZERO_PAD>;

        $l27 = (long) l5#386;

        $r90 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>(null, $l27, l6#388, 2, l4);

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r90);

        goto label53;

     label45:
        $r92 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 72, l4);

        interfaceinvoke $r92.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 77, l4);

        if l3 != 84 goto label53;

        virtualinvoke l1#1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 83, l4);

        goto label53;

     label46:
        $r97 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 73, l4);

        interfaceinvoke $r97.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        $r99 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 77, l4);

        interfaceinvoke $r99.<java.lang.Appendable: java.lang.Appendable append(char)>(58);

        $r101 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 83, l4);

        interfaceinvoke $r101.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        l6#454 = $r103;

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l6#454, l2, 112, l4);

        $r105 = l1#1;

        $r106 = virtualinvoke l6#454.<java.lang.StringBuilder: java.lang.String toString()>();

        if l4 == null goto label47;

        $r107 = l4;

        goto label48;

     label47:
        $r107 = <java.util.Locale: java.util.Locale US>;

     label48:
        $r108 = virtualinvoke $r106.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r107);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        goto label53;

     label49:
        $r110 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 97, l4);

        interfaceinvoke $r110.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r112 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 98, l4);

        interfaceinvoke $r112.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r114 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 100, l4);

        interfaceinvoke $r114.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r116 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 84, l4);

        interfaceinvoke $r116.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        $r118 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 90, l4);

        interfaceinvoke $r118.<java.lang.Appendable: java.lang.Appendable append(char)>(32);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 89, l4);

        goto label53;

     label50:
        $r121 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 109, l4);

        interfaceinvoke $r121.<java.lang.Appendable: java.lang.Appendable append(char)>(47);

        $r123 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 100, l4);

        interfaceinvoke $r123.<java.lang.Appendable: java.lang.Appendable append(char)>(47);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 121, l4);

        goto label53;

     label51:
        $r126 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 89, l4);

        interfaceinvoke $r126.<java.lang.Appendable: java.lang.Appendable append(char)>(45);

        $r128 = specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 109, l4);

        interfaceinvoke $r128.<java.lang.Appendable: java.lang.Appendable append(char)>(45);

        specialinvoke l0.<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>(l1#1, l2, 100, l4);

        goto label53;

     label52:
        $z4 = <java.util.Formatter$FormatSpecifier: boolean $assertionsDisabled>;

        if $z4 != 0 goto label53;

        $r131 = new java.lang.AssertionError;

        specialinvoke $r131.<java.lang.AssertionError: void <init>()>();

        throw $r131;

     label53:
        goto label55;

     label54:
        $r132 := @caughtexception;

        $r133 = new java.util.IllegalFormatConversionException;

        $r134 = virtualinvoke l2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r133.<java.util.IllegalFormatConversionException: void <init>(char,java.lang.Class)>(l3, $r134);

        throw $r133;

     label55:
        return l1#1;

        catch java.time.DateTimeException from label01 to label53 with label54;
    }


