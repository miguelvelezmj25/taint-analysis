    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] args;
        java.lang.String dir, $r1, $r3, $r5, $r7, $r9, $r11, $r13, entropy#59, transform#61, $r23, $r25;
        java.io.File output, $r0;
        java.util.HashMap map, $r15;
        java.lang.Exception e, $r19;
        int code, blockSize#55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, force#53, checksum#63, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.lang.Boolean $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        byte verbose#51, level#57;
        kanzi.app.BlockCompressor bc#89, $r18;
        java.io.PrintStream $r20;
        java.lang.StringBuilder $r21, $r22, $r24;
        java.lang.Integer $r26;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        dir = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/kanzi/src/main/resources/rt.knz";

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(dir);

        output = $r0;

        $z0 = virtualinvoke output.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(output);

     label01:
        $r1 = args[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERBOSE(boolean)>($z1);

        <kanzi.Run: boolean VERBOSE> = $z2;

        $r3 = args[1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z3 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFORCE(boolean)>($z3);

        <kanzi.Run: boolean FORCE> = $z4;

        $r5 = args[2];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5);

        $z5 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBLOCKSIZE(boolean)>($z5);

        <kanzi.Run: boolean BLOCKSIZE> = $z6;

        $r7 = args[3];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r7);

        $z7 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLEVEL(boolean)>($z7);

        <kanzi.Run: boolean LEVEL> = $z8;

        $r9 = args[4];

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9);

        $z9 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionENTROPY(boolean)>($z9);

        <kanzi.Run: boolean ENTROPY> = $z10;

        $r11 = args[5];

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11);

        $z11 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $z12 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTRANSFORM(boolean)>($z11);

        <kanzi.Run: boolean TRANSFORM> = $z12;

        $r13 = args[6];

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13);

        $z13 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $z14 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCHECKSUM(boolean)>($z13);

        <kanzi.Run: boolean CHECKSUM> = $z14;

        verbose#51 = 0;

        force#53 = 0;

        blockSize#55 = 1048576;

        level#57 = 0;

        entropy#59 = "Huffman";

        transform#61 = "BWT+MTFT+ZRLT";

        checksum#63 = 0;

        $z15 = <kanzi.Run: boolean VERBOSE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        if $z15 == 0 goto label02;

        verbose#51 = 4;

     label02:
        $z16 = <kanzi.Run: boolean FORCE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z16);

        if $z16 == 0 goto label03;

        force#53 = 1;

     label03:
        $z17 = <kanzi.Run: boolean BLOCKSIZE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z17);

        if $z17 == 0 goto label04;

        blockSize#55 = 1073741824;

     label04:
        $z18 = <kanzi.Run: boolean LEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z18);

        if $z18 == 0 goto label05;

        level#57 = 5;

     label05:
        $z19 = <kanzi.Run: boolean ENTROPY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z19);

        if $z19 == 0 goto label06;

        entropy#59 = "PAQ";

     label06:
        $z20 = <kanzi.Run: boolean TRANSFORM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20);

        if $z20 == 0 goto label07;

        transform#61 = "LZ4";

     label07:
        $z21 = <kanzi.Run: boolean CHECKSUM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z21);

        if $z21 == 0 goto label08;

        checksum#63 = 1;

     label08:
        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        map = $r15;

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("inputName", "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/kanzi/src/main/resources/rt.jar");

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("outputName", "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/kanzi/src/main/resources/rt.knz");

        bc#89 = null;

     label09:
        $r18 = new kanzi.app.BlockCompressor;

        specialinvoke $r18.<kanzi.app.BlockCompressor: void <init>(int,boolean,int,int,java.lang.String,java.lang.String,boolean,int,java.util.Map,java.util.concurrent.ExecutorService)>(verbose#51, force#53, blockSize#55, level#57, entropy#59, transform#61, checksum#63, 1, map, null);

        bc#89 = $r18;

     label10:
        goto label12;

     label11:
        $r19 := @caughtexception;

        e = $r19;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create the compressor: ");

        $r23 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r25);

        staticinvoke <java.lang.System: void exit(int)>(-4);

     label12:
        $r26 = virtualinvoke bc#89.<kanzi.app.BlockCompressor: java.lang.Integer call()>();

        code = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(code);

        if code == 0 goto label13;

        virtualinvoke bc#89.<kanzi.app.BlockCompressor: void dispose()>();

     label13:
        staticinvoke <java.lang.System: void exit(int)>(code);

        return;

        catch java.lang.Exception from label09 to label10 with label11;
    }

    public void <init>()
    {
        kanzi.Run this;

        this := @this: kanzi.Run;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


