    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/log/FileManager";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.log.FileManager)
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        berkeley.com.sleepycat.je.log.FileManager this$0, $r2, $r3;
        java.util.concurrent.locks.ReentrantLock $r0;
        boolean $z0;
        int $i0;
        byte[] $r4;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        this$0 := @parameter0: berkeley.com.sleepycat.je.log.FileManager;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile> = null;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogSyncFile> = null;

        $r0 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer> = $r0;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $z0 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: boolean access$1000(berkeley.com.sleepycat.je.log.FileManager)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $i0 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: int access$1100(berkeley.com.sleepycat.je.log.FileManager)>($r3);

        $r4 = newarray (byte)[$i0];

        goto label2;

     label1:
        $r4 = null;

     label2:
        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites> = $r4;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition> = 0;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwFileNum> = -1L;

        return;
    }

    void close() throws java.io.IOException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        java.io.IOException e, firstException#4, $r2;
        java.lang.Throwable l4, $r5;
        java.util.concurrent.locks.ReentrantLock $r0, $r4, $r6;
        java.io.RandomAccessFile $r1, file#9, $r3, file#19;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        firstException#4 = null;

        $r1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label05;

        file#9 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile>;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile> = null;

     label02:
        virtualinvoke file#9.<java.io.RandomAccessFile: void close()>();

     label03:
        goto label05;

     label04:
        $r2 := @caughtexception;

        e = $r2;

        firstException#4 = e;

     label05:
        $r3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogSyncFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label06;

        file#19 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogSyncFile>;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogSyncFile> = null;

        virtualinvoke file#19.<java.io.RandomAccessFile: void close()>();

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(firstException#4);

        if firstException#4 == null goto label07;

        throw firstException#4;

     label07:
        $r4 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label11;

     label08:
        $r5 := @caughtexception;

     label09:
        l4 = $r5;

     label10:
        $r6 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw l4;

     label11:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    static java.io.RandomAccessFile access$200(berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor, long, boolean)
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor x0;
        long x1;
        boolean x2;
        java.io.RandomAccessFile $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        x1 := @parameter1: long;

        x2 := @parameter2: boolean;

        $r0 = specialinvoke x0.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile getWritableFile(long,boolean)>(x1, x2);

        return $r0;
    }

    static java.util.concurrent.locks.ReentrantLock access$300(berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor)
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor x0;
        java.util.concurrent.locks.ReentrantLock $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        $r0 = x0.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        return $r0;
    }

    static void access$400(berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor x0;

        x0 := @parameter0: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        specialinvoke x0.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void dequeuePendingWrites1()>();

        return;
    }

    private void dequeuePendingWrites1() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        byte[] l1, $r2, $r4, $r10, $r11;
        java.io.RandomAccessFile file, l3;
        java.nio.ByteBuffer bb;
        java.lang.Throwable l5, l6, e, $r15, $r16, $r17;
        boolean $z0, $z1, $z2;
        java.util.concurrent.locks.ReentrantLock $r0;
        java.lang.AssertionError $r1;
        int $i0, $i3, $i4, $i7, $i9, $i10;
        long $l1, $l2, $l5, $l6, $l11;
        berkeley.com.sleepycat.je.log.FileManager $r5, $r7, $r9, $r14, $r19;
        berkeley.com.sleepycat.je.utilint.LongStat $r6, $r8;
        berkeley.com.sleepycat.je.LogWriteException $r18;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r20;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        $z0 = <berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        $z1 = virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label01;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label01:
        $r2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        l1 = $r2;

        entermonitor $r2;

     label02:
        $i0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label04;

        exitmonitor l1;

     label03:
        return;

     label04:
        $l1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwFileNum>;

        file = specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile getWritableFile(long,boolean)>($l1, 0);

        l3 = file;

        entermonitor file;

     label05:
        $l2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>($l2);

        $r4 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        $i3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        virtualinvoke file.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i3);

        $r5 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r6 = $r5.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nBytesWrittenFromWriteQueue>;

        $i4 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        $l5 = (long) $i4;

        virtualinvoke $r6.<berkeley.com.sleepycat.je.utilint.LongStat: void add(long)>($l5);

        $r7 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r8 = $r7.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nWritesFromWriteQueue>;

        virtualinvoke $r8.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        $r9 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $z2 = $r9.<berkeley.com.sleepycat.je.log.FileManager: boolean VERIFY_CHECKSUMS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label06;

        $l6 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>($l6);

        $r10 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        $i7 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        virtualinvoke file.<java.io.RandomAccessFile: int read(byte[],int,int)>($r10, 0, $i7);

        $i9 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        bb = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i9);

        $r11 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        $i10 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        virtualinvoke bb.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r11, 0, $i10);

        virtualinvoke bb.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r14 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $l11 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        staticinvoke <berkeley.com.sleepycat.je.log.FileManager: void access$1300(berkeley.com.sleepycat.je.log.FileManager,java.nio.ByteBuffer,long,java.lang.String)>($r14, bb, $l11, "post-write");

     label06:
        exitmonitor l3;

     label07:
        goto label11;

     label08:
        $r15 := @caughtexception;

     label09:
        l5 = $r15;

        exitmonitor l3;

     label10:
        throw l5;

     label11:
        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition> = 0;

        exitmonitor l1;

     label12:
        goto label16;

     label13:
        $r16 := @caughtexception;

     label14:
        l6 = $r16;

        exitmonitor l1;

     label15:
        throw l6;

     label16:
        goto label18;

     label17:
        $r17 := @caughtexception;

        e = $r17;

        $r18 = new berkeley.com.sleepycat.je.LogWriteException;

        $r19 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r20 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$1200(berkeley.com.sleepycat.je.log.FileManager)>($r19);

        specialinvoke $r18.<berkeley.com.sleepycat.je.LogWriteException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.Throwable)>($r20, "IOException during fsync", e);

        throw $r18;

     label18:
        return;

        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.io.IOException from label01 to label03 with label17;
        catch java.io.IOException from label04 to label16 with label17;
    }

    private java.io.RandomAccessFile getWritableFile(long, boolean)
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        long fileNumber;
        boolean doLock;
        java.lang.Throwable l4, $r14;
        java.lang.Exception e, $r17;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r0;
        java.io.RandomAccessFile $r1, $r7, $r12, $r16;
        java.util.concurrent.locks.ReentrantLock $r2, $r13, $r15;
        berkeley.com.sleepycat.je.log.FileManager $r3, $r4, $r8, $r9, $r19;
        berkeley.com.sleepycat.je.log.FileManager$FileMode $r5, $r10;
        berkeley.com.sleepycat.je.log.FileHandle $r6, $r11;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r18;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r20;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        fileNumber := @parameter0: long;

        doLock := @parameter1: boolean;

     label01:
        $r1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label08;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(doLock);

        if doLock == 0 goto label02;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $r3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r4 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r5 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.log.FileManager$FileMode access$1400(berkeley.com.sleepycat.je.log.FileManager)>($r4);

        $r6 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.log.FileHandle access$1500(berkeley.com.sleepycat.je.log.FileManager,long,berkeley.com.sleepycat.je.log.FileManager$FileMode)>($r3, fileNumber, $r5);

        $r7 = virtualinvoke $r6.<berkeley.com.sleepycat.je.log.FileHandle: java.io.RandomAccessFile getFile()>();

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile> = $r7;

        $r8 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r9 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r10 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.log.FileManager$FileMode access$1400(berkeley.com.sleepycat.je.log.FileManager)>($r9);

        $r11 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.log.FileHandle access$1500(berkeley.com.sleepycat.je.log.FileManager,long,berkeley.com.sleepycat.je.log.FileManager$FileMode)>($r8, fileNumber, $r10);

        $r12 = virtualinvoke $r11.<berkeley.com.sleepycat.je.log.FileHandle: java.io.RandomAccessFile getFile()>();

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogSyncFile> = $r12;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(doLock);

        if doLock == 0 goto label08;

        $r13 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label08;

     label04:
        $r14 := @caughtexception;

     label05:
        l4 = $r14;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(doLock);

        if doLock == 0 goto label07;

        $r15 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label07:
        throw l4;

     label08:
        $r16 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogRWFile>;

     label09:
        return $r16;

     label10:
        $r17 := @caughtexception;

        e = $r17;

        $r18 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r19 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r20 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$1200(berkeley.com.sleepycat.je.log.FileManager)>($r19);

        $r0 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        specialinvoke $r18.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r20, $r0, e);

        throw $r18;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Exception from label01 to label09 with label10;
    }

    boolean enqueueWrite(long, byte[], long, int, int) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        long fileNum, destOffset;
        byte[] data;
        int arrayOffset, size, i#8;
        berkeley.com.sleepycat.je.utilint.RelatchRequiredException RE, $r2;
        boolean $z0, $z1;
        java.util.concurrent.locks.ReentrantLock $r0;
        java.lang.AssertionError $r1;
        berkeley.com.sleepycat.je.log.FileManager $r3;
        berkeley.com.sleepycat.je.utilint.LongStat $r4;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        fileNum := @parameter0: long;

        data := @parameter1: byte[];

        destOffset := @parameter2: long;

        arrayOffset := @parameter3: int;

        size := @parameter4: int;

        $z0 = <berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        $z1 = virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        i#8 = 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8);

        if i#8 >= 2 goto label6;

     label3:
        specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void enqueueWrite1(long,byte[],long,int,int)>(fileNum, data, destOffset, arrayOffset, size);

     label4:
        return 1;

     label5:
        $r2 := @caughtexception;

        RE = $r2;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void dequeuePendingWrites()>();

        i#8 = i#8 + 1;

        goto label2;

     label6:
        $r3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r4 = $r3.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nWriteQueueOverflowFailures>;

        virtualinvoke $r4.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        return 0;

        catch berkeley.com.sleepycat.je.utilint.RelatchRequiredException from label3 to label4 with label5;
    }

    private void enqueueWrite1(long, byte[], long, int, int) throws berkeley.com.sleepycat.je.utilint.RelatchRequiredException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        long fileNum, destOffset, $l0, $l5, $l7, $l8, $l9;
        byte[] data, l8, $r0, $r16;
        int arrayOffset, size, curPos, $i2, $i3, $i4, $i11, $i12, $i13, $i14;
        boolean overflow, $z0, $z1;
        java.lang.Throwable l11, $r18;
        byte $b1, $b6, $b10;
        berkeley.com.sleepycat.je.log.FileManager $r1, $r2, $r7;
        berkeley.com.sleepycat.je.utilint.LongStat $r3;
        berkeley.com.sleepycat.je.utilint.RelatchRequiredException $r4;
        java.lang.AssertionError $r5;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r6;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r8;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        fileNum := @parameter0: long;

        data := @parameter1: byte[];

        destOffset := @parameter2: long;

        arrayOffset := @parameter3: int;

        size := @parameter4: int;

        $l0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwFileNum>;

        $b1 = $l0 cmp fileNum;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 >= 0 goto label01;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void dequeuePendingWrites()>();

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwFileNum> = fileNum;

     label01:
        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        l8 = $r0;

        entermonitor $r0;

     label02:
        $r1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $i2 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: int access$1100(berkeley.com.sleepycat.je.log.FileManager)>($r1);

        $i3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        $i4 = $i2 - $i3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        if $i4 >= size goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        overflow = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(overflow);

        if overflow == 0 goto label05;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r3 = $r2.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nWriteQueueOverflow>;

        virtualinvoke $r3.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        $r4 = <berkeley.com.sleepycat.je.utilint.RelatchRequiredException: berkeley.com.sleepycat.je.utilint.RelatchRequiredException relatchRequiredException>;

        throw $r4;

     label05:
        $z1 = <berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label06;

        $l5 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwFileNum>;

        $b6 = $l5 cmp fileNum;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 == 0 goto label06;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label06:
        curPos = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curPos);

        if curPos != 0 goto label07;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset> = destOffset;

     label07:
        $l7 = (long) curPos;

        $l8 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        $l9 = $l7 + $l8;

        $b10 = $l9 cmp destOffset;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b10);

        if $b10 == 0 goto label08;

        $r6 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r7 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r8 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$1200(berkeley.com.sleepycat.je.log.FileManager)>($r7);

        $r9 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("non-consecutive writes queued. qwPos=");

        $i11 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" write destOffset=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(destOffset);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r8, $r9, $r15);

        throw $r6;

     label08:
        $r16 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        $i12 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, arrayOffset, $r16, $i12, size);

        $i13 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        $i14 = $i13 + size;

        this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition> = $i14;

        exitmonitor l8;

     label09:
        goto label13;

     label10:
        $r18 := @caughtexception;

     label11:
        l11 = $r18;

        exitmonitor l8;

     label12:
        throw l11;

     label13:
        return;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void dequeuePendingWrites() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        java.lang.Throwable l1, $r4;
        boolean $z0, $z1;
        java.util.concurrent.locks.ReentrantLock $r0, $r2, $r3, $r5;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        $z0 = <berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        $z1 = virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void dequeuePendingWrites1()>();

     label3:
        $r3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label5;

     label4:
        $r4 := @caughtexception;

        l1 = $r4;

        $r5 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw l1;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    static void access$500(berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor) throws berkeley.com.sleepycat.je.DatabaseException, java.io.IOException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor x0;

        x0 := @parameter0: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        specialinvoke x0.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void force()>();

        return;
    }

    private void force() throws berkeley.com.sleepycat.je.DatabaseException, java.io.IOException
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        java.io.RandomAccessFile file;
        java.nio.channels.FileChannel ch;
        long start, fSyncMs, $l0, $l3;
        java.nio.channels.ClosedChannelException e, $r3;
        java.lang.Throwable l7, $r28;
        java.util.concurrent.locks.ReentrantLock $r0, $r27, $r29;
        berkeley.com.sleepycat.je.log.FileManager $r1, $r2, $r5, $r7, $r9, $r11, $r13, $r14, $r15, $r18, $r22, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        berkeley.com.sleepycat.je.ThreadInterruptedException $r4;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r6, $r16, $r19;
        berkeley.com.sleepycat.je.utilint.LongStat $r8, $r10;
        berkeley.com.sleepycat.je.utilint.LongMaxZeroStat $r12;
        int $i1, $i2, $i5;
        byte $b4;
        java.util.logging.Logger $r17;
        java.lang.Object[] $r20;
        java.lang.Long $r21;
        java.lang.Integer $r23;
        java.lang.String $r24;
        java.lang.AssertionError $r25;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $z0 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: boolean access$1000(berkeley.com.sleepycat.je.log.FileManager)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void dequeuePendingWrites1()>();

     label02:
        file = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile endOfLogSyncFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(file);

        if file == null goto label08;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        staticinvoke <berkeley.com.sleepycat.je.log.FileManager: void access$1600(berkeley.com.sleepycat.je.log.FileManager,java.lang.String)>($r2, "fsync");

        ch = virtualinvoke file.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        start = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label03:
        virtualinvoke ch.<java.nio.channels.FileChannel: void force(boolean)>(0);

     label04:
        goto label06;

     label05:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new berkeley.com.sleepycat.je.ThreadInterruptedException;

        $r5 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r6 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$1200(berkeley.com.sleepycat.je.log.FileManager)>($r5);

        specialinvoke $r4.<berkeley.com.sleepycat.je.ThreadInterruptedException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.Throwable)>($r6, "Channel closed, may be due to thread interrupt", e);

        throw $r4;

     label06:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        fSyncMs = $l0 - start;

        $r7 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r8 = $r7.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nLogFSyncs>;

        virtualinvoke $r8.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        $r9 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r10 = $r9.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nFSyncTime>;

        virtualinvoke $r10.<berkeley.com.sleepycat.je.utilint.LongStat: void add(long)>(fSyncMs);

        $r11 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r12 = $r11.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongMaxZeroStat nFSyncMaxTime>;

        $z1 = virtualinvoke $r12.<berkeley.com.sleepycat.je.utilint.LongMaxZeroStat: boolean setMax(long)>(fSyncMs);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label07;

        $r13 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $i1 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: int access$1700(berkeley.com.sleepycat.je.log.FileManager)>($r13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 == 0 goto label07;

        $r14 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $i2 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: int access$1700(berkeley.com.sleepycat.je.log.FileManager)>($r14);

        $l3 = (long) $i2;

        $b4 = fSyncMs cmp $l3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 <= 0 goto label07;

        $r15 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r16 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$1200(berkeley.com.sleepycat.je.log.FileManager)>($r15);

        $r17 = virtualinvoke $r16.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger getLogger()>();

        $r18 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r19 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$1200(berkeley.com.sleepycat.je.log.FileManager)>($r18);

        $r20 = newarray (java.lang.Object)[2];

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fSyncMs);

        $r20[0] = $r21;

        $r22 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $i5 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: int access$1700(berkeley.com.sleepycat.je.log.FileManager)>($r22);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r20[1] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FSync time of %d ms exceeds limit (%d ms)", $r20);

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void warning(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r17, $r19, $r24);

     label07:
        $z2 = <berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label08;

        $z3 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean maybeForceYield()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label08;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label08:
        $r26 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $z4 = staticinvoke <berkeley.com.sleepycat.je.log.FileManager: boolean access$1000(berkeley.com.sleepycat.je.log.FileManager)>($r26);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label09;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void dequeuePendingWrites1()>();

     label09:
        $r27 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r27.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label13;

     label10:
        $r28 := @caughtexception;

     label11:
        l7 = $r28;

     label12:
        $r29 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock fsyncFileSynchronizer>;

        virtualinvoke $r29.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw l7;

     label13:
        return;

        catch java.nio.channels.ClosedChannelException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    boolean checkWriteCache(java.nio.ByteBuffer, long, long)
    {
        berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor this;
        java.nio.ByteBuffer readBuffer;
        long requestedOffset, fileNum, $l1, $l4, $l6, $l8, $l9, $l12, $l13, $l14, $l15, $l16, $l17, $l19;
        int pos, targetBufSize, $i0, $i3, $i7, $i11, nBytesToCopy#43, nBytesToCopy#47, $i18;
        byte[] l8, $r0, $r1;
        java.lang.Throwable l10, $r7;
        byte $b2, $b5, $b10;
        berkeley.com.sleepycat.je.log.FileManager $r3, $r5;
        berkeley.com.sleepycat.je.utilint.LongStat $r4, $r6;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        readBuffer := @parameter0: java.nio.ByteBuffer;

        requestedOffset := @parameter1: long;

        fileNum := @parameter2: long;

        pos = virtualinvoke readBuffer.<java.nio.ByteBuffer: int position()>();

        $i0 = virtualinvoke readBuffer.<java.nio.ByteBuffer: int limit()>();

        targetBufSize = $i0 - pos;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        l8 = $r0;

        entermonitor $r0;

     label01:
        $l1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwFileNum>;

        $b2 = $l1 cmp fileNum;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 == 0 goto label03;

        exitmonitor l8;

     label02:
        return 0;

     label03:
        $i3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label05;

        exitmonitor l8;

     label04:
        return 0;

     label05:
        $l4 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        $b5 = requestedOffset cmp $l4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        if $b5 < 0 goto label06;

        $l6 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        $i7 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        $l8 = (long) $i7;

        $l9 = $l6 + $l8;

        $b10 = $l9 cmp requestedOffset;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b10);

        if $b10 > 0 goto label08;

     label06:
        exitmonitor l8;

     label07:
        return 0;

     label08:
        $i11 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: int queuedWritesPosition>;

        $l12 = (long) $i11;

        $l13 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        $l14 = requestedOffset - $l13;

        $l15 = $l12 - $l14;

        nBytesToCopy#43 = (int) $l15;

        nBytesToCopy#47 = staticinvoke <java.lang.Math: int min(int,int)>(nBytesToCopy#43, targetBufSize);

        $r1 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: byte[] queuedWrites>;

        $l16 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: long qwStartingOffset>;

        $l17 = requestedOffset - $l16;

        $i18 = (int) $l17;

        virtualinvoke readBuffer.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r1, $i18, nBytesToCopy#47);

        $r3 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r4 = $r3.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nBytesReadFromWriteQueue>;

        $l19 = (long) nBytesToCopy#47;

        virtualinvoke $r4.<berkeley.com.sleepycat.je.utilint.LongStat: void add(long)>($l19);

        $r5 = this.<berkeley.com.sleepycat.je.log.FileManager$LogEndFileDescriptor: berkeley.com.sleepycat.je.log.FileManager this$0>;

        $r6 = $r5.<berkeley.com.sleepycat.je.log.FileManager: berkeley.com.sleepycat.je.utilint.LongStat nReadsFromWriteQueue>;

        virtualinvoke $r6.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        exitmonitor l8;

     label09:
        return 1;

     label10:
        $r7 := @caughtexception;

     label11:
        l10 = $r7;

        exitmonitor l8;

     label12:
        throw l10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }


