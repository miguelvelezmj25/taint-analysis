    public boolean apply(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.filter.RainDropEffect this;
        kanzi.SliceIntArray input, output;
        int[] src, dst;
        int w, h, st, r1024, centerX, centerY, maxX, maxY, r2, amplitude128, wl, phase1024, dy, dy2, y1024, dx, d2, distance1024, angle1024, srcX, srcY, xw256, yw256, idx, srcStart#12, dstStart#15, $i0, $i1, $i2, y#48, x#61, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, amount1024#100, $i12, $i13, amount1024#108, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        boolean $z0, $z1;

        this := @this: kanzi.filter.RainDropEffect;

        input := @parameter0: kanzi.SliceIntArray;

        output := @parameter1: kanzi.SliceIntArray;

        $z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(input);

        if $z0 == 0 goto label01;

        $z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(output);

        if $z1 != 0 goto label02;

     label01:
        return 0;

     label02:
        src = input.<kanzi.SliceIntArray: int[] array>;

        dst = output.<kanzi.SliceIntArray: int[] array>;

        srcStart#12 = input.<kanzi.SliceIntArray: int index>;

        dstStart#15 = output.<kanzi.SliceIntArray: int index>;

        w = this.<kanzi.filter.RainDropEffect: int width>;

        h = this.<kanzi.filter.RainDropEffect: int height>;

        st = this.<kanzi.filter.RainDropEffect: int stride>;

        $i0 = this.<kanzi.filter.RainDropEffect: int radius>;

        r1024 = $i0 << 10;

        centerX = this.<kanzi.filter.RainDropEffect: int dropX>;

        centerY = this.<kanzi.filter.RainDropEffect: int dropY>;

        maxX = w - 1;

        maxY = h - 1;

        $i1 = this.<kanzi.filter.RainDropEffect: int radius>;

        $i2 = this.<kanzi.filter.RainDropEffect: int radius>;

        r2 = $i1 * $i2;

        amplitude128 = this.<kanzi.filter.RainDropEffect: int amplitude>;

        wl = this.<kanzi.filter.RainDropEffect: int wavelength>;

        phase1024 = this.<kanzi.filter.RainDropEffect: int phase>;

        y#48 = 0;

     label03:
        if y#48 >= w goto label10;

        dy = y#48 - centerY;

        dy2 = dy * dy;

        y1024 = y#48 << 10;

        x#61 = 0;

     label04:
        if x#61 >= h goto label09;

        dx = x#61 - centerX;

        $i3 = dx * dx;

        d2 = $i3 + dy2;

        if d2 <= r2 goto label05;

        $i4 = dstStart#15 + x#61;

        $i5 = srcStart#12 + x#61;

        $i6 = src[$i5];

        dst[$i4] = $i6;

        goto label08;

     label05:
        distance1024 = staticinvoke <kanzi.Global: int sqrt(int)>(d2);

        $i7 = distance1024 / wl;

        $i8 = $i7 * 6434;

        $i9 = $i8 >> 10;

        angle1024 = $i9 - phase1024;

        $i10 = staticinvoke <kanzi.Global: int sin(int)>(angle1024);

        $i11 = amplitude128 * $i10;

        amount1024#100 = $i11 >> 7;

        $i12 = r1024 - distance1024;

        $i13 = amount1024#100 * $i12;

        amount1024#108 = $i13 / r1024;

        if distance1024 == 0 goto label06;

        $i14 = wl << 10;

        $i15 = amount1024#108 * $i14;

        amount1024#108 = $i15 / distance1024;

     label06:
        $i16 = x#61 << 10;

        $i17 = dx * amount1024#108;

        $i18 = $i16 + $i17;

        $i19 = $i18 + 512;

        srcX = $i19 >> 10;

        $i20 = dy * amount1024#108;

        $i21 = y1024 + $i20;

        $i22 = $i21 + 512;

        srcY = $i22 >> 10;

        if srcX < 0 goto label07;

        if srcX >= maxX goto label07;

        if srcY < 0 goto label07;

        if srcY >= maxY goto label07;

        xw256 = srcX & 255;

        yw256 = srcY & 255;

        $i23 = srcY * st;

        $i24 = $i23 + srcX;

        $i25 = input.<kanzi.SliceIntArray: int index>;

        idx = $i24 + $i25;

        $i26 = dstStart#15 + x#61;

        $i27 = src[idx];

        $i28 = idx + 1;

        $i29 = src[$i28];

        $i30 = idx + st;

        $i31 = src[$i30];

        $i32 = idx + st;

        $i33 = $i32 + 1;

        $i34 = src[$i33];

        $i35 = staticinvoke <kanzi.filter.RainDropEffect: int bilinearInterpolateRGB(int,int,int,int,int,int)>(xw256, yw256, $i27, $i29, $i31, $i34);

        dst[$i26] = $i35;

        goto label08;

     label07:
        $i36 = dstStart#15 + x#61;

        $i37 = srcStart#12 + x#61;

        $i38 = src[$i37];

        dst[$i36] = $i38;

     label08:
        x#61 = x#61 + 1;

        goto label04;

     label09:
        srcStart#12 = srcStart#12 + st;

        dstStart#15 = dstStart#15 + st;

        y#48 = y#48 + 1;

        goto label03;

     label10:
        return 1;
    }

    private static int bilinearInterpolateRGB(int, int, int, int, int, int)
    {
        int xRatio256, yRatio256, p0, p1, p2, p3, r0, g0, b0, r1, g1, b1, r2, g2, b2, r3, g3, b3, cx256, cy256, rval0, rval1, r, gval0, gval1, g, bval0, bval1, b, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;

        xRatio256 := @parameter0: int;

        yRatio256 := @parameter1: int;

        p0 := @parameter2: int;

        p1 := @parameter3: int;

        p2 := @parameter4: int;

        p3 := @parameter5: int;

        $i0 = p0 >> 16;

        r0 = $i0 & 255;

        $i1 = p0 >> 8;

        g0 = $i1 & 255;

        b0 = p0 & 255;

        $i2 = p1 >> 16;

        r1 = $i2 & 255;

        $i3 = p1 >> 8;

        g1 = $i3 & 255;

        b1 = p1 & 255;

        $i4 = p2 >> 16;

        r2 = $i4 & 255;

        $i5 = p2 >> 8;

        g2 = $i5 & 255;

        b2 = p2 & 255;

        $i6 = p3 >> 16;

        r3 = $i6 & 255;

        $i7 = p3 >> 8;

        g3 = $i7 & 255;

        b3 = p3 & 255;

        cx256 = 256 - xRatio256;

        cy256 = 256 - yRatio256;

        $i8 = cx256 * r0;

        $i9 = xRatio256 * r1;

        rval0 = $i8 + $i9;

        $i10 = cx256 * r2;

        $i11 = xRatio256 * r3;

        rval1 = $i10 + $i11;

        $i12 = cy256 * rval0;

        $i13 = yRatio256 * rval1;

        $i14 = $i12 + $i13;

        $i15 = $i14 + 256;

        r = $i15 >> 16;

        $i16 = cx256 * g0;

        $i17 = xRatio256 * g1;

        gval0 = $i16 + $i17;

        $i18 = cx256 * g2;

        $i19 = xRatio256 * g3;

        gval1 = $i18 + $i19;

        $i20 = cy256 * gval0;

        $i21 = yRatio256 * gval1;

        $i22 = $i20 + $i21;

        $i23 = $i22 + 256;

        g = $i23 >> 16;

        $i24 = cx256 * b0;

        $i25 = xRatio256 * b1;

        bval0 = $i24 + $i25;

        $i26 = cx256 * b2;

        $i27 = xRatio256 * b3;

        bval1 = $i26 + $i27;

        $i28 = cy256 * bval0;

        $i29 = yRatio256 * bval1;

        $i30 = $i28 + $i29;

        $i31 = $i30 + 256;

        b = $i31 >> 16;

        $i32 = r << 16;

        $i33 = g << 8;

        $i34 = $i32 | $i33;

        $i35 = $i34 | b;

        return $i35;
    }


