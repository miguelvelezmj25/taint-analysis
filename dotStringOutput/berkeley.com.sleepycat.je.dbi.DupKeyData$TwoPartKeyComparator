digraph <init> {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {873766211}" -> "btreeComparator := @parameter0: java.util.Comparator {241976477}";
"btreeComparator := @parameter0: java.util.Comparator {241976477}" -> "dupComparator := @parameter1: java.util.Comparator {778319749}";
"dupComparator := @parameter1: java.util.Comparator {778319749}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {2032376982}";
"specialinvoke this.<java.lang.Object: void <init>()>() {2032376982}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {1491180858}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {1491180858}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {785472916}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {785472916}" -> "return {2047675705}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {556344411}" -> "l1 := @parameter0: java.lang.Object {1163097344}";
"l1 := @parameter0: java.lang.Object {1163097344}" -> "l2 := @parameter1: java.lang.Object {768018035}";
"l2 := @parameter1: java.lang.Object {768018035}" -> "$r0 = (byte[]) l1 {31240593}";
"$r0 = (byte[]) l1 {31240593}" -> "$r1 = (byte[]) l2 {2136781302}";
"$r1 = (byte[]) l2 {2136781302}" -> "$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {468244405}";
"$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {468244405}" -> "return $i0 {1784412345}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {292519703}" -> "twoPartKey1 := @parameter0: byte[] {1890343926}";
"twoPartKey1 := @parameter0: byte[] {1890343926}" -> "twoPartKey2 := @parameter1: byte[] {1163472109}";
"twoPartKey2 := @parameter1: byte[] {1163472109}" -> "$i0 = lengthof twoPartKey1 {1590176485}";
"$i0 = lengthof twoPartKey1 {1590176485}" -> "$i1 = $i0 - 1 {999629651}";
"$i1 = $i0 - 1 {999629651}" -> "origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {816622512}";
"origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {816622512}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1797585616}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1797585616}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {1376073253}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1376073253}" -> "$i2 = lengthof twoPartKey1 {695495862}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1376073253}" -> "$i3 = origKeySize1 {1628891778}";
"$i2 = lengthof twoPartKey1 {695495862}" -> "$i3 = $i2 - 1 {1662236163}";
"$i3 = $i2 - 1 {1662236163}" -> "goto [?= keySize1 = $i3] {1804413593}";
"goto [?= keySize1 = $i3] {1804413593}" -> "keySize1 = $i3 {1729518208}";
"$i3 = origKeySize1 {1628891778}" -> "keySize1 = $i3 {1729518208}";
"keySize1 = $i3 {1729518208}" -> "$i4 = lengthof twoPartKey2 {1886507203}";
"$i4 = lengthof twoPartKey2 {1886507203}" -> "$i5 = $i4 - 1 {734876167}";
"$i5 = $i4 - 1 {734876167}" -> "origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {1064259996}";
"origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {1064259996}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {461191703}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {461191703}" -> "if origKeySize2 != -1 goto $i7 = origKeySize2 {1239651854}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {1239651854}" -> "$i6 = lengthof twoPartKey2 {1767618058}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {1239651854}" -> "$i7 = origKeySize2 {292359040}";
"$i6 = lengthof twoPartKey2 {1767618058}" -> "$i7 = $i6 - 1 {121440791}";
"$i7 = $i6 - 1 {121440791}" -> "goto [?= keySize2 = $i7] {624034506}";
"goto [?= keySize2 = $i7] {624034506}" -> "keySize2 = $i7 {1903601307}";
"$i7 = origKeySize2 {292359040}" -> "keySize2 = $i7 {1903601307}";
"keySize2 = $i7 {1903601307}" -> "$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1026554938}";
"$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1026554938}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {940401458}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {940401458}" -> "if $r0 != null goto key1 = newarray (byte)[keySize1] {11612693}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {11612693}" -> "keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {1388598463}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {11612693}" -> "key1 = newarray (byte)[keySize1] {621685161}";
"keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {1388598463}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34)] {1202053166}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34)] {1202053166}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1220203713}";
"key1 = newarray (byte)[keySize1] {621685161}" -> "key2 = newarray (byte)[keySize2] {471413221}";
"key2 = newarray (byte)[keySize2] {471413221}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {515134586}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {515134586}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {294086878}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {294086878}" -> "$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1910843790}";
"$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1910843790}" -> "keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {275067044}";
"keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {275067044}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1220203713}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1220203713}" -> "if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1612803657}";
"if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1612803657}" -> "return keyCmp#34 {935959835}";
"if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1612803657}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {581893764}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {581893764}" -> "if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1091383900}";
"if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1091383900}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1884844641}";
"if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1091383900}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1443091401}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1884844641}" -> "if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {315335855}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {315335855}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1443091401}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {315335855}" -> "$i9 = lengthof twoPartKey1 {649577798}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1443091401}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {565999173}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {565999173}" -> "if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {129558074}";
"if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {129558074}" -> "return 0 {358830574}";
"if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {129558074}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {840182897}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {840182897}" -> "if origKeySize1 != -1 goto $b8 = 1 {1028053139}";
"if origKeySize1 != -1 goto $b8 = 1 {1028053139}" -> "$b8 = -1 {841290484}";
"if origKeySize1 != -1 goto $b8 = 1 {1028053139}" -> "$b8 = 1 {1071817317}";
"$b8 = -1 {841290484}" -> "goto [?= return $b8] {1652035259}";
"goto [?= return $b8] {1652035259}" -> "return $b8 {879454026}";
"$b8 = 1 {1071817317}" -> "return $b8 {879454026}";
"$i9 = lengthof twoPartKey1 {649577798}" -> "$i10 = $i9 - 1 {2087946292}";
"$i10 = $i9 - 1 {2087946292}" -> "keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {163094400}";
"keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {163094400}" -> "$i11 = lengthof twoPartKey2 {1510778482}";
"$i11 = lengthof twoPartKey2 {1510778482}" -> "$i12 = $i11 - 1 {712505259}";
"$i12 = $i11 - 1 {712505259}" -> "keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {784370946}";
"keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {784370946}" -> "$i13 = lengthof twoPartKey1 {1463283680}";
"$i13 = lengthof twoPartKey1 {1463283680}" -> "$i14 = $i13 - keySize1 {776291925}";
"$i14 = $i13 - keySize1 {776291925}" -> "dataSize1 = $i14 - keySizeLen1 {960574969}";
"dataSize1 = $i14 - keySizeLen1 {960574969}" -> "$i15 = lengthof twoPartKey2 {1415477494}";
"$i15 = lengthof twoPartKey2 {1415477494}" -> "$i16 = $i15 - keySize2 {1287985173}";
"$i16 = $i15 - keySize2 {1287985173}" -> "dataSize2 = $i16 - keySizeLen2 {2127475733}";
"dataSize2 = $i16 - keySizeLen2 {2127475733}" -> "$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {733297012}";
"$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {733297012}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1837296344}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1837296344}" -> "if $r2 != null goto data1 = newarray (byte)[dataSize1] {1232023261}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {1232023261}" -> "dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {1397996183}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {1232023261}" -> "data1 = newarray (byte)[dataSize1] {456120382}";
"dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {1397996183}" -> "goto [?= return dataCmp#99] {1903917674}";
"goto [?= return dataCmp#99] {1903917674}" -> "return dataCmp#99 {148023386}";
"data1 = newarray (byte)[dataSize1] {456120382}" -> "data2 = newarray (byte)[dataSize2] {876823178}";
"data2 = newarray (byte)[dataSize2] {876823178}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {1475685557}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {1475685557}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {175201959}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {175201959}" -> "$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {81012901}";
"$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {81012901}" -> "dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {801305941}";
"dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {801305941}" -> "return dataCmp#99 {148023386}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1884844641}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1837296344}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {581893764}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {565999173}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {840182897}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {940401458}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1220203713}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1443091401}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1797585616}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {461191703}"[fontcolor="blue", penwidth=3, color="blue"];
}


