    public void <init>()
    {
        org.prevayler.foundation.serialization.XStreamSerializer this;
        org.prevayler.foundation.serialization.XStreamSerializer$1 $r0;

        nop;

        this := @this: org.prevayler.foundation.serialization.XStreamSerializer;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        $r0 = new org.prevayler.foundation.serialization.XStreamSerializer$1;

        nop;

        specialinvoke $r0.<org.prevayler.foundation.serialization.XStreamSerializer$1: void <init>(org.prevayler.foundation.serialization.XStreamSerializer)>(this);

        nop;

        this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.ThreadLocal _xstreams> = $r0;

        nop;

        this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.String _encoding> = null;

        nop;

        return;
    }

    public void writeObject(java.io.OutputStream, java.lang.Object) throws java.io.IOException
    {
        org.prevayler.foundation.serialization.XStreamSerializer this;
        java.io.OutputStream stream;
        java.lang.Object object;
        java.io.OutputStreamWriter writer, $r1;
        java.lang.String $r0, $r2;
        com.thoughtworks.xstream.XStream $r3;

        nop;

        this := @this: org.prevayler.foundation.serialization.XStreamSerializer;

        nop;

        stream := @parameter0: java.io.OutputStream;

        nop;

        object := @parameter1: java.lang.Object;

        nop;

        $r0 = this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.String _encoding>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        nop;

        if $r0 != null goto label1;

        nop;

        $r1 = new java.io.OutputStreamWriter;

        nop;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(stream);

        nop;

        goto label2;

     label1:
        nop;

        $r1 = new java.io.OutputStreamWriter;

        nop;

        $r2 = this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.String _encoding>;

        nop;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(stream, $r2);

     label2:
        nop;

        writer = $r1;

        nop;

        $r3 = specialinvoke this.<org.prevayler.foundation.serialization.XStreamSerializer: com.thoughtworks.xstream.XStream getXStream()>();

        nop;

        virtualinvoke $r3.<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>(object, writer);

        nop;

        virtualinvoke writer.<java.io.OutputStreamWriter: void flush()>();

        nop;

        return;
    }

    private com.thoughtworks.xstream.XStream getXStream()
    {
        org.prevayler.foundation.serialization.XStreamSerializer this;
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        com.thoughtworks.xstream.XStream $r2;

        nop;

        this := @this: org.prevayler.foundation.serialization.XStreamSerializer;

        nop;

        $r0 = this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.ThreadLocal _xstreams>;

        nop;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        nop;

        $r2 = (com.thoughtworks.xstream.XStream) $r1;

        nop;

        return $r2;
    }

    public java.lang.Object readObject(java.io.InputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.prevayler.foundation.serialization.XStreamSerializer this;
        java.io.InputStream stream;
        com.thoughtworks.xstream.XStream $r0;
        java.lang.String $r1, $r3;
        java.io.InputStreamReader $r2;
        java.lang.Object $r4;

        nop;

        this := @this: org.prevayler.foundation.serialization.XStreamSerializer;

        nop;

        stream := @parameter0: java.io.InputStream;

        nop;

        $r0 = specialinvoke this.<org.prevayler.foundation.serialization.XStreamSerializer: com.thoughtworks.xstream.XStream getXStream()>();

        nop;

        $r1 = this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.String _encoding>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        nop;

        if $r1 != null goto label1;

        nop;

        $r2 = new java.io.InputStreamReader;

        nop;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(stream);

        nop;

        goto label2;

     label1:
        nop;

        $r2 = new java.io.InputStreamReader;

        nop;

        $r3 = this.<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.String _encoding>;

        nop;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(stream, $r3);

     label2:
        nop;

        $r4 = virtualinvoke $r0.<com.thoughtworks.xstream.XStream: java.lang.Object fromXML(java.io.Reader)>($r2);

        nop;

        return $r4;
    }


