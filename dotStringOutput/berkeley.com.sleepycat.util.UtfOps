digraph <clinit> {
"$r0 = newarray (byte)[0] {1546293400}" -> "<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1740901516}";
"<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1740901516}" -> "<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1444879899}";
"<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1444879899}" -> "return {1589242384}";
}

digraph getByteLength {
"chars := @parameter0: char[] {1431837151}" -> "$i0 = lengthof chars {252181795}";
"$i0 = lengthof chars {252181795}" -> "$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1369068770}";
"$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1369068770}" -> "return $i1 {666632074}";
}

digraph getByteLength {
"chars := @parameter0: char[] {118964442}" -> "offset := @parameter1: int {1786592974}";
"offset := @parameter1: int {1786592974}" -> "length#1 := @parameter2: int {1350469947}";
"length#1 := @parameter2: int {1350469947}" -> "len#3 = 0 {23494639}";
"len#3 = 0 {23494639}" -> "length#7 = length#1 + offset {72695821}";
"length#7 = length#1 + offset {72695821}" -> "i#9 = offset {1272615466}";
"i#9 = offset {1272615466}" -> "if i#9 >= length#7 goto return len#3 {721382736}";
"if i#9 >= length#7 goto return len#3 {721382736}" -> "c = chars[i#9] {1867234446}";
"if i#9 >= length#7 goto return len#3 {721382736}" -> "return len#3 {950004374}";
"c = chars[i#9] {1867234446}" -> "if c < 1 goto (branch) {1541590651}";
"if c < 1 goto (branch) {1541590651}" -> "if c > 127 goto (branch) {1042118087}";
"if c < 1 goto (branch) {1541590651}" -> "if c <= 2047 goto len#3 = len#3 + 2 {1713734542}";
"if c > 127 goto (branch) {1042118087}" -> "len#3 = len#3 + 1 {1942091113}";
"if c > 127 goto (branch) {1042118087}" -> "if c <= 2047 goto len#3 = len#3 + 2 {1713734542}";
"len#3 = len#3 + 1 {1942091113}" -> "goto [?= i#9 = i#9 + 1] {1729673434}";
"goto [?= i#9 = i#9 + 1] {1729673434}" -> "i#9 = i#9 + 1 {1821720968}";
"if c <= 2047 goto len#3 = len#3 + 2 {1713734542}" -> "len#3 = len#3 + 3 {1146698232}";
"if c <= 2047 goto len#3 = len#3 + 2 {1713734542}" -> "len#3 = len#3 + 2 {652644137}";
"len#3 = len#3 + 3 {1146698232}" -> "goto [?= i#9 = i#9 + 1] {653109087}";
"goto [?= i#9 = i#9 + 1] {653109087}" -> "i#9 = i#9 + 1 {1821720968}";
"len#3 = len#3 + 2 {652644137}" -> "i#9 = i#9 + 1 {1821720968}";
"i#9 = i#9 + 1 {1821720968}" -> "goto [?= (branch)] {1628316443}";
"goto [?= (branch)] {1628316443}" -> "if i#9 >= length#7 goto return len#3 {721382736}";
}

digraph charsToBytes {
"chars := @parameter0: char[] {666873915}" -> "charOffset := @parameter1: int {1463764659}";
"charOffset := @parameter1: int {1463764659}" -> "bytes := @parameter2: byte[] {2039407041}";
"bytes := @parameter2: byte[] {2039407041}" -> "byteOffset#1 := @parameter3: int {89186299}";
"byteOffset#1 := @parameter3: int {89186299}" -> "charLength#2 := @parameter4: int {2103281191}";
"charLength#2 := @parameter4: int {2103281191}" -> "charLength#6 = charLength#2 + charOffset {1976248090}";
"charLength#6 = charLength#2 + charOffset {1976248090}" -> "i#8 = charOffset {1692744855}";
"i#8 = charOffset {1692744855}" -> "if i#8 >= charLength#6 goto return {1174885714}";
"if i#8 >= charLength#6 goto return {1174885714}" -> "c = chars[i#8] {1475091407}";
"if i#8 >= charLength#6 goto return {1174885714}" -> "return {1105804281}";
"c = chars[i#8] {1475091407}" -> "if c < 1 goto (branch) {1280541355}";
"if c < 1 goto (branch) {1280541355}" -> "if c > 127 goto (branch) {1525779260}";
"if c < 1 goto (branch) {1280541355}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {2124652272}";
"if c > 127 goto (branch) {1525779260}" -> "$i0 = byteOffset#1 {1202208096}";
"if c > 127 goto (branch) {1525779260}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {2124652272}";
"$i0 = byteOffset#1 {1202208096}" -> "byteOffset#1 = byteOffset#1 + 1 {383712189}";
"byteOffset#1 = byteOffset#1 + 1 {383712189}" -> "$b1 = (byte) c {1951420845}";
"$b1 = (byte) c {1951420845}" -> "bytes[$i0] = $b1 {355618697}";
"bytes[$i0] = $b1 {355618697}" -> "goto [?= i#8 = i#8 + 1] {1417846460}";
"goto [?= i#8 = i#8 + 1] {1417846460}" -> "i#8 = i#8 + 1 {837978232}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {2124652272}" -> "byteOffset#26 = byteOffset#1 + 1 {398302554}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {2124652272}" -> "byteOffset#58 = byteOffset#1 + 1 {1803899116}";
"byteOffset#26 = byteOffset#1 + 1 {398302554}" -> "$c2 = c >> 12 {706671388}";
"$c2 = c >> 12 {706671388}" -> "$c3 = $c2 & 15 {838445099}";
"$c3 = $c2 & 15 {838445099}" -> "$c4 = 224 | $c3 {2120365118}";
"$c4 = 224 | $c3 {2120365118}" -> "$b5 = (byte) $c4 {599375613}";
"$b5 = (byte) $c4 {599375613}" -> "bytes[byteOffset#1] = $b5 {2030591238}";
"bytes[byteOffset#1] = $b5 {2030591238}" -> "byteOffset#37 = byteOffset#26 + 1 {71309384}";
"byteOffset#37 = byteOffset#26 + 1 {71309384}" -> "$c6 = c >> 6 {872701144}";
"$c6 = c >> 6 {872701144}" -> "$c7 = $c6 & 63 {576440217}";
"$c7 = $c6 & 63 {576440217}" -> "$c8 = 128 | $c7 {117147482}";
"$c8 = 128 | $c7 {117147482}" -> "$b9 = (byte) $c8 {277871041}";
"$b9 = (byte) $c8 {277871041}" -> "bytes[byteOffset#26] = $b9 {1242428079}";
"bytes[byteOffset#26] = $b9 {1242428079}" -> "byteOffset#1 = byteOffset#37 + 1 {61058566}";
"byteOffset#1 = byteOffset#37 + 1 {61058566}" -> "$c10 = c >> 0 {1044943033}";
"$c10 = c >> 0 {1044943033}" -> "$c11 = $c10 & 63 {1114425518}";
"$c11 = $c10 & 63 {1114425518}" -> "$c12 = 128 | $c11 {1278135683}";
"$c12 = 128 | $c11 {1278135683}" -> "$b13 = (byte) $c12 {916013543}";
"$b13 = (byte) $c12 {916013543}" -> "bytes[byteOffset#37] = $b13 {1615937120}";
"bytes[byteOffset#37] = $b13 {1615937120}" -> "goto [?= i#8 = i#8 + 1] {1155310460}";
"goto [?= i#8 = i#8 + 1] {1155310460}" -> "i#8 = i#8 + 1 {837978232}";
"byteOffset#58 = byteOffset#1 + 1 {1803899116}" -> "$c14 = c >> 6 {543372482}";
"$c14 = c >> 6 {543372482}" -> "$c15 = $c14 & 31 {137881136}";
"$c15 = $c14 & 31 {137881136}" -> "$c16 = 192 | $c15 {1772604502}";
"$c16 = 192 | $c15 {1772604502}" -> "$b17 = (byte) $c16 {1348149380}";
"$b17 = (byte) $c16 {1348149380}" -> "bytes[byteOffset#1] = $b17 {1787158812}";
"bytes[byteOffset#1] = $b17 {1787158812}" -> "byteOffset#1 = byteOffset#58 + 1 {66084934}";
"byteOffset#1 = byteOffset#58 + 1 {66084934}" -> "$c18 = c >> 0 {68031815}";
"$c18 = c >> 0 {68031815}" -> "$c19 = $c18 & 63 {288498789}";
"$c19 = $c18 & 63 {288498789}" -> "$c20 = 128 | $c19 {1888596810}";
"$c20 = 128 | $c19 {1888596810}" -> "$b21 = (byte) $c20 {71382066}";
"$b21 = (byte) $c20 {71382066}" -> "bytes[byteOffset#58] = $b21 {836993837}";
"bytes[byteOffset#58] = $b21 {836993837}" -> "i#8 = i#8 + 1 {837978232}";
"i#8 = i#8 + 1 {837978232}" -> "goto [?= (branch)] {1275361007}";
"goto [?= (branch)] {1275361007}" -> "if i#8 >= charLength#6 goto return {1174885714}";
}

digraph getZeroTerminatedByteLength {
"bytes := @parameter0: byte[] {1465517408}" -> "offset#1 := @parameter1: int {1976638388}";
"offset#1 := @parameter1: int {1976638388}" -> "len#3 = 0 {1871686701}";
"len#3 = 0 {1871686701}" -> "$i0 = offset#1 {968403759}";
"$i0 = offset#1 {968403759}" -> "offset#1 = offset#1 + 1 {725915377}";
"offset#1 = offset#1 + 1 {725915377}" -> "$b1 = bytes[$i0] {208360446}";
"$b1 = bytes[$i0] {208360446}" -> "if $b1 == 0 goto return len#3 {671255353}";
"if $b1 == 0 goto return len#3 {671255353}" -> "len#3 = len#3 + 1 {1419750597}";
"if $b1 == 0 goto return len#3 {671255353}" -> "return len#3 {832970314}";
"len#3 = len#3 + 1 {1419750597}" -> "goto [?= $i0 = offset#1] {1541626809}";
"goto [?= $i0 = offset#1] {1541626809}" -> "$i0 = offset#1 {968403759}";
}

digraph bytesToString {
"bytes := @parameter0: byte[] {1464010212}" -> "offset := @parameter1: int {621380334}";
"offset := @parameter1: int {621380334}" -> "length := @parameter2: int {1102334953}";
"length := @parameter2: int {1102334953}" -> "if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1639800863}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1639800863}" -> "$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {45450434}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1639800863}" -> "charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {350773516}";
"$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {45450434}" -> "return $r0 {503963258}";
"charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {350773516}" -> "chars = newarray (char)[charLen] {1517556237}";
"chars = newarray (char)[charLen] {1517556237}" -> "staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1528528563}";
"staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1528528563}" -> "$r1 = new java.lang.String {1768019920}";
"$r1 = new java.lang.String {1768019920}" -> "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {752207930}";
"specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {752207930}" -> "return $r1 {329034269}";
}

digraph bytesToChars {
"bytes := @parameter0: byte[] {1872030418}" -> "byteOffset#1 := @parameter1: int {1069444369}";
"byteOffset#1 := @parameter1: int {1069444369}" -> "chars := @parameter2: char[] {1986660438}";
"chars := @parameter2: char[] {1986660438}" -> "charOffset#2 := @parameter3: int {109673345}";
"charOffset#2 := @parameter3: int {109673345}" -> "len#3 := @parameter4: int {467997318}";
"len#3 := @parameter4: int {467997318}" -> "isByteLen := @parameter5: boolean {112676147}";
"isByteLen := @parameter5: boolean {112676147}" -> "if isByteLen == 0 goto $i1 = charOffset#2 {578347677}";
"if isByteLen == 0 goto $i1 = charOffset#2 {578347677}" -> "$i1 = byteOffset#1 {2032158635}";
"if isByteLen == 0 goto $i1 = charOffset#2 {578347677}" -> "$i1 = charOffset#2 {1440081469}";
"$i1 = byteOffset#1 {2032158635}" -> "goto [?= len#8 = len#3 + $i1] {1090942616}";
"goto [?= len#8 = len#3 + $i1] {1090942616}" -> "len#8 = len#3 + $i1 {1270521519}";
"$i1 = charOffset#2 {1440081469}" -> "len#8 = len#3 + $i1 {1270521519}";
"len#8 = len#3 + $i1 {1270521519}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1130659562}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1130659562}" -> "$i2 = byteOffset#1 {389832860}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1130659562}" -> "$i2 = charOffset#2 {1709448442}";
"$i2 = byteOffset#1 {389832860}" -> "goto [?= (branch)] {149740338}";
"goto [?= (branch)] {149740338}" -> "if $i2 >= len#8 goto return byteOffset#1 {1910179116}";
"$i2 = charOffset#2 {1709448442}" -> "if $i2 >= len#8 goto return byteOffset#1 {1910179116}";
"if $i2 >= len#8 goto return byteOffset#1 {1910179116}" -> "$i3 = byteOffset#1 {1514584488}";
"if $i2 >= len#8 goto return byteOffset#1 {1910179116}" -> "return byteOffset#1 {1423075890}";
"$i3 = byteOffset#1 {1514584488}" -> "byteOffset#1 = byteOffset#1 + 1 {1652913359}";
"byteOffset#1 = byteOffset#1 + 1 {1652913359}" -> "$b4 = bytes[$i3] {1272901590}";
"$b4 = bytes[$i3] {1272901590}" -> "char1 = $b4 & 255 {1299933453}";
"char1 = $b4 & 255 {1299933453}" -> "$s5 = char1 & 255 {1291401549}";
"$s5 = char1 & 255 {1291401549}" -> "$s6 = $s5 >> 4 {1662267358}";
"$s6 = $s5 >> 4 {1662267358}" -> "tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1345163912}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1345163912}" -> "$i7 = charOffset#2 {1869338638}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1345163912}" -> "$r2 = new java.lang.IllegalArgumentException {1133312654}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1345163912}" -> "$i9 = byteOffset#1 {1551992680}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1345163912}" -> "byteOffset#50 = byteOffset#1 + 1 {40398899}";
"$i7 = charOffset#2 {1869338638}" -> "charOffset#2 = charOffset#2 + 1 {759390434}";
"charOffset#2 = charOffset#2 + 1 {759390434}" -> "$c8 = (char) char1 {714678541}";
"$c8 = (char) char1 {714678541}" -> "chars[$i7] = $c8 {485163212}";
"chars[$i7] = $c8 {485163212}" -> "goto [?= (branch)] {1031580623}";
"goto [?= (branch)] {1031580623}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1130659562}";
"$i9 = byteOffset#1 {1551992680}" -> "byteOffset#1 = byteOffset#1 + 1 {413667668}";
"byteOffset#1 = byteOffset#1 + 1 {413667668}" -> "char2#29 = bytes[$i9] {891877322}";
"char2#29 = bytes[$i9] {891877322}" -> "$s10 = char2#29 & 192 {1263018252}";
"$s10 = char2#29 & 192 {1263018252}" -> "if $s10 == 128 goto $i11 = charOffset#2 {1192520325}";
"if $s10 == 128 goto $i11 = charOffset#2 {1192520325}" -> "$r0 = new java.lang.IllegalArgumentException {342478989}";
"if $s10 == 128 goto $i11 = charOffset#2 {1192520325}" -> "$i11 = charOffset#2 {2033499001}";
"$r0 = new java.lang.IllegalArgumentException {342478989}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1201565144}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1201565144}" -> "throw $r0 {591030252}";
"$i11 = charOffset#2 {2033499001}" -> "charOffset#2 = charOffset#2 + 1 {1299245354}";
"charOffset#2 = charOffset#2 + 1 {1299245354}" -> "$s12 = char1 & 31 {997035192}";
"$s12 = char1 & 31 {997035192}" -> "$i13 = $s12 << 6 {1750614281}";
"$i13 = $s12 << 6 {1750614281}" -> "$b14 = char2#29 & 63 {1908923143}";
"$b14 = char2#29 & 63 {1908923143}" -> "$i15 = $i13 | $b14 {608686135}";
"$i15 = $i13 | $b14 {608686135}" -> "$c16 = (char) $i15 {1551591744}";
"$c16 = (char) $i15 {1551591744}" -> "chars[$i11] = $c16 {1807355190}";
"chars[$i11] = $c16 {1807355190}" -> "goto [?= (branch)] {619379877}";
"goto [?= (branch)] {619379877}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1130659562}";
"byteOffset#50 = byteOffset#1 + 1 {40398899}" -> "char2#52 = bytes[byteOffset#1] {2099105316}";
"char2#52 = bytes[byteOffset#1] {2099105316}" -> "byteOffset#1 = byteOffset#50 + 1 {1364775668}";
"byteOffset#1 = byteOffset#50 + 1 {1364775668}" -> "char3 = bytes[byteOffset#50] {1128562995}";
"char3 = bytes[byteOffset#50] {1128562995}" -> "$s17 = char2#52 & 192 {924874296}";
"$s17 = char2#52 & 192 {924874296}" -> "if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1694877942}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1694877942}" -> "$s18 = char3 & 192 {1702322548}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1694877942}" -> "$r1 = new java.lang.IllegalArgumentException {858406674}";
"$s18 = char3 & 192 {1702322548}" -> "if $s18 == 128 goto $i19 = charOffset#2 {166685982}";
"if $s18 == 128 goto $i19 = charOffset#2 {166685982}" -> "$r1 = new java.lang.IllegalArgumentException {858406674}";
"if $s18 == 128 goto $i19 = charOffset#2 {166685982}" -> "$i19 = charOffset#2 {139656652}";
"$r1 = new java.lang.IllegalArgumentException {858406674}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {823175888}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {823175888}" -> "throw $r1 {1130739313}";
"$i19 = charOffset#2 {139656652}" -> "charOffset#2 = charOffset#2 + 1 {1017151548}";
"charOffset#2 = charOffset#2 + 1 {1017151548}" -> "$s20 = char1 & 15 {1115440173}";
"$s20 = char1 & 15 {1115440173}" -> "$i21 = $s20 << 12 {1796420306}";
"$i21 = $s20 << 12 {1796420306}" -> "$b22 = char2#52 & 63 {993743996}";
"$b22 = char2#52 & 63 {993743996}" -> "$i23 = $b22 << 6 {1652209835}";
"$i23 = $b22 << 6 {1652209835}" -> "$i24 = $i21 | $i23 {46117335}";
"$i24 = $i21 | $i23 {46117335}" -> "$b25 = char3 & 63 {2114651148}";
"$b25 = char3 & 63 {2114651148}" -> "$i26 = $b25 << 0 {1455313598}";
"$i26 = $b25 << 0 {1455313598}" -> "$i27 = $i24 | $i26 {100475620}";
"$i27 = $i24 | $i26 {100475620}" -> "$c28 = (char) $i27 {594570547}";
"$c28 = (char) $i27 {594570547}" -> "chars[$i19] = $c28 {193306613}";
"chars[$i19] = $c28 {193306613}" -> "goto [?= (branch)] {797579161}";
"goto [?= (branch)] {797579161}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1130659562}";
"$r2 = new java.lang.IllegalArgumentException {1133312654}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {1156079501}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {1156079501}" -> "throw $r2 {1000451670}";
}

digraph getCharLength {
"bytes := @parameter0: byte[] {701421172}" -> "offset#1 := @parameter1: int {1395073888}";
"offset#1 := @parameter1: int {1395073888}" -> "length#2 := @parameter2: int {868077716}";
"length#2 := @parameter2: int {868077716}" -> "charCount#4 = 0 {254741701}";
"charCount#4 = 0 {254741701}" -> "length#8 = length#2 + offset#1 {53884081}";
"length#8 = length#2 + offset#1 {53884081}" -> "if offset#1 >= length#8 goto return charCount#4 {1340659040}";
"if offset#1 >= length#8 goto return charCount#4 {1340659040}" -> "$b0 = bytes[offset#1] {901845907}";
"if offset#1 >= length#8 goto return charCount#4 {1340659040}" -> "return charCount#4 {387679628}";
"$b0 = bytes[offset#1] {901845907}" -> "$s1 = $b0 & 255 {250389228}";
"$s1 = $b0 & 255 {250389228}" -> "$s2 = $s1 >> 4 {1643265092}";
"$s2 = $s1 >> 4 {1643265092}" -> "tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {17155207}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {17155207}" -> "offset#1 = offset#1 + 1 {1779826057}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {17155207}" -> "$r0 = new java.lang.IllegalArgumentException {1262738681}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {17155207}" -> "offset#1 = offset#1 + 2 {1361208692}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {17155207}" -> "offset#1 = offset#1 + 3 {999354834}";
"offset#1 = offset#1 + 1 {1779826057}" -> "goto [?= charCount#4 = charCount#4 + 1] {566394132}";
"goto [?= charCount#4 = charCount#4 + 1] {566394132}" -> "charCount#4 = charCount#4 + 1 {1895568395}";
"offset#1 = offset#1 + 2 {1361208692}" -> "goto [?= charCount#4 = charCount#4 + 1] {2116858411}";
"goto [?= charCount#4 = charCount#4 + 1] {2116858411}" -> "charCount#4 = charCount#4 + 1 {1895568395}";
"offset#1 = offset#1 + 3 {999354834}" -> "goto [?= charCount#4 = charCount#4 + 1] {151519593}";
"goto [?= charCount#4 = charCount#4 + 1] {151519593}" -> "charCount#4 = charCount#4 + 1 {1895568395}";
"$r0 = new java.lang.IllegalArgumentException {1262738681}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1816655871}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1816655871}" -> "throw $r0 {630042711}";
"charCount#4 = charCount#4 + 1 {1895568395}" -> "goto [?= (branch)] {209157974}";
"goto [?= (branch)] {209157974}" -> "if offset#1 >= length#8 goto return charCount#4 {1340659040}";
}


