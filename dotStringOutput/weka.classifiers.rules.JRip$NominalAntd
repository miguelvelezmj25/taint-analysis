digraph <init> {
"this := @this: weka.classifiers.rules.JRip$NominalAntd {243969654}" -> "this$0 := @parameter0: weka.classifiers.rules.JRip {372200061}";
"this$0 := @parameter0: weka.classifiers.rules.JRip {372200061}" -> "a := @parameter1: weka.core.Attribute {107583241}";
"a := @parameter1: weka.core.Attribute {107583241}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: weka.classifiers.rules.JRip this$0> = this$0 {1377495647}";
"this.<weka.classifiers.rules.JRip$NominalAntd: weka.classifiers.rules.JRip this$0> = this$0 {1377495647}" -> "specialinvoke this.<weka.classifiers.rules.JRip$Antd: void <init>(weka.classifiers.rules.JRip,weka.core.Attribute)>(this$0, a) {1074109600}";
"specialinvoke this.<weka.classifiers.rules.JRip$Antd: void <init>(weka.classifiers.rules.JRip,weka.core.Attribute)>(this$0, a) {1074109600}" -> "$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1427516133}";
"$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1427516133}" -> "bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {1517565144}";
"bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {1517565144}" -> "$r1 = newarray (double)[bag] {823067199}";
"$r1 = newarray (double)[bag] {823067199}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> = $r1 {1252401714}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> = $r1 {1252401714}" -> "$r2 = newarray (double)[bag] {1911423117}";
"$r2 = newarray (double)[bag] {1911423117}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> = $r2 {170007344}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> = $r2 {170007344}" -> "return {2123932002}";
}

digraph toString {
"this := @this: weka.classifiers.rules.JRip$NominalAntd {2127405286}" -> "$r0 = new java.lang.StringBuilder {1239022992}";
"$r0 = new java.lang.StringBuilder {1239022992}" -> "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() {2017632148}";
"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() {2017632148}" -> "$r1 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1128327293}";
"$r1 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1128327293}" -> "$r2 = virtualinvoke $r1.<weka.core.Attribute: java.lang.String name()>() {654461845}";
"$r2 = virtualinvoke $r1.<weka.core.Attribute: java.lang.String name()>() {654461845}" -> "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) {1263587038}";
"$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) {1263587038}" -> "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \") {2144711066}";
"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \") {2144711066}" -> "$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {131404449}";
"$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {131404449}" -> "$d0 = this.<weka.classifiers.rules.JRip$NominalAntd: double value> {1095931484}";
"$d0 = this.<weka.classifiers.rules.JRip$NominalAntd: double value> {1095931484}" -> "$i0 = (int) $d0 {1857930445}";
"$i0 = (int) $d0 {1857930445}" -> "$r6 = virtualinvoke $r5.<weka.core.Attribute: java.lang.String value(int)>($i0) {1786130288}";
"$r6 = virtualinvoke $r5.<weka.core.Attribute: java.lang.String value(int)>($i0) {1786130288}" -> "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) {1699972274}";
"$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) {1699972274}" -> "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() {811998770}";
"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() {811998770}" -> "return $r8 {821903199}";
}

digraph splitData {
"this := @this: weka.classifiers.rules.JRip$NominalAntd {571100681}" -> "data := @parameter0: weka.core.Instances {1200677099}";
"data := @parameter0: weka.core.Instances {1200677099}" -> "defAcRt := @parameter1: double {1949013763}";
"defAcRt := @parameter1: double {1949013763}" -> "cl := @parameter2: double {1305646257}";
"cl := @parameter2: double {1305646257}" -> "$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1323872075}";
"$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1323872075}" -> "bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {1731169316}";
"bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {1731169316}" -> "splitData = newarray (weka.core.Instances)[bag] {1481878599}";
"splitData = newarray (weka.core.Instances)[bag] {1481878599}" -> "x#7 = 0 {2104913767}";
"x#7 = 0 {2104913767}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {1754906247}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {1754906247}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {2048203477}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {2048203477}" -> "if x#7 >= bag goto x#26 = 0 {2009544251}";
"if x#7 >= bag goto x#26 = 0 {2009544251}" -> "$r1 = new weka.core.Instances {505415656}";
"if x#7 >= bag goto x#26 = 0 {2009544251}" -> "x#26 = 0 {502803697}";
"$r1 = new weka.core.Instances {505415656}" -> "$i0 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1172675387}";
"$i0 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1172675387}" -> "specialinvoke $r1.<weka.core.Instances: void <init>(weka.core.Instances,int)>(data, $i0) {262265909}";
"specialinvoke $r1.<weka.core.Instances: void <init>(weka.core.Instances,int)>(data, $i0) {262265909}" -> "splitData[x#7] = $r1 {1151519316}";
"splitData[x#7] = $r1 {1151519316}" -> "$r2 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1317545905}";
"$r2 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1317545905}" -> "$r2[x#7] = 0.0 {1352329909}";
"$r2[x#7] = 0.0 {1352329909}" -> "$r3 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1488976751}";
"$r3 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1488976751}" -> "$r3[x#7] = 0.0 {1186934587}";
"$r3[x#7] = 0.0 {1186934587}" -> "x#7 = x#7 + 1 {1635569664}";
"x#7 = x#7 + 1 {1635569664}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7)] {721530573}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7)] {721530573}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {1754906247}";
"x#26 = 0 {502803697}" -> "$i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {372411859}";
"$i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {372411859}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#26) {916763082}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#26) {916763082}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {663145924}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {663145924}" -> "if x#26 >= $i1 goto x#71 = 0 {1248961600}";
"if x#26 >= $i1 goto x#71 = 0 {1248961600}" -> "inst = virtualinvoke data.<weka.core.Instances: weka.core.Instance instance(int)>(x#26) {177899899}";
"if x#26 >= $i1 goto x#71 = 0 {1248961600}" -> "x#71 = 0 {232821834}";
"inst = virtualinvoke data.<weka.core.Instances: weka.core.Instance instance(int)>(x#26) {177899899}" -> "$r4 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1206857147}";
"$r4 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1206857147}" -> "$z0 = interfaceinvoke inst.<weka.core.Instance: boolean isMissing(weka.core.Attribute)>($r4) {425768300}";
"$z0 = interfaceinvoke inst.<weka.core.Instance: boolean isMissing(weka.core.Attribute)>($r4) {425768300}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {476142467}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {476142467}" -> "if $z0 != 0 goto x#26 = x#26 + 1 {18022554}";
"if $z0 != 0 goto x#26 = x#26 + 1 {18022554}" -> "$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {88286080}";
"if $z0 != 0 goto x#26 = x#26 + 1 {18022554}" -> "x#26 = x#26 + 1 {195202963}";
"$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {88286080}" -> "$d0 = interfaceinvoke inst.<weka.core.Instance: double value(weka.core.Attribute)>($r5) {483259490}";
"$d0 = interfaceinvoke inst.<weka.core.Instance: double value(weka.core.Attribute)>($r5) {483259490}" -> "v = (int) $d0 {1567786691}";
"v = (int) $d0 {1567786691}" -> "$r6 = splitData[v] {1988471542}";
"$r6 = splitData[v] {1988471542}" -> "virtualinvoke $r6.<weka.core.Instances: boolean add(weka.core.Instance)>(inst) {417402004}";
"virtualinvoke $r6.<weka.core.Instances: boolean add(weka.core.Instance)>(inst) {417402004}" -> "$r7 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {821153284}";
"$r7 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {821153284}" -> "$d1 = $r7[v] {94605256}";
"$d1 = $r7[v] {94605256}" -> "$d2 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {1746515440}";
"$d2 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {1746515440}" -> "$d3 = $d1 + $d2 {878961117}";
"$d3 = $d1 + $d2 {878961117}" -> "$r7[v] = $d3 {765982038}";
"$r7[v] = $d3 {765982038}" -> "$d4 = interfaceinvoke inst.<weka.core.Instance: double classValue()>() {502227276}";
"$d4 = interfaceinvoke inst.<weka.core.Instance: double classValue()>() {502227276}" -> "$i3 = (int) $d4 {917050917}";
"$i3 = (int) $d4 {917050917}" -> "$i4 = (int) cl {2075777462}";
"$i4 = (int) cl {2075777462}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {513906662}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {513906662}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {228085529}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {228085529}" -> "if $i3 != $i4 goto x#26 = x#26 + 1 {498741900}";
"if $i3 != $i4 goto x#26 = x#26 + 1 {498741900}" -> "$r8 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1975233272}";
"if $i3 != $i4 goto x#26 = x#26 + 1 {498741900}" -> "x#26 = x#26 + 1 {195202963}";
"$r8 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1975233272}" -> "$d5 = $r8[v] {666511752}";
"$d5 = $r8[v] {666511752}" -> "$d6 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {2023850753}";
"$d6 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {2023850753}" -> "$d7 = $d5 + $d6 {47354742}";
"$d7 = $d5 + $d6 {47354742}" -> "$r8[v] = $d7 {1951534285}";
"$r8[v] = $d7 {1951534285}" -> "x#26 = x#26 + 1 {195202963}";
"x#26 = x#26 + 1 {195202963}" -> "goto [?= $i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>()] {2146417773}";
"goto [?= $i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>()] {2146417773}" -> "$i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {372411859}";
"x#71 = 0 {232821834}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {239096372}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {239096372}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {511010632}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {511010632}" -> "if x#71 >= bag goto return splitData {2134776766}";
"if x#71 >= bag goto return splitData {2134776766}" -> "$r9 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1848578727}";
"if x#71 >= bag goto return splitData {2134776766}" -> "return splitData {1269351794}";
"$r9 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1848578727}" -> "$d8 = $r9[x#71] {221540893}";
"$d8 = $r9[x#71] {221540893}" -> "t = $d8 + 1.0 {778202213}";
"t = $d8 + 1.0 {778202213}" -> "$r10 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1550806703}";
"$r10 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1550806703}" -> "$d9 = $r10[x#71] {602830476}";
"$d9 = $r10[x#71] {602830476}" -> "p = $d9 + 1.0 {1926139875}";
"p = $d9 + 1.0 {1926139875}" -> "$r11 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1037254319}";
"$r11 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1037254319}" -> "$d10 = $r11[x#71] {1058908858}";
"$d10 = $r11[x#71] {1058908858}" -> "$d11 = p / t {1247113556}";
"$d11 = p / t {1247113556}" -> "$d12 = staticinvoke <weka.core.Utils: double log2(double)>($d11) {416238302}";
"$d12 = staticinvoke <weka.core.Utils: double log2(double)>($d11) {416238302}" -> "$d13 = staticinvoke <weka.core.Utils: double log2(double)>(defAcRt) {805184491}";
"$d13 = staticinvoke <weka.core.Utils: double log2(double)>(defAcRt) {805184491}" -> "$d14 = $d12 - $d13 {1321216145}";
"$d14 = $d12 - $d13 {1321216145}" -> "infoGain = $d10 * $d14 {3803118}";
"infoGain = $d10 * $d14 {3803118}" -> "$d15 = this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> {1231891420}";
"$d15 = this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> {1231891420}" -> "$b6 = infoGain cmpl $d15 {431505512}";
"$b6 = infoGain cmpl $d15 {431505512}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6) {735832818}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6) {735832818}" -> "if $b6 <= 0 goto x#71 = x#71 + 1 {1603391332}";
"if $b6 <= 0 goto x#71 = x#71 + 1 {1603391332}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> = infoGain {1692274168}";
"if $b6 <= 0 goto x#71 = x#71 + 1 {1603391332}" -> "x#71 = x#71 + 1 {622983632}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> = infoGain {1692274168}" -> "$r12 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {177614272}";
"$r12 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {177614272}" -> "$d16 = $r12[x#71] {65848797}";
"$d16 = $r12[x#71] {65848797}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double cover> = $d16 {197456914}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double cover> = $d16 {197456914}" -> "$r13 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1360138542}";
"$r13 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1360138542}" -> "$d17 = $r13[x#71] {1951403854}";
"$d17 = $r13[x#71] {1951403854}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double accu> = $d17 {1866227380}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double accu> = $d17 {1866227380}" -> "$d18 = p / t {2060487297}";
"$d18 = p / t {2060487297}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double accuRate> = $d18 {1634067086}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double accuRate> = $d18 {1634067086}" -> "$d19 = (double) x#71 {426578743}";
"$d19 = (double) x#71 {426578743}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double value> = $d19 {1473442566}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double value> = $d19 {1473442566}" -> "x#71 = x#71 + 1 {622983632}";
"x#71 = x#71 + 1 {622983632}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71)] {2049383707}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71)] {2049383707}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {239096372}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {476142467}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {513906662}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {1754906247}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#26) {916763082}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {228085529}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6) {735832818}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {2048203477}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {239096372}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {663145924}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {511010632}"[fontcolor="blue", penwidth=3, color="blue"];
}


