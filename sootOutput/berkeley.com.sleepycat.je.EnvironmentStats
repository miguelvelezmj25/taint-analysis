    public java.util.Map getStatGroupsMap()
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        java.util.HashMap map, $r0;
        java.util.Iterator l2;
        berkeley.com.sleepycat.je.utilint.StatGroup group;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String $r3;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        map = $r0;

        $r1 = virtualinvoke this.<berkeley.com.sleepycat.je.EnvironmentStats: java.util.List getStatGroups()>();

        l2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        group = (berkeley.com.sleepycat.je.utilint.StatGroup) $r2;

        $r3 = virtualinvoke group.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        virtualinvoke map.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, group);

        goto label1;

     label2:
        return map;
    }

    public java.util.List getStatGroups()
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup[] $r0;
        berkeley.com.sleepycat.je.utilint.StatGroup $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.util.List $r10;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        $r0 = newarray (berkeley.com.sleepycat.je.utilint.StatGroup)[9];

        $r1 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup logStats>;

        $r0[0] = $r1;

        $r2 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cacheStats>;

        $r0[1] = $r2;

        $r3 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup offHeapStats>;

        $r0[2] = $r3;

        $r4 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cleanerStats>;

        $r0[3] = $r4;

        $r5 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup incompStats>;

        $r0[4] = $r5;

        $r6 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup ckptStats>;

        $r0[5] = $r6;

        $r7 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup envImplStats>;

        $r0[6] = $r7;

        $r8 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup lockStats>;

        $r0[7] = $r8;

        $r9 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup throughputStats>;

        $r0[8] = $r9;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r10;
    }

    public void setStatGroup(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup sg;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r9, $r10, $r12;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r14;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        sg := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        $r0 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Node Compression");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup incompStats> = sg;

        goto label10;

     label01:
        $r1 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Cache");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cacheStats> = sg;

        goto label10;

     label02:
        $r2 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("OffHeap");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label03;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup offHeapStats> = sg;

        goto label10;

     label03:
        $r3 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Checkpoints");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label04;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup ckptStats> = sg;

        goto label10;

     label04:
        $r4 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("Cleaning");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label05;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cleanerStats> = sg;

        goto label10;

     label05:
        $r5 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("I/O");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label06;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup logStats> = sg;

        goto label10;

     label06:
        $r6 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Locks");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label07;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup lockStats> = sg;

        goto label10;

     label07:
        $r7 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("Environment");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label08;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup envImplStats> = sg;

        goto label10;

     label08:
        $r8 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("Op");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label09;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup throughputStats> = sg;

        goto label10;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stat group name in setStatGroup ");

        $r11 = virtualinvoke sg.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r13);

        throw $r14;

     label10:
        return;
    }

    public void <init>()
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r0.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Node Compression", "Removal and compression of internal btree nodes.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup incompStats> = $r0;

        $r1 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r1.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Cache", "Current size, allocations, and eviction activity.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cacheStats> = $r1;

        $r2 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r2.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("OffHeap", "Off-heap cache usage and eviction activity.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup offHeapStats> = $r2;

        $r3 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r3.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Checkpoints", "Frequency and extent of checkpointing activity.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup ckptStats> = $r3;

        $r4 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r4.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Cleaning", "Frequency and extent of log file cleaning activity.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cleanerStats> = $r4;

        $r5 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r5.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("I/O", "Log file opens, fsyncs, reads, writes, cache misses.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup logStats> = $r5;

        $r6 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r6.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Locks", "Locks held by data operations, latching contention on lock table.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup lockStats> = $r6;

        $r7 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r7.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Environment", "General environment wide statistics.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup envImplStats> = $r7;

        $r8 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r8.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Op", "Thoughput statistics for JE calls.");

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup throughputStats> = $r8;

        return;
    }

    public void setINCompStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup incompStats> = stats;

        return;
    }

    public void setCkptStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup ckptStats> = stats;

        return;
    }

    public void setCleanerStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cleanerStats> = stats;

        return;
    }

    public void setLogStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup logStats> = stats;

        return;
    }

    public void setMBAndEvictorStats(berkeley.com.sleepycat.je.utilint.StatGroup, berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup clonedMBStats, clonedEvictorStats, $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        clonedMBStats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        clonedEvictorStats := @parameter1: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cacheStats> = clonedEvictorStats;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup cacheStats>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.StatGroup: void addAll(berkeley.com.sleepycat.je.utilint.StatGroup)>(clonedMBStats);

        return;
    }

    public void setOffHeapStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup offHeapStats> = stats;

        return;
    }

    public void setLockStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup lockStats> = stats;

        return;
    }

    public void setEnvStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup envImplStats> = stats;

        return;
    }

    public void setThroughputStats(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.EnvironmentStats this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;

        this := @this: berkeley.com.sleepycat.je.EnvironmentStats;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        this.<berkeley.com.sleepycat.je.EnvironmentStats: berkeley.com.sleepycat.je.utilint.StatGroup throughputStats> = stats;

        return;
    }


