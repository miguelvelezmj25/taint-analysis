    static void <clinit>()
    {
        staticinvoke <java.lang.Object: void registerNatives()>();

        return;
    }

    public void <init>()
    {
        java.lang.Object l0;

        l0 := @this: java.lang.Object;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.lang.Object l0;

        l0 := @this: java.lang.Object;

        return;
    }

    public final void wait(long, int) throws java.lang.InterruptedException
    {
        java.lang.Object l0;
        int l3;
        long l1#1;
        byte $b0;
        java.lang.IllegalArgumentException $r0, $r1;

        l0 := @this: java.lang.Object;

        l1#1 := @parameter0: long;

        l3 := @parameter1: int;

        $b0 = l1#1 cmp 0L;

        if $b0 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeout value is negative");

        throw $r0;

     label1:
        if l3 < 0 goto label2;

        if l3 <= 999999 goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("nanosecond timeout value out of range");

        throw $r1;

     label3:
        if l3 <= 0 goto label4;

        l1#1 = l1#1 + 1L;

     label4:
        virtualinvoke l0.<java.lang.Object: void wait(long)>(l1#1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object l0, l1;
        boolean $z0;

        l0 := @this: java.lang.Object;

        l1 := @parameter0: java.lang.Object;

        if l0 != l1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }


