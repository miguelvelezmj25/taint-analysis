    public void <init>(com.googlecode.pngtastic.core.Logger)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        com.googlecode.pngtastic.core.Logger log;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        log := @parameter0: com.googlecode.pngtastic.core.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: com.googlecode.pngtastic.core.Logger log> = log;

        return;
    }

    public void applyFiltering(com.googlecode.pngtastic.core.PngFilterType, java.util.List, int)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        com.googlecode.pngtastic.core.PngFilterType filterType;
        java.util.List scanlines;
        int sampleBitCount, scanlineLength;
        java.util.Iterator l6;
        byte[] scanline, previous, $r1, previousRow#1;
        com.googlecode.pngtastic.core.PngException e, $r4;
        java.lang.Object $r0, $r2, $r3;
        boolean $z0;
        byte $b0;
        java.lang.Object[] $r5;
        com.googlecode.pngtastic.core.Logger $r6;
        java.lang.String $r7;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        filterType := @parameter0: com.googlecode.pngtastic.core.PngFilterType;

        scanlines := @parameter1: java.util.List;

        sampleBitCount := @parameter2: int;

        $r0 = interfaceinvoke scanlines.<java.util.List: java.lang.Object get(int)>(0);

        $r1 = (byte[]) $r0;

        scanlineLength = lengthof $r1;

        previousRow#1 = newarray (byte)[scanlineLength];

        l6 = interfaceinvoke scanlines.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        scanline = (byte[]) $r2;

        if filterType == null goto label2;

        $b0 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        scanline[0] = $b0;

     label2:
        $r3 = virtualinvoke scanline.<java.lang.Object: java.lang.Object clone()>();

        previous = (byte[]) $r3;

     label3:
        virtualinvoke this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: void filter(byte[],byte[],int)>(scanline, previousRow#1, sampleBitCount);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        e = $r4;

        $r6 = this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: com.googlecode.pngtastic.core.Logger log>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke e.<com.googlecode.pngtastic.core.PngException: java.lang.String getMessage()>();

        $r5[0] = $r7;

        virtualinvoke $r6.<com.googlecode.pngtastic.core.Logger: void error(java.lang.String,java.lang.Object[])>("Error during filtering: %s", $r5);

     label6:
        previousRow#1 = previous;

        goto label1;

     label7:
        return;

        catch com.googlecode.pngtastic.core.PngException from label3 to label4 with label5;
    }

    public void applyAdaptiveFiltering(com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, java.util.List, java.util.Map, int) throws java.io.IOException
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.util.List scanlines, $r5;
        java.util.Map filteredScanLines;
        int sampleSize, $i0, $i2, $i5, s#1, i#5;
        java.util.Iterator l9;
        java.util.Map$Entry entry;
        byte[] scanline, $r2;
        java.util.Set $r0;
        boolean $z0;
        java.lang.Object $r1, $r3, $r4, $r6, $r7;
        byte $b1, $b3, $b4;
        long $l6, bestSum#2, sum#4;
        com.googlecode.pngtastic.core.PngFilterType bestFilterType#3;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        inflatedImageData := @parameter0: com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        scanlines := @parameter1: java.util.List;

        filteredScanLines := @parameter2: java.util.Map;

        sampleSize := @parameter3: int;

        s#1 = 0;

     label1:
        $i0 = interfaceinvoke scanlines.<java.util.List: int size()>();

        if s#1 >= $i0 goto label8;

        bestSum#2 = 9223372036854775807L;

        bestFilterType#3 = null;

        $r0 = interfaceinvoke filteredScanLines.<java.util.Map: java.util.Set entrySet()>();

        l9 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r3;

        sum#4 = 0L;

        $r4 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.util.List) $r4;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(s#1);

        scanline = (byte[]) $r6;

        i#5 = 1;

     label3:
        $i2 = lengthof scanline;

        if i#5 >= $i2 goto label4;

        $b4 = scanline[i#5];

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($b4);

        $l6 = (long) $i5;

        sum#4 = sum#4 + $l6;

        i#5 = i#5 + 1;

        goto label3;

     label4:
        $b3 = sum#4 cmp bestSum#2;

        if $b3 >= 0 goto label5;

        $r7 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        bestFilterType#3 = (com.googlecode.pngtastic.core.PngFilterType) $r7;

        bestSum#2 = sum#4;

     label5:
        goto label2;

     label6:
        if bestFilterType#3 == null goto label7;

        $r1 = interfaceinvoke scanlines.<java.util.List: java.lang.Object get(int)>(s#1);

        $r2 = (byte[]) $r1;

        $b1 = virtualinvoke bestFilterType#3.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        $r2[0] = $b1;

     label7:
        s#1 = s#1 + 1;

        goto label1;

     label8:
        virtualinvoke this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: void applyFiltering(com.googlecode.pngtastic.core.PngFilterType,java.util.List,int)>(null, scanlines, sampleSize);

        return;
    }

    public void deFilter(byte[], byte[], int) throws com.googlecode.pngtastic.core.PngException
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int sampleBitCount, result, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i21, $i25, $i26, $i28, $i31, $i32, $i35, previous#1, x#2, a#3, $i37, previous#11, previous#12, x#13, a#14, previous#16, x#17, a#18;
        com.googlecode.pngtastic.core.PngFilterType filterType, previousFilterType;
        byte $b0, $b1, $b7, $b9, $b15, $b17, $b22, $b27, $b29, $b33, $b34, $b36, $b38, $b39, $b40, $b41;
        int[] $r0;
        short $s23, $s24;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        sampleBitCount := @parameter2: int;

        $b0 = line[0];

        filterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b0);

        line[0] = 0;

        $b1 = previousLine[0];

        previousFilterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b1);

        previousLine[0] = 0;

        $r0 = <com.googlecode.pngtastic.core.processing.PngtasticFilterHandler$1: int[] $SwitchMap$com$googlecode$pngtastic$core$PngFilterType>;

        $i2 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: int ordinal()>();

        $i3 = $r0[$i2];

        tableswitch($i3)
        {
            case 2: goto label01;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label14;
            default: goto label17;
        };

     label01:
        $i4 = sampleBitCount / 8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        $i6 = $i5 - 1;

        previous#1 = neg $i6;

        x#2 = 1;

        a#3 = previous#1;

     label02:
        $i37 = lengthof line;

        if x#2 >= $i37 goto label05;

        $i10 = x#2;

        $b7 = line[x#2];

        if a#3 >= 0 goto label03;

        $b38 = 0;

        goto label04;

     label03:
        $b38 = line[a#3];

     label04:
        $i8 = $b7 + $b38;

        $b9 = (byte) $i8;

        line[$i10] = $b9;

        x#2 = x#2 + 1;

        a#3 = a#3 + 1;

        goto label02;

     label05:
        goto label17;

     label06:
        previous#11 = 1;

     label07:
        $i32 = lengthof line;

        if previous#11 >= $i32 goto label08;

        $b34 = line[previous#11];

        $b33 = previousLine[previous#11];

        $i35 = $b34 + $b33;

        $b36 = (byte) $i35;

        line[previous#11] = $b36;

        previous#11 = previous#11 + 1;

        goto label07;

     label08:
        goto label17;

     label09:
        $i18 = sampleBitCount / 8;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i18);

        $i20 = $i19 - 1;

        previous#12 = neg $i20;

        x#13 = 1;

        a#14 = previous#12;

     label10:
        $i21 = lengthof line;

        if x#13 >= $i21 goto label13;

        $i31 = x#13;

        $b27 = line[x#13];

        if a#14 >= 0 goto label11;

        $b39 = 0;

        goto label12;

     label11:
        $b39 = line[a#14];

     label12:
        $s24 = 255 & $b39;

        $b22 = previousLine[x#13];

        $s23 = 255 & $b22;

        $i25 = $s24 + $s23;

        $i26 = $i25 / 2;

        $i28 = $b27 + $i26;

        $b29 = (byte) $i28;

        line[$i31] = $b29;

        x#13 = x#13 + 1;

        a#14 = a#14 + 1;

        goto label10;

     label13:
        goto label17;

     label14:
        $i11 = sampleBitCount / 8;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i11);

        $i13 = $i12 - 1;

        previous#16 = neg $i13;

        x#17 = 1;

        a#18 = previous#16;

     label15:
        $i14 = lengthof line;

        if x#17 >= $i14 goto label16;

        result = specialinvoke this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: int paethPredictor(byte[],byte[],int,int)>(line, previousLine, x#17, a#18);

        $b15 = line[x#17];

        $i16 = $b15 + result;

        $b17 = (byte) $i16;

        line[x#17] = $b17;

        x#17 = x#17 + 1;

        a#18 = a#18 + 1;

        goto label15;

     label16:
        goto label17;

     label17:
        $b40 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        line[0] = $b40;

        $b41 = virtualinvoke previousFilterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        previousLine[0] = $b41;

        return;
    }

    public void filter(byte[], byte[], int) throws com.googlecode.pngtastic.core.PngException
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine, original#1, original#7, original#12;
        int sampleBitCount, result, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i19, $i20, $i22, $i25, $i26, $i29, $i31, $i32, $i33, $i34, $i36, $i38, previous#2, x#3, a#4, original#6, previous#8, x#9, a#10, $i40, previous#13, x#14, a#15;
        com.googlecode.pngtastic.core.PngFilterType filterType, previousFilterType;
        byte $b0, $b1, $b8, $b10, $b15, $b16, $b21, $b23, $b27, $b28, $b30, $b35, $b37, $b39, $b41, $b42;
        int[] $r0;
        java.lang.Object $r1, $r2, $r5;
        short $s17, $s18;
        com.googlecode.pngtastic.core.PngException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        sampleBitCount := @parameter2: int;

        $b0 = line[0];

        filterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b0);

        line[0] = 0;

        $b1 = previousLine[0];

        previousFilterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b1);

        previousLine[0] = 0;

        $r0 = <com.googlecode.pngtastic.core.processing.PngtasticFilterHandler$1: int[] $SwitchMap$com$googlecode$pngtastic$core$PngFilterType>;

        $i2 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: int ordinal()>();

        $i3 = $r0[$i2];

        tableswitch($i3)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label07;
            case 4: goto label10;
            case 5: goto label15;
            default: goto label18;
        };

     label01:
        goto label19;

     label02:
        $r5 = virtualinvoke line.<java.lang.Object: java.lang.Object clone()>();

        original#1 = (byte[]) $r5;

        $i31 = sampleBitCount / 8;

        $i32 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i31);

        $i33 = $i32 - 1;

        previous#2 = neg $i33;

        x#3 = 1;

        a#4 = previous#2;

     label03:
        $i34 = lengthof line;

        if x#3 >= $i34 goto label06;

        $i38 = x#3;

        $b35 = original#1[x#3];

        if a#4 >= 0 goto label04;

        $b39 = 0;

        goto label05;

     label04:
        $b39 = original#1[a#4];

     label05:
        $i36 = $b35 - $b39;

        $b37 = (byte) $i36;

        line[$i38] = $b37;

        x#3 = x#3 + 1;

        a#4 = a#4 + 1;

        goto label03;

     label06:
        goto label19;

     label07:
        original#6 = 1;

     label08:
        $i26 = lengthof line;

        if original#6 >= $i26 goto label09;

        $b28 = line[original#6];

        $b27 = previousLine[original#6];

        $i29 = $b28 - $b27;

        $b30 = (byte) $i29;

        line[original#6] = $b30;

        original#6 = original#6 + 1;

        goto label08;

     label09:
        goto label19;

     label10:
        $r2 = virtualinvoke line.<java.lang.Object: java.lang.Object clone()>();

        original#7 = (byte[]) $r2;

        $i11 = sampleBitCount / 8;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i11);

        $i13 = $i12 - 1;

        previous#8 = neg $i13;

        x#9 = 1;

        a#10 = previous#8;

     label11:
        $i14 = lengthof line;

        if x#9 >= $i14 goto label14;

        $i25 = x#9;

        $b21 = original#7[x#9];

        if a#10 >= 0 goto label12;

        $i40 = 0;

        goto label13;

     label12:
        $i40 = a#10;

     label13:
        $b15 = original#7[$i40];

        $s18 = 255 & $b15;

        $b16 = previousLine[x#9];

        $s17 = 255 & $b16;

        $i19 = $s18 + $s17;

        $i20 = $i19 / 2;

        $i22 = $b21 - $i20;

        $b23 = (byte) $i22;

        line[$i25] = $b23;

        x#9 = x#9 + 1;

        a#10 = a#10 + 1;

        goto label11;

     label14:
        goto label19;

     label15:
        $r1 = virtualinvoke line.<java.lang.Object: java.lang.Object clone()>();

        original#12 = (byte[]) $r1;

        $i4 = sampleBitCount / 8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        $i6 = $i5 - 1;

        previous#13 = neg $i6;

        x#14 = 1;

        a#15 = previous#13;

     label16:
        $i7 = lengthof line;

        if x#14 >= $i7 goto label17;

        result = specialinvoke this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: int paethPredictor(byte[],byte[],int,int)>(original#12, previousLine, x#14, a#15);

        $b8 = original#12[x#14];

        $i9 = $b8 - result;

        $b10 = (byte) $i9;

        line[x#14] = $b10;

        x#14 = x#14 + 1;

        a#15 = a#15 + 1;

        goto label16;

     label17:
        goto label19;

     label18:
        $r7 = new com.googlecode.pngtastic.core.PngException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized filter type ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(filterType);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label19:
        $b41 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        line[0] = $b41;

        $b42 = virtualinvoke previousFilterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        previousLine[0] = $b42;

        return;
    }

    private int paethPredictor(byte[], byte[], int, int)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int x, xp, p, pa, pb, pc, $i1, $i2, $i3, $i4, $i9, $i10, $i11;
        short a, b, c, $s12;
        byte $b0, $b7, $b8;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        x := @parameter2: int;

        xp := @parameter3: int;

        if xp >= 0 goto label01;

        $b7 = 0;

        goto label02;

     label01:
        $b7 = line[xp];

     label02:
        a = 255 & $b7;

        $b0 = previousLine[x];

        b = 255 & $b0;

        if xp >= 0 goto label03;

        $b8 = 0;

        goto label04;

     label03:
        $b8 = previousLine[xp];

     label04:
        c = 255 & $b8;

        $i1 = a + b;

        p = $i1 - c;

        if p < a goto label05;

        $i9 = p - a;

        goto label06;

     label05:
        $i2 = p - a;

        $i9 = neg $i2;

     label06:
        pa = $i9;

        if p < b goto label07;

        $i10 = p - b;

        goto label08;

     label07:
        $i3 = p - b;

        $i10 = neg $i3;

     label08:
        pb = $i10;

        if p < c goto label09;

        $i11 = p - c;

        goto label10;

     label09:
        $i4 = p - c;

        $i11 = neg $i4;

     label10:
        pc = $i11;

        if pa > pb goto label11;

        if pa > pc goto label11;

        return a;

     label11:
        if pb > pc goto label12;

        $s12 = b;

        goto label13;

     label12:
        $s12 = c;

     label13:
        return $s12;
    }


