    void <init>(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal$1)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0, l1;
        java.lang.ThreadLocal$1 l2;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal$ThreadLocalMap;

        l2 := @parameter1: java.lang.ThreadLocal$1;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>(l1);

        return;
    }

    private void <init>(java.lang.ThreadLocal$ThreadLocalMap)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0, l1;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l2, $r0, $r4, $r6;
        int l3, l4#14, $i0, $i1, l9#38, $i2, $i3;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l5, l8, $r3, $r5;
        java.lang.ThreadLocal l6;
        java.lang.Object l7, $r1, $r2;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal$ThreadLocalMap;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = 0;

        l2 = l1.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l3 = lengthof l2;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void setThreshold(int)>(l3);

        $r0 = newarray (java.lang.ThreadLocal$ThreadLocalMap$Entry)[l3];

        l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table> = $r0;

        l4#14 = 0;

     label1:
        if l4#14 >= l3 goto label5;

        l5 = l2[l4#14];

        if l5 == null goto label4;

        $r1 = virtualinvoke l5.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        l6 = (java.lang.ThreadLocal) $r1;

        if l6 == null goto label4;

        $r2 = l5.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value>;

        l7 = virtualinvoke l6.<java.lang.ThreadLocal: java.lang.Object childValue(java.lang.Object)>($r2);

        $r3 = new java.lang.ThreadLocal$ThreadLocalMap$Entry;

        specialinvoke $r3.<java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>(l6, l7);

        l8 = $r3;

        $i0 = staticinvoke <java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>(l6);

        $i1 = l3 - 1;

        l9#38 = $i0 & $i1;

     label2:
        $r4 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        $r5 = $r4[l9#38];

        if $r5 == null goto label3;

        l9#38 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l9#38, l3);

        goto label2;

     label3:
        $r6 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        $r6[l9#38] = l8;

        $i2 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int size>;

        $i3 = $i2 + 1;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = $i3;

     label4:
        l4#14 = l4#14 + 1;

        goto label1;

     label5:
        return;
    }

    private static int nextIndex(int, int)
    {
        int l0, l1, $i0, $i1;

        l0 := @parameter0: int;

        l1 := @parameter1: int;

        $i0 = l0 + 1;

        if $i0 >= l1 goto label1;

        $i1 = l0 + 1;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    private void setThreshold(int)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        int l1, $i0, $i1;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: int;

        $i0 = l1 * 2;

        $i1 = $i0 / 3;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int threshold> = $i1;

        return;
    }

    static void access$100(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal, java.lang.Object)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1;
        java.lang.Object l2;

        l0 := @parameter0: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter1: java.lang.ThreadLocal;

        l2 := @parameter2: java.lang.Object;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void set(java.lang.ThreadLocal,java.lang.Object)>(l1, l2);

        return;
    }

    void <init>(java.lang.ThreadLocal, java.lang.Object)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1;
        java.lang.Object l2;
        int l3, $i0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry $r0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] $r1, $r2;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal;

        l2 := @parameter1: java.lang.Object;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = 0;

        $r1 = newarray (java.lang.ThreadLocal$ThreadLocalMap$Entry)[16];

        l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table> = $r1;

        $i0 = staticinvoke <java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>(l1);

        l3 = $i0 & 15;

        $r2 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        $r0 = new java.lang.ThreadLocal$ThreadLocalMap$Entry;

        specialinvoke $r0.<java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>(l1, l2);

        $r2[l3] = $r0;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = 1;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void setThreshold(int)>(16);

        return;
    }

    private void set(java.lang.ThreadLocal, java.lang.Object)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1, l7;
        java.lang.Object l2, $r0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l3;
        int l4, $i0, $i1, l5#11, $i2, $i3, $i4, l6#47, $i5;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l6#15, $r1;
        boolean $z0;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal;

        l2 := @parameter1: java.lang.Object;

        l3 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l4 = lengthof l3;

        $i0 = staticinvoke <java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>(l1);

        $i1 = l4 - 1;

        l5#11 = $i0 & $i1;

        l6#15 = l3[l5#11];

     label1:
        if l6#15 == null goto label4;

        $r0 = virtualinvoke l6#15.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        l7 = (java.lang.ThreadLocal) $r0;

        if l7 != l1 goto label2;

        l6#15.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value> = l2;

        return;

     label2:
        if l7 != null goto label3;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int)>(l1, l2, l5#11);

        return;

     label3:
        $i2 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l5#11, l4);

        l5#11 = $i2;

        l6#15 = l3[$i2];

        goto label1;

     label4:
        $r1 = new java.lang.ThreadLocal$ThreadLocalMap$Entry;

        specialinvoke $r1.<java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>(l1, l2);

        l3[l5#11] = $r1;

        $i3 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int size>;

        $i4 = $i3 + 1;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = $i4;

        l6#47 = $i4;

        $z0 = specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: boolean cleanSomeSlots(int,int)>(l5#11, l6#47);

        if $z0 != 0 goto label5;

        $i5 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int threshold>;

        if l6#47 < $i5 goto label5;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void rehash()>();

     label5:
        return;
    }

    private void replaceStaleEntry(java.lang.ThreadLocal, java.lang.Object, int)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1, l9;
        java.lang.Object l2, $r1, $r3;
        int l3, l5, l7#6, l8#10, l8#25, $i0, $i1;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l4;
        java.lang.ThreadLocal$ThreadLocalMap$Entry $r0, l6#15, $r2, l6#30, $r4, $r5, $r6;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal;

        l2 := @parameter1: java.lang.Object;

        l3 := @parameter2: int;

        l4 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l5 = lengthof l4;

        l7#6 = l3;

        l8#10 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int prevIndex(int,int)>(l3, l5);

     label1:
        $r0 = l4[l8#10];

        l6#15 = $r0;

        if $r0 == null goto label3;

        $r1 = virtualinvoke l6#15.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        if $r1 != null goto label2;

        l7#6 = l8#10;

     label2:
        l8#10 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int prevIndex(int,int)>(l8#10, l5);

        goto label1;

     label3:
        l8#25 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l3, l5);

     label4:
        $r2 = l4[l8#25];

        l6#30 = $r2;

        if $r2 == null goto label8;

        $r3 = virtualinvoke l6#30.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        l9 = (java.lang.ThreadLocal) $r3;

        if l9 != l1 goto label6;

        l6#30.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value> = l2;

        $r4 = l4[l3];

        l4[l8#25] = $r4;

        l4[l3] = l6#30;

        if l7#6 != l3 goto label5;

        l7#6 = l8#25;

     label5:
        $i0 = specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>(l7#6);

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: boolean cleanSomeSlots(int,int)>($i0, l5);

        return;

     label6:
        if l9 != null goto label7;

        if l7#6 != l3 goto label7;

        l7#6 = l8#25;

     label7:
        l8#25 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l8#25, l5);

        goto label4;

     label8:
        $r5 = l4[l3];

        $r5.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value> = null;

        $r6 = new java.lang.ThreadLocal$ThreadLocalMap$Entry;

        specialinvoke $r6.<java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>(l1, l2);

        l4[l3] = $r6;

        if l7#6 == l3 goto label9;

        $i1 = specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>(l7#6);

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: boolean cleanSomeSlots(int,int)>($i1, l5);

     label9:
        return;
    }

    private boolean cleanSomeSlots(int, int)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l4;
        int l5, l1#1, l2#2, $i0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l6;
        boolean l3#4;
        java.lang.Object $r0;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1#1 := @parameter0: int;

        l2#2 := @parameter1: int;

        l3#4 = 0;

        l4 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l5 = lengthof l4;

     label1:
        l1#1 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l1#1, l5);

        l6 = l4[l1#1];

        if l6 == null goto label2;

        $r0 = virtualinvoke l6.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        if $r0 != null goto label2;

        l2#2 = l5;

        l3#4 = 1;

        l1#1 = specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>(l1#1);

     label2:
        $i0 = l2#2 >>> 1;

        l2#2 = $i0;

        if $i0 != 0 goto label1;

        return l3#4;
    }

    private void rehash()
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        int $i0, $i1, $i2, $i3, $i4;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void expungeStaleEntries()>();

        $i0 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int size>;

        $i1 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int threshold>;

        $i2 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int threshold>;

        $i3 = $i2 / 4;

        $i4 = $i1 - $i3;

        if $i0 < $i4 goto label1;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void resize()>();

     label1:
        return;
    }

    private static int prevIndex(int, int)
    {
        int l0, l1, $i0, $i1;

        l0 := @parameter0: int;

        l1 := @parameter1: int;

        $i0 = l0 - 1;

        if $i0 < 0 goto label1;

        $i1 = l0 - 1;

        goto label2;

     label1:
        $i1 = l1 - 1;

     label2:
        return $i1;
    }

    private void expungeStaleEntries()
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l1;
        int l2, l3#6;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l4;
        java.lang.Object $r0;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l2 = lengthof l1;

        l3#6 = 0;

     label1:
        if l3#6 >= l2 goto label3;

        l4 = l1[l3#6];

        if l4 == null goto label2;

        $r0 = virtualinvoke l4.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        if $r0 != null goto label2;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>(l3#6);

     label2:
        l3#6 = l3#6 + 1;

        goto label1;

     label3:
        return;
    }

    private void resize()
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l1, l4;
        int l2, l3, l5#11, l6#13, $i0, $i1, l9#32;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l7, $r1;
        java.lang.ThreadLocal l8;
        java.lang.Object $r0;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l2 = lengthof l1;

        l3 = l2 * 2;

        l4 = newarray (java.lang.ThreadLocal$ThreadLocalMap$Entry)[l3];

        l5#11 = 0;

        l6#13 = 0;

     label1:
        if l6#13 >= l2 goto label6;

        l7 = l1[l6#13];

        if l7 == null goto label5;

        $r0 = virtualinvoke l7.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        l8 = (java.lang.ThreadLocal) $r0;

        if l8 != null goto label2;

        l7.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value> = null;

        goto label5;

     label2:
        $i0 = staticinvoke <java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>(l8);

        $i1 = l3 - 1;

        l9#32 = $i0 & $i1;

     label3:
        $r1 = l4[l9#32];

        if $r1 == null goto label4;

        l9#32 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l9#32, l3);

        goto label3;

     label4:
        l4[l9#32] = l7;

        l5#11 = l5#11 + 1;

     label5:
        l6#13 = l6#13 + 1;

        goto label1;

     label6:
        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: void setThreshold(int)>(l3);

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = l5#11;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table> = l4;

        return;
    }

    private int expungeStaleEntry(int)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        int l1, l3, $i0, $i1, l5#20, $i2, $i3, $i4, $i5, l7#45;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l2;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l4, $r0, $r2, $r5;
        java.lang.ThreadLocal l6;
        java.lang.Object $r3;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: int;

        l2 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l3 = lengthof l2;

        $r0 = l2[l1];

        $r0.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value> = null;

        l2[l1] = null;

        $i0 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int size>;

        $i1 = $i0 - 1;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = $i1;

        l5#20 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l1, l3);

     label1:
        $r2 = l2[l5#20];

        l4 = $r2;

        if $r2 == null goto label6;

        $r3 = virtualinvoke l4.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        l6 = (java.lang.ThreadLocal) $r3;

        if l6 != null goto label2;

        l4.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value> = null;

        l2[l5#20] = null;

        $i2 = l0.<java.lang.ThreadLocal$ThreadLocalMap: int size>;

        $i3 = $i2 - 1;

        l0.<java.lang.ThreadLocal$ThreadLocalMap: int size> = $i3;

        goto label5;

     label2:
        $i4 = staticinvoke <java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>(l6);

        $i5 = l3 - 1;

        l7#45 = $i4 & $i5;

        if l7#45 == l5#20 goto label5;

        l2[l5#20] = null;

     label3:
        $r5 = l2[l7#45];

        if $r5 == null goto label4;

        l7#45 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l7#45, l3);

        goto label3;

     label4:
        l2[l7#45] = l4;

     label5:
        l5#20 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l5#20, l3);

        goto label1;

     label6:
        return l5#20;
    }

    static java.lang.ThreadLocal$ThreadLocalMap$Entry access$000(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1;
        java.lang.ThreadLocal$ThreadLocalMap$Entry $r0;

        l0 := @parameter0: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter1: java.lang.ThreadLocal;

        $r0 = specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry getEntry(java.lang.ThreadLocal)>(l1);

        return $r0;
    }

    private java.lang.ThreadLocal$ThreadLocalMap$Entry getEntry(java.lang.ThreadLocal)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1;
        int l2, $i0, $i1, $i2;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l3, $r3;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] $r0, $r1;
        java.lang.Object $r2;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal;

        $i0 = staticinvoke <java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>(l1);

        $r0 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        $i1 = lengthof $r0;

        $i2 = $i1 - 1;

        l2 = $i0 & $i2;

        $r1 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l3 = $r1[l2];

        if l3 == null goto label1;

        $r2 = virtualinvoke l3.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        if $r2 != l1 goto label1;

        return l3;

     label1:
        $r3 = specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry getEntryAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)>(l1, l2, l3);

        return $r3;
    }

    private java.lang.ThreadLocal$ThreadLocalMap$Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal$ThreadLocalMap$Entry)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0;
        java.lang.ThreadLocal l1, l6;
        java.lang.ThreadLocal$ThreadLocalMap$Entry[] l4;
        int l5, l2#1;
        java.lang.ThreadLocal$ThreadLocalMap$Entry l3#2;
        java.lang.Object $r0;

        l0 := @this: java.lang.ThreadLocal$ThreadLocalMap;

        l1 := @parameter0: java.lang.ThreadLocal;

        l2#1 := @parameter1: int;

        l3#2 := @parameter2: java.lang.ThreadLocal$ThreadLocalMap$Entry;

        l4 = l0.<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>;

        l5 = lengthof l4;

     label1:
        if l3#2 == null goto label5;

        $r0 = virtualinvoke l3#2.<java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object get()>();

        l6 = (java.lang.ThreadLocal) $r0;

        if l6 != l1 goto label2;

        return l3#2;

     label2:
        if l6 != null goto label3;

        specialinvoke l0.<java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>(l2#1);

        goto label4;

     label3:
        l2#1 = staticinvoke <java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>(l2#1, l5);

     label4:
        l3#2 = l4[l2#1];

        goto label1;

     label5:
        return null;
    }


