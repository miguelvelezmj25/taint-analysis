    public void <init>(berkeley.com.sleepycat.util.keyrange.KeyRange, berkeley.com.sleepycat.util.keyrange.KeyRange, boolean, berkeley.com.sleepycat.je.Cursor)
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.util.keyrange.KeyRange range, pkRange;
        boolean sortedDups, $z0;
        berkeley.com.sleepycat.je.Cursor cursor;
        java.lang.IllegalArgumentException $r0, $r2;
        berkeley.com.sleepycat.je.SecondaryCursor $r1;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        range := @parameter0: berkeley.com.sleepycat.util.keyrange.KeyRange;

        pkRange := @parameter1: berkeley.com.sleepycat.util.keyrange.KeyRange;

        sortedDups := @parameter2: boolean;

        cursor := @parameter3: berkeley.com.sleepycat.je.Cursor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        goto label1;

     label1:
        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range> = range;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange> = null;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean sortedDups> = sortedDups;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor> = cursor;

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void init()>();

        goto label2;

     label2:
        return;
    }

    private void init()
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.Cursor $r0, $r1;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.SecondaryCursor $r2;
        berkeley.com.sleepycat.util.keyrange.KeyRange $r3;
        berkeley.com.sleepycat.je.DatabaseEntry $r4, $r5, $r6;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $z0 = $r0 instanceof berkeley.com.sleepycat.je.SecondaryCursor;

        if $z0 == 0 goto label1;

        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r2 = (berkeley.com.sleepycat.je.SecondaryCursor) $r1;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor> = $r2;

        goto label2;

     label1:
        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor> = null;

     label2:
        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $z1 = virtualinvoke $r3.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean hasBound()>();

        if $z1 == 0 goto label3;

        $r4 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r4.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey> = $r4;

        $r5 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r5.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey> = $r5;

        $r6 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r6.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData> = $r6;

        goto label4;

     label3:
        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey> = null;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey> = null;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData> = null;

     label4:
        return;
    }

    public void close() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.Cursor $r0;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void closeCursor(berkeley.com.sleepycat.je.Cursor)>($r0);

        return;
    }

    protected void closeCursor(berkeley.com.sleepycat.je.Cursor) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.Cursor cursor;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        cursor := @parameter0: berkeley.com.sleepycat.je.Cursor;

        virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: void close()>();

        return;
    }

    public berkeley.com.sleepycat.compat.DbCompat$OpResult getNext(berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.DatabaseEntry key, pKey, data, $r4, $r6, $r10;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        java.lang.Throwable l7, l8, $r7, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r0, result#19, result#35;
        berkeley.com.sleepycat.util.keyrange.KeyRange $r1, $r2, $r3, $r5, $r8, $r9;
        berkeley.com.sleepycat.je.Cursor oldCursor#45, oldCursor#87;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        key := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        data := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        options := @parameter3: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $z0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean initialized>;

        if $z0 != 0 goto label01;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult getFirst(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(key, pKey, data, options);

        return $r0;

     label01:
        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $z1 = virtualinvoke $r1.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean hasBound()>();

        if $z1 != 0 goto label02;

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void setParams(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(key, pKey, data);

        result#19 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNext(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(null, result#19, null, null, null);

        return result#19;

     label02:
        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        if $r2 == null goto label10;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r4 = $r3.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry endKey>;

        if $r4 != null goto label03;

        result#35 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(null, result#35, key, pKey, data);

        goto label17;

     label03:
        result#35 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        oldCursor#45 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor beginOperation()>();

     label04:
        result#35 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        $z2 = virtualinvoke result#35.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z2 == 0 goto label05;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $z3 = virtualinvoke $r5.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean checkEnd(berkeley.com.sleepycat.je.DatabaseEntry,boolean)>($r6, 1);

        if $z3 != 0 goto label05;

        result#35 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

     label05:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#45, result#35, key, pKey, data);

        goto label09;

     label06:
        $r7 := @caughtexception;

     label07:
        l7 = $r7;

     label08:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#45, result#35, key, pKey, data);

        throw l7;

     label09:
        goto label17;

     label10:
        $r8 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $z4 = $r8.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean singleKey>;

        if $z4 == 0 goto label11;

        result#35 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(null, result#35, key, pKey, data);

        goto label17;

     label11:
        result#35 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        oldCursor#87 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor beginOperation()>();

     label12:
        result#35 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNext(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        $z5 = virtualinvoke result#35.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z5 == 0 goto label13;

        $r9 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r10 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $z6 = virtualinvoke $r9.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean check(berkeley.com.sleepycat.je.DatabaseEntry)>($r10);

        if $z6 != 0 goto label13;

        result#35 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

     label13:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#87, result#35, key, pKey, data);

        goto label17;

     label14:
        $r11 := @caughtexception;

     label15:
        l8 = $r11;

     label16:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#87, result#35, key, pKey, data);

        throw l8;

     label17:
        return result#35;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public berkeley.com.sleepycat.compat.DbCompat$OpResult getFirst(berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.DatabaseEntry key, pKey, data, $r4, $r5, $r7, $r8, $r11, $r12, $r14, $r16, $r17, $r20, $r22, $r24, $r28, $r29, $r31, $r33, $r34, $r37, $r39, $r41;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        java.lang.Throwable l7, l8, $r25, $r42;
        berkeley.com.sleepycat.util.keyrange.KeyRange $r0, $r1, $r2, $r3, $r6, $r9, $r10, $r13, $r15, $r18, $r19, $r21, $r23, $r26, $r27, $r30, $r32, $r35, $r36, $r38, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        berkeley.com.sleepycat.compat.DbCompat$OpResult result#11, result#37, result#53;
        berkeley.com.sleepycat.je.Cursor oldCursor#56, oldCursor#131;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        key := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        data := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        options := @parameter3: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean hasBound()>();

        if $z0 != 0 goto label01;

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void setParams(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(key, pKey, data);

        result#11 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetFirst(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(null, result#11, null, null, null);

        return result#11;

     label01:
        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        if $r1 == null goto label02;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $z1 = virtualinvoke $r2.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean isSingleKey()>();

        if $z1 == 0 goto label02;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r4 = $r3.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.KeyRange: void copy(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r4, $r5);

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r7 = $r6.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $r8 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.KeyRange: void copy(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r7, $r8);

        result#37 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchBoth(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(null, result#37, key, pKey, data);

        return result#37;

     label02:
        $r9 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        if $r9 == null goto label12;

        $r10 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r11 = $r10.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.KeyRange: void copy(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r11, $r12);

        result#53 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        oldCursor#56 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor beginOperation()>();

     label03:
        $r13 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r14 = $r13.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        if $r14 == null goto label04;

        $z2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean sortedDups>;

        if $z2 != 0 goto label05;

     label04:
        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchKey(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        goto label06;

     label05:
        $r15 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r16 = $r15.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $r17 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.KeyRange: void copy(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r16, $r17);

        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchBothRange(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        $z3 = virtualinvoke result#53.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z3 == 0 goto label06;

        $r18 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $z4 = $r18.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean beginInclusive>;

        if $z4 != 0 goto label06;

        $r19 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r20 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r21 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r22 = $r21.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $i0 = virtualinvoke $r19.<berkeley.com.sleepycat.util.keyrange.KeyRange: int compare(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r20, $r22);

        if $i0 != 0 goto label06;

        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

     label06:
        $z5 = virtualinvoke result#53.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z5 == 0 goto label07;

        $r23 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange pkRange>;

        $r24 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $z6 = virtualinvoke $r23.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean check(berkeley.com.sleepycat.je.DatabaseEntry)>($r24);

        if $z6 != 0 goto label07;

        result#53 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

     label07:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#56, result#53, key, pKey, data);

        goto label11;

     label08:
        $r25 := @caughtexception;

     label09:
        l7 = $r25;

     label10:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#56, result#53, key, pKey, data);

        throw l7;

     label11:
        goto label21;

     label12:
        $r26 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $z7 = $r26.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean singleKey>;

        if $z7 == 0 goto label13;

        $r27 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r28 = $r27.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $r29 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.KeyRange: void copy(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r28, $r29);

        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchKey(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(null, result#53, key, pKey, data);

        goto label21;

     label13:
        result#53 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        oldCursor#131 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor beginOperation()>();

     label14:
        $r30 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r31 = $r30.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        if $r31 != null goto label15;

        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetFirst(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        goto label16;

     label15:
        $r32 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r33 = $r32.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $r34 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.KeyRange: void copy(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r33, $r34);

        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchKeyRange(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

        $z8 = virtualinvoke result#53.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z8 == 0 goto label16;

        $r35 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $z9 = $r35.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean beginInclusive>;

        if $z9 != 0 goto label16;

        $r36 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r37 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r38 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r39 = $r38.<berkeley.com.sleepycat.util.keyrange.KeyRange: berkeley.com.sleepycat.je.DatabaseEntry beginKey>;

        $i1 = virtualinvoke $r36.<berkeley.com.sleepycat.util.keyrange.KeyRange: int compare(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r37, $r39);

        if $i1 != 0 goto label16;

        result#53 = specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextNoDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions)>(options);

     label16:
        $z10 = virtualinvoke result#53.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z10 == 0 goto label17;

        $r40 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.util.keyrange.KeyRange range>;

        $r41 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $z11 = virtualinvoke $r40.<berkeley.com.sleepycat.util.keyrange.KeyRange: boolean check(berkeley.com.sleepycat.je.DatabaseEntry)>($r41);

        if $z11 != 0 goto label17;

        result#53 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

     label17:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#131, result#53, key, pKey, data);

        goto label21;

     label18:
        $r42 := @caughtexception;

     label19:
        l8 = $r42;

     label20:
        specialinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void endOperation(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.compat.DbCompat$OpResult,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(oldCursor#131, result#53, key, pKey, data);

        throw l8;

     label21:
        return result#53;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label14 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    private void setParams(berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry)
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.DatabaseEntry key, pKey, data;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        key := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        data := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey> = key;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey> = pKey;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData> = data;

        return;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNext(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        berkeley.com.sleepycat.je.SecondaryCursor $r0, $r2;
        berkeley.com.sleepycat.je.DatabaseEntry $r1, $r3, $r4, $r5, $r11, $r12;
        berkeley.com.sleepycat.je.Get $r6, $r13;
        berkeley.com.sleepycat.je.ReadOptions $r7, $r14;
        berkeley.com.sleepycat.je.OperationResult $r8, $r15;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r9, $r16;
        berkeley.com.sleepycat.je.Cursor $r10;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r6 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get NEXT>;

        $r7 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r8 = virtualinvoke $r2.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r3, $r4, $r5, $r6, $r7);

        $r9 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r8);

        return $r9;

     label1:
        $r10 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r11 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r13 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get NEXT>;

        $r14 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r15 = virtualinvoke $r10.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r11, $r12, $r13, $r14);

        $r16 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r15);

        return $r16;
    }

    private void endOperation(berkeley.com.sleepycat.je.Cursor, berkeley.com.sleepycat.compat.DbCompat$OpResult, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.Cursor oldCursor, $r0, $r5, $r6, $r8;
        berkeley.com.sleepycat.compat.DbCompat$OpResult result;
        berkeley.com.sleepycat.je.DatabaseEntry key, pKey, data, $r1, $r3, $r4;
        boolean $z0;
        berkeley.com.sleepycat.je.SecondaryCursor $r2, $r7, $r9;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        oldCursor := @parameter0: berkeley.com.sleepycat.je.Cursor;

        result := @parameter1: berkeley.com.sleepycat.compat.DbCompat$OpResult;

        key := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        pKey := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry;

        data := @parameter4: berkeley.com.sleepycat.je.DatabaseEntry;

        $z0 = virtualinvoke result.<berkeley.com.sleepycat.compat.DbCompat$OpResult: boolean isSuccess()>();

        if $z0 == 0 goto label5;

        if oldCursor == null goto label1;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        if oldCursor == $r0 goto label1;

        virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void closeCursor(berkeley.com.sleepycat.je.Cursor)>(oldCursor);

     label1:
        if key == null goto label2;

        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.RangeCursor: void swapData(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(key, $r1);

     label2:
        if pKey == null goto label3;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r2 == null goto label3;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.RangeCursor: void swapData(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(pKey, $r3);

     label3:
        if data == null goto label4;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        staticinvoke <berkeley.com.sleepycat.util.keyrange.RangeCursor: void swapData(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(data, $r4);

     label4:
        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean initialized> = 1;

        goto label6;

     label5:
        if oldCursor == null goto label6;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        if oldCursor == $r5 goto label6;

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: void closeCursor(berkeley.com.sleepycat.je.Cursor)>($r6);

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor> = oldCursor;

        $r7 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r7 == null goto label6;

        $r8 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r9 = (berkeley.com.sleepycat.je.SecondaryCursor) $r8;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor> = $r9;

     label6:
        return;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        berkeley.com.sleepycat.je.SecondaryCursor $r0, $r2;
        berkeley.com.sleepycat.je.DatabaseEntry $r1, $r3, $r4, $r5, $r11, $r12;
        berkeley.com.sleepycat.je.Get $r6, $r13;
        berkeley.com.sleepycat.je.ReadOptions $r7, $r14;
        berkeley.com.sleepycat.je.OperationResult $r8, $r15;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r9, $r16;
        berkeley.com.sleepycat.je.Cursor $r10;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r6 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get NEXT_DUP>;

        $r7 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r8 = virtualinvoke $r2.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r3, $r4, $r5, $r6, $r7);

        $r9 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r8);

        return $r9;

     label1:
        $r10 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r11 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r13 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get NEXT_DUP>;

        $r14 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r15 = virtualinvoke $r10.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r11, $r12, $r13, $r14);

        $r16 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r15);

        return $r16;
    }

    private berkeley.com.sleepycat.je.Cursor beginOperation() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.Cursor oldCursor, $r0, $r1, $r3, $r5;
        boolean $z0;
        berkeley.com.sleepycat.je.SecondaryCursor $r2, $r4;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        oldCursor = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $z0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean initialized>;

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r1 = virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor dupCursor(berkeley.com.sleepycat.je.Cursor,boolean)>($r0, 1);

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor> = $r1;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r2 == null goto label2;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r4 = (berkeley.com.sleepycat.je.SecondaryCursor) $r3;

        this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor> = $r4;

        goto label2;

     label1:
        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        return $r5;

     label2:
        return oldCursor;
    }

    private static void swapData(berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry)
    {
        berkeley.com.sleepycat.je.DatabaseEntry e1, e2;
        byte[] d1, $r0;
        int o1, s1, $i0, $i1;

        e1 := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry;

        e2 := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        d1 = virtualinvoke e1.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        o1 = virtualinvoke e1.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>();

        s1 = virtualinvoke e1.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>();

        $r0 = virtualinvoke e2.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i0 = virtualinvoke e2.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $i1 = virtualinvoke e2.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>();

        virtualinvoke e1.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>($r0, $i0, $i1);

        virtualinvoke e2.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(d1, o1, s1);

        return;
    }

    protected berkeley.com.sleepycat.je.Cursor dupCursor(berkeley.com.sleepycat.je.Cursor, boolean) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.je.Cursor cursor, $r0;
        boolean samePosition;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        cursor := @parameter0: berkeley.com.sleepycat.je.Cursor;

        samePosition := @parameter1: boolean;

        $r0 = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.Cursor dup(boolean)>(1);

        return $r0;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetFirst(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        berkeley.com.sleepycat.je.SecondaryCursor $r0, $r2;
        berkeley.com.sleepycat.je.DatabaseEntry $r1, $r3, $r4, $r5, $r11, $r12;
        berkeley.com.sleepycat.je.Get $r6, $r13;
        berkeley.com.sleepycat.je.ReadOptions $r7, $r14;
        berkeley.com.sleepycat.je.OperationResult $r8, $r15;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r9, $r16;
        berkeley.com.sleepycat.je.Cursor $r10;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r6 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get FIRST>;

        $r7 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r8 = virtualinvoke $r2.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r3, $r4, $r5, $r6, $r7);

        $r9 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r8);

        return $r9;

     label1:
        $r10 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r11 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r13 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get FIRST>;

        $r14 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r15 = virtualinvoke $r10.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r11, $r12, $r13, $r14);

        $r16 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r15);

        return $r16;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchBoth(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        boolean $z0;
        berkeley.com.sleepycat.je.DatabaseEntry $r0, $r3, $r5, $r6, $r7, $r13, $r14;
        int $i0;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r1, $r11, $r18;
        berkeley.com.sleepycat.je.SecondaryCursor $r2, $r4;
        berkeley.com.sleepycat.je.Get $r8, $r15;
        berkeley.com.sleepycat.je.ReadOptions $r9, $r16;
        berkeley.com.sleepycat.je.OperationResult $r10, $r17;
        berkeley.com.sleepycat.je.Cursor $r12;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean checkRecordNumber()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $i0 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: int getRecordNumber(berkeley.com.sleepycat.je.DatabaseEntry)>($r0);

        if $i0 > 0 goto label1;

        $r1 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        return $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r2 == null goto label2;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r3 == null goto label2;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r7 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r8 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH_BOTH>;

        $r9 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r10 = virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r5, $r6, $r7, $r8, $r9);

        $r11 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r10);

        return $r11;

     label2:
        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r13 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r14 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r15 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH_BOTH>;

        $r16 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r17 = virtualinvoke $r12.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r13, $r14, $r15, $r16);

        $r18 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r17);

        return $r18;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchKey(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        boolean $z0;
        berkeley.com.sleepycat.je.DatabaseEntry $r0, $r3, $r5, $r6, $r7, $r13, $r14;
        int $i0;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r1, $r11, $r18;
        berkeley.com.sleepycat.je.SecondaryCursor $r2, $r4;
        berkeley.com.sleepycat.je.Get $r8, $r15;
        berkeley.com.sleepycat.je.ReadOptions $r9, $r16;
        berkeley.com.sleepycat.je.OperationResult $r10, $r17;
        berkeley.com.sleepycat.je.Cursor $r12;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean checkRecordNumber()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $i0 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: int getRecordNumber(berkeley.com.sleepycat.je.DatabaseEntry)>($r0);

        if $i0 > 0 goto label1;

        $r1 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        return $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r2 == null goto label2;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r3 == null goto label2;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r7 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r8 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH>;

        $r9 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r10 = virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r5, $r6, $r7, $r8, $r9);

        $r11 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r10);

        return $r11;

     label2:
        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r13 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r14 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r15 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH>;

        $r16 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r17 = virtualinvoke $r12.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r13, $r14, $r15, $r16);

        $r18 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r17);

        return $r18;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchBothRange(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        boolean $z0;
        berkeley.com.sleepycat.je.DatabaseEntry $r0, $r3, $r5, $r6, $r7, $r13, $r14;
        int $i0;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r1, $r11, $r18;
        berkeley.com.sleepycat.je.SecondaryCursor $r2, $r4;
        berkeley.com.sleepycat.je.Get $r8, $r15;
        berkeley.com.sleepycat.je.ReadOptions $r9, $r16;
        berkeley.com.sleepycat.je.OperationResult $r10, $r17;
        berkeley.com.sleepycat.je.Cursor $r12;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean checkRecordNumber()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $i0 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: int getRecordNumber(berkeley.com.sleepycat.je.DatabaseEntry)>($r0);

        if $i0 > 0 goto label1;

        $r1 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        return $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r2 == null goto label2;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r3 == null goto label2;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r7 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r8 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH_BOTH_GTE>;

        $r9 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r10 = virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r5, $r6, $r7, $r8, $r9);

        $r11 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r10);

        return $r11;

     label2:
        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r13 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r14 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r15 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH_BOTH_GTE>;

        $r16 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r17 = virtualinvoke $r12.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r13, $r14, $r15, $r16);

        $r18 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r17);

        return $r18;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetSearchKeyRange(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        boolean $z0;
        berkeley.com.sleepycat.je.DatabaseEntry $r0, $r3, $r5, $r6, $r7, $r13, $r14;
        int $i0;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r1, $r11, $r18;
        berkeley.com.sleepycat.je.SecondaryCursor $r2, $r4;
        berkeley.com.sleepycat.je.Get $r8, $r15;
        berkeley.com.sleepycat.je.ReadOptions $r9, $r16;
        berkeley.com.sleepycat.je.OperationResult $r10, $r17;
        berkeley.com.sleepycat.je.Cursor $r12;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: boolean checkRecordNumber()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $i0 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: int getRecordNumber(berkeley.com.sleepycat.je.DatabaseEntry)>($r0);

        if $i0 > 0 goto label1;

        $r1 = <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult FAILURE>;

        return $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r2 == null goto label2;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r3 == null goto label2;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r6 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r7 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r8 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH_GTE>;

        $r9 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r10 = virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r5, $r6, $r7, $r8, $r9);

        $r11 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r10);

        return $r11;

     label2:
        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r13 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r14 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r15 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get SEARCH_GTE>;

        $r16 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r17 = virtualinvoke $r12.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r13, $r14, $r15, $r16);

        $r18 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r17);

        return $r18;
    }

    private berkeley.com.sleepycat.compat.DbCompat$OpResult doGetNextNoDup(berkeley.com.sleepycat.compat.DbCompat$OpReadOptions) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;
        berkeley.com.sleepycat.compat.DbCompat$OpReadOptions options;
        berkeley.com.sleepycat.je.SecondaryCursor $r0, $r2;
        berkeley.com.sleepycat.je.DatabaseEntry $r1, $r3, $r4, $r5, $r11, $r12;
        berkeley.com.sleepycat.je.Get $r6, $r13;
        berkeley.com.sleepycat.je.ReadOptions $r7, $r14;
        berkeley.com.sleepycat.je.OperationResult $r8, $r15;
        berkeley.com.sleepycat.compat.DbCompat$OpResult $r9, $r16;
        berkeley.com.sleepycat.je.Cursor $r10;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        options := @parameter0: berkeley.com.sleepycat.compat.DbCompat$OpReadOptions;

        $r0 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.SecondaryCursor secCursor>;

        $r3 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r4 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privPKey>;

        $r5 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r6 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get NEXT_NO_DUP>;

        $r7 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r8 = virtualinvoke $r2.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r3, $r4, $r5, $r6, $r7);

        $r9 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r8);

        return $r9;

     label1:
        $r10 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.Cursor cursor>;

        $r11 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privKey>;

        $r12 = this.<berkeley.com.sleepycat.util.keyrange.RangeCursor: berkeley.com.sleepycat.je.DatabaseEntry privData>;

        $r13 = <berkeley.com.sleepycat.je.Get: berkeley.com.sleepycat.je.Get NEXT_NO_DUP>;

        $r14 = options.<berkeley.com.sleepycat.compat.DbCompat$OpReadOptions: berkeley.com.sleepycat.je.ReadOptions jeOptions>;

        $r15 = virtualinvoke $r10.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>($r11, $r12, $r13, $r14);

        $r16 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat$OpResult: berkeley.com.sleepycat.compat.DbCompat$OpResult make(berkeley.com.sleepycat.je.OperationResult)>($r15);

        return $r16;
    }

    protected boolean checkRecordNumber()
    {
        berkeley.com.sleepycat.util.keyrange.RangeCursor this;

        this := @this: berkeley.com.sleepycat.util.keyrange.RangeCursor;

        return 0;
    }


