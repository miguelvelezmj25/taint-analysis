digraph <clinit> {
"$r0 = class \"org/tukaani/xz/rangecoder/RangeEncoder\" {67564618}" -> "$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {559506053}";
"$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {559506053}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1032439180}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1032439180}" -> "if $z0 != 0 goto $z1 = 0 {2079890788}";
"if $z0 != 0 goto $z1 = 0 {2079890788}" -> "$z1 = 1 {1206201158}";
"if $z0 != 0 goto $z1 = 0 {2079890788}" -> "$z1 = 0 {508901893}";
"$z1 = 1 {1206201158}" -> "goto [?= <org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> = $z1] {1962025812}";
"goto [?= <org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> = $z1] {1962025812}" -> "<org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> = $z1 {570005270}";
"$z1 = 0 {508901893}" -> "<org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> = $z1 {570005270}";
"<org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> = $z1 {570005270}" -> "$r1 = newarray (int)[128] {715478342}";
"$r1 = newarray (int)[128] {715478342}" -> "<org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> = $r1 {496490245}";
"<org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> = $r1 {496490245}" -> "i#7 = 8 {2125028741}";
"i#7 = 8 {2125028741}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7) {140637677}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7) {140637677}" -> "if i#7 >= 2048 goto return {192692309}";
"if i#7 >= 2048 goto return {192692309}" -> "w#11 = i#7 {1729145094}";
"if i#7 >= 2048 goto return {192692309}" -> "return {1902840657}";
"w#11 = i#7 {1729145094}" -> "bitCount#13 = 0 {873642546}";
"bitCount#13 = 0 {873642546}" -> "j#15 = 0 {1159921510}";
"j#15 = 0 {1159921510}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#15) {1309515653}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#15) {1309515653}" -> "if j#15 >= 4 goto $r2 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {82411843}";
"if j#15 >= 4 goto $r2 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {82411843}" -> "w#11 = w#11 * w#11 {703538421}";
"if j#15 >= 4 goto $r2 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {82411843}" -> "$r2 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1832715258}";
"w#11 = w#11 * w#11 {703538421}" -> "bitCount#13 = bitCount#13 << 1 {1305688250}";
"bitCount#13 = bitCount#13 << 1 {1305688250}" -> "$i0 = w#11 & -65536 {2115114722}";
"$i0 = w#11 & -65536 {2115114722}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1818842362}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1818842362}" -> "if $i0 == 0 goto j#15 = j#15 + 1 {709945202}";
"if $i0 == 0 goto j#15 = j#15 + 1 {709945202}" -> "w#11 = w#11 >>> 1 {1684349504}";
"if $i0 == 0 goto j#15 = j#15 + 1 {709945202}" -> "j#15 = j#15 + 1 {1657991342}";
"w#11 = w#11 >>> 1 {1684349504}" -> "bitCount#13 = bitCount#13 + 1 {1368547497}";
"bitCount#13 = bitCount#13 + 1 {1368547497}" -> "goto [?= $i0 = w#11 & -65536] {848970035}";
"goto [?= $i0 = w#11 & -65536] {848970035}" -> "$i0 = w#11 & -65536 {2115114722}";
"j#15 = j#15 + 1 {1657991342}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#15)] {795392406}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#15)] {795392406}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#15) {1309515653}";
"$r2 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1832715258}" -> "$i1 = i#7 >> 4 {386253775}";
"$i1 = i#7 >> 4 {386253775}" -> "$i2 = 161 - bitCount#13 {1316361030}";
"$i2 = 161 - bitCount#13 {1316361030}" -> "$r2[$i1] = $i2 {750181898}";
"$r2[$i1] = $i2 {750181898}" -> "i#7 = i#7 + 16 {1561401692}";
"i#7 = i#7 + 16 {1561401692}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7)] {268031435}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7)] {268031435}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7) {140637677}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7) {140637677}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1818842362}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1032439180}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#15) {1309515653}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {971357175}" -> "specialinvoke this.<org.tukaani.xz.rangecoder.RangeCoder: void <init>()>() {1096079547}";
"specialinvoke this.<org.tukaani.xz.rangecoder.RangeCoder: void <init>()>() {1096079547}" -> "return {1442511205}";
}

digraph reset {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {1702780462}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = 0L {72708279}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = 0L {72708279}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = -1 {2053798568}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = -1 {2053798568}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> = 0 {1780274420}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> = 0 {1780274420}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> = 1L {1066378328}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> = 1L {1066378328}" -> "return {867728425}";
}

digraph finish {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {1982585655}" -> "i#2 = 0 {1160517020}";
"i#2 = 0 {1160517020}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2) {1626082559}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2) {1626082559}" -> "if i#2 >= 5 goto return -1 {1293383645}";
"if i#2 >= 5 goto return -1 {1293383645}" -> "specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void shiftLow()>() {806900943}";
"if i#2 >= 5 goto return -1 {1293383645}" -> "return -1 {1937424935}";
"specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void shiftLow()>() {806900943}" -> "i#2 = i#2 + 1 {1219461857}";
"i#2 = i#2 + 1 {1219461857}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2)] {1047571894}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2)] {1047571894}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2) {1626082559}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2) {1626082559}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph shiftLow {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {162490535}" -> "$l0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1378499693}";
"$l0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1378499693}" -> "$l1 = $l0 >>> 32 {1250263414}";
"$l1 = $l0 >>> 32 {1250263414}" -> "lowHi = (int) $l1 {1470624014}";
"lowHi = (int) $l1 {1470624014}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lowHi) {320628664}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lowHi) {320628664}" -> "if lowHi != 0 goto temp#13 = this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> {10078310}";
"if lowHi != 0 goto temp#13 = this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> {10078310}" -> "$l2 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1821501753}";
"if lowHi != 0 goto temp#13 = this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> {10078310}" -> "temp#13 = this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> {1657349089}";
"$l2 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1821501753}" -> "$b3 = $l2 cmp 4278190080L {1772389570}";
"$b3 = $l2 cmp 4278190080L {1772389570}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3) {2136468105}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3) {2136468105}" -> "if $b3 >= 0 goto $l12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {1602081149}";
"if $b3 >= 0 goto $l12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {1602081149}" -> "temp#13 = this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> {1657349089}";
"if $b3 >= 0 goto $l12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {1602081149}" -> "$l12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {1909714474}";
"temp#13 = this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> {1657349089}" -> "$i4 = temp#13 + lowHi {1845942521}";
"$i4 = temp#13 + lowHi {1845942521}" -> "virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void writeByte(int)>($i4) {865448009}";
"virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void writeByte(int)>($i4) {865448009}" -> "temp#13 = 255 {2006455532}";
"temp#13 = 255 {2006455532}" -> "$l5 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {594294224}";
"$l5 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {594294224}" -> "$l6 = $l5 - 1L {124659809}";
"$l6 = $l5 - 1L {124659809}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> = $l6 {1746211175}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> = $l6 {1746211175}" -> "$b7 = $l6 cmp 0L {1276085761}";
"$b7 = $l6 cmp 0L {1276085761}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b7) {1596113882}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b7) {1596113882}" -> "if $b7 != 0 goto $i4 = temp#13 + lowHi {496922881}";
"if $b7 != 0 goto $i4 = temp#13 + lowHi {496922881}" -> "$l8 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {65413043}";
"if $b7 != 0 goto $i4 = temp#13 + lowHi {496922881}" -> "$i4 = temp#13 + lowHi {1845942521}";
"$l8 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {65413043}" -> "$l9 = $l8 >>> 24 {908765133}";
"$l9 = $l8 >>> 24 {908765133}" -> "$i10 = (int) $l9 {1216330361}";
"$i10 = (int) $l9 {1216330361}" -> "$b11 = (byte) $i10 {2077704002}";
"$b11 = (byte) $i10 {2077704002}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> = $b11 {1699935063}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: byte cache> = $b11 {1699935063}" -> "$l12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {1909714474}";
"$l12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> {1909714474}" -> "$l13 = $l12 + 1L {742698322}";
"$l13 = $l12 + 1L {742698322}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> = $l13 {2029862672}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long cacheSize> = $l13 {2029862672}" -> "$l14 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1471137004}";
"$l14 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1471137004}" -> "$l15 = $l14 & 16777215L {1509018910}";
"$l15 = $l14 & 16777215L {1509018910}" -> "$l16 = $l15 << 8 {1755464918}";
"$l16 = $l15 << 8 {1755464918}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = $l16 {1965097904}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = $l16 {1965097904}" -> "return {577747255}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lowHi) {320628664}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b7) {1596113882}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3) {2136468105}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getBitPrice {
"prob := @parameter0: int {51527331}" -> "bit := @parameter1: int {2139720363}";
"bit := @parameter1: int {2139720363}" -> "$z0 = <org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> {125353641}";
"$z0 = <org.tukaani.xz.rangecoder.RangeEncoder: boolean $assertionsDisabled> {125353641}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1581697609}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1581697609}" -> "if $z0 != 0 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1138252557}";
"if $z0 != 0 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1138252557}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {2021765415}";
"if $z0 != 0 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1138252557}" -> "$r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1707243166}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {2021765415}" -> "if bit == 0 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {237545217}";
"if bit == 0 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {237545217}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {791959901}";
"if bit == 0 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {237545217}" -> "$r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1707243166}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {791959901}" -> "if bit == 1 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1286089727}";
"if bit == 1 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1286089727}" -> "$r0 = new java.lang.AssertionError {1053895908}";
"if bit == 1 goto $r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1286089727}" -> "$r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1707243166}";
"$r0 = new java.lang.AssertionError {1053895908}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1597635061}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1597635061}" -> "throw $r0 {1380177470}";
"$r1 = <org.tukaani.xz.rangecoder.RangeEncoder: int[] prices> {1707243166}" -> "$i0 = neg bit {701846231}";
"$i0 = neg bit {701846231}" -> "$i1 = $i0 & 2047 {2118521864}";
"$i1 = $i0 & 2047 {2118521864}" -> "$i2 = prob ^ $i1 {2105975549}";
"$i2 = prob ^ $i1 {2105975549}" -> "$i3 = $i2 >>> 4 {2053713227}";
"$i3 = $i2 >>> 4 {2053713227}" -> "$i4 = $r1[$i3] {876707930}";
"$i4 = $r1[$i3] {876707930}" -> "return $i4 {2090360165}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1581697609}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {2021765415}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {791959901}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getReverseBitTreePrice {
"probs := @parameter0: short[] {1914565861}" -> "symbol#1 := @parameter1: int {1283664819}";
"symbol#1 := @parameter1: int {1283664819}" -> "price#3 = 0 {1057805604}";
"price#3 = 0 {1057805604}" -> "index#5 = 1 {1325095268}";
"index#5 = 1 {1325095268}" -> "$i0 = lengthof probs {199588584}";
"$i0 = lengthof probs {199588584}" -> "symbol#10 = symbol#1 | $i0 {302544194}";
"symbol#10 = symbol#1 | $i0 {302544194}" -> "bit = symbol#10 & 1 {1527689334}";
"bit = symbol#10 & 1 {1527689334}" -> "symbol#10 = symbol#10 >>> 1 {1911531884}";
"symbol#10 = symbol#10 >>> 1 {1911531884}" -> "$s1 = probs[index#5] {1873645004}";
"$s1 = probs[index#5] {1873645004}" -> "$i2 = staticinvoke <org.tukaani.xz.rangecoder.RangeEncoder: int getBitPrice(int,int)>($s1, bit) {965190402}";
"$i2 = staticinvoke <org.tukaani.xz.rangecoder.RangeEncoder: int getBitPrice(int,int)>($s1, bit) {965190402}" -> "price#3 = price#3 + $i2 {34630448}";
"price#3 = price#3 + $i2 {34630448}" -> "$i3 = index#5 << 1 {1969844387}";
"$i3 = index#5 << 1 {1969844387}" -> "index#5 = $i3 | bit {695231720}";
"index#5 = $i3 | bit {695231720}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#10) {98197629}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#10) {98197629}" -> "if symbol#10 != 1 goto bit = symbol#10 & 1 {1912927782}";
"if symbol#10 != 1 goto bit = symbol#10 & 1 {1912927782}" -> "return price#3 {1492358965}";
"if symbol#10 != 1 goto bit = symbol#10 & 1 {1912927782}" -> "bit = symbol#10 & 1 {1527689334}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#10) {98197629}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getDirectBitsPrice {
"count := @parameter0: int {313109118}" -> "$i0 = count << 4 {1735531814}";
"$i0 = count << 4 {1735531814}" -> "return $i0 {488567074}";
}

digraph getBitTreePrice {
"probs := @parameter0: short[] {346080560}" -> "symbol#1 := @parameter1: int {1549622320}";
"symbol#1 := @parameter1: int {1549622320}" -> "price#3 = 0 {28444449}";
"price#3 = 0 {28444449}" -> "$i0 = lengthof probs {675790202}";
"$i0 = lengthof probs {675790202}" -> "symbol#8 = symbol#1 | $i0 {547918065}";
"symbol#8 = symbol#1 | $i0 {547918065}" -> "bit = symbol#8 & 1 {2142078877}";
"bit = symbol#8 & 1 {2142078877}" -> "symbol#8 = symbol#8 >>> 1 {1297348908}";
"symbol#8 = symbol#8 >>> 1 {1297348908}" -> "$s1 = probs[symbol#8] {94485767}";
"$s1 = probs[symbol#8] {94485767}" -> "$i2 = staticinvoke <org.tukaani.xz.rangecoder.RangeEncoder: int getBitPrice(int,int)>($s1, bit) {1803215730}";
"$i2 = staticinvoke <org.tukaani.xz.rangecoder.RangeEncoder: int getBitPrice(int,int)>($s1, bit) {1803215730}" -> "price#3 = price#3 + $i2 {290948468}";
"price#3 = price#3 + $i2 {290948468}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#8) {2014896942}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#8) {2014896942}" -> "if symbol#8 != 1 goto bit = symbol#8 & 1 {1232290153}";
"if symbol#8 != 1 goto bit = symbol#8 & 1 {1232290153}" -> "return price#3 {300169433}";
"if symbol#8 != 1 goto bit = symbol#8 & 1 {1232290153}" -> "bit = symbol#8 & 1 {2142078877}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#8) {2014896942}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph encodeReverseBitTree {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {2091087479}" -> "probs := @parameter0: short[] {849444727}";
"probs := @parameter0: short[] {849444727}" -> "symbol#1 := @parameter1: int {2088618640}";
"symbol#1 := @parameter1: int {2088618640}" -> "index#3 = 1 {2064405090}";
"index#3 = 1 {2064405090}" -> "$i0 = lengthof probs {389653851}";
"$i0 = lengthof probs {389653851}" -> "symbol#8 = symbol#1 | $i0 {1189803020}";
"symbol#8 = symbol#1 | $i0 {1189803020}" -> "bit = symbol#8 & 1 {1220582784}";
"bit = symbol#8 & 1 {1220582784}" -> "symbol#8 = symbol#8 >>> 1 {97862463}";
"symbol#8 = symbol#8 >>> 1 {97862463}" -> "virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void encodeBit(short[],int,int)>(probs, index#3, bit) {291781096}";
"virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void encodeBit(short[],int,int)>(probs, index#3, bit) {291781096}" -> "$i1 = index#3 << 1 {1531750078}";
"$i1 = index#3 << 1 {1531750078}" -> "index#3 = $i1 | bit {2084441081}";
"index#3 = $i1 | bit {2084441081}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#8) {372393565}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#8) {372393565}" -> "if symbol#8 != 1 goto bit = symbol#8 & 1 {1924942275}";
"if symbol#8 != 1 goto bit = symbol#8 & 1 {1924942275}" -> "return {2127689134}";
"if symbol#8 != 1 goto bit = symbol#8 & 1 {1924942275}" -> "bit = symbol#8 & 1 {1220582784}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#8) {372393565}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph encodeBit {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {1190722245}" -> "probs := @parameter0: short[] {614286625}";
"probs := @parameter0: short[] {614286625}" -> "index := @parameter1: int {273340061}";
"index := @parameter1: int {273340061}" -> "bit := @parameter2: int {1889545019}";
"bit := @parameter2: int {1889545019}" -> "prob = probs[index] {89772487}";
"prob = probs[index] {89772487}" -> "$i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1341441328}";
"$i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1341441328}" -> "$i1 = $i0 >>> 11 {267182202}";
"$i1 = $i0 >>> 11 {267182202}" -> "bound = $i1 * prob {1024210433}";
"bound = $i1 * prob {1024210433}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {2120433676}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {2120433676}" -> "if bit != 0 goto $l6 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1883811025}";
"if bit != 0 goto $l6 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1883811025}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = bound {562842114}";
"if bit != 0 goto $l6 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1883811025}" -> "$l6 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1216190436}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = bound {562842114}" -> "$i2 = 2048 - prob {2035482338}";
"$i2 = 2048 - prob {2035482338}" -> "$i3 = $i2 >>> 5 {1001321350}";
"$i3 = $i2 >>> 5 {1001321350}" -> "$i4 = prob + $i3 {1645778077}";
"$i4 = prob + $i3 {1645778077}" -> "$s5 = (short) $i4 {206816210}";
"$s5 = (short) $i4 {206816210}" -> "probs[index] = $s5 {457579937}";
"probs[index] = $s5 {457579937}" -> "goto [?= $i15 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range>] {1463353228}";
"goto [?= $i15 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range>] {1463353228}" -> "$i15 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {2114509474}";
"$l6 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {1216190436}" -> "$l7 = (long) bound {952579346}";
"$l7 = (long) bound {952579346}" -> "$l8 = $l7 & 4294967295L {7330250}";
"$l8 = $l7 & 4294967295L {7330250}" -> "$l9 = $l6 + $l8 {16847728}";
"$l9 = $l6 + $l8 {16847728}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = $l9 {2125999683}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = $l9 {2125999683}" -> "$i10 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1638149903}";
"$i10 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1638149903}" -> "$i11 = $i10 - bound {140805697}";
"$i11 = $i10 - bound {140805697}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i11 {1507689692}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i11 {1507689692}" -> "$s12 = prob >>> 5 {1548179894}";
"$s12 = prob >>> 5 {1548179894}" -> "$i13 = prob - $s12 {1005892610}";
"$i13 = prob - $s12 {1005892610}" -> "$s14 = (short) $i13 {500207811}";
"$s14 = (short) $i13 {500207811}" -> "probs[index] = $s14 {112088470}";
"probs[index] = $s14 {112088470}" -> "$i15 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {2114509474}";
"$i15 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {2114509474}" -> "$i16 = $i15 & -16777216 {322039971}";
"$i16 = $i15 & -16777216 {322039971}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i16) {1667040107}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i16) {1667040107}" -> "if $i16 != 0 goto return {1655887391}";
"if $i16 != 0 goto return {1655887391}" -> "$i17 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {423546865}";
"if $i16 != 0 goto return {1655887391}" -> "return {1683499263}";
"$i17 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {423546865}" -> "$i18 = $i17 << 8 {160564922}";
"$i18 = $i17 << 8 {160564922}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i18 {942525011}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i18 {942525011}" -> "specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void shiftLow()>() {2112243247}";
"specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void shiftLow()>() {2112243247}" -> "return {1683499263}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i16) {1667040107}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {2120433676}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph encodeDirectBits {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {1246903835}" -> "value := @parameter0: int {995109992}";
"value := @parameter0: int {995109992}" -> "count#1 := @parameter1: int {760883565}";
"count#1 := @parameter1: int {760883565}" -> "$i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {2104235846}";
"$i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {2104235846}" -> "$i1 = $i0 >>> 1 {795240919}";
"$i1 = $i0 >>> 1 {795240919}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i1 {850238810}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i1 {850238810}" -> "$l2 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {976614344}";
"$l2 = this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> {976614344}" -> "$i3 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1301622027}";
"$i3 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1301622027}" -> "count#1 = count#1 + -1 {145335081}";
"count#1 = count#1 + -1 {145335081}" -> "$i4 = value >>> count#1 {2043980665}";
"$i4 = value >>> count#1 {2043980665}" -> "$i5 = $i4 & 1 {828493104}";
"$i5 = $i4 & 1 {828493104}" -> "$i6 = 0 - $i5 {636930389}";
"$i6 = 0 - $i5 {636930389}" -> "$i7 = $i3 & $i6 {2032480753}";
"$i7 = $i3 & $i6 {2032480753}" -> "$l8 = (long) $i7 {1254823091}";
"$l8 = (long) $i7 {1254823091}" -> "$l9 = $l2 + $l8 {1979467927}";
"$l9 = $l2 + $l8 {1979467927}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = $l9 {1716751132}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: long low> = $l9 {1716751132}" -> "$i10 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {617963620}";
"$i10 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {617963620}" -> "$i11 = $i10 & -16777216 {1225476737}";
"$i11 = $i10 & -16777216 {1225476737}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11) {831714551}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11) {831714551}" -> "if $i11 != 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {863775306}";
"if $i11 != 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {863775306}" -> "$i12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1301664240}";
"if $i11 != 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {863775306}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {899046582}";
"$i12 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {1301664240}" -> "$i13 = $i12 << 8 {244176940}";
"$i13 = $i12 << 8 {244176940}" -> "this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i13 {511391762}";
"this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> = $i13 {511391762}" -> "specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void shiftLow()>() {777779618}";
"specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void shiftLow()>() {777779618}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {899046582}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {899046582}" -> "if count#1 != 0 goto $i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {151716505}";
"if count#1 != 0 goto $i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {151716505}" -> "return {1743000132}";
"if count#1 != 0 goto $i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {151716505}" -> "$i0 = this.<org.tukaani.xz.rangecoder.RangeEncoder: int range> {2104235846}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11) {831714551}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#1) {899046582}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph encodeBitTree {
"this := @this: org.tukaani.xz.rangecoder.RangeEncoder {1550828950}" -> "probs := @parameter0: short[] {830947562}";
"probs := @parameter0: short[] {830947562}" -> "symbol := @parameter1: int {987301697}";
"symbol := @parameter1: int {987301697}" -> "index#2 = 1 {141087967}";
"index#2 = 1 {141087967}" -> "mask#5 = lengthof probs {577749606}";
"mask#5 = lengthof probs {577749606}" -> "mask#5 = mask#5 >>> 1 {1648878797}";
"mask#5 = mask#5 >>> 1 {1648878797}" -> "bit = symbol & mask#5 {1336419767}";
"bit = symbol & mask#5 {1336419767}" -> "virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void encodeBit(short[],int,int)>(probs, index#2, bit) {153995547}";
"virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void encodeBit(short[],int,int)>(probs, index#2, bit) {153995547}" -> "index#2 = index#2 << 1 {1025953602}";
"index#2 = index#2 << 1 {1025953602}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {1591256683}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {1591256683}" -> "if bit == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {2102681720}";
"if bit == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {2102681720}" -> "index#2 = index#2 | 1 {1639227494}";
"if bit == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {2102681720}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {1435873769}";
"index#2 = index#2 | 1 {1639227494}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {1435873769}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {1435873769}" -> "if mask#5 != 1 goto mask#5 = mask#5 >>> 1 {52439044}";
"if mask#5 != 1 goto mask#5 = mask#5 >>> 1 {52439044}" -> "return {1205018518}";
"if mask#5 != 1 goto mask#5 = mask#5 >>> 1 {52439044}" -> "mask#5 = mask#5 >>> 1 {1648878797}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mask#5) {1435873769}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit) {1591256683}"[fontcolor="blue", penwidth=3, color="blue"];
}


