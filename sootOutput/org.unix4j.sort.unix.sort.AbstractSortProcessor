    public void <init>(org.unix4j.sort.context.ExecutionContext, org.unix4j.sort.processor.LineProcessor, org.unix4j.sort.unix.sort.SortArguments)
    {
        org.unix4j.sort.unix.sort.AbstractSortProcessor this;
        org.unix4j.sort.context.ExecutionContext context;
        org.unix4j.sort.processor.LineProcessor output;
        org.unix4j.sort.unix.sort.SortArguments arguments;
        java.util.Comparator $r0;

        this := @this: org.unix4j.sort.unix.sort.AbstractSortProcessor;

        context := @parameter0: org.unix4j.sort.context.ExecutionContext;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        arguments := @parameter2: org.unix4j.sort.unix.sort.SortArguments;

        specialinvoke this.<org.unix4j.sort.processor.AbstractLineProcessor: void <init>(org.unix4j.sort.context.ExecutionContext,org.unix4j.sort.processor.LineProcessor)>(context, output);

        this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: org.unix4j.sort.unix.sort.SortArguments arguments> = arguments;

        $r0 = specialinvoke this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: java.util.Comparator initComparator()>();

        this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: java.util.Comparator comparator> = $r0;

        return;
    }

    private java.util.Comparator initComparator()
    {
        org.unix4j.sort.unix.sort.AbstractSortProcessor this;
        org.unix4j.sort.unix.sort.SortArguments args;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object comparator#7;
        org.unix4j.sort.context.ExecutionContext $r0;
        java.util.Locale $r1;
        org.unix4j.sort.util.sort.LineComparator $r2, $r3;
        java.util.Comparator $r4, tmp$562740978, tmp$254399287;

        this := @this: org.unix4j.sort.unix.sort.AbstractSortProcessor;

        args = this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: org.unix4j.sort.unix.sort.SortArguments arguments>;

        $z0 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isComparatorSet()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        comparator#7 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: java.util.Comparator getComparator()>();

        goto label09;

     label01:
        $z1 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isNumericSort()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        $r0 = virtualinvoke this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: org.unix4j.sort.context.ExecutionContext getContext()>();

        $r1 = interfaceinvoke $r0.<org.unix4j.sort.context.ExecutionContext: java.util.Locale getLocale()>();

        comparator#7 = staticinvoke <org.unix4j.sort.util.sort.DecimalNumberStringComparator: org.unix4j.sort.util.sort.DecimalNumberStringComparator getInstance(java.util.Locale)>($r1);

        goto label09;

     label02:
        $z2 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isGeneralNumericSort()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label03;

        comparator#7 = <org.unix4j.sort.util.sort.ScientificNumberStringComparator: org.unix4j.sort.util.sort.ScientificNumberStringComparator INSTANCE>;

        goto label09;

     label03:
        $z3 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isIgnoreLeadingBlanks()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label06;

        $z4 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isIgnoreCase()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label04;

        $r2 = <org.unix4j.sort.util.sort.LineComparator: org.unix4j.sort.util.sort.LineComparator COLLATOR_IGNORE_CASE_AND_LEADING_BLANKS>;

        goto label05;

     label04:
        $r2 = <org.unix4j.sort.util.sort.LineComparator: org.unix4j.sort.util.sort.LineComparator COLLATOR_IGNORE_LEADING_BLANKS>;

     label05:
        comparator#7 = $r2;

        goto label09;

     label06:
        $z5 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isIgnoreCase()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label07;

        $r3 = <org.unix4j.sort.util.sort.LineComparator: org.unix4j.sort.util.sort.LineComparator COLLATOR_IGNORE_CASE>;

        goto label08;

     label07:
        $r3 = <org.unix4j.sort.util.sort.LineComparator: org.unix4j.sort.util.sort.LineComparator COLLATOR>;

     label08:
        comparator#7 = $r3;

     label09:
        $z6 = virtualinvoke args.<org.unix4j.sort.unix.sort.SortArguments: boolean isReverse()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label10;

        tmp$562740978 = (java.util.Comparator) comparator#7;

        $r4 = staticinvoke <org.unix4j.sort.util.sort.ReverseOrderComparator: java.util.Comparator reverse(java.util.Comparator)>(tmp$562740978);

        return $r4;

     label10:
        tmp$254399287 = (java.util.Comparator) comparator#7;

        return tmp$254399287;
    }

    protected java.util.Comparator getComparator()
    {
        org.unix4j.sort.unix.sort.AbstractSortProcessor this;
        java.util.Comparator $r0;

        this := @this: org.unix4j.sort.unix.sort.AbstractSortProcessor;

        $r0 = this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: java.util.Comparator comparator>;

        return $r0;
    }


