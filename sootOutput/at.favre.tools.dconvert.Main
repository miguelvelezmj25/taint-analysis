    public static void main(java.lang.String[])
    {
        java.lang.String[] rawArgs;
        java.io.File src, dst, tmp$688582670, tmp$592993758;
        boolean scaleIsHeightdp, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, createMipMapInsteadOfDrawableDir, enablePNGCrush, enableMozJPEG, postConvertWEBP, enableAntiAliasing, dryRun, keepUnoptimizedFilesPostProcessor, iosCreateImageSetFolder, clearDirBeforeConvert, help, version, guiAdvancedOptions, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60;
        java.util.ResourceBundle strings;
        org.apache.commons.cli.Options options;
        at.favre.tools.dconvert.arg.Arguments args, tmp$1851690803;
        at.favre.tools.dconvert.DConvert dc, tmp$1678390663;
        at.favre.tools.dconvert.MyHandlerCallback hc, tmp$863467745;
        java.lang.String $r2, $r5, $r8, $r11, $r48, $r50, $r58;
        java.lang.StringBuilder $r3, $r4, $r9, $r10, $r45, $r49, $r54, $r56, $r57, tmp$247522455, tmp$1004198035, tmp$419864760, tmp$938719670;
        java.lang.Boolean $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        byte scale#126;
        at.favre.tools.dconvert.arg.EPlatform[] $r39;
        at.favre.tools.dconvert.arg.EPlatform $r40;
        java.util.List $r41, $r55;
        java.lang.Object platforms#135;
        at.favre.tools.dconvert.arg.EOutputCompressionMode compressionMode#137;
        at.favre.tools.dconvert.arg.EScaleMode scaleMode#139;
        at.favre.tools.dconvert.arg.EScalingAlgorithm downScaling#142, upScaling#144;
        float compressionQuality#146, $f0;
        at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingStrategy#160;
        java.util.Locale $r42;
        java.io.PrintStream $r43, $r52;
        java.lang.Class $r46;
        java.lang.Package $r47;
        int $i0;
        java.util.HashSet tmp$1193640756;
        java.util.Set tmp$1128651214;

        rawArgs := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        tmp$688582670 = new java.io.File;

        tmp$247522455 = new java.lang.StringBuilder;

        specialinvoke tmp$247522455.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r3 = virtualinvoke tmp$247522455.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/convert/files/person.jpg");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$688582670.<java.io.File: void <init>(java.lang.String)>($r5);

        src = tmp$688582670;

        tmp$592993758 = new java.io.File;

        tmp$1004198035 = new java.lang.StringBuilder;

        specialinvoke tmp$1004198035.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r9 = virtualinvoke tmp$1004198035.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/convert/output");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$592993758.<java.io.File: void <init>(java.lang.String)>($r11);

        dst = tmp$592993758;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALE(boolean)>($z0);

        <at.favre.tools.dconvert.Main: boolean SCALE> = $z1;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z2 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPLATFORM(boolean)>($z2);

        <at.favre.tools.dconvert.Main: boolean PLATFORM> = $z3;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z4 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionOUTPUTCOMPRESSIONGMODE(boolean)>($z4);

        <at.favre.tools.dconvert.Main: boolean OUTPUTCOMPRESSIONGMODE> = $z5;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z6 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALEMODE(boolean)>($z6);

        <at.favre.tools.dconvert.Main: boolean SCALEMODE> = $z7;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z8 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALEISHEIGHTDP(boolean)>($z8);

        <at.favre.tools.dconvert.Main: boolean SCALEISHEIGHTDP> = $z9;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z10 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDOWNSCALINGALGORITHM(boolean)>($z10);

        <at.favre.tools.dconvert.Main: boolean DOWNSCALINGALGORITHM> = $z11;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z12 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUPSCALINGALGORITHM(boolean)>($z12);

        <at.favre.tools.dconvert.Main: boolean UPSCALINGALGORITHM> = $z13;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z14 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSQUALITY(boolean)>($z14);

        <at.favre.tools.dconvert.Main: boolean COMPRESSQUALITY> = $z15;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z16 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSKIPEXISTINGFILES(boolean)>($z16);

        <at.favre.tools.dconvert.Main: boolean SKIPEXISTINGFILES> = $z17;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z18 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSKIPUPSCALING(boolean)>($z18);

        <at.favre.tools.dconvert.Main: boolean SKIPUPSCALING> = $z19;

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z20 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERBOSELOG(boolean)>($z20);

        <at.favre.tools.dconvert.Main: boolean VERBOSELOG> = $z21;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z22 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionINCLUDEANDROIDLDPITVDPI(boolean)>($z22);

        <at.favre.tools.dconvert.Main: boolean INCLUDEANDROIDLDPITVDPI> = $z23;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z24 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>();

        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionHALTONERROR(boolean)>($z24);

        <at.favre.tools.dconvert.Main: boolean HALTONERROR> = $z25;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z26 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsCREATEMIPMAPINSTEADOFDRAWABLEDIR(boolean)>($z26);

        <at.favre.tools.dconvert.Main: boolean CREATEMIPMAPINSTEADOFDRAWABLEDIR> = $z27;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z28 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsENABLEPNGCRUSH(boolean)>($z28);

        <at.favre.tools.dconvert.Main: boolean ENABLEPNGCRUSH> = $z29;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z30 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsENABLEMOZJPEG(boolean)>($z30);

        <at.favre.tools.dconvert.Main: boolean ENABLEMOZJPEG> = $z31;

        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z32 = virtualinvoke $r28.<java.lang.Boolean: boolean booleanValue()>();

        $z33 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsPOSTCONVERTWEBP(boolean)>($z32);

        <at.favre.tools.dconvert.Main: boolean POSTCONVERTWEBP> = $z33;

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z34 = virtualinvoke $r29.<java.lang.Boolean: boolean booleanValue()>();

        $z35 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsENABLEANTIALIASING(boolean)>($z34);

        <at.favre.tools.dconvert.Main: boolean ENABLEANTIALIASING> = $z35;

        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z36 = virtualinvoke $r30.<java.lang.Boolean: boolean booleanValue()>();

        $z37 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDRYRUN(boolean)>($z36);

        <at.favre.tools.dconvert.Main: boolean DRYRUN> = $z37;

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z38 = virtualinvoke $r31.<java.lang.Boolean: boolean booleanValue()>();

        $z39 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsKEEPUNOPTIMIZEDFILESPOSTPROCESSOR(boolean)>($z38);

        <at.favre.tools.dconvert.Main: boolean KEEPUNOPTIMIZEDFILESPOSTPROCESSOR> = $z39;

        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z40 = virtualinvoke $r32.<java.lang.Boolean: boolean booleanValue()>();

        $z41 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsROUNDINGHANDLER(boolean)>($z40);

        <at.favre.tools.dconvert.Main: boolean ROUNDINGHANDLER> = $z41;

        $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z42 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        $z43 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsIOSCREATEIMAGESETFOLDERS(boolean)>($z42);

        <at.favre.tools.dconvert.Main: boolean IOSCREATEIMAGESETFOLDERS> = $z43;

        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z44 = virtualinvoke $r34.<java.lang.Boolean: boolean booleanValue()>();

        $z45 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionsCLEARDIRBEFORECONVERT(boolean)>($z44);

        <at.favre.tools.dconvert.Main: boolean CLEARDIRBEFORECONVERT> = $z45;

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z46 = virtualinvoke $r35.<java.lang.Boolean: boolean booleanValue()>();

        $z47 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionHELP(boolean)>($z46);

        <at.favre.tools.dconvert.Main: boolean HELP> = $z47;

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z48 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();

        $z49 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERSION(boolean)>($z48);

        <at.favre.tools.dconvert.Main: boolean VERSION> = $z49;

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z50 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>();

        $z51 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionGUIADVANCEDOPTIONS(boolean)>($z50);

        <at.favre.tools.dconvert.Main: boolean GUIADVANCEDOPTIONS> = $z51;

        scale#126 = 1;

        tmp$1193640756 = new java.util.HashSet;

        $r39 = newarray (at.favre.tools.dconvert.arg.EPlatform)[1];

        $r40 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID>;

        $r39[0] = $r40;

        $r41 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r39);

        specialinvoke tmp$1193640756.<java.util.HashSet: void <init>(java.util.Collection)>($r41);

        platforms#135 = tmp$1193640756;

        compressionMode#137 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG>;

        scaleMode#139 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR>;

        scaleIsHeightdp = <at.favre.tools.dconvert.Main: boolean SCALEISHEIGHTDP>;

        downScaling#142 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        upScaling#144 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        compressionQuality#146 = 0.9F;

        skipExistingFiles = <at.favre.tools.dconvert.Main: boolean SKIPEXISTINGFILES>;

        skipUpScaling = <at.favre.tools.dconvert.Main: boolean SKIPUPSCALING>;

        verboseLog = <at.favre.tools.dconvert.Main: boolean VERBOSELOG>;

        includeAndroiddpiTvdpi = <at.favre.tools.dconvert.Main: boolean INCLUDEANDROIDLDPITVDPI>;

        haltOnError = <at.favre.tools.dconvert.Main: boolean HALTONERROR>;

        createMipMapInsteadOfDrawableDir = <at.favre.tools.dconvert.Main: boolean CREATEMIPMAPINSTEADOFDRAWABLEDIR>;

        enablePNGCrush = <at.favre.tools.dconvert.Main: boolean ENABLEPNGCRUSH>;

        enableMozJPEG = <at.favre.tools.dconvert.Main: boolean ENABLEMOZJPEG>;

        postConvertWEBP = <at.favre.tools.dconvert.Main: boolean POSTCONVERTWEBP>;

        enableAntiAliasing = <at.favre.tools.dconvert.Main: boolean ENABLEANTIALIASING>;

        dryRun = <at.favre.tools.dconvert.Main: boolean DRYRUN>;

        keepUnoptimizedFilesPostProcessor = <at.favre.tools.dconvert.Main: boolean KEEPUNOPTIMIZEDFILESPOSTPROCESSOR>;

        roundingStrategy#160 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy FLOOR>;

        iosCreateImageSetFolder = <at.favre.tools.dconvert.Main: boolean IOSCREATEIMAGESETFOLDERS>;

        clearDirBeforeConvert = <at.favre.tools.dconvert.Main: boolean CLEARDIRBEFORECONVERT>;

        help = <at.favre.tools.dconvert.Main: boolean HELP>;

        version = <at.favre.tools.dconvert.Main: boolean VERSION>;

        guiAdvancedOptions = <at.favre.tools.dconvert.Main: boolean GUIADVANCEDOPTIONS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(help);

        if help == 0 goto label01;

        $r42 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        strings = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("bundles.strings", $r42);

        options = staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: org.apache.commons.cli.Options setupOptions(java.util.ResourceBundle)>(strings);

        staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: void printHelp(org.apache.commons.cli.Options)>(options);

        return;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(version);

        if version == 0 goto label02;

        $r43 = <java.lang.System: java.io.PrintStream out>;

        tmp$419864760 = new java.lang.StringBuilder;

        specialinvoke tmp$419864760.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke tmp$419864760.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version: ");

        $r46 = class "at/favre/tools/dconvert/ui/CLIInterpreter";

        $r47 = virtualinvoke $r46.<java.lang.Class: java.lang.Package getPackage()>();

        $r48 = virtualinvoke $r47.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r50);

        return;

     label02:
        $z52 = <at.favre.tools.dconvert.Main: boolean SCALE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z52);

        if $z52 == 0 goto label03;

        scale#126 = 5;

     label03:
        $z53 = <at.favre.tools.dconvert.Main: boolean PLATFORM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z53);

        if $z53 == 0 goto label04;

        platforms#135 = staticinvoke <at.favre.tools.dconvert.arg.EPlatform: java.util.Set getAll()>();

     label04:
        $z54 = <at.favre.tools.dconvert.Main: boolean OUTPUTCOMPRESSIONGMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z54);

        if $z54 == 0 goto label05;

        compressionMode#137 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG_AND_PNG>;

     label05:
        $z55 = <at.favre.tools.dconvert.Main: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z55);

        if $z55 == 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scaleIsHeightdp);

        if scaleIsHeightdp == 0 goto label06;

        scaleMode#139 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_HEIGHT>;

        goto label07;

     label06:
        $z56 = <at.favre.tools.dconvert.Main: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z56);

        if $z56 == 0 goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scaleIsHeightdp);

        if scaleIsHeightdp != 0 goto label07;

        scaleMode#139 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_WIDTH>;

     label07:
        $z57 = <at.favre.tools.dconvert.Main: boolean DOWNSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z57);

        if $z57 == 0 goto label08;

        downScaling#142 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR_PROGRESSIVE>;

     label08:
        $z58 = <at.favre.tools.dconvert.Main: boolean UPSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z58);

        if $z58 == 0 goto label09;

        upScaling#144 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR>;

     label09:
        $z59 = <at.favre.tools.dconvert.Main: boolean COMPRESSQUALITY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z59);

        if $z59 == 0 goto label10;

        compressionQuality#146 = 0.1F;

     label10:
        $z60 = <at.favre.tools.dconvert.Main: boolean ROUNDINGHANDLER>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z60);

        if $z60 == 0 goto label11;

        roundingStrategy#160 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy CEIL>;

     label11:
        tmp$1851690803 = new at.favre.tools.dconvert.arg.Arguments;

        $f0 = (float) scale#126;

        tmp$1128651214 = (java.util.Set) platforms#135;

        specialinvoke tmp$1851690803.<at.favre.tools.dconvert.arg.Arguments: void <init>(java.io.File,java.io.File,float,java.util.Set,at.favre.tools.dconvert.arg.EOutputCompressionMode,at.favre.tools.dconvert.arg.EScaleMode,at.favre.tools.dconvert.arg.EScalingAlgorithm,at.favre.tools.dconvert.arg.EScalingAlgorithm,float,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,at.favre.tools.dconvert.arg.RoundingHandler$Strategy,boolean,boolean)>(src, dst, $f0, tmp$1128651214, compressionMode#137, scaleMode#139, downScaling#142, upScaling#144, compressionQuality#146, 1, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, createMipMapInsteadOfDrawableDir, iosCreateImageSetFolder, enablePNGCrush, enableMozJPEG, postConvertWEBP, enableAntiAliasing, dryRun, keepUnoptimizedFilesPostProcessor, roundingStrategy#160, guiAdvancedOptions, clearDirBeforeConvert);

        args = tmp$1851690803;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        tmp$938719670 = new java.lang.StringBuilder;

        specialinvoke tmp$938719670.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke tmp$938719670.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start converting ");

        $r55 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess>;

        $i0 = interfaceinvoke $r55.<java.util.List: int size()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r58);

        tmp$1678390663 = new at.favre.tools.dconvert.DConvert;

        specialinvoke tmp$1678390663.<at.favre.tools.dconvert.DConvert: void <init>()>();

        dc = tmp$1678390663;

        tmp$863467745 = new at.favre.tools.dconvert.MyHandlerCallback;

        specialinvoke tmp$863467745.<at.favre.tools.dconvert.MyHandlerCallback: void <init>(at.favre.tools.dconvert.arg.Arguments)>(args);

        hc = tmp$863467745;

        virtualinvoke dc.<at.favre.tools.dconvert.DConvert: void execute(at.favre.tools.dconvert.arg.Arguments,boolean,at.favre.tools.dconvert.DConvert$HandlerCallback)>(args, 1, hc);

        return;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.Main this;

        this := @this: at.favre.tools.dconvert.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


