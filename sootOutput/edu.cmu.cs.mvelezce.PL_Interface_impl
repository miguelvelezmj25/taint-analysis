    public static void main(java.lang.String[])
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl impl, $r12;
        java.lang.Throwable e, $r14;
        java.lang.String[] args#1, args#42;
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r21, $r23;
        java.lang.Boolean $r1, $r3, $r5, $r7, $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.io.PrintStream $r13, $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r22;
        java.lang.Class $r18;

        args#1 := @parameter0: java.lang.String[];

     label1:
        $r0 = args#1[0];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREBASE(boolean)>($z0);

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREBASE> = $z1;

        $r2 = args#1[1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREWEIGHT(boolean)>($z2);

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREWEIGHT> = $z3;

        $r4 = args#1[2];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r4);

        $z4 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREEMPTY(boolean)>($z4);

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREEMPTY> = $z5;

        $r6 = args#1[3];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z6 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATURETWOTHIRDSFULL(boolean)>($z6);

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATURETWOTHIRDSFULL> = $z7;

        $r8 = args#1[4];

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        $z8 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREEXECUTIVEFLOOR(boolean)>($z8);

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREEXECUTIVEFLOOR> = $z9;

        $r10 = args#1[5];

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        $z10 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREOVERLOADED(boolean)>($z10);

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREOVERLOADED> = $z11;

        $r12 = new edu.cmu.cs.mvelezce.PL_Interface_impl;

        specialinvoke $r12.<edu.cmu.cs.mvelezce.PL_Interface_impl: void <init>()>();

        impl = $r12;

        args#42 = newarray (java.lang.String)[1];

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean verbose> = 1;

        staticinvoke <edu.cmu.cs.mvelezce.TestSpecifications.SpecificationManager: void checkOnlySpecification(int)>(-2);

        virtualinvoke impl.<edu.cmu.cs.mvelezce.PL_Interface_impl: void start(int,int)>(-3, -1);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("no Exception");

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        e = $r14;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception: ");

        $r18 = virtualinvoke e.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke e.<java.lang.Throwable: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r23);

        virtualinvoke e.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREBASE> = 1;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREWEIGHT> = 1;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREEMPTY> = 1;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATURETWOTHIRDSFULL> = 1;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREEXECUTIVEFLOOR> = 1;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean FEATUREOVERLOADED> = 1;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean executedUnimplementedAction> = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <edu.cmu.cs.mvelezce.PL_Interface_impl: java.util.List actionHistory> = $r0;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts> = 24;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean verbose> = 0;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean isAbortedRun> = 0;

        return;
    }

    public void <init>()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void start(int, int) throws java.lang.Throwable
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        int specification, variation;
        java.lang.Throwable e, l4, $r7, $r8;
        boolean $z0, $z1;
        java.io.PrintStream $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        specification := @parameter0: int;

        variation := @parameter1: int;

     label1:
        $z0 = <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean verbose>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label2;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Started Elevator PL with Specification ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(specification);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Variation: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(variation);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r6);

     label2:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void test(int,int)>(specification, variation);

     label3:
        goto label8;

     label4:
        $r7 := @caughtexception;

     label5:
        e = $r7;

        throw e;

     label6:
        $r8 := @caughtexception;

        l4 = $r8;

     label7:
        throw l4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public void test(int, int)
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        int specification, variation;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        specification := @parameter0: int;

        variation := @parameter1: int;

        if variation >= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label13;

        tableswitch(specification)
        {
            case -14: goto label11;
            case -13: goto label10;
            case -12: goto label12;
            case -11: goto label09;
            case -10: goto label08;
            case -9: goto label07;
            case -8: goto label06;
            case -7: goto label12;
            case -6: goto label12;
            case -5: goto label12;
            case -4: goto label12;
            case -3: goto label05;
            case -2: goto label04;
            case -1: goto label03;
            default: goto label12;
        };

     label03:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void Specification1()>();

        goto label12;

     label04:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void Specification2()>();

        goto label12;

     label05:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void Specification3()>();

        goto label12;

     label06:
        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean isAbortedRun> = 1;

        goto label12;

     label07:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void Specification9()>();

        goto label12;

     label08:
        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean isAbortedRun> = 1;

        goto label12;

     label09:
        <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean isAbortedRun> = 1;

        goto label12;

     label10:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void Specification13()>();

        goto label12;

     label11:
        virtualinvoke this.<edu.cmu.cs.mvelezce.PL_Interface_impl: void Specification14()>();

     label12:
        goto label14;

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.PL_Interface_impl: void randomSequenceOfActions(int)>(variation);

     label14:
        return;
    }

    public static void randomSequenceOfActions(int)
    {
        int maxLength, action, $i0, counter#29, i#61, counter#81, $i1;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.Actions a, $r5;
        boolean $z0, $z1, $z2, $z4, $z7, $z8, $z9, $z10, $z11;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator $r1, e#13, $r3;
        java.util.List $r2, $r4, $r17;
        java.lang.String actionName#36, actionName#41, $r16;
        java.lang.InternalError $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        maxLength := @parameter0: int;

        $i0 = 6 * maxLength;

        <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts> = $i0;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(50000);

        env = $r0;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean getBoolean()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label01;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        $z2 = <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean verbose>;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean)>(env, $z2);

        e#13 = $r1;

        $r2 = <edu.cmu.cs.mvelezce.PL_Interface_impl: java.util.List actionHistory>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("StartFromBottom");

        goto label02;

     label01:
        $r3 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        $z4 = <edu.cmu.cs.mvelezce.PL_Interface_impl: boolean verbose>;

        specialinvoke $r3.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean,int,boolean)>(env, $z4, 4, 0);

        e#13 = $r3;

        $r4 = <edu.cmu.cs.mvelezce.PL_Interface_impl: java.util.List actionHistory>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("StartFromTop");

     label02:
        $r5 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r5.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e#13);

        a = $r5;

        counter#29 = 0;

     label03:
        if counter#29 >= maxLength goto label17;

        counter#29 = counter#29 + 1;

        action = staticinvoke <edu.cmu.cs.mvelezce.PL_Interface_impl: int getIntegerMinMax(int,int)>(0, 7);

        actionName#36 = "";

        tableswitch(action)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            default: goto label14;
        };

     label04:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bobCall()>();

        actionName#41 = "bobCall";

        goto label15;

     label05:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person aliceCall()>();

        actionName#41 = "aliceCall";

        goto label15;

     label06:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person angelinaCall()>();

        actionName#41 = "angelinaCall";

        goto label15;

     label07:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person chuckCall()>();

        actionName#41 = "chuckCall";

        goto label15;

     label08:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person monicaCall()>();

        actionName#41 = "monicaCall";

        goto label15;

     label09:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bigMacCall()>();

        actionName#41 = "bigMacCall";

        goto label15;

     label10:
        virtualinvoke e#13.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        actionName#41 = "1TS";

        goto label15;

     label11:
        actionName#41 = "3TS";

        i#61 = 0;

     label12:
        if i#61 >= 3 goto label13;

        virtualinvoke e#13.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#61 = i#61 + 1;

        goto label12;

     label13:
        goto label15;

     label14:
        $r12 = new java.lang.InternalError;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getIntegerMinMax produced illegal value:");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(action);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.InternalError: void <init>(java.lang.String)>($r16);

        throw $r12;

     label15:
        $r17 = <edu.cmu.cs.mvelezce.PL_Interface_impl: java.util.List actionHistory>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(actionName#41);

        $z7 = virtualinvoke e#13.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label16;

        return;

     label16:
        goto label03;

     label17:
        counter#81 = 0;

     label18:
        $i1 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if counter#81 >= $i1 goto label20;

        $z9 = virtualinvoke e#13.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z9 != 0 goto label20;

        $z10 = virtualinvoke e#13.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isIdle()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label19;

        return;

     label19:
        virtualinvoke e#13.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        counter#81 = counter#81 + 1;

        goto label18;

     label20:
        return;
    }

    public static int getIntegerMinMax(int, int)
    {
        int min, max, $i0;

        min := @parameter0: int;

        max := @parameter1: int;

        $i0 = staticinvoke <edu.cmu.cs.mvelezce.verificationClasses.SPLModelChecker: int getIntMinMax(int,int)>(min, max);

        return $i0;
    }

    public static boolean getBoolean()
    {
        boolean $z0;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.verificationClasses.SPLModelChecker: boolean getBoolean()>();

        return $z0;
    }

    public void Specification1()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator e, $r1;
        edu.cmu.cs.mvelezce.Actions a, $r2;
        int i#17, $i0;
        boolean $z0;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(5);

        env = $r0;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean)>(env, 0);

        e = $r1;

        $r2 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e);

        a = $r2;

        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bigMacCall()>();

        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person angelinaCall()>();

        i#17 = 0;

     label1:
        $i0 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if i#17 >= $i0 goto label2;

        $z0 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z0 != 0 goto label2;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#17 = i#17 + 1;

        goto label1;

     label2:
        return;
    }

    public void Specification2()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator e, $r1;
        edu.cmu.cs.mvelezce.Actions a, $r2;
        int i#15, $i0;
        boolean $z0;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(5);

        env = $r0;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean)>(env, 0);

        e = $r1;

        $r2 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e);

        a = $r2;

        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bigMacCall()>();

        i#15 = 0;

     label1:
        $i0 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if i#15 >= $i0 goto label2;

        $z0 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z0 != 0 goto label2;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#15 = i#15 + 1;

        goto label1;

     label2:
        return;
    }

    public void Specification3()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator e, $r1;
        edu.cmu.cs.mvelezce.Actions a, $r2;
        edu.cmu.cs.mvelezce.ElevatorSystem.Person bob;
        int i#13, $i0, i#31, $i1;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor $r3;
        boolean $z0, $z1, $z2;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(5);

        env = $r0;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean,int,boolean)>(env, 0, 4, 0);

        e = $r1;

        $r2 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e);

        a = $r2;

        i#13 = 0;

     label1:
        if i#13 >= 100 goto label6;

        bob = virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bobCall()>();

     label2:
        $i0 = virtualinvoke bob.<edu.cmu.cs.mvelezce.ElevatorSystem.Person: int getOrigin()>();

        $r3 = virtualinvoke env.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor getFloor(int)>($i0);

        $z0 = virtualinvoke $r3.<edu.cmu.cs.mvelezce.ElevatorSystem.Floor: boolean hasCall()>();

        if $z0 == 0 goto label3;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        goto label2;

     label3:
        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bobCall()>();

     label4:
        $z1 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        goto label4;

     label5:
        i#13 = i#13 + 1;

        goto label1;

     label6:
        i#31 = 0;

     label7:
        $i1 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if i#31 >= $i1 goto label8;

        $z2 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z2 != 0 goto label8;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#31 = i#31 + 1;

        goto label7;

     label8:
        return;
    }

    public void Specification9()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator e, $r1;
        edu.cmu.cs.mvelezce.Actions a, $r2;
        int i#15, $i0;
        boolean $z0;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(5);

        env = $r0;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean)>(env, 0);

        e = $r1;

        $r2 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e);

        a = $r2;

        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bigMacCall()>();

        i#15 = 0;

     label1:
        $i0 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if i#15 >= $i0 goto label2;

        $z0 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z0 != 0 goto label2;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#15 = i#15 + 1;

        goto label1;

     label2:
        return;
    }

    public void Specification13()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator e, $r1;
        edu.cmu.cs.mvelezce.Actions a, $r2;
        edu.cmu.cs.mvelezce.ElevatorSystem.Person angelina;
        int $i0, i#25, $i1;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor $r4;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(5);

        env = $r0;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean)>(env, 0);

        e = $r1;

        $r2 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e);

        a = $r2;

        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person aliceCall()>();

        angelina = virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person angelinaCall()>();

     label1:
        $i0 = virtualinvoke angelina.<edu.cmu.cs.mvelezce.ElevatorSystem.Person: int getOrigin()>();

        $r4 = virtualinvoke env.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor getFloor(int)>($i0);

        $z0 = virtualinvoke $r4.<edu.cmu.cs.mvelezce.ElevatorSystem.Floor: boolean hasCall()>();

        if $z0 == 0 goto label2;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        goto label1;

     label2:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bobCall()>();

        i#25 = 0;

     label3:
        $i1 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if i#25 >= $i1 goto label4;

        $z1 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z1 != 0 goto label4;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#25 = i#25 + 1;

        goto label3;

     label4:
        return;
    }

    public void Specification14()
    {
        edu.cmu.cs.mvelezce.PL_Interface_impl this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment env, $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Elevator e, $r1;
        edu.cmu.cs.mvelezce.Actions a, $r2;
        edu.cmu.cs.mvelezce.ElevatorSystem.Person bm;
        int $i0, i#23, $i1;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor $r3;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.PL_Interface_impl;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: void <init>(int)>(5);

        env = $r0;

        $r1 = new edu.cmu.cs.mvelezce.ElevatorSystem.Elevator;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,boolean)>(env, 0);

        e = $r1;

        $r2 = new edu.cmu.cs.mvelezce.Actions;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.Actions: void <init>(edu.cmu.cs.mvelezce.ElevatorSystem.Environment,edu.cmu.cs.mvelezce.ElevatorSystem.Elevator)>(env, e);

        a = $r2;

        bm = virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bigMacCall()>();

     label1:
        $i0 = virtualinvoke bm.<edu.cmu.cs.mvelezce.ElevatorSystem.Person: int getOrigin()>();

        $r3 = virtualinvoke env.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor getFloor(int)>($i0);

        $z0 = virtualinvoke $r3.<edu.cmu.cs.mvelezce.ElevatorSystem.Floor: boolean hasCall()>();

        if $z0 == 0 goto label2;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        goto label1;

     label2:
        virtualinvoke a.<edu.cmu.cs.mvelezce.Actions: edu.cmu.cs.mvelezce.ElevatorSystem.Person bobCall()>();

        i#23 = 0;

     label3:
        $i1 = <edu.cmu.cs.mvelezce.PL_Interface_impl: int cleanupTimeShifts>;

        if i#23 >= $i1 goto label4;

        $z1 = virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: boolean isBlocked()>();

        if $z1 != 0 goto label4;

        virtualinvoke e.<edu.cmu.cs.mvelezce.ElevatorSystem.Elevator: void timeShift()>();

        i#23 = i#23 + 1;

        goto label3;

     label4:
        return;
    }


