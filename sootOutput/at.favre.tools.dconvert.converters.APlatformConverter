    public void <init>()
    {
        at.favre.tools.dconvert.converters.APlatformConverter this;

        this := @this: at.favre.tools.dconvert.converters.APlatformConverter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public at.favre.tools.dconvert.converters.Result convert(java.io.File, at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.APlatformConverter this;
        java.io.File srcImage, destinationFolder, mainSubFolder, dstFolder, imageFile, file, $r34;
        at.favre.tools.dconvert.arg.Arguments args;
        at.favre.tools.dconvert.util.LoadedImage imageData;
        java.lang.String targetImageFileName, $r2, $r16, $r39, $r55, $r68, $r74;
        at.favre.tools.dconvert.arg.ImageType imageType;
        boolean isNinePatch, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12;
        java.lang.StringBuilder log, $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r17, $r40, $r41, $r42, $r45, $r46, $r49, $r50, $r53, $r54, $r56, $r62, $r63, $r64, $r69;
        java.util.Map densityMap;
        java.util.ArrayList allResultingFiles, $r25;
        java.util.Iterator l12, l17;
        java.util.Map$Entry entry;
        java.util.List files, $r19, $r24, $r77;
        java.lang.Exception e, $r75;
        java.lang.Class $r0;
        java.awt.image.BufferedImage $r7, $r10, $r21, $r22, $r72;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        at.favre.tools.dconvert.arg.EScaleMode $r14, $r15, $r27;
        java.awt.Dimension $r20, $r33, $r38, $r44, $r48, $r60;
        java.util.Set $r23, $r26, $r28;
        byte $b4;
        java.lang.Object $r29, $r30, $r32, $r35, $r37, $r43, $r47, $r51, $r59, $r61;
        at.favre.tools.dconvert.converters.descriptors.DensityDescriptor $r31, $r36, $r52;
        at.favre.tools.dconvert.converters.scaling.ImageHandler $r58;
        java.util.Locale $r65;
        java.lang.Object[] $r66;
        long $l7;
        java.lang.Float $r67;
        at.favre.tools.dconvert.converters.Result $r73, $r76;

        this := @this: at.favre.tools.dconvert.converters.APlatformConverter;

        srcImage := @parameter0: java.io.File;

        args := @parameter1: at.favre.tools.dconvert.arg.Arguments;

     label01:
        destinationFolder = args.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst>;

        imageData = staticinvoke <at.favre.tools.dconvert.util.ImageUtil: at.favre.tools.dconvert.util.LoadedImage loadImage(java.io.File)>(srcImage);

        targetImageFileName = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileNameWithoutExtension(java.io.File)>(srcImage);

        imageType = staticinvoke <at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.ImageType getImageType(java.io.File)>(srcImage);

        $z0 = staticinvoke <at.favre.tools.dconvert.converters.AndroidConverter: boolean isNinePatch(java.io.File)>(srcImage);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        $r0 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != class "at/favre/tools/dconvert/converters/AndroidConverter" goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        isNinePatch = $z1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        log = $r1;

        $r2 = virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: java.lang.String getConverterName()>();

        $r3 = virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(targetImageFileName);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke imageData.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        $i0 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getWidth()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r10 = virtualinvoke imageData.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        $i1 = virtualinvoke $r10.<java.awt.image.BufferedImage: int getHeight()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $f0 = args.<at.favre.tools.dconvert.arg.Arguments: float scale>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r14 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode>;

        $r15 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r15);

        if $r14 == $r15 goto label04;

        $z2 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label05;

     label04:
        $r16 = "x";

        goto label06;

     label05:
        $r16 = "dp";

     label06:
        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r19 = virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: java.util.List usedOutputDensities(at.favre.tools.dconvert.arg.Arguments)>(args);

        $r20 = new java.awt.Dimension;

        $r21 = virtualinvoke imageData.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        $i2 = virtualinvoke $r21.<java.awt.image.BufferedImage: int getWidth()>();

        $r22 = virtualinvoke imageData.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        $i3 = virtualinvoke $r22.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r20.<java.awt.Dimension: void <init>(int,int)>($i2, $i3);

        $f1 = args.<at.favre.tools.dconvert.arg.Arguments: float scale>;

        densityMap = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBuckets(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float,boolean)>($r19, $r20, args, $f1, isNinePatch);

        mainSubFolder = virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: java.io.File createMainSubFolder(java.io.File,java.lang.String,at.favre.tools.dconvert.arg.Arguments)>(destinationFolder, targetImageFileName, args);

        $r23 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r23);

        if $r23 == null goto label07;

        $r24 = virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: java.util.List usedOutputDensities(at.favre.tools.dconvert.arg.Arguments)>(args);

        virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: void onPreExecute(java.io.File,java.lang.String,java.util.List,at.favre.tools.dconvert.arg.ImageType,at.favre.tools.dconvert.arg.Arguments)>(mainSubFolder, targetImageFileName, $r24, imageType, args);

     label07:
        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        allResultingFiles = $r25;

        $f2 = args.<at.favre.tools.dconvert.arg.Arguments: float scale>;

        $b4 = $f2 cmpl 0.0F;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 >= 0 goto label08;

        $r26 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r26);

        if $r26 != null goto label08;

        $z3 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label08;

        $r27 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r27);

        if $r27 != null goto label08;

        $z4 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label17;

     label08:
        $r28 = interfaceinvoke densityMap.<java.util.Map: java.util.Set entrySet()>();

        l12 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke l12.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label17;

        $r29 = interfaceinvoke l12.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r29;

        $r30 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (at.favre.tools.dconvert.converters.descriptors.DensityDescriptor) $r30;

        $r32 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.awt.Dimension) $r32;

        dstFolder = virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: java.io.File createFolderForOutputFile(java.io.File,at.favre.tools.dconvert.converters.descriptors.DensityDescriptor,java.awt.Dimension,java.lang.String,at.favre.tools.dconvert.arg.Arguments)>(mainSubFolder, $r31, $r33, targetImageFileName, args);

        $z6 = virtualinvoke dstFolder.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label10;

        $z7 = virtualinvoke dstFolder.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label11;

     label10:
        $z8 = args.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label16;

     label11:
        $r34 = new java.io.File;

        $r35 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r36 = (at.favre.tools.dconvert.converters.descriptors.DensityDescriptor) $r35;

        $r37 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r38 = (java.awt.Dimension) $r37;

        $r39 = virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: java.lang.String createDestinationFileNameWithoutExtension(at.favre.tools.dconvert.converters.descriptors.DensityDescriptor,java.awt.Dimension,java.lang.String,at.favre.tools.dconvert.arg.Arguments)>($r36, $r38, targetImageFileName, args);

        specialinvoke $r34.<java.io.File: void <init>(java.io.File,java.lang.String)>(dstFolder, $r39);

        imageFile = $r34;

        $r40 = virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("process ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(imageFile);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r43 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r44 = (java.awt.Dimension) $r43;

        $i5 = $r44.<java.awt.Dimension: int width>;

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r47 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r48 = (java.awt.Dimension) $r47;

        $i6 = $r48.<java.awt.Dimension: int height>;

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (x");

        $r51 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r52 = (at.favre.tools.dconvert.converters.descriptors.DensityDescriptor) $r51;

        $f3 = $r52.<at.favre.tools.dconvert.converters.descriptors.DensityDescriptor: float scale>;

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch);

        if isNinePatch == 0 goto label12;

        $r55 = "(9-patch)";

        goto label13;

     label12:
        $r55 = "";

     label13:
        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z9 = args.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 != 0 goto label16;

        $r58 = new at.favre.tools.dconvert.converters.scaling.ImageHandler;

        specialinvoke $r58.<at.favre.tools.dconvert.converters.scaling.ImageHandler: void <init>(at.favre.tools.dconvert.arg.Arguments)>(args);

        $r59 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r60 = (java.awt.Dimension) $r59;

        files = virtualinvoke $r58.<at.favre.tools.dconvert.converters.scaling.ImageHandler: java.util.List saveToFile(java.io.File,at.favre.tools.dconvert.util.LoadedImage,java.awt.Dimension,boolean)>(imageFile, imageData, $r60, isNinePatch);

        interfaceinvoke allResultingFiles.<java.util.List: boolean addAll(java.util.Collection)>(files);

        l17 = interfaceinvoke files.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z11 = interfaceinvoke l17.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label15;

        $r61 = interfaceinvoke l17.<java.util.Iterator: java.lang.Object next()>();

        file = (java.io.File) $r61;

        $r62 = virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compressed to disk: ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r65 = <java.util.Locale: java.util.Locale US>;

        $r66 = newarray (java.lang.Object)[1];

        $l7 = virtualinvoke file.<java.io.File: long length()>();

        $f4 = (float) $l7;

        $f5 = $f4 / 1024.0F;

        $r67 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r66[0] = $r67;

        $r68 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r65, "%.2f", $r66);

        $r69 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kB)\n");

        goto label14;

     label15:
        $z12 = interfaceinvoke files.<java.util.List: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label16;

        virtualinvoke log.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("files skipped\n");

     label16:
        goto label09;

     label17:
        virtualinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: void onPostExecute(at.favre.tools.dconvert.arg.Arguments)>(args);

        $r72 = virtualinvoke imageData.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        virtualinvoke $r72.<java.awt.image.BufferedImage: void flush()>();

        $r73 = new at.favre.tools.dconvert.converters.Result;

        $r74 = virtualinvoke log.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r73.<at.favre.tools.dconvert.converters.Result: void <init>(java.lang.String,java.util.List)>($r74, allResultingFiles);

     label18:
        return $r73;

     label19:
        $r75 := @caughtexception;

        e = $r75;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

        $r76 = new at.favre.tools.dconvert.converters.Result;

        $r77 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r76.<at.favre.tools.dconvert.converters.Result: void <init>(java.lang.String,java.lang.Exception,java.util.List)>(null, e, $r77);

        return $r76;

        catch java.lang.Exception from label01 to label18 with label19;
    }


