    public static void main(java.lang.String[])
    {
        java.lang.String[] rawArgs;
        java.io.File src, dst, tmp$1514778448, tmp$2012808675;
        boolean scaleIsHeightdp, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, dryRun, help, version, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        java.util.ResourceBundle strings;
        org.apache.commons.cli.Options options;
        at.favre.tools.dconvert.arg.Arguments args, tmp$2143559864;
        at.favre.tools.dconvert.MainHandlerCallback myHanlderCallBack, tmp$1334675172;
        at.favre.tools.dconvert.DConvert convert, tmp$379056819;
        java.lang.String $r2, $r5, $r8, $r11, $r38, $r40, $r48;
        java.lang.StringBuilder $r3, $r4, $r9, $r10, $r35, $r39, $r44, $r46, $r47, tmp$1452445207, tmp$2034046523, tmp$77029509, tmp$238612663;
        java.lang.Boolean $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        byte scale#86;
        at.favre.tools.dconvert.arg.EPlatform[] $r29;
        at.favre.tools.dconvert.arg.EPlatform $r30;
        java.util.List $r31, $r45;
        java.lang.Object platforms#95;
        at.favre.tools.dconvert.arg.EOutputCompressionMode compressionMode#97;
        at.favre.tools.dconvert.arg.EScaleMode scaleMode#99;
        at.favre.tools.dconvert.arg.EScalingAlgorithm downScaling#102, upScaling#104;
        float compressionQuality#106, $f0;
        java.util.Locale $r32;
        java.io.PrintStream $r33, $r42;
        java.lang.Class $r36;
        java.lang.Package $r37;
        int $i0;
        java.util.HashSet tmp$864511710;
        java.util.Set tmp$1987418535;

        rawArgs := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        tmp$1514778448 = new java.io.File;

        tmp$1452445207 = new java.lang.StringBuilder;

        specialinvoke tmp$1452445207.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r3 = virtualinvoke tmp$1452445207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/density/files/person.jpg");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1514778448.<java.io.File: void <init>(java.lang.String)>($r5);

        src = tmp$1514778448;

        tmp$2012808675 = new java.io.File;

        tmp$2034046523 = new java.lang.StringBuilder;

        specialinvoke tmp$2034046523.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r9 = virtualinvoke tmp$2034046523.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/density/output");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$2012808675.<java.io.File: void <init>(java.lang.String)>($r11);

        dst = tmp$2012808675;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALE(boolean)>($z0);

        <at.favre.tools.dconvert.Main: boolean SCALE> = $z1;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z2 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPLATFORM(boolean)>($z2);

        <at.favre.tools.dconvert.Main: boolean PLATFORM> = $z3;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z4 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionOUTPUTCOMPRESSIONGMODE(boolean)>($z4);

        <at.favre.tools.dconvert.Main: boolean OUTPUTCOMPRESSIONGMODE> = $z5;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z6 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALEMODE(boolean)>($z6);

        <at.favre.tools.dconvert.Main: boolean SCALEMODE> = $z7;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z8 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALEISHEIGHTDP(boolean)>($z8);

        <at.favre.tools.dconvert.Main: boolean SCALEISHEIGHTDP> = $z9;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z10 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDOWNSCALINGALGORITHM(boolean)>($z10);

        <at.favre.tools.dconvert.Main: boolean DOWNSCALINGALGORITHM> = $z11;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z12 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUPSCALINGALGORITHM(boolean)>($z12);

        <at.favre.tools.dconvert.Main: boolean UPSCALINGALGORITHM> = $z13;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z14 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSQUALITY(boolean)>($z14);

        <at.favre.tools.dconvert.Main: boolean COMPRESSQUALITY> = $z15;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z16 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSKIPEXISTINGFILES(boolean)>($z16);

        <at.favre.tools.dconvert.Main: boolean SKIPEXISTINGFILES> = $z17;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z18 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSKIPUPSCALING(boolean)>($z18);

        <at.favre.tools.dconvert.Main: boolean SKIPUPSCALING> = $z19;

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z20 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERBOSELOG(boolean)>($z20);

        <at.favre.tools.dconvert.Main: boolean VERBOSELOG> = $z21;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z22 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionINCLUDEANDROIDLDPITVDPI(boolean)>($z22);

        <at.favre.tools.dconvert.Main: boolean INCLUDEANDROIDLDPITVDPI> = $z23;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z24 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>();

        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionHALTONERROR(boolean)>($z24);

        <at.favre.tools.dconvert.Main: boolean HALTONERROR> = $z25;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z26 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDRYRUN(boolean)>($z26);

        <at.favre.tools.dconvert.Main: boolean DRYRUN> = $z27;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z28 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionHELP(boolean)>($z28);

        <at.favre.tools.dconvert.Main: boolean HELP> = $z29;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z30 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERSION(boolean)>($z30);

        <at.favre.tools.dconvert.Main: boolean VERSION> = $z31;

        scale#86 = 1;

        tmp$864511710 = new java.util.HashSet;

        $r29 = newarray (at.favre.tools.dconvert.arg.EPlatform)[1];

        $r30 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID>;

        $r29[0] = $r30;

        $r31 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        specialinvoke tmp$864511710.<java.util.HashSet: void <init>(java.util.Collection)>($r31);

        platforms#95 = tmp$864511710;

        compressionMode#97 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG>;

        scaleMode#99 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR>;

        scaleIsHeightdp = <at.favre.tools.dconvert.Main: boolean SCALEISHEIGHTDP>;

        downScaling#102 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        upScaling#104 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        compressionQuality#106 = 0.9F;

        skipExistingFiles = <at.favre.tools.dconvert.Main: boolean SKIPEXISTINGFILES>;

        skipUpScaling = <at.favre.tools.dconvert.Main: boolean SKIPUPSCALING>;

        verboseLog = <at.favre.tools.dconvert.Main: boolean VERBOSELOG>;

        includeAndroiddpiTvdpi = <at.favre.tools.dconvert.Main: boolean INCLUDEANDROIDLDPITVDPI>;

        haltOnError = <at.favre.tools.dconvert.Main: boolean HALTONERROR>;

        dryRun = <at.favre.tools.dconvert.Main: boolean DRYRUN>;

        help = <at.favre.tools.dconvert.Main: boolean HELP>;

        version = <at.favre.tools.dconvert.Main: boolean VERSION>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(help);

        if help == 0 goto label01;

        $r32 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        strings = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("bundles.strings", $r32);

        options = staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: org.apache.commons.cli.Options setupOptions(java.util.ResourceBundle)>(strings);

        staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: void printHelp(org.apache.commons.cli.Options)>(options);

        return;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(version);

        if version == 0 goto label02;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        tmp$77029509 = new java.lang.StringBuilder;

        specialinvoke tmp$77029509.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke tmp$77029509.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version: ");

        $r36 = class "at/favre/tools/dconvert/ui/CLIInterpreter";

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.Package getPackage()>();

        $r38 = virtualinvoke $r37.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r40);

        return;

     label02:
        $z32 = <at.favre.tools.dconvert.Main: boolean SCALE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z32);

        if $z32 == 0 goto label03;

        scale#86 = 5;

     label03:
        $z33 = <at.favre.tools.dconvert.Main: boolean PLATFORM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z33);

        if $z33 == 0 goto label04;

        platforms#95 = staticinvoke <at.favre.tools.dconvert.arg.EPlatform: java.util.Set getAll()>();

     label04:
        $z34 = <at.favre.tools.dconvert.Main: boolean OUTPUTCOMPRESSIONGMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z34);

        if $z34 == 0 goto label05;

        compressionMode#97 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG_AND_PNG>;

     label05:
        $z35 = <at.favre.tools.dconvert.Main: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z35);

        if $z35 == 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scaleIsHeightdp);

        if scaleIsHeightdp == 0 goto label06;

        scaleMode#99 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_HEIGHT>;

        goto label07;

     label06:
        $z36 = <at.favre.tools.dconvert.Main: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z36);

        if $z36 == 0 goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scaleIsHeightdp);

        if scaleIsHeightdp != 0 goto label07;

        scaleMode#99 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_WIDTH>;

     label07:
        $z37 = <at.favre.tools.dconvert.Main: boolean DOWNSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z37);

        if $z37 == 0 goto label08;

        downScaling#102 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR_PROGRESSIVE>;

     label08:
        $z38 = <at.favre.tools.dconvert.Main: boolean UPSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z38);

        if $z38 == 0 goto label09;

        upScaling#104 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR>;

     label09:
        $z39 = <at.favre.tools.dconvert.Main: boolean COMPRESSQUALITY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z39);

        if $z39 == 0 goto label10;

        compressionQuality#106 = 0.1F;

     label10:
        tmp$2143559864 = new at.favre.tools.dconvert.arg.Arguments;

        $f0 = (float) scale#86;

        tmp$1987418535 = (java.util.Set) platforms#95;

        specialinvoke tmp$2143559864.<at.favre.tools.dconvert.arg.Arguments: void <init>(java.io.File,java.io.File,float,java.util.Set,at.favre.tools.dconvert.arg.EOutputCompressionMode,at.favre.tools.dconvert.arg.EScaleMode,at.favre.tools.dconvert.arg.EScalingAlgorithm,at.favre.tools.dconvert.arg.EScalingAlgorithm,float,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,at.favre.tools.dconvert.arg.RoundingHandler$Strategy,boolean,boolean)>(src, dst, $f0, tmp$1987418535, compressionMode#97, scaleMode#99, downScaling#102, upScaling#104, compressionQuality#106, 1, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, 0, 0, 0, 0, 0, 0, dryRun, 0, null, 0, 0);

        args = tmp$2143559864;

        $r42 = <java.lang.System: java.io.PrintStream out>;

        tmp$238612663 = new java.lang.StringBuilder;

        specialinvoke tmp$238612663.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke tmp$238612663.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start converting ");

        $r45 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess>;

        $i0 = interfaceinvoke $r45.<java.util.List: int size()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r48);

        tmp$1334675172 = new at.favre.tools.dconvert.MainHandlerCallback;

        $z40 = args.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog>;

        specialinvoke tmp$1334675172.<at.favre.tools.dconvert.MainHandlerCallback: void <init>(boolean)>($z40);

        myHanlderCallBack = tmp$1334675172;

        tmp$379056819 = new at.favre.tools.dconvert.DConvert;

        specialinvoke tmp$379056819.<at.favre.tools.dconvert.DConvert: void <init>()>();

        convert = tmp$379056819;

        virtualinvoke convert.<at.favre.tools.dconvert.DConvert: void execute(at.favre.tools.dconvert.arg.Arguments,boolean,at.favre.tools.dconvert.DConvert$HandlerCallback)>(args, 1, myHanlderCallBack);

        return;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.Main this;

        this := @this: at.favre.tools.dconvert.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


