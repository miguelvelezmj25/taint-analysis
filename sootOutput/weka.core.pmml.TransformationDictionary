    protected void <init>(org.w3c.dom.Element, weka.core.Instances) throws java.lang.Exception
    {
        weka.core.pmml.TransformationDictionary this;
        org.w3c.dom.Element dictionary, $r2, $r4, $r7;
        weka.core.Instances dataDictionary;
        org.w3c.dom.NodeList derivedL;
        org.w3c.dom.Node child;
        java.lang.String tagName;
        weka.core.pmml.DerivedFieldMetaInfo df, $r3;
        weka.core.pmml.DefineFunction defF, $r6;
        java.util.ArrayList $r0, $r1, $r5, $r8;
        int i#11, $i0;
        short $s1;
        boolean $z0, $z2;

        this := @this: weka.core.pmml.TransformationDictionary;

        dictionary := @parameter0: org.w3c.dom.Element;

        dataDictionary := @parameter1: weka.core.Instances;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields> = $r1;

        derivedL = interfaceinvoke dictionary.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i#11 = 0;

     label1:
        $i0 = interfaceinvoke derivedL.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#11 >= $i0 goto label4;

        child = interfaceinvoke derivedL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#11);

        $s1 = interfaceinvoke child.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if $s1 != 1 goto label3;

        $r2 = (org.w3c.dom.Element) child;

        tagName = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("DerivedField");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r3 = new weka.core.pmml.DerivedFieldMetaInfo;

        $r4 = (org.w3c.dom.Element) child;

        specialinvoke $r3.<weka.core.pmml.DerivedFieldMetaInfo: void <init>(org.w3c.dom.Element,java.util.ArrayList,weka.core.pmml.TransformationDictionary)>($r4, null, null);

        df = $r3;

        $r5 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(df);

        goto label3;

     label2:
        $z2 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("DefineFunction");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r6 = new weka.core.pmml.DefineFunction;

        $r7 = (org.w3c.dom.Element) child;

        specialinvoke $r6.<weka.core.pmml.DefineFunction: void <init>(org.w3c.dom.Element,weka.core.pmml.TransformationDictionary)>($r7, null);

        defF = $r6;

        $r8 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(defF);

     label3:
        i#11 = i#11 + 1;

        goto label1;

     label4:
        return;
    }

    protected java.util.ArrayList getDerivedFields()
    {
        weka.core.pmml.TransformationDictionary this;
        java.util.ArrayList $r0, $r1;

        this := @this: weka.core.pmml.TransformationDictionary;

        $r0 = new java.util.ArrayList;

        $r1 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        return $r0;
    }

    protected void setFieldDefsForDerivedFields(weka.core.Instances) throws java.lang.Exception
    {
        weka.core.pmml.TransformationDictionary this;
        weka.core.Instances fieldDefs;
        java.util.ArrayList tempDefs, $r0;
        int i#4, $i0;
        weka.core.Attribute $r1;

        this := @this: weka.core.pmml.TransformationDictionary;

        fieldDefs := @parameter0: weka.core.Instances;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        tempDefs = $r0;

        i#4 = 0;

     label1:
        $i0 = virtualinvoke fieldDefs.<weka.core.Instances: int numAttributes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#4 >= $i0 goto label2;

        $r1 = virtualinvoke fieldDefs.<weka.core.Instances: weka.core.Attribute attribute(int)>(i#4);

        virtualinvoke tempDefs.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        i#4 = i#4 + 1;

        goto label1;

     label2:
        virtualinvoke this.<weka.core.pmml.TransformationDictionary: void setFieldDefsForDerivedFields(java.util.ArrayList)>(tempDefs);

        return;
    }

    protected void setFieldDefsForDerivedFields(java.util.ArrayList) throws java.lang.Exception
    {
        weka.core.pmml.TransformationDictionary this;
        java.util.ArrayList fieldDefs, $r0, $r1, $r4, $r5;
        int i#2, $i0, i#14, $i1;
        java.lang.Object $r2, $r6;
        weka.core.pmml.DerivedFieldMetaInfo $r3;
        weka.core.pmml.DefineFunction $r7;

        this := @this: weka.core.pmml.TransformationDictionary;

        fieldDefs := @parameter0: java.util.ArrayList;

        i#2 = 0;

     label1:
        $r0 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields>;

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#2 >= $i0 goto label2;

        $r1 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i#2);

        $r3 = (weka.core.pmml.DerivedFieldMetaInfo) $r2;

        virtualinvoke $r3.<weka.core.pmml.DerivedFieldMetaInfo: void setFieldDefs(java.util.ArrayList)>(fieldDefs);

        i#2 = i#2 + 1;

        goto label1;

     label2:
        i#14 = 0;

     label3:
        $r4 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if i#14 >= $i1 goto label4;

        $r5 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i#14);

        $r7 = (weka.core.pmml.DefineFunction) $r6;

        virtualinvoke $r7.<weka.core.pmml.DefineFunction: void pushParameterDefs()>();

        i#14 = i#14 + 1;

        goto label3;

     label4:
        return;
    }

    protected weka.core.pmml.DefineFunction getFunction(java.lang.String) throws java.lang.Exception
    {
        weka.core.pmml.TransformationDictionary this;
        java.lang.String functionName, $r2;
        java.util.Iterator l4;
        weka.core.pmml.DefineFunction f, copy#2, match#4;
        weka.core.SerializedObject so, $r3;
        java.util.ArrayList $r0;
        boolean $z0, $z1;
        java.lang.Object $r1, $r4;

        this := @this: weka.core.pmml.TransformationDictionary;

        functionName := @parameter0: java.lang.String;

        copy#2 = null;

        match#4 = null;

        $r0 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions>;

        l4 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        f = (weka.core.pmml.DefineFunction) $r1;

        $r2 = virtualinvoke f.<weka.core.pmml.DefineFunction: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(functionName);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        match#4 = f;

        goto label3;

     label2:
        goto label1;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(match#4);

        if match#4 == null goto label4;

        $r3 = new weka.core.SerializedObject;

        specialinvoke $r3.<weka.core.SerializedObject: void <init>(java.lang.Object,boolean)>(match#4, 0);

        so = $r3;

        $r4 = virtualinvoke so.<weka.core.SerializedObject: java.lang.Object getObject()>();

        copy#2 = (weka.core.pmml.DefineFunction) $r4;

     label4:
        return copy#2;
    }

    public java.lang.String toString()
    {
        weka.core.pmml.TransformationDictionary this;
        java.lang.StringBuffer buff, $r0;
        weka.core.pmml.DerivedFieldMetaInfo d;
        weka.core.pmml.DefineFunction f;
        java.util.ArrayList $r2, $r4, $r13, $r15;
        int $i0, $i1;
        java.util.Iterator l2#15, l2#42;
        boolean $z0, $z1;
        java.lang.Object $r5, $r16;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r17, $r19, $r20;
        weka.core.Attribute $r8;
        java.lang.String $r11, $r18, $r21, $r24;

        this := @this: weka.core.pmml.TransformationDictionary;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        buff = $r0;

        virtualinvoke buff.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Transformation dictionary:\n");

        $r2 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label2;

        virtualinvoke buff.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("derived fields:\n");

        $r4 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_derivedFields>;

        l2#15 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2#15.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke l2#15.<java.util.Iterator: java.lang.Object next()>();

        d = (weka.core.pmml.DerivedFieldMetaInfo) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke d.<weka.core.pmml.DerivedFieldMetaInfo: weka.core.Attribute getFieldAsAttribute()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buff.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label1;

     label2:
        $r13 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions>;

        $i1 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label4;

        virtualinvoke buff.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nfunctions:\n");

        $r15 = this.<weka.core.pmml.TransformationDictionary: java.util.ArrayList m_defineFunctions>;

        l2#42 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke l2#42.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke l2#42.<java.util.Iterator: java.lang.Object next()>();

        f = (weka.core.pmml.DefineFunction) $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke f.<weka.core.pmml.DefineFunction: java.lang.String toString(java.lang.String)>("  ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buff.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        goto label3;

     label4:
        virtualinvoke buff.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r24 = virtualinvoke buff.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r24;
    }


