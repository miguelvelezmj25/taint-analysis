    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.io.ObjectStreamField $r1, $r2, $r4;
        java.lang.Class $r3, $r5;

        $r0 = newarray (java.io.ObjectStreamField)[3];

        $r1 = new java.io.ObjectStreamField;

        specialinvoke $r1.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("value", class "[C");

        $r0[0] = $r1;

        $r2 = new java.io.ObjectStreamField;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r2.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("count", $r3);

        $r0[1] = $r2;

        $r4 = new java.io.ObjectStreamField;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r4.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("shared", $r5);

        $r0[2] = $r4;

        <java.lang.StringBuffer: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        return;
    }

    public synchronized java.lang.StringBuffer append(java.lang.String)
    {
        java.lang.StringBuffer l0;
        java.lang.String l1;

        l0 := @this: java.lang.StringBuffer;

        l1 := @parameter0: java.lang.String;

        l0.<java.lang.StringBuffer: char[] toStringCache> = null;

        specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>(l1);

        return l0;
    }

    public synchronized java.lang.StringBuffer append(char)
    {
        java.lang.StringBuffer l0;
        char l1;

        l0 := @this: java.lang.StringBuffer;

        l1 := @parameter0: char;

        l0.<java.lang.StringBuffer: char[] toStringCache> = null;

        specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(char)>(l1);

        return l0;
    }

    public synchronized java.lang.String toString()
    {
        java.lang.StringBuffer l0;
        char[] $r0, $r1, $r2, $r4;
        int $i0;
        java.lang.String $r3;

        l0 := @this: java.lang.StringBuffer;

        $r0 = l0.<java.lang.StringBuffer: char[] toStringCache>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = l0.<java.lang.StringBuffer: char[] value>;

        $i0 = l0.<java.lang.StringBuffer: int count>;

        $r2 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($r1, 0, $i0);

        l0.<java.lang.StringBuffer: char[] toStringCache> = $r2;

     label1:
        $r3 = new java.lang.String;

        $r4 = l0.<java.lang.StringBuffer: char[] toStringCache>;

        specialinvoke $r3.<java.lang.String: void <init>(char[],boolean)>($r4, 1);

        return $r3;
    }

    public void <init>(int)
    {
        java.lang.StringBuffer l0;
        int l1;

        l0 := @this: java.lang.StringBuffer;

        l1 := @parameter0: int;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void <init>(int)>(l1);

        return;
    }


