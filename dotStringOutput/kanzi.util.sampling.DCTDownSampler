digraph supportsScalingFactor {
"this := @this: kanzi.util.sampling.DCTDownSampler {849298640}" -> "factor := @parameter0: int {1393762085}";
"factor := @parameter0: int {1393762085}" -> "if factor != 2 goto $z0 = 0 {1264531832}";
"if factor != 2 goto $z0 = 0 {1264531832}" -> "$z0 = 1 {1591750700}";
"if factor != 2 goto $z0 = 0 {1264531832}" -> "$z0 = 0 {456802316}";
"$z0 = 1 {1591750700}" -> "goto [?= return $z0] {520014017}";
"goto [?= return $z0] {520014017}" -> "return $z0 {698105578}";
"$z0 = 0 {456802316}" -> "return $z0 {698105578}";
}

digraph subSample {
"this := @this: kanzi.util.sampling.DCTDownSampler {678523587}" -> "input := @parameter0: int[] {1602042688}";
"input := @parameter0: int[] {1602042688}" -> "output := @parameter1: int[] {1813861831}";
"output := @parameter1: int[] {1813861831}" -> "offs#3 = this.<kanzi.util.sampling.DCTDownSampler: int offset> {1512984485}";
"offs#3 = this.<kanzi.util.sampling.DCTDownSampler: int offset> {1512984485}" -> "h = this.<kanzi.util.sampling.DCTDownSampler: int height> {485601308}";
"h = this.<kanzi.util.sampling.DCTDownSampler: int height> {485601308}" -> "w = this.<kanzi.util.sampling.DCTDownSampler: int width> {1514947844}";
"w = this.<kanzi.util.sampling.DCTDownSampler: int width> {1514947844}" -> "st = this.<kanzi.util.sampling.DCTDownSampler: int stride> {1073351579}";
"st = this.<kanzi.util.sampling.DCTDownSampler: int stride> {1073351579}" -> "buf1 = this.<kanzi.util.sampling.DCTDownSampler: int[] buffer1> {746203647}";
"buf1 = this.<kanzi.util.sampling.DCTDownSampler: int[] buffer1> {746203647}" -> "buf2 = this.<kanzi.util.sampling.DCTDownSampler: int[] buffer2> {1574505773}";
"buf2 = this.<kanzi.util.sampling.DCTDownSampler: int[] buffer2> {1574505773}" -> "$i0 = this.<kanzi.util.sampling.DCTDownSampler: int dim> {358776696}";
"$i0 = this.<kanzi.util.sampling.DCTDownSampler: int dim> {358776696}" -> "$i1 = this.<kanzi.util.sampling.DCTDownSampler: int dim> {957538114}";
"$i1 = this.<kanzi.util.sampling.DCTDownSampler: int dim> {957538114}" -> "count = $i0 * $i1 {75754047}";
"count = $i0 * $i1 {75754047}" -> "$r0 = new kanzi.SliceIntArray {725929250}";
"$r0 = new kanzi.SliceIntArray {725929250}" -> "specialinvoke $r0.<kanzi.SliceIntArray: void <init>(int[],int)>(buf1, 0) {1015298851}";
"specialinvoke $r0.<kanzi.SliceIntArray: void <init>(int[],int)>(buf1, 0) {1015298851}" -> "src = $r0 {906427408}";
"src = $r0 {906427408}" -> "$r1 = new kanzi.SliceIntArray {1489999026}";
"$r1 = new kanzi.SliceIntArray {1489999026}" -> "specialinvoke $r1.<kanzi.SliceIntArray: void <init>(int[],int)>(buf2, 0) {365931066}";
"specialinvoke $r1.<kanzi.SliceIntArray: void <init>(int[],int)>(buf2, 0) {365931066}" -> "dst = $r1 {770029597}";
"dst = $r1 {770029597}" -> "step = this.<kanzi.util.sampling.DCTDownSampler: int dim> {1776646814}";
"step = this.<kanzi.util.sampling.DCTDownSampler: int dim> {1776646814}" -> "stStep = st * step {305520350}";
"stStep = st * step {305520350}" -> "count4 = count >> 2 {14244106}";
"count4 = count >> 2 {14244106}" -> "y#36 = 0 {38616905}";
"y#36 = 0 {38616905}" -> "if y#36 >= h goto return {2147233814}";
"if y#36 >= h goto return {2147233814}" -> "x#40 = 0 {742850226}";
"if y#36 >= h goto return {2147233814}" -> "return {1977795725}";
"x#40 = 0 {742850226}" -> "if x#40 >= w goto offs#3 = offs#3 + stStep {1999313982}";
"if x#40 >= w goto offs#3 = offs#3 + stStep {1999313982}" -> "n#44 = 0 {399233469}";
"if x#40 >= w goto offs#3 = offs#3 + stStep {1999313982}" -> "offs#3 = offs#3 + stStep {1621489333}";
"n#44 = 0 {399233469}" -> "iOffs#46 = offs#3 {1911963943}";
"iOffs#46 = offs#3 {1911963943}" -> "j#48 = 0 {34987042}";
"j#48 = 0 {34987042}" -> "if j#48 >= step goto src.<kanzi.SliceIntArray: int index> = 0 {1623404387}";
"if j#48 >= step goto src.<kanzi.SliceIntArray: int index> = 0 {1623404387}" -> "i#52 = 0 {1559023798}";
"if j#48 >= step goto src.<kanzi.SliceIntArray: int index> = 0 {1623404387}" -> "src.<kanzi.SliceIntArray: int index> = 0 {340486233}";
"i#52 = 0 {1559023798}" -> "if i#52 >= step goto iOffs#46 = iOffs#46 + st {814980609}";
"if i#52 >= step goto iOffs#46 = iOffs#46 + st {814980609}" -> "$i2 = iOffs#46 + x#40 {85473238}";
"if i#52 >= step goto iOffs#46 = iOffs#46 + st {814980609}" -> "iOffs#46 = iOffs#46 + st {1459443408}";
"$i2 = iOffs#46 + x#40 {85473238}" -> "idx = $i2 + i#52 {732875122}";
"idx = $i2 + i#52 {732875122}" -> "$i3 = input[idx] {22663536}";
"$i3 = input[idx] {22663536}" -> "buf1[n#44] = $i3 {769181676}";
"buf1[n#44] = $i3 {769181676}" -> "$i4 = n#44 + 1 {287706417}";
"$i4 = n#44 + 1 {287706417}" -> "$i5 = idx + 1 {1985527020}";
"$i5 = idx + 1 {1985527020}" -> "$i6 = input[$i5] {1746161453}";
"$i6 = input[$i5] {1746161453}" -> "buf1[$i4] = $i6 {1108675376}";
"buf1[$i4] = $i6 {1108675376}" -> "$i7 = n#44 + 2 {750731310}";
"$i7 = n#44 + 2 {750731310}" -> "$i8 = idx + 2 {541354181}";
"$i8 = idx + 2 {541354181}" -> "$i9 = input[$i8] {455601022}";
"$i9 = input[$i8] {455601022}" -> "buf1[$i7] = $i9 {1256727974}";
"buf1[$i7] = $i9 {1256727974}" -> "$i10 = n#44 + 3 {1996661335}";
"$i10 = n#44 + 3 {1996661335}" -> "$i11 = idx + 3 {59750583}";
"$i11 = idx + 3 {59750583}" -> "$i12 = input[$i11] {198303922}";
"$i12 = input[$i11] {198303922}" -> "buf1[$i10] = $i12 {1566151702}";
"buf1[$i10] = $i12 {1566151702}" -> "$i13 = n#44 + 4 {986856344}";
"$i13 = n#44 + 4 {986856344}" -> "$i14 = idx + 4 {826505911}";
"$i14 = idx + 4 {826505911}" -> "$i15 = input[$i14] {1577597730}";
"$i15 = input[$i14] {1577597730}" -> "buf1[$i13] = $i15 {1306068237}";
"buf1[$i13] = $i15 {1306068237}" -> "$i16 = n#44 + 5 {1400078201}";
"$i16 = n#44 + 5 {1400078201}" -> "$i17 = idx + 5 {984072277}";
"$i17 = idx + 5 {984072277}" -> "$i18 = input[$i17] {1645136715}";
"$i18 = input[$i17] {1645136715}" -> "buf1[$i16] = $i18 {1169749103}";
"buf1[$i16] = $i18 {1169749103}" -> "$i19 = n#44 + 6 {442810955}";
"$i19 = n#44 + 6 {442810955}" -> "$i20 = idx + 6 {1583281988}";
"$i20 = idx + 6 {1583281988}" -> "$i21 = input[$i20] {205594125}";
"$i21 = input[$i20] {205594125}" -> "buf1[$i19] = $i21 {1829946997}";
"buf1[$i19] = $i21 {1829946997}" -> "$i22 = n#44 + 7 {2035871781}";
"$i22 = n#44 + 7 {2035871781}" -> "$i23 = idx + 7 {275739264}";
"$i23 = idx + 7 {275739264}" -> "$i24 = input[$i23] {1109886196}";
"$i24 = input[$i23] {1109886196}" -> "buf1[$i22] = $i24 {1232309470}";
"buf1[$i22] = $i24 {1232309470}" -> "n#44 = n#44 + 8 {614674122}";
"n#44 = n#44 + 8 {614674122}" -> "i#52 = i#52 + 8 {1328784300}";
"i#52 = i#52 + 8 {1328784300}" -> "goto [?= (branch)] {835554970}";
"goto [?= (branch)] {835554970}" -> "if i#52 >= step goto iOffs#46 = iOffs#46 + st {814980609}";
"iOffs#46 = iOffs#46 + st {1459443408}" -> "j#48 = j#48 + 1 {1567863031}";
"j#48 = j#48 + 1 {1567863031}" -> "goto [?= (branch)] {785680667}";
"goto [?= (branch)] {785680667}" -> "if j#48 >= step goto src.<kanzi.SliceIntArray: int index> = 0 {1623404387}";
"src.<kanzi.SliceIntArray: int index> = 0 {340486233}" -> "dst.<kanzi.SliceIntArray: int index> = 0 {514518335}";
"dst.<kanzi.SliceIntArray: int index> = 0 {514518335}" -> "src.<kanzi.SliceIntArray: int length> = count {1899622582}";
"src.<kanzi.SliceIntArray: int length> = count {1899622582}" -> "$r2 = this.<kanzi.util.sampling.DCTDownSampler: kanzi.IntTransform fdct> {190096481}";
"$r2 = this.<kanzi.util.sampling.DCTDownSampler: kanzi.IntTransform fdct> {190096481}" -> "interfaceinvoke $r2.<kanzi.IntTransform: boolean forward(kanzi.SliceIntArray,kanzi.SliceIntArray)>(src, dst) {358075429}";
"interfaceinvoke $r2.<kanzi.IntTransform: boolean forward(kanzi.SliceIntArray,kanzi.SliceIntArray)>(src, dst) {358075429}" -> "i#143 = count4 {173572983}";
"i#143 = count4 {173572983}" -> "if i#143 >= count goto i#150 = 0 {99122004}";
"if i#143 >= count goto i#150 = 0 {99122004}" -> "buf1[i#143] = 0 {125264878}";
"if i#143 >= count goto i#150 = 0 {99122004}" -> "i#150 = 0 {72044124}";
"buf1[i#143] = 0 {125264878}" -> "i#143 = i#143 + 1 {1693196430}";
"i#143 = i#143 + 1 {1693196430}" -> "goto [?= (branch)] {1699947987}";
"goto [?= (branch)] {1699947987}" -> "if i#143 >= count goto i#150 = 0 {99122004}";
"i#150 = 0 {72044124}" -> "if i#150 >= count4 goto src.<kanzi.SliceIntArray: int index> = 0 {1022136677}";
"if i#150 >= count4 goto src.<kanzi.SliceIntArray: int index> = 0 {1022136677}" -> "$r3 = this.<kanzi.util.sampling.DCTDownSampler: int[] scan> {1929151236}";
"if i#150 >= count4 goto src.<kanzi.SliceIntArray: int index> = 0 {1022136677}" -> "src.<kanzi.SliceIntArray: int index> = 0 {939994864}";
"$r3 = this.<kanzi.util.sampling.DCTDownSampler: int[] scan> {1929151236}" -> "$i25 = $r3[i#150] {1005529390}";
"$i25 = $r3[i#150] {1005529390}" -> "$i26 = buf2[$i25] {1569642980}";
"$i26 = buf2[$i25] {1569642980}" -> "buf1[i#150] = $i26 {1266456050}";
"buf1[i#150] = $i26 {1266456050}" -> "i#150 = i#150 + 1 {1042273953}";
"i#150 = i#150 + 1 {1042273953}" -> "goto [?= (branch)] {2096840213}";
"goto [?= (branch)] {2096840213}" -> "if i#150 >= count4 goto src.<kanzi.SliceIntArray: int index> = 0 {1022136677}";
"src.<kanzi.SliceIntArray: int index> = 0 {939994864}" -> "dst.<kanzi.SliceIntArray: int index> = 0 {1417431026}";
"dst.<kanzi.SliceIntArray: int index> = 0 {1417431026}" -> "src.<kanzi.SliceIntArray: int length> = count4 {1033601228}";
"src.<kanzi.SliceIntArray: int length> = count4 {1033601228}" -> "$r4 = this.<kanzi.util.sampling.DCTDownSampler: kanzi.IntTransform idct> {851647903}";
"$r4 = this.<kanzi.util.sampling.DCTDownSampler: kanzi.IntTransform idct> {851647903}" -> "interfaceinvoke $r4.<kanzi.IntTransform: boolean inverse(kanzi.SliceIntArray,kanzi.SliceIntArray)>(src, dst) {1842772221}";
"interfaceinvoke $r4.<kanzi.IntTransform: boolean inverse(kanzi.SliceIntArray,kanzi.SliceIntArray)>(src, dst) {1842772221}" -> "$i27 = offs#3 >> 2 {88053984}";
"$i27 = offs#3 >> 2 {88053984}" -> "$i28 = x#40 >> 1 {1179229613}";
"$i28 = x#40 >> 1 {1179229613}" -> "oOffs#179 = $i27 + $i28 {170458824}";
"oOffs#179 = $i27 + $i28 {170458824}" -> "n#181 = 0 {2023676876}";
"n#181 = 0 {2023676876}" -> "j#183 = 0 {1707480427}";
"j#183 = 0 {1707480427}" -> "$i29 = j#183 + j#183 {1037283080}";
"$i29 = j#183 + j#183 {1037283080}" -> "if $i29 >= step goto x#40 = x#40 + step {1155193583}";
"if $i29 >= step goto x#40 = x#40 + step {1155193583}" -> "i#189 = 0 {810463027}";
"if $i29 >= step goto x#40 = x#40 + step {1155193583}" -> "x#40 = x#40 + step {1461338232}";
"i#189 = 0 {810463027}" -> "$i30 = i#189 + i#189 {1487086802}";
"$i30 = i#189 + i#189 {1487086802}" -> "if $i30 >= step goto $i35 = st >> 1 {932835505}";
"if $i30 >= step goto $i35 = st >> 1 {932835505}" -> "val = buf2[n#181] {625312311}";
"if $i30 >= step goto $i35 = st >> 1 {932835505}" -> "$i35 = st >> 1 {1816079463}";
"val = buf2[n#181] {625312311}" -> "$i31 = oOffs#179 + i#189 {16003186}";
"$i31 = oOffs#179 + i#189 {16003186}" -> "if val < 255 goto $i33 = val >> 31 {1925256770}";
"if val < 255 goto $i33 = val >> 31 {1925256770}" -> "$i32 = 255 {1402458056}";
"if val < 255 goto $i33 = val >> 31 {1925256770}" -> "$i33 = val >> 31 {1879192729}";
"$i32 = 255 {1402458056}" -> "goto [?= output[$i31] = $i32] {1249575496}";
"goto [?= output[$i31] = $i32] {1249575496}" -> "output[$i31] = $i32 {183470304}";
"$i33 = val >> 31 {1879192729}" -> "$i34 = $i33 ^ -1 {1105548147}";
"$i34 = $i33 ^ -1 {1105548147}" -> "$i32 = val & $i34 {1797840864}";
"$i32 = val & $i34 {1797840864}" -> "output[$i31] = $i32 {183470304}";
"output[$i31] = $i32 {183470304}" -> "i#189 = i#189 + 1 {1434722392}";
"i#189 = i#189 + 1 {1434722392}" -> "n#181 = n#181 + 1 {1049730896}";
"n#181 = n#181 + 1 {1049730896}" -> "goto [?= $i30 = i#189 + i#189] {325816509}";
"goto [?= $i30 = i#189 + i#189] {325816509}" -> "$i30 = i#189 + i#189 {1487086802}";
"$i35 = st >> 1 {1816079463}" -> "oOffs#179 = oOffs#179 + $i35 {192580974}";
"oOffs#179 = oOffs#179 + $i35 {192580974}" -> "j#183 = j#183 + 1 {1573143286}";
"j#183 = j#183 + 1 {1573143286}" -> "goto [?= $i29 = j#183 + j#183] {1217200445}";
"goto [?= $i29 = j#183 + j#183] {1217200445}" -> "$i29 = j#183 + j#183 {1037283080}";
"x#40 = x#40 + step {1461338232}" -> "goto [?= (branch)] {1734304499}";
"goto [?= (branch)] {1734304499}" -> "if x#40 >= w goto offs#3 = offs#3 + stStep {1999313982}";
"offs#3 = offs#3 + stStep {1621489333}" -> "y#36 = y#36 + step {1301310921}";
"y#36 = y#36 + step {1301310921}" -> "goto [?= (branch)] {201190076}";
"goto [?= (branch)] {201190076}" -> "if y#36 >= h goto return {2147233814}";
}

digraph subSampleHorizontal {
"this := @this: kanzi.util.sampling.DCTDownSampler {978485541}" -> "input := @parameter0: int[] {83838274}";
"input := @parameter0: int[] {83838274}" -> "output := @parameter1: int[] {623399907}";
"output := @parameter1: int[] {623399907}" -> "$r0 = new java.lang.UnsupportedOperationException {457318828}";
"$r0 = new java.lang.UnsupportedOperationException {457318828}" -> "specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\"Not supported.\") {250634259}";
"specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\"Not supported.\") {250634259}" -> "throw $r0 {1483578926}";
}


