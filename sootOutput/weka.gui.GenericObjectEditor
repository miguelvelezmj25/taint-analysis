    public static java.util.Vector getClassnames(java.lang.String)
    {
        java.lang.String property;
        java.util.Set r;
        java.util.Vector result, $r0;
        weka.core.ClassDiscovery$StringCompare $r1;

        property := @parameter0: java.lang.String;

        r = staticinvoke <weka.core.PluginManager: java.util.Set getPluginNamesOfType(java.lang.String)>(property);

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        result = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(r);

        if r == null goto label1;

        virtualinvoke result.<java.util.Vector: boolean addAll(java.util.Collection)>(r);

     label1:
        $r1 = new weka.core.ClassDiscovery$StringCompare;

        specialinvoke $r1.<weka.core.ClassDiscovery$StringCompare: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(result, $r1);

        return result;
    }

    static void <clinit>()
    {
        <weka.gui.GenericObjectEditor: java.lang.String PROPERTY_FILE> = "weka/gui/GenericObjectEditor.props";

        staticinvoke <weka.gui.GenericObjectEditor: void determineClasses()>();

        return;
    }

    public static void determineClasses()
    {
        weka.gui.GenericPropertiesCreator creator, tmp$622255659;
        java.lang.Exception e, ex, $r4, $r14, tmp$2314614, tmp$1019042346;
        java.util.Enumeration keys;
        java.lang.Throwable e, $r27;
        boolean $z0, $z1, $z2;
        java.util.Properties $r0, $r1, $r3, $r11, $r12, $r20, $r25, $r26;
        java.lang.StringBuilder $r6, $r8, $r16, $r18, $r19, $r22, $r23, $r29, $r31, tmp$70664950, tmp$1860022925, tmp$1585944156;
        java.lang.String $r7, $r9, $r10, $r17, $r21, $r24, $r30, $r32;

     label01:
        staticinvoke <weka.core.WekaPackageManager: void loadPackages(boolean)>(0);

        $z0 = <weka.core.WekaPackageManager: boolean m_initialPackageLoadingInProcess>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

     label02:
        return;

     label03:
        $r0 = staticinvoke <weka.gui.GenericPropertiesCreator: java.util.Properties getGlobalOutputProperties()>();

        <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES> = $r0;

        $r1 = <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label10;

        tmp$622255659 = new weka.gui.GenericPropertiesCreator;

        specialinvoke tmp$622255659.<weka.gui.GenericPropertiesCreator: void <init>()>();

        creator = tmp$622255659;

        $z1 = virtualinvoke creator.<weka.gui.GenericPropertiesCreator: boolean useDynamic()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label07;

     label04:
        virtualinvoke creator.<weka.gui.GenericPropertiesCreator: void execute(boolean)>(0);

        $r3 = virtualinvoke creator.<weka.gui.GenericPropertiesCreator: java.util.Properties getOutputProperties()>();

        <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES> = $r3;

     label05:
        goto label10;

     label06:
        $r4 := @caughtexception;

        e = $r4;

        tmp$70664950 = new java.lang.StringBuilder;

        specialinvoke tmp$70664950.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke tmp$70664950.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not determine the properties for the generic object\neditor. This exception was produced:\n");

        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r9, "GenericObjectEditor", 0);

        goto label10;

     label07:
        $r10 = <weka.gui.GenericObjectEditor: java.lang.String PROPERTY_FILE>;

        $r11 = staticinvoke <weka.core.Utils: java.util.Properties readProperties(java.lang.String)>($r10);

        <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES> = $r11;

        $r12 = <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES>;

        keys = virtualinvoke $r12.<java.util.Properties: java.util.Enumeration propertyNames()>();

        $z2 = interfaceinvoke keys.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label08;

        tmp$2314614 = new java.lang.Exception;

        specialinvoke tmp$2314614.<java.lang.Exception: void <init>(java.lang.String)>("Failed to read a property file for the generic object editor");

        throw tmp$2314614;

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        ex = $r14;

        tmp$1860022925 = new java.lang.StringBuilder;

        specialinvoke tmp$1860022925.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke tmp$1860022925.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read a configuration file for the generic object\neditor. An example file is included with the Weka distribution.\nThis file should be named \"");

        $r17 = <weka.gui.GenericObjectEditor: java.lang.String PROPERTY_FILE>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" and\nshould be placed either in your user home (which is set\nto \"");

        $r20 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r21 = virtualinvoke $r20.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("user.home");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")\nor the directory that java was started from\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r24, "GenericObjectEditor", 0);

     label10:
        $r25 = <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r25);

        if $r25 != null goto label11;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, "Could not initialize the GenericPropertiesCreator. ", "GenericObjectEditor", 0);

        goto label12;

     label11:
        $r26 = <weka.gui.GenericObjectEditor: java.util.Properties EDITOR_PROPERTIES>;

        staticinvoke <weka.core.PluginManager: void addFromProperties(java.util.Properties)>($r26);

     label12:
        goto label14;

     label13:
        $r27 := @caughtexception;

        e = $r27;

        tmp$1585944156 = new java.lang.StringBuilder;

        specialinvoke tmp$1585944156.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke tmp$1585944156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not initialize the GenericPropertiesCreator. This exception was produced:\n");

        tmp$1019042346 = (java.lang.Exception) e;

        $r30 = virtualinvoke tmp$1019042346.<java.lang.Exception: java.lang.String toString()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r32, "GenericObjectEditor", 0);

     label14:
        return;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label12 with label13;
    }

    public static void registerEditor(java.lang.String, java.lang.String)
    {
        java.lang.String name, value, $r0, $r12;
        java.lang.Class baseCls, cls#17, $r2;
        java.lang.Exception e, $r3;
        boolean $z0, $z1;
        int $i0;
        java.lang.Object $r1;
        weka.core.logging.Logger$Level $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        name := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $z0 = virtualinvoke name.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke name.<java.lang.String: boolean endsWith(java.lang.String)>("[]");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke name.<java.lang.String: int indexOf(java.lang.String)>("[]");

        $r0 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        baseCls = staticinvoke <weka.core.WekaPackageClassLoaderManager: java.lang.Class forName(java.lang.String)>($r0);

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(baseCls, 1);

        cls#17 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        goto label3;

     label2:
        cls#17 = staticinvoke <weka.core.WekaPackageClassLoaderManager: java.lang.Class forName(java.lang.String)>(name);

     label3:
        $r2 = staticinvoke <weka.core.WekaPackageClassLoaderManager: java.lang.Class forName(java.lang.String)>(value);

        staticinvoke <java.beans.PropertyEditorManager: void registerEditor(java.lang.Class,java.lang.Class)>(cls#17, $r2);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level WARNING>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem registering ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.core.logging.Logger: void log(weka.core.logging.Logger$Level,java.lang.String)>($r4, $r12);

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static void registerEditors()
    {
        java.lang.Exception e, $r1;
        java.util.Enumeration enm;
        java.lang.String name, value, $r3;
        boolean $z0, $z1, $z2;
        weka.core.logging.Logger$Level $r0;
        java.util.Properties props#7, $r2;
        java.lang.Object $r4;

        $z0 = <weka.gui.GenericObjectEditor: boolean m_EditorsRegistered>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level INFO>;

        staticinvoke <weka.core.logging.Logger: void log(weka.core.logging.Logger$Level,java.lang.String)>($r0, "---Registering Weka Editors---");

        <weka.gui.GenericObjectEditor: boolean m_EditorsRegistered> = 1;

     label2:
        props#7 = staticinvoke <weka.core.Utils: java.util.Properties readProperties(java.lang.String)>("weka/gui/GUIEditors.props");

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        props#7 = $r2;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label5:
        $r3 = virtualinvoke props#7.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("ShowGlobalInfoToolTip", "true");

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("true");

        <weka.gui.GenericObjectEditor: boolean m_ShowGlobalInfoToolTip> = $z1;

        enm = virtualinvoke props#7.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label6:
        $z2 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label7;

        $r4 = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        name = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        value = virtualinvoke props#7.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>(name, "");

        staticinvoke <weka.gui.GenericObjectEditor: void registerEditor(java.lang.String,java.lang.String)>(name, value);

        goto label6;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static java.util.Hashtable sortClassesByRoot(java.lang.String)
    {
        java.lang.String classes, separator, clsname, root#19, root#47, tmpStr#54, $r15;
        java.util.Hashtable roots, result, $r0, $r6;
        weka.gui.HierarchyPropertyParser hpp, $r1;
        java.util.StringTokenizer tok, $r2;
        java.util.Enumeration enm;
        boolean $z0, $z1, $z3;
        java.util.Vector $r3, list#26, list#52;
        java.lang.Object $r5, $r7, $r8, $r14;
        int i#56, $i0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r16;

        classes := @parameter0: java.lang.String;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(classes);

        if classes != null goto label01;

        return null;

     label01:
        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        roots = $r0;

        $r1 = new weka.gui.HierarchyPropertyParser;

        specialinvoke $r1.<weka.gui.HierarchyPropertyParser: void <init>()>();

        hpp = $r1;

        separator = virtualinvoke hpp.<weka.gui.HierarchyPropertyParser: java.lang.String getSeperator()>();

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(classes, ", ");

        tok = $r2;

     label02:
        $z0 = virtualinvoke tok.<java.util.StringTokenizer: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label06;

        clsname = virtualinvoke tok.<java.util.StringTokenizer: java.lang.String nextToken()>();

        root#19 = staticinvoke <weka.gui.GenericObjectEditor: java.lang.String getRootFromClass(java.lang.String,java.lang.String)>(clsname, separator);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(root#19);

        if root#19 != null goto label03;

        goto label02;

     label03:
        $z1 = virtualinvoke roots.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(root#19);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label04;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        list#26 = $r3;

        virtualinvoke roots.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(root#19, list#26);

        goto label05;

     label04:
        $r5 = virtualinvoke roots.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(root#19);

        list#26 = (java.util.Vector) $r5;

     label05:
        virtualinvoke list#26.<java.util.Vector: boolean add(java.lang.Object)>(clsname);

        goto label02;

     label06:
        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        result = $r6;

        enm = virtualinvoke roots.<java.util.Hashtable: java.util.Enumeration keys()>();

     label07:
        $z3 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label11;

        $r7 = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        root#47 = (java.lang.String) $r7;

        $r8 = virtualinvoke roots.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(root#47);

        list#52 = (java.util.Vector) $r8;

        tmpStr#54 = "";

        i#56 = 0;

     label08:
        $i0 = virtualinvoke list#52.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#56);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#56 >= $i0 goto label10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#56);

        if i#56 <= 0 goto label09;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tmpStr#54);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        tmpStr#54 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tmpStr#54);

        $r14 = virtualinvoke list#52.<java.util.Vector: java.lang.Object get(int)>(i#56);

        $r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        tmpStr#54 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        i#56 = i#56 + 1;

        goto label08;

     label10:
        virtualinvoke result.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(root#47, tmpStr#54);

        goto label07;

     label11:
        return result;
    }

    protected static java.lang.String getRootFromClass(java.lang.String, java.lang.String)
    {
        java.lang.String clsname, separator, $r0;
        int $i0, $i1;

        clsname := @parameter0: java.lang.String;

        separator := @parameter1: java.lang.String;

        $i0 = virtualinvoke clsname.<java.lang.String: int indexOf(java.lang.String)>(separator);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= -1 goto label1;

        $i1 = virtualinvoke clsname.<java.lang.String: int indexOf(java.lang.String)>(separator);

        $r0 = virtualinvoke clsname.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r0;

     label1:
        return null;
    }


