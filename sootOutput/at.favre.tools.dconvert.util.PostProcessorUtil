    public static boolean canRunCmd(java.lang.String[])
    {
        java.lang.String[] cmdArray;
        java.lang.ProcessBuilder pb, $r0;
        java.lang.Process process;
        java.io.BufferedReader inStreamReader, $r2;
        java.lang.Throwable l6, l7, l4#15, $r6, l5#22, $r7, l5#27, $r8, $r9;
        java.lang.Exception e, $r10;
        java.io.InputStreamReader $r3;
        java.io.InputStream $r4;
        java.lang.String $r5;

        cmdArray := @parameter0: java.lang.String[];

     label01:
        $r0 = new java.lang.ProcessBuilder;

        specialinvoke $r0.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(cmdArray);

        pb = $r0;

        virtualinvoke pb.<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectErrorStream(boolean)>(1);

        process = virtualinvoke pb.<java.lang.ProcessBuilder: java.lang.Process start()>();

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        $r4 = virtualinvoke process.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r4);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

        inStreamReader = $r2;

        l4#15 = null;

     label02:
        $r5 = virtualinvoke inStreamReader.<java.io.BufferedReader: java.lang.String readLine()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if $r5 == null goto label03;

        goto label02;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(inStreamReader);

        if inStreamReader == null goto label17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#15);

        if l4#15 == null goto label07;

     label04:
        virtualinvoke inStreamReader.<java.io.BufferedReader: void close()>();

     label05:
        goto label17;

     label06:
        $r6 := @caughtexception;

        l5#22 = $r6;

        virtualinvoke l4#15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l5#22);

        goto label17;

     label07:
        virtualinvoke inStreamReader.<java.io.BufferedReader: void close()>();

        goto label17;

     label08:
        $r7 := @caughtexception;

     label09:
        l5#27 = $r7;

        l4#15 = l5#27;

        throw l5#27;

     label10:
        $r8 := @caughtexception;

        l6 = $r8;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(inStreamReader);

        if inStreamReader == null goto label16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#15);

        if l4#15 == null goto label15;

     label12:
        virtualinvoke inStreamReader.<java.io.BufferedReader: void close()>();

     label13:
        goto label16;

     label14:
        $r9 := @caughtexception;

        l7 = $r9;

        virtualinvoke l4#15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l7);

        goto label16;

     label15:
        virtualinvoke inStreamReader.<java.io.BufferedReader: void close()>();

     label16:
        throw l6;

     label17:
        virtualinvoke process.<java.lang.Process: int waitFor()>();

     label18:
        goto label20;

     label19:
        $r10 := @caughtexception;

        e = $r10;

        return 0;

     label20:
        return 1;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label09 to label11 with label10;
        catch java.lang.Exception from label01 to label18 with label19;
    }

    static void <clinit>()
    {
        java.util.concurrent.locks.ReentrantLock $r0;

        $r0 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        <at.favre.tools.dconvert.util.PostProcessorUtil: java.util.concurrent.locks.ReentrantLock lock> = $r0;

        return;
    }


