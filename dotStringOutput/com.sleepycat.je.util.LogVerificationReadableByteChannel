digraph read {
"this := @this: com.sleepycat.je.util.LogVerificationReadableByteChannel {846909722}" -> "buffer := @parameter0: java.nio.ByteBuffer {3447980}";
"buffer := @parameter0: java.nio.ByteBuffer {3447980}" -> "start = virtualinvoke buffer.<java.nio.ByteBuffer: int position()>() {708770631}";
"start = virtualinvoke buffer.<java.nio.ByteBuffer: int position()>() {708770631}" -> "$r0 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> {1618885830}";
"$r0 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> {1618885830}" -> "count = interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(buffer) {1411255721}";
"count = interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(buffer) {1411255721}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {1232075793}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {1232075793}" -> "if count >= 0 goto $z0 = virtualinvoke buffer.<java.nio.ByteBuffer: boolean hasArray()>() {434785506}";
"if count >= 0 goto $z0 = virtualinvoke buffer.<java.nio.ByteBuffer: boolean hasArray()>() {434785506}" -> "$r1 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> {141950375}";
"if count >= 0 goto $z0 = virtualinvoke buffer.<java.nio.ByteBuffer: boolean hasArray()>() {434785506}" -> "$z0 = virtualinvoke buffer.<java.nio.ByteBuffer: boolean hasArray()>() {218320533}";
"$r1 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> {141950375}" -> "virtualinvoke $r1.<com.sleepycat.je.utilint.LogVerifier: void verifyAtEof()>() {1536437391}";
"virtualinvoke $r1.<com.sleepycat.je.utilint.LogVerifier: void verifyAtEof()>() {1536437391}" -> "goto [?= return count] {273872451}";
"goto [?= return count] {273872451}" -> "return count {1613072126}";
"$z0 = virtualinvoke buffer.<java.nio.ByteBuffer: boolean hasArray()>() {218320533}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {754512949}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {754512949}" -> "if $z0 == 0 goto $r4 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1997138926}";
"if $z0 == 0 goto $r4 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1997138926}" -> "$r2 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> {984476185}";
"if $z0 == 0 goto $r4 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1997138926}" -> "$r4 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1213766951}";
"$r2 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> {984476185}" -> "$r3 = virtualinvoke buffer.<java.nio.ByteBuffer: byte[] array()>() {354661619}";
"$r3 = virtualinvoke buffer.<java.nio.ByteBuffer: byte[] array()>() {354661619}" -> "$i0 = virtualinvoke buffer.<java.nio.ByteBuffer: int arrayOffset()>() {30741291}";
"$i0 = virtualinvoke buffer.<java.nio.ByteBuffer: int arrayOffset()>() {30741291}" -> "$i1 = $i0 + start {436861083}";
"$i1 = $i0 + start {436861083}" -> "virtualinvoke $r2.<com.sleepycat.je.utilint.LogVerifier: void verify(byte[],int,int)>($r3, $i1, count) {2008000194}";
"virtualinvoke $r2.<com.sleepycat.je.utilint.LogVerifier: void verify(byte[],int,int)>($r3, $i1, count) {2008000194}" -> "goto [?= return count] {1235083193}";
"goto [?= return count] {1235083193}" -> "return count {1613072126}";
"$r4 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1213766951}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {1820038418}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {1820038418}" -> "if $r4 != null goto virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start) {1112259416}";
"if $r4 != null goto virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start) {1112259416}" -> "$r5 = newarray (byte)[8192] {1557707026}";
"if $r4 != null goto virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start) {1112259416}" -> "virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start) {865867584}";
"$r5 = newarray (byte)[8192] {1557707026}" -> "this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> = $r5 {1138120874}";
"this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> = $r5 {1138120874}" -> "virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start) {865867584}";
"virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start) {865867584}" -> "len#30 = count {602812254}";
"len#30 = count {602812254}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30) {2075233122}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30) {2075233122}" -> "if len#30 <= 0 goto return count {95489770}";
"if len#30 <= 0 goto return count {95489770}" -> "chunk = staticinvoke <java.lang.Math: int min(int,int)>(len#30, 8192) {989699829}";
"if len#30 <= 0 goto return count {95489770}" -> "return count {1613072126}";
"chunk = staticinvoke <java.lang.Math: int min(int,int)>(len#30, 8192) {989699829}" -> "$r7 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1490485752}";
"$r7 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {1490485752}" -> "virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r7, 0, chunk) {1012790515}";
"virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r7, 0, chunk) {1012790515}" -> "$r9 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> {443303738}";
"$r9 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> {443303738}" -> "$r10 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {979224512}";
"$r10 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> {979224512}" -> "virtualinvoke $r9.<com.sleepycat.je.utilint.LogVerifier: void verify(byte[],int,int)>($r10, 0, chunk) {155698961}";
"virtualinvoke $r9.<com.sleepycat.je.utilint.LogVerifier: void verify(byte[],int,int)>($r10, 0, chunk) {155698961}" -> "len#30 = len#30 - chunk {2094115255}";
"len#30 = len#30 - chunk {2094115255}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30)] {577652113}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30)] {577652113}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30) {2075233122}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {754512949}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {1232075793}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {1820038418}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30) {2075233122}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph close {
"this := @this: com.sleepycat.je.util.LogVerificationReadableByteChannel {753413752}" -> "$r0 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> {1072414568}";
"$r0 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> {1072414568}" -> "interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: void close()>() {1377688835}";
"interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: void close()>() {1377688835}" -> "return {1170343288}";
}

digraph <init> {
"this := @this: com.sleepycat.je.util.LogVerificationReadableByteChannel {1576908601}" -> "envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl {1998590308}";
"envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl {1998590308}" -> "channel := @parameter1: java.nio.channels.ReadableByteChannel {1189237823}";
"channel := @parameter1: java.nio.channels.ReadableByteChannel {1189237823}" -> "fileName := @parameter2: java.lang.String {847645369}";
"fileName := @parameter2: java.lang.String {847645369}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {843510669}";
"specialinvoke this.<java.lang.Object: void <init>()>() {843510669}" -> "this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> = channel {1581221342}";
"this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> = channel {1581221342}" -> "$r0 = new com.sleepycat.je.utilint.LogVerifier {34002577}";
"$r0 = new com.sleepycat.je.utilint.LogVerifier {34002577}" -> "specialinvoke $r0.<com.sleepycat.je.utilint.LogVerifier: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(envImpl, fileName) {415335191}";
"specialinvoke $r0.<com.sleepycat.je.utilint.LogVerifier: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(envImpl, fileName) {415335191}" -> "this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> = $r0 {869945578}";
"this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> = $r0 {869945578}" -> "return {922584999}";
}


