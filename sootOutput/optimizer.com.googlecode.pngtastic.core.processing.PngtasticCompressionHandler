    static void <clinit>()
    {
        java.lang.Integer[] $r0;
        java.lang.Integer $r1, $r2, $r3;
        java.util.List $r4;

        $r0 = newarray (java.lang.Integer)[3];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r0[1] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r0[2] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: java.util.List compressionStrategies> = $r4;

        return;
    }

    public void <init>(optimizer.com.googlecode.pngtastic.core.Logger)
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.Logger log;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        log := @parameter0: optimizer.com.googlecode.pngtastic.core.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: optimizer.com.googlecode.pngtastic.core.Logger log> = log;

        return;
    }

    public byte[] deflate(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, java.lang.Integer, boolean) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.lang.Integer compressionLevel, $r0, $r2, $r8;
        boolean concurrent;
        java.util.List results, $r1;
        byte[] data, result#14;
        int i#16, $i1, $i2, $i3, $i4;
        java.lang.Object $r3;
        optimizer.com.googlecode.pngtastic.core.Logger $r4;
        java.lang.Object[] $r6;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        inflatedImageData := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        compressionLevel := @parameter1: java.lang.Integer;

        concurrent := @parameter2: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(concurrent);

        if concurrent == 0 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1 = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: java.util.List deflateImageDataSerially(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream,java.lang.Integer,java.lang.Integer)>(inflatedImageData, compressionLevel, $r0);

        goto label2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1 = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: java.util.List deflateImageDataSerially(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream,java.lang.Integer,java.lang.Integer)>(inflatedImageData, compressionLevel, $r2);

     label2:
        results = $r1;

        result#14 = null;

        i#16 = 0;

     label3:
        $i1 = interfaceinvoke results.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#16);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if i#16 >= $i1 goto label6;

        $r3 = interfaceinvoke results.<java.util.List: java.lang.Object get(int)>(i#16);

        data = (byte[]) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#14);

        if result#14 == null goto label4;

        $i2 = lengthof data;

        $i3 = lengthof result#14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i2 >= $i3 goto label5;

     label4:
        result#14 = data;

     label5:
        i#16 = i#16 + 1;

        goto label3;

     label6:
        $r4 = this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: optimizer.com.googlecode.pngtastic.core.Logger log>;

        $r6 = newarray (java.lang.Object)[1];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#14);

        if result#14 != null goto label7;

        $i4 = -1;

        goto label8;

     label7:
        $i4 = lengthof result#14;

     label8:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[0] = $r8;

        virtualinvoke $r4.<optimizer.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Image bytes=%d", $r6);

        return result#14;
    }

    private java.util.List deflateImageDataSerially(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, java.lang.Integer, java.lang.Integer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.lang.Integer compressionLevel, compressionStrategy, $r3;
        java.util.ArrayList results, $r0;
        java.util.List strategies, $r1;
        java.util.Iterator l6;
        int strategy;
        java.lang.Throwable e, $r5;
        boolean $z0;
        java.lang.Object $r2;
        byte[] $r4;
        optimizer.com.googlecode.pngtastic.core.Logger $r6;
        java.lang.Object[] $r7;
        java.lang.String $r8;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        inflatedImageData := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        compressionLevel := @parameter1: java.lang.Integer;

        compressionStrategy := @parameter2: java.lang.Integer;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        results = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(compressionStrategy);

        if compressionStrategy != null goto label1;

        $r1 = <optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: java.util.List compressionStrategies>;

        goto label2;

     label1:
        $r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(compressionStrategy);

     label2:
        strategies = $r1;

        l6 = interfaceinvoke strategies.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label8;

        $r2 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Integer) $r2;

        strategy = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label4:
        $r4 = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: byte[] deflateImageData(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream,int,java.lang.Integer)>(inflatedImageData, strategy, compressionLevel);

        interfaceinvoke results.<java.util.List: boolean add(java.lang.Object)>($r4);

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        e = $r5;

        $r6 = this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: optimizer.com.googlecode.pngtastic.core.Logger log>;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke e.<java.lang.Throwable: java.lang.String getMessage()>();

        $r7[0] = $r8;

        virtualinvoke $r6.<optimizer.com.googlecode.pngtastic.core.Logger: void error(java.lang.String,java.lang.Object[])>("Uncaught Exception: %s", $r7);

     label7:
        goto label3;

     label8:
        return results;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private byte[] deflateImageData(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, int, java.lang.Integer) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        int strategy, bestCompression#4, $i0, $i1, compression#12, $i2, $i3, $i4, $i6;
        java.lang.Integer compressionLevel, $r4, $r5, $r7;
        java.io.ByteArrayOutputStream deflatedOut, $r0;
        byte[] result#2;
        optimizer.com.googlecode.pngtastic.core.Logger $r1;
        java.lang.Object[] $r3;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        inflatedImageData := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        strategy := @parameter1: int;

        compressionLevel := @parameter2: java.lang.Integer;

        result#2 = null;

        bestCompression#4 = 9;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(compressionLevel);

        if compressionLevel == null goto label1;

        $i0 = virtualinvoke compressionLevel.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 > 9 goto label1;

        $i1 = virtualinvoke compressionLevel.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 >= 0 goto label6;

     label1:
        compression#12 = 9;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(compression#12);

        if compression#12 <= 0 goto label5;

        deflatedOut = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: java.io.ByteArrayOutputStream deflate(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream,int,int)>(inflatedImageData, strategy, compression#12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#2);

        if result#2 == null goto label3;

        $i2 = lengthof result#2;

        $i3 = virtualinvoke deflatedOut.<java.io.ByteArrayOutputStream: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i2 <= $i3 goto label4;

     label3:
        result#2 = virtualinvoke deflatedOut.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        bestCompression#4 = compression#12;

     label4:
        compression#12 = compression#12 + -1;

        goto label2;

     label5:
        goto label7;

     label6:
        $i4 = virtualinvoke compressionLevel.<java.lang.Integer: int intValue()>();

        $r0 = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: java.io.ByteArrayOutputStream deflate(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream,int,int)>(inflatedImageData, strategy, $i4);

        result#2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        bestCompression#4 = virtualinvoke compressionLevel.<java.lang.Integer: int intValue()>();

     label7:
        $r1 = this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: optimizer.com.googlecode.pngtastic.core.Logger log>;

        $r3 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(strategy);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(bestCompression#4);

        $r3[1] = $r5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#2);

        if result#2 != null goto label8;

        $i6 = -1;

        goto label9;

     label8:
        $i6 = lengthof result#2;

     label9:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r3[2] = $r7;

        virtualinvoke $r1.<optimizer.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Compression strategy: %s, compression level=%d, bytes=%d", $r3);

        return result#2;
    }

    private java.io.ByteArrayOutputStream deflate(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, int, int) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        int strategy, compression, $i0;
        java.io.ByteArrayOutputStream deflatedOut, $r0;
        java.util.zip.Deflater deflater, $r1;
        java.util.zip.DeflaterOutputStream stream, $r2;
        java.lang.Throwable l7, $r4;
        byte[] $r3;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        inflatedImageData := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        strategy := @parameter1: int;

        compression := @parameter2: int;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        deflatedOut = $r0;

        $r1 = new java.util.zip.Deflater;

        specialinvoke $r1.<java.util.zip.Deflater: void <init>(int)>(compression);

        deflater = $r1;

        virtualinvoke deflater.<java.util.zip.Deflater: void setStrategy(int)>(strategy);

     label1:
        $r2 = new java.util.zip.DeflaterOutputStream;

        specialinvoke $r2.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater)>(deflatedOut, deflater);

        stream = $r2;

        $r3 = virtualinvoke inflatedImageData.<optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: byte[] get()>();

        $i0 = virtualinvoke inflatedImageData.<optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: int len()>();

        virtualinvoke stream.<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        virtualinvoke stream.<java.util.zip.DeflaterOutputStream: void close()>();

     label2:
        virtualinvoke deflater.<java.util.zip.Deflater: void end()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        l7 = $r4;

     label5:
        virtualinvoke deflater.<java.util.zip.Deflater: void end()>();

        throw l7;

     label6:
        return deflatedOut;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String encodeBytes(byte[])
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler this;
        byte[] bytes;
        java.lang.String $r0;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        bytes := @parameter0: byte[];

        $r0 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.Base64: java.lang.String encodeBytes(byte[])>(bytes);

        return $r0;
    }


