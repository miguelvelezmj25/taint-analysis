    public void <init>(int[])
    {
        kanzi.entropy.HuffmanCommon$FrequencyArrayComparator this;
        int[] frequencies;
        java.lang.NullPointerException $r0;

        this := @this: kanzi.entropy.HuffmanCommon$FrequencyArrayComparator;

        frequencies := @parameter0: int[];

        specialinvoke this.<java.lang.Object: void <init>()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(frequencies);

        if frequencies != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid null array parameter");

        throw $r0;

     label1:
        this.<kanzi.entropy.HuffmanCommon$FrequencyArrayComparator: int[] array> = frequencies;

        return;
    }

    public int compare(int, int)
    {
        kanzi.entropy.HuffmanCommon$FrequencyArrayComparator this;
        int lidx, ridx, res, $i0, $i1, $i2;
        int[] $r0, $r1;

        this := @this: kanzi.entropy.HuffmanCommon$FrequencyArrayComparator;

        lidx := @parameter0: int;

        ridx := @parameter1: int;

        $r0 = this.<kanzi.entropy.HuffmanCommon$FrequencyArrayComparator: int[] array>;

        $i0 = $r0[lidx];

        $r1 = this.<kanzi.entropy.HuffmanCommon$FrequencyArrayComparator: int[] array>;

        $i1 = $r1[ridx];

        res = $i0 - $i1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(res);

        if res == 0 goto label1;

        $i2 = res;

        goto label2;

     label1:
        $i2 = lidx - ridx;

     label2:
        return $i2;
    }


