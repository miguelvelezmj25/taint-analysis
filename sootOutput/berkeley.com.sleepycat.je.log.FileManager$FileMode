    static void <clinit>()
    {
        berkeley.com.sleepycat.je.log.FileManager$FileMode $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        berkeley.com.sleepycat.je.log.FileManager$FileMode[] $r4;

        $r0 = new berkeley.com.sleepycat.je.log.FileManager$FileMode;

        specialinvoke $r0.<berkeley.com.sleepycat.je.log.FileManager$FileMode: void <init>(java.lang.String,int,java.lang.String,boolean)>("READ_MODE", 0, "r", 0);

        <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READ_MODE> = $r0;

        $r1 = new berkeley.com.sleepycat.je.log.FileManager$FileMode;

        specialinvoke $r1.<berkeley.com.sleepycat.je.log.FileManager$FileMode: void <init>(java.lang.String,int,java.lang.String,boolean)>("READWRITE_MODE", 1, "rw", 1);

        <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READWRITE_MODE> = $r1;

        $r2 = new berkeley.com.sleepycat.je.log.FileManager$FileMode;

        specialinvoke $r2.<berkeley.com.sleepycat.je.log.FileManager$FileMode: void <init>(java.lang.String,int,java.lang.String,boolean)>("READWRITE_ODSYNC_MODE", 2, "rwd", 1);

        <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READWRITE_ODSYNC_MODE> = $r2;

        $r3 = new berkeley.com.sleepycat.je.log.FileManager$FileMode;

        specialinvoke $r3.<berkeley.com.sleepycat.je.log.FileManager$FileMode: void <init>(java.lang.String,int,java.lang.String,boolean)>("READWRITE_OSYNC_MODE", 3, "rws", 1);

        <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READWRITE_OSYNC_MODE> = $r3;

        $r4 = newarray (berkeley.com.sleepycat.je.log.FileManager$FileMode)[4];

        $r5 = <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READ_MODE>;

        $r4[0] = $r5;

        $r6 = <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READWRITE_MODE>;

        $r4[1] = $r6;

        $r7 = <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READWRITE_ODSYNC_MODE>;

        $r4[2] = $r7;

        $r8 = <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode READWRITE_OSYNC_MODE>;

        $r4[3] = $r8;

        <berkeley.com.sleepycat.je.log.FileManager$FileMode: berkeley.com.sleepycat.je.log.FileManager$FileMode[] $VALUES> = $r4;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String, boolean)
    {
        berkeley.com.sleepycat.je.log.FileManager$FileMode this;
        java.lang.String l1, fileModeValue;
        int l2;
        boolean isWritable;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$FileMode;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        fileModeValue := @parameter2: java.lang.String;

        isWritable := @parameter3: boolean;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<berkeley.com.sleepycat.je.log.FileManager$FileMode: java.lang.String fileModeValue> = fileModeValue;

        this.<berkeley.com.sleepycat.je.log.FileManager$FileMode: boolean isWritable> = isWritable;

        return;
    }

    public java.lang.String getModeValue()
    {
        berkeley.com.sleepycat.je.log.FileManager$FileMode this;
        java.lang.String $r0;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$FileMode;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileManager$FileMode: java.lang.String fileModeValue>;

        return $r0;
    }

    public boolean isWritable()
    {
        berkeley.com.sleepycat.je.log.FileManager$FileMode this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.FileManager$FileMode;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileManager$FileMode: boolean isWritable>;

        return $z0;
    }


