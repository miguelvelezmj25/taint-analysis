    protected void <init>(weka.classifiers.pmml.consumer.Regression$RegressionTable, org.w3c.dom.Element, weka.core.Instances) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.Regression$RegressionTable$NumericPredictor this;
        weka.classifiers.pmml.consumer.Regression$RegressionTable this$0;
        org.w3c.dom.Element predictor;
        weka.core.Instances miningSchema;
        java.lang.String exponent;
        int $i0;
        double $d0;

        this := @this: weka.classifiers.pmml.consumer.Regression$RegressionTable$NumericPredictor;

        this$0 := @parameter0: weka.classifiers.pmml.consumer.Regression$RegressionTable;

        predictor := @parameter1: org.w3c.dom.Element;

        miningSchema := @parameter2: weka.core.Instances;

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$NumericPredictor: weka.classifiers.pmml.consumer.Regression$RegressionTable this$0> = this$0;

        specialinvoke this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: void <init>(org.w3c.dom.Element,weka.core.Instances)>(predictor, miningSchema);

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$NumericPredictor: double m_exponent> = 1.0;

        exponent = interfaceinvoke predictor.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("exponent");

        $i0 = virtualinvoke exponent.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label1;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(exponent);

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$NumericPredictor: double m_exponent> = $d0;

     label1:
        return;
    }


