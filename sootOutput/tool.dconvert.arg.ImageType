    static void <clinit>()
    {
        tool.dconvert.arg.ImageType $r0, $r4, $r8, $r12, $r16, $r20, $r24, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        tool.dconvert.arg.ImageType$ECompression $r1, $r2, $r5, $r6, $r9, $r10, $r13, $r14, $r17, $r18, $r21, $r22, $r25, $r26;
        java.lang.String[] $r3, $r7, $r11, $r15, $r19, $r23, $r27;
        tool.dconvert.arg.ImageType[] $r28;

        $r0 = new tool.dconvert.arg.ImageType;

        $r1 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression JPG>;

        $r2 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression JPG>;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "jpeg";

        $r3[1] = "jpg";

        specialinvoke $r0.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("JPG", 0, $r1, $r2, $r3, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType JPG> = $r0;

        $r4 = new tool.dconvert.arg.ImageType;

        $r5 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r6 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "png";

        specialinvoke $r4.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("PNG", 1, $r5, $r6, $r7, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType PNG> = $r4;

        $r8 = new tool.dconvert.arg.ImageType;

        $r9 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression GIF>;

        $r10 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = "gif";

        specialinvoke $r8.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("GIF", 2, $r9, $r10, $r11, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType GIF> = $r8;

        $r12 = new tool.dconvert.arg.ImageType;

        $r13 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r14 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = "svg";

        specialinvoke $r12.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("SVG", 3, $r13, $r14, $r15, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType SVG> = $r12;

        $r16 = new tool.dconvert.arg.ImageType;

        $r17 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r18 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = "psd";

        specialinvoke $r16.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("PSD", 4, $r17, $r18, $r19, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType PSD> = $r16;

        $r20 = new tool.dconvert.arg.ImageType;

        $r21 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression TIFF>;

        $r22 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r23 = newarray (java.lang.String)[2];

        $r23[0] = "tif";

        $r23[1] = "tiff";

        specialinvoke $r20.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("TIFF", 5, $r21, $r22, $r23, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType TIFF> = $r20;

        $r24 = new tool.dconvert.arg.ImageType;

        $r25 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression BMP>;

        $r26 = <tool.dconvert.arg.ImageType$ECompression: tool.dconvert.arg.ImageType$ECompression PNG>;

        $r27 = newarray (java.lang.String)[1];

        $r27[0] = "bmp";

        specialinvoke $r24.<tool.dconvert.arg.ImageType: void <init>(java.lang.String,int,tool.dconvert.arg.ImageType$ECompression,tool.dconvert.arg.ImageType$ECompression,java.lang.String[],boolean)>("BMP", 6, $r25, $r26, $r27, 1);

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType BMP> = $r24;

        $r28 = newarray (tool.dconvert.arg.ImageType)[7];

        $r29 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType JPG>;

        $r28[0] = $r29;

        $r30 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType PNG>;

        $r28[1] = $r30;

        $r31 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType GIF>;

        $r28[2] = $r31;

        $r32 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType SVG>;

        $r28[3] = $r32;

        $r33 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType PSD>;

        $r28[4] = $r33;

        $r34 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType TIFF>;

        $r28[5] = $r34;

        $r35 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType BMP>;

        $r28[6] = $r35;

        <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType[] $VALUES> = $r28;

        return;
    }

    private void <init>(java.lang.String, int, tool.dconvert.arg.ImageType$ECompression, tool.dconvert.arg.ImageType$ECompression, java.lang.String[], boolean)
    {
        tool.dconvert.arg.ImageType this;
        java.lang.String l1;
        int l2;
        tool.dconvert.arg.ImageType$ECompression outCompressionStrict, outCompressionCompat;
        java.lang.String[] extensions;
        boolean supportRead;

        this := @this: tool.dconvert.arg.ImageType;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        outCompressionStrict := @parameter2: tool.dconvert.arg.ImageType$ECompression;

        outCompressionCompat := @parameter3: tool.dconvert.arg.ImageType$ECompression;

        extensions := @parameter4: java.lang.String[];

        supportRead := @parameter5: boolean;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType$ECompression outCompressionStrict> = outCompressionStrict;

        this.<tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType$ECompression outCompressionCompat> = outCompressionCompat;

        this.<tool.dconvert.arg.ImageType: java.lang.String[] extensions> = extensions;

        this.<tool.dconvert.arg.ImageType: boolean supportRead> = supportRead;

        return;
    }

    public static tool.dconvert.arg.ImageType[] values()
    {
        tool.dconvert.arg.ImageType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <tool.dconvert.arg.ImageType: tool.dconvert.arg.ImageType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (tool.dconvert.arg.ImageType[]) $r1;

        return $r2;
    }


