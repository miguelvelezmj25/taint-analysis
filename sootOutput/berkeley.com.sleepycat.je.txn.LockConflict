    static void <clinit>()
    {
        berkeley.com.sleepycat.je.txn.LockConflict $r0, $r1, $r2;

        $r0 = new berkeley.com.sleepycat.je.txn.LockConflict;

        specialinvoke $r0.<berkeley.com.sleepycat.je.txn.LockConflict: void <init>(boolean,boolean)>(1, 0);

        <berkeley.com.sleepycat.je.txn.LockConflict: berkeley.com.sleepycat.je.txn.LockConflict ALLOW> = $r0;

        $r1 = new berkeley.com.sleepycat.je.txn.LockConflict;

        specialinvoke $r1.<berkeley.com.sleepycat.je.txn.LockConflict: void <init>(boolean,boolean)>(0, 0);

        <berkeley.com.sleepycat.je.txn.LockConflict: berkeley.com.sleepycat.je.txn.LockConflict BLOCK> = $r1;

        $r2 = new berkeley.com.sleepycat.je.txn.LockConflict;

        specialinvoke $r2.<berkeley.com.sleepycat.je.txn.LockConflict: void <init>(boolean,boolean)>(0, 1);

        <berkeley.com.sleepycat.je.txn.LockConflict: berkeley.com.sleepycat.je.txn.LockConflict RESTART> = $r2;

        return;
    }

    private void <init>(boolean, boolean)
    {
        berkeley.com.sleepycat.je.txn.LockConflict this;
        boolean allowed, restart;

        this := @this: berkeley.com.sleepycat.je.txn.LockConflict;

        allowed := @parameter0: boolean;

        restart := @parameter1: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.txn.LockConflict: boolean allowed> = allowed;

        this.<berkeley.com.sleepycat.je.txn.LockConflict: boolean restart> = restart;

        return;
    }

    boolean getRestart()
    {
        berkeley.com.sleepycat.je.txn.LockConflict this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.txn.LockConflict;

        $z0 = this.<berkeley.com.sleepycat.je.txn.LockConflict: boolean restart>;

        return $z0;
    }

    boolean getAllowed()
    {
        berkeley.com.sleepycat.je.txn.LockConflict this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.txn.LockConflict;

        $z0 = this.<berkeley.com.sleepycat.je.txn.LockConflict: boolean allowed>;

        return $z0;
    }


