    public java.lang.String toString()
    {
        jdk.internal.org.objectweb.asm.TypePath l0;
        int l1, $i0, l3#8, $i1, $i2;
        java.lang.StringBuilder l2, $r0, $r4;
        java.lang.String $r7;

        l0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        l1 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.TypePath: int getLength()>();

        $r0 = new java.lang.StringBuilder;

        $i0 = l1 * 2;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i0);

        l2 = $r0;

        l3#8 = 0;

     label1:
        if l3#8 >= l1 goto label8;

        $i1 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.TypePath: int getStep(int)>(l3#8);

        tableswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        goto label7;

     label3:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label7;

     label4:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);

        goto label7;

     label5:
        $i2 = virtualinvoke l0.<jdk.internal.org.objectweb.asm.TypePath: int getStepArgument(int)>(l3#8);

        $r4 = virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        goto label7;

     label6:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label7:
        l3#8 = l3#8 + 1;

        goto label1;

     label8:
        $r7 = virtualinvoke l2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int getLength()
    {
        jdk.internal.org.objectweb.asm.TypePath l0;
        byte[] $r0;
        int $i0;
        byte $b1;

        l0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        $r0 = l0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $i0 = l0.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $b1 = $r0[$i0];

        return $b1;
    }

    public int getStep(int)
    {
        jdk.internal.org.objectweb.asm.TypePath l0;
        int l1, $i0, $i1, $i2, $i3;
        byte[] $r0;
        byte $b4;

        l0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        l1 := @parameter0: int;

        $r0 = l0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $i0 = l0.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $i1 = 2 * l1;

        $i2 = $i0 + $i1;

        $i3 = $i2 + 1;

        $b4 = $r0[$i3];

        return $b4;
    }

    public int getStepArgument(int)
    {
        jdk.internal.org.objectweb.asm.TypePath l0;
        int l1, $i0, $i1, $i2, $i3;
        byte[] $r0;
        byte $b4;

        l0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        l1 := @parameter0: int;

        $r0 = l0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $i0 = l0.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $i1 = 2 * l1;

        $i2 = $i0 + $i1;

        $i3 = $i2 + 2;

        $b4 = $r0[$i3];

        return $b4;
    }


