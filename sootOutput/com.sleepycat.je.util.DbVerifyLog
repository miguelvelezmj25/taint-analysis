    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usage: ");

        $r2 = staticinvoke <com.sleepycat.je.utilint.CmdUtil: java.lang.String getJavaCommand(java.lang.Class)>(class "com/sleepycat/je/util/DbVerifyLog");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   [-h <dir>]  # environment home directory\n   [-s <file>] # starting (minimum) file number\n   [-e <file>] # ending (one past the maximum) file number\n   [-V]        # print JE version number");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.sleepycat.je.util.DbVerifyLog: java.lang.String USAGE> = $r5;

        return;
    }

    public void <init>(com.sleepycat.je.dbi.EnvironmentImpl, int)
    {
        com.sleepycat.je.util.DbVerifyLog this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        int readBufferSize, $i0;
        com.sleepycat.je.config.IntConfigParam $r0;
        com.sleepycat.je.dbi.DbConfigManager $r2;

        this := @this: com.sleepycat.je.util.DbVerifyLog;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        readBufferSize := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.util.DbVerifyLog: boolean stopVerify> = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(readBufferSize);

        if readBufferSize <= 0 goto label1;

        $i0 = readBufferSize;

        goto label2;

     label1:
        $r2 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r0 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_ITERATOR_READ_SIZE>;

        $i0 = virtualinvoke $r2.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r0);

     label2:
        this.<com.sleepycat.je.util.DbVerifyLog: int readBufferSize> = $i0;

        this.<com.sleepycat.je.util.DbVerifyLog: com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        return;
    }

    public void setStopVerifyFlag()
    {
        com.sleepycat.je.util.DbVerifyLog this;

        this := @this: com.sleepycat.je.util.DbVerifyLog;

        this.<com.sleepycat.je.util.DbVerifyLog: boolean stopVerify> = 1;

        return;
    }

    public void verifyAll() throws com.sleepycat.je.util.LogVerificationException, java.io.IOException
    {
        com.sleepycat.je.util.DbVerifyLog this;

        this := @this: com.sleepycat.je.util.DbVerifyLog;

        virtualinvoke this.<com.sleepycat.je.util.DbVerifyLog: void verify(long,long)>(0L, 9223372036854775807L);

        return;
    }

    public void verify(long, long) throws com.sleepycat.je.util.LogVerificationException, java.io.IOException
    {
        com.sleepycat.je.util.DbVerifyLog this;
        long startFile, endFile, $l0;
        com.sleepycat.je.log.FileManager fileManager;
        java.io.File homeDir, file, $r2;
        java.lang.String[] fileNames, l9;
        java.nio.ByteBuffer buf;
        int l10, $i1, l11#19, $i2;
        java.lang.String fileName;
        java.io.FileInputStream fis, $r3;
        java.io.FileNotFoundException fne, $r4;
        java.nio.channels.FileChannel fic;
        com.sleepycat.je.util.LogVerificationReadableByteChannel vic, $r5;
        java.lang.Throwable l19, $r10;
        java.io.IOException e, ioe#43, $r8, e#53, $r9, e#57, $r11;
        com.sleepycat.je.dbi.EnvironmentImpl $r0, $r1, $r6;
        boolean $z0;

        this := @this: com.sleepycat.je.util.DbVerifyLog;

        startFile := @parameter0: long;

        endFile := @parameter1: long;

        $r0 = this.<com.sleepycat.je.util.DbVerifyLog: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        fileManager = virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager getFileManager()>();

        $r1 = this.<com.sleepycat.je.util.DbVerifyLog: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        homeDir = virtualinvoke $r1.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File getEnvironmentHome()>();

        $l0 = endFile - 1L;

        fileNames = virtualinvoke fileManager.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNames(long,long)>(startFile, $l0);

        $i1 = this.<com.sleepycat.je.util.DbVerifyLog: int readBufferSize>;

        buf = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i1);

        l9 = fileNames;

        l10 = lengthof l9;

        l11#19 = 0;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l11#19);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l10);

        if l11#19 >= l10 goto label20;

        fileName = l9[l11#19];

        $z0 = this.<com.sleepycat.je.util.DbVerifyLog: boolean stopVerify>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        return;

     label02:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(homeDir, fileName);

        file = $r2;

     label03:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(file);

        fis = $r3;

     label04:
        goto label06;

     label05:
        $r4 := @caughtexception;

        fne = $r4;

        goto label19;

     label06:
        fic = virtualinvoke fis.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $r5 = new com.sleepycat.je.util.LogVerificationReadableByteChannel;

        $r6 = this.<com.sleepycat.je.util.DbVerifyLog: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r5.<com.sleepycat.je.util.LogVerificationReadableByteChannel: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.nio.channels.ReadableByteChannel,java.lang.String)>($r6, fic, fileName);

        vic = $r5;

        ioe#43 = null;

     label07:
        $i2 = virtualinvoke vic.<com.sleepycat.je.util.LogVerificationReadableByteChannel: int read(java.nio.ByteBuffer)>(buf);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 == -1 goto label08;

        virtualinvoke buf.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        goto label07;

     label08:
        virtualinvoke fis.<java.io.FileInputStream: void close()>();

        virtualinvoke vic.<com.sleepycat.je.util.LogVerificationReadableByteChannel: void close()>();

     label09:
        goto label19;

     label10:
        $r8 := @caughtexception;

        e#53 = $r8;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ioe#43);

        if ioe#43 != null goto label11;

        throw e#53;

     label11:
        goto label19;

     label12:
        $r9 := @caughtexception;

     label13:
        e#57 = $r9;

        ioe#43 = e#57;

        throw ioe#43;

     label14:
        $r10 := @caughtexception;

        l19 = $r10;

     label15:
        virtualinvoke fis.<java.io.FileInputStream: void close()>();

        virtualinvoke vic.<com.sleepycat.je.util.LogVerificationReadableByteChannel: void close()>();

     label16:
        goto label18;

     label17:
        $r11 := @caughtexception;

        e = $r11;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ioe#43);

        if ioe#43 != null goto label18;

        throw e;

     label18:
        throw l19;

     label19:
        l11#19 = l11#19 + 1;

        goto label01;

     label20:
        return;

        catch java.io.FileNotFoundException from label03 to label04 with label05;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label15 with label14;
    }


