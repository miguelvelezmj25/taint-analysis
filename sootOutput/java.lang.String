    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.lang.String$CaseInsensitiveComparator $r1;

        $r0 = newarray (java.io.ObjectStreamField)[0];

        <java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        $r1 = new java.lang.String$CaseInsensitiveComparator;

        specialinvoke $r1.<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>(null);

        <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $r1;

        return;
    }

    void <init>(char[], boolean)
    {
        java.lang.String l0;
        char[] l1;
        boolean l2;

        l0 := @this: java.lang.String;

        l1 := @parameter0: char[];

        l2 := @parameter1: boolean;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.String: char[] value> = l1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.String l0, l2;
        java.lang.Object l1;
        char[] l4, l5, $r0, $r1;
        boolean $z0;
        int l3#11, $i0, l6#21, $i1;
        char $c2, $c3;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.Object;

        if l0 != l1 goto label1;

        return 1;

     label1:
        $z0 = l1 instanceof java.lang.String;

        if $z0 == 0 goto label5;

        l2 = (java.lang.String) l1;

        $r0 = l0.<java.lang.String: char[] value>;

        l3#11 = lengthof $r0;

        $r1 = l2.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        if l3#11 != $i0 goto label5;

        l4 = l0.<java.lang.String: char[] value>;

        l5 = l2.<java.lang.String: char[] value>;

        l6#21 = 0;

     label2:
        $i1 = l3#11;

        l3#11 = l3#11 + -1;

        if $i1 == 0 goto label4;

        $c2 = l4[l6#21];

        $c3 = l5[l6#21];

        if $c2 == $c3 goto label3;

        return 0;

     label3:
        l6#21 = l6#21 + 1;

        goto label2;

     label4:
        return 1;

     label5:
        return 0;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String l0, l1;
        char[] $r0;
        int $i0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $r0 = l1.<java.lang.String: char[] value>;

        l0.<java.lang.String: char[] value> = $r0;

        $i0 = l1.<java.lang.String: int hash>;

        l0.<java.lang.String: int hash> = $i0;

        return;
    }

    public int length()
    {
        java.lang.String l0;
        char[] $r0;
        int $i0;

        l0 := @this: java.lang.String;

        $r0 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        return $i0;
    }

    public char charAt(int)
    {
        java.lang.String l0;
        int l1, $i0;
        char[] $r0, $r2;
        java.lang.StringIndexOutOfBoundsException $r1;
        char $c1;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        if l1 < 0 goto label1;

        $r0 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        if l1 < $i0 goto label2;

     label1:
        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1);

        throw $r1;

     label2:
        $r2 = l0.<java.lang.String: char[] value>;

        $c1 = $r2[l1];

        return $c1;
    }

    public java.lang.String substring(int)
    {
        java.lang.String l0, $r3;
        int l1, l2, $i0;
        java.lang.StringIndexOutOfBoundsException $r0, $r2;
        char[] $r1, $r4;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        if l1 >= 0 goto label1;

        $r0 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1);

        throw $r0;

     label1:
        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        l2 = $i0 - l1;

        if l2 >= 0 goto label2;

        $r2 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2);

        throw $r2;

     label2:
        if l1 != 0 goto label3;

        $r3 = l0;

        goto label4;

     label3:
        $r3 = new java.lang.String;

        $r4 = l0.<java.lang.String: char[] value>;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, l1, l2);

     label4:
        return $r3;
    }

    public java.lang.String substring(int, int)
    {
        java.lang.String l0, $r5;
        int l1, l2, l3, $i0, $i1;
        java.lang.StringIndexOutOfBoundsException $r0, $r2, $r3;
        char[] $r1, $r4, $r6;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        if l1 >= 0 goto label1;

        $r0 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1);

        throw $r0;

     label1:
        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        if l2 <= $i0 goto label2;

        $r2 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2);

        throw $r2;

     label2:
        l3 = l2 - l1;

        if l3 >= 0 goto label3;

        $r3 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3);

        throw $r3;

     label3:
        if l1 != 0 goto label4;

        $r4 = l0.<java.lang.String: char[] value>;

        $i1 = lengthof $r4;

        if l2 != $i1 goto label4;

        $r5 = l0;

        goto label5;

     label4:
        $r5 = new java.lang.String;

        $r6 = l0.<java.lang.String: char[] value>;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r6, l1, l3);

     label5:
        return $r5;
    }

    public void <init>(char[], int, int)
    {
        java.lang.String l0, $r2;
        char[] l1, $r3, $r5;
        int l2, l3, $i0, $i1, $i2, $i3, $i4;
        java.lang.StringIndexOutOfBoundsException $r0, $r1, $r4;

        l0 := @this: java.lang.String;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        if l2 >= 0 goto label1;

        $r0 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2);

        throw $r0;

     label1:
        if l3 > 0 goto label3;

        if l3 >= 0 goto label2;

        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3);

        throw $r1;

     label2:
        $i0 = lengthof l1;

        if l2 > $i0 goto label3;

        $r2 = "";

        $r3 = $r2.<java.lang.String: char[] value>;

        l0.<java.lang.String: char[] value> = $r3;

        return;

     label3:
        $i1 = lengthof l1;

        $i2 = $i1 - l3;

        if l2 <= $i2 goto label4;

        $r4 = new java.lang.StringIndexOutOfBoundsException;

        $i3 = l2 + l3;

        specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i3);

        throw $r4;

     label4:
        $i4 = l2 + l3;

        $r5 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $i4);

        l0.<java.lang.String: char[] value> = $r5;

        return;
    }

    public static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String l0, $r2;
        java.lang.Object[] l1;
        java.util.Formatter $r0, $r1;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.lang.Object[];

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(l0, l1);

        $r2 = virtualinvoke $r1.<java.util.Formatter: java.lang.String toString()>();

        return $r2;
    }

    public void <init>(char[])
    {
        java.lang.String l0;
        char[] l1, $r0;
        int $i0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: char[];

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $i0 = lengthof l1;

        $r0 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $i0);

        l0.<java.lang.String: char[] value> = $r0;

        return;
    }

    public java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.String l0, $r0, $r3, $r4, $r5;
        java.lang.CharSequence l1, l2;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.CharSequence;

        l2 := @parameter1: java.lang.CharSequence;

        $r0 = interfaceinvoke l1.<java.lang.CharSequence: java.lang.String toString()>();

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r0, 16);

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0);

        $r3 = interfaceinvoke l2.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = staticinvoke <java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>($r3);

        $r5 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r4);

        return $r5;
    }

    public java.lang.String toString()
    {
        java.lang.String l0;

        l0 := @this: java.lang.String;

        return l0;
    }

    public java.lang.String trim()
    {
        java.lang.String l0, $r2;
        char[] l3, $r0, $r1;
        int l1#4, l2#6, $i1, $i3;
        char $c0, $c2;

        l0 := @this: java.lang.String;

        $r0 = l0.<java.lang.String: char[] value>;

        l1#4 = lengthof $r0;

        l2#6 = 0;

        l3 = l0.<java.lang.String: char[] value>;

     label1:
        if l2#6 >= l1#4 goto label2;

        $c0 = l3[l2#6];

        if $c0 > 32 goto label2;

        l2#6 = l2#6 + 1;

        goto label1;

     label2:
        if l2#6 >= l1#4 goto label3;

        $i1 = l1#4 - 1;

        $c2 = l3[$i1];

        if $c2 > 32 goto label3;

        l1#4 = l1#4 + -1;

        goto label2;

     label3:
        if l2#6 > 0 goto label4;

        $r1 = l0.<java.lang.String: char[] value>;

        $i3 = lengthof $r1;

        if l1#4 >= $i3 goto label5;

     label4:
        $r2 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l2#6, l1#4);

        goto label6;

     label5:
        $r2 = l0;

     label6:
        return $r2;
    }

    public java.lang.String toLowerCase()
    {
        java.lang.String l0, $r1;
        java.util.Locale $r0;

        l0 := @this: java.lang.String;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = virtualinvoke l0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r0);

        return $r1;
    }

    public java.lang.String toLowerCase(java.util.Locale)
    {
        java.lang.String l0, l6, $r5;
        java.util.Locale l1;
        int l3, l13, l2#8, l5#23, $i0, $i1, l5#39, l12#56, l10#63, l11#75, l9#86, $i5, $i6, $i7, $i8, $i9, $i10, $i11, l14#135, $i12, $i13, $i15, $i16, $i18;
        boolean l7, $z0;
        java.lang.NullPointerException $r0;
        char[] $r1, $r2, l4#37, $r3, $r4, l8#99, l14#125;
        char l4#15, $c2, $c3, $c4, $c14, $c17;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.util.Locale;

        if l1 != null goto label01;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>()>();

        throw $r0;

     label01:
        $r1 = l0.<java.lang.String: char[] value>;

        l3 = lengthof $r1;

        l2#8 = 0;

     label02:
        if l2#8 >= l3 goto label07;

        $r2 = l0.<java.lang.String: char[] value>;

        l4#15 = $r2[l2#8];

        if l4#15 < 55296 goto label04;

        if l4#15 > 56319 goto label04;

        l5#23 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l2#8);

        $i0 = staticinvoke <java.lang.Character: int toLowerCase(int)>(l5#23);

        if l5#23 == $i0 goto label03;

        goto label08;

     label03:
        $i1 = staticinvoke <java.lang.Character: int charCount(int)>(l5#23);

        l2#8 = l2#8 + $i1;

        goto label06;

     label04:
        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>(l4#15);

        if l4#15 == $c2 goto label05;

        goto label08;

     label05:
        l2#8 = l2#8 + 1;

     label06:
        goto label02;

     label07:
        return l0;

     label08:
        l4#37 = newarray (char)[l3];

        l5#39 = 0;

        $r3 = l0.<java.lang.String: char[] value>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, l4#37, 0, l2#8);

        l6 = virtualinvoke l1.<java.util.Locale: java.lang.String getLanguage()>();

        if l6 == "tr" goto label09;

        if l6 == "az" goto label09;

        if l6 != "lt" goto label10;

     label09:
        $z0 = 1;

        goto label11;

     label10:
        $z0 = 0;

     label11:
        l7 = $z0;

        l12#56 = l2#8;

     label12:
        if l12#56 >= l3 goto label27;

        $r4 = l0.<java.lang.String: char[] value>;

        l10#63 = $r4[l12#56];

        $c3 = (char) l10#63;

        if $c3 < 55296 goto label13;

        $c4 = (char) l10#63;

        if $c4 > 56319 goto label13;

        l10#63 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l12#56);

        l11#75 = staticinvoke <java.lang.Character: int charCount(int)>(l10#63);

        goto label14;

     label13:
        l11#75 = 1;

     label14:
        if l7 != 0 goto label15;

        if l10#63 == 931 goto label15;

        if l10#63 != 304 goto label16;

     label15:
        l9#86 = staticinvoke <java.lang.ConditionalSpecialCasing: int toLowerCaseEx(java.lang.String,int,java.util.Locale)>(l0, l12#56, l1);

        goto label17;

     label16:
        l9#86 = staticinvoke <java.lang.Character: int toLowerCase(int)>(l10#63);

     label17:
        if l9#86 == -1 goto label18;

        if l9#86 < 65536 goto label25;

     label18:
        if l9#86 != -1 goto label19;

        l8#99 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] toLowerCaseCharArray(java.lang.String,int,java.util.Locale)>(l0, l12#56, l1);

        goto label21;

     label19:
        if l11#75 != 2 goto label20;

        $i5 = l12#56 + l5#39;

        $i6 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>(l9#86, l4#37, $i5);

        $i7 = $i6 - l11#75;

        l5#39 = l5#39 + $i7;

        goto label26;

     label20:
        l8#99 = staticinvoke <java.lang.Character: char[] toChars(int)>(l9#86);

     label21:
        l13 = lengthof l8#99;

        if l13 <= l11#75 goto label22;

        $i8 = lengthof l4#37;

        $i9 = $i8 + l13;

        $i10 = $i9 - l11#75;

        l14#125 = newarray (char)[$i10];

        $i11 = l12#56 + l5#39;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l4#37, 0, l14#125, 0, $i11);

        l4#37 = l14#125;

     label22:
        l14#135 = 0;

     label23:
        if l14#135 >= l13 goto label24;

        $i12 = l12#56 + l5#39;

        $i13 = $i12 + l14#135;

        $c14 = l8#99[l14#135];

        l4#37[$i13] = $c14;

        l14#135 = l14#135 + 1;

        goto label23;

     label24:
        $i15 = l13 - l11#75;

        l5#39 = l5#39 + $i15;

        goto label26;

     label25:
        $i16 = l12#56 + l5#39;

        $c17 = (char) l9#86;

        l4#37[$i16] = $c17;

     label26:
        l12#56 = l12#56 + l11#75;

        goto label12;

     label27:
        $r5 = new java.lang.String;

        $i18 = l3 + l5#39;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(l4#37, 0, $i18);

        return $r5;
    }

    public int codePointAt(int)
    {
        java.lang.String l0;
        int l1, $i0, $i1, $i2;
        char[] $r0, $r2, $r3;
        java.lang.StringIndexOutOfBoundsException $r1;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        if l1 < 0 goto label1;

        $r0 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        if l1 < $i0 goto label2;

     label1:
        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1);

        throw $r1;

     label2:
        $r2 = l0.<java.lang.String: char[] value>;

        $r3 = l0.<java.lang.String: char[] value>;

        $i1 = lengthof $r3;

        $i2 = staticinvoke <java.lang.Character: int codePointAtImpl(char[],int,int)>($r2, l1, $i1);

        return $i2;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        java.lang.String l0, l1;
        boolean $z0, $z1;
        char[] $r0, $r1, $r2;
        int $i0, $i1, $i2;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        if l0 != l1 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        if l1 == null goto label2;

        $r0 = l1.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        $r1 = l0.<java.lang.String: char[] value>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $r2 = l0.<java.lang.String: char[] value>;

        $i2 = lengthof $r2;

        $z1 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $i2);

        if $z1 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean regionMatches(boolean, int, java.lang.String, int, int)
    {
        java.lang.String l0, l3;
        boolean l1;
        int l2, l4, l5#1, l7#5, l9#9, $i1, $i7, $i12, $i13, $i14;
        char[] l6, l8, $r0, $r1;
        char l10, l11, l12, l13, $c15, $c16;
        long $l0, $l2, $l3, $l4, $l6, $l8, $l9, $l10;
        byte $b5, $b11;

        l0 := @this: java.lang.String;

        l1 := @parameter0: boolean;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: int;

        l5#1 := @parameter4: int;

        l6 = l0.<java.lang.String: char[] value>;

        l7#5 = l2;

        l8 = l3.<java.lang.String: char[] value>;

        l9#9 = l4;

        if l4 < 0 goto label1;

        if l2 < 0 goto label1;

        $l0 = (long) l2;

        $r0 = l0.<java.lang.String: char[] value>;

        $i1 = lengthof $r0;

        $l2 = (long) $i1;

        $l3 = (long) l5#1;

        $l4 = $l2 - $l3;

        $b5 = $l0 cmp $l4;

        if $b5 > 0 goto label1;

        $l6 = (long) l4;

        $r1 = l3.<java.lang.String: char[] value>;

        $i7 = lengthof $r1;

        $l8 = (long) $i7;

        $l9 = (long) l5#1;

        $l10 = $l8 - $l9;

        $b11 = $l6 cmp $l10;

        if $b11 <= 0 goto label2;

     label1:
        return 0;

     label2:
        $i12 = l5#1;

        l5#1 = l5#1 + -1;

        if $i12 <= 0 goto label6;

        $i13 = l7#5;

        l7#5 = l7#5 + 1;

        l10 = l6[$i13];

        $i14 = l9#9;

        l9#9 = l9#9 + 1;

        l11 = l8[$i14];

        if l10 != l11 goto label3;

        goto label2;

     label3:
        if l1 == 0 goto label5;

        l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10);

        l13 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l11);

        if l12 != l13 goto label4;

        goto label2;

     label4:
        $c15 = staticinvoke <java.lang.Character: char toLowerCase(char)>(l12);

        $c16 = staticinvoke <java.lang.Character: char toLowerCase(char)>(l13);

        if $c15 != $c16 goto label5;

        goto label2;

     label5:
        return 0;

     label6:
        return 1;
    }

    public boolean startsWith(java.lang.String)
    {
        java.lang.String l0, l1;
        boolean $z0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, 0);

        return $z0;
    }

    public boolean startsWith(java.lang.String, int)
    {
        java.lang.String l0, l1;
        int l2, l4#4, l6#8, l7#12, $i0, $i1, $i2, $i4;
        char[] l3, l5, $r0, $r1;
        char $c3, $c5;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        l3 = l0.<java.lang.String: char[] value>;

        l4#4 = l2;

        l5 = l1.<java.lang.String: char[] value>;

        l6#8 = 0;

        $r0 = l1.<java.lang.String: char[] value>;

        l7#12 = lengthof $r0;

        if l2 < 0 goto label1;

        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        $i1 = $i0 - l7#12;

        if l2 <= $i1 goto label2;

     label1:
        return 0;

     label2:
        l7#12 = l7#12 + -1;

        if l7#12 < 0 goto label3;

        $i2 = l4#4;

        l4#4 = l4#4 + 1;

        $c3 = l3[$i2];

        $i4 = l6#8;

        l6#8 = l6#8 + 1;

        $c5 = l5[$i4];

        if $c3 == $c5 goto label2;

        return 0;

     label3:
        return 1;
    }

    public int lastIndexOf(int)
    {
        java.lang.String l0;
        int l1, $i0, $i1, $i2;
        char[] $r0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        $r0 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int,int)>(l1, $i1);

        return $i2;
    }

    public int lastIndexOf(int, int)
    {
        java.lang.String l0;
        int l1, l2, $i0, $i1, l4#11, $i3;
        char[] l3;
        char $c2;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        if l1 >= 65536 goto label4;

        l3 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof l3;

        $i1 = $i0 - 1;

        l4#11 = staticinvoke <java.lang.Math: int min(int,int)>(l2, $i1);

     label1:
        if l4#11 < 0 goto label3;

        $c2 = l3[l4#11];

        if $c2 != l1 goto label2;

        return l4#11;

     label2:
        l4#11 = l4#11 + -1;

        goto label1;

     label3:
        return -1;

     label4:
        $i3 = specialinvoke l0.<java.lang.String: int lastIndexOfSupplementary(int,int)>(l1, l2);

        return $i3;
    }

    private int lastIndexOfSupplementary(int, int)
    {
        java.lang.String l0;
        int l1, l2, $i0, $i1, l6#15, $i3;
        char[] l3;
        char l4, l5, $c2, $c4;
        boolean $z0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(l1);

        if $z0 == 0 goto label3;

        l3 = l0.<java.lang.String: char[] value>;

        l4 = staticinvoke <java.lang.Character: char highSurrogate(int)>(l1);

        l5 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(l1);

        $i0 = lengthof l3;

        $i1 = $i0 - 2;

        l6#15 = staticinvoke <java.lang.Math: int min(int,int)>(l2, $i1);

     label1:
        if l6#15 < 0 goto label3;

        $c2 = l3[l6#15];

        if $c2 != l4 goto label2;

        $i3 = l6#15 + 1;

        $c4 = l3[$i3];

        if $c4 != l5 goto label2;

        return l6#15;

     label2:
        l6#15 = l6#15 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int indexOf(java.lang.String)
    {
        java.lang.String l0, l1;
        int $i0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0);

        return $i0;
    }

    public int indexOf(java.lang.String, int)
    {
        java.lang.String l0, l1;
        int l2, $i0, $i1, $i2;
        char[] $r0, $r1, $r2, $r3;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        $r0 = l0.<java.lang.String: char[] value>;

        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        $r2 = l1.<java.lang.String: char[] value>;

        $r3 = l1.<java.lang.String: char[] value>;

        $i1 = lengthof $r3;

        $i2 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($r0, 0, $i0, $r2, 0, $i1, l2);

        return $i2;
    }

    static int indexOf(char[], int, int, char[], int, int, int)
    {
        char[] l0, l3;
        int l1, l2, l4, l5, l8, l11, l6#1, $i0, $i1, l9#21, l10#39, $i4, l12#48, $i7;
        char l7, $c2, $c3, $c5, $c6;

        l0 := @parameter0: char[];

        l1 := @parameter1: int;

        l2 := @parameter2: int;

        l3 := @parameter3: char[];

        l4 := @parameter4: int;

        l5 := @parameter5: int;

        l6#1 := @parameter6: int;

        if l6#1 < l2 goto label03;

        if l5 != 0 goto label01;

        $i0 = l2;

        goto label02;

     label01:
        $i0 = -1;

     label02:
        return $i0;

     label03:
        if l6#1 >= 0 goto label04;

        l6#1 = 0;

     label04:
        if l5 != 0 goto label05;

        return l6#1;

     label05:
        l7 = l3[l4];

        $i1 = l2 - l5;

        l8 = l1 + $i1;

        l9#21 = l1 + l6#1;

     label06:
        if l9#21 > l8 goto label12;

        $c2 = l0[l9#21];

        if $c2 == l7 goto label08;

     label07:
        l9#21 = l9#21 + 1;

        if l9#21 > l8 goto label08;

        $c3 = l0[l9#21];

        if $c3 == l7 goto label08;

        goto label07;

     label08:
        if l9#21 > l8 goto label11;

        l10#39 = l9#21 + 1;

        $i4 = l10#39 + l5;

        l11 = $i4 - 1;

        l12#48 = l4 + 1;

     label09:
        if l10#39 >= l11 goto label10;

        $c5 = l0[l10#39];

        $c6 = l3[l12#48];

        if $c5 != $c6 goto label10;

        l10#39 = l10#39 + 1;

        l12#48 = l12#48 + 1;

        goto label09;

     label10:
        if l10#39 != l11 goto label11;

        $i7 = l9#21 - l1;

        return $i7;

     label11:
        l9#21 = l9#21 + 1;

        goto label06;

     label12:
        return -1;
    }

    public int compareTo(java.lang.String)
    {
        java.lang.String l0, l1;
        int l2, l3, l4, l7#15, $i0, $i1;
        char[] l5, l6, $r0, $r1;
        char l8, l9;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        $r0 = l0.<java.lang.String: char[] value>;

        l2 = lengthof $r0;

        $r1 = l1.<java.lang.String: char[] value>;

        l3 = lengthof $r1;

        l4 = staticinvoke <java.lang.Math: int min(int,int)>(l2, l3);

        l5 = l0.<java.lang.String: char[] value>;

        l6 = l1.<java.lang.String: char[] value>;

        l7#15 = 0;

     label1:
        if l7#15 >= l4 goto label3;

        l8 = l5[l7#15];

        l9 = l6[l7#15];

        if l8 == l9 goto label2;

        $i0 = l8 - l9;

        return $i0;

     label2:
        l7#15 = l7#15 + 1;

        goto label1;

     label3:
        $i1 = l2 - l3;

        return $i1;
    }

    public int indexOf(int)
    {
        java.lang.String l0;
        int l1, $i0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        $i0 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0);

        return $i0;
    }

    public int indexOf(int, int)
    {
        java.lang.String l0;
        int l1, l3, l2#1, l5#15, $i1;
        char[] l4, $r0;
        char $c0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        l2#1 := @parameter1: int;

        $r0 = l0.<java.lang.String: char[] value>;

        l3 = lengthof $r0;

        if l2#1 >= 0 goto label1;

        l2#1 = 0;

        goto label2;

     label1:
        if l2#1 < l3 goto label2;

        return -1;

     label2:
        if l1 >= 65536 goto label6;

        l4 = l0.<java.lang.String: char[] value>;

        l5#15 = l2#1;

     label3:
        if l5#15 >= l3 goto label5;

        $c0 = l4[l5#15];

        if $c0 != l1 goto label4;

        return l5#15;

     label4:
        l5#15 = l5#15 + 1;

        goto label3;

     label5:
        return -1;

     label6:
        $i1 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2#1);

        return $i1;
    }

    private int indexOfSupplementary(int, int)
    {
        java.lang.String l0;
        int l1, l2, l6, $i0, l7#14, $i2;
        char[] l3;
        char l4, l5, $c1, $c3;
        boolean $z0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(l1);

        if $z0 == 0 goto label3;

        l3 = l0.<java.lang.String: char[] value>;

        l4 = staticinvoke <java.lang.Character: char highSurrogate(int)>(l1);

        l5 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(l1);

        $i0 = lengthof l3;

        l6 = $i0 - 1;

        l7#14 = l2;

     label1:
        if l7#14 >= l6 goto label3;

        $c1 = l3[l7#14];

        if $c1 != l4 goto label2;

        $i2 = l7#14 + 1;

        $c3 = l3[$i2];

        if $c3 != l5 goto label2;

        return l7#14;

     label2:
        l7#14 = l7#14 + 1;

        goto label1;

     label3:
        return -1;
    }

    public java.lang.String concat(java.lang.String)
    {
        java.lang.String l0, l1, $r2;
        int l2, l3, $i0;
        char[] l4, $r0, $r1;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        l2 = virtualinvoke l1.<java.lang.String: int length()>();

        if l2 != 0 goto label1;

        return l0;

     label1:
        $r0 = l0.<java.lang.String: char[] value>;

        l3 = lengthof $r0;

        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = l3 + l2;

        l4 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r1, $i0);

        virtualinvoke l1.<java.lang.String: void getChars(char[],int)>(l4, l3);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],boolean)>(l4, 1);

        return $r2;
    }

    void getChars(char[], int)
    {
        java.lang.String l0;
        char[] l1, $r0, $r1;
        int l2, $i0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        $r0 = l0.<java.lang.String: char[] value>;

        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, l1, l2, $i0);

        return;
    }

    public static java.lang.String valueOf(java.lang.Object)
    {
        java.lang.Object l0;
        java.lang.String $r0;

        l0 := @parameter0: java.lang.Object;

        if l0 != null goto label1;

        $r0 = "null";

        goto label2;

     label1:
        $r0 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r0;
    }

    public byte[] getBytes()
    {
        java.lang.String l0;
        char[] $r0, $r1;
        int $i0;
        byte[] $r2;

        l0 := @this: java.lang.String;

        $r0 = l0.<java.lang.String: char[] value>;

        $r1 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r1;

        $r2 = staticinvoke <java.lang.StringCoding: byte[] encode(char[],int,int)>($r0, 0, $i0);

        return $r2;
    }

    public java.lang.String replaceAll(java.lang.String, java.lang.String)
    {
        java.lang.String l0, l1, l2, $r2;
        java.util.regex.Pattern $r0;
        java.util.regex.Matcher $r1;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(l1);

        $r1 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0);

        $r2 = virtualinvoke $r1.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(l2);

        return $r2;
    }

    public boolean endsWith(java.lang.String)
    {
        java.lang.String l0, l1;
        char[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        $r0 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        $r1 = l1.<java.lang.String: char[] value>;

        $i1 = lengthof $r1;

        $i2 = $i0 - $i1;

        $z0 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $i2);

        return $z0;
    }

    public java.lang.String[] split(java.lang.String)
    {
        java.lang.String l0, l1;
        java.lang.String[] $r0;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0);

        return $r0;
    }

    public java.lang.String[] split(java.lang.String, int)
    {
        java.lang.String l0, l1, $r1, $r3, $r5, $r9, $r11;
        int l2, $i0, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, l4#51, $i15, l5#63, $i16, $i17, $i18, $i19, $i20, l8#111, $i21, $i22;
        boolean l6, l3#2, l5#53, $z0;
        java.util.ArrayList l7, $r2;
        java.lang.String[] l9, $r7, $r14, $r16;
        char[] $r0, $r4, $r6, $r8;
        char $c1, l3#12, $c4, $c5;
        java.lang.Object $r10;
        java.util.List $r12;
        java.lang.Object[] $r13;
        java.util.regex.Pattern $r15;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        l3#2 = 0;

        $r0 = l1.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        if $i0 != 1 goto label01;

        $r1 = ".$|()[{^?*+\\";

        $c1 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0);

        l3#12 = $c1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1);

        if $i2 == -1 goto label02;

     label01:
        $i3 = virtualinvoke l1.<java.lang.String: int length()>();

        if $i3 != 2 goto label15;

        $c4 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0);

        if $c4 != 92 goto label15;

        $c5 = virtualinvoke l1.<java.lang.String: char charAt(int)>(1);

        l3#12 = $c5;

        $i6 = $c5 - 48;

        $i7 = 57 - l3#12;

        $i8 = $i6 | $i7;

        if $i8 >= 0 goto label15;

        $i9 = l3#12 - 97;

        $i10 = 122 - l3#12;

        $i11 = $i9 | $i10;

        if $i11 >= 0 goto label15;

        $i12 = l3#12 - 65;

        $i13 = 90 - l3#12;

        $i14 = $i12 | $i13;

        if $i14 >= 0 goto label15;

     label02:
        if l3#12 < 55296 goto label03;

        if l3#12 <= 57343 goto label15;

     label03:
        l4#51 = 0;

        l5#53 = 0;

        if l2 <= 0 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        l6 = $z0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        l7 = $r2;

     label06:
        $i15 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#12, l4#51);

        l5#63 = $i15;

        if $i15 == -1 goto label09;

        if l6 == 0 goto label07;

        $i16 = virtualinvoke l7.<java.util.ArrayList: int size()>();

        $i17 = l2 - 1;

        if $i16 >= $i17 goto label08;

     label07:
        $r3 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4#51, l5#63);

        virtualinvoke l7.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        l4#51 = l5#63 + 1;

        goto label06;

     label08:
        $r4 = l0.<java.lang.String: char[] value>;

        $i18 = lengthof $r4;

        $r5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4#51, $i18);

        virtualinvoke l7.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = l0.<java.lang.String: char[] value>;

        l4#51 = lengthof $r6;

        goto label09;

     label09:
        if l4#51 != 0 goto label10;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = l0;

        return $r7;

     label10:
        if l6 == 0 goto label11;

        $i19 = virtualinvoke l7.<java.util.ArrayList: int size()>();

        if $i19 >= l2 goto label12;

     label11:
        $r8 = l0.<java.lang.String: char[] value>;

        $i20 = lengthof $r8;

        $r9 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4#51, $i20);

        virtualinvoke l7.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label12:
        l8#111 = virtualinvoke l7.<java.util.ArrayList: int size()>();

        if l2 != 0 goto label14;

     label13:
        if l8#111 <= 0 goto label14;

        $i21 = l8#111 - 1;

        $r10 = virtualinvoke l7.<java.util.ArrayList: java.lang.Object get(int)>($i21);

        $r11 = (java.lang.String) $r10;

        $i22 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i22 != 0 goto label14;

        l8#111 = l8#111 + -1;

        goto label13;

     label14:
        l9 = newarray (java.lang.String)[l8#111];

        $r12 = virtualinvoke l7.<java.util.ArrayList: java.util.List subList(int,int)>(0, l8#111);

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(l9);

        $r14 = (java.lang.String[]) $r13;

        return $r14;

     label15:
        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(l1);

        $r16 = virtualinvoke $r15.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(l0, l2);

        return $r16;
    }


