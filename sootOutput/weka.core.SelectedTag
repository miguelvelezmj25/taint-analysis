    public void <init>(int, weka.core.Tag[])
    {
        weka.core.SelectedTag this;
        int tagID, i#7, $i0, $i1, i#56, $i2, $i3;
        weka.core.Tag[] tags;
        java.util.HashSet ID, IDStr, $r0, $r1;
        java.lang.Integer newID, $r2;
        java.lang.String IDstring, $r9, $r16;
        weka.core.Tag $r3, $r10, $r17;
        boolean $z0, $z2;
        java.lang.IllegalArgumentException $r4, $r11, $r18;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r15;

        this := @this: weka.core.SelectedTag;

        tagID := @parameter0: int;

        tags := @parameter1: weka.core.Tag[];

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        ID = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        IDStr = $r1;

        i#7 = 0;

     label1:
        $i0 = lengthof tags;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#7 >= $i0 goto label6;

        $r2 = new java.lang.Integer;

        $r3 = tags[i#7];

        $i1 = virtualinvoke $r3.<weka.core.Tag: int getID()>();

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i1);

        newID = $r2;

        $z0 = virtualinvoke ID.<java.util.HashSet: boolean contains(java.lang.Object)>(newID);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        virtualinvoke ID.<java.util.HashSet: boolean add(java.lang.Object)>(newID);

        goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The IDs are not unique: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newID);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        $r10 = tags[i#7];

        IDstring = virtualinvoke $r10.<weka.core.Tag: java.lang.String getIDStr()>();

        $z2 = virtualinvoke IDStr.<java.util.HashSet: boolean contains(java.lang.Object)>(IDstring);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label4;

        virtualinvoke IDStr.<java.util.HashSet: boolean add(java.lang.Object)>(IDstring);

        goto label5;

     label4:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ID strings are not unique: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(IDstring);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label5:
        i#7 = i#7 + 1;

        goto label1;

     label6:
        i#56 = 0;

     label7:
        $i2 = lengthof tags;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#56);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if i#56 >= $i2 goto label9;

        $r17 = tags[i#56];

        $i3 = virtualinvoke $r17.<weka.core.Tag: int getID()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tagID);

        if $i3 != tagID goto label8;

        this.<weka.core.SelectedTag: int m_Selected> = i#56;

        this.<weka.core.SelectedTag: weka.core.Tag[] m_Tags> = tags;

        return;

     label8:
        i#56 = i#56 + 1;

        goto label7;

     label9:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Selected tag is not valid");

        throw $r18;
    }


