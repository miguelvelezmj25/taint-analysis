    static berkeley.com.sleepycat.je.txn.LockResult access$100(berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding)
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding x0;
        berkeley.com.sleepycat.je.txn.LockResult $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        $r0 = x0.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: berkeley.com.sleepycat.je.txn.LockResult lockResult>;

        return $r0;
    }

    static berkeley.com.sleepycat.je.txn.LockResult access$102(berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding, berkeley.com.sleepycat.je.txn.LockResult)
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding x0;
        berkeley.com.sleepycat.je.txn.LockResult x1;

        x0 := @parameter0: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        x1 := @parameter1: berkeley.com.sleepycat.je.txn.LockResult;

        x0.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: berkeley.com.sleepycat.je.txn.LockResult lockResult> = x1;

        return x1;
    }

    static long access$000(berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding)
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding x0;
        long $l0;

        x0 := @parameter0: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        $l0 = x0.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: long lsn>;

        return $l0;
    }

    static boolean access$202(berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding, boolean)
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding x0;
        boolean x1;

        x0 := @parameter0: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        x1 := @parameter1: boolean;

        x0.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: boolean defunct> = x1;

        return x1;
    }

    static long access$002(berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding, long)
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding x0;
        long x1;

        x0 := @parameter0: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        x1 := @parameter1: long;

        x0.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: long lsn> = x1;

        return x1;
    }

    public void <init>()
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding this;

        this := @this: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean recordExists()
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding this;
        boolean $z0, $z1;

        this := @this: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        $z0 = this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: boolean defunct>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static berkeley.com.sleepycat.je.txn.WriteLockInfo prepareForInsert(berkeley.com.sleepycat.je.tree.BIN)
    {
        berkeley.com.sleepycat.je.tree.BIN bin;
        berkeley.com.sleepycat.je.txn.WriteLockInfo wri, $r0;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r1;

        bin := @parameter0: berkeley.com.sleepycat.je.tree.BIN;

        $r0 = new berkeley.com.sleepycat.je.txn.WriteLockInfo;

        specialinvoke $r0.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void <init>()>();

        wri = $r0;

        $r1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        virtualinvoke wri.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>($r1);

        return wri;
    }

    public berkeley.com.sleepycat.je.txn.WriteLockInfo prepareForUpdate(berkeley.com.sleepycat.je.tree.BIN, int)
    {
        berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding this;
        berkeley.com.sleepycat.je.tree.BIN bin;
        int idx, abortExpiration;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db, $r1;
        boolean abortKD, abortExpirationInHours, $z0, $z1, $z2, $z3;
        byte[] abortKey#7, abortData#9;
        berkeley.com.sleepycat.je.utilint.VLSN $r0;
        long abortVLSN#12, $l0, $l1;
        berkeley.com.sleepycat.je.txn.LockResult $r2, $r4, $r6;
        berkeley.com.sleepycat.je.txn.WriteLockInfo $r3, wri#40, $r5;

        this := @this: berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding;

        bin := @parameter0: berkeley.com.sleepycat.je.tree.BIN;

        idx := @parameter1: int;

        db = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: boolean recordExists()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        abortKD = $z1;

        abortKey#7 = null;

        abortData#9 = null;

        $r0 = <berkeley.com.sleepycat.je.utilint.VLSN: berkeley.com.sleepycat.je.utilint.VLSN NULL_VLSN>;

        abortVLSN#12 = virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.VLSN: long getSequence()>();

        abortExpiration = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getExpiration(int)>(idx);

        abortExpirationInHours = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isExpirationInHours()>();

        $z2 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx);

        if $z2 == 0 goto label3;

        abortData#9 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: byte[] getData(int)>(idx);

        abortVLSN#12 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: long getVLSN(int,boolean,berkeley.com.sleepycat.je.CacheMode)>(idx, 0, null);

        $r1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        $z3 = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean allowsKeyUpdates()>();

        if $z3 == 0 goto label3;

        abortKey#7 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: byte[] getKey(int)>(idx);

     label3:
        $r2 = this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: berkeley.com.sleepycat.je.txn.LockResult lockResult>;

        if $r2 != null goto label4;

        $r3 = null;

        goto label5;

     label4:
        $r4 = this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: berkeley.com.sleepycat.je.txn.LockResult lockResult>;

        $r3 = virtualinvoke $r4.<berkeley.com.sleepycat.je.txn.LockResult: berkeley.com.sleepycat.je.txn.WriteLockInfo getWriteLockInfo()>();

     label5:
        wri#40 = $r3;

        if wri#40 != null goto label6;

        $r5 = new berkeley.com.sleepycat.je.txn.WriteLockInfo;

        specialinvoke $r5.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void <init>()>();

        wri#40 = $r5;

        $l0 = this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: long lsn>;

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setAbortLsn(long)>($l0);

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setAbortKnownDeleted(boolean)>(abortKD);

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setAbortKey(byte[])>(abortKey#7);

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setAbortData(byte[])>(abortData#9);

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setAbortVLSN(long)>(abortVLSN#12);

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setAbortExpiration(int,boolean)>(abortExpiration, abortExpirationInHours);

        virtualinvoke wri#40.<berkeley.com.sleepycat.je.txn.WriteLockInfo: void setDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        goto label7;

     label6:
        $r6 = this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: berkeley.com.sleepycat.je.txn.LockResult lockResult>;

        $l1 = this.<berkeley.com.sleepycat.je.dbi.CursorImpl$LockStanding: long lsn>;

        virtualinvoke $r6.<berkeley.com.sleepycat.je.txn.LockResult: void setAbortInfo(long,boolean,byte[],byte[],long,int,boolean,berkeley.com.sleepycat.je.dbi.DatabaseImpl)>($l1, abortKD, abortKey#7, abortData#9, abortVLSN#12, abortExpiration, abortExpirationInHours, db);

     label7:
        return wri#40;
    }


