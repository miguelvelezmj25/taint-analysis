    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/persist/impl/Evolver";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.persist.impl.Evolver: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog, java.lang.String, berkeley.com.sleepycat.persist.evolve.Mutations, java.util.Map, boolean, boolean)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.PersistCatalog catalog;
        java.lang.String storePrefix;
        berkeley.com.sleepycat.persist.evolve.Mutations mutations;
        java.util.Map newFormats, $r7;
        boolean forceEvolution, disallowClassChanges;
        java.util.IdentityHashMap $r0, $r4;
        java.lang.StringBuilder $r1;
        java.util.HashSet $r2;
        java.util.HashMap $r3, $r5;
        java.util.ArrayList $r6;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        catalog := @parameter0: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        storePrefix := @parameter1: java.lang.String;

        mutations := @parameter2: berkeley.com.sleepycat.persist.evolve.Mutations;

        newFormats := @parameter3: java.util.Map;

        forceEvolution := @parameter4: boolean;

        disallowClassChanges := @parameter5: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog> = catalog;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix> = storePrefix;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = mutations;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map newFormats> = newFormats;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean forceEvolution> = forceEvolution;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean disallowClassChanges> = disallowClassChanges;

        $r0 = new java.util.IdentityHashMap;

        specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map changedFormats> = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.StringBuilder errors> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Set deleteDbs> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map renameDbs> = $r3;

        $r4 = new java.util.IdentityHashMap;

        specialinvoke $r4.<java.util.IdentityHashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map renameFormats> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map evolvedFormats> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.List unprocessedFormats> = $r6;

        $r7 = virtualinvoke catalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map getSubclassMap()>();

        this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map subclassMap> = $r7;

        return;
    }

    void renameAndRemoveDatabases(berkeley.com.sleepycat.persist.impl.Store, berkeley.com.sleepycat.je.Transaction) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Store store;
        berkeley.com.sleepycat.je.Transaction txn;
        java.util.Iterator l3, l4;
        java.lang.String dbName, oldName, newName, $r3, $r4, $r11, $r12, $r13, $r14;
        java.lang.String[] fileAndDbNames, oldFileAndDbNames, newFileAndDbNames;
        java.util.Map$Entry entry;
        java.lang.Throwable l10, $r15;
        java.util.Set $r0, $r6;
        boolean $z0, saveImportunate#23, $z2;
        java.lang.Object $r1, $r7, $r8, $r9;
        berkeley.com.sleepycat.je.Environment $r2, $r10;
        java.util.Map $r5;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        store := @parameter0: berkeley.com.sleepycat.persist.impl.Store;

        txn := @parameter1: berkeley.com.sleepycat.je.Transaction;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Set deleteDbs>;

        l3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r1 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        dbName = (java.lang.String) $r1;

        fileAndDbNames = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>(dbName);

        $r2 = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment getEnvironment()>();

        $r3 = fileAndDbNames[0];

        $r4 = fileAndDbNames[1];

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean removeDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String)>($r2, txn, $r3, $r4);

        goto label01;

     label02:
        saveImportunate#23 = 0;

        if txn == null goto label03;

        saveImportunate#23 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean setImportunate(berkeley.com.sleepycat.je.Transaction,boolean)>(txn, 1);

     label03:
        $r5 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map renameDbs>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        l4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r7 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        oldName = (java.lang.String) $r8;

        $r9 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        newName = (java.lang.String) $r9;

        oldFileAndDbNames = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>(oldName);

        newFileAndDbNames = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>(newName);

        $r10 = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment getEnvironment()>();

        $r11 = oldFileAndDbNames[0];

        $r12 = oldFileAndDbNames[1];

        $r13 = newFileAndDbNames[0];

        $r14 = newFileAndDbNames[1];

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean renameDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, txn, $r11, $r12, $r13, $r14);

        goto label04;

     label05:
        if txn == null goto label10;

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean setImportunate(berkeley.com.sleepycat.je.Transaction,boolean)>(txn, saveImportunate#23);

        goto label10;

     label06:
        $r15 := @caughtexception;

     label07:
        l10 = $r15;

     label08:
        if txn == null goto label09;

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean setImportunate(berkeley.com.sleepycat.je.Transaction,boolean)>(txn, saveImportunate#23);

     label09:
        throw l10;

     label10:
        return;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    boolean areFormatsChanged()
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        java.util.Map $r0;
        boolean $z0, $z1;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map changedFormats>;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    java.lang.String getErrors()
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5;
        int $i0;
        java.lang.String $r3, $r6;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.StringBuilder errors>;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.StringBuilder errors>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---\n(Note that when upgrading an application in a replicated environment, this exception may indicate that the Master was mistakenly upgraded before this Replica could be upgraded, and the solution is to upgrade this Replica.)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        return null;
    }

    void finishEvolution()
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        java.util.Iterator l1;
        berkeley.com.sleepycat.persist.impl.Format oldFormat;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.List unprocessedFormats>;

        l1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        oldFormat = (berkeley.com.sleepycat.persist.impl.Format) $r1;

        virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: void setUnused(boolean)>(1);

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean evolveFormat(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        goto label1;

     label2:
        return;
    }

    boolean evolveFormat(berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, latest, $r10;
        berkeley.com.sleepycat.persist.impl.ComplexFormat oldEntityFormat;
        boolean trackEntityChanges, saveNestedFormatsChanged, $z0, $z1, $z2, result#26, $z3, $z4;
        java.lang.Integer oldFormatId;
        int $i0;
        java.util.Map $r0, $r1, $r4, $r7;
        java.lang.Object $r2;
        java.lang.Boolean $r3, $r5, $r8;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        $z0 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isNew()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        oldEntityFormat = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.ComplexFormat getEntityFormat()>();

        if oldEntityFormat == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        trackEntityChanges = $z1;

        saveNestedFormatsChanged = this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean nestedFormatsChanged>;

        if trackEntityChanges == 0 goto label4;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean nestedFormatsChanged> = 0;

     label4:
        $i0 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: int getId()>();

        oldFormatId = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map evolvedFormats>;

        $z2 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>(oldFormatId);

        if $z2 == 0 goto label5;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map evolvedFormats>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(oldFormatId);

        $r3 = (java.lang.Boolean) $r2;

        result#26 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        goto label6;

     label5:
        $r4 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map evolvedFormats>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(oldFormatId, $r5);

        result#26 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean evolveFormatInternal(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        $r7 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map evolvedFormats>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(result#26);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(oldFormatId, $r8);

     label6:
        $r10 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        $z3 = virtualinvoke $r10.<berkeley.com.sleepycat.persist.impl.Format: boolean isNew()>();

        if $z3 == 0 goto label7;

        this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean nestedFormatsChanged> = 1;

     label7:
        if trackEntityChanges == 0 goto label9;

        $z4 = this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean nestedFormatsChanged>;

        if $z4 == 0 goto label8;

        latest = virtualinvoke oldEntityFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        if latest == null goto label8;

        virtualinvoke latest.<berkeley.com.sleepycat.persist.impl.Format: void setEvolveNeeded(boolean)>(1);

     label8:
        this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean nestedFormatsChanged> = saveNestedFormatsChanged;

     label9:
        return result#26;
    }

    private boolean evolveFormatInternal(berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, compFormat, latest, oldLatestFormat, newFormat#88, $r18, $r19, $r22, $r26;
        java.lang.String oldName, $r5, $r7, newName#73, $r10, $r15, newFormatException#97, $r24;
        int oldVersion;
        berkeley.com.sleepycat.persist.evolve.Renamer renamer;
        berkeley.com.sleepycat.persist.evolve.Deleter deleter;
        berkeley.com.sleepycat.persist.evolve.Converter converter;
        berkeley.com.sleepycat.persist.evolve.Mutation mutation, $r3;
        java.lang.Class newClass;
        java.lang.Exception e, $r16;
        java.lang.ClassNotFoundException e, $r17;
        boolean needDeleter, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        berkeley.com.sleepycat.persist.evolve.Mutations $r0, $r1, $r2;
        java.lang.StringBuilder $r4, $r6, $r8, $r9;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r11, $r12;
        java.util.Map $r13, $r20, $r23;
        java.lang.AssertionError $r14, $r21, $r27;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        $z0 = staticinvoke <berkeley.com.sleepycat.persist.impl.Format: boolean isPredefined(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isDeleted()>();

        if $z1 == 0 goto label02;

     label01:
        return 1;

     label02:
        oldName = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        oldVersion = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: int getVersion()>();

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        renamer = virtualinvoke $r0.<berkeley.com.sleepycat.persist.evolve.Mutations: berkeley.com.sleepycat.persist.evolve.Renamer getRenamer(java.lang.String,int,java.lang.String)>(oldName, oldVersion, null);

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        deleter = virtualinvoke $r1.<berkeley.com.sleepycat.persist.evolve.Mutations: berkeley.com.sleepycat.persist.evolve.Deleter getDeleter(java.lang.String,int,java.lang.String)>(oldName, oldVersion, null);

        $r2 = this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        converter = virtualinvoke $r2.<berkeley.com.sleepycat.persist.evolve.Mutations: berkeley.com.sleepycat.persist.evolve.Converter getConverter(java.lang.String,int,java.lang.String)>(oldName, oldVersion, null);

        if deleter == null goto label04;

        if converter != null goto label03;

        if renamer == null goto label04;

     label03:
        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addInvalidMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.evolve.Mutation,java.lang.String)>(oldFormat, null, deleter, "Class Deleter not allowed along with a Renamer or Converter for the same class");

        return 0;

     label04:
        $z2 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isArray()>();

        if $z2 == 0 goto label15;

        if deleter != null goto label05;

        if converter != null goto label05;

        if renamer == null goto label09;

     label05:
        if deleter == null goto label06;

        $r3 = deleter;

        goto label08;

     label06:
        if converter == null goto label07;

        $r3 = converter;

        goto label08;

     label07:
        $r3 = renamer;

     label08:
        mutation = $r3;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addInvalidMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.evolve.Mutation,java.lang.String)>(oldFormat, null, mutation, "Mutations not allowed for an array");

        return 0;

     label09:
        compFormat = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getComponentType()>();

        $z3 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean evolveFormat(berkeley.com.sleepycat.persist.impl.Format)>(compFormat);

        if $z3 != 0 goto label10;

        return 0;

     label10:
        latest = virtualinvoke compFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        if latest == compFormat goto label13;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $z4 = virtualinvoke latest.<berkeley.com.sleepycat.persist.impl.Format: boolean isArray()>();

        if $z4 == 0 goto label11;

        $r5 = "[";

        goto label12;

     label11:
        $r5 = "[L";

     label12:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke latest.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        newName#73 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label13:
        newName#73 = oldName;

     label14:
        goto label18;

     label15:
        if renamer == null goto label16;

        $r10 = virtualinvoke renamer.<berkeley.com.sleepycat.persist.evolve.Renamer: java.lang.String getNewName()>();

        goto label17;

     label16:
        $r10 = oldName;

     label17:
        newName#73 = $r10;

     label18:
        $r11 = this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        newClass = virtualinvoke $r11.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.Class resolveClass(java.lang.String)>(newName#73);

     label19:
        $r12 = this.<berkeley.com.sleepycat.persist.impl.Evolver: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $r13 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map newFormats>;

        newFormat#88 = virtualinvoke $r12.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format createFormat(java.lang.Class,java.util.Map)>(newClass, $r13);

        $z5 = <berkeley.com.sleepycat.persist.impl.Evolver: boolean $assertionsDisabled>;

        if $z5 != 0 goto label20;

        if newFormat#88 != oldFormat goto label20;

        $r14 = new java.lang.AssertionError;

        $r15 = virtualinvoke newFormat#88.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r14;

     label20:
        newFormatException#97 = null;

     label21:
        goto label23;

     label22:
        $r16 := @caughtexception;

        e = $r16;

        newFormat#88 = null;

        newFormatException#97 = virtualinvoke e.<java.lang.Exception: java.lang.String toString()>();

     label23:
        goto label25;

     label24:
        $r17 := @caughtexception;

        e = $r17;

        newFormat#88 = null;

        newFormatException#97 = virtualinvoke e.<java.lang.ClassNotFoundException: java.lang.String toString()>();

     label25:
        if newFormat#88 == null goto label29;

        $r18 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        if oldFormat == $r18 goto label28;

        $r19 = virtualinvoke newFormat#88.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getPreviousVersion()>();

        if $r19 != null goto label28;

        $z6 = <berkeley.com.sleepycat.persist.impl.Evolver: boolean $assertionsDisabled>;

        if $z6 != 0 goto label26;

        $r20 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map newFormats>;

        $z7 = interfaceinvoke $r20.<java.util.Map: boolean containsValue(java.lang.Object)>(newFormat#88);

        if $z7 != 0 goto label26;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label26:
        oldLatestFormat = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        $z8 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean evolveFormat(berkeley.com.sleepycat.persist.impl.Format)>(oldLatestFormat);

        if $z8 != 0 goto label27;

        return 0;

     label27:
        $r22 = virtualinvoke oldLatestFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        if oldLatestFormat != $r22 goto label28;

        $r23 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map newFormats>;

        $r24 = virtualinvoke newFormat#88.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r24);

        newFormat#88 = oldLatestFormat;

     label28:
        $z9 = this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean forceEvolution>;

        if $z9 != 0 goto label29;

        $r26 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        if newFormat#88 != $r26 goto label29;

        return 1;

     label29:
        if renamer == null goto label30;

        $z10 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean applyClassRenamer(berkeley.com.sleepycat.persist.evolve.Renamer,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format)>(renamer, oldFormat, newFormat#88);

        if $z10 != 0 goto label30;

        return 0;

     label30:
        if converter == null goto label34;

        $z11 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        if $z11 == 0 goto label33;

        if newFormat#88 == null goto label31;

        $z12 = virtualinvoke newFormat#88.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        if $z12 != 0 goto label32;

     label31:
        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addInvalidMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.evolve.Mutation,java.lang.String)>(oldFormat, newFormat#88, converter, "Class converter not allowed for an entity class that is no longer present or not having an @Entity annotation");

        return 0;

     label32:
        $z13 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean evolveMetadata(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.evolve.Converter,berkeley.com.sleepycat.persist.impl.Evolver)>(newFormat#88, converter, this);

        if $z13 != 0 goto label33;

        return 0;

     label33:
        $z14 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean applyConverter(berkeley.com.sleepycat.persist.evolve.Converter,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format)>(converter, oldFormat, newFormat#88);

        return $z14;

     label34:
        if newFormat#88 == null goto label35;

        $z15 = virtualinvoke newFormat#88.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        $z16 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        if $z15 == $z16 goto label36;

     label35:
        $z17 = 1;

        goto label37;

     label36:
        $z17 = 0;

     label37:
        needDeleter = $z17;

        if deleter == null goto label39;

        if needDeleter != 0 goto label38;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addInvalidMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.evolve.Mutation,java.lang.String)>(oldFormat, newFormat#88, deleter, "Class deleter not allowed when the class and its @Entity or @Persistent annotation is still present");

        return 0;

     label38:
        $z18 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean applyClassDeleter(berkeley.com.sleepycat.persist.evolve.Deleter,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format)>(deleter, oldFormat, newFormat#88);

        return $z18;

     label39:
        if needDeleter == 0 goto label43;

        if newFormat#88 != null goto label41;

        $z19 = <berkeley.com.sleepycat.persist.impl.Evolver: boolean $assertionsDisabled>;

        if $z19 != 0 goto label40;

        if newFormatException#97 != null goto label40;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label40:
        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addMissingMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,java.lang.String)>(oldFormat, newFormat#88, newFormatException#97);

        goto label42;

     label41:
        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addMissingMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,java.lang.String)>(oldFormat, newFormat#88, "@Entity switched to/from @Persistent");

     label42:
        return 0;

     label43:
        $z20 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean evolve(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Evolver)>(newFormat#88, this);

        return $z20;

        catch java.lang.Exception from label19 to label21 with label22;
        catch java.lang.ClassNotFoundException from label18 to label23 with label24;
    }

    void addInvalidMutation(berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.evolve.Mutation, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        berkeley.com.sleepycat.persist.evolve.Mutation mutation;
        java.lang.String error, $r3, $r5, $r9;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r6, $r7, $r8;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        newFormat := @parameter1: berkeley.com.sleepycat.persist.impl.Format;

        mutation := @parameter2: berkeley.com.sleepycat.persist.evolve.Mutation;

        error := @parameter3: java.lang.String;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void checkClassChangesAllowed(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mutation: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mutation);

        $r3 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String getClassVersionLabel(berkeley.com.sleepycat.persist.impl.Format,java.lang.String)>(oldFormat, " For");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String getClassVersionLabel(berkeley.com.sleepycat.persist.impl.Format,java.lang.String)>(newFormat, " New");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Error: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(error);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addError(java.lang.String)>($r9);

        return;
    }

    private boolean applyClassRenamer(berkeley.com.sleepycat.persist.evolve.Renamer, berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.evolve.Renamer renamer;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        java.lang.String newClassName, oldClassName, keyName, $r1, $r2, $r3, $r4, $r11, $r12, $r13, $r14;
        java.util.Iterator l6;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata keyMeta;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map $r0, $r7, $r10, $r16;
        berkeley.com.sleepycat.persist.model.EntityMetadata $r6;
        java.util.Collection $r8;
        java.lang.Object $r9;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        renamer := @parameter0: berkeley.com.sleepycat.persist.evolve.Renamer;

        oldFormat := @parameter1: berkeley.com.sleepycat.persist.impl.Format;

        newFormat := @parameter2: berkeley.com.sleepycat.persist.impl.Format;

        $z0 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean checkUpdatedVersion(berkeley.com.sleepycat.persist.evolve.Mutation,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format)>(renamer, oldFormat, newFormat);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isCurrentVersion()>();

        if $z2 == 0 goto label3;

        newClassName = virtualinvoke newFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        oldClassName = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map renameDbs>;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix>;

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makePriDbName(java.lang.String,java.lang.String)>($r1, oldClassName);

        $r3 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix>;

        $r4 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makePriDbName(java.lang.String,java.lang.String)>($r3, newClassName);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r6 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata()>();

        $r7 = virtualinvoke $r6.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.util.Map getSecondaryKeys()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        l6 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r9 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        keyMeta = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r9;

        keyName = virtualinvoke keyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getKeyName()>();

        $r10 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map renameDbs>;

        $r11 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix>;

        $r12 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecDbName(java.lang.String,java.lang.String,java.lang.String)>($r11, oldClassName, keyName);

        $r13 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix>;

        $r14 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecDbName(java.lang.String,java.lang.String,java.lang.String)>($r13, newClassName, keyName);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        goto label2;

     label3:
        $r16 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map renameFormats>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(oldFormat, newFormat);

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void setFormatsChanged(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        return 1;
    }

    private boolean applyConverter(berkeley.com.sleepycat.persist.evolve.Converter, berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.evolve.Converter converter;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        berkeley.com.sleepycat.persist.impl.ConverterReader reader, $r0;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        converter := @parameter0: berkeley.com.sleepycat.persist.evolve.Converter;

        oldFormat := @parameter1: berkeley.com.sleepycat.persist.impl.Format;

        newFormat := @parameter2: berkeley.com.sleepycat.persist.impl.Format;

        $z0 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean checkUpdatedVersion(berkeley.com.sleepycat.persist.evolve.Mutation,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format)>(converter, oldFormat, newFormat);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r0 = new berkeley.com.sleepycat.persist.impl.ConverterReader;

        specialinvoke $r0.<berkeley.com.sleepycat.persist.impl.ConverterReader: void <init>(berkeley.com.sleepycat.persist.evolve.Converter)>(converter);

        reader = $r0;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void useEvolvedFormat(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Reader,berkeley.com.sleepycat.persist.impl.Format)>(oldFormat, reader, newFormat);

        return 1;
    }

    private boolean applyClassDeleter(berkeley.com.sleepycat.persist.evolve.Deleter, berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.evolve.Deleter deleter;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        java.lang.String className, $r1, $r2, $r8, $r9, $r10;
        java.util.Iterator l5;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata keyMeta;
        boolean $z0, $z1, $z2, $z4;
        java.util.Set $r0, $r7;
        berkeley.com.sleepycat.persist.model.EntityMetadata $r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.lang.Object $r6;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        deleter := @parameter0: berkeley.com.sleepycat.persist.evolve.Deleter;

        oldFormat := @parameter1: berkeley.com.sleepycat.persist.impl.Format;

        newFormat := @parameter2: berkeley.com.sleepycat.persist.impl.Format;

        $z0 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean checkUpdatedVersion(berkeley.com.sleepycat.persist.evolve.Mutation,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format)>(deleter, oldFormat, newFormat);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isCurrentVersion()>();

        if $z2 == 0 goto label3;

        className = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Set deleteDbs>;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix>;

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makePriDbName(java.lang.String,java.lang.String)>($r1, className);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata()>();

        $r4 = virtualinvoke $r3.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.util.Map getSecondaryKeys()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        l5 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r6 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        keyMeta = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r6;

        $r7 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Set deleteDbs>;

        $r8 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String storePrefix>;

        $r9 = virtualinvoke keyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getKeyName()>();

        $r10 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecDbName(java.lang.String,java.lang.String,java.lang.String)>($r8, className, $r9);

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: void setDeleted(boolean)>(1);

        if newFormat == null goto label4;

        virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: void setLatestVersion(berkeley.com.sleepycat.persist.impl.Format)>(newFormat);

     label4:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void setFormatsChanged(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        return 1;
    }

    void addMissingMutation(berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Format, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        java.lang.String error, $r2, $r4, $r8;
        java.lang.StringBuilder $r0, $r1, $r3, $r5, $r6, $r7;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        newFormat := @parameter1: berkeley.com.sleepycat.persist.impl.Format;

        error := @parameter2: java.lang.String;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void checkClassChangesAllowed(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mutation is missing to evolve");

        $r2 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String getClassVersionLabel(berkeley.com.sleepycat.persist.impl.Format,java.lang.String)>(oldFormat, "");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String getClassVersionLabel(berkeley.com.sleepycat.persist.impl.Format,java.lang.String)>(newFormat, " to");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Error: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(error);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addError(java.lang.String)>($r8);

        return;
    }

    private void checkClassChangesAllowed(berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat;
        boolean $z0;
        java.lang.IllegalStateException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        $z0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean disallowClassChanges>;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("When performing an upgrade changes are not allowed but were made to: ");

        $r3 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        return;
    }

    private java.lang.String getClassVersionLabel(berkeley.com.sleepycat.persist.impl.Format, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.lang.String prefix, $r3, $r7;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r6;
        int $i0;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        format := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        prefix := @parameter1: java.lang.String;

        if format == null goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class: ");

        $r3 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version: ");

        $i0 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: int getVersion()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return "";
    }

    private void addError(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        java.lang.String error;
        java.lang.StringBuilder $r0, $r1, $r3;
        int $i0;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        error := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.StringBuilder errors>;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label1;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.StringBuilder errors>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---\n");

     label1:
        $r3 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.StringBuilder errors>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(error);

        return;
    }

    private boolean checkUpdatedVersion(berkeley.com.sleepycat.persist.evolve.Mutation, berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.evolve.Mutation mutation;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        boolean $z0;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        mutation := @parameter0: berkeley.com.sleepycat.persist.evolve.Mutation;

        oldFormat := @parameter1: berkeley.com.sleepycat.persist.impl.Format;

        newFormat := @parameter2: berkeley.com.sleepycat.persist.impl.Format;

        if newFormat == null goto label1;

        $z0 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEnum()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke newFormat.<berkeley.com.sleepycat.persist.impl.Format: int getVersion()>();

        $i1 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: int getVersion()>();

        if $i0 > $i1 goto label1;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void addInvalidMutation(berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.impl.Format,berkeley.com.sleepycat.persist.evolve.Mutation,java.lang.String)>(oldFormat, newFormat, mutation, "A new higher version number must be assigned");

        return 0;

     label1:
        return 1;
    }

    private void setFormatsChanged(berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat;
        java.util.Map $r0;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void checkClassChangesAllowed(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.Map changedFormats>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(oldFormat, oldFormat);

        this.<berkeley.com.sleepycat.persist.impl.Evolver: boolean nestedFormatsChanged> = 1;

        $z0 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean expectNoClassChanges>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("expectNoClassChanges");

        throw $r2;

     label1:
        return;
    }

    void useEvolvedFormat(berkeley.com.sleepycat.persist.impl.Format, berkeley.com.sleepycat.persist.impl.Reader, berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat, newFormat;
        berkeley.com.sleepycat.persist.impl.Reader evolveReader;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        evolveReader := @parameter1: berkeley.com.sleepycat.persist.impl.Reader;

        newFormat := @parameter2: berkeley.com.sleepycat.persist.impl.Format;

        virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: void setReader(berkeley.com.sleepycat.persist.impl.Reader)>(evolveReader);

        if newFormat == null goto label1;

        virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: void setLatestVersion(berkeley.com.sleepycat.persist.impl.Format)>(newFormat);

     label1:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Evolver: void setFormatsChanged(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        return;
    }

    void addNonEntityFormat(berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.Evolver this;
        berkeley.com.sleepycat.persist.impl.Format oldFormat;
        java.util.List $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Evolver;

        oldFormat := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Evolver: java.util.List unprocessedFormats>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(oldFormat);

        return;
    }


