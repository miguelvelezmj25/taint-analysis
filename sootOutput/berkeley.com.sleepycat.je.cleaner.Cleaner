    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.CacheMode $r1;

        $r0 = class "berkeley/com/sleepycat/je/cleaner/Cleaner";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.cleaner.Cleaner: boolean $assertionsDisabled> = $z1;

        $r1 = <berkeley.com.sleepycat.je.CacheMode: berkeley.com.sleepycat.je.CacheMode UNCHANGED>;

        <berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.CacheMode UPDATE_GENERATION> = $r1;

        return;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, java.lang.String)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl env;
        java.lang.String name;
        java.util.concurrent.atomic.AtomicBoolean $r0;
        java.util.concurrent.atomic.AtomicLong $r1, $r106;
        berkeley.com.sleepycat.je.utilint.StatGroup $r2, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94;
        berkeley.com.sleepycat.je.utilint.LongStat $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87;
        berkeley.com.sleepycat.je.utilint.StatDefinition $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95;
        berkeley.com.sleepycat.je.utilint.IntStat $r90, $r93;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker $r96, $r98;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r97;
        berkeley.com.sleepycat.je.cleaner.ExpirationProfile $r99;
        berkeley.com.sleepycat.je.cleaner.UtilizationCalculator $r100;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r101;
        berkeley.com.sleepycat.je.cleaner.FileProcessor[] $r102;
        java.util.LinkedList $r103;
        java.lang.Class $r104;
        java.util.logging.Logger $r105;
        berkeley.com.sleepycat.je.dbi.DbConfigManager $r107, $r109, $r111;
        berkeley.com.sleepycat.je.config.BooleanConfigParam $r108, $r110;
        boolean $z0, $z1;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        name := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.SortedSet lastProtectedFileSet> = null;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.lang.String lastProtectedFileMsg> = null;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean fileDeletionEnabled> = 1;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicBoolean processPendingReentrancyGuard> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicLong bytesWrittenSinceActivation> = $r1;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env> = env;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.lang.String name> = "Cleaner";

        $r2 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r2.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Cleaning", "Frequency and extent of log file cleaning activity.");

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats> = $r2;

        $r3 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r5 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_RUNS>;

        specialinvoke $r3.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r4, $r5);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nCleanerRuns> = $r3;

        $r6 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r7 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r8 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_TWO_PASS_RUNS>;

        specialinvoke $r6.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r7, $r8);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nTwoPassRuns> = $r6;

        $r9 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r10 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r11 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_REVISAL_RUNS>;

        specialinvoke $r9.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r10, $r11);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nRevisalRuns> = $r9;

        $r12 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r13 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r14 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_DELETIONS>;

        specialinvoke $r12.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r13, $r14);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nCleanerDeletions> = $r12;

        $r15 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r16 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r17 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_INS_OBSOLETE>;

        specialinvoke $r15.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r16, $r17);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nINsObsolete> = $r15;

        $r18 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r19 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r20 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_INS_CLEANED>;

        specialinvoke $r18.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r19, $r20);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nINsCleaned> = $r18;

        $r21 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r22 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r23 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_INS_DEAD>;

        specialinvoke $r21.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r22, $r23);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nINsDead> = $r21;

        $r24 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r25 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r26 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_INS_MIGRATED>;

        specialinvoke $r24.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r25, $r26);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nINsMigrated> = $r24;

        $r27 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r28 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r29 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_BIN_DELTAS_OBSOLETE>;

        specialinvoke $r27.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r28, $r29);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nBINDeltasObsolete> = $r27;

        $r30 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r31 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r32 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_BIN_DELTAS_CLEANED>;

        specialinvoke $r30.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r31, $r32);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nBINDeltasCleaned> = $r30;

        $r33 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r34 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r35 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_BIN_DELTAS_DEAD>;

        specialinvoke $r33.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r34, $r35);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nBINDeltasDead> = $r33;

        $r36 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r37 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r38 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_BIN_DELTAS_MIGRATED>;

        specialinvoke $r36.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r37, $r38);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nBINDeltasMigrated> = $r36;

        $r39 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r40 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r41 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_OBSOLETE>;

        specialinvoke $r39.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r40, $r41);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsObsolete> = $r39;

        $r42 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r43 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r44 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_EXPIRED>;

        specialinvoke $r42.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r43, $r44);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsExpired> = $r42;

        $r45 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r46 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r47 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_CLEANED>;

        specialinvoke $r45.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r46, $r47);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsCleaned> = $r45;

        $r48 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r49 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r50 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_DEAD>;

        specialinvoke $r48.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r49, $r50);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsDead> = $r48;

        $r51 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r52 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r53 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_LOCKED>;

        specialinvoke $r51.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r52, $r53);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsLocked> = $r51;

        $r54 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r55 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r56 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_MIGRATED>;

        specialinvoke $r54.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r55, $r56);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsMigrated> = $r54;

        $r57 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r58 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r59 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNS_MARKED>;

        specialinvoke $r57.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r58, $r59);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsMarked> = $r57;

        $r60 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r61 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r62 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_LNQUEUE_HITS>;

        specialinvoke $r60.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r61, $r62);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNQueueHits> = $r60;

        $r63 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r64 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r65 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_PENDING_LNS_PROCESSED>;

        specialinvoke $r63.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r64, $r65);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nPendingLNsProcessed> = $r63;

        $r66 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r67 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r68 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_MARKED_LNS_PROCESSED>;

        specialinvoke $r66.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r67, $r68);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nMarkedLNsProcessed> = $r66;

        $r69 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r70 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r71 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_TO_BE_CLEANED_LNS_PROCESSED>;

        specialinvoke $r69.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r70, $r71);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nToBeCleanedLNsProcessed> = $r69;

        $r72 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r73 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r74 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_CLUSTER_LNS_PROCESSED>;

        specialinvoke $r72.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r73, $r74);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nClusterLNsProcessed> = $r72;

        $r75 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r76 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r77 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_PENDING_LNS_LOCKED>;

        specialinvoke $r75.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r76, $r77);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nPendingLNsLocked> = $r75;

        $r78 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r79 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r80 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_ENTRIES_READ>;

        specialinvoke $r78.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r79, $r80);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nEntriesRead> = $r78;

        $r81 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r82 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r83 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_DISK_READS>;

        specialinvoke $r81.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r82, $r83);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nDiskReads> = $r81;

        $r84 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r85 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r86 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_REPEAT_ITERATOR_READS>;

        specialinvoke $r84.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r85, $r86);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nRepeatIteratorReads> = $r84;

        $r87 = new berkeley.com.sleepycat.je.utilint.LongStat;

        $r88 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r89 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_TOTAL_LOG_SIZE>;

        specialinvoke $r87.<berkeley.com.sleepycat.je.utilint.LongStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r88, $r89);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat totalLogSize> = $r87;

        $r90 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r91 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r92 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_MIN_UTILIZATION>;

        specialinvoke $r90.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r91, $r92);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.IntStat currentMinUtilization> = $r90;

        $r93 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r94 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r95 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_MAX_UTILIZATION>;

        specialinvoke $r93.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r94, $r95);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.IntStat currentMaxUtilization> = $r93;

        $r96 = new berkeley.com.sleepycat.je.cleaner.UtilizationTracker;

        specialinvoke $r96.<berkeley.com.sleepycat.je.cleaner.UtilizationTracker: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.cleaner.Cleaner)>(env, this);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker> = $r96;

        $r97 = new berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        $r98 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker>;

        specialinvoke $r97.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.cleaner.UtilizationTracker)>(env, $r98);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile> = $r97;

        $r99 = new berkeley.com.sleepycat.je.cleaner.ExpirationProfile;

        specialinvoke $r99.<berkeley.com.sleepycat.je.cleaner.ExpirationProfile: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>(env);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.ExpirationProfile expirationProfile> = $r99;

        $r100 = new berkeley.com.sleepycat.je.cleaner.UtilizationCalculator;

        specialinvoke $r100.<berkeley.com.sleepycat.je.cleaner.UtilizationCalculator: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.cleaner.Cleaner)>(env, this);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationCalculator calculator> = $r100;

        $r101 = new berkeley.com.sleepycat.je.cleaner.FileSelector;

        specialinvoke $r101.<berkeley.com.sleepycat.je.cleaner.FileSelector: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector> = $r101;

        $r102 = newarray (berkeley.com.sleepycat.je.cleaner.FileProcessor)[0];

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads> = $r102;

        $r103 = new java.util.LinkedList;

        specialinvoke $r103.<java.util.LinkedList: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges> = $r103;

        $r104 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r105 = staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: java.util.logging.Logger getLogger(java.lang.Class)>($r104);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger> = $r105;

        $r106 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r106.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicLong totalRuns> = $r106;

        $r107 = virtualinvoke env.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r108 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.BooleanConfigParam CLEANER_TRACK_DETAIL>;

        $z0 = virtualinvoke $r107.<berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)>($r108);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean trackDetail> = $z0;

        $r109 = virtualinvoke env.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r110 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.BooleanConfigParam CLEANER_RMW_FIX>;

        $z1 = virtualinvoke $r109.<berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)>($r110);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean rmwFixEnabled> = $z1;

        $r111 = virtualinvoke env.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void setMutableProperties(berkeley.com.sleepycat.je.dbi.DbConfigManager)>($r111);

        virtualinvoke env.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void addConfigObserver(berkeley.com.sleepycat.je.dbi.EnvConfigObserver)>(this);

        return;
    }

    private void setMutableProperties(berkeley.com.sleepycat.je.dbi.DbConfigManager)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.dbi.DbConfigManager cm;
        int nThreads, wakeupInterval, l5, $i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i#69, $i15, i#89, $i16, i#105, $i17, $i18, l6#161, $i25, $i26, $i27;
        berkeley.com.sleepycat.je.cleaner.FileProcessor[] newThreads, l4, $r14, $r15, $r16, $r18, $r20, $r21, $r22, $r24, $r26;
        berkeley.com.sleepycat.je.cleaner.FileProcessor thread, $r17, $r19, $r23, $r25, $r27;
        berkeley.com.sleepycat.je.config.DurationConfigParam $r0, $r41;
        long $l1, $l7, $l19, $l20, $l22, $l23, $l24;
        berkeley.com.sleepycat.je.config.IntConfigParam $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r11, $r12, $r43, $r44, $r45;
        berkeley.com.sleepycat.je.config.BooleanConfigParam $r5, $r6, $r10, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.AssertionError $r13;
        java.lang.StringBuilder $r29, $r31, $r32, $r33;
        java.lang.String $r30, $r34;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r35;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r36;
        berkeley.com.sleepycat.je.cleaner.UtilizationCalculator $r37;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r38;
        berkeley.com.sleepycat.je.config.LongConfigParam $r39, $r40;
        byte $b21;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        cm := @parameter0: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        $r0 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.DurationConfigParam CLEANER_LOCK_TIMEOUT>;

        $i0 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getDuration(berkeley.com.sleepycat.je.config.DurationConfigParam)>($r0);

        $l1 = (long) $i0;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long lockTimeout> = $l1;

        $r1 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_READ_SIZE>;

        $i2 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r1);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int readBufferSize> = $i2;

        $i3 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int readBufferSize>;

        if $i3 > 0 goto label01;

        $r2 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam LOG_ITERATOR_READ_SIZE>;

        $i4 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r2);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int readBufferSize> = $i4;

     label01:
        $r3 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_LOOK_AHEAD_CACHE_SIZE>;

        $i5 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r3);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int lookAheadCacheSize> = $i5;

        $r4 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_DEADLOCK_RETRY>;

        $i6 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r4);

        $l7 = (long) $i6;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long nDeadlockRetries> = $l7;

        $r5 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.BooleanConfigParam CLEANER_REMOVE>;

        $z0 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)>($r5);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean expunge> = $z0;

        $r6 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.BooleanConfigParam CLEANER_USE_DELETED_DIR>;

        $z1 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)>($r6);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean useDeletedDir> = $z1;

        $r7 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_TWO_PASS_GAP>;

        $i8 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r7);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int twoPassGap> = $i8;

        $r8 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_TWO_PASS_THRESHOLD>;

        $i9 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r8);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int twoPassThreshold> = $i9;

        $i10 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int twoPassThreshold>;

        if $i10 != 0 goto label02;

        $r9 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_MIN_UTILIZATION>;

        $i11 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r9);

        $i12 = $i11 - 5;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int twoPassThreshold> = $i12;

     label02:
        $r10 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.BooleanConfigParam CLEANER_GRADUAL_EXPIRATION>;

        $z2 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)>($r10);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean gradualExpiration> = $z2;

        $r11 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam ENV_DB_CACHE_CLEAR_COUNT>;

        $i13 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r11);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int dbCacheClearCount> = $i13;

        $r12 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_THREADS>;

        nThreads = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r12);

        $z3 = <berkeley.com.sleepycat.je.cleaner.Cleaner: boolean $assertionsDisabled>;

        if $z3 != 0 goto label03;

        if nThreads > 0 goto label03;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label03:
        $r14 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $i14 = lengthof $r14;

        if nThreads == $i14 goto label15;

        i#69 = nThreads;

     label04:
        $r15 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $i15 = lengthof $r15;

        if i#69 >= $i15 goto label07;

        $r16 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r17 = $r16[i#69];

        if $r17 != null goto label05;

        goto label06;

     label05:
        $r18 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r19 = $r18[i#69];

        virtualinvoke $r19.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void shutdown()>();

        $r20 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r20[i#69] = null;

     label06:
        i#69 = i#69 + 1;

        goto label04;

     label07:
        newThreads = newarray (berkeley.com.sleepycat.je.cleaner.FileProcessor)[nThreads];

        i#89 = 0;

     label08:
        if i#89 >= nThreads goto label09;

        $r21 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $i16 = lengthof $r21;

        if i#89 >= $i16 goto label09;

        $r22 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r23 = $r22[i#89];

        newThreads[i#89] = $r23;

        i#89 = i#89 + 1;

        goto label08;

     label09:
        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads> = newThreads;

        i#105 = 0;

     label10:
        if i#105 >= nThreads goto label15;

        $r24 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r25 = $r24[i#105];

        if $r25 == null goto label11;

        goto label14;

     label11:
        $r26 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $i17 = i#105;

        $r27 = new berkeley.com.sleepycat.je.cleaner.FileProcessor;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.lang.String name>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i18 = i#105 + 1;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        if i#105 != 0 goto label12;

        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        $r35 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r36 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        $r37 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationCalculator calculator>;

        $r38 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        specialinvoke $r27.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void <init>(java.lang.String,boolean,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.cleaner.Cleaner,berkeley.com.sleepycat.je.cleaner.UtilizationProfile,berkeley.com.sleepycat.je.cleaner.UtilizationCalculator,berkeley.com.sleepycat.je.cleaner.FileSelector)>($r34, $z4, $r35, this, $r36, $r37, $r38);

        $r26[$i17] = $r27;

     label14:
        i#105 = i#105 + 1;

        goto label10;

     label15:
        $r39 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.LongConfigParam CLEANER_BYTES_INTERVAL>;

        $l19 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: long getLong(berkeley.com.sleepycat.je.config.LongConfigParam)>($r39);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long cleanerBytesInterval> = $l19;

        $l20 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long cleanerBytesInterval>;

        $b21 = $l20 cmp 0L;

        if $b21 != 0 goto label16;

        $r40 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.LongConfigParam LOG_FILE_MAX>;

        $l22 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: long getLong(berkeley.com.sleepycat.je.config.LongConfigParam)>($r40);

        $l23 = $l22 / 4L;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long cleanerBytesInterval> = $l23;

     label16:
        $r41 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.DurationConfigParam CLEANER_WAKEUP_INTERVAL>;

        wakeupInterval = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getDuration(berkeley.com.sleepycat.je.config.DurationConfigParam)>($r41);

        l4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        l5 = lengthof l4;

        l6#161 = 0;

     label17:
        if l6#161 >= l5 goto label20;

        thread = l4[l6#161];

        if thread != null goto label18;

        goto label19;

     label18:
        $l24 = (long) wakeupInterval;

        virtualinvoke thread.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void setWaitTime(long)>($l24);

     label19:
        l6#161 = l6#161 + 1;

        goto label17;

     label20:
        $r42 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.BooleanConfigParam CLEANER_FETCH_OBSOLETE_SIZE>;

        $z5 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)>($r42);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean fetchObsoleteSize> = $z5;

        $r43 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_MIN_AGE>;

        $i25 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r43);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int minAge> = $i25;

        $r44 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_MIN_UTILIZATION>;

        $i26 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r44);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int minUtilization> = $i26;

        $r45 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.IntConfigParam CLEANER_MIN_FILE_UTILIZATION>;

        $i27 = virtualinvoke cm.<berkeley.com.sleepycat.je.dbi.DbConfigManager: int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)>($r45);

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: int minFileUtilization> = $i27;

        return;
    }

    public void runOrPause(boolean)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        boolean run, $z0;
        berkeley.com.sleepycat.je.cleaner.FileProcessor[] l2;
        int l3, l4#9;
        berkeley.com.sleepycat.je.cleaner.FileProcessor processor;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        run := @parameter0: boolean;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean isNoLocking()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        l2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        l3 = lengthof l2;

        l4#9 = 0;

     label2:
        if l4#9 >= l3 goto label6;

        processor = l2[l4#9];

        if processor != null goto label3;

        goto label5;

     label3:
        if run == 0 goto label4;

        virtualinvoke processor.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void activateOnWakeup()>();

     label4:
        virtualinvoke processor.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void runOrPause(boolean)>(run);

     label5:
        l4#9 = l4#9 + 1;

        goto label2;

     label6:
        return;
    }

    public berkeley.com.sleepycat.je.utilint.StatGroup loadStats(berkeley.com.sleepycat.je.StatsConfig)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.StatsConfig config;
        berkeley.com.sleepycat.je.utilint.StatGroup copyStats, $r9, $r11;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.utilint.LongStat $r0;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r1;
        long $l0;
        java.lang.Long $r2;
        berkeley.com.sleepycat.je.utilint.IntStat $r3, $r6;
        berkeley.com.sleepycat.je.cleaner.UtilizationCalculator $r4, $r7;
        int $i1, $i2;
        java.lang.Integer $r5, $r8;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r10;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        config := @parameter0: berkeley.com.sleepycat.je.StatsConfig;

        $z0 = virtualinvoke config.<berkeley.com.sleepycat.je.StatsConfig: boolean getFast()>();

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat totalLogSize>;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        $l0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: long getTotalLogSize()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.LongStat: void set(java.lang.Long)>($r2);

     label1:
        $r3 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.IntStat currentMinUtilization>;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationCalculator calculator>;

        $i1 = virtualinvoke $r4.<berkeley.com.sleepycat.je.cleaner.UtilizationCalculator: int getCurrentMinUtilization()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r3.<berkeley.com.sleepycat.je.utilint.IntStat: void set(java.lang.Integer)>($r5);

        $r6 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.IntStat currentMaxUtilization>;

        $r7 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationCalculator calculator>;

        $i2 = virtualinvoke $r7.<berkeley.com.sleepycat.je.cleaner.UtilizationCalculator: int getCurrentMaxUtilization()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r6.<berkeley.com.sleepycat.je.utilint.IntStat: void set(java.lang.Integer)>($r8);

        $r9 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $z1 = virtualinvoke config.<berkeley.com.sleepycat.je.StatsConfig: boolean getClear()>();

        copyStats = virtualinvoke $r9.<berkeley.com.sleepycat.je.utilint.StatGroup: berkeley.com.sleepycat.je.utilint.StatGroup cloneGroup(boolean)>($z1);

        $r10 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r11 = virtualinvoke $r10.<berkeley.com.sleepycat.je.cleaner.FileSelector: berkeley.com.sleepycat.je.utilint.StatGroup loadStats()>();

        virtualinvoke copyStats.<berkeley.com.sleepycat.je.utilint.StatGroup: void addAll(berkeley.com.sleepycat.je.utilint.StatGroup)>($r11);

        return copyStats;
    }

    public void requestShutdown()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.FileProcessor[] l1;
        int l2, l3#6;
        berkeley.com.sleepycat.je.cleaner.FileProcessor thread;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        l1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        l2 = lengthof l1;

        l3#6 = 0;

     label1:
        if l3#6 >= l2 goto label4;

        thread = l1[l3#6];

        if thread != null goto label2;

        goto label3;

     label2:
        virtualinvoke thread.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void requestShutdown()>();

     label3:
        l3#6 = l3#6 + 1;

        goto label1;

     label4:
        return;
    }

    public berkeley.com.sleepycat.je.cleaner.ExpirationProfile getExpirationProfile()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.ExpirationProfile $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.ExpirationProfile expirationProfile>;

        return $r0;
    }

    public berkeley.com.sleepycat.je.cleaner.UtilizationTracker getUtilizationTracker()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker>;

        return $r0;
    }

    public void wakeupAfterWrite(int)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        int writeSize;
        java.util.concurrent.atomic.AtomicLong $r0, $r1;
        long $l0, $l1, $l2;
        byte $b3;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        writeSize := @parameter0: int;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicLong bytesWrittenSinceActivation>;

        $l0 = (long) writeSize;

        $l1 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l0);

        $l2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long cleanerBytesInterval>;

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicLong bytesWrittenSinceActivation>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void wakeupActivate()>();

     label1:
        return;
    }

    public void wakeupActivate()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.FileProcessor[] l1;
        int l2, l3#6;
        berkeley.com.sleepycat.je.cleaner.FileProcessor thread;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        l1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        l2 = lengthof l1;

        l3#6 = 0;

     label1:
        if l3#6 >= l2 goto label4;

        thread = l1[l3#6];

        if thread != null goto label2;

        goto label3;

     label2:
        virtualinvoke thread.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void activateOnWakeup()>();

        virtualinvoke thread.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void wakeup()>();

     label3:
        l3#6 = l3#6 + 1;

        goto label1;

     label4:
        return;
    }

    public berkeley.com.sleepycat.je.cleaner.UtilizationProfile getUtilizationProfile()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        return $r0;
    }

    public void shutdown()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        int i#2, $i0;
        berkeley.com.sleepycat.je.cleaner.FileProcessor[] $r0, $r1, $r3, $r5;
        berkeley.com.sleepycat.je.cleaner.FileProcessor $r2, $r4;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        i#2 = 0;

     label1:
        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $i0 = lengthof $r0;

        if i#2 >= $i0 goto label4;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r2 = $r1[i#2];

        if $r2 != null goto label2;

        goto label3;

     label2:
        $r3 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r4 = $r3[i#2];

        virtualinvoke $r4.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void shutdown()>();

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileProcessor[] threads>;

        $r5[i#2] = null;

     label3:
        i#2 = i#2 + 1;

        goto label1;

     label4:
        return;
    }

    public berkeley.com.sleepycat.je.cleaner.FileSelector getFileSelector()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        return $r0;
    }

    public berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState getFilesAtCheckpointStart()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r0;
        berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void processPending()>();

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.cleaner.FileSelector: berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState getFilesAtCheckpointStart()>();

        return $r1;
    }

    public void updateFilesAtCheckpointEnd(berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState info;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r0;
        berkeley.com.sleepycat.je.cleaner.ExpirationProfile $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        info := @parameter0: berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.cleaner.FileSelector: void updateFilesAtCheckpointEnd(berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState)>(info);

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void deleteSafeToDeleteFiles()>();

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.ExpirationProfile expirationProfile>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.cleaner.ExpirationProfile: void processCompletedTrackers()>();

        return;
    }

    synchronized void deleteSafeToDeleteFiles()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        java.util.NavigableSet safeToDeleteFiles, unprotectedFiles#20;
        java.lang.StringBuilder haMsg, $r3, $r18, $r19, $r20, $r28, $r29, $r30, $r31, $r32, $r37, $r38, $r40, $r45, $r46, $r48, $r49, $r50, $r51, $r53, $r58, $r59, $r61, $r62, $r63, $r64, $r66;
        java.lang.Long[] unprotectedFilesArray, $r5;
        java.lang.Long fileNum, minRangeStart, fileNum, fileNum, file, $r15;
        berkeley.com.sleepycat.je.utilint.VLSN lastVlsn;
        berkeley.com.sleepycat.je.log.FileManager fileManager;
        java.util.Iterator iter, l7, l6#229;
        java.lang.String expungeLabel, expungedLabel, $r17, $r23, $r33, $r39, $r41, $r47, $r54, $r60, $r67;
        java.io.File newFile;
        java.io.IOException e, $r24;
        java.lang.Throwable l13, l14, l15, $r68, $r69, $r79;
        java.util.ArrayList filesNotDeleted, $r84;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r1, $r4, $r8, $r9, $r26, $r35, $r43, $r56, $r77, $r81;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, deleted#113, $z10, $z12, $z13, $z14, $z15, $z16;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r2, $r7, $r52, $r65, $r71, $r76, $r80;
        int $i0, $i1, i#38, $i14, $i15, $i16, $i17, $i18;
        java.lang.Object[] $r6;
        long $l2, $l3, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        java.util.List $r10, l6#69, $r11, $r12;
        java.lang.Object $r13, $r14, $r16, $r73, $r85;
        byte $b5;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r25;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r27;
        java.util.logging.Logger $r34, $r42, $r55;
        java.util.logging.Level $r36, $r44, $r57;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r70, $r74;
        java.util.Set $r72;
        berkeley.com.sleepycat.je.cleaner.ExpirationProfile $r75;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r78, $r82;
        berkeley.com.sleepycat.je.utilint.LongStat $r83;
        java.util.TreeSet $r86;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void checkIfInvalid()>();

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $z0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean mayNotWrite()>();

        if $z0 != 0 goto label01;

        $z1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean fileDeletionEnabled>;

        if $z1 != 0 goto label02;

     label01:
        return;

     label02:
        $r2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        safeToDeleteFiles = virtualinvoke $r2.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.NavigableSet getSafeToDeleteFiles()>();

        $z2 = interfaceinvoke safeToDeleteFiles.<java.util.NavigableSet: boolean isEmpty()>();

        if $z2 == 0 goto label03;

        return;

     label03:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        haMsg = $r3;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        unprotectedFiles#20 = virtualinvoke $r4.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: java.util.NavigableSet getUnprotectedFileSet(java.util.NavigableSet,java.lang.StringBuilder)>(safeToDeleteFiles, haMsg);

        if unprotectedFiles#20 != null goto label04;

        return;

     label04:
        $z3 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: boolean isEmpty()>();

        if $z3 == 0 goto label05;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logProtectedFiles(java.lang.String,java.util.SortedSet,java.lang.StringBuilder)>("they are protected by replication", safeToDeleteFiles, haMsg);

        return;

     label05:
        $i0 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: int size()>();

        $r5 = newarray (java.lang.Long)[$i0];

        $r6 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        unprotectedFilesArray = (java.lang.Long[]) $r6;

        $i1 = lengthof unprotectedFilesArray;

        i#38 = $i1 - 1;

     label06:
        if i#38 < 0 goto label08;

        fileNum = unprotectedFilesArray[i#38];

        $r7 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        lastVlsn = virtualinvoke $r7.<berkeley.com.sleepycat.je.cleaner.FileSelector: berkeley.com.sleepycat.je.utilint.VLSN getLastVLSN(java.lang.Long)>(fileNum);

        if lastVlsn == null goto label07;

        $z4 = virtualinvoke lastVlsn.<berkeley.com.sleepycat.je.utilint.VLSN: boolean isNull()>();

        if $z4 != 0 goto label07;

        $r8 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $l2 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        virtualinvoke $r8.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void vlsnHeadTruncate(berkeley.com.sleepycat.je.utilint.VLSN,long)>(lastVlsn, $l2);

        goto label08;

     label07:
        i#38 = i#38 + -1;

        goto label06;

     label08:
        $r9 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        fileManager = virtualinvoke $r9.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        $z5 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: boolean lockEnvironment(boolean,boolean)>(0, 1);

        if $z5 != 0 goto label09;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logProtectedFiles(java.lang.String,java.util.SortedSet,java.lang.StringBuilder)>("of read-only processes", safeToDeleteFiles, haMsg);

        return;

     label09:
        $r10 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        l6#69 = $r10;

        entermonitor $r10;

     label10:
        $r11 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        $z6 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label13;

        $r12 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        $r13 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>($r12);

        minRangeStart = (java.lang.Long) $r13;

        $l3 = virtualinvoke minRangeStart.<java.lang.Long: long longValue()>();

        $r14 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: java.lang.Object first()>();

        $r15 = (java.lang.Long) $r14;

        $l4 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        $b5 = $l3 cmp $l4;

        if $b5 > 0 goto label12;

        exitmonitor l6#69;

     label11:
        virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: void releaseExclusiveLock()>();

        return;

     label12:
        unprotectedFiles#20 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>(minRangeStart, 0);

     label13:
        iter = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: java.util.Iterator iterator()>();

     label14:
        $z7 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label30;

        $r16 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        fileNum = (java.lang.Long) $r16;

        $z8 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean expunge>;

        if $z8 == 0 goto label15;

        $r17 = "delete";

        goto label16;

     label15:
        $r17 = "rename";

     label16:
        expungeLabel = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expungeLabel);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        expungedLabel = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        $z9 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean expunge>;

        if $z9 == 0 goto label18;

        $l6 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        deleted#113 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: boolean deleteFile(long)>($l6);

        goto label24;

     label18:
        $l7 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $z10 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean useDeletedDir>;

        if $z10 == 0 goto label19;

        $r23 = "deleted";

        goto label20;

     label19:
        $r23 = null;

     label20:
        newFile = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: java.io.File renameFile(long,java.lang.String,java.lang.String)>($l7, ".del", $r23);

        if newFile == null goto label21;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke newFile.<java.io.File: boolean setLastModified(long)>($l8);

     label21:
        if newFile == null goto label22;

        $z12 = 1;

        goto label23;

     label22:
        $z12 = 0;

     label23:
        deleted#113 = $z12;

     label24:
        goto label26;

     label25:
        $r24 := @caughtexception;

        e = $r24;

        $r25 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r26 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r27 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expungeLabel);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(fileNum);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r26, $r27, $r33, e);

        throw $r25;

     label26:
        if deleted#113 == 0 goto label27;

        $r34 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r35 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r36 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaner deleted file 0x");

        $l9 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r39 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l9);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void traceAndLog(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r34, $r35, $r36, $r41);

        goto label29;

     label27:
        $l10 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $z13 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: boolean isFileValid(long)>($l10);

        if $z13 != 0 goto label28;

        $r42 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r43 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r44 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaner deleteSafeToDeleteFiles Log file 0x");

        $l11 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r47 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l11);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expungedLabel);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  State: ");

        $r52 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void traceAndLog(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r42, $r43, $r44, $r54);

        goto label29;

     label28:
        interfaceinvoke iter.<java.util.Iterator: void remove()>();

        $r55 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r56 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r57 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaner deleteSafeToDeleteFiles Log file 0x");

        $l12 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r60 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l12);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expungedLabel);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". This operation will be retried at the next checkpoint. State: ");

        $r65 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void traceAndLog(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r55, $r56, $r57, $r67);

     label29:
        goto label14;

     label30:
        exitmonitor l6#69;

     label31:
        goto label35;

     label32:
        $r68 := @caughtexception;

     label33:
        l13 = $r68;

        exitmonitor l6#69;

     label34:
        throw l13;

     label35:
        virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: void releaseExclusiveLock()>();

        goto label39;

     label36:
        $r69 := @caughtexception;

     label37:
        l14 = $r69;

     label38:
        virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: void releaseExclusiveLock()>();

        throw l14;

     label39:
        $r70 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        $r71 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r72 = virtualinvoke $r71.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set getCleanedDatabases(java.util.Collection)>(unprotectedFiles#20);

        virtualinvoke $r70.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void removePerDbMetadata(java.util.Collection,java.util.Set)>(unprotectedFiles#20, $r72);

        l6#229 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: java.util.Iterator iterator()>();

     label40:
        $z14 = interfaceinvoke l6#229.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label47;

        $r73 = interfaceinvoke l6#229.<java.util.Iterator: java.lang.Object next()>();

        fileNum = (java.lang.Long) $r73;

     label41:
        $r74 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        virtualinvoke $r74.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void removePerFileMetadata(java.lang.Long)>(fileNum);

        $r75 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.ExpirationProfile expirationProfile>;

        $l13 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        virtualinvoke $r75.<berkeley.com.sleepycat.je.cleaner.ExpirationProfile: void removeFile(long)>($l13);

     label42:
        $r76 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r77 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r78 = virtualinvoke $r77.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        virtualinvoke $r76.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removeDeletedFile(java.lang.Long,berkeley.com.sleepycat.je.dbi.MemoryBudget)>(fileNum, $r78);

        goto label46;

     label43:
        $r79 := @caughtexception;

     label44:
        l15 = $r79;

     label45:
        $r80 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r81 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r82 = virtualinvoke $r81.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        virtualinvoke $r80.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removeDeletedFile(java.lang.Long,berkeley.com.sleepycat.je.dbi.MemoryBudget)>(fileNum, $r82);

        throw l15;

     label46:
        $r83 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nCleanerDeletions>;

        virtualinvoke $r83.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        goto label40;

     label47:
        $i14 = interfaceinvoke safeToDeleteFiles.<java.util.NavigableSet: int size()>();

        $i15 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: int size()>();

        if $i14 <= $i15 goto label51;

        $r84 = new java.util.ArrayList;

        $i16 = interfaceinvoke safeToDeleteFiles.<java.util.NavigableSet: int size()>();

        $i17 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: int size()>();

        $i18 = $i16 - $i17;

        specialinvoke $r84.<java.util.ArrayList: void <init>(int)>($i18);

        filesNotDeleted = $r84;

        l7 = interfaceinvoke safeToDeleteFiles.<java.util.NavigableSet: java.util.Iterator iterator()>();

     label48:
        $z15 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label50;

        $r85 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        file = (java.lang.Long) $r85;

        $z16 = interfaceinvoke unprotectedFiles#20.<java.util.NavigableSet: boolean contains(java.lang.Object)>(file);

        if $z16 != 0 goto label49;

        interfaceinvoke filesNotDeleted.<java.util.List: boolean add(java.lang.Object)>(file);

     label49:
        goto label48;

     label50:
        $r86 = new java.util.TreeSet;

        specialinvoke $r86.<java.util.TreeSet: void <init>(java.util.Collection)>(filesNotDeleted);

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logProtectedFiles(java.lang.String,java.util.SortedSet,java.lang.StringBuilder)>("they are protected by DbBackup or replication", $r86, haMsg);

     label51:
        return;

        catch java.io.IOException from label17 to label24 with label25;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label12 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label09 to label11 with label36;
        catch java.lang.Throwable from label12 to label35 with label36;
        catch java.lang.Throwable from label37 to label38 with label36;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label44 to label45 with label43;
    }

    private void logProtectedFiles(java.lang.String, java.util.SortedSet, java.lang.StringBuilder)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        java.lang.String reason, msg, $r6, $r13;
        java.util.SortedSet filesNotDeleted, $r9;
        java.lang.StringBuilder haMsg, $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8;
        int $i0;
        boolean $z0, $z1;
        java.util.logging.Logger $r10, $r14;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r11, $r15;
        java.util.logging.Level $r12, $r16;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        reason := @parameter0: java.lang.String;

        filesNotDeleted := @parameter1: java.util.SortedSet;

        haMsg := @parameter2: java.lang.StringBuilder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaner has ");

        $i0 = interfaceinvoke filesNotDeleted.<java.util.SortedSet: int size()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files not deleted because ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reason);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = staticinvoke <berkeley.com.sleepycat.je.utilint.FormatUtil: java.lang.String asString(java.util.SortedSet)>(filesNotDeleted);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(haMsg);

        msg = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.SortedSet lastProtectedFileSet>;

        $z0 = virtualinvoke filesNotDeleted.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label1;

        $r10 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r11 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r12 = <java.util.logging.Level: java.util.logging.Level INFO>;

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r10, $r11, $r12, msg);

        goto label2;

     label1:
        $r13 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.lang.String lastProtectedFileMsg>;

        $z1 = virtualinvoke msg.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label2;

        $r14 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r15 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r16 = <java.util.logging.Level: java.util.logging.Level FINE>;

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r14, $r15, $r16, msg);

     label2:
        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.SortedSet lastProtectedFileSet> = filesNotDeleted;

        this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.lang.String lastProtectedFileMsg> = msg;

        return;
    }

    void processPending()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.dbi.DbTree dbMapTree;
        berkeley.com.sleepycat.je.txn.LockManager lockManager;
        java.util.Map pendingLNs;
        berkeley.com.sleepycat.je.tree.TreeLocation location, $r5;
        java.util.Map$Entry entry;
        long logLsn, $l0, $l3, $l4, $l5;
        berkeley.com.sleepycat.je.cleaner.LNInfo info;
        berkeley.com.sleepycat.je.dbi.DatabaseId dbId, dbId;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db, db;
        byte[] key;
        java.lang.Throwable l13, l14, l15, $r19, $r22, $r24;
        berkeley.com.sleepycat.je.dbi.DatabaseId[] pendingDBs, l5#86;
        int l6, $i1, $i2, l7#90;
        java.util.concurrent.atomic.AtomicBoolean $r0, $r23, $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1, $r2, $r11, $r12, $r18;
        berkeley.com.sleepycat.je.txn.TxnManager $r3;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r4, $r14, $r20, $r21;
        java.util.Set $r6;
        java.util.Iterator l5#22;
        java.lang.Object $r7, $r8, $r10;
        java.lang.Long $r9, $r13;
        berkeley.com.sleepycat.je.utilint.LongStat $r15, $r16, $r17;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicBoolean processPendingReentrancyGuard>;

        $z0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        dbMapTree = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbTree getDbTree()>();

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.txn.TxnManager getTxnManager()>();

        lockManager = virtualinvoke $r3.<berkeley.com.sleepycat.je.txn.TxnManager: berkeley.com.sleepycat.je.txn.LockManager getLockManager()>();

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        pendingLNs = virtualinvoke $r4.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map getPendingLNs()>();

        if pendingLNs == null goto label11;

        $r5 = new berkeley.com.sleepycat.je.tree.TreeLocation;

        specialinvoke $r5.<berkeley.com.sleepycat.je.tree.TreeLocation: void <init>()>();

        location = $r5;

        $r6 = interfaceinvoke pendingLNs.<java.util.Map: java.util.Set entrySet()>();

        l5#22 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke l5#22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r7 = interfaceinvoke l5#22.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Long) $r8;

        logLsn = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $r10 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        info = (berkeley.com.sleepycat.je.cleaner.LNInfo) $r10;

        $r11 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $l0 = virtualinvoke info.<berkeley.com.sleepycat.je.cleaner.LNInfo: long getExpirationTime()>();

        $r12 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $i1 = virtualinvoke $r12.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: int getTtlLnPurgeDelay()>();

        $i2 = 0 - $i1;

        $l3 = (long) $i2;

        $z2 = virtualinvoke $r11.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean expiresWithin(long,long)>($l0, $l3);

        if $z2 == 0 goto label04;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(logLsn);

        $z3 = virtualinvoke lockManager.<berkeley.com.sleepycat.je.txn.LockManager: boolean isLockUncontended(java.lang.Long)>($r13);

        if $z3 == 0 goto label03;

        $r14 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        virtualinvoke $r14.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removePendingLN(long)>(logLsn);

        $r15 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsExpired>;

        virtualinvoke $r15.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        $r16 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsObsolete>;

        virtualinvoke $r16.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        goto label02;

     label03:
        $r17 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nPendingLNsLocked>;

        virtualinvoke $r17.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        goto label02;

     label04:
        dbId = virtualinvoke info.<berkeley.com.sleepycat.je.cleaner.LNInfo: berkeley.com.sleepycat.je.dbi.DatabaseId getDbId()>();

        $l4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long lockTimeout>;

        db = virtualinvoke dbMapTree.<berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDb(berkeley.com.sleepycat.je.dbi.DatabaseId,long)>(dbId, $l4);

     label05:
        key = virtualinvoke info.<berkeley.com.sleepycat.je.cleaner.LNInfo: byte[] getKey()>();

        $r18 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        virtualinvoke $r18.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void daemonEviction(boolean)>(1);

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void processPendingLN(long,berkeley.com.sleepycat.je.dbi.DatabaseImpl,byte[],berkeley.com.sleepycat.je.tree.TreeLocation)>(logLsn, db, key, location);

     label06:
        virtualinvoke dbMapTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        goto label10;

     label07:
        $r19 := @caughtexception;

     label08:
        l13 = $r19;

     label09:
        virtualinvoke dbMapTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        throw l13;

     label10:
        goto label02;

     label11:
        $r20 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        pendingDBs = virtualinvoke $r20.<berkeley.com.sleepycat.je.cleaner.FileSelector: berkeley.com.sleepycat.je.dbi.DatabaseId[] getPendingDBs()>();

        if pendingDBs == null goto label20;

        l5#86 = pendingDBs;

        l6 = lengthof l5#86;

        l7#90 = 0;

     label12:
        if l7#90 >= l6 goto label20;

        dbId = l5#86[l7#90];

        $l5 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: long lockTimeout>;

        db = virtualinvoke dbMapTree.<berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDb(berkeley.com.sleepycat.je.dbi.DatabaseId,long)>(dbId, $l5);

     label13:
        if db == null goto label14;

        $z4 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isDeleteFinished()>();

        if $z4 == 0 goto label15;

     label14:
        $r21 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        virtualinvoke $r21.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removePendingDB(berkeley.com.sleepycat.je.dbi.DatabaseId)>(dbId);

     label15:
        virtualinvoke dbMapTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        goto label19;

     label16:
        $r22 := @caughtexception;

     label17:
        l14 = $r22;

     label18:
        virtualinvoke dbMapTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        throw l14;

     label19:
        l7#90 = l7#90 + 1;

        goto label12;

     label20:
        $r23 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicBoolean processPendingReentrancyGuard>;

        virtualinvoke $r23.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        goto label24;

     label21:
        $r24 := @caughtexception;

     label22:
        l15 = $r24;

     label23:
        $r25 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.concurrent.atomic.AtomicBoolean processPendingReentrancyGuard>;

        virtualinvoke $r25.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw l15;

     label24:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    private void processPendingLN(long, berkeley.com.sleepycat.je.dbi.DatabaseImpl, byte[], berkeley.com.sleepycat.je.tree.TreeLocation)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        long logLsn, $l0;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db;
        byte[] keyFromLog;
        berkeley.com.sleepycat.je.tree.TreeLocation location;
        berkeley.com.sleepycat.je.tree.Tree tree;
        berkeley.com.sleepycat.je.txn.LockResult lockRet;
        boolean parentFound, processedHere#2, lockDenied#4, obsolete#6, completed#8, $z0, completed#24, $z1, completed#67, completed#101, completed#130;
        int index;
        java.lang.RuntimeException e, $r14;
        java.lang.Throwable l16, $r16;
        berkeley.com.sleepycat.je.txn.BasicLocker locker#10;
        berkeley.com.sleepycat.je.tree.BIN bin#12;
        berkeley.com.sleepycat.je.utilint.LongStat $r0, $r1, $r8, $r11;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r2, $r9, $r12, $r13, $r17;
        java.lang.AssertionError $r3;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r4, $r15;
        berkeley.com.sleepycat.je.txn.LockType $r5;
        berkeley.com.sleepycat.je.txn.LockGrantType $r6, $r7;
        berkeley.com.sleepycat.je.CacheMode $r10;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        logLsn := @parameter0: long;

        db := @parameter1: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        keyFromLog := @parameter2: byte[];

        location := @parameter3: berkeley.com.sleepycat.je.tree.TreeLocation;

        processedHere#2 = 1;

        lockDenied#4 = 0;

        obsolete#6 = 0;

        locker#10 = null;

        bin#12 = null;

     label01:
        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nPendingLNsProcessed>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        if db == null goto label02;

        $z0 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isDeleted()>();

        if $z0 == 0 goto label06;

     label02:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void addPendingDB(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsDead>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        obsolete#6 = 1;

     label03:
        goto label04;

     label04:
        goto label05;

     label05:
        $r2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        virtualinvoke $r2.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removePendingLN(long)>(logLsn);

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, -1L, 1, 1, 0);

        return;

     label06:
        tree = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.tree.Tree getTree()>();

        $z1 = <berkeley.com.sleepycat.je.cleaner.Cleaner: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

        if tree != null goto label07;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label07:
        $r4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        locker#10 = staticinvoke <berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.BasicLocker createBasicLocker(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,boolean)>($r4, 0);

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void setPreemptable(boolean)>(0);

        $r5 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType READ>;

        lockRet = virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.LockResult nonBlockingLock(long,berkeley.com.sleepycat.je.txn.LockType,boolean,berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(logLsn, $r5, 0, db);

        $r6 = virtualinvoke lockRet.<berkeley.com.sleepycat.je.txn.LockResult: berkeley.com.sleepycat.je.txn.LockGrantType getLockGrant()>();

        $r7 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType DENIED>;

        if $r6 != $r7 goto label12;

        $r8 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nPendingLNsLocked>;

        virtualinvoke $r8.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        lockDenied#4 = 1;

     label08:
        goto label09;

     label09:
        if locker#10 == null goto label10;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label10:
        goto label11;

     label11:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, -1L, 1, 0, 0);

        return;

     label12:
        $r10 = <berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.CacheMode UPDATE_GENERATION>;

        parentFound = virtualinvoke tree.<berkeley.com.sleepycat.je.tree.Tree: boolean getParentBINForChildLN(berkeley.com.sleepycat.je.tree.TreeLocation,byte[],boolean,boolean,berkeley.com.sleepycat.je.CacheMode)>(location, keyFromLog, 0, 0, $r10);

        bin#12 = location.<berkeley.com.sleepycat.je.tree.TreeLocation: berkeley.com.sleepycat.je.tree.BIN bin>;

        index = location.<berkeley.com.sleepycat.je.tree.TreeLocation: int index>;

        if parentFound != 0 goto label16;

        $r11 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsDead>;

        virtualinvoke $r11.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        obsolete#6 = 1;

     label13:
        if bin#12 == null goto label14;

        virtualinvoke bin#12.<berkeley.com.sleepycat.je.tree.BIN: void releaseLatch()>();

     label14:
        if locker#10 == null goto label15;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label15:
        $r12 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        virtualinvoke $r12.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removePendingLN(long)>(logLsn);

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, -1L, 1, 1, 0);

        return;

     label16:
        processedHere#2 = 0;

        $l0 = virtualinvoke bin#12.<berkeley.com.sleepycat.je.tree.BIN: long getLsn(int)>(index);

        lockDenied#4 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean migratePendingLN(berkeley.com.sleepycat.je.dbi.DatabaseImpl,long,long,berkeley.com.sleepycat.je.tree.BIN,int)>(db, logLsn, $l0, bin#12, index);

     label17:
        if bin#12 == null goto label18;

        virtualinvoke bin#12.<berkeley.com.sleepycat.je.tree.BIN: void releaseLatch()>();

     label18:
        if locker#10 == null goto label19;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label19:
        if lockDenied#4 != 0 goto label20;

        $r13 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        virtualinvoke $r13.<berkeley.com.sleepycat.je.cleaner.FileSelector: void removePendingLN(long)>(logLsn);

     label20:
        goto label29;

     label21:
        $r14 := @caughtexception;

     label22:
        e = $r14;

        virtualinvoke e.<java.lang.RuntimeException: void printStackTrace()>();

        $r15 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void traceAndLogException(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r15, "com.sleepycat.je.cleaner.Cleaner", "processLN", "Exception thrown: ", e);

        throw e;

     label23:
        $r16 := @caughtexception;

        l16 = $r16;

     label24:
        if bin#12 == null goto label25;

        virtualinvoke bin#12.<berkeley.com.sleepycat.je.tree.BIN: void releaseLatch()>();

     label25:
        if locker#10 == null goto label26;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label26:
        goto label27;

     label27:
        if processedHere#2 == 0 goto label28;

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, -1L, 0, obsolete#6, 0);

     label28:
        throw l16;

     label29:
        return;

        catch java.lang.RuntimeException from label01 to label03 with label21;
        catch java.lang.RuntimeException from label06 to label08 with label21;
        catch java.lang.RuntimeException from label12 to label13 with label21;
        catch java.lang.RuntimeException from label16 to label17 with label21;
        catch java.lang.Throwable from label01 to label03 with label23;
        catch java.lang.Throwable from label06 to label08 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label22 to label24 with label23;
    }

    void addPendingDB(berkeley.com.sleepycat.je.dbi.DatabaseImpl)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db;
        berkeley.com.sleepycat.je.dbi.DatabaseId id;
        java.util.logging.Level $r0;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r1;
        java.util.logging.Logger $r2;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        db := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        if db == null goto label1;

        $z0 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isDeleted()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isDeleteFinished()>();

        if $z1 != 0 goto label1;

        id = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.dbi.DatabaseId getId()>();

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $z2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean addPendingDB(berkeley.com.sleepycat.je.dbi.DatabaseId)>(id);

        if $z2 == 0 goto label1;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r3 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CleanAddPendingDB ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r2, $r3, $r0, $r7);

     label1:
        return;
    }

    void logFine(java.lang.String, berkeley.com.sleepycat.je.tree.Node, long, boolean, boolean, boolean)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        java.lang.String action, $r9, $r19;
        berkeley.com.sleepycat.je.tree.Node node;
        long logLsn, $l0;
        boolean completed, obsolete, dirtiedMigrated, $z0, $z1;
        java.lang.StringBuilder sb, $r3, $r11, $r13, $r15;
        java.util.logging.Level $r0, $r2;
        java.util.logging.Logger $r1, $r17;
        berkeley.com.sleepycat.je.tree.IN $r6;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r18;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        action := @parameter0: java.lang.String;

        node := @parameter1: berkeley.com.sleepycat.je.tree.Node;

        logLsn := @parameter2: long;

        completed := @parameter3: boolean;

        obsolete := @parameter4: boolean;

        dirtiedMigrated := @parameter5: boolean;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        sb = $r3;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(action);

        $z1 = node instanceof berkeley.com.sleepycat.je.tree.IN;

        if $z1 == 0 goto label1;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node=");

        $r6 = (berkeley.com.sleepycat.je.tree.IN) node;

        $l0 = virtualinvoke $r6.<berkeley.com.sleepycat.je.tree.IN: long getNodeId()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

     label1:
        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" logLsn=");

        $r9 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(logLsn);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" complete=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(completed);

        $r13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" obsolete=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(obsolete);

        $r15 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dirtiedOrMigrated=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(dirtiedMigrated);

        $r17 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.logging.Logger logger>;

        $r18 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r19 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r17, $r18, $r0, $r19);

     label2:
        return;
    }

    private boolean migratePendingLN(berkeley.com.sleepycat.je.dbi.DatabaseImpl, long, long, berkeley.com.sleepycat.je.tree.BIN, int)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db;
        long logLsn, treeLsn, $l4, $l5, $l7;
        berkeley.com.sleepycat.je.tree.BIN bin;
        int index, $i2, $i3, $i6;
        berkeley.com.sleepycat.je.txn.LockResult lockRet;
        berkeley.com.sleepycat.je.log.LogItem logItem;
        java.lang.Throwable l16, $r23;
        boolean obsolete#2, migrated#4, completed#6, clearTarget#8, l14#18, $z0, l14#40, l15#76, l15#95, $z1, $z2, $z3, $z4, l14#148, $z5, l15#202;
        berkeley.com.sleepycat.je.txn.BasicLocker locker#10;
        berkeley.com.sleepycat.je.tree.LN ln#12;
        byte $b0, $b1;
        berkeley.com.sleepycat.je.utilint.LongStat $r0, $r5, $r6, $r18, $r22;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1, $r7, $r19;
        berkeley.com.sleepycat.je.txn.LockType $r2;
        berkeley.com.sleepycat.je.txn.LockGrantType $r3, $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r13;
        berkeley.com.sleepycat.je.tree.Node $r14;
        berkeley.com.sleepycat.je.CacheMode $r15;
        berkeley.com.sleepycat.je.dbi.DatabaseId $r16, $r17;
        byte[] $r20;
        berkeley.com.sleepycat.je.log.ReplicationContext $r21;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        db := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        logLsn := @parameter1: long;

        treeLsn := @parameter2: long;

        bin := @parameter3: berkeley.com.sleepycat.je.tree.BIN;

        index := @parameter4: int;

        obsolete#2 = 0;

        migrated#4 = 0;

        completed#6 = 0;

        clearTarget#8 = 0;

        locker#10 = null;

        ln#12 = null;

     label01:
        $b0 = treeLsn cmp -1L;

        if $b0 != 0 goto label05;

        completed#6 = 1;

     label02:
        goto label03;

     label03:
        goto label04;

     label04:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, treeLsn, 1, 0, 0);

        return 0;

     label05:
        $z0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEntryKnownDeleted(int)>(index);

        if $z0 == 0 goto label09;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsDead>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        obsolete#2 = 1;

        completed#6 = 1;

     label06:
        goto label07;

     label07:
        goto label08;

     label08:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, treeLsn, 1, 1, 0);

        return 0;

     label09:
        $b1 = logLsn cmp treeLsn;

        if $b1 == 0 goto label17;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        locker#10 = staticinvoke <berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.BasicLocker createBasicLocker(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,boolean)>($r1, 0);

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void setPreemptable(boolean)>(0);

        $r2 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType READ>;

        lockRet = virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.LockResult nonBlockingLock(long,berkeley.com.sleepycat.je.txn.LockType,boolean,berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(treeLsn, $r2, 0, db);

        $r3 = virtualinvoke lockRet.<berkeley.com.sleepycat.je.txn.LockResult: berkeley.com.sleepycat.je.txn.LockGrantType getLockGrant()>();

        $r4 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType DENIED>;

        if $r3 != $r4 goto label13;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsLocked>;

        virtualinvoke $r5.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        completed#6 = 1;

     label10:
        goto label11;

     label11:
        if locker#10 == null goto label12;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label12:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, treeLsn, 1, 0, 0);

        return 1;

     label13:
        $r6 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsDead>;

        virtualinvoke $r6.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        obsolete#2 = 1;

        completed#6 = 1;

     label14:
        goto label15;

     label15:
        if locker#10 == null goto label16;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label16:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", null, treeLsn, 1, 1, 0);

        return 0;

     label17:
        $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(index);

        if $z1 == 0 goto label18;

        $r7 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LN is embedded although its associated logrec (at ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(treeLsn);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have the embedded flag on");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r7, $r12);

        throw $r13;

     label18:
        $r14 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.tree.Node getTarget(int)>(index);

        ln#12 = (berkeley.com.sleepycat.je.tree.LN) $r14;

        if ln#12 != null goto label21;

        $r15 = <berkeley.com.sleepycat.je.CacheMode: berkeley.com.sleepycat.je.CacheMode EVICT_LN>;

        ln#12 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.tree.LN fetchLN(int,berkeley.com.sleepycat.je.CacheMode)>(index, $r15);

        $r16 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.dbi.DatabaseId getId()>();

        $r17 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId ID_DB_ID>;

        $z2 = virtualinvoke $r16.<berkeley.com.sleepycat.je.dbi.DatabaseId: boolean equals(java.lang.Object)>($r17);

        if $z2 != 0 goto label19;

        $z3 = 1;

        goto label20;

     label19:
        $z3 = 0;

     label20:
        clearTarget#8 = $z3;

     label21:
        if ln#12 == null goto label22;

        $z4 = virtualinvoke ln#12.<berkeley.com.sleepycat.je.tree.LN: boolean isDeleted()>();

        if $z4 == 0 goto label26;

     label22:
        virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: void setKnownDeletedAndEvictLN(int)>(index);

        $r18 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsDead>;

        virtualinvoke $r18.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        obsolete#2 = 1;

        completed#6 = 1;

     label23:
        if clearTarget#8 == 0 goto label24;

        virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: void evictLN(int)>(index);

     label24:
        goto label25;

     label25:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", ln#12, treeLsn, 1, 1, 0);

        return 0;

     label26:
        $r19 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r20 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: byte[] getKey(int)>(index);

        $i2 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getExpiration(int)>(index);

        $z5 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isExpirationInHours()>();

        $i3 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(index);

        $r21 = staticinvoke <berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.log.ReplicationContext getMigrationRepContext(berkeley.com.sleepycat.je.tree.LN)>(ln#12);

        logItem = virtualinvoke ln#12.<berkeley.com.sleepycat.je.tree.LN: berkeley.com.sleepycat.je.log.LogItem log(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.WriteLockInfo,boolean,byte[],int,boolean,boolean,long,int,boolean,boolean,berkeley.com.sleepycat.je.log.ReplicationContext)>($r19, db, null, null, 0, $r20, $i2, $z5, 0, treeLsn, $i3, 0, 1, $r21);

        $l4 = logItem.<berkeley.com.sleepycat.je.log.LogItem: long lsn>;

        $l5 = virtualinvoke ln#12.<berkeley.com.sleepycat.je.tree.LN: long getVLSNSequence()>();

        $i6 = logItem.<berkeley.com.sleepycat.je.log.LogItem: int size>;

        virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: void updateEntry(int,long,long,int)>(index, $l4, $l5, $i6);

        $r22 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.utilint.LongStat nLNsMigrated>;

        virtualinvoke $r22.<berkeley.com.sleepycat.je.utilint.LongStat: void increment()>();

        $l7 = logItem.<berkeley.com.sleepycat.je.log.LogItem: long lsn>;

        staticinvoke <berkeley.com.sleepycat.je.dbi.CursorImpl: void lockAfterLsnChange(berkeley.com.sleepycat.je.dbi.DatabaseImpl,long,long,berkeley.com.sleepycat.je.txn.Locker)>(db, treeLsn, $l7, null);

        migrated#4 = 1;

        completed#6 = 1;

     label27:
        if clearTarget#8 == 0 goto label28;

        virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: void evictLN(int)>(index);

     label28:
        goto label29;

     label29:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", ln#12, treeLsn, 1, 0, 1);

        return 0;

     label30:
        $r23 := @caughtexception;

     label31:
        l16 = $r23;

     label32:
        if clearTarget#8 == 0 goto label33;

        virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: void evictLN(int)>(index);

     label33:
        if locker#10 == null goto label34;

        virtualinvoke locker#10.<berkeley.com.sleepycat.je.txn.BasicLocker: void operationEnd()>();

     label34:
        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.Cleaner: void logFine(java.lang.String,berkeley.com.sleepycat.je.tree.Node,long,boolean,boolean,boolean)>("CleanPendingLN:", ln#12, treeLsn, completed#6, obsolete#2, migrated#4);

        throw l16;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label13 to label14 with label30;
        catch java.lang.Throwable from label17 to label23 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    static berkeley.com.sleepycat.je.log.ReplicationContext getMigrationRepContext(berkeley.com.sleepycat.je.tree.LN)
    {
        berkeley.com.sleepycat.je.tree.LN ln;
        long vlsnSeq;
        byte $b0;
        berkeley.com.sleepycat.je.log.ReplicationContext $r0, $r1;
        berkeley.com.sleepycat.je.utilint.VLSN $r2;

        ln := @parameter0: berkeley.com.sleepycat.je.tree.LN;

        vlsnSeq = virtualinvoke ln.<berkeley.com.sleepycat.je.tree.LN: long getVLSNSequence()>();

        $b0 = vlsnSeq cmp 0L;

        if $b0 > 0 goto label1;

        $r0 = <berkeley.com.sleepycat.je.log.ReplicationContext: berkeley.com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        return $r0;

     label1:
        $r1 = new berkeley.com.sleepycat.je.log.ReplicationContext;

        $r2 = new berkeley.com.sleepycat.je.utilint.VLSN;

        specialinvoke $r2.<berkeley.com.sleepycat.je.utilint.VLSN: void <init>(long)>(vlsnSeq);

        specialinvoke $r1.<berkeley.com.sleepycat.je.log.ReplicationContext: void <init>(berkeley.com.sleepycat.je.utilint.VLSN,boolean)>($r2, 0);

        return $r1;
    }

    public void close()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r0;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker $r1;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r2;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r3;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r4;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void close()>();

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.cleaner.UtilizationTracker: void close()>();

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        $r3 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r4 = virtualinvoke $r3.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        virtualinvoke $r2.<berkeley.com.sleepycat.je.cleaner.FileSelector: void close(berkeley.com.sleepycat.je.dbi.MemoryBudget)>($r4);

        return;
    }

    public boolean getFetchObsoleteSize(berkeley.com.sleepycat.je.dbi.DatabaseImpl)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db;
        boolean $z0, $z1, $z2;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        db := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean fetchObsoleteSize>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isLNImmediatelyObsolete()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public berkeley.com.sleepycat.je.cleaner.FileProcessor createProcessor()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        berkeley.com.sleepycat.je.cleaner.FileProcessor $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile $r2;
        berkeley.com.sleepycat.je.cleaner.UtilizationCalculator $r3;
        berkeley.com.sleepycat.je.cleaner.FileSelector $r4;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $r0 = new berkeley.com.sleepycat.je.cleaner.FileProcessor;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationProfile profile>;

        $r3 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.UtilizationCalculator calculator>;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: berkeley.com.sleepycat.je.cleaner.FileSelector fileSelector>;

        specialinvoke $r0.<berkeley.com.sleepycat.je.cleaner.FileProcessor: void <init>(java.lang.String,boolean,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.cleaner.Cleaner,berkeley.com.sleepycat.je.cleaner.UtilizationProfile,berkeley.com.sleepycat.je.cleaner.UtilizationCalculator,berkeley.com.sleepycat.je.cleaner.FileSelector)>("", 0, $r1, this, $r2, $r3, $r4);

        return $r0;
    }

    public void removeProtectedFileRange(long)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        long firstProtectedFile;
        java.util.List l3, $r0, $r1;
        java.lang.Throwable l4, $r10;
        java.lang.Long $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r9;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        firstProtectedFile := @parameter0: long;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $z0 = interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File range starting with 0x");

        $r5 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(0L);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently protected");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r8);

        throw $r9;

     label2:
        exitmonitor l3;

     label3:
        goto label7;

     label4:
        $r10 := @caughtexception;

     label5:
        l4 = $r10;

        exitmonitor l3;

     label6:
        throw l4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addProtectedFileRange(long)
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        long firstProtectedFile;
        java.util.List l3, $r0, $r1;
        java.lang.Throwable l4, $r3;
        java.lang.Long $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        firstProtectedFile := @parameter0: long;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: java.util.List protectedFileRanges>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        exitmonitor l3;

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        l4 = $r3;

        exitmonitor l3;

     label5:
        throw l4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isRMWFixEnabled()
    {
        berkeley.com.sleepycat.je.cleaner.Cleaner this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.cleaner.Cleaner;

        $z0 = this.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean rmwFixEnabled>;

        return $z0;
    }


