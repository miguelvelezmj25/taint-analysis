    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        byte[] $r1, $r2;

        $r0 = class "berkeley/com/sleepycat/persist/impl/PersistCatalog";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] getIntBytes(int)>(-1);

        <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] DATA_KEY> = $r1;

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] getIntBytes(int)>(-2);

        <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] BETA_MUTATIONS_KEY> = $r2;

        return;
    }

    private static byte[] getIntBytes(int)
    {
        int val, $i0, $i1;
        berkeley.com.sleepycat.je.DatabaseEntry entry, $r0;
        boolean $z0;
        byte[] $r1, $r3;
        java.lang.AssertionError $r2;

        val := @parameter0: int;

        $r0 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r0.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        entry = $r0;

        staticinvoke <berkeley.com.sleepycat.bind.tuple.IntegerBinding: void intToEntry(int,berkeley.com.sleepycat.je.DatabaseEntry)>(val, entry);

        $z0 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 4 goto label1;

        $r1 = virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i1 = lengthof $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 == 4 goto label2;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r3 = virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        return $r3;
    }

    public void <init>(berkeley.com.sleepycat.je.Environment, java.lang.String, java.lang.String, berkeley.com.sleepycat.je.DatabaseConfig, berkeley.com.sleepycat.persist.model.EntityModel, berkeley.com.sleepycat.persist.evolve.Mutations, boolean, berkeley.com.sleepycat.persist.impl.Store) throws berkeley.com.sleepycat.persist.StoreExistsException, berkeley.com.sleepycat.persist.StoreNotFoundException, berkeley.com.sleepycat.persist.evolve.IncompatibleClassException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.je.Environment env;
        java.lang.String storePrefix, dbName, dbNameMsg, $r2, $r3, $r10, $r16;
        berkeley.com.sleepycat.je.DatabaseConfig dbConfig;
        berkeley.com.sleepycat.persist.model.EntityModel modelParam;
        berkeley.com.sleepycat.persist.evolve.Mutations mutationsParam;
        boolean rawAccess, $z0, $z1, $z2, $z3, success#61, success#67;
        berkeley.com.sleepycat.persist.impl.Store store;
        java.lang.String[] fileAndDbNames, $r0;
        java.lang.Throwable l11, $r17;
        berkeley.com.sleepycat.persist.DatabaseNamer $r1;
        berkeley.com.sleepycat.je.Database $r4, $r5;
        berkeley.com.sleepycat.persist.StoreExistsException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r15;
        java.lang.AssertionError $r11;
        berkeley.com.sleepycat.persist.StoreNotFoundException $r12;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        env := @parameter0: berkeley.com.sleepycat.je.Environment;

        storePrefix := @parameter1: java.lang.String;

        dbName := @parameter2: java.lang.String;

        dbConfig := @parameter3: berkeley.com.sleepycat.je.DatabaseConfig;

        modelParam := @parameter4: berkeley.com.sleepycat.persist.model.EntityModel;

        mutationsParam := @parameter5: berkeley.com.sleepycat.persist.evolve.Mutations;

        rawAccess := @parameter6: boolean;

        store := @parameter7: berkeley.com.sleepycat.persist.impl.Store;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env> = env;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean rawAccess> = rawAccess;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store> = store;

        $z0 = virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getTransactional()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean transactional> = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(store);

        if store == null goto label01;

        $r0 = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>(dbName);

        goto label02;

     label01:
        $r1 = <berkeley.com.sleepycat.persist.DatabaseNamer: berkeley.com.sleepycat.persist.DatabaseNamer DEFAULT>;

        $r0 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String,berkeley.com.sleepycat.persist.DatabaseNamer)>(dbName, $r1);

     label02:
        fileAndDbNames = $r0;

        $r2 = fileAndDbNames[0];

        $r3 = fileAndDbNames[1];

        $r4 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Database openDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig)>(env, null, $r2, $r3, dbConfig);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db> = $r4;

        $r5 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if $r5 != null goto label05;

        dbNameMsg = virtualinvoke store.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String getDbNameMessage(java.lang.String[])>(fileAndDbNames);

        $z1 = virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getExclusiveCreate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label03;

        $r6 = new berkeley.com.sleepycat.persist.StoreExistsException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Catalog DB already exists and ExclusiveCreate=true, ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbNameMsg);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<berkeley.com.sleepycat.persist.StoreExistsException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label03:
        $z2 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getAllowCreate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label04;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label04:
        $r12 = new berkeley.com.sleepycat.persist.StoreNotFoundException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Catalog DB does not exist and AllowCreate=false, ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbNameMsg);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<berkeley.com.sleepycat.persist.StoreNotFoundException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label05:
        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount> = 1;

        success#61 = 0;

     label06:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void initAndRetry(java.lang.String,berkeley.com.sleepycat.persist.model.EntityModel,berkeley.com.sleepycat.persist.evolve.Mutations)>(storePrefix, modelParam, mutationsParam);

        success#67 = 1;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#67);

        if success#67 != 0 goto label12;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean close()>();

        goto label12;

     label08:
        $r17 := @caughtexception;

     label09:
        l11 = $r17;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#61);

        if success#61 != 0 goto label11;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean close()>();

     label11:
        throw l11;

     label12:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void initAndRetry(java.lang.String, berkeley.com.sleepycat.persist.model.EntityModel, berkeley.com.sleepycat.persist.evolve.Mutations) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String storePrefix;
        berkeley.com.sleepycat.persist.model.EntityModel modelParam;
        berkeley.com.sleepycat.persist.evolve.Mutations mutationsParam;
        berkeley.com.sleepycat.je.LockConflictException e, $r5;
        java.lang.Throwable l8, $r6;
        int i#2;
        berkeley.com.sleepycat.je.Transaction txn#4, $r1;
        boolean $z0, success#18, success#23, $z1, $z2, $z3;
        berkeley.com.sleepycat.je.Environment $r0, $r2;
        berkeley.com.sleepycat.persist.impl.Store $r3;
        berkeley.com.sleepycat.je.TransactionConfig $r4;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        storePrefix := @parameter0: java.lang.String;

        modelParam := @parameter1: berkeley.com.sleepycat.persist.model.EntityModel;

        mutationsParam := @parameter2: berkeley.com.sleepycat.persist.evolve.Mutations;

        i#2 = 0;

     label01:
        txn#4 = null;

        $z0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean transactional>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env>;

        $r1 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Transaction getThreadTransaction(berkeley.com.sleepycat.je.Environment)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label02;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env>;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        $r4 = virtualinvoke $r3.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig getAutoCommitTxnConfig()>();

        txn#4 = virtualinvoke $r2.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.Transaction beginTransaction(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.TransactionConfig)>(null, $r4);

     label02:
        success#18 = 0;

     label03:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void init(berkeley.com.sleepycat.je.Transaction,java.lang.String,berkeley.com.sleepycat.persist.model.EntityModel,berkeley.com.sleepycat.persist.evolve.Mutations)>(txn#4, storePrefix, modelParam, mutationsParam);

        success#23 = 1;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(txn#4);

        if txn#4 == null goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#23);

        if success#23 == 0 goto label05;

        $z1 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label05;

        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label06;

     label05:
        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label06:
        return;

     label07:
        $r5 := @caughtexception;

     label08:
        e = $r5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        if i#2 < 10 goto label09;

        throw e;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(txn#4);

        if txn#4 == null goto label16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#18);

        if success#18 == 0 goto label10;

        $z2 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label10;

        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label16;

     label10:
        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void abort()>();

        goto label16;

     label11:
        $r6 := @caughtexception;

     label12:
        l8 = $r6;

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(txn#4);

        if txn#4 == null goto label15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#18);

        if success#18 == 0 goto label14;

        $z3 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label14;

        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label15;

     label14:
        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label15:
        throw l8;

     label16:
        i#2 = i#2 + 1;

        goto label01;

        catch berkeley.com.sleepycat.je.LockConflictException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean close() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        int $i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r0;
        berkeley.com.sleepycat.je.Database $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $i0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        $r0 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>("Catalog is not open");

        throw $r0;

     label1:
        $i1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount>;

        $i2 = $i1 - 1;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount> = $i2;

        $i3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label2;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        virtualinvoke $r2.<berkeley.com.sleepycat.je.Database: void close()>();

        return 1;

     label2:
        return 0;
    }

    private void init(berkeley.com.sleepycat.je.Transaction, java.lang.String, berkeley.com.sleepycat.persist.model.EntityModel, berkeley.com.sleepycat.persist.evolve.Mutations) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.je.Transaction txn;
        java.lang.String storePrefix, name, oldName, newName, className, className, errors, $r25, $r52, $r63, $r84, $r94;
        berkeley.com.sleepycat.persist.model.EntityModel modelParam, $r43, $r46, $r48, $r55, $r57, $r81;
        berkeley.com.sleepycat.persist.evolve.Mutations mutationsParam, $r2, $r3, $r4, $r6, $r62, $r69, $r102;
        boolean betaVersion, disallowClassChanges, formatsChanged, $z0, needWrite#20, forceEvolution#23, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z19, $z20, $z21, $z22, needWrite#376, $z23, $z24, $z25, $z26;
        java.lang.ClassLoader envClassLoader;
        java.util.HashMap formatMap, newFormats, $r22, $r29, $r31, $r59, $r65;
        berkeley.com.sleepycat.persist.impl.Format simpleFormat, oldFormat, oldFormat, newFormat, format, format#87, format#103, format#119, format#146, $r37, format#190, $r82;
        java.util.ArrayList knownClasses, $r54;
        berkeley.com.sleepycat.persist.evolve.Renamer renamer;
        berkeley.com.sleepycat.je.rep.ReplicaWriteException e, $r104;
        java.lang.Throwable l16, $r105;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data $r0, $r1, $r5, $r8, $r99, $r101, $r103;
        int $i0, $i1, $i2, $i3, i#215, $i4, $i5, $i6;
        berkeley.com.sleepycat.je.Environment $r7;
        java.util.List $r9, $r10, $r11, $r13, $r16, $r18, $r19, $r20, $r23, $r27, $r30, $r32, $r33, $r44, $r49, $r60, $r70, $r79, $r100;
        berkeley.com.sleepycat.persist.impl.NonPersistentFormat $r12, format#49, $r15, format#61;
        java.util.Iterator l10#81, l11#97, l11#113, l10#140, l10#184, l11#248, l11#274, l12#287, l12#306, l13#336, l13#347;
        java.lang.Object $r21, $r24, $r28, $r34, $r45, $r50, $r61, $r64, $r66, $r71, $r78, $r80;
        java.util.Map $r35, $r38, $r51, $r83;
        berkeley.com.sleepycat.persist.impl.StoredModel $r40, $r41, $r42;
        berkeley.com.sleepycat.persist.model.AnnotationModel $r47;
        java.util.Set $r56, $r58;
        berkeley.com.sleepycat.persist.impl.Evolver $r68, $r72, $r73, $r74, $r75, $r86, $r92, $r97;
        berkeley.com.sleepycat.persist.evolve.IncompatibleClassException $r76;
        java.util.Collection $r77;
        java.lang.IllegalStateException $r87;
        java.lang.StringBuilder $r88, $r89, $r90, $r91, $r93;
        berkeley.com.sleepycat.je.Database $r95;
        berkeley.com.sleepycat.je.DatabaseConfig $r96;
        berkeley.com.sleepycat.persist.impl.Store $r98;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        storePrefix := @parameter1: java.lang.String;

        modelParam := @parameter2: berkeley.com.sleepycat.persist.model.EntityModel;

        mutationsParam := @parameter3: berkeley.com.sleepycat.persist.evolve.Mutations;

     label01:
        $r0 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data readData(berkeley.com.sleepycat.je.Transaction)>(txn);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData> = $r0;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData>;

        $r2 = $r1.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = $r2;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 != null goto label02;

        $r4 = new berkeley.com.sleepycat.persist.evolve.Mutations;

        specialinvoke $r4.<berkeley.com.sleepycat.persist.evolve.Mutations: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = $r4;

     label02:
        $r5 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData>;

        $i0 = $r5.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: int version>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != -1 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        betaVersion = $z0;

        needWrite#20 = betaVersion;

        disallowClassChanges = betaVersion;

        forceEvolution#23 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mutationsParam);

        if mutationsParam == null goto label05;

        $r6 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        $z1 = virtualinvoke $r6.<berkeley.com.sleepycat.persist.evolve.Mutations: boolean equals(java.lang.Object)>(mutationsParam);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label05;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = mutationsParam;

        needWrite#20 = 1;

        forceEvolution#23 = 1;

     label05:
        $r7 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env>;

        envClassLoader = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.ClassLoader getClassLoader(berkeley.com.sleepycat.je.Environment)>($r7);

        $r8 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData>;

        $r9 = $r8.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList> = $r9;

        $r10 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 != null goto label06;

        $r11 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: java.util.List getAllSimpleFormats(java.lang.ClassLoader)>(envClassLoader);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList> = $r11;

        $r12 = new berkeley.com.sleepycat.persist.impl.NonPersistentFormat;

        specialinvoke $r12.<berkeley.com.sleepycat.persist.impl.NonPersistentFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, class "java/lang/Object");

        format#49 = $r12;

        virtualinvoke format#49.<berkeley.com.sleepycat.persist.impl.Format: void setId(int)>(1);

        $r13 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        interfaceinvoke $r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, format#49);

        $r15 = new berkeley.com.sleepycat.persist.impl.NonPersistentFormat;

        specialinvoke $r15.<berkeley.com.sleepycat.persist.impl.NonPersistentFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, class "java/lang/Number");

        format#61 = $r15;

        virtualinvoke format#61.<berkeley.com.sleepycat.persist.impl.Format: void setId(int)>(22);

        $r16 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        interfaceinvoke $r16.<java.util.List: java.lang.Object set(int,java.lang.Object)>(22, format#61);

        goto label08;

     label06:
        $r18 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $z2 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: boolean addMissingSimpleFormats(java.lang.ClassLoader,java.util.List)>(envClassLoader, $r18);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label07;

        needWrite#20 = 1;

     label07:
        $r19 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $i1 = interfaceinvoke $r19.<java.util.List: int size()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats> = $i1;

     label08:
        $r20 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l10#81 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke l10#81.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label11;

        $r21 = interfaceinvoke l10#81.<java.util.Iterator: java.lang.Object next()>();

        format#87 = (berkeley.com.sleepycat.persist.impl.Format) $r21;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#87);

        if format#87 == null goto label10;

        virtualinvoke format#87.<berkeley.com.sleepycat.persist.impl.Format: void initCatalog(berkeley.com.sleepycat.persist.impl.Catalog)>(this);

     label10:
        goto label09;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(betaVersion);

        if betaVersion == 0 goto label17;

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        formatMap = $r22;

        $r23 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l11#97 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke l11#97.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label14;

        $r24 = interfaceinvoke l11#97.<java.util.Iterator: java.lang.Object next()>();

        format#103 = (berkeley.com.sleepycat.persist.impl.Format) $r24;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#103);

        if format#103 == null goto label13;

        $r25 = virtualinvoke format#103.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke formatMap.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, format#103);

     label13:
        goto label12;

     label14:
        $r27 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l11#113 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z5 = interfaceinvoke l11#113.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label17;

        $r28 = interfaceinvoke l11#113.<java.util.Iterator: java.lang.Object next()>();

        format#119 = (berkeley.com.sleepycat.persist.impl.Format) $r28;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#119);

        if format#119 == null goto label16;

        virtualinvoke format#119.<berkeley.com.sleepycat.persist.impl.Format: void migrateFromBeta(java.util.Map)>(formatMap);

     label16:
        goto label15;

     label17:
        $r29 = new java.util.HashMap;

        $r30 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $i2 = interfaceinvoke $r30.<java.util.List: int size()>();

        specialinvoke $r29.<java.util.HashMap: void <init>(int)>($i2);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap> = $r29;

        $r31 = new java.util.HashMap;

        $r32 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $i3 = interfaceinvoke $r32.<java.util.List: int size()>();

        specialinvoke $r31.<java.util.HashMap: void <init>(int)>($i3);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map latestFormatMap> = $r31;

        $z6 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean rawAccess>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label28;

        $r33 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l10#140 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z7 = interfaceinvoke l10#140.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label21;

        $r34 = interfaceinvoke l10#140.<java.util.Iterator: java.lang.Object next()>();

        format#146 = (berkeley.com.sleepycat.persist.impl.Format) $r34;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#146);

        if format#146 == null goto label20;

        name = virtualinvoke format#146.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $z8 = virtualinvoke format#146.<berkeley.com.sleepycat.persist.impl.Format: boolean isCurrentVersion()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label19;

        $r35 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, format#146);

     label19:
        $r37 = virtualinvoke format#146.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#146);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r37);

        if format#146 != $r37 goto label20;

        $r38 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map latestFormatMap>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, format#146);

     label20:
        goto label18;

     label21:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(modelParam);

        if modelParam == null goto label22;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model> = modelParam;

        $r40 = (berkeley.com.sleepycat.persist.impl.StoredModel) modelParam;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.StoredModel storedModel> = $r40;

        goto label23;

     label22:
        $r41 = new berkeley.com.sleepycat.persist.impl.StoredModel;

        specialinvoke $r41.<berkeley.com.sleepycat.persist.impl.StoredModel: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog)>(this);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.StoredModel storedModel> = $r41;

        $r42 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.StoredModel storedModel>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model> = $r42;

     label23:
        $r43 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        staticinvoke <berkeley.com.sleepycat.persist.model.ModelInternal: void setClassLoader(berkeley.com.sleepycat.persist.model.EntityModel,java.lang.ClassLoader)>($r43, envClassLoader);

        $r44 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l10#184 = interfaceinvoke $r44.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z9 = interfaceinvoke l10#184.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label26;

        $r45 = interfaceinvoke l10#184.<java.util.Iterator: java.lang.Object next()>();

        format#190 = (berkeley.com.sleepycat.persist.impl.Format) $r45;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#190);

        if format#190 == null goto label25;

        $r46 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        virtualinvoke format#190.<berkeley.com.sleepycat.persist.impl.Format: void initializeIfNeeded(berkeley.com.sleepycat.persist.impl.Catalog,berkeley.com.sleepycat.persist.model.EntityModel)>(this, $r46);

     label25:
        goto label24;

     label26:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void initModelAndMutations()>();

     label27:
        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap> = null;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData> = null;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver> = null;

        return;

     label28:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(modelParam);

        if modelParam == null goto label29;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model> = modelParam;

        goto label30;

     label29:
        $r47 = new berkeley.com.sleepycat.persist.model.AnnotationModel;

        specialinvoke $r47.<berkeley.com.sleepycat.persist.model.AnnotationModel: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model> = $r47;

     label30:
        $r48 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        staticinvoke <berkeley.com.sleepycat.persist.model.ModelInternal: void setClassLoader(berkeley.com.sleepycat.persist.model.EntityModel,java.lang.ClassLoader)>($r48, envClassLoader);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.StoredModel storedModel> = null;

        i#215 = 0;

     label31:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#215);

        if i#215 > 30 goto label33;

        $r49 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $r50 = interfaceinvoke $r49.<java.util.List: java.lang.Object get(int)>(i#215);

        simpleFormat = (berkeley.com.sleepycat.persist.impl.Format) $r50;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(simpleFormat);

        if simpleFormat == null goto label32;

        $r51 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        $r52 = virtualinvoke simpleFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, simpleFormat);

     label32:
        i#215 = i#215 + 1;

        goto label31;

     label33:
        $r54 = new java.util.ArrayList;

        $r55 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r56 = virtualinvoke $r55.<berkeley.com.sleepycat.persist.model.EntityModel: java.util.Set getKnownClasses()>();

        specialinvoke $r54.<java.util.ArrayList: void <init>(java.util.Collection)>($r56);

        knownClasses = $r54;

        $r57 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r58 = virtualinvoke $r57.<berkeley.com.sleepycat.persist.model.EntityModel: java.util.Set getKnownSpecialClasses()>();

        interfaceinvoke knownClasses.<java.util.List: boolean addAll(java.util.Collection)>($r58);

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void addPredefinedProxies(java.util.List)>(knownClasses);

        $r59 = new java.util.HashMap;

        specialinvoke $r59.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap> = $r59;

        $r60 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l11#248 = interfaceinvoke $r60.<java.util.List: java.util.Iterator iterator()>();

     label34:
        $z11 = interfaceinvoke l11#248.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label38;

        $r61 = interfaceinvoke l11#248.<java.util.Iterator: java.lang.Object next()>();

        oldFormat = (berkeley.com.sleepycat.persist.impl.Format) $r61;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(oldFormat);

        if oldFormat == null goto label34;

        $z12 = staticinvoke <berkeley.com.sleepycat.persist.impl.Format: boolean isPredefined(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label35;

        goto label34;

     label35:
        oldName = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r62 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        $i4 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: int getVersion()>();

        renamer = virtualinvoke $r62.<berkeley.com.sleepycat.persist.evolve.Mutations: berkeley.com.sleepycat.persist.evolve.Renamer getRenamer(java.lang.String,int,java.lang.String)>(oldName, $i4, null);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(renamer);

        if renamer == null goto label36;

        $r63 = virtualinvoke renamer.<berkeley.com.sleepycat.persist.evolve.Renamer: java.lang.String getNewName()>();

        goto label37;

     label36:
        $r63 = oldName;

     label37:
        newName = $r63;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void addProxiedClass(java.lang.String,boolean)>(newName, 0);

        goto label34;

     label38:
        l11#274 = interfaceinvoke knownClasses.<java.util.List: java.util.Iterator iterator()>();

     label39:
        $z13 = interfaceinvoke l11#274.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 == 0 goto label40;

        $r64 = interfaceinvoke l11#274.<java.util.Iterator: java.lang.Object next()>();

        className = (java.lang.String) $r64;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void addProxiedClass(java.lang.String,boolean)>(className, 1);

        goto label39;

     label40:
        $r65 = new java.util.HashMap;

        specialinvoke $r65.<java.util.HashMap: void <init>()>();

        newFormats = $r65;

        l12#287 = interfaceinvoke knownClasses.<java.util.List: java.util.Iterator iterator()>();

     label41:
        $z14 = interfaceinvoke l12#287.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z14);

        if $z14 == 0 goto label42;

        $r66 = interfaceinvoke l12#287.<java.util.Iterator: java.lang.Object next()>();

        className = (java.lang.String) $r66;

        virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format createFormat(java.lang.String,java.util.Map)>(className, newFormats);

        goto label41;

     label42:
        $r68 = new berkeley.com.sleepycat.persist.impl.Evolver;

        $r69 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        specialinvoke $r68.<berkeley.com.sleepycat.persist.impl.Evolver: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog,java.lang.String,berkeley.com.sleepycat.persist.evolve.Mutations,java.util.Map,boolean,boolean)>(this, storePrefix, $r69, newFormats, forceEvolution#23, disallowClassChanges);

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver> = $r68;

        $r70 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l12#306 = interfaceinvoke $r70.<java.util.List: java.util.Iterator iterator()>();

     label43:
        $z15 = interfaceinvoke l12#306.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        if $z15 == 0 goto label47;

        $r71 = interfaceinvoke l12#306.<java.util.Iterator: java.lang.Object next()>();

        oldFormat = (berkeley.com.sleepycat.persist.impl.Format) $r71;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(oldFormat);

        if oldFormat == null goto label43;

        $z16 = staticinvoke <berkeley.com.sleepycat.persist.impl.Format: boolean isPredefined(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z16);

        if $z16 == 0 goto label44;

        goto label43;

     label44:
        $z17 = virtualinvoke oldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z17);

        if $z17 == 0 goto label45;

        $r72 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        virtualinvoke $r72.<berkeley.com.sleepycat.persist.impl.Evolver: boolean evolveFormat(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

        goto label46;

     label45:
        $r73 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        virtualinvoke $r73.<berkeley.com.sleepycat.persist.impl.Evolver: void addNonEntityFormat(berkeley.com.sleepycat.persist.impl.Format)>(oldFormat);

     label46:
        goto label43;

     label47:
        $r74 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        virtualinvoke $r74.<berkeley.com.sleepycat.persist.impl.Evolver: void finishEvolution()>();

        $r75 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        errors = virtualinvoke $r75.<berkeley.com.sleepycat.persist.impl.Evolver: java.lang.String getErrors()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(errors);

        if errors == null goto label48;

        $r76 = new berkeley.com.sleepycat.persist.evolve.IncompatibleClassException;

        specialinvoke $r76.<berkeley.com.sleepycat.persist.evolve.IncompatibleClassException: void <init>(java.lang.String)>(errors);

        throw $r76;

     label48:
        $r77 = interfaceinvoke newFormats.<java.util.Map: java.util.Collection values()>();

        l13#336 = interfaceinvoke $r77.<java.util.Collection: java.util.Iterator iterator()>();

     label49:
        $z19 = interfaceinvoke l13#336.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z19);

        if $z19 == 0 goto label50;

        $r78 = interfaceinvoke l13#336.<java.util.Iterator: java.lang.Object next()>();

        newFormat = (berkeley.com.sleepycat.persist.impl.Format) $r78;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void addFormat(berkeley.com.sleepycat.persist.impl.Format)>(newFormat);

        goto label49;

     label50:
        $r79 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l13#347 = interfaceinvoke $r79.<java.util.List: java.util.Iterator iterator()>();

     label51:
        $z20 = interfaceinvoke l13#347.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20);

        if $z20 == 0 goto label53;

        $r80 = interfaceinvoke l13#347.<java.util.Iterator: java.lang.Object next()>();

        format = (berkeley.com.sleepycat.persist.impl.Format) $r80;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format);

        if format == null goto label52;

        $r81 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: void initializeIfNeeded(berkeley.com.sleepycat.persist.impl.Catalog,berkeley.com.sleepycat.persist.model.EntityModel)>(this, $r81);

        $r82 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getLatestVersion()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r82);

        if format != $r82 goto label52;

        $r83 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map latestFormatMap>;

        $r84 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke $r83.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r84, format);

     label52:
        goto label51;

     label53:
        $i5 = interfaceinvoke newFormats.<java.util.Map: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 > 0 goto label54;

        $r86 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        $z21 = virtualinvoke $r86.<berkeley.com.sleepycat.persist.impl.Evolver: boolean areFormatsChanged()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z21);

        if $z21 == 0 goto label55;

     label54:
        $z22 = 1;

        goto label56;

     label55:
        $z22 = 0;

     label56:
        formatsChanged = $z22;

        needWrite#376 = needWrite#20 | formatsChanged;

        $z23 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean expectNoClassChanges>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z23);

        if $z23 == 0 goto label57;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(formatsChanged);

        if formatsChanged == 0 goto label57;

        $r87 = new java.lang.IllegalStateException;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected changes  newFormats.size=");

        $i6 = interfaceinvoke newFormats.<java.util.Map: int size()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" areFormatsChanged=");

        $r92 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        $z24 = virtualinvoke $r92.<berkeley.com.sleepycat.persist.impl.Evolver: boolean areFormatsChanged()>();

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z24);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r87.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r94);

        throw $r87;

     label57:
        $r95 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        $r96 = virtualinvoke $r95.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.DatabaseConfig getConfig()>();

        $z25 = virtualinvoke $r96.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReadOnly()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean readOnly> = $z25;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(needWrite#376);

        if needWrite#376 == 0 goto label61;

        $z26 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean readOnly>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26);

        if $z26 != 0 goto label61;

     label58:
        $r97 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver>;

        $r98 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        virtualinvoke $r97.<berkeley.com.sleepycat.persist.impl.Evolver: void renameAndRemoveDatabases(berkeley.com.sleepycat.persist.impl.Store,berkeley.com.sleepycat.je.Transaction)>($r98, txn);

        $r99 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData>;

        $r100 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $r99.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList> = $r100;

        $r101 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData>;

        $r102 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        $r101.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = $r102;

        $r103 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData>;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void writeData(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.persist.impl.PersistCatalog$Data)>(txn, $r103);

     label59:
        goto label61;

     label60:
        $r104 := @caughtexception;

        e = $r104;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean readOnly> = 1;

     label61:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void initModelAndMutations()>();

     label62:
        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap> = null;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData> = null;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver> = null;

        goto label66;

     label63:
        $r105 := @caughtexception;

     label64:
        l16 = $r105;

     label65:
        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap> = null;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data initData> = null;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Evolver initEvolver> = null;

        throw l16;

     label66:
        return;

        catch berkeley.com.sleepycat.je.rep.ReplicaWriteException from label58 to label59 with label60;
        catch java.lang.Throwable from label01 to label27 with label63;
        catch java.lang.Throwable from label28 to label62 with label63;
        catch java.lang.Throwable from label64 to label65 with label63;
    }

    public boolean isReadOnly()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $z0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean readOnly>;

        return $z0;
    }

    private berkeley.com.sleepycat.persist.impl.PersistCatalog$Data readData(berkeley.com.sleepycat.je.Transaction) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.je.DatabaseEntry key, data, $r0, $r2;
        berkeley.com.sleepycat.je.OperationStatus status, $r4;
        java.io.ByteArrayInputStream bais, $r5;
        java.io.ObjectInputStream ois, $r7;
        java.lang.Object object;
        byte[] $r1, $r6;
        berkeley.com.sleepycat.je.Database $r3;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r8;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data oldData#37, $r12, $r19, oldData#64;
        java.lang.Class $r9;
        java.lang.String $r10;
        java.lang.RuntimeException $r11, $r16, $r18;
        java.util.List $r13;
        java.lang.ClassNotFoundException $r15, e#54;
        java.io.IOException $r17, e#58;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        $r0 = new berkeley.com.sleepycat.je.DatabaseEntry;

        $r1 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] DATA_KEY>;

        specialinvoke $r0.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r1);

        key = $r0;

        $r2 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        data = $r2;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        status = virtualinvoke $r3.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.OperationStatus get(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode)>(txn, key, data, null);

        $r4 = <berkeley.com.sleepycat.je.OperationStatus: berkeley.com.sleepycat.je.OperationStatus SUCCESS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(status);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if status != $r4 goto label8;

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = virtualinvoke data.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i0 = virtualinvoke data.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $i1 = virtualinvoke data.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r6, $i0, $i1);

        bais = $r5;

     label1:
        $r7 = new java.io.ObjectInputStream;

        specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(bais);

        ois = $r7;

        object = virtualinvoke ois.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $z0 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $i2 = virtualinvoke ois.<java.io.ObjectInputStream: int available()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 == 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $z1 = object instanceof berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        oldData#37 = (berkeley.com.sleepycat.persist.impl.PersistCatalog$Data) object;

        goto label5;

     label3:
        $z2 = object instanceof java.util.List;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label4;

        $r9 = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r10);

        throw $r11;

     label4:
        $r12 = new berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        specialinvoke $r12.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog$1)>(null);

        oldData#37 = $r12;

        $r13 = (java.util.List) object;

        oldData#37.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList> = $r13;

        oldData#37.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: int version> = -1;

     label5:
        return oldData#37;

     label6:
        $r15 := @caughtexception;

        e#54 = $r15;

        $r16 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e#54);

        throw $r16;

     label7:
        $r17 := @caughtexception;

        e#58 = $r17;

        $r18 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e#58);

        throw $r18;

     label8:
        $r19 = new berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        specialinvoke $r19.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog$1)>(null);

        oldData#64 = $r19;

        oldData#64.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: int version> = 1;

        return oldData#64;

        catch java.lang.ClassNotFoundException from label1 to label5 with label6;
        catch java.io.IOException from label1 to label5 with label7;
    }

    private void initModelAndMutations()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.util.Iterator l1;
        berkeley.com.sleepycat.persist.evolve.Converter converter;
        berkeley.com.sleepycat.persist.model.EntityModel $r0, $r5;
        berkeley.com.sleepycat.persist.evolve.Mutations $r1;
        java.util.Collection $r2;
        boolean $z0;
        java.lang.Object $r3;
        berkeley.com.sleepycat.persist.evolve.Conversion $r4;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        staticinvoke <berkeley.com.sleepycat.persist.model.ModelInternal: void setCatalog(berkeley.com.sleepycat.persist.model.EntityModel,berkeley.com.sleepycat.persist.impl.PersistCatalog)>($r0, this);

        $r1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.persist.evolve.Mutations: java.util.Collection getConverters()>();

        l1 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        converter = (berkeley.com.sleepycat.persist.evolve.Converter) $r3;

        $r4 = virtualinvoke converter.<berkeley.com.sleepycat.persist.evolve.Converter: berkeley.com.sleepycat.persist.evolve.Conversion getConversion()>();

        $r5 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        interfaceinvoke $r4.<berkeley.com.sleepycat.persist.evolve.Conversion: void initialize(berkeley.com.sleepycat.persist.model.EntityModel)>($r5);

        goto label1;

     label2:
        return;
    }

    private void addPredefinedProxies(java.util.List)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.util.List knownClasses;
        java.lang.Class $r0, $r2, $r4, $r6, $r8, $r10, $r12;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        knownClasses := @parameter0: java.util.List;

        $r0 = class "berkeley/com/sleepycat/persist/impl/CollectionProxy$ArrayListProxy";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r2 = class "berkeley/com/sleepycat/persist/impl/CollectionProxy$LinkedListProxy";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = class "berkeley/com/sleepycat/persist/impl/CollectionProxy$HashSetProxy";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = class "berkeley/com/sleepycat/persist/impl/CollectionProxy$TreeSetProxy";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = class "berkeley/com/sleepycat/persist/impl/MapProxy$HashMapProxy";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = class "berkeley/com/sleepycat/persist/impl/MapProxy$TreeMapProxy";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = class "berkeley/com/sleepycat/persist/impl/MapProxy$LinkedHashMapProxy";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke knownClasses.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    private void addProxiedClass(java.lang.String, boolean)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String className, proxiedClassName, $r6, $r11;
        boolean isKnownClass, $z0;
        berkeley.com.sleepycat.persist.model.ClassMetadata metadata;
        java.lang.Class type;
        java.lang.ClassNotFoundException e, $r7;
        berkeley.com.sleepycat.persist.model.EntityModel $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.RuntimeException $r12;
        java.util.Map $r13;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        className := @parameter0: java.lang.String;

        isKnownClass := @parameter1: boolean;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        metadata = virtualinvoke $r0.<berkeley.com.sleepycat.persist.model.EntityModel: berkeley.com.sleepycat.persist.model.ClassMetadata getClassMetadata(java.lang.String)>(className);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(metadata);

        if metadata == null goto label5;

        proxiedClassName = virtualinvoke metadata.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.lang.String getProxiedClassName()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(proxiedClassName);

        if proxiedClassName == null goto label5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isKnownClass);

        if isKnownClass == 0 goto label4;

     label1:
        type = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.Class resolveClass(java.lang.String)>(proxiedClassName);

        $z0 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: boolean allowRegisterProxy(java.lang.Class)>(type);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registering proxy is not allowed for ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(proxiedClassName);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", which is a built-in simple type.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        e = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class does not exist: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(proxiedClassName);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r11);

        throw $r12;

     label4:
        $r13 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(proxiedClassName, className);

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public berkeley.com.sleepycat.persist.impl.Format createFormat(java.lang.String, java.util.Map)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String clsName, $r4;
        java.util.Map newFormats;
        java.lang.Class type;
        java.lang.ClassNotFoundException e, $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.RuntimeException $r5;
        berkeley.com.sleepycat.persist.impl.Format $r6;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        clsName := @parameter0: java.lang.String;

        newFormats := @parameter1: java.util.Map;

     label1:
        type = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.Class resolveClass(java.lang.String)>(clsName);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class does not exist: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clsName);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r4);

        throw $r5;

     label4:
        $r6 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format createFormat(java.lang.Class,java.util.Map)>(type, newFormats);

        return $r6;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private void addFormat(berkeley.com.sleepycat.persist.impl.Format)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.util.List $r0;
        java.util.Map $r1;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        format := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void addFormat(berkeley.com.sleepycat.persist.impl.Format,java.util.List,java.util.Map)>(format, $r0, $r1);

        return;
    }

    private void writeData(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.persist.impl.PersistCatalog$Data) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data newData;
        boolean wasBetaVersion, $z0;
        java.io.ByteArrayOutputStream baos, $r0;
        java.io.ObjectOutputStream oos, $r1;
        java.io.IOException e, $r2;
        berkeley.com.sleepycat.je.DatabaseEntry key, data, $r4, $r6;
        int $i0, $i1;
        java.lang.RuntimeException $r3;
        byte[] $r5, $r7, $r10;
        berkeley.com.sleepycat.je.Database $r8, $r11;
        java.util.List $r13;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        newData := @parameter1: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        $i0 = newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: int version>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        wasBetaVersion = $z0;

        newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: int version> = 1;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        baos = $r0;

     label3:
        $r1 = new java.io.ObjectOutputStream;

        specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(baos);

        oos = $r1;

        virtualinvoke oos.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(newData);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e);

        throw $r3;

     label6:
        $r4 = new berkeley.com.sleepycat.je.DatabaseEntry;

        $r5 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] DATA_KEY>;

        specialinvoke $r4.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r5);

        key = $r4;

        $r6 = new berkeley.com.sleepycat.je.DatabaseEntry;

        $r7 = virtualinvoke baos.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r7);

        data = $r6;

        $r8 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        virtualinvoke $r8.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.OperationStatus put(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(txn, key, data);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(wasBetaVersion);

        if wasBetaVersion == 0 goto label7;

        $r10 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: byte[] BETA_MUTATIONS_KEY>;

        virtualinvoke key.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[])>($r10);

        $r11 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        virtualinvoke $r11.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.OperationStatus delete(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.DatabaseEntry)>(txn, key);

     label7:
        $r13 = newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats> = $i1;

        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    private void addFormat(berkeley.com.sleepycat.persist.impl.Format, java.util.List, java.util.Map)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.util.List list;
        java.util.Map map;
        int $i0;
        java.lang.String $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        format := @parameter0: berkeley.com.sleepycat.persist.impl.Format;

        list := @parameter1: java.util.List;

        map := @parameter2: java.util.Map;

        $i0 = interfaceinvoke list.<java.util.List: int size()>();

        virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: void setId(int)>($i0);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>(format);

        $r0 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, format);

        return;
    }

    public java.lang.Class resolveClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String clsName;
        berkeley.com.sleepycat.persist.model.EntityModel $r0;
        java.lang.ClassLoader $r1;
        java.lang.Class $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        clsName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r1 = staticinvoke <berkeley.com.sleepycat.persist.model.ModelInternal: java.lang.ClassLoader getClassLoader(berkeley.com.sleepycat.persist.model.EntityModel)>($r0);

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: java.lang.Class resolveClass(java.lang.String,java.lang.ClassLoader)>(clsName, $r1);

        return $r2;
    }

    public berkeley.com.sleepycat.persist.impl.Format createFormat(java.lang.Class, java.util.Map)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.Class type, $r7, $r10, $r11, $r13, $r29;
        java.util.Map newFormats, $r0, $r3, $r4, $r22;
        java.lang.String className, proxyClassName#29, $r19, $r26, $r28, $r33, $r35, $r42, $r44;
        berkeley.com.sleepycat.persist.model.ClassMetadata metadata;
        java.lang.NoSuchMethodException e, $r38;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMetadata;
        berkeley.com.sleepycat.persist.impl.Format format#7, format#15, format#43, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        berkeley.com.sleepycat.persist.model.EntityModel $r2, $r48;
        java.lang.Object $r5;
        java.lang.StringBuilder $r17, $r18, $r25, $r27, $r32, $r34, $r41, $r43, tmp$1269523618, tmp$1263099111, tmp$1264396876, tmp$128874162;
        java.util.List $r20, $r45, $r47;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata $r21;
        int $i0;
        java.lang.Class[] $r36;
        java.lang.AssertionError tmp$1795199178;
        berkeley.com.sleepycat.persist.impl.ProxiedFormat tmp$994367839;
        berkeley.com.sleepycat.persist.impl.PrimitiveArrayFormat tmp$2102724009;
        berkeley.com.sleepycat.persist.impl.ObjectArrayFormat tmp$442282675;
        berkeley.com.sleepycat.persist.impl.EnumFormat tmp$1060260698, tmp$1071496369;
        berkeley.com.sleepycat.persist.impl.NonPersistentFormat tmp$59360804;
        java.lang.IllegalArgumentException tmp$1230810732, tmp$740897834, tmp$2027976696, tmp$221674877;
        berkeley.com.sleepycat.persist.impl.CompositeKeyFormat tmp$1172188074;
        berkeley.com.sleepycat.persist.impl.ComplexFormat tmp$420620668;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        type := @parameter0: java.lang.Class;

        newFormats := @parameter1: java.util.Map;

        className = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        format#7 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getFormatFromMap(java.lang.Class,java.util.Map)>(type, newFormats);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#7);

        if format#7 == null goto label01;

        return format#7;

     label01:
        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        format#15 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getFormatFromMap(java.lang.Class,java.util.Map)>(type, $r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#15);

        if format#15 == null goto label02;

        return format#15;

     label02:
        $z0 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label03;

        $z1 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: boolean isSimpleType(java.lang.Class)>(type);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label03;

        tmp$1795199178 = new java.lang.AssertionError;

        specialinvoke tmp$1795199178.<java.lang.AssertionError: void <init>(java.lang.Object)>(className);

        throw tmp$1795199178;

     label03:
        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        metadata = virtualinvoke $r2.<berkeley.com.sleepycat.persist.model.EntityModel: berkeley.com.sleepycat.persist.model.ClassMetadata getClassMetadata(java.lang.String)>(className);

        proxyClassName#29 = null;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label04;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map proxyClassMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        proxyClassName#29 = (java.lang.String) $r5;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(proxyClassName#29);

        if proxyClassName#29 == null goto label05;

        tmp$994367839 = new berkeley.com.sleepycat.persist.impl.ProxiedFormat;

        specialinvoke tmp$994367839.<berkeley.com.sleepycat.persist.impl.ProxiedFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class,java.lang.String)>(this, type, proxyClassName#29);

        format#43 = tmp$994367839;

        goto label21;

     label05:
        $z2 = virtualinvoke type.<java.lang.Class: boolean isArray()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label08;

        $r7 = virtualinvoke type.<java.lang.Class: java.lang.Class getComponentType()>();

        $z3 = virtualinvoke $r7.<java.lang.Class: boolean isPrimitive()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label06;

        tmp$2102724009 = new berkeley.com.sleepycat.persist.impl.PrimitiveArrayFormat;

        $r8 = tmp$2102724009;

        specialinvoke tmp$2102724009.<berkeley.com.sleepycat.persist.impl.PrimitiveArrayFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, type);

        goto label07;

     label06:
        tmp$442282675 = new berkeley.com.sleepycat.persist.impl.ObjectArrayFormat;

        $r8 = tmp$442282675;

        specialinvoke tmp$442282675.<berkeley.com.sleepycat.persist.impl.ObjectArrayFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, type);

     label07:
        format#43 = $r8;

        goto label21;

     label08:
        $z4 = virtualinvoke type.<java.lang.Class: boolean isEnum()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label09;

        tmp$1060260698 = new berkeley.com.sleepycat.persist.impl.EnumFormat;

        specialinvoke tmp$1060260698.<berkeley.com.sleepycat.persist.impl.EnumFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, type);

        format#43 = tmp$1060260698;

        goto label21;

     label09:
        $r10 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 == null goto label10;

        $r11 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        $z5 = virtualinvoke $r11.<java.lang.Class: boolean isEnum()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label10;

        tmp$1071496369 = new berkeley.com.sleepycat.persist.impl.EnumFormat;

        $r13 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        specialinvoke tmp$1071496369.<berkeley.com.sleepycat.persist.impl.EnumFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, $r13);

        format#43 = tmp$1071496369;

        goto label21;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(type);

        if type == class "java/lang/Object" goto label11;

        $z6 = virtualinvoke type.<java.lang.Class: boolean isInterface()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label12;

     label11:
        tmp$59360804 = new berkeley.com.sleepycat.persist.impl.NonPersistentFormat;

        specialinvoke tmp$59360804.<berkeley.com.sleepycat.persist.impl.NonPersistentFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class)>(this, type);

        format#43 = tmp$59360804;

        goto label21;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(metadata);

        if metadata != null goto label13;

        tmp$1230810732 = new java.lang.IllegalArgumentException;

        tmp$1269523618 = new java.lang.StringBuilder;

        specialinvoke tmp$1269523618.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke tmp$1269523618.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class could not be loaded or is not persistent: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1230810732.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw tmp$1230810732;

     label13:
        $r20 = virtualinvoke metadata.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.util.List getCompositeKeyFields()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r20);

        if $r20 == null goto label15;

        $r21 = virtualinvoke metadata.<berkeley.com.sleepycat.persist.model.ClassMetadata: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r21);

        if $r21 != null goto label14;

        $r22 = virtualinvoke metadata.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.util.Map getSecondaryKeys()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r22);

        if $r22 == null goto label15;

     label14:
        tmp$740897834 = new java.lang.IllegalArgumentException;

        tmp$1263099111 = new java.lang.StringBuilder;

        specialinvoke tmp$1263099111.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke tmp$1263099111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A composite key class may not have primary or secondary key fields: ");

        $r26 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$740897834.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw tmp$740897834;

     label15:
        $r29 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r29);

        if $r29 == null goto label16;

        $i0 = virtualinvoke type.<java.lang.Class: int getModifiers()>();

        $z7 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label16;

        tmp$2027976696 = new java.lang.IllegalArgumentException;

        tmp$1264396876 = new java.lang.StringBuilder;

        specialinvoke tmp$1264396876.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke tmp$1264396876.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inner classes not allowed: ");

        $r33 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$2027976696.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw tmp$2027976696;

     label16:
        $r36 = newarray (java.lang.Class)[0];

        virtualinvoke type.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r36);

     label17:
        goto label19;

     label18:
        $r38 := @caughtexception;

        e = $r38;

        tmp$221674877 = new java.lang.IllegalArgumentException;

        tmp$128874162 = new java.lang.StringBuilder;

        specialinvoke tmp$128874162.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke tmp$128874162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default constructor: ");

        $r42 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$221674877.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r44, e);

        throw tmp$221674877;

     label19:
        $r45 = virtualinvoke metadata.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.util.List getCompositeKeyFields()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r45);

        if $r45 == null goto label20;

        tmp$1172188074 = new berkeley.com.sleepycat.persist.impl.CompositeKeyFormat;

        $r47 = virtualinvoke metadata.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.util.List getCompositeKeyFields()>();

        specialinvoke tmp$1172188074.<berkeley.com.sleepycat.persist.impl.CompositeKeyFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class,berkeley.com.sleepycat.persist.model.ClassMetadata,java.util.List)>(this, type, metadata, $r47);

        format#43 = tmp$1172188074;

        goto label21;

     label20:
        $r48 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        entityMetadata = virtualinvoke $r48.<berkeley.com.sleepycat.persist.model.EntityModel: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata(java.lang.String)>(className);

        tmp$420620668 = new berkeley.com.sleepycat.persist.impl.ComplexFormat;

        specialinvoke tmp$420620668.<berkeley.com.sleepycat.persist.impl.ComplexFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class,berkeley.com.sleepycat.persist.model.ClassMetadata,berkeley.com.sleepycat.persist.model.EntityMetadata)>(this, type, metadata, entityMetadata);

        format#43 = tmp$420620668;

     label21:
        interfaceinvoke newFormats.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(className, format#43);

        virtualinvoke format#43.<berkeley.com.sleepycat.persist.impl.Format: void collectRelatedFormats(berkeley.com.sleepycat.persist.impl.Catalog,java.util.Map)>(this, newFormats);

        return format#43;

        catch java.lang.NoSuchMethodException from label16 to label17 with label18;
    }

    private berkeley.com.sleepycat.persist.impl.Format getFormatFromMap(java.lang.Class, java.util.Map)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.Class type, $r2, $r3, $r4;
        java.util.Map formats;
        java.lang.String $r0, $r5;
        java.lang.Object $r1, $r6;
        berkeley.com.sleepycat.persist.impl.Format format#6, format#20;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        type := @parameter0: java.lang.Class;

        formats := @parameter1: java.util.Map;

        $r0 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r1 = interfaceinvoke formats.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        format#6 = (berkeley.com.sleepycat.persist.impl.Format) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#6);

        if format#6 == null goto label1;

        return format#6;

     label1:
        $r2 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 == null goto label2;

        $r3 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isEnum()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke type.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = interfaceinvoke formats.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        format#20 = (berkeley.com.sleepycat.persist.impl.Format) $r6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#20);

        if format#20 == null goto label2;

        return format#20;

     label2:
        return null;
    }

    public java.lang.Class resolveKeyClass(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String clsName;
        berkeley.com.sleepycat.persist.model.EntityModel $r0;
        java.lang.ClassLoader $r1;
        java.lang.Class $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        clsName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r1 = staticinvoke <berkeley.com.sleepycat.persist.model.ModelInternal: java.lang.ClassLoader getClassLoader(berkeley.com.sleepycat.persist.model.EntityModel)>($r0);

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: java.lang.Class resolveKeyClass(java.lang.String,java.lang.ClassLoader)>(clsName, $r1);

        return $r2;
    }

    java.util.Map getSubclassMap()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.util.HashMap subclassMap, tmp$682596788;
        java.util.Iterator l2;
        berkeley.com.sleepycat.persist.impl.Format format, superFormat;
        java.util.List $r1;
        boolean $z0, $z1;
        java.lang.Object $r2, $r3, subclass#21;
        java.util.HashSet tmp$1587524535;
        java.util.Set tmp$2144240673;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        tmp$682596788 = new java.util.HashMap;

        specialinvoke tmp$682596788.<java.util.HashMap: void <init>()>();

        subclassMap = tmp$682596788;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        l2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        format = (berkeley.com.sleepycat.persist.impl.Format) $r2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format);

        if format == null goto label1;

        $z1 = staticinvoke <berkeley.com.sleepycat.persist.impl.Format: boolean isPredefined(berkeley.com.sleepycat.persist.impl.Format)>(format);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        goto label1;

     label2:
        superFormat = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getSuperFormat()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(superFormat);

        if superFormat == null goto label4;

        $r3 = interfaceinvoke subclassMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(superFormat);

        subclass#21 = (java.util.Set) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subclass#21);

        if subclass#21 != null goto label3;

        tmp$1587524535 = new java.util.HashSet;

        specialinvoke tmp$1587524535.<java.util.HashSet: void <init>()>();

        subclass#21 = tmp$1587524535;

        interfaceinvoke subclassMap.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(superFormat, subclass#21);

     label3:
        tmp$2144240673 = (java.util.Set) subclass#21;

        interfaceinvoke tmp$2144240673.<java.util.Set: boolean add(java.lang.Object)>(format);

     label4:
        goto label1;

     label5:
        return subclassMap;
    }

    public berkeley.com.sleepycat.persist.impl.Format getFormat(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String className;
        java.util.Map $r0;
        java.lang.Object $r1;
        berkeley.com.sleepycat.persist.impl.Format $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        className := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        $r2 = (berkeley.com.sleepycat.persist.impl.Format) $r1;

        return $r2;
    }

    java.util.Set getModelClasses()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.util.HashSet classes, $r0;
        java.util.Iterator l2;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.util.Map $r1;
        java.util.Collection $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.util.Set $r5;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        classes = $r0;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        l2 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        format = (berkeley.com.sleepycat.persist.impl.Format) $r3;

        $z1 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: boolean isModelClass()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke classes.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        goto label1;

     label3:
        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(classes);

        return $r5;
    }

    public void getEntityFormats(java.util.Collection)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.util.Collection entityFormats, $r1;
        java.util.Iterator l2;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.util.Map $r0;
        boolean $z0, $z1;
        java.lang.Object $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        entityFormats := @parameter0: java.util.Collection;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        l2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        format = (berkeley.com.sleepycat.persist.impl.Format) $r2;

        $z1 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: boolean isEntity()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        interfaceinvoke entityFormats.<java.util.Collection: boolean add(java.lang.Object)>(format);

     label2:
        goto label1;

     label3:
        return;
    }

    public berkeley.com.sleepycat.persist.model.EntityModel getResolvedModel()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.persist.model.EntityModel $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        return $r0;
    }

    public void openExisting()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $i0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount>;

        $i1 = $i0 + 1;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount> = $i1;

        return;
    }

    public synchronized void flush(berkeley.com.sleepycat.je.Transaction) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data newData, $r0;
        java.util.List $r1;
        berkeley.com.sleepycat.persist.evolve.Mutations $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        $r0 = new berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        specialinvoke $r0.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog$1)>(null);

        newData = $r0;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList> = $r1;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = $r2;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void writeData(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.persist.impl.PersistCatalog$Data)>(txn, newData);

        return;
    }

    public java.lang.String getDatabaseKeyName(java.lang.String, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String className, keyName, $r0;
        berkeley.com.sleepycat.persist.impl.Format format;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        className := @parameter0: java.lang.String;

        keyName := @parameter1: java.lang.String;

        format = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getStoredFormat(java.lang.String)>(className);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format);

        if format != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getOldKeyName(java.lang.String)>(keyName);

        return $r0;
    }

    private berkeley.com.sleepycat.persist.impl.Format getStoredFormat(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String className;
        berkeley.com.sleepycat.persist.impl.Format format#4;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        className := @parameter0: java.lang.String;

        format#4 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getFormat(java.lang.String)>(className);

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#4);

        if format#4 == null goto label2;

        $i0 = virtualinvoke format#4.<berkeley.com.sleepycat.persist.impl.Format: int getId()>();

        $i1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 < $i1 goto label2;

        format#4 = virtualinvoke format#4.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.Format getPreviousVersion()>();

        goto label1;

     label2:
        return format#4;
    }

    public java.lang.String getDatabaseClassName(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.String className, $r0;
        berkeley.com.sleepycat.persist.impl.Format format;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        className := @parameter0: java.lang.String;

        format = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getStoredFormat(java.lang.String)>(className);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format);

        if format != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        return $r0;
    }

    public berkeley.com.sleepycat.persist.impl.Format getFormat(java.lang.Class, boolean) throws berkeley.com.sleepycat.persist.impl.RefreshException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.Class 'cls';
        boolean checkEntitySubclassIndexes;
        berkeley.com.sleepycat.persist.impl.ComplexFormat entityFormat;
        berkeley.com.sleepycat.je.DatabaseException e, $r8;
        java.util.Map $r0;
        java.lang.String $r1, $r7, $r13, $r15;
        java.lang.Object $r2;
        berkeley.com.sleepycat.persist.impl.Format format#7;
        berkeley.com.sleepycat.persist.model.EntityModel $r3;
        berkeley.com.sleepycat.persist.impl.Store $r4, $r5;
        berkeley.com.sleepycat.persist.model.EntityMetadata $r6;
        java.lang.RuntimeException $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r14;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        'cls' := @parameter0: java.lang.Class;

        checkEntitySubclassIndexes := @parameter1: boolean;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        $r1 = virtualinvoke 'cls'.<java.lang.Class: java.lang.String getName()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        format#7 = (berkeley.com.sleepycat.persist.impl.Format) $r2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#7);

        if format#7 != null goto label5;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label4;

        format#7 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format addNewFormat(java.lang.Class)>('cls');

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(checkEntitySubclassIndexes);

        if checkEntitySubclassIndexes == 0 goto label4;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 == null goto label4;

        entityFormat = virtualinvoke format#7.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.impl.ComplexFormat getEntityFormat()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(entityFormat);

        if entityFormat == null goto label4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(entityFormat);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#7);

        if entityFormat == format#7 goto label4;

     label1:
        $r5 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        $r6 = virtualinvoke entityFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata()>();

        $r7 = virtualinvoke 'cls'.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r5.<berkeley.com.sleepycat.persist.impl.Store: void checkEntitySubclassSecondaries(berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.String)>($r6, $r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        e = $r8;

        $r9 = staticinvoke <berkeley.com.sleepycat.util.RuntimeExceptionWrapper: java.lang.RuntimeException wrapIfNeeded(java.lang.Throwable)>(e);

        throw $r9;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#7);

        if format#7 != null goto label5;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class is not persistent: ");

        $r13 = virtualinvoke 'cls'.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label5:
        return format#7;

        catch berkeley.com.sleepycat.je.DatabaseException from label1 to label2 with label3;
    }

    private synchronized berkeley.com.sleepycat.persist.impl.Format addNewFormat(java.lang.Class) throws berkeley.com.sleepycat.persist.impl.RefreshException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        java.lang.Class 'cls';
        java.util.ArrayList newFormatList, $r1;
        java.util.HashMap newFormatMap, newLatestFormatMap, newFormats, $r3, $r5, $r7;
        java.util.Iterator l7, l8;
        berkeley.com.sleepycat.persist.impl.Format newFormat, newFormat, format#6, format#27;
        berkeley.com.sleepycat.persist.impl.ReadOnlyCatalog newFormatCatalog, $r10;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data newData, $r18;
        java.util.Map $r0, $r4, $r6;
        java.util.List $r2;
        java.util.Collection $r8, $r13;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r14;
        berkeley.com.sleepycat.persist.model.EntityModel $r11, $r15;
        java.lang.ClassLoader $r12;
        java.lang.String $r16;
        berkeley.com.sleepycat.persist.evolve.Mutations $r19;
        berkeley.com.sleepycat.je.rep.ReplicaWriteException $r20, e#76;
        berkeley.com.sleepycat.je.DatabaseException $r21, e#80;
        java.lang.RuntimeException $r22;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        'cls' := @parameter0: java.lang.Class;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        format#6 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getFormatFromMap(java.lang.Class,java.util.Map)>('cls', $r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format#6);

        if format#6 == null goto label01;

        return format#6;

     label01:
        $r1 = new java.util.ArrayList;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        newFormatList = $r1;

        $r3 = new java.util.HashMap;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap>;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>($r4);

        newFormatMap = $r3;

        $r5 = new java.util.HashMap;

        $r6 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map latestFormatMap>;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6);

        newLatestFormatMap = $r5;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        newFormats = $r7;

        format#27 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format createFormat(java.lang.Class,java.util.Map)>('cls', newFormats);

        $r8 = interfaceinvoke newFormats.<java.util.Map: java.util.Collection values()>();

        l7 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        $r9 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        newFormat = (berkeley.com.sleepycat.persist.impl.Format) $r9;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void addFormat(berkeley.com.sleepycat.persist.impl.Format,java.util.List,java.util.Map)>(newFormat, newFormatList, newFormatMap);

        goto label02;

     label03:
        $r10 = new berkeley.com.sleepycat.persist.impl.ReadOnlyCatalog;

        $r11 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r12 = staticinvoke <berkeley.com.sleepycat.persist.model.ModelInternal: java.lang.ClassLoader getClassLoader(berkeley.com.sleepycat.persist.model.EntityModel)>($r11);

        specialinvoke $r10.<berkeley.com.sleepycat.persist.impl.ReadOnlyCatalog: void <init>(java.lang.ClassLoader,java.util.List,java.util.Map)>($r12, newFormatList, newFormatMap);

        newFormatCatalog = $r10;

        $r13 = interfaceinvoke newFormats.<java.util.Map: java.util.Collection values()>();

        l8 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label05;

        $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        newFormat = (berkeley.com.sleepycat.persist.impl.Format) $r14;

        $r15 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        virtualinvoke newFormat.<berkeley.com.sleepycat.persist.impl.Format: void initializeIfNeeded(berkeley.com.sleepycat.persist.impl.Catalog,berkeley.com.sleepycat.persist.model.EntityModel)>(newFormatCatalog, $r15);

        $r16 = virtualinvoke newFormat.<berkeley.com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        interfaceinvoke newLatestFormatMap.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, newFormat);

        goto label04;

     label05:
        $z2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean readOnly>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label10;

     label06:
        $r18 = new berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        specialinvoke $r18.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog$1)>(null);

        newData = $r18;

        newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList> = newFormatList;

        $r19 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        newData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: berkeley.com.sleepycat.persist.evolve.Mutations mutations> = $r19;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void writeDataCheckStale(berkeley.com.sleepycat.persist.impl.PersistCatalog$Data)>(newData);

     label07:
        goto label10;

     label08:
        $r20 := @caughtexception;

        e#76 = $r20;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean readOnly> = 1;

        goto label10;

     label09:
        $r21 := @caughtexception;

        e#80 = $r21;

        $r22 = staticinvoke <berkeley.com.sleepycat.util.RuntimeExceptionWrapper: java.lang.RuntimeException wrapIfNeeded(java.lang.Throwable)>(e#80);

        throw $r22;

     label10:
        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList> = newFormatList;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map formatMap> = newFormatMap;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.Map latestFormatMap> = newLatestFormatMap;

        return format#27;

        catch berkeley.com.sleepycat.je.rep.ReplicaWriteException from label06 to label07 with label08;
        catch berkeley.com.sleepycat.je.DatabaseException from label06 to label07 with label09;
    }

    private void writeDataCheckStale(berkeley.com.sleepycat.persist.impl.PersistCatalog$Data) throws berkeley.com.sleepycat.je.DatabaseException, berkeley.com.sleepycat.persist.impl.RefreshException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data newData;
        berkeley.com.sleepycat.je.LockConflictException e, $r7;
        java.lang.Throwable l6, $r8;
        int i#2;
        berkeley.com.sleepycat.je.Transaction txn#4, $r1;
        boolean $z0, success#18, $z1, success#30, $z2, $z3, $z4;
        berkeley.com.sleepycat.je.Environment $r0, $r2;
        berkeley.com.sleepycat.persist.impl.Store $r3, $r6;
        berkeley.com.sleepycat.je.TransactionConfig $r4;
        berkeley.com.sleepycat.persist.impl.RefreshException $r5;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        newData := @parameter0: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data;

        i#2 = 0;

     label01:
        txn#4 = null;

        $z0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean transactional>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env>;

        $r1 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Transaction getThreadTransaction(berkeley.com.sleepycat.je.Environment)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label02;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env>;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        $r4 = virtualinvoke $r3.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig getAutoCommitTxnConfig()>();

        txn#4 = virtualinvoke $r2.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.Transaction beginTransaction(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.TransactionConfig)>(null, $r4);

     label02:
        success#18 = 0;

     label03:
        $z1 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isMetadataStale(berkeley.com.sleepycat.je.Transaction)>(txn#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label04;

        $r5 = new berkeley.com.sleepycat.persist.impl.RefreshException;

        $r6 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        specialinvoke $r5.<berkeley.com.sleepycat.persist.impl.RefreshException: void <init>(berkeley.com.sleepycat.persist.impl.Store,berkeley.com.sleepycat.persist.impl.PersistCatalog,int)>($r6, this, -1);

        throw $r5;

     label04:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void writeData(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.persist.impl.PersistCatalog$Data)>(txn#4, newData);

        success#30 = 1;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(txn#4);

        if txn#4 == null goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#30);

        if success#30 == 0 goto label06;

        $z2 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label06;

        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label07;

     label06:
        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        e = $r7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        if i#2 < 10 goto label10;

        throw e;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(txn#4);

        if txn#4 == null goto label17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#18);

        if success#18 == 0 goto label11;

        $z3 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label11;

        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label17;

     label11:
        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void abort()>();

        goto label17;

     label12:
        $r8 := @caughtexception;

     label13:
        l6 = $r8;

     label14:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(txn#4);

        if txn#4 == null goto label16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#18);

        if success#18 == 0 goto label15;

        $z4 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label15;

        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label16;

     label15:
        virtualinvoke txn#4.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label16:
        throw l6;

     label17:
        i#2 = i#2 + 1;

        goto label01;

        catch berkeley.com.sleepycat.je.LockConflictException from label03 to label05 with label08;
        catch java.lang.Throwable from label03 to label05 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    boolean isMetadataStale(berkeley.com.sleepycat.je.Transaction) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.persist.impl.PersistCatalog$Data oldData;
        java.util.List $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        oldData = specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.PersistCatalog$Data readData(berkeley.com.sleepycat.je.Transaction)>(txn);

        $r0 = oldData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = oldData.<berkeley.com.sleepycat.persist.impl.PersistCatalog$Data: java.util.List formatList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 <= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog, java.lang.String) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this, oldCatalog;
        java.lang.String storePrefix;
        berkeley.com.sleepycat.je.Database $r0;
        berkeley.com.sleepycat.persist.impl.Store $r1;
        berkeley.com.sleepycat.je.Environment $r2;
        boolean $z0, $z1;
        int $i0;
        berkeley.com.sleepycat.persist.model.EntityModel $r3;
        berkeley.com.sleepycat.persist.evolve.Mutations $r4;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        oldCatalog := @parameter0: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        storePrefix := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Database db> = $r0;

        $r1 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store> = $r1;

        $r2 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.je.Environment env> = $r2;

        $z0 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean rawAccess>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean rawAccess> = $z0;

        $i0 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int openCount> = $i0;

        $z1 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean transactional>;

        this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean transactional> = $z1;

        $r3 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r4 = oldCatalog.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.evolve.Mutations mutations>;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void initAndRetry(java.lang.String,berkeley.com.sleepycat.persist.model.EntityModel,berkeley.com.sleepycat.persist.evolve.Mutations)>(storePrefix, $r3, $r4);

        return;
    }

    int getNFormats()
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        int $i0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $i0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats>;

        return $i0;
    }

    void checkWriteInReplicaUpgradeMode() throws berkeley.com.sleepycat.persist.impl.RefreshException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        int $i0, $i1;
        java.util.List $r0;
        berkeley.com.sleepycat.persist.impl.RefreshException $r1;
        berkeley.com.sleepycat.persist.impl.Store $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $i0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats>;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 >= $i1 goto label1;

        $r1 = new berkeley.com.sleepycat.persist.impl.RefreshException;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        specialinvoke $r1.<berkeley.com.sleepycat.persist.impl.RefreshException: void <init>(berkeley.com.sleepycat.persist.impl.Store,berkeley.com.sleepycat.persist.impl.PersistCatalog,int)>($r2, this, -1);

        throw $r1;

     label1:
        return;
    }

    public berkeley.com.sleepycat.persist.impl.Format getFormat(int, boolean) throws berkeley.com.sleepycat.persist.impl.RefreshException
    {
        berkeley.com.sleepycat.persist.impl.PersistCatalog this;
        int formatId, $i0;
        boolean expectStored, $z0;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r12, $r13, $r14, $r15;
        java.lang.String $r4, $r16;
        java.lang.RuntimeException $r5, $r17;
        berkeley.com.sleepycat.persist.impl.Store $r6, $r9;
        java.lang.AssertionError $r7;
        berkeley.com.sleepycat.persist.impl.RefreshException $r8;
        java.util.List $r10;
        java.lang.Object $r11;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        formatId := @parameter0: int;

        expectStored := @parameter1: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(formatId);

        if formatId >= 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Format ID ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(formatId);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is negative, may indicate data corruption.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r4);

        throw $r5;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(expectStored);

        if expectStored == 0 goto label3;

        $i0 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int nStoredFormats>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(formatId);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if formatId < $i0 goto label3;

        $z0 = <berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r6 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r6 != null goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r8 = new berkeley.com.sleepycat.persist.impl.RefreshException;

        $r9 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Store store>;

        specialinvoke $r8.<berkeley.com.sleepycat.persist.impl.RefreshException: void <init>(berkeley.com.sleepycat.persist.impl.Store,berkeley.com.sleepycat.persist.impl.PersistCatalog,int)>($r9, this, formatId);

        throw $r8;

     label3:
        $r10 = this.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.util.List formatList>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(formatId);

        format = (berkeley.com.sleepycat.persist.impl.Format) $r11;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(format);

        if format != null goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Format ID ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(formatId);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has null format, may indicate data corruption.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r16);

        throw $r17;

     label4:
        return format;
    }


