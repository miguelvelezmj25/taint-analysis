    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.Map lockMap> = $r0;

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>(1);

        <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.concurrent.locks.ReentrantLock administrationLock> = $r1;

        return;
    }

    public at.favre.tools.dconvert.converters.Result process(java.io.File, boolean)
    {
        at.favre.tools.dconvert.converters.postprocessing.APostProcessor this;
        java.io.File rawFile;
        boolean keepOriginal, $z0;
        at.favre.tools.dconvert.converters.Result l3;
        java.lang.Throwable l4, $r12;
        java.util.concurrent.locks.ReentrantLock $r0, $r3, $r5, $r8, $r11, $r15;
        java.util.Map $r1, $r2, $r6, $r9, $r13;
        java.lang.Object $r7, $r10, $r14;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.APostProcessor;

        rawFile := @parameter0: java.io.File;

        keepOriginal := @parameter1: boolean;

     label1:
        $r0 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.concurrent.locks.ReentrantLock administrationLock>;

        virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r1 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.Map lockMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(rawFile);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r2 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.Map lockMap>;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>(1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(rawFile, $r3);

     label2:
        $r5 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.concurrent.locks.ReentrantLock administrationLock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r6 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.Map lockMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(rawFile);

        $r8 = (java.util.concurrent.locks.ReentrantLock) $r7;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        l3 = virtualinvoke this.<at.favre.tools.dconvert.converters.postprocessing.APostProcessor: at.favre.tools.dconvert.converters.Result synchronizedProcess(java.io.File,boolean)>(rawFile, keepOriginal);

     label3:
        $r9 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.Map lockMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(rawFile);

        $r11 = (java.util.concurrent.locks.ReentrantLock) $r10;

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return l3;

     label4:
        $r12 := @caughtexception;

     label5:
        l4 = $r12;

     label6:
        $r13 = <at.favre.tools.dconvert.converters.postprocessing.APostProcessor: java.util.Map lockMap>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(rawFile);

        $r15 = (java.util.concurrent.locks.ReentrantLock) $r14;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw l4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.converters.postprocessing.APostProcessor this;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.APostProcessor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


