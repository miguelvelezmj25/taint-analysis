    public static boolean checkSame(java.lang.String, java.lang.String)
    {
        java.lang.String cronvSchedule1, cronSchedule2;
        boolean $z0;

        cronvSchedule1 := @parameter0: java.lang.String;

        cronSchedule2 := @parameter1: java.lang.String;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cronvSchedule1);

        if cronvSchedule1 != null goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cronSchedule2);

        if cronSchedule2 != null goto label1;

        return 1;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cronvSchedule1);

        if cronvSchedule1 == null goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cronSchedule2);

        if cronSchedule2 != null goto label3;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke cronvSchedule1.<java.lang.String: boolean equals(java.lang.Object)>(cronSchedule2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        $r0 = class "berkeley/com/sleepycat/je/utilint/CronScheduleParser";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: boolean $assertionsDisabled> = $z1;

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess> = "The style of je.env.verifySchedule is not right. ";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: int spaceNum> = 4;

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: int fieldNum> = 5;

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String nullCons> = "The argument should not be null.";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The standard string should be \'* * * * *\', i.e. there are ");

        $i0 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: int fieldNum>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fields and ");

        $i1 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: int spaceNum>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blank space.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons1> = $r7;

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons2> = "Each filed can only be a int value or *.";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons3> = "Can not specify dayOfWeek and dayOfMonth simultaneously.";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons4> = "Can not specify dayOfMonth or month.";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons5> = "Range Error: ";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons6> = "If the day of the week is a concrete day, then the minute and thehour should also be concrete.";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons7> = "If the hour is a concrete day, then minute should also be concrete";

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneDay> = 86400000L;

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneHour> = 3600000L;

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneMinute> = 60000L;

        return;
    }

    public long getDelayTime()
    {
        berkeley.com.sleepycat.je.utilint.CronScheduleParser this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.utilint.CronScheduleParser;

        $l0 = this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay>;

        return $l0;
    }

    public long getInterval()
    {
        berkeley.com.sleepycat.je.utilint.CronScheduleParser this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.utilint.CronScheduleParser;

        $l0 = this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long interval>;

        return $l0;
    }

    public void <init>(java.lang.String)
    {
        berkeley.com.sleepycat.je.utilint.CronScheduleParser this;
        java.lang.String cronSchedule;

        this := @this: berkeley.com.sleepycat.je.utilint.CronScheduleParser;

        cronSchedule := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: void validate(java.lang.String)>(cronSchedule);

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: void parser(java.lang.String)>(cronSchedule);

        return;
    }

    private void validate(java.lang.String)
    {
        berkeley.com.sleepycat.je.utilint.CronScheduleParser this;
        java.lang.String cronSchedule, str, $r2, $r4, $r6, $r10, $r12, $r14, $r19, $r21, $r23, $r24, $r25, $r28, $r30, $r32, $r33, $r34, $r37, $r39, $r41, $r42, $r43, $r47, $r49, $r52, $r53, $r54, $r58, $r60, $r63, $r64, $r65, $r69, $r71, $r74, $r75, $r76, $r77, $r80, $r82, $r84, $r85, $r86, $r89, $r91, $r93;
        char c;
        java.lang.String[] timeArray, l4, $r7;
        int l5, min, hour, dayOfWeek, spaceCount#12, i#14, $i0, $i1, $i2, $i3, l6#46;
        java.lang.NumberFormatException e, $r16;
        java.lang.IllegalArgumentException $r0, $r8, $r17, $r26, $r35, $r45, $r56, $r67, $r78, $r87;
        java.lang.StringBuilder $r1, $r3, $r5, $r9, $r11, $r13, $r18, $r20, $r22, $r27, $r29, $r31, $r36, $r38, $r40, $r46, $r48, $r50, $r51, $r57, $r59, $r61, $r62, $r68, $r70, $r72, $r73, $r79, $r81, $r83, $r88, $r90, $r92;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Integer $r44, $r55, $r66;

        this := @this: berkeley.com.sleepycat.je.utilint.CronScheduleParser;

        cronSchedule := @parameter0: java.lang.String;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cronSchedule);

        if cronSchedule != null goto label01;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String nullCons>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label01:
        spaceCount#12 = 0;

        i#14 = 0;

     label02:
        $i0 = virtualinvoke cronSchedule.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#14 >= $i0 goto label04;

        c = virtualinvoke cronSchedule.<java.lang.String: char charAt(int)>(i#14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c != 32 goto label03;

        spaceCount#12 = spaceCount#12 + 1;

     label03:
        i#14 = i#14 + 1;

        goto label02;

     label04:
        $i1 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: int spaceNum>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(spaceCount#12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if spaceCount#12 != $i1 goto label05;

        $r7 = virtualinvoke cronSchedule.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i2 = lengthof $r7;

        $i3 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: int fieldNum>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i2 == $i3 goto label06;

     label05:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons1>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label06:
        timeArray = virtualinvoke cronSchedule.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        l4 = timeArray;

        l5 = lengthof l4;

        l6#46 = 0;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#46);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5);

        if l6#46 >= l5 goto label12;

        str = l4[l6#46];

     label08:
        staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(str);

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        e = $r16;

        $z0 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label11;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons2>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label11:
        l6#46 = l6#46 + 1;

        goto label07;

     label12:
        $r24 = timeArray[2];

        $z1 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label13;

        $r25 = timeArray[4];

        $z2 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label13;

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons3>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r26;

     label13:
        $r33 = timeArray[2];

        $z3 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label14;

        $r34 = timeArray[3];

        $z4 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label15;

     label14:
        $r35 = new java.lang.IllegalArgumentException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons4>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r35;

     label15:
        $r42 = timeArray[0];

        $z5 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label17;

        $r43 = timeArray[0];

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r43);

        min = virtualinvoke $r44.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(min);

        if min < 0 goto label16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(min);

        if min <= 59 goto label17;

     label16:
        $r45 = new java.lang.IllegalArgumentException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons5>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The minute should be (0-59).");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r52);

        throw $r45;

     label17:
        $r53 = timeArray[1];

        $z6 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label19;

        $r54 = timeArray[1];

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r54);

        hour = virtualinvoke $r55.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hour);

        if hour < 0 goto label18;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hour);

        if hour <= 23 goto label19;

     label18:
        $r56 = new java.lang.IllegalArgumentException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons5>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The hour should be (0-23).");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r63);

        throw $r56;

     label19:
        $r64 = timeArray[4];

        $z7 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label21;

        $r65 = timeArray[4];

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r65);

        dayOfWeek = virtualinvoke $r66.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dayOfWeek);

        if dayOfWeek < 0 goto label20;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dayOfWeek);

        if dayOfWeek <= 6 goto label21;

     label20:
        $r67 = new java.lang.IllegalArgumentException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons5>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The day of the week shouldbe (0-6).");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r74);

        throw $r67;

     label21:
        $r75 = timeArray[4];

        $z8 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 != 0 goto label23;

        $r76 = timeArray[0];

        $z9 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 != 0 goto label22;

        $r77 = timeArray[1];

        $z10 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label23;

     label22:
        $r78 = new java.lang.IllegalArgumentException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons6>;

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r78.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r84);

        throw $r78;

     label23:
        $r85 = timeArray[1];

        $z11 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 != 0 goto label24;

        $r86 = timeArray[0];

        $z12 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label24;

        $r87 = new java.lang.IllegalArgumentException;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String errorMess>;

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.lang.String cons7>;

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r87.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r93);

        throw $r87;

     label24:
        return;

        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    private void parser(java.lang.String)
    {
        berkeley.com.sleepycat.je.utilint.CronScheduleParser this;
        java.lang.String cronSchedule, $r8, $r9, $r11, $r13, $r16, $r17, $r19, $r22, $r23, $r26;
        int curDayOfWeek, curHour, curMinute, tmpDayOfWeek, tmpHour, tmpMinute, tmpHour, tmpMinute, tmpMinute, $i2;
        java.util.Calendar scheduleCal, $r0, $r1, $r2, $r5, $r6, $r7, $r15, $r21, $r25;
        java.lang.String[] timeArray;
        berkeley.com.sleepycat.je.utilint.TestHook $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14;
        java.lang.Integer $r10, $r12, $r14, $r18, $r20, $r24;

        this := @this: berkeley.com.sleepycat.je.utilint.CronScheduleParser;

        cronSchedule := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal> = $r0;

        $r1 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, 0);

        $r2 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(14, 0);

        $r3 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: berkeley.com.sleepycat.je.utilint.TestHook setCurCalHook>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label01;

        $r4 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: berkeley.com.sleepycat.je.utilint.TestHook setCurCalHook>;

        interfaceinvoke $r4.<berkeley.com.sleepycat.je.utilint.TestHook: void doHook()>();

     label01:
        $r5 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        curDayOfWeek = virtualinvoke $r5.<java.util.Calendar: int get(int)>(7);

        $r6 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        curHour = virtualinvoke $r6.<java.util.Calendar: int get(int)>(11);

        $r7 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        curMinute = virtualinvoke $r7.<java.util.Calendar: int get(int)>(12);

        scheduleCal = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(14, 0);

        timeArray = virtualinvoke cronSchedule.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r8 = timeArray[4];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label05;

        $l0 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneDay>;

        $l1 = 7L * $l0;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long interval> = $l1;

        $r9 = timeArray[4];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

        $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        tmpDayOfWeek = $i2 + 1;

        $r11 = timeArray[1];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r11);

        tmpHour = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = timeArray[0];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r13);

        tmpMinute = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(7, tmpDayOfWeek);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(11, tmpHour);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(12, tmpMinute);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpDayOfWeek);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curDayOfWeek);

        if tmpDayOfWeek < curDayOfWeek goto label03;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpDayOfWeek);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curDayOfWeek);

        if tmpDayOfWeek != curDayOfWeek goto label02;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpHour);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curHour);

        if tmpHour < curHour goto label03;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpDayOfWeek);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curDayOfWeek);

        if tmpDayOfWeek != curDayOfWeek goto label04;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpHour);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curHour);

        if tmpHour != curHour goto label04;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpMinute);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curMinute);

        if tmpMinute >= curMinute goto label04;

     label03:
        virtualinvoke scheduleCal.<java.util.Calendar: void add(int,int)>(5, 7);

     label04:
        $l3 = virtualinvoke scheduleCal.<java.util.Calendar: long getTimeInMillis()>();

        $r15 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        $l4 = virtualinvoke $r15.<java.util.Calendar: long getTimeInMillis()>();

        $l5 = $l3 - $l4;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay> = $l5;

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: void assertDelay()>();

        return;

     label05:
        $r16 = timeArray[1];

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label08;

        $l6 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneDay>;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long interval> = $l6;

        $r17 = timeArray[1];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r17);

        tmpHour = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $r19 = timeArray[0];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r19);

        tmpMinute = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(7, curDayOfWeek);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(11, tmpHour);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(12, tmpMinute);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpHour);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curHour);

        if tmpHour < curHour goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpHour);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curHour);

        if tmpHour != curHour goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpMinute);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curMinute);

        if tmpMinute >= curMinute goto label07;

     label06:
        virtualinvoke scheduleCal.<java.util.Calendar: void add(int,int)>(5, 1);

     label07:
        $l7 = virtualinvoke scheduleCal.<java.util.Calendar: long getTimeInMillis()>();

        $r21 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        $l8 = virtualinvoke $r21.<java.util.Calendar: long getTimeInMillis()>();

        $l9 = $l7 - $l8;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay> = $l9;

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: void assertDelay()>();

        return;

     label08:
        $r22 = timeArray[0];

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label10;

        $l10 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneHour>;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long interval> = $l10;

        $r23 = timeArray[0];

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r23);

        tmpMinute = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(7, curDayOfWeek);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(11, curHour);

        virtualinvoke scheduleCal.<java.util.Calendar: void set(int,int)>(12, tmpMinute);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmpMinute);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(curMinute);

        if tmpMinute >= curMinute goto label09;

        virtualinvoke scheduleCal.<java.util.Calendar: void add(int,int)>(10, 1);

     label09:
        $l11 = virtualinvoke scheduleCal.<java.util.Calendar: long getTimeInMillis()>();

        $r25 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: java.util.Calendar curCal>;

        $l12 = virtualinvoke $r25.<java.util.Calendar: long getTimeInMillis()>();

        $l13 = $l11 - $l12;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay> = $l13;

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: void assertDelay()>();

        return;

     label10:
        $r26 = timeArray[0];

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label11;

        $l14 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: long millsOneMinute>;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long interval> = $l14;

        this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay> = 0L;

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: void assertDelay()>();

        return;

     label11:
        return;
    }

    private void assertDelay()
    {
        berkeley.com.sleepycat.je.utilint.CronScheduleParser this;
        boolean $z0;
        long $l0, $l2, $l3;
        byte $b1;
        java.lang.AssertionError $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        this := @this: berkeley.com.sleepycat.je.utilint.CronScheduleParser;

        $z0 = <berkeley.com.sleepycat.je.utilint.CronScheduleParser: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $l0 = this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay>;

        $b1 = $l0 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 >= 0 goto label1;

        $r0 = new java.lang.AssertionError;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delay is: ");

        $l2 = this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long delay>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; interval is: ");

        $l3 = this.<berkeley.com.sleepycat.je.utilint.CronScheduleParser: long interval>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r0;

     label1:
        return;
    }


