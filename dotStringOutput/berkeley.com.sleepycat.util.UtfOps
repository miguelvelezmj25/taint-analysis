digraph <clinit> {
"$r0 = newarray (byte)[0] {1221597021}" -> "<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1948021565}";
"<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1948021565}" -> "<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1219949758}";
"<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1219949758}" -> "return {9730058}";
}

digraph getByteLength {
"chars := @parameter0: char[] {1057783924}" -> "$i0 = lengthof chars {2037273297}";
"$i0 = lengthof chars {2037273297}" -> "$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1833805699}";
"$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1833805699}" -> "return $i1 {438452431}";
}

digraph getByteLength {
"chars := @parameter0: char[] {891394051}" -> "offset := @parameter1: int {2104131622}";
"offset := @parameter1: int {2104131622}" -> "length#1 := @parameter2: int {2144136041}";
"length#1 := @parameter2: int {2144136041}" -> "len#3 = 0 {569131375}";
"len#3 = 0 {569131375}" -> "length#7 = length#1 + offset {834791387}";
"length#7 = length#1 + offset {834791387}" -> "i#9 = offset {840090928}";
"i#9 = offset {840090928}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1013889611}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1013889611}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {924994367}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {924994367}" -> "if i#9 >= length#7 goto return len#3 {1459487647}";
"if i#9 >= length#7 goto return len#3 {1459487647}" -> "c = chars[i#9] {1665239739}";
"if i#9 >= length#7 goto return len#3 {1459487647}" -> "return len#3 {2050753069}";
"c = chars[i#9] {1665239739}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {315947329}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {315947329}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1406328195}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1406328195}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1194878800}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1406328195}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {239941680}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1194878800}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {2128197618}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {2128197618}" -> "len#3 = len#3 + 1 {1000489839}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {2128197618}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {239941680}";
"len#3 = len#3 + 1 {1000489839}" -> "goto [?= i#9 = i#9 + 1] {1274242058}";
"goto [?= i#9 = i#9 + 1] {1274242058}" -> "i#9 = i#9 + 1 {377959685}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {239941680}" -> "if c <= 2047 goto len#3 = len#3 + 2 {2104225914}";
"if c <= 2047 goto len#3 = len#3 + 2 {2104225914}" -> "len#3 = len#3 + 3 {761796841}";
"if c <= 2047 goto len#3 = len#3 + 2 {2104225914}" -> "len#3 = len#3 + 2 {877521878}";
"len#3 = len#3 + 3 {761796841}" -> "goto [?= i#9 = i#9 + 1] {1006379752}";
"goto [?= i#9 = i#9 + 1] {1006379752}" -> "i#9 = i#9 + 1 {377959685}";
"len#3 = len#3 + 2 {877521878}" -> "i#9 = i#9 + 1 {377959685}";
"i#9 = i#9 + 1 {377959685}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {2076563564}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {2076563564}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1013889611}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {924994367}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {315947329}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {239941680}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1013889611}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1194878800}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph charsToBytes {
"chars := @parameter0: char[] {1572664886}" -> "charOffset := @parameter1: int {960859617}";
"charOffset := @parameter1: int {960859617}" -> "bytes := @parameter2: byte[] {72972180}";
"bytes := @parameter2: byte[] {72972180}" -> "byteOffset#1 := @parameter3: int {839724981}";
"byteOffset#1 := @parameter3: int {839724981}" -> "charLength#2 := @parameter4: int {845107267}";
"charLength#2 := @parameter4: int {845107267}" -> "charLength#6 = charLength#2 + charOffset {1083705252}";
"charLength#6 = charLength#2 + charOffset {1083705252}" -> "i#8 = charOffset {215184715}";
"i#8 = charOffset {215184715}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {807828150}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {807828150}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {874551557}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {874551557}" -> "if i#8 >= charLength#6 goto return {843117414}";
"if i#8 >= charLength#6 goto return {843117414}" -> "c = chars[i#8] {1852640027}";
"if i#8 >= charLength#6 goto return {843117414}" -> "return {528936058}";
"c = chars[i#8] {1852640027}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1663578069}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1663578069}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {972407138}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {972407138}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1593746443}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {972407138}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1561233064}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1593746443}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {297973802}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {297973802}" -> "$i0 = byteOffset#1 {149374816}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {297973802}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1561233064}";
"$i0 = byteOffset#1 {149374816}" -> "byteOffset#1 = byteOffset#1 + 1 {602738689}";
"byteOffset#1 = byteOffset#1 + 1 {602738689}" -> "$b1 = (byte) c {1331197182}";
"$b1 = (byte) c {1331197182}" -> "bytes[$i0] = $b1 {75372556}";
"bytes[$i0] = $b1 {75372556}" -> "goto [?= i#8 = i#8 + 1] {1947799602}";
"goto [?= i#8 = i#8 + 1] {1947799602}" -> "i#8 = i#8 + 1 {177305596}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1561233064}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1189060422}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1189060422}" -> "byteOffset#26 = byteOffset#1 + 1 {1845154875}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1189060422}" -> "byteOffset#58 = byteOffset#1 + 1 {622490714}";
"byteOffset#26 = byteOffset#1 + 1 {1845154875}" -> "$c2 = c >> 12 {1505423899}";
"$c2 = c >> 12 {1505423899}" -> "$c3 = $c2 & 15 {1622745457}";
"$c3 = $c2 & 15 {1622745457}" -> "$c4 = 224 | $c3 {1759028637}";
"$c4 = 224 | $c3 {1759028637}" -> "$b5 = (byte) $c4 {1719449783}";
"$b5 = (byte) $c4 {1719449783}" -> "bytes[byteOffset#1] = $b5 {535964848}";
"bytes[byteOffset#1] = $b5 {535964848}" -> "byteOffset#37 = byteOffset#26 + 1 {403317066}";
"byteOffset#37 = byteOffset#26 + 1 {403317066}" -> "$c6 = c >> 6 {1067159434}";
"$c6 = c >> 6 {1067159434}" -> "$c7 = $c6 & 63 {1385867595}";
"$c7 = $c6 & 63 {1385867595}" -> "$c8 = 128 | $c7 {866802251}";
"$c8 = 128 | $c7 {866802251}" -> "$b9 = (byte) $c8 {1345221739}";
"$b9 = (byte) $c8 {1345221739}" -> "bytes[byteOffset#26] = $b9 {103853817}";
"bytes[byteOffset#26] = $b9 {103853817}" -> "byteOffset#1 = byteOffset#37 + 1 {1137723576}";
"byteOffset#1 = byteOffset#37 + 1 {1137723576}" -> "$c10 = c >> 0 {723582624}";
"$c10 = c >> 0 {723582624}" -> "$c11 = $c10 & 63 {598692187}";
"$c11 = $c10 & 63 {598692187}" -> "$c12 = 128 | $c11 {1860196734}";
"$c12 = 128 | $c11 {1860196734}" -> "$b13 = (byte) $c12 {1108967420}";
"$b13 = (byte) $c12 {1108967420}" -> "bytes[byteOffset#37] = $b13 {1703097923}";
"bytes[byteOffset#37] = $b13 {1703097923}" -> "goto [?= i#8 = i#8 + 1] {1014994465}";
"goto [?= i#8 = i#8 + 1] {1014994465}" -> "i#8 = i#8 + 1 {177305596}";
"byteOffset#58 = byteOffset#1 + 1 {622490714}" -> "$c14 = c >> 6 {1633426299}";
"$c14 = c >> 6 {1633426299}" -> "$c15 = $c14 & 31 {1858139157}";
"$c15 = $c14 & 31 {1858139157}" -> "$c16 = 192 | $c15 {1769897351}";
"$c16 = 192 | $c15 {1769897351}" -> "$b17 = (byte) $c16 {1752704016}";
"$b17 = (byte) $c16 {1752704016}" -> "bytes[byteOffset#1] = $b17 {959385272}";
"bytes[byteOffset#1] = $b17 {959385272}" -> "byteOffset#1 = byteOffset#58 + 1 {1675562483}";
"byteOffset#1 = byteOffset#58 + 1 {1675562483}" -> "$c18 = c >> 0 {1708501201}";
"$c18 = c >> 0 {1708501201}" -> "$c19 = $c18 & 63 {1281214660}";
"$c19 = $c18 & 63 {1281214660}" -> "$c20 = 128 | $c19 {1186655861}";
"$c20 = 128 | $c19 {1186655861}" -> "$b21 = (byte) $c20 {249644371}";
"$b21 = (byte) $c20 {249644371}" -> "bytes[byteOffset#58] = $b21 {673747413}";
"bytes[byteOffset#58] = $b21 {673747413}" -> "i#8 = i#8 + 1 {177305596}";
"i#8 = i#8 + 1 {177305596}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {457832861}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {457832861}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {807828150}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1561233064}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1663578069}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {874551557}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1593746443}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {807828150}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getZeroTerminatedByteLength {
"bytes := @parameter0: byte[] {701721173}" -> "offset#1 := @parameter1: int {694255519}";
"offset#1 := @parameter1: int {694255519}" -> "len#3 = 0 {199241996}";
"len#3 = 0 {199241996}" -> "$i0 = offset#1 {1942135762}";
"$i0 = offset#1 {1942135762}" -> "offset#1 = offset#1 + 1 {2040562935}";
"offset#1 = offset#1 + 1 {2040562935}" -> "$b1 = bytes[$i0] {1659668585}";
"$b1 = bytes[$i0] {1659668585}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {11400348}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {11400348}" -> "if $b1 == 0 goto return len#3 {602664407}";
"if $b1 == 0 goto return len#3 {602664407}" -> "len#3 = len#3 + 1 {1171326539}";
"if $b1 == 0 goto return len#3 {602664407}" -> "return len#3 {1115359956}";
"len#3 = len#3 + 1 {1171326539}" -> "goto [?= $i0 = offset#1] {950773050}";
"goto [?= $i0 = offset#1] {950773050}" -> "$i0 = offset#1 {1942135762}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {11400348}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToString {
"bytes := @parameter0: byte[] {610335294}" -> "offset := @parameter1: int {366589855}";
"offset := @parameter1: int {366589855}" -> "length := @parameter2: int {67021718}";
"length := @parameter2: int {67021718}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {399057702}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {399057702}" -> "if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1433601593}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1433601593}" -> "$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {598193434}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1433601593}" -> "charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {222828623}";
"$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {598193434}" -> "return $r0 {1443110313}";
"charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {222828623}" -> "chars = newarray (char)[charLen] {1080451682}";
"chars = newarray (char)[charLen] {1080451682}" -> "staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1960406692}";
"staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1960406692}" -> "$r1 = new java.lang.String {852359437}";
"$r1 = new java.lang.String {852359437}" -> "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {308907955}";
"specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {308907955}" -> "return $r1 {1955455062}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {399057702}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToChars {
"bytes := @parameter0: byte[] {1952620967}" -> "byteOffset#1 := @parameter1: int {1534801192}";
"byteOffset#1 := @parameter1: int {1534801192}" -> "chars := @parameter2: char[] {1427513357}";
"chars := @parameter2: char[] {1427513357}" -> "charOffset#2 := @parameter3: int {1976963838}";
"charOffset#2 := @parameter3: int {1976963838}" -> "len#3 := @parameter4: int {1674256262}";
"len#3 := @parameter4: int {1674256262}" -> "isByteLen := @parameter5: boolean {1683049401}";
"isByteLen := @parameter5: boolean {1683049401}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {432107016}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {432107016}" -> "if isByteLen == 0 goto $i1 = charOffset#2 {1001064211}";
"if isByteLen == 0 goto $i1 = charOffset#2 {1001064211}" -> "$i1 = byteOffset#1 {700888263}";
"if isByteLen == 0 goto $i1 = charOffset#2 {1001064211}" -> "$i1 = charOffset#2 {1404824329}";
"$i1 = byteOffset#1 {700888263}" -> "goto [?= len#8 = len#3 + $i1] {1213815646}";
"goto [?= len#8 = len#3 + $i1] {1213815646}" -> "len#8 = len#3 + $i1 {750192560}";
"$i1 = charOffset#2 {1404824329}" -> "len#8 = len#3 + $i1 {750192560}";
"len#8 = len#3 + $i1 {750192560}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {673819977}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {673819977}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {576290735}";
"if isByteLen == 0 goto $i2 = charOffset#2 {576290735}" -> "$i2 = byteOffset#1 {1293066875}";
"if isByteLen == 0 goto $i2 = charOffset#2 {576290735}" -> "$i2 = charOffset#2 {1190391726}";
"$i2 = byteOffset#1 {1293066875}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {1494001390}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {1494001390}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1751923660}";
"$i2 = charOffset#2 {1190391726}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1751923660}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1751923660}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {222986349}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {222986349}" -> "if $i2 >= len#8 goto return byteOffset#1 {2011642430}";
"if $i2 >= len#8 goto return byteOffset#1 {2011642430}" -> "$i3 = byteOffset#1 {314036647}";
"if $i2 >= len#8 goto return byteOffset#1 {2011642430}" -> "return byteOffset#1 {870146395}";
"$i3 = byteOffset#1 {314036647}" -> "byteOffset#1 = byteOffset#1 + 1 {1332924349}";
"byteOffset#1 = byteOffset#1 + 1 {1332924349}" -> "$b4 = bytes[$i3] {17443495}";
"$b4 = bytes[$i3] {17443495}" -> "char1 = $b4 & 255 {1772562611}";
"char1 = $b4 & 255 {1772562611}" -> "$s5 = char1 & 255 {163473028}";
"$s5 = char1 & 255 {163473028}" -> "$s6 = $s5 >> 4 {473687805}";
"$s6 = $s5 >> 4 {473687805}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {747354870}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {747354870}" -> "tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {100761315}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {100761315}" -> "$i7 = charOffset#2 {1156069738}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {100761315}" -> "$r2 = new java.lang.IllegalArgumentException {896907751}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {100761315}" -> "$i9 = byteOffset#1 {419320026}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {100761315}" -> "byteOffset#50 = byteOffset#1 + 1 {316666278}";
"$i7 = charOffset#2 {1156069738}" -> "charOffset#2 = charOffset#2 + 1 {120005380}";
"charOffset#2 = charOffset#2 + 1 {120005380}" -> "$c8 = (char) char1 {2121083679}";
"$c8 = (char) char1 {2121083679}" -> "chars[$i7] = $c8 {1080821973}";
"chars[$i7] = $c8 {1080821973}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {801393702}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {801393702}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {673819977}";
"$i9 = byteOffset#1 {419320026}" -> "byteOffset#1 = byteOffset#1 + 1 {947182000}";
"byteOffset#1 = byteOffset#1 + 1 {947182000}" -> "char2#29 = bytes[$i9] {902286925}";
"char2#29 = bytes[$i9] {902286925}" -> "$s10 = char2#29 & 192 {135960897}";
"$s10 = char2#29 & 192 {135960897}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1204794820}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1204794820}" -> "if $s10 == 128 goto $i11 = charOffset#2 {690938633}";
"if $s10 == 128 goto $i11 = charOffset#2 {690938633}" -> "$r0 = new java.lang.IllegalArgumentException {1618775150}";
"if $s10 == 128 goto $i11 = charOffset#2 {690938633}" -> "$i11 = charOffset#2 {2065315179}";
"$r0 = new java.lang.IllegalArgumentException {1618775150}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {456059989}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {456059989}" -> "throw $r0 {1170633362}";
"$i11 = charOffset#2 {2065315179}" -> "charOffset#2 = charOffset#2 + 1 {389685785}";
"charOffset#2 = charOffset#2 + 1 {389685785}" -> "$s12 = char1 & 31 {550817002}";
"$s12 = char1 & 31 {550817002}" -> "$i13 = $s12 << 6 {1736476876}";
"$i13 = $s12 << 6 {1736476876}" -> "$b14 = char2#29 & 63 {1286554539}";
"$b14 = char2#29 & 63 {1286554539}" -> "$i15 = $i13 | $b14 {1264897270}";
"$i15 = $i13 | $b14 {1264897270}" -> "$c16 = (char) $i15 {1661948680}";
"$c16 = (char) $i15 {1661948680}" -> "chars[$i11] = $c16 {532287119}";
"chars[$i11] = $c16 {532287119}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {700359880}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {700359880}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {673819977}";
"byteOffset#50 = byteOffset#1 + 1 {316666278}" -> "char2#52 = bytes[byteOffset#1] {217760513}";
"char2#52 = bytes[byteOffset#1] {217760513}" -> "byteOffset#1 = byteOffset#50 + 1 {1549010206}";
"byteOffset#1 = byteOffset#50 + 1 {1549010206}" -> "char3 = bytes[byteOffset#50] {402268031}";
"char3 = bytes[byteOffset#50] {402268031}" -> "$s17 = char2#52 & 192 {140929660}";
"$s17 = char2#52 & 192 {140929660}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {624098369}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {624098369}" -> "if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1892057531}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1892057531}" -> "$s18 = char3 & 192 {1343445628}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1892057531}" -> "$r1 = new java.lang.IllegalArgumentException {1518570756}";
"$s18 = char3 & 192 {1343445628}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {932275605}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {932275605}" -> "if $s18 == 128 goto $i19 = charOffset#2 {2145963985}";
"if $s18 == 128 goto $i19 = charOffset#2 {2145963985}" -> "$r1 = new java.lang.IllegalArgumentException {1518570756}";
"if $s18 == 128 goto $i19 = charOffset#2 {2145963985}" -> "$i19 = charOffset#2 {1120093799}";
"$r1 = new java.lang.IllegalArgumentException {1518570756}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {1651754045}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {1651754045}" -> "throw $r1 {1532758501}";
"$i19 = charOffset#2 {1120093799}" -> "charOffset#2 = charOffset#2 + 1 {1055731758}";
"charOffset#2 = charOffset#2 + 1 {1055731758}" -> "$s20 = char1 & 15 {1252697501}";
"$s20 = char1 & 15 {1252697501}" -> "$i21 = $s20 << 12 {810570398}";
"$i21 = $s20 << 12 {810570398}" -> "$b22 = char2#52 & 63 {1023667580}";
"$b22 = char2#52 & 63 {1023667580}" -> "$i23 = $b22 << 6 {1076838798}";
"$i23 = $b22 << 6 {1076838798}" -> "$i24 = $i21 | $i23 {1590703357}";
"$i24 = $i21 | $i23 {1590703357}" -> "$b25 = char3 & 63 {1697825507}";
"$b25 = char3 & 63 {1697825507}" -> "$i26 = $b25 << 0 {352080011}";
"$i26 = $b25 << 0 {352080011}" -> "$i27 = $i24 | $i26 {361441086}";
"$i27 = $i24 | $i26 {361441086}" -> "$c28 = (char) $i27 {1717422774}";
"$c28 = (char) $i27 {1717422774}" -> "chars[$i19] = $c28 {260420188}";
"chars[$i19] = $c28 {260420188}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {2030818095}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {2030818095}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {673819977}";
"$r2 = new java.lang.IllegalArgumentException {896907751}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {524328757}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {524328757}" -> "throw $r2 {955626841}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1204794820}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {747354870}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {673819977}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {222986349}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {624098369}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {432107016}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {932275605}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1751923660}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getCharLength {
"bytes := @parameter0: byte[] {393917192}" -> "offset#1 := @parameter1: int {1160351383}";
"offset#1 := @parameter1: int {1160351383}" -> "length#2 := @parameter2: int {407802802}";
"length#2 := @parameter2: int {407802802}" -> "charCount#4 = 0 {1008168506}";
"charCount#4 = 0 {1008168506}" -> "length#8 = length#2 + offset#1 {823758635}";
"length#8 = length#2 + offset#1 {823758635}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {738791792}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {738791792}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1973003636}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1973003636}" -> "if offset#1 >= length#8 goto return charCount#4 {918619097}";
"if offset#1 >= length#8 goto return charCount#4 {918619097}" -> "$b0 = bytes[offset#1] {383045679}";
"if offset#1 >= length#8 goto return charCount#4 {918619097}" -> "return charCount#4 {1170445567}";
"$b0 = bytes[offset#1] {383045679}" -> "$s1 = $b0 & 255 {114348614}";
"$s1 = $b0 & 255 {114348614}" -> "$s2 = $s1 >> 4 {363691822}";
"$s2 = $s1 >> 4 {363691822}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {1234754463}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {1234754463}" -> "tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {321491330}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {321491330}" -> "offset#1 = offset#1 + 1 {325792579}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {321491330}" -> "$r0 = new java.lang.IllegalArgumentException {892624780}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {321491330}" -> "offset#1 = offset#1 + 2 {215521991}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {321491330}" -> "offset#1 = offset#1 + 3 {429485907}";
"offset#1 = offset#1 + 1 {325792579}" -> "goto [?= charCount#4 = charCount#4 + 1] {1920126888}";
"goto [?= charCount#4 = charCount#4 + 1] {1920126888}" -> "charCount#4 = charCount#4 + 1 {1547625100}";
"offset#1 = offset#1 + 2 {215521991}" -> "goto [?= charCount#4 = charCount#4 + 1] {1394782047}";
"goto [?= charCount#4 = charCount#4 + 1] {1394782047}" -> "charCount#4 = charCount#4 + 1 {1547625100}";
"offset#1 = offset#1 + 3 {429485907}" -> "goto [?= charCount#4 = charCount#4 + 1] {2104687687}";
"goto [?= charCount#4 = charCount#4 + 1] {2104687687}" -> "charCount#4 = charCount#4 + 1 {1547625100}";
"$r0 = new java.lang.IllegalArgumentException {892624780}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {555441395}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {555441395}" -> "throw $r0 {1264655443}";
"charCount#4 = charCount#4 + 1 {1547625100}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {2105844847}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {2105844847}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {738791792}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {738791792}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1973003636}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {1234754463}"[fontcolor="blue", penwidth=3, color="blue"];
}


