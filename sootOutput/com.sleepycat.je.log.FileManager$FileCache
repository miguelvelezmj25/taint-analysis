    void <init>(com.sleepycat.je.dbi.DbConfigManager)
    {
        com.sleepycat.je.log.FileManager$FileCache this;
        com.sleepycat.je.dbi.DbConfigManager configManager;
        java.util.Hashtable $r0;
        java.util.LinkedList $r1;
        com.sleepycat.je.config.IntConfigParam $r2;
        int $i0;

        this := @this: com.sleepycat.je.log.FileManager$FileCache;

        configManager := @parameter0: com.sleepycat.je.dbi.DbConfigManager;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap> = $r0;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        this.<com.sleepycat.je.log.FileManager$FileCache: java.util.List fileList> = $r1;

        $r2 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_FILE_CACHE_SIZE>;

        $i0 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r2);

        this.<com.sleepycat.je.log.FileManager$FileCache: int fileCacheSize> = $i0;

        return;
    }

    static void access$600(com.sleepycat.je.log.FileManager$FileCache) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager$FileCache x0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager$FileCache;

        specialinvoke x0.<com.sleepycat.je.log.FileManager$FileCache: void clear()>();

        return;
    }

    private void clear() throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager$FileCache this;
        java.util.Iterator iter;
        com.sleepycat.je.log.FileHandle fileHandle;
        java.lang.Throwable l3, $r3;
        java.util.Map $r0, $r4;
        java.util.Collection $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.List $r5;

        this := @this: com.sleepycat.je.log.FileManager$FileCache;

        $r0 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        iter = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        fileHandle = (com.sleepycat.je.log.FileHandle) $r2;

     label2:
        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void latch()>();

        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void close()>();

        interfaceinvoke iter.<java.util.Iterator: void remove()>();

     label3:
        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void release()>();

        goto label5;

     label4:
        $r3 := @caughtexception;

        l3 = $r3;

        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void release()>();

        throw l3;

     label5:
        goto label1;

     label6:
        $r4 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        $r5 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.List fileList>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    static int access$700(com.sleepycat.je.log.FileManager$FileCache)
    {
        com.sleepycat.je.log.FileManager$FileCache x0;
        int $i0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager$FileCache;

        $i0 = specialinvoke x0.<com.sleepycat.je.log.FileManager$FileCache: int size()>();

        return $i0;
    }

    private int size()
    {
        com.sleepycat.je.log.FileManager$FileCache this;
        java.util.Map $r0;
        int $i0;

        this := @this: com.sleepycat.je.log.FileManager$FileCache;

        $r0 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        return $i0;
    }

    static void access$900(com.sleepycat.je.log.FileManager$FileCache, long) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager$FileCache x0;
        long x1;

        x0 := @parameter0: com.sleepycat.je.log.FileManager$FileCache;

        x1 := @parameter1: long;

        specialinvoke x0.<com.sleepycat.je.log.FileManager$FileCache: void remove(long)>(x1);

        return;
    }

    private void remove(long) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager$FileCache this;
        long fileNum, $l0;
        java.util.Iterator iter;
        java.lang.Long evictId;
        com.sleepycat.je.log.FileHandle evictTarget;
        java.lang.Throwable l6, $r6;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1, $r3;
        byte $b1;
        java.util.Map $r2, $r4;

        this := @this: com.sleepycat.je.log.FileManager$FileCache;

        fileNum := @parameter0: long;

        $r0 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.List fileList>;

        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        evictId = (java.lang.Long) $r1;

        $l0 = virtualinvoke evictId.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp fileNum;

        if $b1 != 0 goto label7;

        $r2 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(evictId);

        evictTarget = (com.sleepycat.je.log.FileHandle) $r3;

     label2:
        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void latch()>();

        $r4 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(evictId);

        interfaceinvoke iter.<java.util.Iterator: void remove()>();

        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void close()>();

     label3:
        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void release()>();

        goto label7;

     label4:
        $r6 := @caughtexception;

     label5:
        l6 = $r6;

     label6:
        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void release()>();

        throw l6;

     label7:
        goto label1;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static com.sleepycat.je.log.FileHandle access$000(com.sleepycat.je.log.FileManager$FileCache, java.lang.Long)
    {
        com.sleepycat.je.log.FileManager$FileCache x0;
        java.lang.Long x1;
        com.sleepycat.je.log.FileHandle $r0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager$FileCache;

        x1 := @parameter1: java.lang.Long;

        $r0 = specialinvoke x0.<com.sleepycat.je.log.FileManager$FileCache: com.sleepycat.je.log.FileHandle get(java.lang.Long)>(x1);

        return $r0;
    }

    static void access$100(com.sleepycat.je.log.FileManager$FileCache, java.lang.Long, com.sleepycat.je.log.FileHandle) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager$FileCache x0;
        java.lang.Long x1;
        com.sleepycat.je.log.FileHandle x2;

        x0 := @parameter0: com.sleepycat.je.log.FileManager$FileCache;

        x1 := @parameter1: java.lang.Long;

        x2 := @parameter2: com.sleepycat.je.log.FileHandle;

        specialinvoke x0.<com.sleepycat.je.log.FileManager$FileCache: void add(java.lang.Long,com.sleepycat.je.log.FileHandle)>(x1, x2);

        return;
    }

    private void add(java.lang.Long, com.sleepycat.je.log.FileHandle) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager$FileCache this;
        java.lang.Long fileId, evictId;
        com.sleepycat.je.log.FileHandle fileHandle, evictTarget;
        java.util.Iterator iter;
        java.lang.Throwable l6, $r7;
        java.util.List $r0, $r1, $r8;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Object $r2, $r4;
        java.util.Map $r3, $r5, $r9;

        this := @this: com.sleepycat.je.log.FileManager$FileCache;

        fileId := @parameter0: java.lang.Long;

        fileHandle := @parameter1: com.sleepycat.je.log.FileHandle;

        $r0 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.List fileList>;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = this.<com.sleepycat.je.log.FileManager$FileCache: int fileCacheSize>;

        if $i0 < $i1 goto label9;

        $r1 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.List fileList>;

        iter = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r2 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        evictId = (java.lang.Long) $r2;

        $r3 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(evictId);

        evictTarget = (com.sleepycat.je.log.FileHandle) $r4;

        $z1 = virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: boolean latchNoWait()>();

        if $z1 == 0 goto label8;

     label2:
        $r5 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(evictId);

        interfaceinvoke iter.<java.util.Iterator: void remove()>();

        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void close()>();

     label3:
        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void release()>();

        goto label7;

     label4:
        $r7 := @caughtexception;

     label5:
        l6 = $r7;

     label6:
        virtualinvoke evictTarget.<com.sleepycat.je.log.FileHandle: void release()>();

        throw l6;

     label7:
        goto label9;

     label8:
        goto label1;

     label9:
        $r8 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.List fileList>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(fileId);

        $r9 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileId, fileHandle);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private com.sleepycat.je.log.FileHandle get(java.lang.Long)
    {
        com.sleepycat.je.log.FileManager$FileCache this;
        java.lang.Long fileId;
        java.util.Map $r0;
        java.lang.Object $r1;
        com.sleepycat.je.log.FileHandle $r2;

        this := @this: com.sleepycat.je.log.FileManager$FileCache;

        fileId := @parameter0: java.lang.Long;

        $r0 = this.<com.sleepycat.je.log.FileManager$FileCache: java.util.Map fileMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(fileId);

        $r2 = (com.sleepycat.je.log.FileHandle) $r1;

        return $r2;
    }


