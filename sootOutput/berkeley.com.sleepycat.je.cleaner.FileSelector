    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/cleaner/FileSelector";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.TreeMap $r0;
        java.util.HashMap $r1;
        java.util.HashSet $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs> = $r2;

        return;
    }

    synchronized berkeley.com.sleepycat.je.utilint.StatGroup loadStats()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats, $r1;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0;
        berkeley.com.sleepycat.je.utilint.IntStat $r2, $r4;
        berkeley.com.sleepycat.je.utilint.StatDefinition $r3, $r5;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r1 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r1.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("FileSelector", "Cleaner\'s activities when choosing an optimal file to clean.");

        stats = $r1;

        $r2 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r3 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_FILE_DELETION_BACKLOG>;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus SAFE_TO_DELETE>;

        $i0 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: int getNumberOfFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r0);

        specialinvoke $r2.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition,int)>(stats, $r3, $i0);

        $r4 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r5 = <berkeley.com.sleepycat.je.cleaner.CleanerStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CLEANER_PENDING_LN_QUEUE_SIZE>;

        $i1 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: int getPendingLNQueueSize()>();

        specialinvoke $r4.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition,int)>(stats, $r5, $i1);

        return stats;
    }

    private synchronized int getNumberOfFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status, $r3;
        java.util.Iterator l3;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        int count#2;
        java.util.SortedMap $r0;
        java.util.Collection $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        status := @parameter0: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        count#2 = 0;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Collection values()>();

        l3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r2;

        $r3 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status>;

        if $r3 != status goto label2;

        count#2 = count#2 + 1;

     label2:
        goto label1;

     label3:
        return count#2;
    }

    private synchronized int getPendingLNQueueSize()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Map $r0;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        return $i0;
    }

    public synchronized boolean isCheckpointNeeded()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0, $r1;
        int $i0, $i1;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus CLEANED>;

        $i0 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: int getNumberOfFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r0);

        if $i0 > 0 goto label1;

        $r1 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus FULLY_PROCESSED>;

        $i1 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: int getNumberOfFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r1);

        if $i1 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    synchronized void removeDeletedFile(java.lang.Long, berkeley.com.sleepycat.je.dbi.MemoryBudget)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.dbi.MemoryBudget budget;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0;
        java.lang.AssertionError $r1;
        java.util.SortedMap $r2;
        java.lang.Object $r3;
        java.util.Set $r4;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        fileNum := @parameter0: java.lang.Long;

        budget := @parameter1: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        $z0 = <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus SAFE_TO_DELETE>;

        $z1 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean checkStatus(java.lang.Long,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(fileNum, $r0);

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>(fileNum);

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r3;

        if info == null goto label2;

        $r4 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: java.util.Set dbIds>;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void adjustMemoryBudget(berkeley.com.sleepycat.je.dbi.MemoryBudget,java.util.Set,java.util.Set)>(budget, $r4, null);

     label2:
        return;
    }

    private boolean checkStatus(java.lang.Long, berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus expectStatus, $r8, $r14;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        java.util.SortedMap $r0;
        java.lang.Object $r1;
        boolean $z0, $z1;
        java.lang.AssertionError $r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r15;
        java.lang.String $r7, $r16;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        fileNum := @parameter0: java.lang.Long;

        expectStatus := @parameter1: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(fileNum);

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r1;

        $z0 = <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if info != null goto label1;

        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(expectStatus);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was missing");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r2;

     label1:
        $z1 = <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r8 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status>;

        if $r8 == expectStatus goto label2;

        $r9 = new java.lang.AssertionError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(expectStatus);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r14 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r9;

     label2:
        return 1;
    }

    private void adjustMemoryBudget(berkeley.com.sleepycat.je.dbi.MemoryBudget, java.util.Set, java.util.Set)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.dbi.MemoryBudget budget;
        java.util.Set oldDatabases, newDatabases;
        long adjustMem#2, $l0, $l1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        budget := @parameter0: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        oldDatabases := @parameter1: java.util.Set;

        newDatabases := @parameter2: java.util.Set;

        adjustMem#2 = 0L;

        if oldDatabases == null goto label1;

        $l0 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: long getCleanedFilesDatabaseEntrySize(java.util.Set)>(oldDatabases);

        adjustMem#2 = adjustMem#2 - $l0;

     label1:
        if newDatabases == null goto label2;

        $l1 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: long getCleanedFilesDatabaseEntrySize(java.util.Set)>(newDatabases);

        adjustMem#2 = adjustMem#2 + $l1;

     label2:
        virtualinvoke budget.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateAdminMemoryUsage(long)>(adjustMem#2);

        return;
    }

    private long getCleanedFilesDatabaseEntrySize(java.util.Set)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Set databases;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        long $l7;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        databases := @parameter0: java.util.Set;

        $i1 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHMAP_ENTRY_OVERHEAD>;

        $i2 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHSET_OVERHEAD>;

        $i3 = $i1 + $i2;

        $i4 = interfaceinvoke databases.<java.util.Set: int size()>();

        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHSET_ENTRY_OVERHEAD>;

        $i5 = $i4 * $i0;

        $i6 = $i3 + $i5;

        $l7 = (long) $i6;

        return $l7;
    }

    synchronized java.util.Set getCleanedDatabases(java.util.Collection)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Collection fileNums;
        java.util.Iterator l3;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        java.util.HashSet set#2, $r3;
        boolean $z0;
        java.lang.Object $r0, $r2;
        java.util.SortedMap $r1;
        java.util.Set $r4, $r5;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        fileNums := @parameter0: java.util.Collection;

        set#2 = null;

        l3 = interfaceinvoke fileNums.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r0 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        fileNum = (java.lang.Long) $r0;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(fileNum);

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r2;

        if info == null goto label3;

        if set#2 != null goto label2;

        $r3 = new java.util.HashSet;

        $r4 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: java.util.Set dbIds>;

        specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r4);

        set#2 = $r3;

        goto label3;

     label2:
        $r5 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: java.util.Set dbIds>;

        virtualinvoke set#2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r5);

     label3:
        goto label1;

     label4:
        return set#2;
    }

    synchronized berkeley.com.sleepycat.je.utilint.VLSN getLastVLSN(java.lang.Long)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        java.util.SortedMap $r0;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.utilint.VLSN $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        fileNum := @parameter0: java.lang.Long;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(fileNum);

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r1;

        if info == null goto label1;

        $r2 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.utilint.VLSN lastVlsn>;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    synchronized java.util.NavigableSet getSafeToDeleteFiles()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0;
        java.util.NavigableSet $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus SAFE_TO_DELETE>;

        $r1 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.NavigableSet getFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r0);

        return $r1;
    }

    private synchronized java.util.NavigableSet getFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status, $r6;
        java.util.TreeSet set, $r0;
        java.util.Iterator l3;
        java.util.Map$Entry entry;
        java.util.SortedMap $r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r7;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo $r5;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        status := @parameter0: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        set = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Set entrySet()>();

        l3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r4;

        $r6 = $r5.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status>;

        if $r6 != status goto label2;

        $r7 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke set.<java.util.NavigableSet: boolean add(java.lang.Object)>($r7);

     label2:
        goto label1;

     label3:
        return set;
    }

    synchronized void updateFilesAtCheckpointEnd(berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState info;
        java.util.Set previouslyCleanedFiles, previouslyProcessedFiles;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0, $r4, $r5, $r7;
        java.lang.AssertionError $r1, $r6;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        info := @parameter0: berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState;

        $z0 = virtualinvoke info.<berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        previouslyCleanedFiles = virtualinvoke info.<berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState: java.util.Set getCleanedFiles()>();

        if previouslyCleanedFiles == null goto label4;

        $z1 = <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus CLEANED>;

        $z2 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean checkStatus(java.util.Collection,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(previouslyCleanedFiles, $r0);

        if $z2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $z3 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean anyPendingDuringCheckpoint>;

        if $z3 == 0 goto label2;

        $r4 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus CHECKPOINTED>;

        goto label3;

     label2:
        $r4 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus SAFE_TO_DELETE>;

     label3:
        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void setStatus(java.util.Collection,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(previouslyCleanedFiles, $r4);

     label4:
        previouslyProcessedFiles = virtualinvoke info.<berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState: java.util.Set getFullyProcessedFiles()>();

        if previouslyProcessedFiles == null goto label6;

        $z4 = <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled>;

        if $z4 != 0 goto label5;

        $r5 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus FULLY_PROCESSED>;

        $z5 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean checkStatus(java.util.Collection,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(previouslyProcessedFiles, $r5);

        if $z5 != 0 goto label5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label5:
        $r7 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus SAFE_TO_DELETE>;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void setStatus(java.util.Collection,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(previouslyProcessedFiles, $r7);

     label6:
        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void updateProcessedFiles()>();

     label7:
        return;
    }

    private boolean checkStatus(java.util.Collection, berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Collection files;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus expectStatus;
        java.util.Iterator l3;
        java.lang.Long fileNum;
        boolean $z0;
        java.lang.Object $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        files := @parameter0: java.util.Collection;

        expectStatus := @parameter1: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        l3 = interfaceinvoke files.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r0 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        fileNum = (java.lang.Long) $r0;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean checkStatus(java.lang.Long,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(fileNum, expectStatus);

        goto label1;

     label2:
        return 1;
    }

    private void setStatus(java.util.Collection, berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Collection files;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus newStatus;
        java.util.Iterator l3;
        java.lang.Long fileNum;
        boolean $z0;
        java.lang.Object $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        files := @parameter0: java.util.Collection;

        newStatus := @parameter1: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        l3 = interfaceinvoke files.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r0 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        fileNum = (java.lang.Long) $r0;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo setStatus(java.lang.Long,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(fileNum, newStatus);

        goto label1;

     label2:
        return;
    }

    private void updateProcessedFiles()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0, $r1;
        java.util.Map $r2;
        boolean $z0, $z1;
        java.util.Set $r3;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus CHECKPOINTED>;

        $r1 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus FULLY_PROCESSED>;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void setStatus(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r0, $r1);

     label1:
        return;
    }

    private void setStatus(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus, berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus oldStatus, newStatus, $r3;
        java.util.Iterator l3;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        java.util.SortedMap $r0;
        java.util.Collection $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        oldStatus := @parameter0: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        newStatus := @parameter1: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Collection values()>();

        l3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r2;

        $r3 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status>;

        if $r3 != oldStatus goto label2;

        info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status> = newStatus;

     label2:
        goto label1;

     label3:
        return;
    }

    private berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo setStatus(java.lang.Long, berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus newStatus;
        java.util.SortedMap $r0, $r3;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info#6, $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        fileNum := @parameter0: java.lang.Long;

        newStatus := @parameter1: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(fileNum);

        info#6 = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r1;

        if info#6 != null goto label1;

        $r2 = new berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo;

        specialinvoke $r2.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: void <init>(berkeley.com.sleepycat.je.cleaner.FileSelector$1)>(null);

        info#6 = $r2;

        $r3 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileNum, info#6);

     label1:
        info#6.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus status> = newStatus;

        return info#6;
    }

    synchronized boolean addPendingDB(berkeley.com.sleepycat.je.dbi.DatabaseId)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.dbi.DatabaseId dbId;
        boolean added;
        java.util.Set $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        dbId := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseId;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        added = interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(dbId);

        this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean anyPendingDuringCheckpoint> = 1;

        return added;
    }

    synchronized void removePendingLN(long)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        long originalLsn;
        java.util.Map $r0;
        java.lang.Long $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        originalLsn := @parameter0: long;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(originalLsn);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void updateProcessedFiles()>();

        return;
    }

    synchronized void removePendingDB(berkeley.com.sleepycat.je.dbi.DatabaseId)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.dbi.DatabaseId dbId;
        java.util.Set $r0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        dbId := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseId;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        interfaceinvoke $r0.<java.util.Set: boolean remove(java.lang.Object)>(dbId);

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void updateProcessedFiles()>();

        return;
    }

    synchronized berkeley.com.sleepycat.je.dbi.DatabaseId[] getPendingDBs()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.dbi.DatabaseId[] dbs;
        java.util.Set $r0, $r1, $r2;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        if $i0 <= 0 goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        $i1 = interfaceinvoke $r1.<java.util.Set: int size()>();

        dbs = newarray (berkeley.com.sleepycat.je.dbi.DatabaseId)[$i1];

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(dbs);

        return dbs;

     label1:
        return null;
    }

    synchronized java.util.Map getPendingLNs()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Map $r0, $r2;
        int $i0;
        java.util.HashMap $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 <= 0 goto label1;

        $r1 = new java.util.HashMap;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2);

        return $r1;

     label1:
        return null;
    }

    synchronized berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState getFilesAtCheckpointStart()
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.util.Map $r1;
        boolean $z0, $z1, $z2;
        java.util.Set $r2;
        berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState $r3;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r4, $r6;
        java.util.NavigableSet $r5, $r7;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Set pendingDBs>;

        $z1 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean anyPendingDuringCheckpoint> = $z2;

        $r3 = new berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState;

        $r4 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus CLEANED>;

        $r5 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.NavigableSet getFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r4);

        $r6 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus FULLY_PROCESSED>;

        $r7 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.NavigableSet getFiles(berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>($r6);

        specialinvoke $r3.<berkeley.com.sleepycat.je.cleaner.FileSelector$CheckpointStartCleanerState: void <init>(java.util.Set,java.util.Set,berkeley.com.sleepycat.je.cleaner.FileSelector$1)>($r5, $r7, null);

        return $r3;
    }

    synchronized void close(berkeley.com.sleepycat.je.dbi.MemoryBudget)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        berkeley.com.sleepycat.je.dbi.MemoryBudget budget;
        java.util.Iterator l2;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        java.util.SortedMap $r0;
        java.util.Collection $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.Set $r3;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        budget := @parameter0: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.SortedMap fileInfoMap>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.util.Collection values()>();

        l2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        info = (berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo) $r2;

        $r3 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: java.util.Set dbIds>;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void adjustMemoryBudget(berkeley.com.sleepycat.je.dbi.MemoryBudget,java.util.Set,java.util.Set)>(budget, $r3, null);

        goto label1;

     label2:
        return;
    }

    synchronized boolean addPendingLN(long, berkeley.com.sleepycat.je.cleaner.LNInfo)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        long logLsn;
        berkeley.com.sleepycat.je.cleaner.LNInfo info;
        java.util.Map $r0;
        java.lang.Long $r1;
        java.lang.Object $r2;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        logLsn := @parameter0: long;

        info := @parameter1: berkeley.com.sleepycat.je.cleaner.LNInfo;

        this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean anyPendingDuringCheckpoint> = 1;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.FileSelector: java.util.Map pendingLNs>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(logLsn);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, info);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    synchronized void addCleanedFile(java.lang.Long, java.util.Set, berkeley.com.sleepycat.je.utilint.VLSN, berkeley.com.sleepycat.je.utilint.VLSN, berkeley.com.sleepycat.je.dbi.MemoryBudget)
    {
        berkeley.com.sleepycat.je.cleaner.FileSelector this;
        java.lang.Long fileNum;
        java.util.Set databases, $r3;
        berkeley.com.sleepycat.je.utilint.VLSN firstVlsn, lastVlsn;
        berkeley.com.sleepycat.je.dbi.MemoryBudget budget;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo info;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus $r0, $r2;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.FileSelector;

        fileNum := @parameter0: java.lang.Long;

        databases := @parameter1: java.util.Set;

        firstVlsn := @parameter2: berkeley.com.sleepycat.je.utilint.VLSN;

        lastVlsn := @parameter3: berkeley.com.sleepycat.je.utilint.VLSN;

        budget := @parameter4: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        $z0 = <berkeley.com.sleepycat.je.cleaner.FileSelector: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus BEING_CLEANED>;

        $z1 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: boolean checkStatus(java.lang.Long,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(fileNum, $r0);

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = <berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus: berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus CLEANED>;

        info = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo setStatus(java.lang.Long,berkeley.com.sleepycat.je.cleaner.FileSelector$FileStatus)>(fileNum, $r2);

        $r3 = info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: java.util.Set dbIds>;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.FileSelector: void adjustMemoryBudget(berkeley.com.sleepycat.je.dbi.MemoryBudget,java.util.Set,java.util.Set)>(budget, $r3, databases);

        info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: java.util.Set dbIds> = databases;

        info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.utilint.VLSN firstVlsn> = firstVlsn;

        info.<berkeley.com.sleepycat.je.cleaner.FileSelector$FileInfo: berkeley.com.sleepycat.je.utilint.VLSN lastVlsn> = lastVlsn;

        return;
    }


