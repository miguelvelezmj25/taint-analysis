digraph getMaxEncodedLength {
"this := @this: kanzi.function.BWTBlockCodec {842103635}" -> "srcLen := @parameter0: int {298479521}";
"srcLen := @parameter0: int {298479521}" -> "$i0 = srcLen + 32 {1175755939}";
"$i0 = srcLen + 32 {1175755939}" -> "return $i0 {748736367}";
}

digraph forward {
"this := @this: kanzi.function.BWTBlockCodec {55101205}" -> "input := @parameter0: kanzi.SliceByteArray {682587285}";
"input := @parameter0: kanzi.SliceByteArray {682587285}" -> "output := @parameter1: kanzi.SliceByteArray {1642455459}";
"output := @parameter1: kanzi.SliceByteArray {1642455459}" -> "$z0 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(input) {808060856}";
"$z0 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(input) {808060856}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {857580975}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {857580975}" -> "if $z0 == 0 goto return 0 {2123104487}";
"if $z0 == 0 goto return 0 {2123104487}" -> "$z1 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(output) {1799093976}";
"if $z0 == 0 goto return 0 {2123104487}" -> "return 0 {222927025}";
"$z1 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(output) {1799093976}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {553223906}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {553223906}" -> "if $z1 != 0 goto $r0 = input.<kanzi.SliceByteArray: byte[] array> {197927872}";
"if $z1 != 0 goto $r0 = input.<kanzi.SliceByteArray: byte[] array> {197927872}" -> "return 0 {222927025}";
"if $z1 != 0 goto $r0 = input.<kanzi.SliceByteArray: byte[] array> {197927872}" -> "$r0 = input.<kanzi.SliceByteArray: byte[] array> {1393069115}";
"$r0 = input.<kanzi.SliceByteArray: byte[] array> {1393069115}" -> "$r1 = output.<kanzi.SliceByteArray: byte[] array> {1905495153}";
"$r1 = output.<kanzi.SliceByteArray: byte[] array> {1905495153}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {125291944}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {125291944}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {708400534}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {708400534}" -> "if $r0 != $r1 goto blockSize = input.<kanzi.SliceByteArray: int length> {1726852908}";
"if $r0 != $r1 goto blockSize = input.<kanzi.SliceByteArray: int length> {1726852908}" -> "return 0 {1264753407}";
"if $r0 != $r1 goto blockSize = input.<kanzi.SliceByteArray: int length> {1726852908}" -> "blockSize = input.<kanzi.SliceByteArray: int length> {966375245}";
"blockSize = input.<kanzi.SliceByteArray: int length> {966375245}" -> "$i0 = output.<kanzi.SliceByteArray: int length> {1217295741}";
"$i0 = output.<kanzi.SliceByteArray: int length> {1217295741}" -> "$i1 = output.<kanzi.SliceByteArray: int index> {1094162752}";
"$i1 = output.<kanzi.SliceByteArray: int index> {1094162752}" -> "$i2 = $i0 - $i1 {5043446}";
"$i2 = $i0 - $i1 {5043446}" -> "$i3 = virtualinvoke this.<kanzi.function.BWTBlockCodec: int getMaxEncodedLength(int)>(blockSize) {387147731}";
"$i3 = virtualinvoke this.<kanzi.function.BWTBlockCodec: int getMaxEncodedLength(int)>(blockSize) {387147731}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {457635911}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {457635911}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1085913516}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1085913516}" -> "if $i2 >= $i3 goto savedOIdx = output.<kanzi.SliceByteArray: int index> {1049129866}";
"if $i2 >= $i3 goto savedOIdx = output.<kanzi.SliceByteArray: int index> {1049129866}" -> "return 0 {1088254939}";
"if $i2 >= $i3 goto savedOIdx = output.<kanzi.SliceByteArray: int index> {1049129866}" -> "savedOIdx = output.<kanzi.SliceByteArray: int index> {749802323}";
"savedOIdx = output.<kanzi.SliceByteArray: int index> {749802323}" -> "chunks = staticinvoke <kanzi.transform.BWT: int getBWTChunks(int)>(blockSize) {1960678890}";
"chunks = staticinvoke <kanzi.transform.BWT: int getBWTChunks(int)>(blockSize) {1960678890}" -> "log#27 = 1 {533610031}";
"log#27 = 1 {533610031}" -> "$i4 = 1 << log#27 {228065030}";
"$i4 = 1 << log#27 {228065030}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {426723790}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {426723790}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(blockSize) {902241892}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(blockSize) {902241892}" -> "if $i4 > blockSize goto log#32 = log#27 + -1 {1075231262}";
"if $i4 > blockSize goto log#32 = log#27 + -1 {1075231262}" -> "log#27 = log#27 + 1 {787638654}";
"if $i4 > blockSize goto log#32 = log#27 + -1 {1075231262}" -> "log#32 = log#27 + -1 {1258342494}";
"log#27 = log#27 + 1 {787638654}" -> "goto [?= $i4 = 1 << log#27] {481283177}";
"goto [?= $i4 = 1 << log#27] {481283177}" -> "$i4 = 1 << log#27 {228065030}";
"log#32 = log#27 + -1 {1258342494}" -> "$i5 = 2 + log#32 {739656853}";
"$i5 = 2 + log#32 {739656853}" -> "$i6 = chunks * $i5 {141202544}";
"$i6 = chunks * $i5 {141202544}" -> "$i7 = $i6 + 7 {403765728}";
"$i7 = $i6 + 7 {403765728}" -> "headerSizeBytes1 = $i7 >>> 3 {1338280850}";
"headerSizeBytes1 = $i7 >>> 3 {1338280850}" -> "$i8 = output.<kanzi.SliceByteArray: int index> {1208183382}";
"$i8 = output.<kanzi.SliceByteArray: int index> {1208183382}" -> "$i9 = $i8 + headerSizeBytes1 {1351119138}";
"$i9 = $i8 + headerSizeBytes1 {1351119138}" -> "output.<kanzi.SliceByteArray: int index> = $i9 {475960154}";
"output.<kanzi.SliceByteArray: int index> = $i9 {475960154}" -> "$i10 = output.<kanzi.SliceByteArray: int length> {2015101267}";
"$i10 = output.<kanzi.SliceByteArray: int length> {2015101267}" -> "$i11 = $i10 - headerSizeBytes1 {1067020001}";
"$i11 = $i10 - headerSizeBytes1 {1067020001}" -> "output.<kanzi.SliceByteArray: int length> = $i11 {669802647}";
"output.<kanzi.SliceByteArray: int length> = $i11 {669802647}" -> "$r4 = this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> {730613700}";
"$r4 = this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> {730613700}" -> "$z2 = virtualinvoke $r4.<kanzi.transform.BWT: boolean forward(kanzi.SliceByteArray,kanzi.SliceByteArray)>(input, output) {858629795}";
"$z2 = virtualinvoke $r4.<kanzi.transform.BWT: boolean forward(kanzi.SliceByteArray,kanzi.SliceByteArray)>(input, output) {858629795}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {2031761054}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {2031761054}" -> "if $z2 != 0 goto headerSizeBytes2#59 = 0 {2060875109}";
"if $z2 != 0 goto headerSizeBytes2#59 = 0 {2060875109}" -> "return 0 {1602374318}";
"if $z2 != 0 goto headerSizeBytes2#59 = 0 {2060875109}" -> "headerSizeBytes2#59 = 0 {409093061}";
"headerSizeBytes2#59 = 0 {409093061}" -> "i#61 = 0 {1025781158}";
"i#61 = 0 {1025781158}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#61) {952018345}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#61) {952018345}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chunks) {280550118}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chunks) {280550118}" -> "if i#61 >= chunks goto $i14 = headerSizeBytes2#59 + 7 {1362373804}";
"if i#61 >= chunks goto $i14 = headerSizeBytes2#59 + 7 {1362373804}" -> "$r5 = this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> {1811454316}";
"if i#61 >= chunks goto $i14 = headerSizeBytes2#59 + 7 {1362373804}" -> "$i14 = headerSizeBytes2#59 + 7 {1113056676}";
"$r5 = this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> {1811454316}" -> "primaryIndex = virtualinvoke $r5.<kanzi.transform.BWT: int getPrimaryIndex(int)>(i#61) {1449485908}";
"primaryIndex = virtualinvoke $r5.<kanzi.transform.BWT: int getPrimaryIndex(int)>(i#61) {1449485908}" -> "pIndexSizeBits#69 = 6 {441363467}";
"pIndexSizeBits#69 = 6 {441363467}" -> "$i12 = 1 << pIndexSizeBits#69 {2060882340}";
"$i12 = 1 << pIndexSizeBits#69 {2060882340}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12) {656608449}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12) {656608449}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(primaryIndex) {1266761809}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(primaryIndex) {1266761809}" -> "if $i12 > primaryIndex goto $i13 = 2 + pIndexSizeBits#69 {1405348573}";
"if $i12 > primaryIndex goto $i13 = 2 + pIndexSizeBits#69 {1405348573}" -> "pIndexSizeBits#69 = pIndexSizeBits#69 + 1 {2035139676}";
"if $i12 > primaryIndex goto $i13 = 2 + pIndexSizeBits#69 {1405348573}" -> "$i13 = 2 + pIndexSizeBits#69 {893707207}";
"pIndexSizeBits#69 = pIndexSizeBits#69 + 1 {2035139676}" -> "goto [?= $i12 = 1 << pIndexSizeBits#69] {936915296}";
"goto [?= $i12 = 1 << pIndexSizeBits#69] {936915296}" -> "$i12 = 1 << pIndexSizeBits#69 {2060882340}";
"$i13 = 2 + pIndexSizeBits#69 {893707207}" -> "headerSizeBytes2#59 = headerSizeBytes2#59 + $i13 {901460987}";
"headerSizeBytes2#59 = headerSizeBytes2#59 + $i13 {901460987}" -> "i#61 = i#61 + 1 {2052768367}";
"i#61 = i#61 + 1 {2052768367}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#61)] {1746029624}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#61)] {1746029624}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#61) {952018345}";
"$i14 = headerSizeBytes2#59 + 7 {1113056676}" -> "headerSizeBytes2#84 = $i14 >>> 3 {306580787}";
"headerSizeBytes2#84 = $i14 >>> 3 {306580787}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerSizeBytes2#84) {1937424390}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerSizeBytes2#84) {1937424390}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerSizeBytes1) {2126763059}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerSizeBytes1) {2126763059}" -> "if headerSizeBytes2#84 == headerSizeBytes1 goto idx#106 = savedOIdx {1965143451}";
"if headerSizeBytes2#84 == headerSizeBytes1 goto idx#106 = savedOIdx {1965143451}" -> "$r6 = output.<kanzi.SliceByteArray: byte[] array> {890219014}";
"if headerSizeBytes2#84 == headerSizeBytes1 goto idx#106 = savedOIdx {1965143451}" -> "idx#106 = savedOIdx {1005662205}";
"$r6 = output.<kanzi.SliceByteArray: byte[] array> {890219014}" -> "$i15 = savedOIdx + headerSizeBytes1 {1950160790}";
"$i15 = savedOIdx + headerSizeBytes1 {1950160790}" -> "$r7 = output.<kanzi.SliceByteArray: byte[] array> {2075884759}";
"$r7 = output.<kanzi.SliceByteArray: byte[] array> {2075884759}" -> "$i16 = savedOIdx + headerSizeBytes2#84 {1981586813}";
"$i16 = savedOIdx + headerSizeBytes2#84 {1981586813}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i15, $r7, $i16, blockSize) {995298430}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i15, $r7, $i16, blockSize) {995298430}" -> "$i17 = output.<kanzi.SliceByteArray: int index> {1242223100}";
"$i17 = output.<kanzi.SliceByteArray: int index> {1242223100}" -> "$i18 = $i17 - headerSizeBytes1 {1480266933}";
"$i18 = $i17 - headerSizeBytes1 {1480266933}" -> "$i19 = $i18 + headerSizeBytes2#84 {1271902162}";
"$i19 = $i18 + headerSizeBytes2#84 {1271902162}" -> "output.<kanzi.SliceByteArray: int index> = $i19 {1792471656}";
"output.<kanzi.SliceByteArray: int index> = $i19 {1792471656}" -> "idx#106 = savedOIdx {1005662205}";
"idx#106 = savedOIdx {1005662205}" -> "i#108 = 0 {1924124056}";
"i#108 = 0 {1924124056}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#108) {1705256640}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#108) {1705256640}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chunks) {1090236546}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chunks) {1090236546}" -> "if i#108 >= chunks goto return 1 {26797347}";
"if i#108 >= chunks goto return 1 {26797347}" -> "$r8 = this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> {1364155626}";
"if i#108 >= chunks goto return 1 {26797347}" -> "return 1 {108460100}";
"$r8 = this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> {1364155626}" -> "primaryIndex = virtualinvoke $r8.<kanzi.transform.BWT: int getPrimaryIndex(int)>(i#108) {548502576}";
"primaryIndex = virtualinvoke $r8.<kanzi.transform.BWT: int getPrimaryIndex(int)>(i#108) {548502576}" -> "pIndexSizeBits#116 = 6 {1095198680}";
"pIndexSizeBits#116 = 6 {1095198680}" -> "$i20 = 1 << pIndexSizeBits#116 {1297172309}";
"$i20 = 1 << pIndexSizeBits#116 {1297172309}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i20) {246396329}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i20) {246396329}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(primaryIndex) {981421131}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(primaryIndex) {981421131}" -> "if $i20 > primaryIndex goto $i21 = 2 + pIndexSizeBits#116 {997953653}";
"if $i20 > primaryIndex goto $i21 = 2 + pIndexSizeBits#116 {997953653}" -> "pIndexSizeBits#116 = pIndexSizeBits#116 + 1 {505300320}";
"if $i20 > primaryIndex goto $i21 = 2 + pIndexSizeBits#116 {997953653}" -> "$i21 = 2 + pIndexSizeBits#116 {1904325556}";
"pIndexSizeBits#116 = pIndexSizeBits#116 + 1 {505300320}" -> "goto [?= $i20 = 1 << pIndexSizeBits#116] {1504891417}";
"goto [?= $i20 = 1 << pIndexSizeBits#116] {1504891417}" -> "$i20 = 1 << pIndexSizeBits#116 {1297172309}";
"$i21 = 2 + pIndexSizeBits#116 {1904325556}" -> "$i22 = $i21 + 7 {2081442706}";
"$i22 = $i21 + 7 {2081442706}" -> "pIndexSizeBytes = $i22 >>> 3 {2145019855}";
"pIndexSizeBytes = $i22 >>> 3 {2145019855}" -> "$i23 = pIndexSizeBytes - 1 {1161244064}";
"$i23 = pIndexSizeBytes - 1 {1161244064}" -> "shift#133 = $i23 << 3 {190646474}";
"shift#133 = $i23 << 3 {190646474}" -> "$i24 = pIndexSizeBits#116 + 1 {166356295}";
"$i24 = pIndexSizeBits#116 + 1 {166356295}" -> "blockMode#139 = $i24 >>> 3 {396089109}";
"blockMode#139 = $i24 >>> 3 {396089109}" -> "$i25 = blockMode#139 << 6 {1471475323}";
"$i25 = blockMode#139 << 6 {1471475323}" -> "$i26 = primaryIndex >>> shift#133 {1958098662}";
"$i26 = primaryIndex >>> shift#133 {1958098662}" -> "$i27 = $i26 & 63 {1869824202}";
"$i27 = $i26 & 63 {1869824202}" -> "blockMode#149 = $i25 | $i27 {1391966842}";
"blockMode#149 = $i25 | $i27 {1391966842}" -> "$r9 = output.<kanzi.SliceByteArray: byte[] array> {758458356}";
"$r9 = output.<kanzi.SliceByteArray: byte[] array> {758458356}" -> "$i28 = idx#106 {662152561}";
"$i28 = idx#106 {662152561}" -> "idx#106 = idx#106 + 1 {1211953039}";
"idx#106 = idx#106 + 1 {1211953039}" -> "$b29 = (byte) blockMode#149 {1044121868}";
"$b29 = (byte) blockMode#149 {1044121868}" -> "$r9[$i28] = $b29 {620392343}";
"$r9[$i28] = $b29 {620392343}" -> "n#156 = 1 {2075808967}";
"n#156 = 1 {2075808967}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#156) {2115469199}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#156) {2115469199}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pIndexSizeBytes) {977388715}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pIndexSizeBytes) {977388715}" -> "if n#156 >= pIndexSizeBytes goto i#108 = i#108 + 1 {222786251}";
"if n#156 >= pIndexSizeBytes goto i#108 = i#108 + 1 {222786251}" -> "shift#133 = shift#133 + -8 {611451848}";
"if n#156 >= pIndexSizeBytes goto i#108 = i#108 + 1 {222786251}" -> "i#108 = i#108 + 1 {2114427636}";
"shift#133 = shift#133 + -8 {611451848}" -> "$r10 = output.<kanzi.SliceByteArray: byte[] array> {475856788}";
"$r10 = output.<kanzi.SliceByteArray: byte[] array> {475856788}" -> "$i30 = idx#106 {716904446}";
"$i30 = idx#106 {716904446}" -> "idx#106 = idx#106 + 1 {509816098}";
"idx#106 = idx#106 + 1 {509816098}" -> "$i31 = primaryIndex >> shift#133 {861532042}";
"$i31 = primaryIndex >> shift#133 {861532042}" -> "$b32 = (byte) $i31 {877973246}";
"$b32 = (byte) $i31 {877973246}" -> "$r10[$i30] = $b32 {693905843}";
"$r10[$i30] = $b32 {693905843}" -> "n#156 = n#156 + 1 {275714698}";
"n#156 = n#156 + 1 {275714698}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#156)] {1815513778}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#156)] {1815513778}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#156) {2115469199}";
"i#108 = i#108 + 1 {2114427636}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#108)] {912143670}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#108)] {912143670}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#108) {1705256640}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1085913516}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(primaryIndex) {981421131}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i20) {246396329}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {457635911}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {857580975}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#61) {952018345}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerSizeBytes2#84) {1937424390}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(primaryIndex) {1266761809}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {553223906}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chunks) {280550118}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pIndexSizeBytes) {977388715}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {125291944}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chunks) {1090236546}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerSizeBytes1) {2126763059}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12) {656608449}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(blockSize) {902241892}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {708400534}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#156) {2115469199}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {426723790}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {2031761054}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#108) {1705256640}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: kanzi.function.BWTBlockCodec {1027862356}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {46585602}";
"specialinvoke this.<java.lang.Object: void <init>()>() {46585602}" -> "$r0 = new kanzi.transform.BWT {1451642101}";
"$r0 = new kanzi.transform.BWT {1451642101}" -> "specialinvoke $r0.<kanzi.transform.BWT: void <init>()>() {1699759662}";
"specialinvoke $r0.<kanzi.transform.BWT: void <init>()>() {1699759662}" -> "this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> = $r0 {22372245}";
"this.<kanzi.function.BWTBlockCodec: kanzi.transform.BWT bwt> = $r0 {22372245}" -> "return {73630640}";
}


