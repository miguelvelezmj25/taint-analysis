    public void <init>(java.io.OutputStream, int)
    {
        com.googlecode.pngtastic.core.processing.Base64$OutputStream this;
        java.io.OutputStream out;
        int options, $i0, $i1, $i3;
        boolean $z0, $z1, $z2;
        byte $b2;
        byte[] $r3, $r4, $r5;

        this := @this: com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        out := @parameter0: java.io.OutputStream;

        options := @parameter1: int;

        specialinvoke this.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(out);

        $i0 = options & 8;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean breakLines> = $z0;

        $i1 = options & 1;

        if $i1 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode> = $z1;

        $z2 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode>;

        if $z2 == 0 goto label5;

        $b2 = 3;

        goto label6;

     label5:
        $b2 = 4;

     label6:
        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength> = $b2;

        $i3 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength>;

        $r3 = newarray (byte)[$i3];

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer> = $r3;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = 0;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int lineLength> = 0;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean suspendEncoding> = 0;

        $r4 = newarray (byte)[4];

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4> = $r4;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int options> = options;

        $r5 = staticinvoke <com.googlecode.pngtastic.core.processing.Base64: byte[] access$000(int)>(options);

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] decodabet> = $r5;

        return;
    }

    public void close() throws java.io.IOException
    {
        com.googlecode.pngtastic.core.processing.Base64$OutputStream this;

        this := @this: com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        virtualinvoke this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: void flushBase64()>();

        specialinvoke this.<java.io.FilterOutputStream: void close()>();

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer> = null;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out> = null;

        return;
    }

    public void flushBase64() throws java.io.IOException
    {
        com.googlecode.pngtastic.core.processing.Base64$OutputStream this;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        java.io.OutputStream $r0;
        byte[] $r1, $r2, $r3;
        java.io.IOException $r4;

        this := @this: com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        $i0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label4;

        $z2 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode>;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label3;

        $r0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        $r1 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4>;

        $r2 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer>;

        $i1 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        $i2 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int options>;

        $r3 = staticinvoke <com.googlecode.pngtastic.core.processing.Base64: byte[] access$300(byte[],byte[],int,int)>($r1, $r2, $i1, $i2);

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[])>($r3);

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = 0;

        goto label4;

     label3:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Base64 input not properly padded.");

        throw $r4;

     label4:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.googlecode.pngtastic.core.processing.Base64$OutputStream this;
        byte[] theBytes;
        int off, len, i#10, $i0;
        boolean $z0, $z1;
        java.io.OutputStream $r0;
        byte $b1;

        this := @this: com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        theBytes := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $z0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean suspendEncoding>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>(theBytes, off, len);

        return;

     label1:
        i#10 = 0;

     label2:
        if i#10 >= len goto label3;

        $i0 = off + i#10;

        $b1 = theBytes[$i0];

        virtualinvoke this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: void write(int)>($b1);

        i#10 = i#10 + 1;

        goto label2;

     label3:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        com.googlecode.pngtastic.core.processing.Base64$OutputStream this;
        int theByte, len, $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i15, $i16, $i17, $i18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.io.OutputStream $r0, $r3, $r8, $r14;
        byte[] $r1, $r4, $r5, $r6, $r9, $r10, $r12, $r13, $r15, $r16;
        byte $b2, $b11, $b14, $b19;
        java.io.IOException $r17;

        this := @this: com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        theByte := @parameter0: int;

        $z0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean suspendEncoding>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label01;

        $r0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>(theByte);

        return;

     label01:
        $z2 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode>;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label07;

        $r1 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer>;

        $i0 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        $i1 = $i0 + 1;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = $i1;

        $b2 = (byte) theByte;

        $r1[$i0] = $b2;

        $i3 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        $i4 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength>;

        if $i3 < $i4 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label15;

        $r3 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        $r4 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4>;

        $r5 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer>;

        $i5 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength>;

        $i6 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int options>;

        $r6 = staticinvoke <com.googlecode.pngtastic.core.processing.Base64: byte[] access$300(byte[],byte[],int,int)>($r4, $r5, $i5, $i6);

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r6);

        $i7 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int lineLength>;

        $i8 = $i7 + 4;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int lineLength> = $i8;

        $z6 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean breakLines>;

        if $z6 == 0 goto label04;

        $i9 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int lineLength>;

        if $i9 < 76 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label06;

        $r8 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        virtualinvoke $r8.<java.io.OutputStream: void write(int)>(10);

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int lineLength> = 0;

     label06:
        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = 0;

        goto label15;

     label07:
        $r9 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] decodabet>;

        $i10 = theByte & 127;

        $b11 = $r9[$i10];

        if $b11 <= -5 goto label08;

        $z9 = 1;

        goto label09;

     label08:
        $z9 = 0;

     label09:
        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z9);

        if $z10 == 0 goto label12;

        $r10 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer>;

        $i12 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        $i13 = $i12 + 1;

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = $i13;

        $b14 = (byte) theByte;

        $r10[$i12] = $b14;

        $i15 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        $i16 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength>;

        if $i15 < $i16 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        $z12 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z11);

        if $z12 == 0 goto label15;

        $r12 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer>;

        $r13 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4>;

        $i17 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int options>;

        len = staticinvoke <com.googlecode.pngtastic.core.processing.Base64: int access$200(byte[],int,byte[],int,int)>($r12, 0, $r13, 0, $i17);

        $r14 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        $r15 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4>;

        virtualinvoke $r14.<java.io.OutputStream: void write(byte[],int,int)>($r15, 0, len);

        this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = 0;

        goto label15;

     label12:
        $r16 = this.<com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] decodabet>;

        $i18 = theByte & 127;

        $b19 = $r16[$i18];

        if $b19 == -5 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        $z14 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z13);

        if $z14 == 0 goto label15;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Invalid character in Base64 data.");

        throw $r17;

     label15:
        return;
    }


