    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockManager: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>(envImpl);

        return;
    }

    void dumpLockTable(berkeley.com.sleepycat.je.utilint.StatGroup, boolean)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        berkeley.com.sleepycat.je.utilint.StatGroup stats;
        boolean clear;
        berkeley.com.sleepycat.je.latch.Latch l4, $r1;
        java.lang.Throwable l5, $r2;
        int i#2, $i0;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        stats := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        clear := @parameter1: boolean;

        i#2 = 0;

     label1:
        $i0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int nLockTables>;

        if i#2 >= $i0 goto label8;

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[i#2];

        l4 = $r1;

        entermonitor $r1;

     label2:
        virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: void dumpLockTableInternal(berkeley.com.sleepycat.je.utilint.StatGroup,int,boolean)>(stats, i#2, clear);

        exitmonitor l4;

     label3:
        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        l5 = $r2;

        exitmonitor l4;

     label6:
        throw l5;

     label7:
        i#2 = i#2 + 1;

        goto label1;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    java.util.Set releaseAndFindNotifyTargets(long, berkeley.com.sleepycat.je.txn.Locker)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        long lsn;
        berkeley.com.sleepycat.je.txn.Locker locker;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l5, $r1;
        java.lang.Throwable l6, $r3;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        java.util.Set $r2;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: long;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l5 = $r1;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: java.util.Set releaseAndFindNotifyTargetsInternal(long,berkeley.com.sleepycat.je.txn.Locker,int)>(lsn, locker, lockTableIndex);

        exitmonitor l5;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        l6 = $r3;

        exitmonitor l5;

     label5:
        throw l6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isLockUncontended(java.lang.Long)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        java.lang.Long lsn;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l3, $r1;
        java.lang.Throwable l4, $r2;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: java.lang.Long;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l3 = $r1;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: boolean isLockUncontendedInternal(java.lang.Long,int)>(lsn, lockTableIndex);

        exitmonitor l3;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

     label4:
        l4 = $r2;

        exitmonitor l3;

     label5:
        throw l4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    berkeley.com.sleepycat.je.txn.LockAttemptResult attemptLock(java.lang.Long, berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.txn.LockType, boolean, boolean) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        java.lang.Long lsn;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.txn.LockType type;
        boolean nonBlockingRequest, jumpAheadOfWaiters;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l7, $r1;
        java.lang.Throwable l8, $r3;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        berkeley.com.sleepycat.je.txn.LockAttemptResult $r2;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: java.lang.Long;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        type := @parameter2: berkeley.com.sleepycat.je.txn.LockType;

        nonBlockingRequest := @parameter3: boolean;

        jumpAheadOfWaiters := @parameter4: boolean;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l7 = $r1;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.txn.LockAttemptResult attemptLockInternal(java.lang.Long,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,int)>(lsn, locker, type, nonBlockingRequest, jumpAheadOfWaiters, lockTableIndex);

        exitmonitor l7;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        l8 = $r3;

        exitmonitor l7;

     label5:
        throw l8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean validateOwnership(java.lang.Long, berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.txn.LockType, boolean, boolean, java.util.Set, java.util.List)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        java.lang.Long lsn;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.txn.LockType type;
        boolean getOwnersAndWaiters, flushFromWaiters, $z0;
        java.util.Set owners;
        java.util.List waiters;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l9, $r1;
        java.lang.Throwable l10, $r2;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: java.lang.Long;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        type := @parameter2: berkeley.com.sleepycat.je.txn.LockType;

        getOwnersAndWaiters := @parameter3: boolean;

        flushFromWaiters := @parameter4: boolean;

        owners := @parameter5: java.util.Set;

        waiters := @parameter6: java.util.List;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l9 = $r1;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: boolean validateOwnershipInternal(java.lang.Long,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,int,java.util.Set,java.util.List)>(lsn, locker, type, getOwnersAndWaiters, flushFromWaiters, lockTableIndex, owners, waiters);

        exitmonitor l9;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

     label4:
        l10 = $r2;

        exitmonitor l9;

     label5:
        throw l10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isOwner(java.lang.Long, berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.txn.LockType)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        java.lang.Long lsn;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.txn.LockType type;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l5, $r1;
        java.lang.Throwable l6, $r2;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: java.lang.Long;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        type := @parameter2: berkeley.com.sleepycat.je.txn.LockType;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l5 = $r1;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: boolean isOwnerInternal(java.lang.Long,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType,int)>(lsn, locker, type, lockTableIndex);

        exitmonitor l5;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

     label4:
        l6 = $r2;

        exitmonitor l5;

     label5:
        throw l6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public berkeley.com.sleepycat.je.txn.LockAttemptResult stealLock(java.lang.Long, berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.txn.LockType) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        java.lang.Long lsn;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.txn.LockType lockType;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l5, $r1;
        java.lang.Throwable l6, $r3;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        berkeley.com.sleepycat.je.txn.LockAttemptResult $r2;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: java.lang.Long;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        lockType := @parameter2: berkeley.com.sleepycat.je.txn.LockType;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l5 = $r1;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.txn.LockAttemptResult stealLockInternal(java.lang.Long,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType,int)>(lsn, locker, lockType, lockTableIndex);

        exitmonitor l5;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        l6 = $r3;

        exitmonitor l5;

     label5:
        throw l6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    berkeley.com.sleepycat.je.txn.LockManager$TimeoutInfo getTimeoutInfo(boolean, berkeley.com.sleepycat.je.txn.Locker, long, berkeley.com.sleepycat.je.txn.LockType, berkeley.com.sleepycat.je.txn.LockGrantType, berkeley.com.sleepycat.je.txn.Lock, long, long, long, berkeley.com.sleepycat.je.dbi.DatabaseImpl, java.util.Set, java.util.List)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        boolean isLockNotTxnTimeout;
        berkeley.com.sleepycat.je.txn.Locker locker;
        long lsn, timeout, start, now;
        berkeley.com.sleepycat.je.txn.LockType type;
        berkeley.com.sleepycat.je.txn.LockGrantType grantType;
        berkeley.com.sleepycat.je.txn.Lock useLock;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl database;
        java.util.Set owners;
        java.util.List waiters;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l18, $r1;
        java.lang.Throwable l19, $r3;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        berkeley.com.sleepycat.je.txn.LockManager$TimeoutInfo $r2;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        isLockNotTxnTimeout := @parameter0: boolean;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        lsn := @parameter2: long;

        type := @parameter3: berkeley.com.sleepycat.je.txn.LockType;

        grantType := @parameter4: berkeley.com.sleepycat.je.txn.LockGrantType;

        useLock := @parameter5: berkeley.com.sleepycat.je.txn.Lock;

        timeout := @parameter6: long;

        start := @parameter7: long;

        now := @parameter8: long;

        database := @parameter9: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        owners := @parameter10: java.util.Set;

        waiters := @parameter11: java.util.List;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l18 = $r1;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.txn.LockManager$TimeoutInfo getTimeoutInfoInternal(boolean,berkeley.com.sleepycat.je.txn.Locker,long,berkeley.com.sleepycat.je.txn.LockType,berkeley.com.sleepycat.je.txn.LockGrantType,berkeley.com.sleepycat.je.txn.Lock,long,long,long,berkeley.com.sleepycat.je.dbi.DatabaseImpl,java.util.Set,java.util.List)>(isLockNotTxnTimeout, locker, lsn, type, grantType, useLock, timeout, start, now, database, owners, waiters);

        exitmonitor l18;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        l19 = $r3;

        exitmonitor l18;

     label5:
        throw l19;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void demote(long, berkeley.com.sleepycat.je.txn.Locker)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        long lsn;
        berkeley.com.sleepycat.je.txn.Locker locker;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l5, $r1;
        java.lang.Throwable l6, $r2;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: long;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l5 = $r1;

        entermonitor $r1;

     label1:
        virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: void demoteInternal(long,berkeley.com.sleepycat.je.txn.Locker,int)>(lsn, locker, lockTableIndex);

        exitmonitor l5;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        l6 = $r2;

        exitmonitor l5;

     label5:
        throw l6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean ownsOrSharesLock(berkeley.com.sleepycat.je.txn.Locker, java.lang.Long)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        berkeley.com.sleepycat.je.txn.Locker locker;
        java.lang.Long lsn;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l4, $r1;
        java.lang.Throwable l5, $r2;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        locker := @parameter0: berkeley.com.sleepycat.je.txn.Locker;

        lsn := @parameter1: java.lang.Long;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l4 = $r1;

        entermonitor $r1;

     label1:
        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: boolean ownsOrSharesLockInternal(berkeley.com.sleepycat.je.txn.Locker,java.lang.Long,int)>(locker, lsn, lockTableIndex);

        exitmonitor l4;

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

     label4:
        l5 = $r2;

        exitmonitor l4;

     label5:
        throw l5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.Set getOwners(java.lang.Long)
    {
        berkeley.com.sleepycat.je.txn.SyncedLockManager this;
        java.lang.Long lsn;
        int lockTableIndex;
        berkeley.com.sleepycat.je.latch.Latch l3, $r1;
        java.lang.Throwable l4, $r3;
        berkeley.com.sleepycat.je.latch.Latch[] $r0;
        java.util.Set $r2;

        this := @this: berkeley.com.sleepycat.je.txn.SyncedLockManager;

        lsn := @parameter0: java.lang.Long;

        lockTableIndex = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: int getLockTableIndex(java.lang.Long)>(lsn);

        $r0 = this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: berkeley.com.sleepycat.je.latch.Latch[] lockTableLatches>;

        $r1 = $r0[lockTableIndex];

        l3 = $r1;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.SyncedLockManager: java.util.Set getOwnersInternal(java.lang.Long,int)>(lsn, lockTableIndex);

        exitmonitor l3;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        l4 = $r3;

        exitmonitor l3;

     label5:
        throw l4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }


