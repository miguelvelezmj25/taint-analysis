{
  "basic0": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic1": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic2": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic3": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic4": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic5": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic6": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic7": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic8": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic9": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic10": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic11": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "basic12": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "sleep0": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "sleep1": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "union0": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "union2": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionC(boolean)>",
        "option": "C"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "pngtasticColorCounter": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFreqThreshold(boolean)>",
        "option": "FREQTHRESHOLD"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDistThreshold(boolean)>",
        "option": "DISTTHRESHOLD"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMinAlpha(boolean)>",
        "option": "MINALPHA"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTimeout(boolean)>",
        "option": "TIMEOUT"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLogLevel(boolean)>",
        "option": "LOGLEVEL"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "pngtasticOptimizer": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREMOVEGAMMA(boolean)>",
        "option": "REMOVEGAMMA"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSIONLEVEL(boolean)>",
        "option": "COMPRESSIONLEVEL"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSOR(boolean)>",
        "option": "COMPRESSOR"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionITERATIONS(boolean)>",
        "option": "ITERATIONS"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLOGLEVEL(boolean)>",
        "option": "LOGLEVEL"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "elevator": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREBASE(boolean)>",
        "option": "FEATUREBASE"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREWEIGHT(boolean)>",
        "option": "FEATUREWEIGHT"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREEMPTY(boolean)>",
        "option": "FEATUREEMPTY"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATURETWOTHIRDSFULL(boolean)>",
        "option": "FEATURETWOTHIRDSFULL"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREEXECUTIVEFLOOR(boolean)>",
        "option": "FEATUREEXECUTIVEFLOOR"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREOVERLOADED(boolean)>",
        "option": "FEATUREOVERLOADED"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "zipme": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATURECRC(boolean)>",
        "option": "FEATURECRC"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREArchiveCheck(boolean)>",
        "option": "FEATUREArchiveCheck"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREAdlerThreeTwoChecksum(boolean)>",
        "option": "FEATUREAdlerThreeTwoChecksum"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeGZIPCRC(boolean)>",
        "option": "FEATUREDerivativeGZIPCRC"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressCRC(boolean)>",
        "option": "FEATUREDerivativeCompressCRC"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeExtractCRC(boolean)>",
        "option": "FEATUREDerivativeExtractCRC"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressGZIP(boolean)>",
        "option": "FEATUREDerivativeCompressGZIP"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressAdlerThreeTwoChecksum(boolean)>",
        "option": "FEATUREDerivativeCompressAdlerThreeTwoChecksum"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressGZIPCRC(boolean)>",
        "option": "FEATUREDerivativeCompressGZIPCRC"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "find": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionD(boolean)>",
        "option": "D"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionI(boolean)>",
        "option": "I"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionO(boolean)>",
        "option": "O"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  },
  "running-example": {
    "sources": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionA(boolean)>",
        "option": "A"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionB(boolean)>",
        "option": "B"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionC(boolean)>",
        "option": "C"
      },
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionD(boolean)>",
        "option": "D"
      }
    ],
    "sinks": [
      {
        "method": "<edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>"
      }
    ]
  }
}

