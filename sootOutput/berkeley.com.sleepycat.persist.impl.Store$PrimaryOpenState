    void addDatabase(berkeley.com.sleepycat.je.Database)
    {
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState this;
        berkeley.com.sleepycat.je.Database db;
        java.util.IdentityHashMap $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        db := @parameter0: berkeley.com.sleepycat.je.Database;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.IdentityHashMap databases>;

        virtualinvoke $r0.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(db, null);

        return;
    }

    void undoState()
    {
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState this;
        java.lang.Exception l3, $r3;
        java.lang.String secName, $r6;
        java.util.IdentityHashMap $r0, $r13, $r17;
        java.util.Set $r1, $r8, $r14;
        java.util.Iterator l1#5, l1#23, l1#38;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r9, $r15;
        berkeley.com.sleepycat.je.Database db#11, db#44;
        berkeley.com.sleepycat.persist.impl.Store $r4, $r10, $r16;
        java.util.Map $r5, $r11;

        this := @this: berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.IdentityHashMap databases>;

        $r1 = virtualinvoke $r0.<java.util.IdentityHashMap: java.util.Set keySet()>();

        l1#5 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l1#5.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label06;

        $r2 = interfaceinvoke l1#5.<java.util.Iterator: java.lang.Object next()>();

        db#11 = (berkeley.com.sleepycat.je.Database) $r2;

     label02:
        virtualinvoke db#11.<berkeley.com.sleepycat.je.Database: void close()>();

     label03:
        goto label05;

     label04:
        $r3 := @caughtexception;

        l3 = $r3;

     label05:
        goto label01;

     label06:
        $r4 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: berkeley.com.sleepycat.persist.impl.Store this$0>;

        $r5 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.util.Map access$000(berkeley.com.sleepycat.persist.impl.Store)>($r4);

        $r6 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.lang.String entityClassName>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        $r8 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.Set secNames>;

        l1#23 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke l1#23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke l1#23.<java.util.Iterator: java.lang.Object next()>();

        secName = (java.lang.String) $r9;

        $r10 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: berkeley.com.sleepycat.persist.impl.Store this$0>;

        $r11 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.util.Map access$100(berkeley.com.sleepycat.persist.impl.Store)>($r10);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(secName);

        goto label07;

     label08:
        $r13 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.IdentityHashMap databases>;

        $r14 = virtualinvoke $r13.<java.util.IdentityHashMap: java.util.Set keySet()>();

        l1#38 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke l1#38.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label10;

        $r15 = interfaceinvoke l1#38.<java.util.Iterator: java.lang.Object next()>();

        db#44 = (berkeley.com.sleepycat.je.Database) $r15;

        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: berkeley.com.sleepycat.persist.impl.Store this$0>;

        $r17 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.util.IdentityHashMap access$200(berkeley.com.sleepycat.persist.impl.Store)>($r16);

        virtualinvoke $r17.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>(db#44);

        goto label09;

     label10:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
    }

    void <init>(berkeley.com.sleepycat.persist.impl.Store, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState this;
        berkeley.com.sleepycat.persist.impl.Store l1;
        java.lang.String entityClassName;
        java.util.IdentityHashMap $r0;
        java.util.HashSet $r1;

        this := @this: berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        l1 := @parameter0: berkeley.com.sleepycat.persist.impl.Store;

        entityClassName := @parameter1: java.lang.String;

        this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: berkeley.com.sleepycat.persist.impl.Store this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.lang.String entityClassName> = entityClassName;

        $r0 = new java.util.IdentityHashMap;

        specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.IdentityHashMap databases> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.Set secNames> = $r1;

        return;
    }

    void addSecondaryName(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState this;
        java.lang.String secName;
        java.util.Set $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        secName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: java.util.Set secNames>;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(secName);

        return;
    }


