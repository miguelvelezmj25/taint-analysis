    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = class "java/lang/Character";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.lang.Character: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>("char");

        <java.lang.Character: java.lang.Class TYPE> = $r1;

        return;
    }

    public static boolean isWhitespace(char)
    {
        char l0;
        boolean $z0;

        l0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(l0);

        return $z0;
    }

    public static boolean isWhitespace(int)
    {
        int l0;
        java.lang.CharacterData $r0;
        boolean $z0;

        l0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0);

        $z0 = virtualinvoke $r0.<java.lang.CharacterData: boolean isWhitespace(int)>(l0);

        return $z0;
    }

    public static boolean isDigit(char)
    {
        char l0;
        boolean $z0;

        l0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(int)>(l0);

        return $z0;
    }

    public static boolean isDigit(int)
    {
        int l0, $i0;
        boolean $z0;

        l0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Character: int getType(int)>(l0);

        if $i0 != 9 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int getType(int)
    {
        int l0, $i0;
        java.lang.CharacterData $r0;

        l0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0);

        $i0 = virtualinvoke $r0.<java.lang.CharacterData: int getType(int)>(l0);

        return $i0;
    }


