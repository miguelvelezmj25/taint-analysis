digraph forward {
"this := @this: kanzi.transform.WHT16 {1066089872}" -> "src := @parameter0: kanzi.SliceIntArray {618088424}";
"src := @parameter0: kanzi.SliceIntArray {618088424}" -> "dst := @parameter1: kanzi.SliceIntArray {1610658295}";
"dst := @parameter1: kanzi.SliceIntArray {1610658295}" -> "$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {970581559}";
"$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {970581559}" -> "if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1555265522}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1555265522}" -> "return 0 {1975099409}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1555265522}" -> "$i0 = src.<kanzi.SliceIntArray: int length> {1156379582}";
"$i0 = src.<kanzi.SliceIntArray: int length> {1156379582}" -> "if $i0 == 256 goto (branch) {246823464}";
"if $i0 == 256 goto (branch) {246823464}" -> "return 0 {1224741276}";
"if $i0 == 256 goto (branch) {246823464}" -> "if src == dst goto $r1 = this.<kanzi.transform.WHT16: int[] data> {699139520}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT16: int[] data> {699139520}" -> "$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {1385008966}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT16: int[] data> {699139520}" -> "$r1 = this.<kanzi.transform.WHT16: int[] data> {475651730}";
"$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {1385008966}" -> "if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {524099314}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {524099314}" -> "return 0 {2102962219}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {524099314}" -> "$i1 = dst.<kanzi.SliceIntArray: int index> {875344743}";
"$i1 = dst.<kanzi.SliceIntArray: int index> {875344743}" -> "$i2 = $i1 + 256 {1850702894}";
"$i2 = $i1 + 256 {1850702894}" -> "$r0 = dst.<kanzi.SliceIntArray: int[] array> {1938752536}";
"$r0 = dst.<kanzi.SliceIntArray: int[] array> {1938752536}" -> "$i3 = lengthof $r0 {1371165326}";
"$i3 = lengthof $r0 {1371165326}" -> "if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT16: int[] data> {1140976283}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT16: int[] data> {1140976283}" -> "return 0 {608367734}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT16: int[] data> {1140976283}" -> "$r1 = this.<kanzi.transform.WHT16: int[] data> {475651730}";
"$r1 = this.<kanzi.transform.WHT16: int[] data> {475651730}" -> "$i4 = this.<kanzi.transform.WHT16: int fScale> {1511691517}";
"$i4 = this.<kanzi.transform.WHT16: int fScale> {1511691517}" -> "$z2 = staticinvoke <kanzi.transform.WHT16: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {149257314}";
"$z2 = staticinvoke <kanzi.transform.WHT16: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {149257314}" -> "return $z2 {1945599925}";
}

digraph compute {
"src := @parameter0: kanzi.SliceIntArray {216013738}" -> "dst := @parameter1: kanzi.SliceIntArray {1954709128}";
"dst := @parameter1: kanzi.SliceIntArray {1954709128}" -> "buffer := @parameter2: int[] {166033513}";
"buffer := @parameter2: int[] {166033513}" -> "shift := @parameter3: int {15201294}";
"shift := @parameter3: int {15201294}" -> "input = src.<kanzi.SliceIntArray: int[] array> {1975044117}";
"input = src.<kanzi.SliceIntArray: int[] array> {1975044117}" -> "output = dst.<kanzi.SliceIntArray: int[] array> {573548368}";
"output = dst.<kanzi.SliceIntArray: int[] array> {573548368}" -> "srcIdx = src.<kanzi.SliceIntArray: int index> {552645065}";
"srcIdx = src.<kanzi.SliceIntArray: int index> {552645065}" -> "dstIdx = dst.<kanzi.SliceIntArray: int index> {704063044}";
"dstIdx = dst.<kanzi.SliceIntArray: int index> {704063044}" -> "dataptr#10 = 0 {1508581361}";
"dataptr#10 = 0 {1508581361}" -> "i#12 = 0 {1000068034}";
"i#12 = 0 {1000068034}" -> "if i#12 >= 256 goto dataptr#415 = 0 {1574875476}";
"if i#12 >= 256 goto dataptr#415 = 0 {1574875476}" -> "si = srcIdx + i#12 {1317252295}";
"if i#12 >= 256 goto dataptr#415 = 0 {1574875476}" -> "dataptr#415 = 0 {1429500340}";
"si = srcIdx + i#12 {1317252295}" -> "x0#21 = input[si] {1661715320}";
"x0#21 = input[si] {1661715320}" -> "$i0 = si + 1 {257920672}";
"$i0 = si + 1 {257920672}" -> "x1#27 = input[$i0] {2009965395}";
"x1#27 = input[$i0] {2009965395}" -> "$i1 = si + 2 {1269042548}";
"$i1 = si + 2 {1269042548}" -> "x2#33 = input[$i1] {1788508606}";
"x2#33 = input[$i1] {1788508606}" -> "$i2 = si + 3 {1171245346}";
"$i2 = si + 3 {1171245346}" -> "x3#39 = input[$i2] {1377856413}";
"x3#39 = input[$i2] {1377856413}" -> "$i3 = si + 4 {699872639}";
"$i3 = si + 4 {699872639}" -> "x4#45 = input[$i3] {1785428941}";
"x4#45 = input[$i3] {1785428941}" -> "$i4 = si + 5 {1509162345}";
"$i4 = si + 5 {1509162345}" -> "x5#51 = input[$i4] {554987146}";
"x5#51 = input[$i4] {554987146}" -> "$i5 = si + 6 {2110169771}";
"$i5 = si + 6 {2110169771}" -> "x6#57 = input[$i5] {534531235}";
"x6#57 = input[$i5] {534531235}" -> "$i6 = si + 7 {1854020857}";
"$i6 = si + 7 {1854020857}" -> "x7#63 = input[$i6] {675558652}";
"x7#63 = input[$i6] {675558652}" -> "$i7 = si + 8 {1914890425}";
"$i7 = si + 8 {1914890425}" -> "x8#69 = input[$i7] {140344660}";
"x8#69 = input[$i7] {140344660}" -> "$i8 = si + 9 {292900722}";
"$i8 = si + 9 {292900722}" -> "x9#75 = input[$i8] {1383413906}";
"x9#75 = input[$i8] {1383413906}" -> "$i9 = si + 10 {747410884}";
"$i9 = si + 10 {747410884}" -> "x10#81 = input[$i9] {810435713}";
"x10#81 = input[$i9] {810435713}" -> "$i10 = si + 11 {983460183}";
"$i10 = si + 11 {983460183}" -> "x11#87 = input[$i10] {1553651338}";
"x11#87 = input[$i10] {1553651338}" -> "$i11 = si + 12 {616678733}";
"$i11 = si + 12 {616678733}" -> "x12#93 = input[$i11] {627294523}";
"x12#93 = input[$i11] {627294523}" -> "$i12 = si + 13 {1836468460}";
"$i12 = si + 13 {1836468460}" -> "x13#99 = input[$i12] {42010254}";
"x13#99 = input[$i12] {42010254}" -> "$i13 = si + 14 {1625315047}";
"$i13 = si + 14 {1625315047}" -> "x14#105 = input[$i13] {1690645760}";
"x14#105 = input[$i13] {1690645760}" -> "$i14 = si + 15 {419161202}";
"$i14 = si + 15 {419161202}" -> "x15#111 = input[$i14] {1354856993}";
"x15#111 = input[$i14] {1354856993}" -> "a0#115 = x0#21 + x1#27 {759440185}";
"a0#115 = x0#21 + x1#27 {759440185}" -> "a1#119 = x2#33 + x3#39 {817902278}";
"a1#119 = x2#33 + x3#39 {817902278}" -> "a2#123 = x4#45 + x5#51 {1867038819}";
"a2#123 = x4#45 + x5#51 {1867038819}" -> "a3#127 = x6#57 + x7#63 {1750239988}";
"a3#127 = x6#57 + x7#63 {1750239988}" -> "a4#131 = x8#69 + x9#75 {1883195776}";
"a4#131 = x8#69 + x9#75 {1883195776}" -> "a5#135 = x10#81 + x11#87 {1750574284}";
"a5#135 = x10#81 + x11#87 {1750574284}" -> "a6#139 = x12#93 + x13#99 {349285420}";
"a6#139 = x12#93 + x13#99 {349285420}" -> "a7#143 = x14#105 + x15#111 {1433718292}";
"a7#143 = x14#105 + x15#111 {1433718292}" -> "a8#147 = x0#21 - x1#27 {1865202137}";
"a8#147 = x0#21 - x1#27 {1865202137}" -> "a9#151 = x2#33 - x3#39 {1252454934}";
"a9#151 = x2#33 - x3#39 {1252454934}" -> "a10#155 = x4#45 - x5#51 {1995387643}";
"a10#155 = x4#45 - x5#51 {1995387643}" -> "a11#159 = x6#57 - x7#63 {428942167}";
"a11#159 = x6#57 - x7#63 {428942167}" -> "a12#163 = x8#69 - x9#75 {362170117}";
"a12#163 = x8#69 - x9#75 {362170117}" -> "a13#167 = x10#81 - x11#87 {2030480519}";
"a13#167 = x10#81 - x11#87 {2030480519}" -> "a14#171 = x12#93 - x13#99 {2086282351}";
"a14#171 = x12#93 - x13#99 {2086282351}" -> "a15#175 = x14#105 - x15#111 {26465237}";
"a15#175 = x14#105 - x15#111 {26465237}" -> "b0#179 = a0#115 + a1#119 {452752033}";
"b0#179 = a0#115 + a1#119 {452752033}" -> "b1#183 = a2#123 + a3#127 {1367991213}";
"b1#183 = a2#123 + a3#127 {1367991213}" -> "b2#187 = a4#131 + a5#135 {2025491004}";
"b2#187 = a4#131 + a5#135 {2025491004}" -> "b3#191 = a6#139 + a7#143 {1824537796}";
"b3#191 = a6#139 + a7#143 {1824537796}" -> "b4#195 = a8#147 + a9#151 {1051125868}";
"b4#195 = a8#147 + a9#151 {1051125868}" -> "b5#199 = a10#155 + a11#159 {1677340581}";
"b5#199 = a10#155 + a11#159 {1677340581}" -> "b6#203 = a12#163 + a13#167 {537289528}";
"b6#203 = a12#163 + a13#167 {537289528}" -> "b7#207 = a14#171 + a15#175 {2077764350}";
"b7#207 = a14#171 + a15#175 {2077764350}" -> "b8#211 = a0#115 - a1#119 {1319251883}";
"b8#211 = a0#115 - a1#119 {1319251883}" -> "b9#215 = a2#123 - a3#127 {1227062950}";
"b9#215 = a2#123 - a3#127 {1227062950}" -> "b10#219 = a4#131 - a5#135 {108336787}";
"b10#219 = a4#131 - a5#135 {108336787}" -> "b11#223 = a6#139 - a7#143 {1645984034}";
"b11#223 = a6#139 - a7#143 {1645984034}" -> "b12#227 = a8#147 - a9#151 {2046533700}";
"b12#227 = a8#147 - a9#151 {2046533700}" -> "b13#231 = a10#155 - a11#159 {1828438184}";
"b13#231 = a10#155 - a11#159 {1828438184}" -> "b14#235 = a12#163 - a13#167 {1701474703}";
"b14#235 = a12#163 - a13#167 {1701474703}" -> "b15#239 = a14#171 - a15#175 {1750500837}";
"b15#239 = a14#171 - a15#175 {1750500837}" -> "a0#243 = b0#179 + b1#183 {1146586235}";
"a0#243 = b0#179 + b1#183 {1146586235}" -> "a1#247 = b2#187 + b3#191 {991765276}";
"a1#247 = b2#187 + b3#191 {991765276}" -> "a2#251 = b4#195 + b5#199 {557867691}";
"a2#251 = b4#195 + b5#199 {557867691}" -> "a3#255 = b6#203 + b7#207 {1166026120}";
"a3#255 = b6#203 + b7#207 {1166026120}" -> "a4#259 = b8#211 + b9#215 {1043662733}";
"a4#259 = b8#211 + b9#215 {1043662733}" -> "a5#263 = b10#219 + b11#223 {1822577034}";
"a5#263 = b10#219 + b11#223 {1822577034}" -> "a6#267 = b12#227 + b13#231 {1947452748}";
"a6#267 = b12#227 + b13#231 {1947452748}" -> "a7#271 = b14#235 + b15#239 {1552309667}";
"a7#271 = b14#235 + b15#239 {1552309667}" -> "a8#275 = b0#179 - b1#183 {1578818063}";
"a8#275 = b0#179 - b1#183 {1578818063}" -> "a9#279 = b2#187 - b3#191 {775438662}";
"a9#279 = b2#187 - b3#191 {775438662}" -> "a10#283 = b4#195 - b5#199 {539908429}";
"a10#283 = b4#195 - b5#199 {539908429}" -> "a11#287 = b6#203 - b7#207 {1255364316}";
"a11#287 = b6#203 - b7#207 {1255364316}" -> "a12#291 = b8#211 - b9#215 {1146307338}";
"a12#291 = b8#211 - b9#215 {1146307338}" -> "a13#295 = b10#219 - b11#223 {1161843437}";
"a13#295 = b10#219 - b11#223 {1161843437}" -> "a14#299 = b12#227 - b13#231 {407067411}";
"a14#299 = b12#227 - b13#231 {407067411}" -> "a15#303 = b14#235 - b15#239 {1680495521}";
"a15#303 = b14#235 - b15#239 {1680495521}" -> "$i15 = a0#243 + a1#247 {236113426}";
"$i15 = a0#243 + a1#247 {236113426}" -> "buffer[dataptr#10] = $i15 {1761869201}";
"buffer[dataptr#10] = $i15 {1761869201}" -> "$i16 = dataptr#10 + 1 {1070896400}";
"$i16 = dataptr#10 + 1 {1070896400}" -> "$i17 = a2#251 + a3#255 {713035505}";
"$i17 = a2#251 + a3#255 {713035505}" -> "buffer[$i16] = $i17 {837251748}";
"buffer[$i16] = $i17 {837251748}" -> "$i18 = dataptr#10 + 2 {672598207}";
"$i18 = dataptr#10 + 2 {672598207}" -> "$i19 = a4#259 + a5#263 {242663040}";
"$i19 = a4#259 + a5#263 {242663040}" -> "buffer[$i18] = $i19 {515120385}";
"buffer[$i18] = $i19 {515120385}" -> "$i20 = dataptr#10 + 3 {1485081482}";
"$i20 = dataptr#10 + 3 {1485081482}" -> "$i21 = a6#267 + a7#271 {308010136}";
"$i21 = a6#267 + a7#271 {308010136}" -> "buffer[$i20] = $i21 {1853873538}";
"buffer[$i20] = $i21 {1853873538}" -> "$i22 = dataptr#10 + 4 {182730455}";
"$i22 = dataptr#10 + 4 {182730455}" -> "$i23 = a8#275 + a9#279 {735868285}";
"$i23 = a8#275 + a9#279 {735868285}" -> "buffer[$i22] = $i23 {15070295}";
"buffer[$i22] = $i23 {15070295}" -> "$i24 = dataptr#10 + 5 {333082198}";
"$i24 = dataptr#10 + 5 {333082198}" -> "$i25 = a10#283 + a11#287 {1542367718}";
"$i25 = a10#283 + a11#287 {1542367718}" -> "buffer[$i24] = $i25 {453432339}";
"buffer[$i24] = $i25 {453432339}" -> "$i26 = dataptr#10 + 6 {128120719}";
"$i26 = dataptr#10 + 6 {128120719}" -> "$i27 = a12#291 + a13#295 {1050412527}";
"$i27 = a12#291 + a13#295 {1050412527}" -> "buffer[$i26] = $i27 {781357884}";
"buffer[$i26] = $i27 {781357884}" -> "$i28 = dataptr#10 + 7 {2091707439}";
"$i28 = dataptr#10 + 7 {2091707439}" -> "$i29 = a14#299 + a15#303 {1820802620}";
"$i29 = a14#299 + a15#303 {1820802620}" -> "buffer[$i28] = $i29 {2010216983}";
"buffer[$i28] = $i29 {2010216983}" -> "$i30 = dataptr#10 + 8 {1521510085}";
"$i30 = dataptr#10 + 8 {1521510085}" -> "$i31 = a0#243 - a1#247 {64381280}";
"$i31 = a0#243 - a1#247 {64381280}" -> "buffer[$i30] = $i31 {1518971281}";
"buffer[$i30] = $i31 {1518971281}" -> "$i32 = dataptr#10 + 9 {1158224414}";
"$i32 = dataptr#10 + 9 {1158224414}" -> "$i33 = a2#251 - a3#255 {1087149526}";
"$i33 = a2#251 - a3#255 {1087149526}" -> "buffer[$i32] = $i33 {1293467195}";
"buffer[$i32] = $i33 {1293467195}" -> "$i34 = dataptr#10 + 10 {789611010}";
"$i34 = dataptr#10 + 10 {789611010}" -> "$i35 = a4#259 - a5#263 {2109417325}";
"$i35 = a4#259 - a5#263 {2109417325}" -> "buffer[$i34] = $i35 {1452325450}";
"buffer[$i34] = $i35 {1452325450}" -> "$i36 = dataptr#10 + 11 {1631007756}";
"$i36 = dataptr#10 + 11 {1631007756}" -> "$i37 = a6#267 - a7#271 {41536468}";
"$i37 = a6#267 - a7#271 {41536468}" -> "buffer[$i36] = $i37 {1513490627}";
"buffer[$i36] = $i37 {1513490627}" -> "$i38 = dataptr#10 + 12 {224431639}";
"$i38 = dataptr#10 + 12 {224431639}" -> "$i39 = a8#275 - a9#279 {940687119}";
"$i39 = a8#275 - a9#279 {940687119}" -> "buffer[$i38] = $i39 {831032876}";
"buffer[$i38] = $i39 {831032876}" -> "$i40 = dataptr#10 + 13 {299225936}";
"$i40 = dataptr#10 + 13 {299225936}" -> "$i41 = a10#283 - a11#287 {731854517}";
"$i41 = a10#283 - a11#287 {731854517}" -> "buffer[$i40] = $i41 {351219653}";
"buffer[$i40] = $i41 {351219653}" -> "$i42 = dataptr#10 + 14 {891734750}";
"$i42 = dataptr#10 + 14 {891734750}" -> "$i43 = a12#291 - a13#295 {2129325505}";
"$i43 = a12#291 - a13#295 {2129325505}" -> "buffer[$i42] = $i43 {2098833656}";
"buffer[$i42] = $i43 {2098833656}" -> "$i44 = dataptr#10 + 15 {427578534}";
"$i44 = dataptr#10 + 15 {427578534}" -> "$i45 = a14#299 - a15#303 {1719034679}";
"$i45 = a14#299 - a15#303 {1719034679}" -> "buffer[$i44] = $i45 {500486715}";
"buffer[$i44] = $i45 {500486715}" -> "dataptr#10 = dataptr#10 + 16 {1013643083}";
"dataptr#10 = dataptr#10 + 16 {1013643083}" -> "i#12 = i#12 + 16 {1347156219}";
"i#12 = i#12 + 16 {1347156219}" -> "goto [?= (branch)] {99702302}";
"goto [?= (branch)] {99702302}" -> "if i#12 >= 256 goto dataptr#415 = 0 {1574875476}";
"dataptr#415 = 0 {1429500340}" -> "$i46 = 1 << shift {335311752}";
"$i46 = 1 << shift {335311752}" -> "adjust = $i46 >> 1 {1836212458}";
"adjust = $i46 >> 1 {1836212458}" -> "i#422 = 0 {1840115373}";
"i#422 = 0 {1840115373}" -> "if i#422 >= 16 goto $i125 = src.<kanzi.SliceIntArray: int index> {1088822150}";
"if i#422 >= 16 goto $i125 = src.<kanzi.SliceIntArray: int index> {1088822150}" -> "x0#428 = buffer[dataptr#415] {1951413018}";
"if i#422 >= 16 goto $i125 = src.<kanzi.SliceIntArray: int index> {1088822150}" -> "$i125 = src.<kanzi.SliceIntArray: int index> {1588128238}";
"x0#428 = buffer[dataptr#415] {1951413018}" -> "$i47 = dataptr#415 + 16 {1139011189}";
"$i47 = dataptr#415 + 16 {1139011189}" -> "x1#434 = buffer[$i47] {2072082657}";
"x1#434 = buffer[$i47] {2072082657}" -> "$i48 = dataptr#415 + 32 {698271334}";
"$i48 = dataptr#415 + 32 {698271334}" -> "x2#440 = buffer[$i48] {333630278}";
"x2#440 = buffer[$i48] {333630278}" -> "$i49 = dataptr#415 + 48 {913434514}";
"$i49 = dataptr#415 + 48 {913434514}" -> "x3#446 = buffer[$i49] {2074025359}";
"x3#446 = buffer[$i49] {2074025359}" -> "$i50 = dataptr#415 + 64 {2120678691}";
"$i50 = dataptr#415 + 64 {2120678691}" -> "x4#452 = buffer[$i50] {1727063709}";
"x4#452 = buffer[$i50] {1727063709}" -> "$i51 = dataptr#415 + 80 {1912111085}";
"$i51 = dataptr#415 + 80 {1912111085}" -> "x5#458 = buffer[$i51] {197009045}";
"x5#458 = buffer[$i51] {197009045}" -> "$i52 = dataptr#415 + 96 {1549140467}";
"$i52 = dataptr#415 + 96 {1549140467}" -> "x6#464 = buffer[$i52] {1183358986}";
"x6#464 = buffer[$i52] {1183358986}" -> "$i53 = dataptr#415 + 112 {1694791679}";
"$i53 = dataptr#415 + 112 {1694791679}" -> "x7#470 = buffer[$i53] {665725372}";
"x7#470 = buffer[$i53] {665725372}" -> "$i54 = dataptr#415 + 128 {406705370}";
"$i54 = dataptr#415 + 128 {406705370}" -> "x8#476 = buffer[$i54] {930424496}";
"x8#476 = buffer[$i54] {930424496}" -> "$i55 = dataptr#415 + 144 {2021797877}";
"$i55 = dataptr#415 + 144 {2021797877}" -> "x9#482 = buffer[$i55] {1656072727}";
"x9#482 = buffer[$i55] {1656072727}" -> "$i56 = dataptr#415 + 160 {757786005}";
"$i56 = dataptr#415 + 160 {757786005}" -> "x10#488 = buffer[$i56] {1732635291}";
"x10#488 = buffer[$i56] {1732635291}" -> "$i57 = dataptr#415 + 176 {935469435}";
"$i57 = dataptr#415 + 176 {935469435}" -> "x11#494 = buffer[$i57] {805162103}";
"x11#494 = buffer[$i57] {805162103}" -> "$i58 = dataptr#415 + 192 {247204337}";
"$i58 = dataptr#415 + 192 {247204337}" -> "x12#500 = buffer[$i58] {1359014477}";
"x12#500 = buffer[$i58] {1359014477}" -> "$i59 = dataptr#415 + 208 {439035503}";
"$i59 = dataptr#415 + 208 {439035503}" -> "x13#506 = buffer[$i59] {522270935}";
"x13#506 = buffer[$i59] {522270935}" -> "$i60 = dataptr#415 + 224 {944891078}";
"$i60 = dataptr#415 + 224 {944891078}" -> "x14#512 = buffer[$i60] {554608727}";
"x14#512 = buffer[$i60] {554608727}" -> "$i61 = dataptr#415 + 240 {190712396}";
"$i61 = dataptr#415 + 240 {190712396}" -> "x15#518 = buffer[$i61] {960482523}";
"x15#518 = buffer[$i61] {960482523}" -> "a0#522 = x0#428 + x1#434 {1656852453}";
"a0#522 = x0#428 + x1#434 {1656852453}" -> "a1#526 = x2#440 + x3#446 {393449274}";
"a1#526 = x2#440 + x3#446 {393449274}" -> "a2#530 = x4#452 + x5#458 {1681332191}";
"a2#530 = x4#452 + x5#458 {1681332191}" -> "a3#534 = x6#464 + x7#470 {701448283}";
"a3#534 = x6#464 + x7#470 {701448283}" -> "a4#538 = x8#476 + x9#482 {486915063}";
"a4#538 = x8#476 + x9#482 {486915063}" -> "a5#542 = x10#488 + x11#494 {167423415}";
"a5#542 = x10#488 + x11#494 {167423415}" -> "a6#546 = x12#500 + x13#506 {668954856}";
"a6#546 = x12#500 + x13#506 {668954856}" -> "a7#550 = x14#512 + x15#518 {2121827506}";
"a7#550 = x14#512 + x15#518 {2121827506}" -> "a8#554 = x0#428 - x1#434 {1830662133}";
"a8#554 = x0#428 - x1#434 {1830662133}" -> "a9#558 = x2#440 - x3#446 {1449605988}";
"a9#558 = x2#440 - x3#446 {1449605988}" -> "a10#562 = x4#452 - x5#458 {88699317}";
"a10#562 = x4#452 - x5#458 {88699317}" -> "a11#566 = x6#464 - x7#470 {1266088370}";
"a11#566 = x6#464 - x7#470 {1266088370}" -> "a12#570 = x8#476 - x9#482 {268089086}";
"a12#570 = x8#476 - x9#482 {268089086}" -> "a13#574 = x10#488 - x11#494 {654347537}";
"a13#574 = x10#488 - x11#494 {654347537}" -> "a14#578 = x12#500 - x13#506 {830276218}";
"a14#578 = x12#500 - x13#506 {830276218}" -> "a15#582 = x14#512 - x15#518 {615329145}";
"a15#582 = x14#512 - x15#518 {615329145}" -> "b0#586 = a0#522 + a1#526 {1900378937}";
"b0#586 = a0#522 + a1#526 {1900378937}" -> "b1#590 = a2#530 + a3#534 {963308318}";
"b1#590 = a2#530 + a3#534 {963308318}" -> "b2#594 = a4#538 + a5#542 {1499063408}";
"b2#594 = a4#538 + a5#542 {1499063408}" -> "b3#598 = a6#546 + a7#550 {850028920}";
"b3#598 = a6#546 + a7#550 {850028920}" -> "b4#602 = a8#554 + a9#558 {47297407}";
"b4#602 = a8#554 + a9#558 {47297407}" -> "b5#606 = a10#562 + a11#566 {730953039}";
"b5#606 = a10#562 + a11#566 {730953039}" -> "b6#610 = a12#570 + a13#574 {1559930744}";
"b6#610 = a12#570 + a13#574 {1559930744}" -> "b7#614 = a14#578 + a15#582 {27189230}";
"b7#614 = a14#578 + a15#582 {27189230}" -> "b8#618 = a0#522 - a1#526 {927891389}";
"b8#618 = a0#522 - a1#526 {927891389}" -> "b9#622 = a2#530 - a3#534 {622477955}";
"b9#622 = a2#530 - a3#534 {622477955}" -> "b10#626 = a4#538 - a5#542 {701706634}";
"b10#626 = a4#538 - a5#542 {701706634}" -> "b11#630 = a6#546 - a7#550 {283163554}";
"b11#630 = a6#546 - a7#550 {283163554}" -> "b12#634 = a8#554 - a9#558 {439919464}";
"b12#634 = a8#554 - a9#558 {439919464}" -> "b13#638 = a10#562 - a11#566 {590558152}";
"b13#638 = a10#562 - a11#566 {590558152}" -> "b14#642 = a12#570 - a13#574 {294254441}";
"b14#642 = a12#570 - a13#574 {294254441}" -> "b15#646 = a14#578 - a15#582 {617188828}";
"b15#646 = a14#578 - a15#582 {617188828}" -> "a0#650 = b0#586 + b1#590 {1822167506}";
"a0#650 = b0#586 + b1#590 {1822167506}" -> "a1#654 = b2#594 + b3#598 {1494337631}";
"a1#654 = b2#594 + b3#598 {1494337631}" -> "a2#658 = b4#602 + b5#606 {960691911}";
"a2#658 = b4#602 + b5#606 {960691911}" -> "a3#662 = b6#610 + b7#614 {1186178263}";
"a3#662 = b6#610 + b7#614 {1186178263}" -> "a4#666 = b8#618 + b9#622 {1273946666}";
"a4#666 = b8#618 + b9#622 {1273946666}" -> "a5#670 = b10#626 + b11#630 {1545614799}";
"a5#670 = b10#626 + b11#630 {1545614799}" -> "a6#674 = b12#634 + b13#638 {1666644587}";
"a6#674 = b12#634 + b13#638 {1666644587}" -> "a7#678 = b14#642 + b15#646 {1029584046}";
"a7#678 = b14#642 + b15#646 {1029584046}" -> "a8#682 = b0#586 - b1#590 {616618771}";
"a8#682 = b0#586 - b1#590 {616618771}" -> "a9#686 = b2#594 - b3#598 {768199049}";
"a9#686 = b2#594 - b3#598 {768199049}" -> "a10#690 = b4#602 - b5#606 {1312047659}";
"a10#690 = b4#602 - b5#606 {1312047659}" -> "a11#694 = b6#610 - b7#614 {1500336940}";
"a11#694 = b6#610 - b7#614 {1500336940}" -> "a12#698 = b8#618 - b9#622 {45797916}";
"a12#698 = b8#618 - b9#622 {45797916}" -> "a13#702 = b10#626 - b11#630 {617737826}";
"a13#702 = b10#626 - b11#630 {617737826}" -> "a14#706 = b12#634 - b13#638 {997294457}";
"a14#706 = b12#634 - b13#638 {997294457}" -> "a15#710 = b14#642 - b15#646 {143432090}";
"a15#710 = b14#642 - b15#646 {143432090}" -> "di = dstIdx + i#422 {837451996}";
"di = dstIdx + i#422 {837451996}" -> "$i62 = a0#650 + a1#654 {1794286364}";
"$i62 = a0#650 + a1#654 {1794286364}" -> "$i63 = $i62 + adjust {2044985106}";
"$i63 = $i62 + adjust {2044985106}" -> "$i64 = $i63 >> shift {509589604}";
"$i64 = $i63 >> shift {509589604}" -> "output[di] = $i64 {1475871778}";
"output[di] = $i64 {1475871778}" -> "$i65 = di + 16 {1957103162}";
"$i65 = di + 16 {1957103162}" -> "$i66 = a2#658 + a3#662 {1974339641}";
"$i66 = a2#658 + a3#662 {1974339641}" -> "$i67 = $i66 + adjust {982101432}";
"$i67 = $i66 + adjust {982101432}" -> "$i68 = $i67 >> shift {1804749732}";
"$i68 = $i67 >> shift {1804749732}" -> "output[$i65] = $i68 {1884178416}";
"output[$i65] = $i68 {1884178416}" -> "$i69 = di + 32 {1359024242}";
"$i69 = di + 32 {1359024242}" -> "$i70 = a4#666 + a5#670 {1958921220}";
"$i70 = a4#666 + a5#670 {1958921220}" -> "$i71 = $i70 + adjust {906021125}";
"$i71 = $i70 + adjust {906021125}" -> "$i72 = $i71 >> shift {1605635175}";
"$i72 = $i71 >> shift {1605635175}" -> "output[$i69] = $i72 {1007510855}";
"output[$i69] = $i72 {1007510855}" -> "$i73 = di + 48 {971838500}";
"$i73 = di + 48 {971838500}" -> "$i74 = a6#674 + a7#678 {595106303}";
"$i74 = a6#674 + a7#678 {595106303}" -> "$i75 = $i74 + adjust {1990544328}";
"$i75 = $i74 + adjust {1990544328}" -> "$i76 = $i75 >> shift {1341291508}";
"$i76 = $i75 >> shift {1341291508}" -> "output[$i73] = $i76 {317120111}";
"output[$i73] = $i76 {317120111}" -> "$i77 = di + 64 {199049830}";
"$i77 = di + 64 {199049830}" -> "$i78 = a8#682 + a9#686 {534569465}";
"$i78 = a8#682 + a9#686 {534569465}" -> "$i79 = $i78 + adjust {1353414344}";
"$i79 = $i78 + adjust {1353414344}" -> "$i80 = $i79 >> shift {760626919}";
"$i80 = $i79 >> shift {760626919}" -> "output[$i77] = $i80 {1227970229}";
"output[$i77] = $i80 {1227970229}" -> "$i81 = di + 80 {653211026}";
"$i81 = di + 80 {653211026}" -> "$i82 = a10#690 + a11#694 {773355678}";
"$i82 = a10#690 + a11#694 {773355678}" -> "$i83 = $i82 + adjust {999622573}";
"$i83 = $i82 + adjust {999622573}" -> "$i84 = $i83 >> shift {1015636071}";
"$i84 = $i83 >> shift {1015636071}" -> "output[$i81] = $i84 {1761829703}";
"output[$i81] = $i84 {1761829703}" -> "$i85 = di + 96 {1878289638}";
"$i85 = di + 96 {1878289638}" -> "$i86 = a12#698 + a13#702 {1226955705}";
"$i86 = a12#698 + a13#702 {1226955705}" -> "$i87 = $i86 + adjust {567111617}";
"$i87 = $i86 + adjust {567111617}" -> "$i88 = $i87 >> shift {1226310259}";
"$i88 = $i87 >> shift {1226310259}" -> "output[$i85] = $i88 {1023031618}";
"output[$i85] = $i88 {1023031618}" -> "$i89 = di + 112 {51264016}";
"$i89 = di + 112 {51264016}" -> "$i90 = a14#706 + a15#710 {2000726650}";
"$i90 = a14#706 + a15#710 {2000726650}" -> "$i91 = $i90 + adjust {1364078245}";
"$i91 = $i90 + adjust {1364078245}" -> "$i92 = $i91 >> shift {786747953}";
"$i92 = $i91 >> shift {786747953}" -> "output[$i89] = $i92 {1298836165}";
"output[$i89] = $i92 {1298836165}" -> "$i93 = di + 128 {215563215}";
"$i93 = di + 128 {215563215}" -> "$i94 = a0#650 - a1#654 {214206206}";
"$i94 = a0#650 - a1#654 {214206206}" -> "$i95 = $i94 + adjust {1609899168}";
"$i95 = $i94 + adjust {1609899168}" -> "$i96 = $i95 >> shift {1291504545}";
"$i96 = $i95 >> shift {1291504545}" -> "output[$i93] = $i96 {857491527}";
"output[$i93] = $i96 {857491527}" -> "$i97 = di + 144 {1628638594}";
"$i97 = di + 144 {1628638594}" -> "$i98 = a2#658 - a3#662 {237477321}";
"$i98 = a2#658 - a3#662 {237477321}" -> "$i99 = $i98 + adjust {466275296}";
"$i99 = $i98 + adjust {466275296}" -> "$i100 = $i99 >> shift {1325444762}";
"$i100 = $i99 >> shift {1325444762}" -> "output[$i97] = $i100 {934124678}";
"output[$i97] = $i100 {934124678}" -> "$i101 = di + 160 {1273715395}";
"$i101 = di + 160 {1273715395}" -> "$i102 = a4#666 - a5#670 {627166919}";
"$i102 = a4#666 - a5#670 {627166919}" -> "$i103 = $i102 + adjust {1803410449}";
"$i103 = $i102 + adjust {1803410449}" -> "$i104 = $i103 >> shift {1779746129}";
"$i104 = $i103 >> shift {1779746129}" -> "output[$i101] = $i104 {867163932}";
"output[$i101] = $i104 {867163932}" -> "$i105 = di + 176 {932567562}";
"$i105 = di + 176 {932567562}" -> "$i106 = a6#674 - a7#678 {1722724502}";
"$i106 = a6#674 - a7#678 {1722724502}" -> "$i107 = $i106 + adjust {710885043}";
"$i107 = $i106 + adjust {710885043}" -> "$i108 = $i107 >> shift {890143863}";
"$i108 = $i107 >> shift {890143863}" -> "output[$i105] = $i108 {1502516606}";
"output[$i105] = $i108 {1502516606}" -> "$i109 = di + 192 {2104409820}";
"$i109 = di + 192 {2104409820}" -> "$i110 = a8#682 - a9#686 {1793833502}";
"$i110 = a8#682 - a9#686 {1793833502}" -> "$i111 = $i110 + adjust {1096166841}";
"$i111 = $i110 + adjust {1096166841}" -> "$i112 = $i111 >> shift {432497801}";
"$i112 = $i111 >> shift {432497801}" -> "output[$i109] = $i112 {546044697}";
"output[$i109] = $i112 {546044697}" -> "$i113 = di + 208 {2064673583}";
"$i113 = di + 208 {2064673583}" -> "$i114 = a10#690 - a11#694 {104707951}";
"$i114 = a10#690 - a11#694 {104707951}" -> "$i115 = $i114 + adjust {160234034}";
"$i115 = $i114 + adjust {160234034}" -> "$i116 = $i115 >> shift {1316345593}";
"$i116 = $i115 >> shift {1316345593}" -> "output[$i113] = $i116 {1460462318}";
"output[$i113] = $i116 {1460462318}" -> "$i117 = di + 224 {135269710}";
"$i117 = di + 224 {135269710}" -> "$i118 = a12#698 - a13#702 {964286010}";
"$i118 = a12#698 - a13#702 {964286010}" -> "$i119 = $i118 + adjust {1865744165}";
"$i119 = $i118 + adjust {1865744165}" -> "$i120 = $i119 >> shift {1001911841}";
"$i120 = $i119 >> shift {1001911841}" -> "output[$i117] = $i120 {1415724423}";
"output[$i117] = $i120 {1415724423}" -> "$i121 = di + 240 {1353128165}";
"$i121 = di + 240 {1353128165}" -> "$i122 = a14#706 - a15#710 {1716276287}";
"$i122 = a14#706 - a15#710 {1716276287}" -> "$i123 = $i122 + adjust {739500817}";
"$i123 = $i122 + adjust {739500817}" -> "$i124 = $i123 >> shift {1147389771}";
"$i124 = $i123 >> shift {1147389771}" -> "output[$i121] = $i124 {1787298556}";
"output[$i121] = $i124 {1787298556}" -> "dataptr#415 = dataptr#415 + 1 {1496350679}";
"dataptr#415 = dataptr#415 + 1 {1496350679}" -> "i#422 = i#422 + 1 {1264490166}";
"i#422 = i#422 + 1 {1264490166}" -> "goto [?= (branch)] {299718921}";
"goto [?= (branch)] {299718921}" -> "if i#422 >= 16 goto $i125 = src.<kanzi.SliceIntArray: int index> {1088822150}";
"$i125 = src.<kanzi.SliceIntArray: int index> {1588128238}" -> "$i126 = $i125 + 256 {1608904161}";
"$i126 = $i125 + 256 {1608904161}" -> "src.<kanzi.SliceIntArray: int index> = $i126 {1608247404}";
"src.<kanzi.SliceIntArray: int index> = $i126 {1608247404}" -> "$i127 = dst.<kanzi.SliceIntArray: int index> {607844709}";
"$i127 = dst.<kanzi.SliceIntArray: int index> {607844709}" -> "$i128 = $i127 + 256 {1317187327}";
"$i128 = $i127 + 256 {1317187327}" -> "dst.<kanzi.SliceIntArray: int index> = $i128 {519423106}";
"dst.<kanzi.SliceIntArray: int index> = $i128 {519423106}" -> "return 1 {1578003853}";
}

digraph inverse {
"this := @this: kanzi.transform.WHT16 {841140018}" -> "src := @parameter0: kanzi.SliceIntArray {1839005765}";
"src := @parameter0: kanzi.SliceIntArray {1839005765}" -> "dst := @parameter1: kanzi.SliceIntArray {771576710}";
"dst := @parameter1: kanzi.SliceIntArray {771576710}" -> "$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {564869864}";
"$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {564869864}" -> "if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1720527928}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1720527928}" -> "return 0 {918645745}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1720527928}" -> "$i0 = src.<kanzi.SliceIntArray: int length> {1093038759}";
"$i0 = src.<kanzi.SliceIntArray: int length> {1093038759}" -> "if $i0 == 256 goto (branch) {854769810}";
"if $i0 == 256 goto (branch) {854769810}" -> "return 0 {1318646650}";
"if $i0 == 256 goto (branch) {854769810}" -> "if src == dst goto $r1 = this.<kanzi.transform.WHT16: int[] data> {460658741}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT16: int[] data> {460658741}" -> "$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {1387276729}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT16: int[] data> {460658741}" -> "$r1 = this.<kanzi.transform.WHT16: int[] data> {141285223}";
"$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {1387276729}" -> "if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {600619909}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {600619909}" -> "return 0 {2064065865}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {600619909}" -> "$i1 = dst.<kanzi.SliceIntArray: int index> {1862250610}";
"$i1 = dst.<kanzi.SliceIntArray: int index> {1862250610}" -> "$i2 = $i1 + 256 {1640831719}";
"$i2 = $i1 + 256 {1640831719}" -> "$r0 = dst.<kanzi.SliceIntArray: int[] array> {333016645}";
"$r0 = dst.<kanzi.SliceIntArray: int[] array> {333016645}" -> "$i3 = lengthof $r0 {574578159}";
"$i3 = lengthof $r0 {574578159}" -> "if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT16: int[] data> {724328813}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT16: int[] data> {724328813}" -> "return 0 {1112016503}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT16: int[] data> {724328813}" -> "$r1 = this.<kanzi.transform.WHT16: int[] data> {141285223}";
"$r1 = this.<kanzi.transform.WHT16: int[] data> {141285223}" -> "$i4 = this.<kanzi.transform.WHT16: int iScale> {1750209574}";
"$i4 = this.<kanzi.transform.WHT16: int iScale> {1750209574}" -> "$z2 = staticinvoke <kanzi.transform.WHT16: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {1045706404}";
"$z2 = staticinvoke <kanzi.transform.WHT16: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {1045706404}" -> "return $z2 {1821727651}";
}


