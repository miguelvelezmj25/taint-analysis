    public synchronized int read(java.nio.ByteBuffer) throws java.io.IOException
    {
        com.sleepycat.je.util.LogVerificationReadableByteChannel this;
        java.nio.ByteBuffer buffer;
        int start, count, chunk, $i0, $i1, len#30;
        java.nio.channels.ReadableByteChannel $r0;
        com.sleepycat.je.utilint.LogVerifier $r1, $r2, $r9;
        boolean $z0;
        byte[] $r3, $r4, $r5, $r7, $r10;

        this := @this: com.sleepycat.je.util.LogVerificationReadableByteChannel;

        buffer := @parameter0: java.nio.ByteBuffer;

        start = virtualinvoke buffer.<java.nio.ByteBuffer: int position()>();

        $r0 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel>;

        count = interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>(buffer);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count);

        if count >= 0 goto label1;

        $r1 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.LogVerifier: void verifyAtEof()>();

        goto label5;

     label1:
        $z0 = virtualinvoke buffer.<java.nio.ByteBuffer: boolean hasArray()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r2 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier>;

        $r3 = virtualinvoke buffer.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke buffer.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = $i0 + start;

        virtualinvoke $r2.<com.sleepycat.je.utilint.LogVerifier: void verify(byte[],int,int)>($r3, $i1, count);

        goto label5;

     label2:
        $r4 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 != null goto label3;

        $r5 = newarray (byte)[8192];

        this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray> = $r5;

     label3:
        virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(start);

        len#30 = count;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#30);

        if len#30 <= 0 goto label5;

        chunk = staticinvoke <java.lang.Math: int min(int,int)>(len#30, 8192);

        $r7 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray>;

        virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r7, 0, chunk);

        $r9 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier>;

        $r10 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: byte[] tempArray>;

        virtualinvoke $r9.<com.sleepycat.je.utilint.LogVerifier: void verify(byte[],int,int)>($r10, 0, chunk);

        len#30 = len#30 - chunk;

        goto label4;

     label5:
        return count;
    }

    public synchronized void close() throws java.io.IOException
    {
        com.sleepycat.je.util.LogVerificationReadableByteChannel this;
        java.nio.channels.ReadableByteChannel $r0;

        this := @this: com.sleepycat.je.util.LogVerificationReadableByteChannel;

        $r0 = this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel>;

        interfaceinvoke $r0.<java.nio.channels.ReadableByteChannel: void close()>();

        return;
    }

    public void <init>(com.sleepycat.je.dbi.EnvironmentImpl, java.nio.channels.ReadableByteChannel, java.lang.String)
    {
        com.sleepycat.je.util.LogVerificationReadableByteChannel this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.nio.channels.ReadableByteChannel channel;
        java.lang.String fileName;
        com.sleepycat.je.utilint.LogVerifier $r0;

        this := @this: com.sleepycat.je.util.LogVerificationReadableByteChannel;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        channel := @parameter1: java.nio.channels.ReadableByteChannel;

        fileName := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: java.nio.channels.ReadableByteChannel channel> = channel;

        $r0 = new com.sleepycat.je.utilint.LogVerifier;

        specialinvoke $r0.<com.sleepycat.je.utilint.LogVerifier: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(envImpl, fileName);

        this.<com.sleepycat.je.util.LogVerificationReadableByteChannel: com.sleepycat.je.utilint.LogVerifier verifier> = $r0;

        return;
    }


