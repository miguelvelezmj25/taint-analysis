    static void <clinit>()
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator $r0;

        $r0 = new org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        specialinvoke $r0.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: void <init>()>();

        <org.unix4j.sort.util.sort.DecimalNumberStringComparator: org.unix4j.sort.util.sort.DecimalNumberStringComparator DEFAULT_INSTANCE> = $r0;

        return;
    }

    public static org.unix4j.sort.util.sort.DecimalNumberStringComparator getInstance(java.util.Locale)
    {
        java.util.Locale locale;
        org.unix4j.sort.util.sort.DecimalNumberStringComparator $r0;

        locale := @parameter0: java.util.Locale;

        $r0 = new org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        specialinvoke $r0.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: void <init>(java.util.Locale)>(locale);

        return $r0;
    }

    private void <init>(java.util.Locale)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.util.Locale locale;
        java.text.DecimalFormatSymbols $r0;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        locale := @parameter0: java.util.Locale;

        $r0 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>(locale);

        specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: void <init>(java.text.DecimalFormatSymbols)>($r0);

        return;
    }

    public void <init>(java.text.DecimalFormatSymbols)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.text.DecimalFormatSymbols symbols;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        symbols := @parameter0: java.text.DecimalFormatSymbols;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: java.text.DecimalFormatSymbols symbols> = symbols;

        return;
    }

    private void <init>()
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.text.DecimalFormatSymbols $r0;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        $r0 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance()>();

        specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: void <init>(java.text.DecimalFormatSymbols)>($r0);

        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.lang.Object l1, l2;
        java.lang.CharSequence $r0, $r1;
        int $i0;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.lang.Object;

        $r0 = (java.lang.CharSequence) l1;

        $r1 = (java.lang.CharSequence) l2;

        $i0 = virtualinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int compare(java.lang.CharSequence,java.lang.CharSequence)>($r0, $r1);

        return $i0;
    }

    public int compare(java.lang.CharSequence, java.lang.CharSequence)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.lang.CharSequence s1, s2;
        int start1, start2, $i0, $i1, $i2;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        s1 := @parameter0: java.lang.CharSequence;

        s2 := @parameter1: java.lang.CharSequence;

        start1 = staticinvoke <org.unix4j.sort.util.sort.TrimBlanksStringComparator: int findStartTrimBlanks(java.lang.CharSequence)>(s1);

        start2 = staticinvoke <org.unix4j.sort.util.sort.TrimBlanksStringComparator: int findStartTrimBlanks(java.lang.CharSequence)>(s2);

        $i0 = interfaceinvoke s1.<java.lang.CharSequence: int length()>();

        $i1 = interfaceinvoke s2.<java.lang.CharSequence: int length()>();

        $i2 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int compare(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int)>(s1, start1, $i0, s2, start2, $i1);

        return $i2;
    }

    private int compare(java.lang.CharSequence, int, int, java.lang.CharSequence, int, int)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.lang.CharSequence s1, s2;
        int start1, end1, start2, end2, $i2, index1#33, $i3, index2#43, cmp#45, index1#60, index2#67, $i6, $i7, $i8, $i9, $i10;
        char decimalSeparator, groupingSeparator, zeroDigit, ch1, ch2, $c0, $c1, $c4, $c5;
        boolean isNeg1, isNeg2, isDigit1, isDigit2, $z0, $z1, isZero1#47, isZero2#49, $z2, $z3, $z4, $z5, $z6, $z7;
        java.text.DecimalFormatSymbols $r0, $r1, $r2;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        s1 := @parameter0: java.lang.CharSequence;

        start1 := @parameter1: int;

        end1 := @parameter2: int;

        s2 := @parameter3: java.lang.CharSequence;

        start2 := @parameter4: int;

        end2 := @parameter5: int;

        $r0 = this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: java.text.DecimalFormatSymbols symbols>;

        decimalSeparator = virtualinvoke $r0.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>();

        $r1 = this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: java.text.DecimalFormatSymbols symbols>;

        groupingSeparator = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>();

        $r2 = this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: java.text.DecimalFormatSymbols symbols>;

        zeroDigit = virtualinvoke $r2.<java.text.DecimalFormatSymbols: char getZeroDigit()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(start1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end1);

        if start1 >= end1 goto label01;

        $c0 = interfaceinvoke s1.<java.lang.CharSequence: char charAt(int)>(start1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c0);

        if $c0 != 45 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        isNeg1 = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(start2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end2);

        if start2 >= end2 goto label03;

        $c1 = interfaceinvoke s2.<java.lang.CharSequence: char charAt(int)>(start2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c1);

        if $c1 != 45 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        isNeg2 = $z1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg1);

        if isNeg1 == 0 goto label05;

        $i2 = start1 + 1;

        goto label06;

     label05:
        $i2 = start1;

     label06:
        index1#33 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int skipLeadingZeroChars(java.lang.CharSequence,int,int,char)>(s1, $i2, end1, zeroDigit);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg2);

        if isNeg2 == 0 goto label07;

        $i3 = start2 + 1;

        goto label08;

     label07:
        $i3 = start2;

     label08:
        index2#43 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int skipLeadingZeroChars(java.lang.CharSequence,int,int,char)>(s2, $i3, end2, zeroDigit);

        cmp#45 = 0;

        isZero1#47 = 1;

        isZero2#49 = 1;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index1#33);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end1);

        if index1#33 < end1 goto label10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index2#43);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end2);

        if index2#43 >= end2 goto label27;

     label10:
        index1#60 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int skipGroupingSeparatorChars(java.lang.CharSequence,int,int,char)>(s1, index1#33, end1, groupingSeparator);

        index2#67 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int skipGroupingSeparatorChars(java.lang.CharSequence,int,int,char)>(s2, index2#43, end2, groupingSeparator);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index1#60);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end1);

        if index1#60 >= end1 goto label11;

        $c4 = interfaceinvoke s1.<java.lang.CharSequence: char charAt(int)>(index1#60);

        goto label12;

     label11:
        $c4 = 10;

     label12:
        ch1 = $c4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index2#67);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end2);

        if index2#67 >= end2 goto label13;

        $c5 = interfaceinvoke s2.<java.lang.CharSequence: char charAt(int)>(index2#67);

        goto label14;

     label13:
        $c5 = 10;

     label14:
        ch2 = $c5;

        isDigit1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(ch1);

        isDigit2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(ch2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1);

        if isDigit1 == 0 goto label20;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2);

        if isDigit2 == 0 goto label20;

        $z2 = isZero1#47;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1);

        if isDigit1 == 0 goto label15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch1 != zeroDigit goto label15;

        $z3 = 1;

        goto label16;

     label15:
        $z3 = 0;

     label16:
        isZero1#47 = $z2 & $z3;

        $z4 = isZero2#49;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2);

        if isDigit2 == 0 goto label17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch2 != zeroDigit goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        isZero2#49 = $z4 & $z5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cmp#45);

        if cmp#45 != 0 goto label19;

        cmp#45 = ch1 - ch2;

     label19:
        index1#33 = index1#60 + 1;

        index2#43 = index2#67 + 1;

        goto label26;

     label20:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(decimalSeparator);

        if ch1 == decimalSeparator goto label21;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(decimalSeparator);

        if ch2 != decimalSeparator goto label22;

     label21:
        $i6 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int compareAfterDecimals(java.lang.CharSequence,int,int,char,boolean,boolean,java.lang.CharSequence,int,int,char,boolean,boolean,int)>(s1, index1#60, end1, ch1, isNeg1, isZero1#47, s2, index2#67, end2, ch2, isNeg2, isZero2#49, cmp#45);

        return $i6;

     label22:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1);

        if isDigit1 == 0 goto label23;

        $i7 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>(1, isNeg1, isNeg2);

        return $i7;

     label23:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2);

        if isDigit2 == 0 goto label24;

        $i8 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>(-1, isNeg1, isNeg2);

        return $i8;

     label24:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cmp#45);

        if cmp#45 != 0 goto label25;

        cmp#45 = ch1 - ch2;

     label25:
        index1#33 = index1#60 + 1;

        index2#43 = index2#67 + 1;

     label26:
        goto label09;

     label27:
        $i9 = cmp#45;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg1);

        if isNeg1 == 0 goto label28;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isZero1#47);

        if isZero1#47 != 0 goto label28;

        $z6 = 1;

        goto label29;

     label28:
        $z6 = 0;

     label29:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg2);

        if isNeg2 == 0 goto label30;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isZero2#49);

        if isZero2#49 != 0 goto label30;

        $z7 = 1;

        goto label31;

     label30:
        $z7 = 0;

     label31:
        $i10 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>($i9, $z6, $z7);

        return $i10;
    }

    private int skipLeadingZeroChars(java.lang.CharSequence, int, int, char)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.lang.CharSequence s;
        int end, index#1;
        char zeroDigit, ch;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        s := @parameter0: java.lang.CharSequence;

        index#1 := @parameter1: int;

        end := @parameter2: int;

        zeroDigit := @parameter3: char;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end);

        if index#1 >= end goto label4;

        ch = interfaceinvoke s.<java.lang.CharSequence: char charAt(int)>(index#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch != zeroDigit goto label2;

        index#1 = index#1 + 1;

        goto label3;

     label2:
        return index#1;

     label3:
        goto label1;

     label4:
        return end;
    }

    private int skipGroupingSeparatorChars(java.lang.CharSequence, int, int, char)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.lang.CharSequence s;
        int index, end, $i1;
        char groupingSeparator, $c0;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        s := @parameter0: java.lang.CharSequence;

        index := @parameter1: int;

        end := @parameter2: int;

        groupingSeparator := @parameter3: char;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end);

        if index >= end goto label1;

        $c0 = interfaceinvoke s.<java.lang.CharSequence: char charAt(int)>(index);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(groupingSeparator);

        if $c0 != groupingSeparator goto label1;

        $i1 = index + 1;

        return $i1;

     label1:
        return index;
    }

    private int compareAfterDecimals(java.lang.CharSequence, int, int, char, boolean, boolean, java.lang.CharSequence, int, int, char, boolean, boolean, int)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        java.lang.CharSequence s1, s2;
        int end1, end2, index1#1, index2#4, cmp#7, $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9;
        boolean isNeg1, isNeg2, isDecimal1, isDecimal2, isZero1#3, isZero2#6, isDigit1#16, isDigit2#19, $z0, $z1, $z2, $z3, isDigit1#73, isDigit2#76, $z4, $z5, $z6, $z7, $z8, $z9;
        char decimalSeparator, zeroDigit, ch1#2, ch2#5, $c4, ch1#64, $c5, ch2#70;
        java.text.DecimalFormatSymbols $r0, $r1;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        s1 := @parameter0: java.lang.CharSequence;

        index1#1 := @parameter1: int;

        end1 := @parameter2: int;

        ch1#2 := @parameter3: char;

        isNeg1 := @parameter4: boolean;

        isZero1#3 := @parameter5: boolean;

        s2 := @parameter6: java.lang.CharSequence;

        index2#4 := @parameter7: int;

        end2 := @parameter8: int;

        ch2#5 := @parameter9: char;

        isNeg2 := @parameter10: boolean;

        isZero2#6 := @parameter11: boolean;

        cmp#7 := @parameter12: int;

        $r0 = this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: java.text.DecimalFormatSymbols symbols>;

        decimalSeparator = virtualinvoke $r0.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>();

        $r1 = this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: java.text.DecimalFormatSymbols symbols>;

        zeroDigit = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getZeroDigit()>();

        isDigit1#16 = staticinvoke <java.lang.Character: boolean isDigit(char)>(ch1#2);

        isDigit2#19 = staticinvoke <java.lang.Character: boolean isDigit(char)>(ch2#5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(decimalSeparator);

        if ch1#2 != decimalSeparator goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        isDecimal1 = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2#5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(decimalSeparator);

        if ch2#5 != decimalSeparator goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        isDecimal2 = $z1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1#16);

        if isDigit1#16 == 0 goto label05;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal1);

        if isDecimal1 != 0 goto label05;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal2);

        if isDecimal2 == 0 goto label05;

        $i0 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>(1, isNeg1, isNeg2);

        return $i0;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2#19);

        if isDigit2#19 == 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal1);

        if isDecimal1 == 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal2);

        if isDecimal2 != 0 goto label06;

        $i1 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>(-1, isNeg1, isNeg2);

        return $i1;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cmp#7);

        if cmp#7 == 0 goto label11;

        $i2 = cmp#7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg1);

        if isNeg1 == 0 goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isZero1#3);

        if isZero1#3 != 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg2);

        if isNeg2 == 0 goto label09;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isZero2#6);

        if isZero2#6 != 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        $i3 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>($i2, $z2, $z3);

        return $i3;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal1);

        if isDecimal1 == 0 goto label12;

        index1#1 = index1#1 + 1;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal2);

        if isDecimal2 == 0 goto label13;

        index2#4 = index2#4 + 1;

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cmp#7);

        if cmp#7 != 0 goto label28;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index1#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end1);

        if index1#1 < end1 goto label14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index2#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end2);

        if index2#4 >= end2 goto label28;

     label14:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index1#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end1);

        if index1#1 >= end1 goto label15;

        $c4 = interfaceinvoke s1.<java.lang.CharSequence: char charAt(int)>(index1#1);

        goto label16;

     label15:
        $c4 = 10;

     label16:
        ch1#64 = $c4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index2#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end2);

        if index2#4 >= end2 goto label17;

        $c5 = interfaceinvoke s2.<java.lang.CharSequence: char charAt(int)>(index2#4);

        goto label18;

     label17:
        $c5 = 10;

     label18:
        ch2#70 = $c5;

        isDigit1#73 = staticinvoke <java.lang.Character: boolean isDigit(char)>(ch1#64);

        isDigit2#76 = staticinvoke <java.lang.Character: boolean isDigit(char)>(ch2#70);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1#73);

        if isDigit1#73 == 0 goto label23;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2#76);

        if isDigit2#76 == 0 goto label23;

        $z4 = isZero1#3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1#73);

        if isDigit1#73 == 0 goto label19;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1#64);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch1#64 != zeroDigit goto label19;

        $z5 = 1;

        goto label20;

     label19:
        $z5 = 0;

     label20:
        isZero1#3 = $z4 & $z5;

        $z6 = isZero2#6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2#76);

        if isDigit2#76 == 0 goto label21;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2#70);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch2#70 != zeroDigit goto label21;

        $z7 = 1;

        goto label22;

     label21:
        $z7 = 0;

     label22:
        isZero2#6 = $z6 & $z7;

        cmp#7 = ch1#64 - ch2#70;

        index1#1 = index1#1 + 1;

        index2#4 = index2#4 + 1;

        goto label13;

     label23:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit1#73);

        if isDigit1#73 == 0 goto label25;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1#64);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch1#64 != zeroDigit goto label24;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal1);

        if isDecimal1 == 0 goto label24;

        index1#1 = index1#1 + 1;

        goto label13;

     label24:
        $i6 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>(1, isNeg1, isNeg2);

        return $i6;

     label25:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDigit2#76);

        if isDigit2#76 == 0 goto label27;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2#70);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(zeroDigit);

        if ch2#70 != zeroDigit goto label26;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isDecimal2);

        if isDecimal2 == 0 goto label26;

        index2#4 = index2#4 + 1;

        goto label13;

     label26:
        $i7 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>(-1, isNeg1, isNeg2);

        return $i7;

     label27:
        cmp#7 = ch1#64 - ch2#70;

        index1#1 = index1#1 + 1;

        index2#4 = index2#4 + 1;

        goto label13;

     label28:
        $i8 = cmp#7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg1);

        if isNeg1 == 0 goto label29;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isZero1#3);

        if isZero1#3 != 0 goto label29;

        $z8 = 1;

        goto label30;

     label29:
        $z8 = 0;

     label30:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg2);

        if isNeg2 == 0 goto label31;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isZero2#6);

        if isZero2#6 != 0 goto label31;

        $z9 = 1;

        goto label32;

     label31:
        $z9 = 0;

     label32:
        $i9 = specialinvoke this.<org.unix4j.sort.util.sort.DecimalNumberStringComparator: int applySign(int,boolean,boolean)>($i8, $z8, $z9);

        return $i9;
    }

    private int applySign(int, boolean, boolean)
    {
        org.unix4j.sort.util.sort.DecimalNumberStringComparator this;
        int 'cmp', $i0, $i1;
        boolean isNeg1, isNeg2;

        this := @this: org.unix4j.sort.util.sort.DecimalNumberStringComparator;

        'cmp' := @parameter0: int;

        isNeg1 := @parameter1: boolean;

        isNeg2 := @parameter2: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg1);

        if isNeg1 == 0 goto label3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg2);

        if isNeg2 == 0 goto label1;

        $i0 = neg 'cmp';

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNeg2);

        if isNeg2 == 0 goto label4;

        $i1 = 1;

        goto label5;

     label4:
        $i1 = 'cmp';

     label5:
        return $i1;
    }


