    void <init>(edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman $r0;
        byte[] $r1;
        short[] $r2, $r3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        pending := @parameter0: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending> = pending;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void <init>(edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending)>(pending);

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman> = $r0;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook26()>();

        $r1 = newarray (byte)[65536];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window> = $r1;

        $r2 = newarray (short)[32768];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] head> = $r2;

        $r3 = newarray (short)[32768];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] prev> = $r3;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = 1;

        return;
    }

    protected void hook26()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressAdlerThreeTwoChecksum>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook26__role__DerivativeCompressAdler32Checksum()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook26__before__DerivativeCompressAdler32Checksum()>();

     label2:
        return;
    }

    protected void hook26__role__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        edu.cmu.cs.mvelezce.zip.zipme.Adler32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.Adler32;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Adler32: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.Adler32 adler> = $r0;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook26__before__DerivativeCompressAdler32Checksum()>();

        return;
    }

    protected void hook26__before__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        return;
    }

    public final long getTotalIn()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        long $l0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $l0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: long totalIn>;

        return $l0;
    }

    public final boolean needsInput()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int $i0, $i1;
        boolean $z0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setInput(byte[], int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        byte[] buf;
        int off, len, end, $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd>;

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Old input was not completely processed");

        throw $r0;

     label3:
        end = off + len;

        if 0 > off goto label4;

        if off > end goto label4;

        $i2 = lengthof buf;

        if end <= $i2 goto label5;

     label4:
        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label7;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label7:
        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] inputBuf> = buf;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff> = off;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd> = end;

        return;
    }

    public final void resetAdler()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        edu.cmu.cs.mvelezce.zip.zipme.Adler32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.Adler32 adler>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Adler32: void reset()>();

        return;
    }

    public final int getAdler()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int chksum;
        edu.cmu.cs.mvelezce.zip.zipme.Adler32 $r0;
        long $l0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.Adler32 adler>;

        $l0 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Adler32: long getValue()>();

        chksum = (int) $l0;

        return chksum;
    }

    public boolean deflate(boolean, boolean)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean flush, finish, canFlush, $z0, $z1, progress#44, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.io.PrintStream $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        java.lang.Error $r13;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending $r14;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        flush := @parameter0: boolean;

        finish := @parameter1: boolean;

     label01:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void fillWindow()>();

        if flush == 0 goto label02;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd>;

        if $i0 != $i1 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        canFlush = $z0;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z1 == 0 goto label04;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("window: [");

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int comprFunc>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(canFlush);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label04:
        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int comprFunc>;

        tableswitch($i6)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            default: goto label08;
        };

     label05:
        progress#44 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean deflateStored(boolean,boolean)>(canFlush, finish);

        goto label09;

     label06:
        progress#44 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean deflateFast(boolean,boolean)>(canFlush, finish);

        goto label09;

     label07:
        progress#44 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean deflateSlow(boolean,boolean)>(canFlush, finish);

        goto label09;

     label08:
        $r13 = new java.lang.Error;

        specialinvoke $r13.<java.lang.Error: void <init>()>();

        throw $r13;

     label09:
        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $z2 = virtualinvoke $r14.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: boolean isFlushed()>();

        if $z2 == 0 goto label10;

        if progress#44 != 0 goto label01;

     label10:
        return progress#44;
    }

    private void fillWindow()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, more#21, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i21, $i22, $i23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte[] $r0, $r1;
        long $l18, $l19, $l20;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        if $i0 < 65274 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void slideWindow()>();

     label03:
        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i1 >= 262 goto label07;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd>;

        if $i2 >= $i3 goto label07;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i5 = 65536 - $i4;

        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        more#21 = $i5 - $i6;

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd>;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        $i9 = $i7 - $i8;

        if more#21 <= $i9 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputEnd>;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        more#21 = $i10 - $i11;

     label06:
        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] inputBuf>;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i13 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i15 = $i13 + $i14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i12, $r1, $i15, more#21);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook28(int)>(more#21);

        $i16 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        $i17 = $i16 + more#21;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff> = $i17;

        $l18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: long totalIn>;

        $l19 = (long) more#21;

        $l20 = $l18 + $l19;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: long totalIn> = $l20;

        $i21 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i22 = $i21 + more#21;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = $i22;

        goto label03;

     label07:
        $i23 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i23 < 3 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label10;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void updateHash()>();

     label10:
        return;
    }

    private boolean deflateStored(boolean, boolean)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean flush, finish, $z0, $z1, $z2, $z3, lastBlock#32, $z4, $z5, $z6, $z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, storedLen#20, $i6, $i7, $i8, $i9, $i10, $i11;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman $r9;
        byte[] $r10;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        flush := @parameter0: boolean;

        finish := @parameter1: boolean;

        if flush != 0 goto label01;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i0 != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        return 0;

     label03:
        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i3 = $i1 + $i2;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i3;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = 0;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        storedLen#20 = $i4 - $i5;

        $i6 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int MAX_BLOCK_SIZE>;

        if storedLen#20 >= $i6 goto label05;

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        if $i7 >= 32768 goto label04;

        if storedLen#20 >= 32506 goto label05;

     label04:
        if flush == 0 goto label06;

     label05:
        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label14;

        lastBlock#32 = finish;

        $i8 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int MAX_BLOCK_SIZE>;

        if storedLen#20 <= $i8 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label10;

        storedLen#20 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int MAX_BLOCK_SIZE>;

        lastBlock#32 = 0;

     label10:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z6 == 0 goto label11;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storedBlock[");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(storedLen#20);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(lastBlock#32);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label11:
        $r9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r10 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        virtualinvoke $r9.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushStoredBlock(byte[],int,int,boolean)>($r10, $i9, storedLen#20, lastBlock#32);

        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i11 = $i10 + storedLen#20;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i11;

        if lastBlock#32 != 0 goto label12;

        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        return $z7;

     label14:
        return 1;
    }

    private boolean deflateFast(boolean, boolean)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean flush, finish, full, lastBlock, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z19, $z20, $z21, $z22;
        int hashHead, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i#60, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman $r0, $r5, $r11, $r15, $r16;
        byte[] $r1, $r2, $r3, $r12, $r17;
        byte $b17, $b20, $b43;
        java.lang.Error $r4;
        short $s44;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        flush := @parameter0: boolean;

        finish := @parameter1: boolean;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i0 >= 262 goto label01;

        if flush != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        return 0;

     label03:
        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i1 >= 262 goto label04;

        if flush == 0 goto label35;

     label04:
        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i2 != 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label07;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i6 = $i4 - $i5;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushBlock(byte[],int,int,boolean)>($r1, $i3, $i6, finish);

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i7;

        return 0;

     label07:
        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        if $i8 <= 65274 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label10;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void slideWindow()>();

     label10:
        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i9 < 3 goto label11;

        $i10 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int insertString()>();

        hashHead = $i10;

        if $i10 == 0 goto label11;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strategy>;

        if $i11 == 2 goto label11;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i13 = $i12 - hashHead;

        if $i13 > 32506 goto label11;

        $z6 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean findLongestMatch(int)>(hashHead);

        if $z6 == 0 goto label11;

        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label29;

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z9 == 0 goto label17;

        i#60 = 0;

     label13:
        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        if i#60 >= $i14 goto label17;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i16 = $i15 + i#60;

        $b17 = $r2[$i16];

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart>;

        $i19 = $i18 + i#60;

        $b20 = $r3[$i19];

        if $b17 == $b20 goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label16;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>()>();

        throw $r4;

     label16:
        i#60 = i#60 + 1;

        goto label13;

     label17:
        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $i21 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i22 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart>;

        $i23 = $i21 - $i22;

        $i24 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        full = virtualinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean tallyDist(int,int)>($i23, $i24);

        $i25 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i26 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        $i27 = $i25 - $i26;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = $i27;

        $i28 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        $i29 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int max_lazy>;

        if $i28 > $i29 goto label18;

        $i30 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i30 < 3 goto label18;

        $z12 = 1;

        goto label19;

     label18:
        $z12 = 0;

     label19:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label22;

     label20:
        $i31 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        $i32 = $i31 - 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = $i32;

        if $i32 <= 0 goto label21;

        $i33 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i34 = $i33 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i34;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int insertString()>();

        goto label20;

     label21:
        $i36 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i37 = $i36 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i37;

        goto label25;

     label22:
        $i38 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i39 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        $i40 = $i38 + $i39;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i40;

        $i41 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i41 < 2 goto label23;

        $z14 = 1;

        goto label24;

     label23:
        $z14 = 0;

     label24:
        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label25;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void updateHash()>();

     label25:
        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = 2;

        if full != 0 goto label26;

        $z16 = 1;

        goto label27;

     label26:
        $z16 = 0;

     label27:
        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z17 == 0 goto label28;

        goto label03;

     label28:
        goto label30;

     label29:
        $r11 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i42 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $b43 = $r12[$i42];

        $s44 = $b43 & 255;

        virtualinvoke $r11.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean tallyLit(int)>($s44);

        $i45 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i46 = $i45 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i46;

        $i47 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i48 = $i47 - 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = $i48;

     label30:
        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $z19 = virtualinvoke $r15.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean isFull()>();

        $z20 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z20 == 0 goto label03;

        if finish == 0 goto label31;

        $i49 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i49 != 0 goto label31;

        $z21 = 1;

        goto label32;

     label31:
        $z21 = 0;

     label32:
        lastBlock = $z21;

        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i50 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i51 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i52 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i53 = $i51 - $i52;

        virtualinvoke $r16.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushBlock(byte[],int,int,boolean)>($r17, $i50, $i53, lastBlock);

        $i54 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i54;

        if lastBlock != 0 goto label33;

        $z22 = 1;

        goto label34;

     label33:
        $z22 = 0;

     label34:
        return $z22;

     label35:
        return 1;
    }

    private boolean deflateSlow(boolean, boolean)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean flush, finish, lastBlock, $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z23, $z24, $z25, $z26, $z28, $z29, $z30, $z31, $z32, $z33, $z34;
        int prevMatch, hashHead, $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, prevLen#64, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i#115, $i24, $i25, $i26, $i27, $i29, $i31, $i32, $i33, prevLen#148, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i48, $i49, $i50, $i51, $i52, $i53, len#217, $i54, $i55, $i56, $i57;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman $r0, $r3, $r8, $r13, $r17, $r18;
        byte[] $r1, $r4, $r5, $r6, $r14, $r19;
        byte $b5, $b28, $b30, $b46;
        short $s6, $s47;
        java.lang.Error $r2, $r7;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        flush := @parameter0: boolean;

        finish := @parameter1: boolean;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i0 >= 262 goto label01;

        if flush != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        return 0;

     label03:
        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i1 >= 262 goto label04;

        if flush == 0 goto label41;

     label04:
        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i2 != 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label09;

        $z4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable>;

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label07;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i4 = $i3 - 1;

        $b5 = $r1[$i4];

        $s6 = $b5 & 255;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean tallyLit(int)>($s6);

     label07:
        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable> = 0;

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z7 == 0 goto label08;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("Not flushing, but no lookahead");

        throw $r2;

     label08:
        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i10 = $i8 - $i9;

        virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushBlock(byte[],int,int,boolean)>($r4, $i7, $i10, finish);

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i11;

        return 0;

     label09:
        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        if $i12 < 65274 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label12;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void slideWindow()>();

     label12:
        prevMatch = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart>;

        prevLen#64 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        $i13 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i13 < 3 goto label13;

        $z10 = 1;

        goto label14;

     label13:
        $z10 = 0;

     label14:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label20;

        hashHead = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int insertString()>();

        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strategy>;

        if $i14 == 2 goto label15;

        if hashHead == 0 goto label15;

        $i15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i16 = $i15 - hashHead;

        if $i16 > 32506 goto label15;

        $z12 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean findLongestMatch(int)>(hashHead);

        if $z12 == 0 goto label15;

        $z13 = 1;

        goto label16;

     label15:
        $z13 = 0;

     label16:
        $z14 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z13);

        if $z14 == 0 goto label20;

        $i17 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        if $i17 > 5 goto label18;

        $i18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strategy>;

        if $i18 == 1 goto label17;

        $i19 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        if $i19 != 3 goto label18;

        $i20 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i21 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart>;

        $i22 = $i20 - $i21;

        if $i22 <= 4096 goto label18;

     label17:
        $z15 = 1;

        goto label19;

     label18:
        $z15 = 0;

     label19:
        $z16 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z15);

        if $z16 == 0 goto label20;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = 2;

     label20:
        if prevLen#64 < 3 goto label21;

        $i23 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        if $i23 > prevLen#64 goto label21;

        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        $z18 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z17);

        if $z18 == 0 goto label32;

        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z19 == 0 goto label27;

        i#115 = 0;

     label23:
        $i24 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        if i#115 >= $i24 goto label27;

        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i25 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i26 = $i25 - 1;

        $i27 = $i26 + i#115;

        $b28 = $r5[$i27];

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i29 = prevMatch + i#115;

        $b30 = $r6[$i29];

        if $b28 == $b30 goto label24;

        $z20 = 1;

        goto label25;

     label24:
        $z20 = 0;

     label25:
        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z21 == 0 goto label26;

        $r7 = new java.lang.Error;

        specialinvoke $r7.<java.lang.Error: void <init>()>();

        throw $r7;

     label26:
        i#115 = i#115 + 1;

        goto label23;

     label27:
        $r8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $i31 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i32 = $i31 - 1;

        $i33 = $i32 - prevMatch;

        virtualinvoke $r8.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean tallyDist(int,int)>($i33, prevLen#64);

        prevLen#148 = prevLen#64 + -2;

     label28:
        $i34 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i35 = $i34 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i35;

        $i36 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i37 = $i36 - 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = $i37;

        $i38 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i38 < 3 goto label29;

        $z23 = 1;

        goto label30;

     label29:
        $z23 = 0;

     label30:
        $z24 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z23);

        if $z24 == 0 goto label31;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int insertString()>();

     label31:
        prevLen#148 = prevLen#148 + -1;

        if prevLen#148 > 0 goto label28;

        $i40 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i41 = $i40 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i41;

        $i42 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i43 = $i42 - 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = $i43;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = 2;

        goto label34;

     label32:
        $z25 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable>;

        $z26 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z25);

        if $z26 == 0 goto label33;

        $r13 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i44 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i45 = $i44 - 1;

        $b46 = $r14[$i45];

        $s47 = $b46 & 255;

        virtualinvoke $r13.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean tallyLit(int)>($s47);

     label33:
        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable> = 1;

        $i48 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i49 = $i48 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i49;

        $i50 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i51 = $i50 - 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = $i51;

     label34:
        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $z28 = virtualinvoke $r17.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean isFull()>();

        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        if $z29 == 0 goto label40;

        $i52 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i53 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        len#217 = $i52 - $i53;

        $z30 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable>;

        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z30);

        if $z31 == 0 goto label35;

        len#217 = len#217 + -1;

     label35:
        if finish == 0 goto label36;

        $i54 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if $i54 != 0 goto label36;

        $z32 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable>;

        if $z32 != 0 goto label36;

        $z33 = 1;

        goto label37;

     label36:
        $z33 = 0;

     label37:
        lastBlock = $z33;

        $r18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i55 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        virtualinvoke $r18.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushBlock(byte[],int,int,boolean)>($r19, $i55, len#217, lastBlock);

        $i56 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i57 = $i56 + len#217;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i57;

        if lastBlock != 0 goto label38;

        $z34 = 1;

        goto label39;

     label38:
        $z34 = 0;

     label39:
        return $z34;

     label40:
        goto label03;

     label41:
        return 1;
    }

    private void slideWindow()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        byte[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i#23, m#32, $i7, $i8, i#43, m#52, $i11, $i12;
        short[] $r5, $r6, $r7, $r8;
        short $s6, $s9, $s10, $s13;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 32768, $r1, 0, 32768);

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart>;

        $i1 = $i0 - 32768;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart> = $i1;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i3 = $i2 - 32768;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = $i3;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i5 = $i4 - 32768;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i5;

        i#23 = 0;

     label1:
        if i#23 >= 32768 goto label4;

        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] head>;

        $s6 = $r5[i#23];

        m#32 = $s6 & 65535;

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] head>;

        $i7 = i#23;

        if m#32 < 32768 goto label2;

        $i8 = m#32 - 32768;

        $s9 = (short) $i8;

        goto label3;

     label2:
        $s9 = 0;

     label3:
        $r6[$i7] = $s9;

        i#23 = i#23 + 1;

        goto label1;

     label4:
        i#43 = 0;

     label5:
        if i#43 >= 32768 goto label8;

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] prev>;

        $s10 = $r7[i#43];

        m#52 = $s10 & 65535;

        $r8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] prev>;

        $i11 = i#43;

        if m#52 < 32768 goto label6;

        $i12 = m#52 - 32768;

        $s13 = (short) $i12;

        goto label7;

     label6:
        $s13 = 0;

     label7:
        $r8[$i11] = $s13;

        i#43 = i#43 + 1;

        goto label5;

     label8:
        return;
    }

    private int insertString()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int hash, $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i24, $i25, $i27, $i28, $i30, $i32;
        short match, $s29, $s31;
        byte[] $r0, $r1, $r2, $r3, $r9, $r12, $r15;
        byte $b4, $b7, $b11, $b16, $b20, $b23, $b26;
        boolean $z0, $z1, $z2;
        java.lang.Error $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r18;
        java.lang.String $r19;
        short[] $r20, $r21, $r22;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int ins_h>;

        $i1 = $i0 << 5;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i3 = $i2 + 2;

        $b4 = $r0[$i3];

        $i5 = $i1 ^ $b4;

        hash = $i5 & 32767;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z0 == 0 goto label3;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $b7 = $r1[$i6];

        $i8 = $b7 << 10;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i10 = $i9 + 1;

        $b11 = $r2[$i10];

        $i12 = $b11 << 5;

        $i13 = $i8 ^ $i12;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i15 = $i14 + 2;

        $b16 = $r3[$i15];

        $i17 = $i13 ^ $b16;

        $i18 = $i17 & 32767;

        if hash == $i18 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z2 == 0 goto label3;

        $r4 = new java.lang.Error;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hash inconsistent: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(hash);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i19 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $b20 = $r9[$i19];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b20);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i21 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i22 = $i21 + 1;

        $b23 = $r12[$i22];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b23);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i24 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i25 = $i24 + 2;

        $b26 = $r15[$i25];

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b26);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>($r19);

        throw $r4;

     label3:
        $r20 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] prev>;

        $i27 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i28 = $i27 & 32767;

        $r21 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] head>;

        $s29 = $r21[hash];

        match = $s29;

        $r20[$i28] = $s29;

        $r22 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] head>;

        $i30 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $s31 = (short) $i30;

        $r22[hash] = $s31;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int ins_h> = hash;

        $i32 = match & 65535;

        return $i32;
    }

    private boolean findLongestMatch(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        short[] prev;
        int limit, strend, curMatch#1, chainLength#4, niceLength#7, scan#12, $i0, $i1, best_end#18, $i2, best_len#23, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i16, $i18, match#112, scan#113, match#120, match#129, match#138, match#147, match#156, match#165, match#174, $i36, $i37, $i38, $i40, $i41, $i42, $i43;
        byte[] $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        byte scan_end1#41, scan_end#46, $b10, $b13, $b14, $b15, $b17, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b30, $b31, $b32, $b33, $b34, $b35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Error $r2, $r3;
        short $s39;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        curMatch#1 := @parameter0: int;

        chainLength#4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int max_chain>;

        niceLength#7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int niceLength>;

        prev = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] prev>;

        scan#12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        best_end#18 = $i0 + $i1;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        best_len#23 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 2);

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i4 = $i3 - 32506;

        limit = staticinvoke <java.lang.Math: int max(int,int)>($i4, 0);

        $i5 = scan#12 + 258;

        strend = $i5 - 1;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i6 = best_end#18 - 1;

        scan_end1#41 = $r0[$i6];

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan_end#46 = $r1[best_end#18];

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int goodLength>;

        if best_len#23 < $i7 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        chainLength#4 = chainLength#4 >> 2;

     label03:
        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        if niceLength#7 <= $i8 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        niceLength#7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

     label06:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z4 == 0 goto label07;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("need lookahead");

        throw $r2;

     label07:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z5 == 0 goto label08;

        $r3 = new java.lang.Error;

        specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>("future match");

        throw $r3;

     label08:
        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i9 = curMatch#1 + best_len#23;

        $b10 = $r4[$i9];

        if $b10 != scan_end#46 goto label09;

        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i11 = curMatch#1 + best_len#23;

        $i12 = $i11 - 1;

        $b13 = $r5[$i12];

        if $b13 != scan_end1#41 goto label09;

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $b14 = $r6[curMatch#1];

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $b15 = $r7[scan#12];

        if $b14 != $b15 goto label09;

        $r8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i16 = curMatch#1 + 1;

        $b17 = $r8[$i16];

        $r9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i18 = scan#12 + 1;

        $b19 = $r9[$i18];

        if $b17 == $b19 goto label10;

     label09:
        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label12;

        goto label21;

     label12:
        match#112 = curMatch#1 + 2;

        scan#113 = scan#12 + 2;

     label13:
        $r10 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b20 = $r10[scan#113];

        $r11 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#120 = match#112 + 1;

        $b21 = $r11[match#120];

        if $b20 != $b21 goto label14;

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b22 = $r12[scan#113];

        $r13 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#129 = match#120 + 1;

        $b23 = $r13[match#129];

        if $b22 != $b23 goto label14;

        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b24 = $r14[scan#113];

        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#138 = match#129 + 1;

        $b25 = $r15[match#138];

        if $b24 != $b25 goto label14;

        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b26 = $r16[scan#113];

        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#147 = match#138 + 1;

        $b27 = $r17[match#147];

        if $b26 != $b27 goto label14;

        $r18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b28 = $r18[scan#113];

        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#156 = match#147 + 1;

        $b29 = $r19[match#156];

        if $b28 != $b29 goto label14;

        $r20 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b30 = $r20[scan#113];

        $r21 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#165 = match#156 + 1;

        $b31 = $r21[match#165];

        if $b30 != $b31 goto label14;

        $r22 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b32 = $r22[scan#113];

        $r23 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#174 = match#165 + 1;

        $b33 = $r23[match#174];

        if $b32 != $b33 goto label14;

        $r24 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan#113 = scan#113 + 1;

        $b34 = $r24[scan#113];

        $r25 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        match#112 = match#174 + 1;

        $b35 = $r25[match#112];

        if $b34 != $b35 goto label14;

        if scan#113 >= strend goto label14;

        goto label13;

     label14:
        if scan#113 <= best_end#18 goto label15;

        $z8 = 1;

        goto label16;

     label15:
        $z8 = 0;

     label16:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label20;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchStart> = curMatch#1;

        best_end#18 = scan#113;

        $i36 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        best_len#23 = scan#113 - $i36;

        if best_len#23 < niceLength#7 goto label17;

        $z10 = 1;

        goto label18;

     label17:
        $z10 = 0;

     label18:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label19;

        goto label22;

     label19:
        $r26 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i37 = best_end#18 - 1;

        scan_end1#41 = $r26[$i37];

        $r27 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        scan_end#46 = $r27[best_end#18];

     label20:
        scan#12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

     label21:
        $i38 = curMatch#1 & 32767;

        $s39 = prev[$i38];

        $i40 = $s39 & 65535;

        curMatch#1 = $i40;

        if $i40 <= limit goto label22;

        chainLength#4 = chainLength#4 + -1;

        if chainLength#4 != 0 goto label07;

     label22:
        $i41 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead>;

        $i42 = staticinvoke <java.lang.Math: int min(int,int)>(best_len#23, $i41);

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = $i42;

        $i43 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen>;

        if $i43 < 3 goto label23;

        $z12 = 1;

        goto label24;

     label23:
        $z12 = 0;

     label24:
        return $z12;
    }

    private void updateHash()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean $z0;
        java.io.PrintStream $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0, $i1, $i3, $i4, $i5, $i7;
        java.lang.String $r4;
        byte[] $r5, $r6;
        byte $b2, $b6;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z0 == 0 goto label1;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateHash: ");

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label1:
        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $b2 = $r5[$i1];

        $i3 = $b2 << 5;

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i5 = $i4 + 1;

        $b6 = $r6[$i5];

        $i7 = $i3 ^ $b6;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int ins_h> = $i7;

        return;
    }

    protected void hook28(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int more;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        more := @parameter0: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressAdlerThreeTwoChecksum>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook28__role__DerivativeCompressAdler32Checksum(int)>(more);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook28__before__DerivativeCompressAdler32Checksum(int)>(more);

     label2:
        return;
    }

    protected void hook28__role__DerivativeCompressAdler32Checksum(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int more, $i0;
        edu.cmu.cs.mvelezce.zip.zipme.Adler32 $r0;
        byte[] $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        more := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.Adler32 adler>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] inputBuf>;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int inputOff>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Adler32: void update(byte[],int,int)>($r1, $i0, more);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook28__before__DerivativeCompressAdler32Checksum(int)>(more);

        return;
    }

    protected void hook28__before__DerivativeCompressAdler32Checksum(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int more;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        more := @parameter0: int;

        return;
    }

    public void setLevel(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int lvl, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        int[] $r0, $r1, $r2, $r3, $r4, $r10, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11;
        java.io.PrintStream $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;
        java.lang.String $r12;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman $r13, $r15, $r17, $r19;
        byte[] $r14, $r16, $r18, $r20;
        byte $b25;
        short $s26;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        lvl := @parameter0: int;

        $r0 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int[] GOOD_LENGTH>;

        $i0 = $r0[lvl];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int goodLength> = $i0;

        $r1 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int[] MAX_LAZY>;

        $i1 = $r1[lvl];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int max_lazy> = $i1;

        $r2 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int[] NICE_LENGTH>;

        $i2 = $r2[lvl];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int niceLength> = $i2;

        $r3 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int[] MAX_CHAIN>;

        $i3 = $r3[lvl];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int max_chain> = $i3;

        $r4 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int[] COMPR_FUNC>;

        $i4 = $r4[lvl];

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int comprFunc>;

        if $i4 == $i5 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label17;

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(0);

        if $z2 == 0 goto label03;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change from ");

        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int comprFunc>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterConstants: int[] COMPR_FUNC>;

        $i7 = $r10[lvl];

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label03:
        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int comprFunc>;

        tableswitch($i8)
        {
            case 0: goto label04;
            case 1: goto label08;
            case 2: goto label11;
            default: goto label16;
        };

     label04:
        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        if $i9 <= $i10 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z4 == 0 goto label07;

        $r13 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i13 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i14 = $i12 - $i13;

        virtualinvoke $r13.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushStoredBlock(byte[],int,int,boolean)>($r14, $i11, $i14, 0);

        $i15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i15;

     label07:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void updateHash()>();

        goto label16;

     label08:
        $i16 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i17 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        if $i16 <= $i17 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z6 == 0 goto label16;

        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i19 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i20 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i21 = $i19 - $i20;

        virtualinvoke $r15.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushBlock(byte[],int,int,boolean)>($r16, $i18, $i21, 0);

        $i22 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i22;

        goto label16;

     label11:
        $z7 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable>;

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label12;

        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r18 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i23 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i24 = $i23 - 1;

        $b25 = $r18[$i24];

        $s26 = $b25 & 255;

        virtualinvoke $r17.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: boolean tallyLit(int)>($s26);

     label12:
        $i27 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i28 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        if $i27 <= $i28 goto label13;

        $z10 = 1;

        goto label14;

     label13:
        $z10 = 0;

     label14:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label15;

        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        $r20 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: byte[] window>;

        $i29 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i30 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        $i31 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart>;

        $i32 = $i30 - $i31;

        virtualinvoke $r19.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void flushBlock(byte[],int,int,boolean)>($r20, $i29, $i32, 0);

        $i33 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = $i33;

     label15:
        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = 2;

     label16:
        $r21 = <edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int[] COMPR_FUNC>;

        $i34 = $r21[lvl];

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int comprFunc> = $i34;

     label17:
        return;
    }

    public final void setStrategy(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        int strat;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        strat := @parameter0: int;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strategy> = strat;

        return;
    }

    public void reset()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman $r0;
        int i#18, i#26;
        short[] $r1, $r2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman huffman>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterHuffman: void reset()>();

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook27()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int strstart> = 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int blockStart> = 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int lookahead> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: long totalIn> = 0L;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean prevAvailable> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int matchLen> = 2;

        i#18 = 0;

     label1:
        if i#18 >= 32768 goto label2;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] head>;

        $r1[i#18] = 0;

        i#18 = i#18 + 1;

        goto label1;

     label2:
        i#26 = 0;

     label3:
        if i#26 >= 32768 goto label4;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: short[] prev>;

        $r2[i#26] = 0;

        i#26 = i#26 + 1;

        goto label3;

     label4:
        return;
    }

    protected void hook27()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressAdlerThreeTwoChecksum>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook27__role__DerivativeCompressAdler32Checksum()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook27__before__DerivativeCompressAdler32Checksum()>();

     label2:
        return;
    }

    protected void hook27__role__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;
        edu.cmu.cs.mvelezce.zip.zipme.Adler32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: edu.cmu.cs.mvelezce.zip.zipme.Adler32 adler>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Adler32: void reset()>();

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void hook27__before__DerivativeCompressAdler32Checksum()>();

        return;
    }

    protected void hook27__before__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine;

        return;
    }


