    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/cleaner/UtilizationProfile";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, berkeley.com.sleepycat.je.cleaner.UtilizationTracker)
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl env;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker;
        java.util.TreeMap $r0;
        java.lang.Class $r1;
        java.util.logging.Logger $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        tracker := @parameter1: berkeley.com.sleepycat.je.cleaner.UtilizationTracker;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env> = env;

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker> = tracker;

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap> = $r0;

        $r1 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: java.util.logging.Logger getLogger(java.lang.Class)>($r1);

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.logging.Logger logger> = $r2;

        return;
    }

    public long getTotalLogSize()
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this, l3#4;
        java.util.Iterator l4, l3#27;
        berkeley.com.sleepycat.je.cleaner.FileSummary summary;
        java.lang.Throwable l6, $r4;
        berkeley.com.sleepycat.je.cleaner.TrackedFileSummary summary;
        long size#2, $l1, $l3;
        java.util.SortedMap $r1;
        java.util.Collection $r2, $r6;
        boolean $z0, $z1;
        java.lang.Object $r3, $r7;
        int $i0, $i2;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker $r5;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        size#2 = 0L;

        l3#4 = this;

        entermonitor this;

     label01:
        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Collection values()>();

        l4 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        $r3 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        summary = (berkeley.com.sleepycat.je.cleaner.FileSummary) $r3;

        $i0 = summary.<berkeley.com.sleepycat.je.cleaner.FileSummary: int totalSize>;

        $l1 = (long) $i0;

        size#2 = size#2 + $l1;

        goto label02;

     label03:
        exitmonitor l3#4;

     label04:
        goto label08;

     label05:
        $r4 := @caughtexception;

     label06:
        l6 = $r4;

        exitmonitor l3#4;

     label07:
        throw l6;

     label08:
        $r5 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker>;

        $r6 = virtualinvoke $r5.<berkeley.com.sleepycat.je.cleaner.UtilizationTracker: java.util.Collection getTrackedFiles()>();

        l3#27 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke l3#27.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label10;

        $r7 = interfaceinvoke l3#27.<java.util.Iterator: java.lang.Object next()>();

        summary = (berkeley.com.sleepycat.je.cleaner.TrackedFileSummary) $r7;

        $i2 = summary.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: int totalSize>;

        $l3 = (long) $i2;

        size#2 = size#2 + $l3;

        goto label09;

     label10:
        return size#2;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
    }

    public void flushFileSummary(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.cleaner.TrackedFileSummary tfs;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        tfs := @parameter0: berkeley.com.sleepycat.je.cleaner.TrackedFileSummary;

        $z0 = virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: boolean getAllowFlush()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.cleaner.PackedOffsets putFileSummary(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary)>(tfs);

     label1:
        return;
    }

    private synchronized berkeley.com.sleepycat.je.cleaner.PackedOffsets putFileSummary(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.cleaner.TrackedFileSummary tfs;
        long fileNum, $l0, $l3;
        java.lang.Long fileNumLong, $r7;
        berkeley.com.sleepycat.je.cleaner.FileSummary tmp, summary#21, $r12, $r13, summary#64;
        int sequence, $i2;
        berkeley.com.sleepycat.je.tree.FileSummaryLN ln, $r14;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r8, $r10, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r1;
        java.util.SortedMap $r2, $r4, $r5, $r15;
        java.lang.Object $r3, $r6, $r16;
        byte $b1;
        berkeley.com.sleepycat.je.log.FileManager $r9;
        berkeley.com.sleepycat.je.log.LogManager $r11;
        berkeley.com.sleepycat.je.cleaner.PackedOffsets $r18;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        tfs := @parameter0: berkeley.com.sleepycat.je.cleaner.TrackedFileSummary;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("Cannot write file summary in a read-only environment");

        throw $r1;

     label1:
        $z1 = virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        return null;

     label2:
        $z2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean cachePopulated>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label3;

        return null;

     label3:
        fileNum = virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: long getFileNumber()>();

        fileNumLong = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fileNum);

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(fileNumLong);

        summary#21 = (berkeley.com.sleepycat.je.cleaner.FileSummary) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(summary#21);

        if summary#21 != null goto label5;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $z3 = interfaceinvoke $r4.<java.util.SortedMap: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label4;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.lang.Object lastKey()>();

        $r7 = (java.lang.Long) $r6;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $b1 = fileNum cmp $l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 >= 0 goto label4;

        $r8 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r9 = virtualinvoke $r8.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        $z4 = virtualinvoke $r9.<berkeley.com.sleepycat.je.log.FileManager: boolean isFileValid(long)>(fileNum);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label4;

        $r10 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r11 = virtualinvoke $r10.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.LogManager getLogManager()>();

        virtualinvoke $r11.<berkeley.com.sleepycat.je.log.LogManager: void removeTrackedFile(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary)>(tfs);

        return null;

     label4:
        $r12 = new berkeley.com.sleepycat.je.cleaner.FileSummary;

        specialinvoke $r12.<berkeley.com.sleepycat.je.cleaner.FileSummary: void <init>()>();

        summary#21 = $r12;

     label5:
        $r13 = new berkeley.com.sleepycat.je.cleaner.FileSummary;

        specialinvoke $r13.<berkeley.com.sleepycat.je.cleaner.FileSummary: void <init>()>();

        tmp = $r13;

        virtualinvoke tmp.<berkeley.com.sleepycat.je.cleaner.FileSummary: void add(berkeley.com.sleepycat.je.cleaner.FileSummary)>(summary#21);

        virtualinvoke tmp.<berkeley.com.sleepycat.je.cleaner.FileSummary: void add(berkeley.com.sleepycat.je.cleaner.FileSummary)>(tfs);

        sequence = virtualinvoke tmp.<berkeley.com.sleepycat.je.cleaner.FileSummary: int getEntriesCounted()>();

        $r14 = new berkeley.com.sleepycat.je.tree.FileSummaryLN;

        specialinvoke $r14.<berkeley.com.sleepycat.je.tree.FileSummaryLN: void <init>(berkeley.com.sleepycat.je.cleaner.FileSummary)>(summary#21);

        ln = $r14;

        virtualinvoke ln.<berkeley.com.sleepycat.je.tree.FileSummaryLN: void setTrackedSummary(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary)>(tfs);

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean insertFileSummary(berkeley.com.sleepycat.je.tree.FileSummaryLN,long,int)>(ln, fileNum, sequence);

        summary#64 = virtualinvoke ln.<berkeley.com.sleepycat.je.tree.FileSummaryLN: berkeley.com.sleepycat.je.cleaner.FileSummary getBaseSummary()>();

        $r15 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $r16 = interfaceinvoke $r15.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileNumLong, summary#64);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r16);

        if $r16 != null goto label6;

        $r17 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        mb = virtualinvoke $r17.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $i2 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int UTILIZATION_PROFILE_ENTRY>;

        $l3 = (long) $i2;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateAdminMemoryUsage(long)>($l3);

     label6:
        $r18 = virtualinvoke ln.<berkeley.com.sleepycat.je.tree.FileSummaryLN: berkeley.com.sleepycat.je.cleaner.PackedOffsets getObsoleteOffsets()>();

        return $r18;
    }

    synchronized boolean insertFileSummary(berkeley.com.sleepycat.je.tree.FileSummaryLN, long, int) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.tree.FileSummaryLN ln;
        long fileNum, $l0;
        int sequence;
        byte[] keyBytes;
        boolean inserted, l9#44, l9#52;
        java.lang.Throwable l10, $r15;
        berkeley.com.sleepycat.je.txn.BasicLocker locker#5;
        berkeley.com.sleepycat.je.dbi.CursorImpl cursor#7, $r1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r5;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r2;
        berkeley.com.sleepycat.je.log.ReplicationContext $r3;
        java.util.logging.Logger $r4;
        java.util.logging.Level $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r9, $r12, $r14;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        ln := @parameter0: berkeley.com.sleepycat.je.tree.FileSummaryLN;

        fileNum := @parameter1: long;

        sequence := @parameter2: int;

        keyBytes = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: byte[] makeFullKey(long,int)>(fileNum, sequence);

        locker#5 = null;

        cursor#7 = null;

     label01:
        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        locker#5 = staticinvoke <berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.BasicLocker createBasicLocker(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,boolean)>($r0, 0);

        $r1 = new berkeley.com.sleepycat.je.dbi.CursorImpl;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        specialinvoke $r1.<berkeley.com.sleepycat.je.dbi.CursorImpl: void <init>(berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.txn.Locker)>($r2, locker#5);

        cursor#7 = $r1;

        $r3 = <berkeley.com.sleepycat.je.log.ReplicationContext: berkeley.com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        inserted = virtualinvoke cursor#7.<berkeley.com.sleepycat.je.dbi.CursorImpl: boolean insertRecord(byte[],berkeley.com.sleepycat.je.tree.LN,boolean,berkeley.com.sleepycat.je.log.ReplicationContext)>(keyBytes, ln, 0, $r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(inserted);

        if inserted != 0 goto label05;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.logging.Logger logger>;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r6 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaner duplicate key sequence file=0x");

        $r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(fileNum);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sequence=0x");

        $l0 = (long) sequence;

        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void traceAndLog(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r4, $r5, $r6, $r14);

        l9#44 = 0;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#7);

        if cursor#7 == null goto label03;

        virtualinvoke cursor#7.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#5);

        if locker#5 == null goto label04;

        virtualinvoke locker#5.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

     label04:
        return l9#44;

     label05:
        virtualinvoke cursor#7.<berkeley.com.sleepycat.je.dbi.CursorImpl: void evictLN()>();

        l9#52 = 1;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#7);

        if cursor#7 == null goto label07;

        virtualinvoke cursor#7.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#5);

        if locker#5 == null goto label08;

        virtualinvoke locker#5.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

     label08:
        return l9#52;

     label09:
        $r15 := @caughtexception;

     label10:
        l10 = $r15;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#7);

        if cursor#7 == null goto label12;

        virtualinvoke cursor#7.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#5);

        if locker#5 == null goto label13;

        virtualinvoke locker#5.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

     label13:
        throw l10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void flushLocalTracker(berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker localTracker;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0;
        berkeley.com.sleepycat.je.log.LogManager $r1;
        java.util.Collection $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        localTracker := @parameter0: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.LogManager getLogManager()>();

        virtualinvoke $r1.<berkeley.com.sleepycat.je.log.LogManager: void transferToUtilizationTracker(berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker)>(localTracker);

        $r2 = virtualinvoke localTracker.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: java.util.Collection getTrackedFiles()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void flushFileUtilization(java.util.Collection)>($r2);

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void flushDbUtilization(berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker)>(localTracker);

        return;
    }

    public void flushFileUtilization(java.util.Collection) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        java.util.Collection activeFiles;
        java.util.Iterator l2;
        berkeley.com.sleepycat.je.cleaner.TrackedFileSummary activeFile, tfs;
        long fileNum;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0;
        berkeley.com.sleepycat.je.dbi.DbConfigManager $r1;
        berkeley.com.sleepycat.je.EnvironmentConfig $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker $r4;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        activeFiles := @parameter0: java.util.Collection;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.DbConfigManager: berkeley.com.sleepycat.je.EnvironmentConfig getEnvironmentConfig()>();

        $z0 = staticinvoke <berkeley.com.sleepycat.je.DbInternal: boolean getCheckpointUP(berkeley.com.sleepycat.je.EnvironmentConfig)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        l2 = interfaceinvoke activeFiles.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        activeFile = (berkeley.com.sleepycat.je.cleaner.TrackedFileSummary) $r3;

        fileNum = virtualinvoke activeFile.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: long getFileNumber()>();

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker>;

        tfs = virtualinvoke $r4.<berkeley.com.sleepycat.je.cleaner.UtilizationTracker: berkeley.com.sleepycat.je.cleaner.TrackedFileSummary getTrackedFile(long)>(fileNum);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tfs);

        if tfs == null goto label3;

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void flushFileSummary(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary)>(tfs);

     label3:
        goto label2;

     label4:
        return;
    }

    private void flushDbUtilization(berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker localTracker;
        java.util.Iterator l2;
        java.lang.Object o;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r4;
        berkeley.com.sleepycat.je.dbi.DbConfigManager $r1;
        berkeley.com.sleepycat.je.EnvironmentConfig $r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r3;
        berkeley.com.sleepycat.je.dbi.DbTree $r5;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        localTracker := @parameter0: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.DbConfigManager: berkeley.com.sleepycat.je.EnvironmentConfig getEnvironmentConfig()>();

        $z0 = staticinvoke <berkeley.com.sleepycat.je.DbInternal: boolean getCheckpointUP(berkeley.com.sleepycat.je.EnvironmentConfig)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke localTracker.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: java.util.Set getTrackedDbs()>();

        l2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        o = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        db = (berkeley.com.sleepycat.je.dbi.DatabaseImpl) o;

        $z2 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isDeleted()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke db.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean isDirty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label3;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r5 = virtualinvoke $r4.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbTree getDbTree()>();

        virtualinvoke $r5.<berkeley.com.sleepycat.je.dbi.DbTree: void modifyDbRoot(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

     label3:
        goto label2;

     label4:
        return;
    }

    void removePerFileMetadata(java.lang.Long) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this, l2;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.cleaner.FileSummary oldSummary;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int $i0, $i1;
        java.lang.Throwable l5, $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r1;
        java.util.SortedMap $r2;
        java.lang.Object $r3;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r4;
        long $l2;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        fileNum := @parameter0: java.lang.Long;

        l2 = this;

        entermonitor this;

     label1:
        $z0 = <berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $z1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean cachePopulated>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>(fileNum);

        oldSummary = (berkeley.com.sleepycat.je.cleaner.FileSummary) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(oldSummary);

        if oldSummary == null goto label3;

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        mb = virtualinvoke $r4.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int UTILIZATION_PROFILE_ENTRY>;

        $i1 = 0 - $i0;

        $l2 = (long) $i1;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateAdminMemoryUsage(long)>($l2);

     label3:
        exitmonitor l2;

     label4:
        goto label8;

     label5:
        $r5 := @caughtexception;

     label6:
        l5 = $r5;

        exitmonitor l2;

     label7:
        throw l5;

     label8:
        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void deleteFileSummary(java.lang.Long)>(fileNum);

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void deleteFileSummary(java.lang.Long) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.DatabaseEntry keyEntry, dataEntry, $r3, $r4;
        java.lang.Throwable l7, $r11;
        berkeley.com.sleepycat.je.cleaner.TrackedFileSummary tfs;
        berkeley.com.sleepycat.je.txn.BasicLocker locker#2;
        berkeley.com.sleepycat.je.dbi.CursorImpl cursor#4, $r1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r7, $r13;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r2;
        berkeley.com.sleepycat.je.OperationResult result#25;
        long $l0, $l1, $l2, $l4;
        berkeley.com.sleepycat.je.txn.LockType $r5, $r10;
        boolean $z0;
        byte[] $r6;
        byte $b3;
        berkeley.com.sleepycat.je.log.ReplicationContext $r8;
        berkeley.com.sleepycat.je.cleaner.UtilizationTracker $r12;
        berkeley.com.sleepycat.je.log.LogManager $r14;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        fileNum := @parameter0: java.lang.Long;

        locker#2 = null;

        cursor#4 = null;

     label01:
        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        locker#2 = staticinvoke <berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.BasicLocker createBasicLocker(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,boolean)>($r0, 0);

        $r1 = new berkeley.com.sleepycat.je.dbi.CursorImpl;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        specialinvoke $r1.<berkeley.com.sleepycat.je.dbi.CursorImpl: void <init>(berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.txn.Locker)>($r2, locker#2);

        cursor#4 = $r1;

        virtualinvoke cursor#4.<berkeley.com.sleepycat.je.dbi.CursorImpl: void setAllowEviction(boolean)>(1);

        $r3 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r3.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        keyEntry = $r3;

        $r4 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r4.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        dataEntry = $r4;

        virtualinvoke dataEntry.<berkeley.com.sleepycat.je.DatabaseEntry: void setPartial(int,int,boolean)>(0, 0, 1);

        result#25 = null;

        $l0 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r5 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType WRITE>;

        $z0 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean getFirstFSLN(berkeley.com.sleepycat.je.dbi.CursorImpl,long,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType)>(cursor#4, $l0, keyEntry, dataEntry, $r5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        result#25 = <berkeley.com.sleepycat.je.DbInternal: berkeley.com.sleepycat.je.OperationResult DEFAULT_RESULT>;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#25);

        if result#25 == null goto label03;

        $l1 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r6 = virtualinvoke keyEntry.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $l2 = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: long getFileNumber(byte[])>($r6);

        $b3 = $l1 cmp $l2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 != 0 goto label03;

        $r7 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        virtualinvoke $r7.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void daemonEviction(boolean)>(1);

        $r8 = <berkeley.com.sleepycat.je.log.ReplicationContext: berkeley.com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        virtualinvoke cursor#4.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult deleteCurrentRecord(berkeley.com.sleepycat.je.log.ReplicationContext)>($r8);

        $r10 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType WRITE>;

        result#25 = virtualinvoke cursor#4.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult getNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean,berkeley.com.sleepycat.je.dbi.RangeConstraint)>(keyEntry, dataEntry, $r10, 0, 1, 0, null);

        goto label02;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#4);

        if cursor#4 == null goto label04;

        virtualinvoke cursor#4.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#2);

        if locker#2 == null goto label10;

        virtualinvoke locker#2.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

        goto label10;

     label05:
        $r11 := @caughtexception;

     label06:
        l7 = $r11;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#4);

        if cursor#4 == null goto label08;

        virtualinvoke cursor#4.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#2);

        if locker#2 == null goto label09;

        virtualinvoke locker#2.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

     label09:
        throw l7;

     label10:
        $r12 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.cleaner.UtilizationTracker tracker>;

        $l4 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        tfs = virtualinvoke $r12.<berkeley.com.sleepycat.je.cleaner.UtilizationTracker: berkeley.com.sleepycat.je.cleaner.TrackedFileSummary getTrackedFile(long)>($l4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tfs);

        if tfs == null goto label11;

        $r13 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r14 = virtualinvoke $r13.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.LogManager getLogManager()>();

        virtualinvoke $r14.<berkeley.com.sleepycat.je.log.LogManager: void removeTrackedFile(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary)>(tfs);

     label11:
        return;

        catch java.lang.Throwable from label01 to label03 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
    }

    private boolean getFirstFSLN(berkeley.com.sleepycat.je.dbi.CursorImpl, long, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.txn.LockType) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.dbi.CursorImpl cursor;
        long fileNum;
        berkeley.com.sleepycat.je.DatabaseEntry keyEntry, dataEntry;
        berkeley.com.sleepycat.je.txn.LockType lockType;
        byte[] keyBytes;
        boolean l9, exactKeyMatch, l10, $z0, $z1;
        java.lang.Throwable l11, $r1;
        int result#10, $i0, $i1;
        berkeley.com.sleepycat.je.OperationResult $r0, result#46;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        cursor := @parameter0: berkeley.com.sleepycat.je.dbi.CursorImpl;

        fileNum := @parameter1: long;

        keyEntry := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        dataEntry := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry;

        lockType := @parameter4: berkeley.com.sleepycat.je.txn.LockType;

        keyBytes = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: byte[] makePartialKey(long)>(fileNum);

        virtualinvoke keyEntry.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[])>(keyBytes);

        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void reset()>();

     label01:
        result#10 = virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: int searchRange(berkeley.com.sleepycat.je.DatabaseEntry,java.util.Comparator)>(keyEntry, null);

        $i0 = result#10 & 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label03;

        l9 = 0;

     label02:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void releaseBIN()>();

        return l9;

     label03:
        $i1 = result#10 & 2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 == 0 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        exactKeyMatch = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(exactKeyMatch);

        if exactKeyMatch == 0 goto label07;

        $r0 = virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult lockAndGetCurrent(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean)>(keyEntry, dataEntry, lockType, 0, 1, 0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label07;

        l10 = 1;

     label06:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void releaseBIN()>();

        return l10;

     label07:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void releaseBIN()>();

        goto label11;

     label08:
        $r1 := @caughtexception;

     label09:
        l11 = $r1;

     label10:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void releaseBIN()>();

        throw l11;

     label11:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void evictLN()>();

        result#46 = virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult getNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean,berkeley.com.sleepycat.je.dbi.RangeConstraint)>(keyEntry, dataEntry, lockType, 0, 1, 0, null);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#46);

        if result#46 == null goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        return $z1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void removePerDbMetadata(java.util.Collection, java.util.Set) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        java.util.Collection fileNums;
        java.util.Set databases;
        berkeley.com.sleepycat.je.log.LogManager logManager;
        berkeley.com.sleepycat.je.dbi.DbTree dbTree;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl idDatabase, nameDatabase, db;
        java.util.Iterator l8;
        berkeley.com.sleepycat.je.dbi.DatabaseId dbId, $r3, $r4, $r7, $r8;
        java.lang.Throwable l11, $r9;
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile$1 $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1, $r2, $r5;
        boolean logRoot#14, $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r6;
        berkeley.com.sleepycat.je.txn.LockType $r10;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        fileNums := @parameter0: java.util.Collection;

        databases := @parameter1: java.util.Set;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        logManager = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.LogManager getLogManager()>();

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        dbTree = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbTree getDbTree()>();

        $r3 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId ID_DB_ID>;

        idDatabase = virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDb(berkeley.com.sleepycat.je.dbi.DatabaseId)>($r3);

        $r4 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId NAME_DB_ID>;

        nameDatabase = virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDb(berkeley.com.sleepycat.je.dbi.DatabaseId)>($r4);

        logRoot#14 = 0;

        $z0 = virtualinvoke logManager.<berkeley.com.sleepycat.je.log.LogManager: boolean removeDbFileSummaries(berkeley.com.sleepycat.je.dbi.DatabaseImpl,java.util.Collection)>(idDatabase, fileNums);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        logRoot#14 = 1;

     label01:
        $z1 = virtualinvoke logManager.<berkeley.com.sleepycat.je.log.LogManager: boolean removeDbFileSummaries(berkeley.com.sleepycat.je.dbi.DatabaseImpl,java.util.Collection)>(nameDatabase, fileNums);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        logRoot#14 = 1;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logRoot#14);

        if logRoot#14 == 0 goto label03;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        virtualinvoke $r5.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void logMapTreeRoot()>();

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(databases);

        if databases == null goto label12;

        l8 = interfaceinvoke databases.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label11;

        $r6 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        dbId = (berkeley.com.sleepycat.je.dbi.DatabaseId) $r6;

        $r7 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId ID_DB_ID>;

        $z3 = virtualinvoke dbId.<berkeley.com.sleepycat.je.dbi.DatabaseId: boolean equals(java.lang.Object)>($r7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label10;

        $r8 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId NAME_DB_ID>;

        $z4 = virtualinvoke dbId.<berkeley.com.sleepycat.je.dbi.DatabaseId: boolean equals(java.lang.Object)>($r8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label10;

        db = virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDb(berkeley.com.sleepycat.je.dbi.DatabaseId)>(dbId);

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(db);

        if db == null goto label06;

        $z5 = virtualinvoke logManager.<berkeley.com.sleepycat.je.log.LogManager: boolean removeDbFileSummaries(berkeley.com.sleepycat.je.dbi.DatabaseImpl,java.util.Collection)>(db, fileNums);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label06;

        virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: void modifyDbRoot(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

     label06:
        virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        goto label10;

     label07:
        $r9 := @caughtexception;

     label08:
        l11 = $r9;

     label09:
        virtualinvoke dbTree.<berkeley.com.sleepycat.je.dbi.DbTree: void releaseDb(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(db);

        throw l11;

     label10:
        goto label04;

     label11:
        goto label13;

     label12:
        $r10 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        $r0 = new berkeley.com.sleepycat.je.cleaner.UtilizationProfile$1;

        specialinvoke $r0.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile$1: void <init>(berkeley.com.sleepycat.je.cleaner.UtilizationProfile,berkeley.com.sleepycat.je.log.LogManager,java.util.Collection,berkeley.com.sleepycat.je.dbi.DbTree)>(this, logManager, fileNums, dbTree);

        staticinvoke <berkeley.com.sleepycat.je.dbi.CursorImpl: void traverseDbWithCursor(berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.txn.LockType,boolean,berkeley.com.sleepycat.je.dbi.CursorImpl$WithCursor)>(idDatabase, $r10, 1, $r0);

     label13:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public boolean populateCache(berkeley.com.sleepycat.je.dbi.StartupTracker$Counter) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.dbi.StartupTracker$Counter counter;
        int oldMemorySize, newMemorySize, newMemorySize, $i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10;
        java.lang.Long[] existingFiles;
        berkeley.com.sleepycat.je.DatabaseEntry keyEntry, dataEntry, $r7, $r8;
        berkeley.com.sleepycat.je.tree.FileSummaryLN ln;
        byte[] keyBytes;
        boolean isOldVersion, $z0, $z1, $z2, $z3, $z4, $z6, $z7;
        long fileNum, $l3, $l7, $l11;
        java.lang.Long fileNumLong;
        berkeley.com.sleepycat.je.cleaner.FileSummary summary;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb, mb;
        java.lang.Throwable l16, $r30;
        java.lang.AssertionError $r0;
        java.util.SortedMap $r1, $r15, $r20, $r28, $r31;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2, $r4, $r11, $r17, $r22, $r29, $r32;
        berkeley.com.sleepycat.je.log.FileManager $r3;
        berkeley.com.sleepycat.je.txn.BasicLocker locker#19;
        berkeley.com.sleepycat.je.dbi.CursorImpl cursor#21, $r5;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r6;
        berkeley.com.sleepycat.je.txn.LockType $r9, $r10, $r12, $r14, $r26, $r27;
        berkeley.com.sleepycat.je.OperationResult result#48;
        berkeley.com.sleepycat.je.tree.LN $r13;
        berkeley.com.sleepycat.je.log.ReplicationContext $r18, $r24;
        java.util.Set $r23;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        counter := @parameter0: berkeley.com.sleepycat.je.dbi.StartupTracker$Counter;

        $z0 = <berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        $z1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean cachePopulated>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label01;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label01:
        $z2 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean openFileSummaryDatabase()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label02;

        return 0;

     label02:
        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $i0 = interfaceinvoke $r1.<java.util.SortedMap: int size()>();

        $i1 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int UTILIZATION_PROFILE_ENTRY>;

        oldMemorySize = $i0 * $i1;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        existingFiles = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.FileManager: java.lang.Long[] getAllFileNumbers()>();

        locker#19 = null;

        cursor#21 = null;

     label03:
        $r4 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        locker#19 = staticinvoke <berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.BasicLocker createBasicLocker(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,boolean)>($r4, 0);

        $r5 = new berkeley.com.sleepycat.je.dbi.CursorImpl;

        $r6 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        specialinvoke $r5.<berkeley.com.sleepycat.je.dbi.CursorImpl: void <init>(berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.txn.Locker)>($r6, locker#19);

        cursor#21 = $r5;

        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: void setAllowEviction(boolean)>(1);

        $r7 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r7.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        keyEntry = $r7;

        $r8 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r8.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        dataEntry = $r8;

        $z3 = virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: boolean positionFirstOrLast(boolean)>(1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label13;

        $r9 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        result#48 = virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult lockAndGetCurrent(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean)>(keyEntry, dataEntry, $r9, 0, 1, 1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#48);

        if result#48 != null goto label04;

        $r10 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        result#48 = virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult getNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean,berkeley.com.sleepycat.je.dbi.RangeConstraint)>(keyEntry, dataEntry, $r10, 0, 1, 0, null);

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#48);

        if result#48 == null goto label13;

        virtualinvoke counter.<berkeley.com.sleepycat.je.dbi.StartupTracker$Counter: void incNumRead()>();

        $r11 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        virtualinvoke $r11.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void daemonEviction(boolean)>(0);

        $r12 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        $r13 = virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.tree.LN lockAndGetCurrentLN(berkeley.com.sleepycat.je.txn.LockType)>($r12);

        ln = (berkeley.com.sleepycat.je.tree.FileSummaryLN) $r13;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ln);

        if ln != null goto label05;

        $r14 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        result#48 = virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult getNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean,berkeley.com.sleepycat.je.dbi.RangeConstraint)>(keyEntry, dataEntry, $r14, 0, 1, 0, null);

        goto label04;

     label05:
        keyBytes = virtualinvoke keyEntry.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        isOldVersion = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: boolean hasStringKey(byte[])>(keyBytes);

        fileNum = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: long getFileNumber(byte[])>(keyBytes);

        fileNumLong = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fileNum);

        $i2 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(existingFiles, fileNumLong);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 < 0 goto label08;

        virtualinvoke counter.<berkeley.com.sleepycat.je.dbi.StartupTracker$Counter: void incNumProcessed()>();

        summary = virtualinvoke ln.<berkeley.com.sleepycat.je.tree.FileSummaryLN: berkeley.com.sleepycat.je.cleaner.FileSummary getBaseSummary()>();

        $r15 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        interfaceinvoke $r15.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileNumLong, summary);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isOldVersion);

        if isOldVersion == 0 goto label06;

        $r17 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $z4 = virtualinvoke $r17.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label06;

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean insertFileSummary(berkeley.com.sleepycat.je.tree.FileSummaryLN,long,int)>(ln, fileNum, 0);

        $r18 = <berkeley.com.sleepycat.je.log.ReplicationContext: berkeley.com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult deleteCurrentRecord(berkeley.com.sleepycat.je.log.ReplicationContext)>($r18);

        goto label07;

     label06:
        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: void evictLN()>();

     label07:
        goto label10;

     label08:
        virtualinvoke counter.<berkeley.com.sleepycat.je.dbi.StartupTracker$Counter: void incNumDeleted()>();

        $r20 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        interfaceinvoke $r20.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>(fileNumLong);

        $r22 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $z6 = virtualinvoke $r22.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label10;

        $r23 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(fileNumLong);

        virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void removePerDbMetadata(java.util.Collection,java.util.Set)>($r23, null);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isOldVersion);

        if isOldVersion == 0 goto label09;

        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: void latchBIN()>();

        $r24 = <berkeley.com.sleepycat.je.log.ReplicationContext: berkeley.com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult deleteCurrentRecord(berkeley.com.sleepycat.je.log.ReplicationContext)>($r24);

        goto label10;

     label09:
        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void deleteFileSummary(java.lang.Long)>(fileNumLong);

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isOldVersion);

        if isOldVersion == 0 goto label11;

        $r26 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        result#48 = virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult getNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean,berkeley.com.sleepycat.je.dbi.RangeConstraint)>(keyEntry, dataEntry, $r26, 0, 1, 0, null);

        goto label12;

     label11:
        $l3 = fileNum + 1L;

        $r27 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        $z7 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean getFirstFSLN(berkeley.com.sleepycat.je.dbi.CursorImpl,long,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType)>(cursor#21, $l3, keyEntry, dataEntry, $r27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label12;

        result#48 = null;

     label12:
        goto label04;

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#21);

        if cursor#21 == null goto label14;

        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label14:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#19);

        if locker#19 == null goto label15;

        virtualinvoke locker#19.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

     label15:
        $r28 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $i4 = interfaceinvoke $r28.<java.util.SortedMap: int size()>();

        $i5 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int UTILIZATION_PROFILE_ENTRY>;

        newMemorySize = $i4 * $i5;

        $r29 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        mb = virtualinvoke $r29.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $i6 = newMemorySize - oldMemorySize;

        $l7 = (long) $i6;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateAdminMemoryUsage(long)>($l7);

        goto label21;

     label16:
        $r30 := @caughtexception;

     label17:
        l16 = $r30;

     label18:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cursor#21);

        if cursor#21 == null goto label19;

        virtualinvoke cursor#21.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

     label19:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker#19);

        if locker#19 == null goto label20;

        virtualinvoke locker#19.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

     label20:
        $r31 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $i8 = interfaceinvoke $r31.<java.util.SortedMap: int size()>();

        $i9 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int UTILIZATION_PROFILE_ENTRY>;

        newMemorySize = $i8 * $i9;

        $r32 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        mb = virtualinvoke $r32.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $i10 = newMemorySize - oldMemorySize;

        $l11 = (long) $i10;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateAdminMemoryUsage(long)>($l11);

        throw l16;

     label21:
        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean cachePopulated> = 1;

        return 1;

        catch java.lang.Throwable from label03 to label13 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private boolean openFileSummaryDatabase() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.dbi.DbType $r0;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r1, $r4, $r5;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2;
        berkeley.com.sleepycat.je.dbi.DbTree $r3;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.DbTree getDbTree()>();

        $r0 = <berkeley.com.sleepycat.je.dbi.DbType: berkeley.com.sleepycat.je.dbi.DbType UTILIZATION>;

        $r4 = virtualinvoke $r3.<berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseImpl openNonRepInternalDB(berkeley.com.sleepycat.je.dbi.DbType)>($r0);

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb> = $r4;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if $r5 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    void close()
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r0, $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: void clearCache()>();

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: void releaseTreeAdminMemory()>();

     label1:
        return;
    }

    private synchronized void clearCache()
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        int memorySize, $i0, $i1, $i2;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        java.util.SortedMap $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1;
        long $l3;
        java.util.TreeMap $r2;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap>;

        $i0 = interfaceinvoke $r0.<java.util.SortedMap: int size()>();

        $i1 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int UTILIZATION_PROFILE_ENTRY>;

        memorySize = $i0 * $i1;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        mb = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $i2 = 0 - memorySize;

        $l3 = (long) $i2;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateAdminMemoryUsage(long)>($l3);

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: java.util.SortedMap fileSummaryMap> = $r2;

        this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean cachePopulated> = 0;

        return;
    }

    berkeley.com.sleepycat.je.cleaner.PackedOffsets getObsoleteDetail(java.lang.Long, boolean) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.cleaner.UtilizationProfile this;
        java.lang.Long fileNum;
        boolean logUpdate, $z0, $z1, $z2, $z3, $z5, $z8, $z9, $z10;
        berkeley.com.sleepycat.je.cleaner.PackedOffsets packedOffsets, offsets, offsets, $r0;
        long fileNumVal, $l0;
        java.util.ArrayList list, $r4;
        berkeley.com.sleepycat.je.cleaner.TrackedFileSummary tfs;
        berkeley.com.sleepycat.je.txn.BasicLocker locker;
        berkeley.com.sleepycat.je.dbi.CursorImpl cursor, $r8;
        berkeley.com.sleepycat.je.DatabaseEntry keyEntry, dataEntry, $r10, $r11;
        berkeley.com.sleepycat.je.tree.FileSummaryLN ln;
        java.lang.Throwable l15, l16, $r19, $r21;
        long[] offsetList, a, offsets, a, $r17, $r20;
        java.util.Iterator l9, l11;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1, $r5, $r7, $r13;
        berkeley.com.sleepycat.je.cleaner.Cleaner $r2;
        java.lang.AssertionError $r3, $r24;
        berkeley.com.sleepycat.je.log.LogManager $r6;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r9;
        berkeley.com.sleepycat.je.OperationResult result#38;
        berkeley.com.sleepycat.je.txn.LockType $r12, $r14, $r18;
        berkeley.com.sleepycat.je.tree.LN $r15;
        byte[] $r16;
        byte $b1;
        int size#107, $i2, index#122, $i3, $i4, $i5;
        java.lang.Object $r22, $r23;

        this := @this: berkeley.com.sleepycat.je.cleaner.UtilizationProfile;

        fileNum := @parameter0: java.lang.Long;

        logUpdate := @parameter1: boolean;

        $r0 = new berkeley.com.sleepycat.je.cleaner.PackedOffsets;

        specialinvoke $r0.<berkeley.com.sleepycat.je.cleaner.PackedOffsets: void <init>()>();

        packedOffsets = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.cleaner.Cleaner getCleaner()>();

        $z0 = $r2.<berkeley.com.sleepycat.je.cleaner.Cleaner: boolean trackDetail>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        return packedOffsets;

     label01:
        $z1 = <berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label02;

        $z2 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean cachePopulated>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label02;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label02:
        fileNumVal = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        list = $r4;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        $r6 = virtualinvoke $r5.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.LogManager getLogManager()>();

        tfs = virtualinvoke $r6.<berkeley.com.sleepycat.je.log.LogManager: berkeley.com.sleepycat.je.cleaner.TrackedFileSummary getUnflushableTrackedSummary(long)>(fileNumVal);

     label03:
        $r7 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        locker = staticinvoke <berkeley.com.sleepycat.je.txn.BasicLocker: berkeley.com.sleepycat.je.txn.BasicLocker createBasicLocker(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,boolean)>($r7, 0);

        $r8 = new berkeley.com.sleepycat.je.dbi.CursorImpl;

        $r9 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.DatabaseImpl fileSummaryDb>;

        specialinvoke $r8.<berkeley.com.sleepycat.je.dbi.CursorImpl: void <init>(berkeley.com.sleepycat.je.dbi.DatabaseImpl,berkeley.com.sleepycat.je.txn.Locker)>($r9, locker);

        cursor = $r8;

     label04:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void setAllowEviction(boolean)>(1);

        $r10 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r10.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        keyEntry = $r10;

        $r11 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r11.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        dataEntry = $r11;

        result#38 = null;

        $r12 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        $z3 = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean getFirstFSLN(berkeley.com.sleepycat.je.dbi.CursorImpl,long,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType)>(cursor, fileNumVal, keyEntry, dataEntry, $r12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label05;

        result#38 = <berkeley.com.sleepycat.je.DbInternal: berkeley.com.sleepycat.je.OperationResult DEFAULT_RESULT>;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#38);

        if result#38 == null goto label09;

        $r13 = this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.dbi.EnvironmentImpl env>;

        virtualinvoke $r13.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: void daemonEviction(boolean)>(1);

        $r14 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        $r15 = virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.tree.LN lockAndGetCurrentLN(berkeley.com.sleepycat.je.txn.LockType)>($r14);

        ln = (berkeley.com.sleepycat.je.tree.FileSummaryLN) $r15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ln);

        if ln == null goto label08;

        $r16 = virtualinvoke keyEntry.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $l0 = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: long getFileNumber(byte[])>($r16);

        $b1 = fileNumVal cmp $l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 0 goto label06;

        goto label09;

     label06:
        offsets = virtualinvoke ln.<berkeley.com.sleepycat.je.tree.FileSummaryLN: berkeley.com.sleepycat.je.cleaner.PackedOffsets getObsoleteOffsets()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offsets);

        if offsets == null goto label07;

        $r17 = virtualinvoke offsets.<berkeley.com.sleepycat.je.cleaner.PackedOffsets: long[] toArray()>();

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r17);

     label07:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void evictLN()>();

     label08:
        $r18 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType NONE>;

        result#38 = virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.OperationResult getNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.txn.LockType,boolean,boolean,boolean,berkeley.com.sleepycat.je.dbi.RangeConstraint)>(keyEntry, dataEntry, $r18, 0, 1, 0, null);

        goto label05;

     label09:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

        virtualinvoke locker.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

        goto label13;

     label10:
        $r19 := @caughtexception;

     label11:
        l15 = $r19;

     label12:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.dbi.CursorImpl: void close()>();

        virtualinvoke locker.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd()>();

        throw l15;

     label13:
        $z5 = virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logUpdate);

        if logUpdate == 0 goto label15;

        offsets = specialinvoke this.<berkeley.com.sleepycat.je.cleaner.UtilizationProfile: berkeley.com.sleepycat.je.cleaner.PackedOffsets putFileSummary(berkeley.com.sleepycat.je.cleaner.TrackedFileSummary)>(tfs);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offsets);

        if offsets == null goto label14;

        $r20 = virtualinvoke offsets.<berkeley.com.sleepycat.je.cleaner.PackedOffsets: long[] toArray()>();

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r20);

     label14:
        goto label16;

     label15:
        offsetList = virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: long[] getObsoleteOffsets()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offsetList);

        if offsetList == null goto label16;

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>(offsetList);

     label16:
        virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: void setAllowFlush(boolean)>(1);

        goto label20;

     label17:
        $r21 := @caughtexception;

     label18:
        l16 = $r21;

     label19:
        virtualinvoke tfs.<berkeley.com.sleepycat.je.cleaner.TrackedFileSummary: void setAllowFlush(boolean)>(1);

        throw l16;

     label20:
        size#107 = 0;

        l9 = interfaceinvoke list.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z8 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label22;

        $r22 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        a = (long[]) $r22;

        $i2 = lengthof a;

        size#107 = size#107 + $i2;

        goto label21;

     label22:
        offsets = newarray (long)[size#107];

        index#122 = 0;

        l11 = interfaceinvoke list.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z9 = interfaceinvoke l11.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label24;

        $r23 = interfaceinvoke l11.<java.util.Iterator: java.lang.Object next()>();

        a = (long[]) $r23;

        $i3 = lengthof a;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(a, 0, offsets, index#122, $i3);

        $i4 = lengthof a;

        index#122 = index#122 + $i4;

        goto label23;

     label24:
        $z10 = <berkeley.com.sleepycat.je.cleaner.UtilizationProfile: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 != 0 goto label25;

        $i5 = lengthof offsets;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index#122);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if index#122 == $i5 goto label25;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label25:
        virtualinvoke packedOffsets.<berkeley.com.sleepycat.je.cleaner.PackedOffsets: void pack(long[])>(offsets);

        return packedOffsets;

        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label03 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }


