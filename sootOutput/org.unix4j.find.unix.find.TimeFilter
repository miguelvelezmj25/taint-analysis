    public void <init>(java.util.Date, org.unix4j.find.unix.find.FindArguments)
    {
        org.unix4j.find.unix.find.TimeFilter this;
        java.util.Date time;
        org.unix4j.find.unix.find.FindArguments arguments;
        org.unix4j.find.unix.find.TimeFilter$TimeType $r0;
        org.unix4j.find.unix.find.TimeFilter$TimeComparator $r1;

        this := @this: org.unix4j.find.unix.find.TimeFilter;

        time := @parameter0: java.util.Date;

        arguments := @parameter1: org.unix4j.find.unix.find.FindArguments;

        $r0 = staticinvoke <org.unix4j.find.unix.find.TimeFilter: org.unix4j.find.unix.find.TimeFilter$TimeType getTimeType(org.unix4j.find.unix.find.FindArguments)>(arguments);

        $r1 = staticinvoke <org.unix4j.find.unix.find.TimeFilter: org.unix4j.find.unix.find.TimeFilter$TimeComparator getTimeComparator(org.unix4j.find.unix.find.FindArguments)>(arguments);

        specialinvoke this.<org.unix4j.find.unix.find.TimeFilter: void <init>(java.util.Date,org.unix4j.find.unix.find.TimeFilter$TimeType,org.unix4j.find.unix.find.TimeFilter$TimeComparator)>(time, $r0, $r1);

        return;
    }

    private static org.unix4j.find.unix.find.TimeFilter$TimeComparator getTimeComparator(org.unix4j.find.unix.find.FindArguments)
    {
        org.unix4j.find.unix.find.FindArguments arguments;
        org.unix4j.find.unix.find.TimeFilter$TimeComparator$Newer $r0;
        org.unix4j.find.unix.find.TimeFilter$TimeComparator timeComparator#3;
        boolean $z0;
        org.unix4j.find.unix.find.TimeFilter$TimeComparator$Older $r1;

        arguments := @parameter0: org.unix4j.find.unix.find.FindArguments;

        $r0 = new org.unix4j.find.unix.find.TimeFilter$TimeComparator$Newer;

        specialinvoke $r0.<org.unix4j.find.unix.find.TimeFilter$TimeComparator$Newer: void <init>()>();

        timeComparator#3 = $r0;

        $z0 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTimeOlder()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r1 = new org.unix4j.find.unix.find.TimeFilter$TimeComparator$Older;

        specialinvoke $r1.<org.unix4j.find.unix.find.TimeFilter$TimeComparator$Older: void <init>()>();

        timeComparator#3 = $r1;

     label1:
        return timeComparator#3;
    }

    private static org.unix4j.find.unix.find.TimeFilter$TimeType getTimeType(org.unix4j.find.unix.find.FindArguments)
    {
        org.unix4j.find.unix.find.FindArguments arguments;
        org.unix4j.find.unix.find.TimeFilter$TimeType$Modified $r0;
        org.unix4j.find.unix.find.TimeFilter$TimeType timeType#3;
        boolean $z0, $z1;
        org.unix4j.find.unix.find.TimeFilter$TimeType$Access $r1;
        org.unix4j.find.unix.find.TimeFilter$TimeType$Create $r2;

        arguments := @parameter0: org.unix4j.find.unix.find.FindArguments;

        $r0 = new org.unix4j.find.unix.find.TimeFilter$TimeType$Modified;

        specialinvoke $r0.<org.unix4j.find.unix.find.TimeFilter$TimeType$Modified: void <init>()>();

        timeType#3 = $r0;

        $z0 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTimeAccess()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r1 = new org.unix4j.find.unix.find.TimeFilter$TimeType$Access;

        specialinvoke $r1.<org.unix4j.find.unix.find.TimeFilter$TimeType$Access: void <init>()>();

        timeType#3 = $r1;

        goto label2;

     label1:
        $z1 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTimeCreate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r2 = new org.unix4j.find.unix.find.TimeFilter$TimeType$Create;

        specialinvoke $r2.<org.unix4j.find.unix.find.TimeFilter$TimeType$Create: void <init>()>();

        timeType#3 = $r2;

     label2:
        return timeType#3;
    }

    public void <init>(java.util.Date, org.unix4j.find.unix.find.TimeFilter$TimeType, org.unix4j.find.unix.find.TimeFilter$TimeComparator)
    {
        org.unix4j.find.unix.find.TimeFilter this;
        java.util.Date time;
        org.unix4j.find.unix.find.TimeFilter$TimeType timeType;
        org.unix4j.find.unix.find.TimeFilter$TimeComparator comparator;

        this := @this: org.unix4j.find.unix.find.TimeFilter;

        time := @parameter0: java.util.Date;

        timeType := @parameter1: org.unix4j.find.unix.find.TimeFilter$TimeType;

        comparator := @parameter2: org.unix4j.find.unix.find.TimeFilter$TimeComparator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.unix4j.find.unix.find.TimeFilter: java.util.Date time> = time;

        this.<org.unix4j.find.unix.find.TimeFilter: org.unix4j.find.unix.find.TimeFilter$TimeType timeType> = timeType;

        this.<org.unix4j.find.unix.find.TimeFilter: org.unix4j.find.unix.find.TimeFilter$TimeComparator comparator> = comparator;

        return;
    }


