    public static long readLong(byte[], int)
    {
        byte[] buf;
        byte b1, $b0, $b2, $b4, $b8, $b12, $b16, $b20, $b24, $b28;
        int off#1, off#4, byteLen#14, off#25, off#36, off#49, off#62, off#75, off#88, off#101, off#114;
        boolean negative#9;
        long $l1, $l3, value#30, $l5, $l6, $l7, $l9, $l10, $l11, $l13, $l14, $l15, $l17, $l18, $l19, $l21, $l22, $l23, $l25, $l26, $l27, $l29, $l30, $l31, $l32, $l33;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        off#4 = off#1 + 1;

        b1 = buf[off#1];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= -119 goto label1;

        negative#9 = 1;

        $b0 = neg b1;

        byteLen#14 = $b0 - 119;

        goto label3;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 119 goto label2;

        negative#9 = 0;

        byteLen#14 = b1 - 119;

        goto label3;

     label2:
        $l1 = (long) b1;

        return $l1;

     label3:
        off#25 = off#4 + 1;

        $b2 = buf[off#4];

        $l3 = (long) $b2;

        value#30 = $l3 & 255L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 1 goto label4;

        off#36 = off#25 + 1;

        $b4 = buf[off#25];

        $l5 = (long) $b4;

        $l6 = $l5 & 255L;

        $l7 = $l6 << 8;

        value#30 = value#30 | $l7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 2 goto label4;

        off#49 = off#36 + 1;

        $b8 = buf[off#36];

        $l9 = (long) $b8;

        $l10 = $l9 & 255L;

        $l11 = $l10 << 16;

        value#30 = value#30 | $l11;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 3 goto label4;

        off#62 = off#49 + 1;

        $b12 = buf[off#49];

        $l13 = (long) $b12;

        $l14 = $l13 & 255L;

        $l15 = $l14 << 24;

        value#30 = value#30 | $l15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 4 goto label4;

        off#75 = off#62 + 1;

        $b16 = buf[off#62];

        $l17 = (long) $b16;

        $l18 = $l17 & 255L;

        $l19 = $l18 << 32;

        value#30 = value#30 | $l19;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 5 goto label4;

        off#88 = off#75 + 1;

        $b20 = buf[off#75];

        $l21 = (long) $b20;

        $l22 = $l21 & 255L;

        $l23 = $l22 << 40;

        value#30 = value#30 | $l23;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 6 goto label4;

        off#101 = off#88 + 1;

        $b24 = buf[off#88];

        $l25 = (long) $b24;

        $l26 = $l25 & 255L;

        $l27 = $l26 << 48;

        value#30 = value#30 | $l27;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 7 goto label4;

        off#114 = off#101 + 1;

        $b28 = buf[off#101];

        $l29 = (long) $b28;

        $l30 = $l29 & 255L;

        $l31 = $l30 << 56;

        value#30 = value#30 | $l31;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#9);

        if negative#9 == 0 goto label5;

        $l32 = neg value#30;

        $l33 = $l32 - 119L;

        goto label6;

     label5:
        $l33 = value#30 + 119L;

     label6:
        return $l33;
    }

    public static int getReadLongLength(byte[], int)
    {
        byte[] buf;
        int off, $i0;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        $i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, off);

        return $i0;
    }

    public static int getReadIntLength(byte[], int)
    {
        byte[] buf;
        int off, $i1, $i2, $i3, $i4;
        byte b1, $b0;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        b1 = buf[off];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= -119 goto label1;

        $b0 = neg b1;

        $i1 = $b0 - 119;

        $i2 = $i1 + 1;

        return $i2;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 119 goto label2;

        $i3 = b1 - 119;

        $i4 = $i3 + 1;

        return $i4;

     label2:
        return 1;
    }

    public static int readInt(byte[], int)
    {
        byte[] buf;
        byte b1, $b0, $b1, $b2, $b5, $b8;
        int off#1, off#4, byteLen#14, off#24, value#28, off#34, $i4, off#46, $i7, off#58, $i10, $i11, $i12;
        boolean negative#9;
        short $s3, $s6, $s9;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        off#4 = off#1 + 1;

        b1 = buf[off#1];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= -119 goto label1;

        negative#9 = 1;

        $b0 = neg b1;

        byteLen#14 = $b0 - 119;

        goto label3;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 119 goto label2;

        negative#9 = 0;

        byteLen#14 = b1 - 119;

        goto label3;

     label2:
        return b1;

     label3:
        off#24 = off#4 + 1;

        $b1 = buf[off#4];

        value#28 = $b1 & 255;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 1 goto label4;

        off#34 = off#24 + 1;

        $b2 = buf[off#24];

        $s3 = $b2 & 255;

        $i4 = $s3 << 8;

        value#28 = value#28 | $i4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 2 goto label4;

        off#46 = off#34 + 1;

        $b5 = buf[off#34];

        $s6 = $b5 & 255;

        $i7 = $s6 << 16;

        value#28 = value#28 | $i7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#14);

        if byteLen#14 <= 3 goto label4;

        off#58 = off#46 + 1;

        $b8 = buf[off#46];

        $s9 = $b8 & 255;

        $i10 = $s9 << 24;

        value#28 = value#28 | $i10;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#9);

        if negative#9 == 0 goto label5;

        $i11 = neg value#28;

        $i12 = $i11 - 119;

        goto label6;

     label5:
        $i12 = value#28 + 119;

     label6:
        return $i12;
    }

    public static int readReverseInt(byte[], int)
    {
        byte[] buf;
        byte b1, $b0, $b1, $b2, $b5, $b8;
        int off#1, byteLen#13, off#22, value#27, off#32, $i4, off#44, $i7, off#56, $i10, $i11, $i12;
        boolean negative#8;
        short $s3, $s6, $s9;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        b1 = buf[off#1];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= -119 goto label1;

        negative#8 = 1;

        $b0 = neg b1;

        byteLen#13 = $b0 - 119;

        goto label3;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 119 goto label2;

        negative#8 = 0;

        byteLen#13 = b1 - 119;

        goto label3;

     label2:
        return b1;

     label3:
        off#22 = off#1 + -1;

        $b1 = buf[off#22];

        value#27 = $b1 & 255;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 1 goto label4;

        off#32 = off#22 + -1;

        $b2 = buf[off#32];

        $s3 = $b2 & 255;

        $i4 = $s3 << 8;

        value#27 = value#27 | $i4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 2 goto label4;

        off#44 = off#32 + -1;

        $b5 = buf[off#44];

        $s6 = $b5 & 255;

        $i7 = $s6 << 16;

        value#27 = value#27 | $i7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 3 goto label4;

        off#56 = off#44 + -1;

        $b8 = buf[off#56];

        $s9 = $b8 & 255;

        $i10 = $s9 << 24;

        value#27 = value#27 | $i10;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label5;

        $i11 = neg value#27;

        $i12 = $i11 - 119;

        goto label6;

     label5:
        $i12 = value#27 + 119;

     label6:
        return $i12;
    }

    public static int writeReverseInt(byte[], int, int)
    {
        byte[] buf;
        int nextOff, byte1Off, off#1, value#2, $i0, $i1, value#15, $i3, off#33, off#35, $i5, off#48, $i8, $i10, off#63, $i13, $i15, off#78, $i18;
        boolean negative#10;
        byte $b2, $b4, $b7, $b9, $b12, $b14, $b17, $b19, $b21;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        value#2 := @parameter2: int;

        $i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(value#2);

        nextOff = off#1 + $i0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value#2);

        if value#2 >= -119 goto label01;

        negative#10 = 1;

        $i1 = neg value#2;

        value#15 = $i1 - 119;

        goto label03;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value#2);

        if value#2 <= 119 goto label02;

        negative#10 = 0;

        value#15 = value#2 - 119;

        goto label03;

     label02:
        $b2 = (byte) value#2;

        buf[off#1] = $b2;

        $i3 = off#1 + 1;

        return $i3;

     label03:
        byte1Off = nextOff - 1;

        off#33 = byte1Off;

        off#35 = off#33 + -1;

        $b4 = (byte) value#15;

        buf[off#35] = $b4;

        $i5 = value#15 & -256;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 != 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#10);

        if negative#10 == 0 goto label04;

        $b7 = -120;

        goto label05;

     label04:
        $b7 = 120;

     label05:
        buf[byte1Off] = $b7;

        return nextOff;

     label06:
        off#48 = off#35 + -1;

        $i8 = value#15 >>> 8;

        $b9 = (byte) $i8;

        buf[off#48] = $b9;

        $i10 = value#15 & -65536;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        if $i10 != 0 goto label09;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#10);

        if negative#10 == 0 goto label07;

        $b12 = -121;

        goto label08;

     label07:
        $b12 = 121;

     label08:
        buf[byte1Off] = $b12;

        return nextOff;

     label09:
        off#63 = off#48 + -1;

        $i13 = value#15 >>> 16;

        $b14 = (byte) $i13;

        buf[off#63] = $b14;

        $i15 = value#15 & -16777216;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i15);

        if $i15 != 0 goto label12;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#10);

        if negative#10 == 0 goto label10;

        $b17 = -122;

        goto label11;

     label10:
        $b17 = 122;

     label11:
        buf[byte1Off] = $b17;

        return nextOff;

     label12:
        off#78 = off#63 + -1;

        $i18 = value#15 >>> 24;

        $b19 = (byte) $i18;

        buf[off#78] = $b19;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#10);

        if negative#10 == 0 goto label13;

        $b21 = -123;

        goto label14;

     label13:
        $b21 = 123;

     label14:
        buf[byte1Off] = $b21;

        return nextOff;
    }

    public static int getWriteIntLength(int)
    {
        int value#1, $i0, value#8, $i1, $i2, $i3;

        value#1 := @parameter0: int;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value#1);

        if value#1 >= -119 goto label1;

        $i0 = neg value#1;

        value#8 = $i0 - 119;

        goto label3;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value#1);

        if value#1 <= 119 goto label2;

        value#8 = value#1 - 119;

        goto label3;

     label2:
        return 1;

     label3:
        $i1 = value#8 & -256;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 != 0 goto label4;

        return 2;

     label4:
        $i2 = value#8 & -65536;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 != 0 goto label5;

        return 3;

     label5:
        $i3 = value#8 & -16777216;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label6;

        return 4;

     label6:
        return 5;
    }

    public static int getWriteLongLength(long)
    {
        long value#1, $l1, value#9, $l3, $l5, $l7, $l9, $l11, $l13, $l15;
        byte $b0, $b2, $b4, $b6, $b8, $b10, $b12, $b14, $b16;

        value#1 := @parameter0: long;

        $b0 = value#1 cmp -119L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 >= 0 goto label01;

        $l1 = neg value#1;

        value#9 = $l1 - 119L;

        goto label03;

     label01:
        $b2 = value#1 cmp 119L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 <= 0 goto label02;

        value#9 = value#1 - 119L;

        goto label03;

     label02:
        return 1;

     label03:
        $l3 = value#9 & -256L;

        $b4 = $l3 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 != 0 goto label04;

        return 2;

     label04:
        $l5 = value#9 & -65536L;

        $b6 = $l5 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 != 0 goto label05;

        return 3;

     label05:
        $l7 = value#9 & -16777216L;

        $b8 = $l7 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 != 0 goto label06;

        return 4;

     label06:
        $l9 = value#9 & -4294967296L;

        $b10 = $l9 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b10);

        if $b10 != 0 goto label07;

        return 5;

     label07:
        $l11 = value#9 & -1099511627776L;

        $b12 = $l11 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b12);

        if $b12 != 0 goto label08;

        return 6;

     label08:
        $l13 = value#9 & -281474976710656L;

        $b14 = $l13 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b14);

        if $b14 != 0 goto label09;

        return 7;

     label09:
        $l15 = value#9 & -72057594037927936L;

        $b16 = $l15 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b16);

        if $b16 != 0 goto label10;

        return 8;

     label10:
        return 9;
    }

    public static int writeInt(byte[], int, int)
    {
        byte[] buf;
        int byte1Off, offset#1, value#2, $i0, value#12, offset#21, offset#25, offset#28, $i3, offset#41, $i6, $i8, offset#56, $i11, $i13, offset#71, $i16;
        boolean negative#7;
        byte $b1, $b2, $b5, $b7, $b10, $b12, $b15, $b17, $b19;

        buf := @parameter0: byte[];

        offset#1 := @parameter1: int;

        value#2 := @parameter2: int;

        byte1Off = offset#1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value#2);

        if value#2 >= -119 goto label01;

        negative#7 = 1;

        $i0 = neg value#2;

        value#12 = $i0 - 119;

        goto label03;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value#2);

        if value#2 <= 119 goto label02;

        negative#7 = 0;

        value#12 = value#2 - 119;

        goto label03;

     label02:
        offset#21 = offset#1 + 1;

        $b1 = (byte) value#2;

        buf[offset#1] = $b1;

        return offset#21;

     label03:
        offset#25 = offset#1 + 1;

        offset#28 = offset#25 + 1;

        $b2 = (byte) value#12;

        buf[offset#25] = $b2;

        $i3 = value#12 & -256;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#7);

        if negative#7 == 0 goto label04;

        $b5 = -120;

        goto label05;

     label04:
        $b5 = 120;

     label05:
        buf[byte1Off] = $b5;

        return offset#28;

     label06:
        offset#41 = offset#28 + 1;

        $i6 = value#12 >>> 8;

        $b7 = (byte) $i6;

        buf[offset#28] = $b7;

        $i8 = value#12 & -65536;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        if $i8 != 0 goto label09;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#7);

        if negative#7 == 0 goto label07;

        $b10 = -121;

        goto label08;

     label07:
        $b10 = 121;

     label08:
        buf[byte1Off] = $b10;

        return offset#41;

     label09:
        offset#56 = offset#41 + 1;

        $i11 = value#12 >>> 16;

        $b12 = (byte) $i11;

        buf[offset#41] = $b12;

        $i13 = value#12 & -16777216;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        if $i13 != 0 goto label12;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#7);

        if negative#7 == 0 goto label10;

        $b15 = -122;

        goto label11;

     label10:
        $b15 = 122;

     label11:
        buf[byte1Off] = $b15;

        return offset#56;

     label12:
        offset#71 = offset#56 + 1;

        $i16 = value#12 >>> 24;

        $b17 = (byte) $i16;

        buf[offset#56] = $b17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#7);

        if negative#7 == 0 goto label13;

        $b19 = -123;

        goto label14;

     label13:
        $b19 = 123;

     label14:
        buf[byte1Off] = $b19;

        return offset#71;
    }

    public static int writeLong(byte[], int, long)
    {
        byte[] buf;
        int byte1Off, offset#1, offset#23, $i3, offset#28, offset#31, $i5, offset#47, $i12, offset#65, $i19, offset#83, $i26, offset#101, $i33, offset#119, $i40, offset#137, $i47, offset#155, $i54;
        long value#2, $l1, value#13, $l7, $l11, $l14, $l18, $l21, $l25, $l28, $l32, $l35, $l39, $l42, $l46, $l49, $l53;
        byte $b0, $b2, $b4, $b6, $b8, $b10, $b13, $b15, $b17, $b20, $b22, $b24, $b27, $b29, $b31, $b34, $b36, $b38, $b41, $b43, $b45, $b48, $b50, $b52, $b55, $b57;
        boolean negative#8;

        buf := @parameter0: byte[];

        offset#1 := @parameter1: int;

        value#2 := @parameter2: long;

        byte1Off = offset#1;

        $b0 = value#2 cmp -119L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 >= 0 goto label01;

        negative#8 = 1;

        $l1 = neg value#2;

        value#13 = $l1 - 119L;

        goto label03;

     label01:
        $b2 = value#2 cmp 119L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 <= 0 goto label02;

        negative#8 = 0;

        value#13 = value#2 - 119L;

        goto label03;

     label02:
        offset#23 = offset#1 + 1;

        $i3 = (int) value#2;

        $b4 = (byte) $i3;

        buf[offset#1] = $b4;

        return offset#23;

     label03:
        offset#28 = offset#1 + 1;

        offset#31 = offset#28 + 1;

        $i5 = (int) value#13;

        $b6 = (byte) $i5;

        buf[offset#28] = $b6;

        $l7 = value#13 & -256L;

        $b8 = $l7 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 != 0 goto label06;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label04;

        $b10 = -120;

        goto label05;

     label04:
        $b10 = 120;

     label05:
        buf[byte1Off] = $b10;

        return offset#31;

     label06:
        offset#47 = offset#31 + 1;

        $l11 = value#13 >>> 8;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        buf[offset#31] = $b13;

        $l14 = value#13 & -65536L;

        $b15 = $l14 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b15);

        if $b15 != 0 goto label09;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label07;

        $b17 = -121;

        goto label08;

     label07:
        $b17 = 121;

     label08:
        buf[byte1Off] = $b17;

        return offset#47;

     label09:
        offset#65 = offset#47 + 1;

        $l18 = value#13 >>> 16;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        buf[offset#47] = $b20;

        $l21 = value#13 & -16777216L;

        $b22 = $l21 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b22);

        if $b22 != 0 goto label12;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label10;

        $b24 = -122;

        goto label11;

     label10:
        $b24 = 122;

     label11:
        buf[byte1Off] = $b24;

        return offset#65;

     label12:
        offset#83 = offset#65 + 1;

        $l25 = value#13 >>> 24;

        $i26 = (int) $l25;

        $b27 = (byte) $i26;

        buf[offset#65] = $b27;

        $l28 = value#13 & -4294967296L;

        $b29 = $l28 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b29);

        if $b29 != 0 goto label15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label13;

        $b31 = -123;

        goto label14;

     label13:
        $b31 = 123;

     label14:
        buf[byte1Off] = $b31;

        return offset#83;

     label15:
        offset#101 = offset#83 + 1;

        $l32 = value#13 >>> 32;

        $i33 = (int) $l32;

        $b34 = (byte) $i33;

        buf[offset#83] = $b34;

        $l35 = value#13 & -1099511627776L;

        $b36 = $l35 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b36);

        if $b36 != 0 goto label18;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label16;

        $b38 = -124;

        goto label17;

     label16:
        $b38 = 124;

     label17:
        buf[byte1Off] = $b38;

        return offset#101;

     label18:
        offset#119 = offset#101 + 1;

        $l39 = value#13 >>> 40;

        $i40 = (int) $l39;

        $b41 = (byte) $i40;

        buf[offset#101] = $b41;

        $l42 = value#13 & -281474976710656L;

        $b43 = $l42 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b43);

        if $b43 != 0 goto label21;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label19;

        $b45 = -125;

        goto label20;

     label19:
        $b45 = 125;

     label20:
        buf[byte1Off] = $b45;

        return offset#119;

     label21:
        offset#137 = offset#119 + 1;

        $l46 = value#13 >>> 48;

        $i47 = (int) $l46;

        $b48 = (byte) $i47;

        buf[offset#119] = $b48;

        $l49 = value#13 & -72057594037927936L;

        $b50 = $l49 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b50);

        if $b50 != 0 goto label24;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label22;

        $b52 = -126;

        goto label23;

     label22:
        $b52 = 126;

     label23:
        buf[byte1Off] = $b52;

        return offset#137;

     label24:
        offset#155 = offset#137 + 1;

        $l53 = value#13 >>> 56;

        $i54 = (int) $l53;

        $b55 = (byte) $i54;

        buf[offset#137] = $b55;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#8);

        if negative#8 == 0 goto label25;

        $b57 = -127;

        goto label26;

     label25:
        $b57 = 127;

     label26:
        buf[byte1Off] = $b57;

        return offset#155;
    }

    public static int writeSortedLong(byte[], int, long)
    {
        byte[] buf;
        int byte1Off, offset#1, offset#4, $i3, $i5, $i9, $i11, $i15, $i17, $i21, $i23, $i27, $i29, $i33, $i35, $i39, $i41, $i43, $i44, $i46, valueLen#106, $i47, $i52, $i54, $i58, $i60, $i64, $i66, $i70, $i72, $i76, $i78, $i82, $i84, $i88, $i90, $i92, $i93, $i95, valueLen#214, $i96, $i99;
        long value#2, value#11, $l1, $l4, $l7, $l10, $l13, $l16, $l19, $l22, $l25, $l28, $l31, $l34, $l37, $l40, value#119, $l50, $l53, $l56, $l59, $l62, $l65, $l68, $l71, $l74, $l77, $l80, $l83, $l86, $l89, $l98;
        byte $b0, $b2, $b6, $b8, $b12, $b14, $b18, $b20, $b24, $b26, $b30, $b32, $b36, $b38, $b42, $b45, $b48, $b49, $b51, $b55, $b57, $b61, $b63, $b67, $b69, $b73, $b75, $b79, $b81, $b85, $b87, $b91, $b94, $b97, $b100;

        buf := @parameter0: byte[];

        offset#1 := @parameter1: int;

        value#2 := @parameter2: long;

        byte1Off = offset#1;

        offset#4 = offset#1 + 1;

        $b0 = value#2 cmp -119L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 >= 0 goto label08;

        value#11 = value#2 + 119L;

        $l1 = value#11 | 72057594037927935L;

        $b2 = $l1 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 == 0 goto label01;

        $i3 = offset#4;

        offset#4 = offset#4 + 1;

        $l4 = value#11 >> 56;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        buf[$i3] = $b6;

     label01:
        $l7 = value#11 | 281474976710655L;

        $b8 = $l7 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 == 0 goto label02;

        $i9 = offset#4;

        offset#4 = offset#4 + 1;

        $l10 = value#11 >> 48;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        buf[$i9] = $b12;

     label02:
        $l13 = value#11 | 1099511627775L;

        $b14 = $l13 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b14);

        if $b14 == 0 goto label03;

        $i15 = offset#4;

        offset#4 = offset#4 + 1;

        $l16 = value#11 >> 40;

        $i17 = (int) $l16;

        $b18 = (byte) $i17;

        buf[$i15] = $b18;

     label03:
        $l19 = value#11 | 4294967295L;

        $b20 = $l19 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b20);

        if $b20 == 0 goto label04;

        $i21 = offset#4;

        offset#4 = offset#4 + 1;

        $l22 = value#11 >> 32;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        buf[$i21] = $b24;

     label04:
        $l25 = value#11 | 16777215L;

        $b26 = $l25 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b26);

        if $b26 == 0 goto label05;

        $i27 = offset#4;

        offset#4 = offset#4 + 1;

        $l28 = value#11 >> 24;

        $i29 = (int) $l28;

        $b30 = (byte) $i29;

        buf[$i27] = $b30;

     label05:
        $l31 = value#11 | 65535L;

        $b32 = $l31 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b32);

        if $b32 == 0 goto label06;

        $i33 = offset#4;

        offset#4 = offset#4 + 1;

        $l34 = value#11 >> 16;

        $i35 = (int) $l34;

        $b36 = (byte) $i35;

        buf[$i33] = $b36;

     label06:
        $l37 = value#11 | 255L;

        $b38 = $l37 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b38);

        if $b38 == 0 goto label07;

        $i39 = offset#4;

        offset#4 = offset#4 + 1;

        $l40 = value#11 >> 8;

        $i41 = (int) $l40;

        $b42 = (byte) $i41;

        buf[$i39] = $b42;

     label07:
        $i43 = offset#4;

        offset#4 = offset#4 + 1;

        $i44 = (int) value#11;

        $b45 = (byte) $i44;

        buf[$i43] = $b45;

        $i46 = offset#4 - byte1Off;

        valueLen#106 = $i46 - 1;

        $i47 = 8 - valueLen#106;

        $b48 = (byte) $i47;

        buf[byte1Off] = $b48;

        goto label17;

     label08:
        $b49 = value#2 cmp 120L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b49);

        if $b49 <= 0 goto label16;

        value#119 = value#2 - 121L;

        $l50 = value#119 & -72057594037927936L;

        $b51 = $l50 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b51);

        if $b51 == 0 goto label09;

        $i52 = offset#4;

        offset#4 = offset#4 + 1;

        $l53 = value#119 >> 56;

        $i54 = (int) $l53;

        $b55 = (byte) $i54;

        buf[$i52] = $b55;

     label09:
        $l56 = value#119 & -281474976710656L;

        $b57 = $l56 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b57);

        if $b57 == 0 goto label10;

        $i58 = offset#4;

        offset#4 = offset#4 + 1;

        $l59 = value#119 >> 48;

        $i60 = (int) $l59;

        $b61 = (byte) $i60;

        buf[$i58] = $b61;

     label10:
        $l62 = value#119 & -1099511627776L;

        $b63 = $l62 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b63);

        if $b63 == 0 goto label11;

        $i64 = offset#4;

        offset#4 = offset#4 + 1;

        $l65 = value#119 >> 40;

        $i66 = (int) $l65;

        $b67 = (byte) $i66;

        buf[$i64] = $b67;

     label11:
        $l68 = value#119 & -4294967296L;

        $b69 = $l68 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b69);

        if $b69 == 0 goto label12;

        $i70 = offset#4;

        offset#4 = offset#4 + 1;

        $l71 = value#119 >> 32;

        $i72 = (int) $l71;

        $b73 = (byte) $i72;

        buf[$i70] = $b73;

     label12:
        $l74 = value#119 & -16777216L;

        $b75 = $l74 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b75);

        if $b75 == 0 goto label13;

        $i76 = offset#4;

        offset#4 = offset#4 + 1;

        $l77 = value#119 >> 24;

        $i78 = (int) $l77;

        $b79 = (byte) $i78;

        buf[$i76] = $b79;

     label13:
        $l80 = value#119 & -65536L;

        $b81 = $l80 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b81);

        if $b81 == 0 goto label14;

        $i82 = offset#4;

        offset#4 = offset#4 + 1;

        $l83 = value#119 >> 16;

        $i84 = (int) $l83;

        $b85 = (byte) $i84;

        buf[$i82] = $b85;

     label14:
        $l86 = value#119 & -256L;

        $b87 = $l86 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b87);

        if $b87 == 0 goto label15;

        $i88 = offset#4;

        offset#4 = offset#4 + 1;

        $l89 = value#119 >> 8;

        $i90 = (int) $l89;

        $b91 = (byte) $i90;

        buf[$i88] = $b91;

     label15:
        $i92 = offset#4;

        offset#4 = offset#4 + 1;

        $i93 = (int) value#119;

        $b94 = (byte) $i93;

        buf[$i92] = $b94;

        $i95 = offset#4 - byte1Off;

        valueLen#214 = $i95 - 1;

        $i96 = 247 + valueLen#214;

        $b97 = (byte) $i96;

        buf[byte1Off] = $b97;

        goto label17;

     label16:
        $l98 = value#2 + 127L;

        $i99 = (int) $l98;

        $b100 = (byte) $i99;

        buf[byte1Off] = $b100;

     label17:
        return offset#4;
    }

    public static long readSortedLong(byte[], int)
    {
        byte[] buf;
        short b1, $s6, $s11, $s16, $s21, $s26, $s31, $s36, $s40;
        int off#1, off#4, byteLen#13, $i1, $i4, $i9, $i14, $i19, $i24, $i29, $i34, off#119;
        byte $b0, $b5, $b10, $b15, $b20, $b25, $b30, $b35, $b39;
        boolean negative#15;
        long $l2, value#28, $l3, $l7, $l8, $l12, $l13, $l17, $l18, $l22, $l23, $l27, $l28, $l32, $l33, $l37, $l38, $l41, value#125, value#130;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        off#4 = off#1 + 1;

        $b0 = buf[off#1];

        b1 = $b0 & 255;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= 8 goto label01;

        byteLen#13 = 8 - b1;

        negative#15 = 1;

        goto label03;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 247 goto label02;

        byteLen#13 = b1 - 247;

        negative#15 = 0;

        goto label03;

     label02:
        $i1 = b1 - 127;

        $l2 = (long) $i1;

        return $l2;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#15);

        if negative#15 == 0 goto label04;

        value#28 = -1L;

        goto label05;

     label04:
        value#28 = 0L;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 7 goto label06;

        $l3 = value#28 << 8;

        $i4 = off#4;

        off#4 = off#4 + 1;

        $b5 = buf[$i4];

        $s6 = $b5 & 255;

        $l7 = (long) $s6;

        value#28 = $l3 | $l7;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 6 goto label07;

        $l8 = value#28 << 8;

        $i9 = off#4;

        off#4 = off#4 + 1;

        $b10 = buf[$i9];

        $s11 = $b10 & 255;

        $l12 = (long) $s11;

        value#28 = $l8 | $l12;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 5 goto label08;

        $l13 = value#28 << 8;

        $i14 = off#4;

        off#4 = off#4 + 1;

        $b15 = buf[$i14];

        $s16 = $b15 & 255;

        $l17 = (long) $s16;

        value#28 = $l13 | $l17;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 4 goto label09;

        $l18 = value#28 << 8;

        $i19 = off#4;

        off#4 = off#4 + 1;

        $b20 = buf[$i19];

        $s21 = $b20 & 255;

        $l22 = (long) $s21;

        value#28 = $l18 | $l22;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 3 goto label10;

        $l23 = value#28 << 8;

        $i24 = off#4;

        off#4 = off#4 + 1;

        $b25 = buf[$i24];

        $s26 = $b25 & 255;

        $l27 = (long) $s26;

        value#28 = $l23 | $l27;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 2 goto label11;

        $l28 = value#28 << 8;

        $i29 = off#4;

        off#4 = off#4 + 1;

        $b30 = buf[$i29];

        $s31 = $b30 & 255;

        $l32 = (long) $s31;

        value#28 = $l28 | $l32;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 1 goto label12;

        $l33 = value#28 << 8;

        $i34 = off#4;

        off#4 = off#4 + 1;

        $b35 = buf[$i34];

        $s36 = $b35 & 255;

        $l37 = (long) $s36;

        value#28 = $l33 | $l37;

     label12:
        $l38 = value#28 << 8;

        off#119 = off#4 + 1;

        $b39 = buf[off#4];

        $s40 = $b39 & 255;

        $l41 = (long) $s40;

        value#125 = $l38 | $l41;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#15);

        if negative#15 == 0 goto label13;

        value#130 = value#125 - 119L;

        goto label14;

     label13:
        value#130 = value#125 + 121L;

     label14:
        return value#130;
    }

    public static int getReadSortedLongLength(byte[], int)
    {
        byte[] buf;
        int off, $i0;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        $i0 = staticinvoke <com.sleepycat.util.PackedInteger: int getReadSortedIntLength(byte[],int)>(buf, off);

        return $i0;
    }

    public static int getReadSortedIntLength(byte[], int)
    {
        byte[] buf;
        int off, $i1, $i2, $i3;
        short b1;
        byte $b0;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        $b0 = buf[off];

        b1 = $b0 & 255;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= 8 goto label1;

        $i1 = 9 - b1;

        return $i1;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 247 goto label2;

        $i2 = 1 + b1;

        $i3 = $i2 - 247;

        return $i3;

     label2:
        return 1;
    }

    public static int readSortedInt(byte[], int)
    {
        byte[] buf;
        short b1, $s5, $s9, $s13, $s16;
        int off#1, off#4, byteLen#13, $i1, value#27, $i2, $i3, $i6, $i7, $i10, $i11, $i14, off#67, value#72, value#74;
        byte $b0, $b4, $b8, $b12, $b15;
        boolean negative#15;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        off#4 = off#1 + 1;

        $b0 = buf[off#1];

        b1 = $b0 & 255;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 >= 8 goto label01;

        byteLen#13 = 8 - b1;

        negative#15 = 1;

        goto label03;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        if b1 <= 247 goto label02;

        byteLen#13 = b1 - 247;

        negative#15 = 0;

        goto label03;

     label02:
        $i1 = b1 - 127;

        return $i1;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#15);

        if negative#15 == 0 goto label04;

        value#27 = -1;

        goto label05;

     label04:
        value#27 = 0;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 3 goto label06;

        $i2 = value#27 << 8;

        $i3 = off#4;

        off#4 = off#4 + 1;

        $b4 = buf[$i3];

        $s5 = $b4 & 255;

        value#27 = $i2 | $s5;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 2 goto label07;

        $i6 = value#27 << 8;

        $i7 = off#4;

        off#4 = off#4 + 1;

        $b8 = buf[$i7];

        $s9 = $b8 & 255;

        value#27 = $i6 | $s9;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(byteLen#13);

        if byteLen#13 <= 1 goto label08;

        $i10 = value#27 << 8;

        $i11 = off#4;

        off#4 = off#4 + 1;

        $b12 = buf[$i11];

        $s13 = $b12 & 255;

        value#27 = $i10 | $s13;

     label08:
        $i14 = value#27 << 8;

        off#67 = off#4 + 1;

        $b15 = buf[off#4];

        $s16 = $b15 & 255;

        value#72 = $i14 | $s16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(negative#15);

        if negative#15 == 0 goto label09;

        value#74 = value#72 + -119;

        goto label10;

     label09:
        value#74 = value#72 + 121;

     label10:
        return value#74;
    }


