    public void close() throws java.io.IOException
    {
        java.util.zip.InflaterInputStream l0;
        boolean $z0, $z1;
        java.util.zip.Inflater $r0;
        java.io.InputStream $r1;

        l0 := @this: java.util.zip.InflaterInputStream;

        $z0 = l0.<java.util.zip.InflaterInputStream: boolean closed>;

        if $z0 != 0 goto label2;

        $z1 = l0.<java.util.zip.InflaterInputStream: boolean usesDefaultInflater>;

        if $z1 == 0 goto label1;

        $r0 = l0.<java.util.zip.InflaterInputStream: java.util.zip.Inflater inf>;

        virtualinvoke $r0.<java.util.zip.Inflater: void end()>();

     label1:
        $r1 = l0.<java.util.zip.InflaterInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        l0.<java.util.zip.InflaterInputStream: boolean closed> = 1;

     label2:
        return;
    }

    public void <init>(java.io.InputStream)
    {
        java.util.zip.InflaterInputStream l0;
        java.io.InputStream l1;
        java.util.zip.Inflater $r0;

        l0 := @this: java.util.zip.InflaterInputStream;

        l1 := @parameter0: java.io.InputStream;

        $r0 = new java.util.zip.Inflater;

        specialinvoke $r0.<java.util.zip.Inflater: void <init>()>();

        specialinvoke l0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>(l1, $r0);

        l0.<java.util.zip.InflaterInputStream: boolean usesDefaultInflater> = 1;

        return;
    }

    public void <init>(java.io.InputStream, java.util.zip.Inflater)
    {
        java.util.zip.InflaterInputStream l0;
        java.io.InputStream l1;
        java.util.zip.Inflater l2;

        l0 := @this: java.util.zip.InflaterInputStream;

        l1 := @parameter0: java.io.InputStream;

        l2 := @parameter1: java.util.zip.Inflater;

        specialinvoke l0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>(l1, l2, 512);

        return;
    }

    public void <init>(java.io.InputStream, java.util.zip.Inflater, int)
    {
        java.util.zip.InflaterInputStream l0;
        java.io.InputStream l1;
        java.util.zip.Inflater l2;
        int l3;
        byte[] $r0, $r1, $r4;
        java.lang.NullPointerException $r2;
        java.lang.IllegalArgumentException $r3;

        l0 := @this: java.util.zip.InflaterInputStream;

        l1 := @parameter0: java.io.InputStream;

        l2 := @parameter1: java.util.zip.Inflater;

        l3 := @parameter2: int;

        specialinvoke l0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(l1);

        l0.<java.util.zip.InflaterInputStream: boolean closed> = 0;

        l0.<java.util.zip.InflaterInputStream: boolean reachEOF> = 0;

        l0.<java.util.zip.InflaterInputStream: boolean usesDefaultInflater> = 0;

        $r0 = newarray (byte)[1];

        l0.<java.util.zip.InflaterInputStream: byte[] singleByteBuf> = $r0;

        $r1 = newarray (byte)[512];

        l0.<java.util.zip.InflaterInputStream: byte[] b> = $r1;

        if l1 == null goto label1;

        if l2 != null goto label2;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label2:
        if l3 > 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("buffer size <= 0");

        throw $r3;

     label3:
        l0.<java.util.zip.InflaterInputStream: java.util.zip.Inflater inf> = l2;

        $r4 = newarray (byte)[l3];

        l0.<java.util.zip.InflaterInputStream: byte[] buf> = $r4;

        return;
    }


