    public final int size()
    {
        java.io.DataOutputStream l0;
        int $i0;

        l0 := @this: java.io.DataOutputStream;

        $i0 = l0.<java.io.DataOutputStream: int written>;

        return $i0;
    }

    public final void writeLong(long) throws java.io.IOException
    {
        java.io.DataOutputStream l0;
        long l1, $l0, $l3, $l6, $l9, $l12, $l15, $l18, $l21;
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        int $i1, $i4, $i7, $i10, $i13, $i16, $i19, $i22;
        byte $b2, $b5, $b8, $b11, $b14, $b17, $b20, $b23;
        java.io.OutputStream $r8;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: long;

        $r0 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l0 = l1 >>> 56;

        $i1 = (int) $l0;

        $b2 = (byte) $i1;

        $r0[0] = $b2;

        $r1 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l3 = l1 >>> 48;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[1] = $b5;

        $r2 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l6 = l1 >>> 40;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        $r2[2] = $b8;

        $r3 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l9 = l1 >>> 32;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        $r3[3] = $b11;

        $r4 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l12 = l1 >>> 24;

        $i13 = (int) $l12;

        $b14 = (byte) $i13;

        $r4[4] = $b14;

        $r5 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l15 = l1 >>> 16;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        $r5[5] = $b17;

        $r6 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l18 = l1 >>> 8;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        $r6[6] = $b20;

        $r7 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        $l21 = l1 >>> 0;

        $i22 = (int) $l21;

        $b23 = (byte) $i22;

        $r7[7] = $b23;

        $r8 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        $r9 = l0.<java.io.DataOutputStream: byte[] writeBuffer>;

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, 8);

        specialinvoke l0.<java.io.DataOutputStream: void incCount(int)>(8);

        return;
    }

    public final void writeInt(int) throws java.io.IOException
    {
        java.io.DataOutputStream l0;
        int l1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.OutputStream $r0, $r1, $r2, $r3;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: int;

        $r0 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        $i0 = l1 >>> 24;

        $i1 = $i0 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $r1 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        $i2 = l1 >>> 16;

        $i3 = $i2 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i3);

        $r2 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        $i4 = l1 >>> 8;

        $i5 = $i4 & 255;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i5);

        $r3 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        $i6 = l1 >>> 0;

        $i7 = $i6 & 255;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>($i7);

        specialinvoke l0.<java.io.DataOutputStream: void incCount(int)>(4);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.DataOutputStream l0;
        java.io.OutputStream $r0;

        l0 := @this: java.io.DataOutputStream;

        $r0 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void flush()>();

        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        java.io.DataOutputStream l0;
        byte[] l1;
        int l2, l3;
        java.io.OutputStream $r0;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $r0 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>(l1, l2, l3);

        specialinvoke l0.<java.io.DataOutputStream: void incCount(int)>(l3);

        return;
    }

    private void incCount(int)
    {
        java.io.DataOutputStream l0;
        int l1, $i0, l2#5;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: int;

        $i0 = l0.<java.io.DataOutputStream: int written>;

        l2#5 = $i0 + l1;

        if l2#5 >= 0 goto label1;

        l2#5 = 2147483647;

     label1:
        l0.<java.io.DataOutputStream: int written> = l2#5;

        return;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.DataOutputStream l0;
        java.io.OutputStream l1;
        byte[] $r0;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: java.io.OutputStream;

        specialinvoke l0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(l1);

        l0.<java.io.DataOutputStream: byte[] bytearr> = null;

        $r0 = newarray (byte)[8];

        l0.<java.io.DataOutputStream: byte[] writeBuffer> = $r0;

        return;
    }


