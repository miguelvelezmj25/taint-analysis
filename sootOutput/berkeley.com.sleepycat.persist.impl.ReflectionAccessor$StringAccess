    void <init>(java.lang.reflect.Field)
    {
        berkeley.com.sleepycat.persist.impl.ReflectionAccessor$StringAccess this;
        java.lang.reflect.Field field;

        this := @this: berkeley.com.sleepycat.persist.impl.ReflectionAccessor$StringAccess;

        field := @parameter0: java.lang.reflect.Field;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.ReflectionAccessor$FieldAccess: void <init>(java.lang.reflect.Field)>(field);

        return;
    }

    void read(java.lang.Object, berkeley.com.sleepycat.persist.impl.EntityInput) throws java.lang.IllegalAccessException, berkeley.com.sleepycat.persist.impl.RefreshException
    {
        berkeley.com.sleepycat.persist.impl.ReflectionAccessor$StringAccess this;
        java.lang.Object o, $r1;
        berkeley.com.sleepycat.persist.impl.EntityInput in;
        java.lang.reflect.Field $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.ReflectionAccessor$StringAccess;

        o := @parameter0: java.lang.Object;

        in := @parameter1: berkeley.com.sleepycat.persist.impl.EntityInput;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.ReflectionAccessor$StringAccess: java.lang.reflect.Field field>;

        $r1 = interfaceinvoke in.<berkeley.com.sleepycat.persist.impl.EntityInput: java.lang.Object readStringObject()>();

        virtualinvoke $r0.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(o, $r1);

        return;
    }


