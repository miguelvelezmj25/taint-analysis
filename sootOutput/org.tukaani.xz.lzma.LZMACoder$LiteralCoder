    void <init>(org.tukaani.xz.lzma.LZMACoder, int, int)
    {
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder this;
        org.tukaani.xz.lzma.LZMACoder this$0;
        int lc, lp, $i0, $i1;

        this := @this: org.tukaani.xz.lzma.LZMACoder$LiteralCoder;

        this$0 := @parameter0: org.tukaani.xz.lzma.LZMACoder;

        lc := @parameter1: int;

        lp := @parameter2: int;

        this.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: org.tukaani.xz.lzma.LZMACoder this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int lc> = lc;

        $i0 = 1 << lp;

        $i1 = $i0 - 1;

        this.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int literalPosMask> = $i1;

        return;
    }

    final int getSubcoderIndex(int, int)
    {
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder this;
        int prevByte, pos, low, high, $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: org.tukaani.xz.lzma.LZMACoder$LiteralCoder;

        prevByte := @parameter0: int;

        pos := @parameter1: int;

        $i0 = this.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int lc>;

        $i1 = 8 - $i0;

        low = prevByte >> $i1;

        $i2 = this.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int literalPosMask>;

        $i3 = pos & $i2;

        $i4 = this.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder: int lc>;

        high = $i3 << $i4;

        $i5 = low + high;

        return $i5;
    }


