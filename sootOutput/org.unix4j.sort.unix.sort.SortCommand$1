    void <init>(org.unix4j.sort.unix.sort.SortCommand, org.unix4j.sort.unix.sort.CheckProcessor)
    {
        org.unix4j.sort.unix.sort.SortCommand$1 this;
        org.unix4j.sort.unix.sort.SortCommand this$0;
        org.unix4j.sort.unix.sort.CheckProcessor l2;

        this := @this: org.unix4j.sort.unix.sort.SortCommand$1;

        this$0 := @parameter0: org.unix4j.sort.unix.sort.SortCommand;

        l2 := @parameter1: org.unix4j.sort.unix.sort.CheckProcessor;

        this.<org.unix4j.sort.unix.sort.SortCommand$1: org.unix4j.sort.unix.sort.SortCommand this$0> = this$0;

        this.<org.unix4j.sort.unix.sort.SortCommand$1: org.unix4j.sort.unix.sort.CheckProcessor val$standardInputProcessor> = l2;

        specialinvoke this.<org.unix4j.sort.processor.DefaultInputProcessor: void <init>()>();

        return;
    }

    public void finish(org.unix4j.sort.io.Input, org.unix4j.sort.processor.LineProcessor)
    {
        org.unix4j.sort.unix.sort.SortCommand$1 this;
        org.unix4j.sort.io.Input input;
        org.unix4j.sort.processor.LineProcessor output;
        org.unix4j.sort.unix.sort.CheckProcessor $r0;

        this := @this: org.unix4j.sort.unix.sort.SortCommand$1;

        input := @parameter0: org.unix4j.sort.io.Input;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        $r0 = this.<org.unix4j.sort.unix.sort.SortCommand$1: org.unix4j.sort.unix.sort.CheckProcessor val$standardInputProcessor>;

        virtualinvoke $r0.<org.unix4j.sort.unix.sort.CheckProcessor: void reset()>();

        return;
    }


