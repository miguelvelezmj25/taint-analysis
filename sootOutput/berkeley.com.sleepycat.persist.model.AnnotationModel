    public void <init>()
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.util.HashMap $r0, $r1;
        java.util.HashSet $r2;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        specialinvoke this.<berkeley.com.sleepycat.persist.model.EntityModel: void <init>()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map classMap> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map entityMap> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Set registeredSpecialClasses> = $r2;

        return;
    }

    public synchronized berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata(java.lang.String)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.lang.String className;
        berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo info;
        java.util.Map $r1, $r5, $r6;
        java.lang.Object $r2;
        berkeley.com.sleepycat.persist.model.EntityMetadata $r3;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata $r4;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        className := @parameter0: java.lang.String;

        virtualinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: berkeley.com.sleepycat.persist.model.ClassMetadata getClassMetadata(java.lang.String)>(className);

        $r1 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map entityMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        info = (berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo) $r2;

        if info == null goto label1;

        $r3 = new berkeley.com.sleepycat.persist.model.EntityMetadata;

        $r4 = info.<berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata priKey>;

        $r5 = info.<berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo: java.util.Map secKeys>;

        $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        specialinvoke $r3.<berkeley.com.sleepycat.persist.model.EntityMetadata: void <init>(java.lang.String,berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata,java.util.Map)>(className, $r4, $r6);

        return $r3;

     label1:
        return null;
    }

    public synchronized berkeley.com.sleepycat.persist.model.ClassMetadata getClassMetadata(java.lang.String)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.lang.String className, $r9, $r11, $r15, $r17, proxiedClassName#67, $r19, $r24, $r26, $r27;
        java.lang.Class type, proxiedClass, $r18, $r25;
        java.lang.ClassNotFoundException e, $r2;
        berkeley.com.sleepycat.persist.model.Entity entity;
        berkeley.com.sleepycat.persist.model.Persistent persistent;
        java.util.ArrayList fields, $r20, $r21, nonDefaultFields#90;
        boolean nonDefaultRules, $z0, $z1, $z3, $z4, $z5, isEntity#62, $z6;
        java.util.Iterator l12;
        java.lang.reflect.Field field;
        java.util.Map $r0, $r30, $r32;
        java.lang.Object $r1, $r22;
        berkeley.com.sleepycat.persist.model.ClassMetadata metadata#6, $r28;
        java.util.Set $r3;
        java.lang.'annotation'.Annotation $r4, $r5;
        java.lang.IllegalArgumentException $r6, $r12;
        java.lang.StringBuilder $r7, $r8, $r10, $r13, $r14, $r16;
        int version#65, $i0;
        java.util.Collection nonDefaultFields#84;
        berkeley.com.sleepycat.persist.model.FieldMetadata $r23;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata $r29;
        java.util.List $r31;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        className := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map classMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        metadata#6 = (berkeley.com.sleepycat.persist.model.ClassMetadata) $r1;

        if metadata#6 != null goto label18;

     label01:
        type = virtualinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.lang.Class resolveClass(java.lang.String)>(className);

     label02:
        goto label04;

     label03:
        $r2 := @caughtexception;

        return null;

     label04:
        $z0 = virtualinvoke type.<java.lang.Class: boolean isEnum()>();

        if $z0 != 0 goto label05;

        $z1 = virtualinvoke type.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label06;

     label05:
        $r3 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Set registeredSpecialClasses>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(className);

     label06:
        $r4 = virtualinvoke type.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/Entity");

        entity = (berkeley.com.sleepycat.persist.model.Entity) $r4;

        $r5 = virtualinvoke type.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/Persistent");

        persistent = (berkeley.com.sleepycat.persist.model.Persistent) $r5;

        if entity != null goto label07;

        if persistent != null goto label07;

        return null;

     label07:
        $z3 = virtualinvoke type.<java.lang.Class: boolean isEnum()>();

        if $z3 != 0 goto label08;

        $z4 = virtualinvoke type.<java.lang.Class: boolean isInterface()>();

        if $z4 != 0 goto label08;

        $z5 = virtualinvoke type.<java.lang.Class: boolean isPrimitive()>();

        if $z5 == 0 goto label09;

     label08:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@Entity and @Persistent not allowed for enum, interface, or primitive type: ");

        $r9 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label09:
        if entity == null goto label10;

        if persistent == null goto label10;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Both @Entity and @Persistent are not allowed: ");

        $r15 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label10:
        if entity == null goto label11;

        isEntity#62 = 1;

        version#65 = interfaceinvoke entity.<berkeley.com.sleepycat.persist.model.Entity: int version()>();

        proxiedClassName#67 = null;

        goto label14;

     label11:
        isEntity#62 = 0;

        version#65 = interfaceinvoke persistent.<berkeley.com.sleepycat.persist.model.Persistent: int version()>();

        proxiedClass = interfaceinvoke persistent.<berkeley.com.sleepycat.persist.model.Persistent: java.lang.Class proxyFor()>();

        $r18 = <java.lang.Void: java.lang.Class TYPE>;

        if proxiedClass == $r18 goto label12;

        $r19 = virtualinvoke proxiedClass.<java.lang.Class: java.lang.String getName()>();

        goto label13;

     label12:
        $r19 = null;

     label13:
        proxiedClassName#67 = $r19;

     label14:
        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        fields = $r20;

        nonDefaultRules = specialinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: boolean getInstanceFields(java.util.List,java.lang.Class)>(fields, type);

        nonDefaultFields#84 = null;

        if nonDefaultRules == 0 goto label17;

        $r21 = new java.util.ArrayList;

        $i0 = interfaceinvoke fields.<java.util.List: int size()>();

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i0);

        nonDefaultFields#90 = $r21;

        l12 = interfaceinvoke fields.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke l12.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r22 = interfaceinvoke l12.<java.util.Iterator: java.lang.Object next()>();

        field = (java.lang.reflect.Field) $r22;

        $r23 = new berkeley.com.sleepycat.persist.model.FieldMetadata;

        $r24 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

        $r25 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r23.<berkeley.com.sleepycat.persist.model.FieldMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r24, $r26, $r27);

        interfaceinvoke nonDefaultFields#90.<java.util.Collection: boolean add(java.lang.Object)>($r23);

        goto label15;

     label16:
        nonDefaultFields#84 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(nonDefaultFields#90);

     label17:
        $r28 = new berkeley.com.sleepycat.persist.model.ClassMetadata;

        $r29 = specialinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey(java.lang.Class,java.util.List)>(type, fields);

        $r30 = specialinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map getSecondaryKeys(java.lang.Class,java.util.List)>(type, fields);

        $r31 = specialinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.List getCompositeKeyFields(java.lang.Class,java.util.List)>(type, fields);

        specialinvoke $r28.<berkeley.com.sleepycat.persist.model.ClassMetadata: void <init>(java.lang.String,int,java.lang.String,boolean,berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata,java.util.Map,java.util.List,java.util.Collection)>(className, version#65, proxiedClassName#67, isEntity#62, $r29, $r30, $r31, nonDefaultFields#84);

        metadata#6 = $r28;

        $r32 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map classMap>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(className, metadata#6);

        specialinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: void updateEntityInfo(berkeley.com.sleepycat.persist.model.ClassMetadata)>(metadata#6);

     label18:
        return metadata#6;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
    }

    private boolean getInstanceFields(java.util.List, java.lang.Class)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.util.List fields;
        java.lang.Class type;
        java.lang.reflect.Field[] l4;
        int l5, mods, l6#8;
        java.lang.reflect.Field field;
        boolean notPersistent, notTransient, nonDefaultRules#2, $z0, $z1, $z2, $z3;
        java.lang.'annotation'.Annotation $r0, $r1, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r2, $r6;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        fields := @parameter0: java.util.List;

        type := @parameter1: java.lang.Class;

        nonDefaultRules#2 = 0;

        l4 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        l5 = lengthof l4;

        l6#8 = 0;

     label01:
        if l6#8 >= l5 goto label13;

        field = l4[l6#8];

        $r0 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/NotPersistent");

        if $r0 == null goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        notPersistent = $z0;

        $r1 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/NotTransient");

        if $r1 == null goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        notTransient = $z1;

        if notPersistent == 0 goto label06;

        if notTransient == 0 goto label06;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Both @NotTransient and @NotPersistent not allowed");

        throw $r2;

     label06:
        if notPersistent != 0 goto label07;

        if notTransient == 0 goto label08;

     label07:
        nonDefaultRules#2 = 1;

     label08:
        mods = virtualinvoke field.<java.lang.reflect.Field: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(mods);

        if $z2 != 0 goto label10;

        if notPersistent != 0 goto label10;

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(mods);

        if $z3 == 0 goto label09;

        if notTransient == 0 goto label10;

     label09:
        interfaceinvoke fields.<java.util.List: boolean add(java.lang.Object)>(field);

        goto label12;

     label10:
        $r3 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/PrimaryKey");

        if $r3 != null goto label11;

        $r4 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/SecondaryKey");

        if $r4 != null goto label11;

        $r5 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/KeyField");

        if $r5 == null goto label12;

     label11:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("@PrimaryKey, @SecondaryKey and @KeyField not allowed on non-persistent field");

        throw $r6;

     label12:
        l6#8 = l6#8 + 1;

        goto label01;

     label13:
        return nonDefaultRules#2;
    }

    private berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey(java.lang.Class, java.util.List)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.lang.Class type, $r10;
        java.util.List fields;
        java.util.Iterator l5;
        java.lang.reflect.Field field, foundField#2;
        berkeley.com.sleepycat.persist.model.PrimaryKey priKey;
        java.lang.String sequence#4, $r5, $r7, $r9, $r11, $r12;
        boolean $z0;
        java.lang.Object $r0;
        java.lang.'annotation'.Annotation $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        int $i0;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata $r8;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        type := @parameter0: java.lang.Class;

        fields := @parameter1: java.util.List;

        foundField#2 = null;

        sequence#4 = null;

        l5 = interfaceinvoke fields.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r0 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        field = (java.lang.reflect.Field) $r0;

        $r1 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/PrimaryKey");

        priKey = (berkeley.com.sleepycat.persist.model.PrimaryKey) $r1;

        if priKey == null goto label3;

        if foundField#2 == null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only one @PrimaryKey allowed: ");

        $r5 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        foundField#2 = field;

        sequence#4 = interfaceinvoke priKey.<berkeley.com.sleepycat.persist.model.PrimaryKey: java.lang.String sequence()>();

        $i0 = virtualinvoke sequence#4.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        sequence#4 = null;

     label3:
        goto label1;

     label4:
        if foundField#2 == null goto label5;

        $r8 = new berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata;

        $r9 = virtualinvoke foundField#2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r10 = virtualinvoke foundField#2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r8.<berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r9, $r11, $r12, sequence#4);

        return $r8;

     label5:
        return null;
    }

    private java.util.Map getSecondaryKeys(java.lang.Class, java.util.List)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.lang.Class type, relatedClass, $r4, $r9;
        java.util.List fields;
        java.util.Iterator l4;
        java.lang.reflect.Field field;
        berkeley.com.sleepycat.persist.model.SecondaryKey secKey;
        berkeley.com.sleepycat.persist.model.Relationship rel, $r2, $r3;
        java.lang.String relatedEntity, elemClassName#18, keyName#28, $r5, $r8, $r10, $r11, $r17, $r21;
        berkeley.com.sleepycat.persist.model.DeleteAction deleteAction, $r6;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata metadata, tmp$684676028;
        java.lang.Object map#2, $r0, $r13;
        boolean $z0;
        java.lang.'annotation'.Annotation $r1;
        int $i0;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, tmp$1327142459;
        java.util.HashMap tmp$1261459491;
        java.lang.IllegalArgumentException tmp$1380787311;
        java.util.Map tmp$813492746, tmp$2105880970, tmp$1086924193;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        type := @parameter0: java.lang.Class;

        fields := @parameter1: java.util.List;

        map#2 = null;

        l4 = interfaceinvoke fields.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r0 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        field = (java.lang.reflect.Field) $r0;

        $r1 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/SecondaryKey");

        secKey = (berkeley.com.sleepycat.persist.model.SecondaryKey) $r1;

        if secKey == null goto label10;

        rel = interfaceinvoke secKey.<berkeley.com.sleepycat.persist.model.SecondaryKey: berkeley.com.sleepycat.persist.model.Relationship relate()>();

        elemClassName#18 = null;

        $r2 = <berkeley.com.sleepycat.persist.model.Relationship: berkeley.com.sleepycat.persist.model.Relationship ONE_TO_MANY>;

        if rel == $r2 goto label02;

        $r3 = <berkeley.com.sleepycat.persist.model.Relationship: berkeley.com.sleepycat.persist.model.Relationship MANY_TO_MANY>;

        if rel != $r3 goto label03;

     label02:
        elemClassName#18 = specialinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.lang.String getElementClass(java.lang.reflect.Field)>(field);

     label03:
        keyName#28 = interfaceinvoke secKey.<berkeley.com.sleepycat.persist.model.SecondaryKey: java.lang.String name()>();

        $i0 = virtualinvoke keyName#28.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

        keyName#28 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

     label04:
        relatedClass = interfaceinvoke secKey.<berkeley.com.sleepycat.persist.model.SecondaryKey: java.lang.Class relatedEntity()>();

        $r4 = <java.lang.Void: java.lang.Class TYPE>;

        if relatedClass == $r4 goto label05;

        $r5 = virtualinvoke relatedClass.<java.lang.Class: java.lang.String getName()>();

        goto label06;

     label05:
        $r5 = null;

     label06:
        relatedEntity = $r5;

        if relatedEntity == null goto label07;

        $r6 = interfaceinvoke secKey.<berkeley.com.sleepycat.persist.model.SecondaryKey: berkeley.com.sleepycat.persist.model.DeleteAction onRelatedEntityDelete()>();

        goto label08;

     label07:
        $r6 = null;

     label08:
        deleteAction = $r6;

        tmp$684676028 = new berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata;

        $r8 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

        $r9 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        specialinvoke tmp$684676028.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,berkeley.com.sleepycat.persist.model.Relationship,java.lang.String,berkeley.com.sleepycat.persist.model.DeleteAction)>($r8, $r10, $r11, elemClassName#18, keyName#28, rel, relatedEntity, deleteAction);

        metadata = tmp$684676028;

        if map#2 != null goto label09;

        tmp$1261459491 = new java.util.HashMap;

        specialinvoke tmp$1261459491.<java.util.HashMap: void <init>()>();

        map#2 = tmp$1261459491;

     label09:
        tmp$813492746 = (java.util.Map) map#2;

        $r13 = interfaceinvoke tmp$813492746.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(keyName#28, metadata);

        if $r13 == null goto label10;

        tmp$1380787311 = new java.lang.IllegalArgumentException;

        tmp$1327142459 = new java.lang.StringBuilder;

        specialinvoke tmp$1327142459.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke tmp$1327142459.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only one @SecondaryKey with the same name allowed: ");

        $r17 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keyName#28);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1380787311.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw tmp$1380787311;

     label10:
        goto label01;

     label11:
        if map#2 == null goto label12;

        tmp$2105880970 = (java.util.Map) map#2;

        map#2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(tmp$2105880970);

     label12:
        tmp$1086924193 = (java.util.Map) map#2;

        return tmp$1086924193;
    }

    private java.util.List getCompositeKeyFields(java.lang.Class, java.util.List)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.lang.Class type, $r22;
        java.util.List fields, tmp$1083439555, tmp$1053169327, tmp$178803304, tmp$156057756, tmp$1127315524, tmp$625203565, tmp$1956729212, tmp$1085283472, tmp$1434061352, tmp$2002671252;
        java.util.Iterator l4;
        java.lang.reflect.Field field;
        berkeley.com.sleepycat.persist.model.KeyField keyField;
        int value, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i#100, $i8, $i9;
        berkeley.com.sleepycat.persist.model.FieldMetadata metadata, tmp$1111178997;
        java.lang.Object list#2, $r0, $r11, $r32;
        boolean $z0;
        java.lang.'annotation'.Annotation $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r14, $r15, $r16, $r18, $r28, $r30, $r35, $r36, $r37, $r39, tmp$2054735863, tmp$1522917195, tmp$647831428, tmp$1608128595;
        java.lang.String $r7, $r9, $r17, $r19, $r21, $r23, $r24, $r29, $r31, $r38, $r40;
        java.lang.IllegalArgumentException tmp$649668253, tmp$1057722320, tmp$261070048, tmp$2120944246;
        java.util.ArrayList tmp$677397116;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        type := @parameter0: java.lang.Class;

        fields := @parameter1: java.util.List;

        list#2 = null;

        l4 = interfaceinvoke fields.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r0 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        field = (java.lang.reflect.Field) $r0;

        $r1 = virtualinvoke field.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "berkeley/com/sleepycat/persist/model/KeyField");

        keyField = (berkeley.com.sleepycat.persist.model.KeyField) $r1;

        if keyField == null goto label07;

        value = interfaceinvoke keyField.<berkeley.com.sleepycat.persist.model.KeyField: int value()>();

        if value < 1 goto label02;

        $i0 = interfaceinvoke fields.<java.util.List: int size()>();

        if value <= $i0 goto label03;

     label02:
        tmp$649668253 = new java.lang.IllegalArgumentException;

        tmp$2054735863 = new java.lang.StringBuilder;

        specialinvoke tmp$2054735863.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke tmp$2054735863.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unreasonable @KeyField index value ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(value);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$649668253.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw tmp$649668253;

     label03:
        if list#2 != null goto label04;

        tmp$677397116 = new java.util.ArrayList;

        $i1 = interfaceinvoke fields.<java.util.List: int size()>();

        specialinvoke tmp$677397116.<java.util.ArrayList: void <init>(int)>($i1);

        list#2 = tmp$677397116;

     label04:
        tmp$1083439555 = (java.util.List) list#2;

        $i2 = interfaceinvoke tmp$1083439555.<java.util.List: int size()>();

        if value > $i2 goto label05;

        $i3 = value - 1;

        tmp$1053169327 = (java.util.List) list#2;

        $r11 = interfaceinvoke tmp$1053169327.<java.util.List: java.lang.Object get(int)>($i3);

        if $r11 == null goto label05;

        tmp$1057722320 = new java.lang.IllegalArgumentException;

        tmp$1522917195 = new java.lang.StringBuilder;

        specialinvoke tmp$1522917195.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke tmp$1522917195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@KeyField index value ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(value);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is used more than once: ");

        $r17 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1057722320.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw tmp$1057722320;

     label05:
        tmp$178803304 = (java.util.List) list#2;

        $i4 = interfaceinvoke tmp$178803304.<java.util.List: int size()>();

        if value <= $i4 goto label06;

        tmp$156057756 = (java.util.List) list#2;

        interfaceinvoke tmp$156057756.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label05;

     label06:
        tmp$1111178997 = new berkeley.com.sleepycat.persist.model.FieldMetadata;

        $r21 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

        $r22 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        $r24 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        specialinvoke tmp$1111178997.<berkeley.com.sleepycat.persist.model.FieldMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r21, $r23, $r24);

        metadata = tmp$1111178997;

        $i5 = value - 1;

        tmp$1127315524 = (java.util.List) list#2;

        interfaceinvoke tmp$1127315524.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i5, metadata);

     label07:
        goto label01;

     label08:
        if list#2 == null goto label12;

        tmp$625203565 = (java.util.List) list#2;

        $i6 = interfaceinvoke tmp$625203565.<java.util.List: int size()>();

        $i7 = interfaceinvoke fields.<java.util.List: int size()>();

        if $i6 >= $i7 goto label09;

        tmp$261070048 = new java.lang.IllegalArgumentException;

        tmp$647831428 = new java.lang.StringBuilder;

        specialinvoke tmp$647831428.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke tmp$647831428.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@KeyField is missing on one or more instance fields: ");

        $r29 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$261070048.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw tmp$261070048;

     label09:
        i#100 = 0;

     label10:
        tmp$1956729212 = (java.util.List) list#2;

        $i8 = interfaceinvoke tmp$1956729212.<java.util.List: int size()>();

        if i#100 >= $i8 goto label12;

        tmp$1085283472 = (java.util.List) list#2;

        $r32 = interfaceinvoke tmp$1085283472.<java.util.List: java.lang.Object get(int)>(i#100);

        if $r32 != null goto label11;

        tmp$2120944246 = new java.lang.IllegalArgumentException;

        tmp$1608128595 = new java.lang.StringBuilder;

        specialinvoke tmp$1608128595.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke tmp$1608128595.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@KeyField is missing for index value ");

        $i9 = i#100 + 1;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r38 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$2120944246.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        throw tmp$2120944246;

     label11:
        i#100 = i#100 + 1;

        goto label10;

     label12:
        if list#2 == null goto label13;

        tmp$1434061352 = (java.util.List) list#2;

        list#2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(tmp$1434061352);

     label13:
        tmp$2002671252 = (java.util.List) list#2;

        return tmp$2002671252;
    }

    private void updateEntityInfo(berkeley.com.sleepycat.persist.model.ClassMetadata)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        berkeley.com.sleepycat.persist.model.ClassMetadata metadata, data#8;
        java.util.HashMap secKeys, $r0;
        java.util.Map classSecKeys, $r23, $r26, $r33;
        java.util.Iterator l7;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKey;
        java.lang.ClassNotFoundException e, $r14;
        java.lang.String entityClass#2, $r6, $r8, $r11, $r13, $r16, $r20, $r22, $r32;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata priKey#4;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r1, $r17, $r28;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r18, $r19, $r21, $r29, $r30, $r31;
        java.util.Collection $r9;
        java.lang.Object $r10, $r24;
        java.lang.Class cls#52, cls#58;
        java.lang.RuntimeException $r15;
        berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo info#83, $r25;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        metadata := @parameter0: berkeley.com.sleepycat.persist.model.ClassMetadata;

        entityClass#2 = null;

        priKey#4 = null;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        secKeys = $r0;

        data#8 = metadata;

     label01:
        if data#8 == null goto label12;

        $z0 = virtualinvoke data#8.<berkeley.com.sleepycat.persist.model.ClassMetadata: boolean isEntityClass()>();

        if $z0 == 0 goto label03;

        if entityClass#2 == null goto label02;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An entity class may not be derived from another entity class: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityClass#2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r6 = virtualinvoke data#8.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.lang.String getClassName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label02:
        entityClass#2 = virtualinvoke data#8.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.lang.String getClassName()>();

     label03:
        if priKey#4 != null goto label04;

        priKey#4 = virtualinvoke data#8.<berkeley.com.sleepycat.persist.model.ClassMetadata: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey()>();

     label04:
        classSecKeys = virtualinvoke data#8.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.util.Map getSecondaryKeys()>();

        if classSecKeys == null goto label06;

        $r9 = interfaceinvoke classSecKeys.<java.util.Map: java.util.Collection values()>();

        l7 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r10 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        secKey = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r10;

        $r11 = virtualinvoke secKey.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getKeyName()>();

        interfaceinvoke secKeys.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, secKey);

        goto label05;

     label06:
        $r13 = virtualinvoke data#8.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.lang.String getClassName()>();

        cls#52 = virtualinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.lang.Class resolveClass(java.lang.String)>($r13);

     label07:
        goto label09;

     label08:
        $r14 := @caughtexception;

        e = $r14;

        $r15 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e);

        throw $r15;

     label09:
        cls#58 = virtualinvoke cls#52.<java.lang.Class: java.lang.Class getSuperclass()>();

        if cls#58 == class "java/lang/Object" goto label10;

        $r16 = virtualinvoke cls#58.<java.lang.Class: java.lang.String getName()>();

        data#8 = virtualinvoke this.<berkeley.com.sleepycat.persist.model.AnnotationModel: berkeley.com.sleepycat.persist.model.ClassMetadata getClassMetadata(java.lang.String)>($r16);

        if data#8 != null goto label11;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Persistent class has non-persistent superclass: ");

        $r20 = virtualinvoke cls#58.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label10:
        data#8 = null;

     label11:
        goto label01;

     label12:
        if entityClass#2 == null goto label15;

        $r23 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map entityMap>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(entityClass#2);

        info#83 = (berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo) $r24;

        if info#83 != null goto label13;

        $r25 = new berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo;

        specialinvoke $r25.<berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo: void <init>(berkeley.com.sleepycat.persist.model.AnnotationModel$1)>(null);

        info#83 = $r25;

        $r26 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map entityMap>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(entityClass#2, info#83);

     label13:
        if priKey#4 != null goto label14;

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entity class has no primary key: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityClass#2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r28;

     label14:
        info#83.<berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata priKey> = priKey#4;

        $r33 = info#83.<berkeley.com.sleepycat.persist.model.AnnotationModel$EntityInfo: java.util.Map secKeys>;

        interfaceinvoke $r33.<java.util.Map: void putAll(java.util.Map)>(secKeys);

     label15:
        return;

        catch java.lang.ClassNotFoundException from label06 to label07 with label08;
    }

    private java.lang.String getElementClass(java.lang.reflect.Field)
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.lang.reflect.Field field;
        java.lang.Class 'cls', $r0, $r2, $r10, $r18, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r1, $r11, $r14, $r16, $r19, $r24, $r27, $r29;
        java.lang.reflect.Type[] typeArgs#12;
        java.lang.reflect.Type $r3, $r4, $r6, $r17;
        java.lang.reflect.ParameterizedType $r5;
        int $i0;
        java.lang.IllegalArgumentException $r7, $r20;
        java.lang.StringBuilder $r8, $r9, $r12, $r13, $r15, $r21, $r22, $r25, $r26, $r28;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        field := @parameter0: java.lang.reflect.Field;

        'cls' = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke 'cls'.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r0 = virtualinvoke 'cls'.<java.lang.Class: java.lang.Class getComponentType()>();

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        return $r1;

     label1:
        $r2 = class "java/util/Collection";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>('cls');

        if $z1 == 0 goto label5;

        typeArgs#12 = null;

        $r3 = virtualinvoke field.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $z2 = $r3 instanceof java.lang.reflect.ParameterizedType;

        if $z2 == 0 goto label2;

        $r4 = virtualinvoke field.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $r5 = (java.lang.reflect.ParameterizedType) $r4;

        typeArgs#12 = interfaceinvoke $r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

     label2:
        if typeArgs#12 == null goto label3;

        $i0 = lengthof typeArgs#12;

        if $i0 != 1 goto label3;

        $r6 = typeArgs#12[0];

        $z3 = $r6 instanceof java.lang.Class;

        if $z3 != 0 goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collection typed secondary key field must have a single generic type argument and a wildcard or type bound is not allowed: ");

        $r10 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r14 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r7;

     label4:
        $r17 = typeArgs#12[0];

        $r18 = (java.lang.Class) $r17;

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        return $r19;

     label5:
        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ONE_TO_MANY or MANY_TO_MANY secondary key field must have an array or Collection type: ");

        $r23 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r27 = virtualinvoke field.<java.lang.reflect.Field: java.lang.String getName()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r20;
    }

    public java.util.Set getKnownSpecialClasses()
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.util.Set $r0, $r1;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        $r0 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Set registeredSpecialClasses>;

        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r1;
    }

    public synchronized java.util.Set getKnownClasses()
    {
        berkeley.com.sleepycat.persist.model.AnnotationModel this;
        java.util.HashSet $r0;
        java.util.Map $r1;
        java.util.Set $r2, $r3;

        this := @this: berkeley.com.sleepycat.persist.model.AnnotationModel;

        $r0 = new java.util.HashSet;

        $r1 = this.<berkeley.com.sleepycat.persist.model.AnnotationModel: java.util.Map classMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r3;
    }


