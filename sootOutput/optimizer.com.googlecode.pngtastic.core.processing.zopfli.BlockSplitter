    static int splitLz(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int llSize, llPos, splitL, splitR, start, end, $i0, numBlocks#22, lStart#30, lEnd#32, blockN#34, $i1, $i2, $i3, $i4, $i5, $i6, $i7, longest#98, i#102, $i8, $i9, $i10, $i11;
        int[] splitPoints, splitSize;
        byte maxBlocks;
        boolean found#100;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        litLens := @parameter1: char[];

        nop;

        dists := @parameter2: char[];

        nop;

        llSize := @parameter3: int;

        nop;

        splitPoints = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        nop;

        splitSize = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitSize>;

        nop;

        splitPoints[0] = 0;

        nop;

        $i0 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, 0, llSize);

        nop;

        splitSize[0] = $i0;

        nop;

        splitPoints[1] = llSize;

        nop;

        splitSize[1] = -1;

        nop;

        numBlocks#22 = 1;

        nop;

        virtualinvoke cookie.<java.lang.Object: java.lang.Class getClass()>();

        nop;

        maxBlocks = 15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(llSize);

        nop;

        if llSize >= 10 goto label01;

        nop;

        return numBlocks#22;

     label01:
        nop;

        lStart#30 = 0;

        nop;

        lEnd#32 = llSize;

        nop;

        blockN#34 = 0;

     label02:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(numBlocks#22);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(maxBlocks);

        nop;

        if numBlocks#22 >= maxBlocks goto label11;

        nop;

        llPos = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int findMinimum(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, lStart#30, lEnd#32);

        nop;

        splitL = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, lStart#30, llPos);

        nop;

        splitR = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, llPos, lEnd#32);

        nop;

        $i1 = splitL + splitR;

        nop;

        $i2 = splitSize[blockN#34];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if $i1 > $i2 goto label03;

        nop;

        $i3 = lStart#30 + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(llPos);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        if llPos == $i3 goto label03;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(llPos);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lEnd#32);

        nop;

        if llPos != lEnd#32 goto label04;

     label03:
        nop;

        splitSize[blockN#34] = -1;

        nop;

        goto label05;

     label04:
        nop;

        splitSize[blockN#34] = splitL;

        nop;

        numBlocks#22 = numBlocks#22 + 1;

        nop;

        blockN#34 = blockN#34 + 1;

        nop;

        $i4 = blockN#34 + 1;

        nop;

        $i5 = numBlocks#22 - blockN#34;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(splitPoints, blockN#34, splitPoints, $i4, $i5);

        nop;

        $i6 = blockN#34 + 1;

        nop;

        $i7 = numBlocks#22 - blockN#34;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(splitSize, blockN#34, splitSize, $i6, $i7);

        nop;

        splitPoints[blockN#34] = llPos;

        nop;

        splitSize[blockN#34] = splitR;

     label05:
        nop;

        longest#98 = 0;

        nop;

        found#100 = 0;

        nop;

        i#102 = 0;

     label06:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#102);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(numBlocks#22);

        nop;

        if i#102 >= numBlocks#22 goto label08;

        nop;

        start = splitPoints[i#102];

        nop;

        $i8 = i#102 + 1;

        nop;

        end = splitPoints[$i8];

        nop;

        $i9 = splitSize[i#102];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        nop;

        if $i9 == -1 goto label07;

        nop;

        $i10 = end - start;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(longest#98);

        nop;

        if $i10 <= longest#98 goto label07;

        nop;

        lStart#30 = start;

        nop;

        lEnd#32 = end;

        nop;

        found#100 = 1;

        nop;

        longest#98 = end - start;

        nop;

        blockN#34 = i#102;

     label07:
        nop;

        i#102 = i#102 + 1;

        nop;

        goto label06;

     label08:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(found#100);

        nop;

        if found#100 != 0 goto label09;

        nop;

        goto label11;

     label09:
        nop;

        $i11 = lEnd#32 - lStart#30;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11);

        nop;

        if $i11 >= 10 goto label10;

        nop;

        goto label11;

     label10:
        nop;

        goto label02;

     label11:
        nop;

        return numBlocks#22;
    }

    static int split(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, byte[], int, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        byte[] input;
        int 'from', 'to', nPoints, pj, $i0, pos#17, i#28, j#30, $i1;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        char[] dists, litLens, $r0, $r1;
        int[] points;
        char $c2, $c3;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        input := @parameter1: byte[];

        nop;

        'from' := @parameter2: int;

        nop;

        'to' := @parameter3: int;

        nop;

        store = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore store1>;

        nop;

        virtualinvoke store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void greedy(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, null, input, 'from', 'to', store);

        nop;

        $r0 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        $r1 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        $i0 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nop;

        nPoints = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int splitLz(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r0, $r1, $i0);

        nop;

        pos#17 = 'from';

        nop;

        dists = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        litLens = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        points = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        nop;

        points[0] = pos#17;

        nop;

        i#28 = 0;

        nop;

        j#30 = 1;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#30);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nPoints);

        nop;

        if j#30 > nPoints goto label6;

        nop;

        pj = points[j#30];

     label2:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#28);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pj);

        nop;

        if i#28 >= pj goto label5;

        nop;

        $i1 = pos#17;

        nop;

        $c2 = dists[i#28];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c2);

        nop;

        if $c2 != 0 goto label3;

        nop;

        $c3 = 1;

        nop;

        goto label4;

     label3:
        nop;

        $c3 = litLens[i#28];

     label4:
        nop;

        pos#17 = $i1 + $c3;

        nop;

        i#28 = i#28 + 1;

        nop;

        goto label2;

     label5:
        nop;

        points[j#30] = pos#17;

        nop;

        j#30 = j#30 + 1;

        nop;

        goto label1;

     label6:
        nop;

        return nPoints;
    }

    private static int findMinimum(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int 'from', 'to', v, start#4, end#6, $i0, best#12, result#14, i#16, $i1, $i2, lastBest#43, pos#45, $i3, i#51, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, bestI#89, best#93, i#95, $i15, $i16, $i17, $i18, $i19, $i20;
        byte n;
        int[] p, vp;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        litLens := @parameter1: char[];

        nop;

        dists := @parameter2: char[];

        nop;

        'from' := @parameter3: int;

        nop;

        'to' := @parameter4: int;

        nop;

        start#4 = 'from' + 1;

        nop;

        end#6 = 'to';

        nop;

        $i0 = end#6 - start#4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 >= 1024 goto label04;

        nop;

        best#12 = 2147483647;

        nop;

        result#14 = start#4;

        nop;

        i#16 = start#4;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#16);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end#6);

        nop;

        if i#16 >= end#6 goto label03;

        nop;

        $i1 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, 'from', i#16);

        nop;

        $i2 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, i#16, 'to');

        nop;

        v = $i1 + $i2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(v);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(best#12);

        nop;

        if v >= best#12 goto label02;

        nop;

        best#12 = v;

        nop;

        result#14 = i#16;

     label02:
        nop;

        i#16 = i#16 + 1;

        nop;

        goto label01;

     label03:
        nop;

        return result#14;

     label04:
        nop;

        n = 9;

        nop;

        p = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] p>;

        nop;

        vp = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] vp>;

        nop;

        lastBest#43 = 2147483647;

        nop;

        pos#45 = start#4;

     label05:
        nop;

        $i3 = end#6 - start#4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if $i3 > n goto label06;

        nop;

        goto label17;

     label06:
        nop;

        i#51 = 0;

     label07:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#51);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if i#51 >= n goto label08;

        nop;

        $i4 = i#51 + 1;

        nop;

        $i5 = end#6 - start#4;

        nop;

        $i6 = n + 1;

        nop;

        $i7 = $i5 / $i6;

        nop;

        $i8 = $i4 * $i7;

        nop;

        $i9 = start#4 + $i8;

        nop;

        p[i#51] = $i9;

        nop;

        $i10 = p[i#51];

        nop;

        $i11 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, 'from', $i10);

        nop;

        $i12 = p[i#51];

        nop;

        $i13 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, $i12, 'to');

        nop;

        $i14 = $i11 + $i13;

        nop;

        vp[i#51] = $i14;

        nop;

        i#51 = i#51 + 1;

        nop;

        goto label07;

     label08:
        nop;

        bestI#89 = 0;

        nop;

        best#93 = vp[0];

        nop;

        i#95 = 1;

     label09:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#95);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if i#95 >= n goto label11;

        nop;

        $i15 = vp[i#95];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i15);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(best#93);

        nop;

        if $i15 >= best#93 goto label10;

        nop;

        best#93 = vp[i#95];

        nop;

        bestI#89 = i#95;

     label10:
        nop;

        i#95 = i#95 + 1;

        nop;

        goto label09;

     label11:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(best#93);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastBest#43);

        nop;

        if best#93 <= lastBest#43 goto label12;

        nop;

        goto label17;

     label12:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestI#89);

        nop;

        if bestI#89 != 0 goto label13;

        nop;

        $i16 = start#4;

        nop;

        goto label14;

     label13:
        nop;

        $i17 = bestI#89 - 1;

        nop;

        $i16 = p[$i17];

     label14:
        nop;

        start#4 = $i16;

        nop;

        $i18 = n - 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestI#89);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i18);

        nop;

        if bestI#89 != $i18 goto label15;

        nop;

        $i19 = end#6;

        nop;

        goto label16;

     label15:
        nop;

        $i20 = bestI#89 + 1;

        nop;

        $i19 = p[$i20];

     label16:
        nop;

        end#6 = $i19;

        nop;

        pos#45 = p[bestI#89];

        nop;

        lastBest#43 = best#93;

        nop;

        goto label05;

     label17:
        nop;

        return pos#45;
    }


