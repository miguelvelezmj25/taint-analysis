    public void <init>(java.lang.Class)
    {
        org.unix4j.grep.convert.EnumConverters$StringToEnumConverter this;
        java.lang.Class enumClass;

        this := @this: org.unix4j.grep.convert.EnumConverters$StringToEnumConverter;

        enumClass := @parameter0: java.lang.Class;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.unix4j.grep.convert.EnumConverters$StringToEnumConverter: java.lang.Class enumClass> = enumClass;

        return;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.unix4j.grep.convert.EnumConverters$StringToEnumConverter this;
        java.lang.Object l1;
        java.lang.Enum $r0;

        this := @this: org.unix4j.grep.convert.EnumConverters$StringToEnumConverter;

        l1 := @parameter0: java.lang.Object;

        $r0 = virtualinvoke this.<org.unix4j.grep.convert.EnumConverters$StringToEnumConverter: java.lang.Enum convert(java.lang.Object)>(l1);

        return $r0;
    }

    public java.lang.Enum convert(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.unix4j.grep.convert.EnumConverters$StringToEnumConverter this;
        java.lang.Object value;
        java.lang.String name;
        java.lang.IllegalArgumentException e, $r2;
        java.lang.Class $r0;
        java.lang.Enum $r1;

        this := @this: org.unix4j.grep.convert.EnumConverters$StringToEnumConverter;

        value := @parameter0: java.lang.Object;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(value);

        if value == null goto label4;

        name = virtualinvoke value.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r0 = this.<org.unix4j.grep.convert.EnumConverters$StringToEnumConverter: java.lang.Class enumClass>;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>($r0, name);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        return null;

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }


