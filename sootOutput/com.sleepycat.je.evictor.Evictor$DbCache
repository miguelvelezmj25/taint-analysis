    com.sleepycat.je.dbi.DatabaseImpl getDb(com.sleepycat.je.dbi.EnvironmentImpl, com.sleepycat.je.dbi.DatabaseId)
    {
        com.sleepycat.je.evictor.Evictor$DbCache this;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        com.sleepycat.je.dbi.DatabaseId dbId;
        boolean $z0;
        java.util.Map $r0, $r3, tmp$1847278066;
        java.lang.Object $r1, map#8;
        int $i0, $i1, $i2, $i3, $i4;
        com.sleepycat.je.dbi.DbTree $r6;
        com.sleepycat.je.dbi.DatabaseImpl $r7;
        java.util.HashMap tmp$525671362;

        this := @this: com.sleepycat.je.evictor.Evictor$DbCache;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        dbId := @parameter1: com.sleepycat.je.dbi.DatabaseId;

        $z0 = this.<com.sleepycat.je.evictor.Evictor$DbCache: boolean shared>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map envMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(env);

        map#8 = (java.util.Map) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(map#8);

        if map#8 != null goto label2;

        tmp$525671362 = new java.util.HashMap;

        specialinvoke tmp$525671362.<java.util.HashMap: void <init>()>();

        map#8 = tmp$525671362;

        $r3 = this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map envMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(env, map#8);

        goto label2;

     label1:
        map#8 = this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map dbMap>;

     label2:
        $i0 = this.<com.sleepycat.je.evictor.Evictor$DbCache: int nOperations>;

        $i1 = $i0 + 1;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: int nOperations> = $i1;

        $i2 = this.<com.sleepycat.je.evictor.Evictor$DbCache: int nOperations>;

        $i3 = this.<com.sleepycat.je.evictor.Evictor$DbCache: int dbCacheClearCount>;

        $i4 = $i2 % $i3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 != 0 goto label3;

        virtualinvoke this.<com.sleepycat.je.evictor.Evictor$DbCache: void releaseDbs(com.sleepycat.je.dbi.EnvironmentImpl)>(env);

     label3:
        $r6 = virtualinvoke env.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree getDbTree()>();

        tmp$1847278066 = (java.util.Map) map#8;

        $r7 = virtualinvoke $r6.<com.sleepycat.je.dbi.DbTree: com.sleepycat.je.dbi.DatabaseImpl getDb(com.sleepycat.je.dbi.DatabaseId,long,java.util.Map)>(dbId, -1L, tmp$1847278066);

        return $r7;
    }

    void releaseDbs(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.evictor.Evictor$DbCache this;
        com.sleepycat.je.dbi.EnvironmentImpl env, sharingEnv;
        java.util.Iterator l2;
        java.util.Map$Entry entry;
        java.util.Map map, $r0, $r7, $r8;
        boolean $z0, $z1;
        java.util.Set $r1;
        java.lang.Object $r2, $r3, $r4;
        com.sleepycat.je.dbi.DbTree $r5, $r6;

        this := @this: com.sleepycat.je.evictor.Evictor$DbCache;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.evictor.Evictor$DbCache: boolean shared>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r0 = this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map envMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        l2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r2;

        $r3 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        sharingEnv = (com.sleepycat.je.dbi.EnvironmentImpl) $r3;

        $r4 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        map = (java.util.Map) $r4;

        $r5 = virtualinvoke sharingEnv.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree getDbTree()>();

        virtualinvoke $r5.<com.sleepycat.je.dbi.DbTree: void releaseDbs(java.util.Map)>(map);

        interfaceinvoke map.<java.util.Map: void clear()>();

        goto label1;

     label2:
        goto label4;

     label3:
        $r6 = virtualinvoke env.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree getDbTree()>();

        $r7 = this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map dbMap>;

        virtualinvoke $r6.<com.sleepycat.je.dbi.DbTree: void releaseDbs(java.util.Map)>($r7);

        $r8 = this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map dbMap>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

     label4:
        return;
    }

    void <init>(boolean, int)
    {
        com.sleepycat.je.evictor.Evictor$DbCache this;
        boolean shared;
        int dbCacheClearCount;
        java.util.HashMap $r0, $r1;

        this := @this: com.sleepycat.je.evictor.Evictor$DbCache;

        shared := @parameter0: boolean;

        dbCacheClearCount := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.evictor.Evictor$DbCache: boolean shared> = 0;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: int nOperations> = 0;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: int dbCacheClearCount> = 0;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: boolean shared> = shared;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: int dbCacheClearCount> = dbCacheClearCount;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(shared);

        if shared == 0 goto label1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map envMap> = $r0;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map dbMap> = null;

        goto label2;

     label1:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map dbMap> = $r1;

        this.<com.sleepycat.je.evictor.Evictor$DbCache: java.util.Map envMap> = null;

     label2:
        return;
    }


