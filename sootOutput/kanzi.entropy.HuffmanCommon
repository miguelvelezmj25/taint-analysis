    public static int generateCanonicalCodes(short[], int[], int[], int)
    {
        short[] sizes;
        int[] codes, ranks;
        int count, r, code#13, $i0, i#21, $i3;
        kanzi.util.sort.QuickSort sorter, $r0;
        kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator $r1;
        short len#19, $s1, $s2;

        sizes := @parameter0: short[];

        codes := @parameter1: int[];

        ranks := @parameter2: int[];

        count := @parameter3: int;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count);

        if count <= 1 goto label1;

        $r0 = new kanzi.util.sort.QuickSort;

        $r1 = new kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator;

        specialinvoke $r1.<kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator: void <init>(short[])>(sizes);

        specialinvoke $r0.<kanzi.util.sort.QuickSort: void <init>(kanzi.ArrayComparator)>($r1);

        sorter = $r0;

        virtualinvoke sorter.<kanzi.util.sort.QuickSort: boolean sort(int[],int,int)>(ranks, 0, count);

     label1:
        code#13 = 0;

        $i0 = ranks[0];

        len#19 = sizes[$i0];

        i#21 = 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count);

        if i#21 >= count goto label4;

        r = ranks[i#21];

        $s1 = sizes[r];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19);

        if $s1 <= len#19 goto label3;

        $s2 = sizes[r];

        $i3 = $s2 - len#19;

        code#13 = code#13 << $i3;

        len#19 = sizes[r];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19);

        if len#19 <= 24 goto label3;

        return -1;

     label3:
        codes[r] = code#13;

        code#13 = code#13 + 1;

        i#21 = i#21 + 1;

        goto label2;

     label4:
        return count;
    }


