    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        java.io.OutputStream l1;

        l0 := @this: java.util.zip.GZIPOutputStream;

        l1 := @parameter0: java.io.OutputStream;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int,boolean)>(l1, 512, 0);

        return;
    }

    public void <init>(java.io.OutputStream, int, boolean) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        java.io.OutputStream l1;
        int l2;
        boolean l3;
        java.util.zip.Deflater $r0;
        java.util.zip.CRC32 $r1, $r2;

        l0 := @this: java.util.zip.GZIPOutputStream;

        l1 := @parameter0: java.io.OutputStream;

        l2 := @parameter1: int;

        l3 := @parameter2: boolean;

        $r0 = new java.util.zip.Deflater;

        specialinvoke $r0.<java.util.zip.Deflater: void <init>(int,boolean)>(-1, 1);

        specialinvoke l0.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,int,boolean)>(l1, $r0, l2, l3);

        $r1 = new java.util.zip.CRC32;

        specialinvoke $r1.<java.util.zip.CRC32: void <init>()>();

        l0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc> = $r1;

        l0.<java.util.zip.GZIPOutputStream: boolean usesDefaultDeflater> = 1;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeHeader()>();

        $r2 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc>;

        virtualinvoke $r2.<java.util.zip.CRC32: void reset()>();

        return;
    }

    private void writeHeader() throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        java.io.OutputStream $r0;
        byte[] $r1;

        l0 := @this: java.util.zip.GZIPOutputStream;

        $r0 = l0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $r1 = newarray (byte)[10];

        $r1[0] = 31;

        $r1[1] = -117;

        $r1[2] = 8;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r1[8] = 0;

        $r1[9] = 0;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[])>($r1);

        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        byte[] l1;
        int l2, l3;
        java.util.zip.CRC32 $r0;

        l0 := @this: java.util.zip.GZIPOutputStream;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        specialinvoke l0.<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>(l1, l2, l3);

        $r0 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc>;

        virtualinvoke $r0.<java.util.zip.CRC32: void update(byte[],int,int)>(l1, l2, l3);

        return;
    }

    public void finish() throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        java.util.zip.Deflater $r0, $r1, $r2, $r3, $r6;
        boolean $z0, $z1, $z2;
        byte[] $r4, $r5, $r7, $r8, $r10, $r12, l1#51;
        int $i0, l1#18, $i1, $i2, l1#35;
        java.io.OutputStream $r9, $r11, $r13;

        l0 := @this: java.util.zip.GZIPOutputStream;

        $r0 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.Deflater def>;

        $z0 = virtualinvoke $r0.<java.util.zip.Deflater: boolean finished()>();

        if $z0 != 0 goto label5;

        $r1 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.Deflater def>;

        virtualinvoke $r1.<java.util.zip.Deflater: void finish()>();

     label1:
        $r2 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.Deflater def>;

        $z1 = virtualinvoke $r2.<java.util.zip.Deflater: boolean finished()>();

        if $z1 != 0 goto label4;

        $r3 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.Deflater def>;

        $r4 = l0.<java.util.zip.GZIPOutputStream: byte[] buf>;

        $r5 = l0.<java.util.zip.GZIPOutputStream: byte[] buf>;

        $i0 = lengthof $r5;

        l1#18 = virtualinvoke $r3.<java.util.zip.Deflater: int deflate(byte[],int,int)>($r4, 0, $i0);

        $r6 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.Deflater def>;

        $z2 = virtualinvoke $r6.<java.util.zip.Deflater: boolean finished()>();

        if $z2 == 0 goto label2;

        $r7 = l0.<java.util.zip.GZIPOutputStream: byte[] buf>;

        $i1 = lengthof $r7;

        $i2 = $i1 - 8;

        if l1#18 > $i2 goto label2;

        $r8 = l0.<java.util.zip.GZIPOutputStream: byte[] buf>;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeTrailer(byte[],int)>($r8, l1#18);

        l1#35 = l1#18 + 8;

        $r9 = l0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $r10 = l0.<java.util.zip.GZIPOutputStream: byte[] buf>;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, l1#35);

        return;

     label2:
        if l1#18 <= 0 goto label3;

        $r11 = l0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $r12 = l0.<java.util.zip.GZIPOutputStream: byte[] buf>;

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[],int,int)>($r12, 0, l1#18);

     label3:
        goto label1;

     label4:
        l1#51 = newarray (byte)[8];

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeTrailer(byte[],int)>(l1#51, 0);

        $r13 = l0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>(l1#51);

     label5:
        return;
    }

    private void writeTrailer(byte[], int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        byte[] l1;
        int l2, $i1, $i2, $i3;
        java.util.zip.CRC32 $r0;
        long $l0;
        java.util.zip.Deflater $r1;

        l0 := @this: java.util.zip.GZIPOutputStream;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        $r0 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc>;

        $l0 = virtualinvoke $r0.<java.util.zip.CRC32: long getValue()>();

        $i1 = (int) $l0;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeInt(int,byte[],int)>($i1, l1, l2);

        $r1 = l0.<java.util.zip.GZIPOutputStream: java.util.zip.Deflater def>;

        $i2 = virtualinvoke $r1.<java.util.zip.Deflater: int getTotalIn()>();

        $i3 = l2 + 4;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeInt(int,byte[],int)>($i2, l1, $i3);

        return;
    }

    private void writeInt(int, byte[], int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        int l1, l3, $i0, $i1, $i2, $i3;
        byte[] l2;

        l0 := @this: java.util.zip.GZIPOutputStream;

        l1 := @parameter0: int;

        l2 := @parameter1: byte[];

        l3 := @parameter2: int;

        $i0 = l1 & 65535;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeShort(int,byte[],int)>($i0, l2, l3);

        $i1 = l1 >> 16;

        $i2 = $i1 & 65535;

        $i3 = l3 + 2;

        specialinvoke l0.<java.util.zip.GZIPOutputStream: void writeShort(int,byte[],int)>($i2, l2, $i3);

        return;
    }

    private void writeShort(int, byte[], int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream l0;
        int l1, l3, $i0, $i2, $i3, $i4;
        byte[] l2;
        byte $b1, $b5;

        l0 := @this: java.util.zip.GZIPOutputStream;

        l1 := @parameter0: int;

        l2 := @parameter1: byte[];

        l3 := @parameter2: int;

        $i0 = l1 & 255;

        $b1 = (byte) $i0;

        l2[l3] = $b1;

        $i2 = l3 + 1;

        $i3 = l1 >> 8;

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        l2[$i2] = $b5;

        return;
    }


