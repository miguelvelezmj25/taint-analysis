    static java.lang.ThreadLocal$ThreadLocalMap createInheritedMap(java.lang.ThreadLocal$ThreadLocalMap)
    {
        java.lang.ThreadLocal$ThreadLocalMap l0, $r0;

        l0 := @parameter0: java.lang.ThreadLocal$ThreadLocalMap;

        $r0 = new java.lang.ThreadLocal$ThreadLocalMap;

        specialinvoke $r0.<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal$1)>(l0, null);

        return $r0;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <java.lang.ThreadLocal: java.util.concurrent.atomic.AtomicInteger nextHashCode> = $r0;

        return;
    }

    public void <init>()
    {
        java.lang.ThreadLocal l0;
        int $i0;

        l0 := @this: java.lang.ThreadLocal;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <java.lang.ThreadLocal: int nextHashCode()>();

        l0.<java.lang.ThreadLocal: int threadLocalHashCode> = $i0;

        return;
    }

    private static int nextHashCode()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;
        int $i0;

        $r0 = <java.lang.ThreadLocal: java.util.concurrent.atomic.AtomicInteger nextHashCode>;

        $i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>(1640531527);

        return $i0;
    }

    static int access$400(java.lang.ThreadLocal)
    {
        java.lang.ThreadLocal l0;
        int $i0;

        l0 := @parameter0: java.lang.ThreadLocal;

        $i0 = l0.<java.lang.ThreadLocal: int threadLocalHashCode>;

        return $i0;
    }


