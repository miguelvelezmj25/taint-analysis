    public void <init>(org.w3c.dom.Element, weka.core.pmml.MiningSchema) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate this, $r11;
        org.w3c.dom.Element compoundP, $r2, $r9, $r12, $r15;
        weka.core.pmml.MiningSchema miningSchema;
        java.lang.String booleanOpp, tagName, $r1;
        weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate$BooleanOperator[] l4;
        int l5, l6#12, i#27, $i0;
        weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate$BooleanOperator b;
        org.w3c.dom.NodeList children;
        org.w3c.dom.Node child;
        java.util.ArrayList $r0, $r3, $r5, $r7, $r10, $r13;
        boolean $z0, $z1, $z3, $z5, $z7;
        short $s1;
        weka.classifiers.pmml.consumer.TreeModel$True $r4;
        weka.classifiers.pmml.consumer.TreeModel$False $r6;
        weka.classifiers.pmml.consumer.TreeModel$SimplePredicate $r8;
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate $r14;

        this := @this: weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate;

        compoundP := @parameter0: org.w3c.dom.Element;

        miningSchema := @parameter1: weka.core.pmml.MiningSchema;

        specialinvoke this.<weka.classifiers.pmml.consumer.TreeModel$Predicate: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: java.util.ArrayList m_components> = $r0;

        booleanOpp = interfaceinvoke compoundP.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("booleanOperator");

        l4 = staticinvoke <weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate$BooleanOperator: weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate$BooleanOperator[] values()>();

        l5 = lengthof l4;

        l6#12 = 0;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5);

        if l6#12 >= l5 goto label03;

        b = l4[l6#12];

        $r1 = virtualinvoke b.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate$BooleanOperator: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(booleanOpp);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate$BooleanOperator m_booleanOperator> = b;

     label02:
        l6#12 = l6#12 + 1;

        goto label01;

     label03:
        children = interfaceinvoke compoundP.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i#27 = 0;

     label04:
        $i0 = interfaceinvoke children.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#27 >= $i0 goto label10;

        child = interfaceinvoke children.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#27);

        $s1 = interfaceinvoke child.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if $s1 != 1 goto label09;

        $r2 = (org.w3c.dom.Element) child;

        tagName = interfaceinvoke $r2.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z1 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("True");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label05;

        $r3 = this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: java.util.ArrayList m_components>;

        $r4 = new weka.classifiers.pmml.consumer.TreeModel$True;

        specialinvoke $r4.<weka.classifiers.pmml.consumer.TreeModel$True: void <init>()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label09;

     label05:
        $z3 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("False");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label06;

        $r5 = this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: java.util.ArrayList m_components>;

        $r6 = new weka.classifiers.pmml.consumer.TreeModel$False;

        specialinvoke $r6.<weka.classifiers.pmml.consumer.TreeModel$False: void <init>()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label09;

     label06:
        $z5 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("SimplePredicate");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label07;

        $r7 = this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: java.util.ArrayList m_components>;

        $r8 = new weka.classifiers.pmml.consumer.TreeModel$SimplePredicate;

        $r9 = (org.w3c.dom.Element) child;

        specialinvoke $r8.<weka.classifiers.pmml.consumer.TreeModel$SimplePredicate: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r9, miningSchema);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label09;

     label07:
        $z7 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("CompoundPredicate");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label08;

        $r10 = this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: java.util.ArrayList m_components>;

        $r11 = new weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate;

        $r12 = (org.w3c.dom.Element) child;

        specialinvoke $r11.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r12, miningSchema);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label09;

     label08:
        $r13 = this.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: java.util.ArrayList m_components>;

        $r14 = new weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate;

        $r15 = (org.w3c.dom.Element) child;

        specialinvoke $r14.<weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r15, miningSchema);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label09:
        i#27 = i#27 + 1;

        goto label04;

     label10:
        return;
    }


