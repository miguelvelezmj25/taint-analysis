    void <init>(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.evictor.Arbiter this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        com.sleepycat.je.dbi.DbConfigManager configManager;
        com.sleepycat.je.config.LongConfigParam $r0;
        long $l0;
        com.sleepycat.je.dbi.MemoryBudget $r1;
        com.sleepycat.je.dbi.MemoryBudget$Totals $r2;

        this := @this: com.sleepycat.je.evictor.Arbiter;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        configManager = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r0 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.LongConfigParam EVICTOR_EVICT_BYTES>;

        $l0 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: long getLong(com.sleepycat.je.config.LongConfigParam)>($r0);

        this.<com.sleepycat.je.evictor.Arbiter: long evictBytesSetting> = $l0;

        $r1 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $r2 = virtualinvoke $r1.<com.sleepycat.je.dbi.MemoryBudget: com.sleepycat.je.dbi.MemoryBudget$Totals getTotals()>();

        this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals> = $r2;

        return;
    }

    boolean stillNeedsEviction()
    {
        com.sleepycat.je.evictor.Arbiter this;
        com.sleepycat.je.dbi.MemoryBudget$Totals $r0, $r1;
        long $l0, $l1, $l2, $l3;
        byte $b4;
        boolean $z0;

        this := @this: com.sleepycat.je.evictor.Arbiter;

        $r0 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l0 = virtualinvoke $r0.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getCacheUsage()>();

        $l1 = this.<com.sleepycat.je.evictor.Arbiter: long evictBytesSetting>;

        $l2 = $l0 + $l1;

        $r1 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l3 = virtualinvoke $r1.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getMaxMemory()>();

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    long getEvictionPledge()
    {
        com.sleepycat.je.evictor.Arbiter this;
        long currentUsage, maxMem, overBudget, requiredEvictBytes#16, $l1, $l2, $l3, $l5;
        com.sleepycat.je.dbi.MemoryBudget$Totals $r0, $r1;
        byte $b0, $b4;
        boolean $z0, doRun#14, doRun#41;
        com.sleepycat.je.utilint.TestHook $r2, $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        this := @this: com.sleepycat.je.evictor.Arbiter;

        $r0 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        currentUsage = virtualinvoke $r0.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getCacheUsage()>();

        $r1 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        maxMem = virtualinvoke $r1.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getMaxMemory()>();

        overBudget = currentUsage - maxMem;

        $b0 = overBudget cmp 0L;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        doRun#14 = $z0;

        requiredEvictBytes#16 = 0L;

        if doRun#14 == 0 goto label3;

        $l1 = this.<com.sleepycat.je.evictor.Arbiter: long evictBytesSetting>;

        requiredEvictBytes#16 = overBudget + $l1;

        $l2 = currentUsage - requiredEvictBytes#16;

        $l3 = maxMem / 2L;

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label3;

        $l5 = maxMem / 2L;

        requiredEvictBytes#16 = overBudget + $l5;

     label3:
        $r2 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.utilint.TestHook runnableHook>;

        if $r2 == null goto label5;

        $r3 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.utilint.TestHook runnableHook>;

        $r4 = interfaceinvoke $r3.<com.sleepycat.je.utilint.TestHook: java.lang.Object getHookValue()>();

        $r5 = (java.lang.Boolean) $r4;

        doRun#41 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if doRun#41 == 0 goto label4;

        requiredEvictBytes#16 = maxMem;

        goto label5;

     label4:
        requiredEvictBytes#16 = 0L;

     label5:
        return requiredEvictBytes#16;
    }

    boolean needCriticalEviction()
    {
        com.sleepycat.je.evictor.Arbiter this;
        long over, $l0, $l1, $l2;
        com.sleepycat.je.dbi.MemoryBudget$Totals $r0, $r1, $r2;
        byte $b3;
        boolean $z0;

        this := @this: com.sleepycat.je.evictor.Arbiter;

        $r0 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l0 = virtualinvoke $r0.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getCacheUsage()>();

        $r1 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l1 = virtualinvoke $r1.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getMaxMemory()>();

        over = $l0 - $l1;

        $r2 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l2 = virtualinvoke $r2.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getCriticalThreshold()>();

        $b3 = over cmp $l2;

        if $b3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isOverBudget()
    {
        com.sleepycat.je.evictor.Arbiter this;
        com.sleepycat.je.dbi.MemoryBudget$Totals $r0, $r1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        this := @this: com.sleepycat.je.evictor.Arbiter;

        $r0 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l0 = virtualinvoke $r0.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getCacheUsage()>();

        $r1 = this.<com.sleepycat.je.evictor.Arbiter: com.sleepycat.je.dbi.MemoryBudget$Totals memBudgetTotals>;

        $l1 = virtualinvoke $r1.<com.sleepycat.je.dbi.MemoryBudget$Totals: long getMaxMemory()>();

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }


