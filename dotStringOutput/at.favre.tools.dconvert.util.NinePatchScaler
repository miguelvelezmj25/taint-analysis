digraph <init> {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {498141959}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1790500376}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1790500376}" -> "$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {705326474}";
"$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {705326474}" -> "$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {1926278788}";
"$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {1926278788}" -> "specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {88075845}";
"specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {88075845}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {799958520}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {799958520}" -> "return {1538763235}";
}

digraph scale {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {452197641}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {762579068}";
"inputImage := @parameter0: java.awt.image.BufferedImage {762579068}" -> "dimensions := @parameter1: java.awt.Dimension {942682524}";
"dimensions := @parameter1: java.awt.Dimension {942682524}" -> "algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {1044519532}";
"algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {1044519532}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1827330575}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1827330575}" -> "trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {1855921653}";
"trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {1855921653}" -> "$i0 = dimensions.<java.awt.Dimension: int width> {1292453428}";
"$i0 = dimensions.<java.awt.Dimension: int width> {1292453428}" -> "$i1 = dimensions.<java.awt.Dimension: int height> {1606051600}";
"$i1 = dimensions.<java.awt.Dimension: int height> {1606051600}" -> "trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1186981978}";
"trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1186981978}" -> "w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {2108138456}";
"w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {2108138456}" -> "h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {502332376}";
"h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {502332376}" -> "borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {1310829290}";
"borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {1310829290}" -> "$i2 = w * h {2026474483}";
"$i2 = w * h {2026474483}" -> "rgbArray#28 = newarray (int)[$i2] {271102157}";
"rgbArray#28 = newarray (int)[$i2] {271102157}" -> "virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {1817815445}";
"virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {1817815445}" -> "virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {2076694024}";
"virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {2076694024}" -> "return borderImage {810658982}";
}

digraph trim9PBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1357790251}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {48972895}";
"inputImage := @parameter0: java.awt.image.BufferedImage {48972895}" -> "$r0 = new java.awt.image.BufferedImage {670314151}";
"$r0 = new java.awt.image.BufferedImage {670314151}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {314921557}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {314921557}" -> "$i1 = $i0 - 2 {292788207}";
"$i1 = $i0 - 2 {292788207}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1746705835}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1746705835}" -> "$i3 = $i2 - 2 {1154509477}";
"$i3 = $i2 - 2 {1154509477}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {2137368568}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {2137368568}" -> "trimedImage = $r0 {196343234}";
"trimedImage = $r0 {196343234}" -> "g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {711373399}";
"g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {711373399}" -> "$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {670997872}";
"$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {670997872}" -> "$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1144887832}";
"$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1144887832}" -> "$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {775596160}";
"$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {775596160}" -> "$i7 = $i6 - 1 {2107299109}";
"$i7 = $i6 - 1 {2107299109}" -> "$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1105306886}";
"$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1105306886}" -> "$i9 = $i8 - 1 {2130010295}";
"$i9 = $i8 - 1 {2130010295}" -> "virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1274981852}";
"virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1274981852}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {966899618}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {966899618}" -> "return trimedImage {2042244429}";
}

digraph generateBordersImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1820631357}" -> "source := @parameter0: java.awt.image.BufferedImage {1245772988}";
"source := @parameter0: java.awt.image.BufferedImage {1245772988}" -> "trimedWidth := @parameter1: int {43523004}";
"trimedWidth := @parameter1: int {43523004}" -> "trimedHeight := @parameter2: int {1630245272}";
"trimedHeight := @parameter2: int {1630245272}" -> "$r0 = new java.awt.image.BufferedImage {250092826}";
"$r0 = new java.awt.image.BufferedImage {250092826}" -> "$i0 = trimedWidth + 2 {795199607}";
"$i0 = trimedWidth + 2 {795199607}" -> "$i1 = trimedHeight + 2 {1539381598}";
"$i1 = trimedHeight + 2 {1539381598}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1602553038}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1602553038}" -> "finalBorder = $r0 {1693696405}";
"finalBorder = $r0 {1693696405}" -> "$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {519926427}";
"$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {519926427}" -> "cutW = $i2 - 2 {1531074388}";
"cutW = $i2 - 2 {1531074388}" -> "$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {223798705}";
"$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {223798705}" -> "cutH = $i3 - 2 {1145642036}";
"cutH = $i3 - 2 {1145642036}" -> "$r1 = new java.awt.image.BufferedImage {1829342095}";
"$r1 = new java.awt.image.BufferedImage {1829342095}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {158136882}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {158136882}" -> "leftBorder#23 = $r1 {637210945}";
"leftBorder#23 = $r1 {637210945}" -> "$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1460479917}";
"$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1460479917}" -> "virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1366745600}";
"virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1366745600}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {251801167}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {251801167}" -> "leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {352418897}";
"leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {352418897}" -> "$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {362775750}";
"$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {362775750}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {1570098752}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {1570098752}" -> "$r4 = new java.awt.image.BufferedImage {876988544}";
"$r4 = new java.awt.image.BufferedImage {876988544}" -> "specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {496444457}";
"specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {496444457}" -> "rightBorder#69 = $r4 {1337371823}";
"rightBorder#69 = $r4 {1337371823}" -> "$i4 = cutW + 1 {869091763}";
"$i4 = cutW + 1 {869091763}" -> "$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {1585450134}";
"$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {1585450134}" -> "virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1978189982}";
"virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1978189982}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {975647601}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {975647601}" -> "rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1897662951}";
"rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1897662951}" -> "$i5 = trimedWidth + 1 {638085627}";
"$i5 = trimedWidth + 1 {638085627}" -> "$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1980019301}";
"$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1980019301}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1886125132}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1886125132}" -> "$r7 = new java.awt.image.BufferedImage {590348222}";
"$r7 = new java.awt.image.BufferedImage {590348222}" -> "specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {411900542}";
"specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {411900542}" -> "topBorder#119 = $r7 {128710191}";
"topBorder#119 = $r7 {128710191}" -> "$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {468873372}";
"$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {468873372}" -> "virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {1634414131}";
"virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {1634414131}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {353464349}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {353464349}" -> "topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1145210609}";
"topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1145210609}" -> "$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1317481272}";
"$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1317481272}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {1546351750}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {1546351750}" -> "$r10 = new java.awt.image.BufferedImage {729963216}";
"$r10 = new java.awt.image.BufferedImage {729963216}" -> "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {30896799}";
"specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {30896799}" -> "bottomBorder#165 = $r10 {1075186163}";
"bottomBorder#165 = $r10 {1075186163}" -> "$i6 = cutH + 1 {349327942}";
"$i6 = cutH + 1 {349327942}" -> "$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1776063624}";
"$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1776063624}" -> "virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {1235282155}";
"virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {1235282155}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {1691115728}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {1691115728}" -> "bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {885612250}";
"bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {885612250}" -> "$i7 = trimedHeight + 1 {205734787}";
"$i7 = trimedHeight + 1 {205734787}" -> "$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {106333588}";
"$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {106333588}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {1532125932}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {1532125932}" -> "return finalBorder {836823933}";
}

digraph verifyBorderImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1516923696}" -> "border := @parameter0: java.awt.image.BufferedImage {1466760162}";
"border := @parameter0: java.awt.image.BufferedImage {1466760162}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1189111204}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1189111204}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {281293930}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {281293930}" -> "$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1605606978}";
"$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1605606978}" -> "rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {949032294}";
"rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {949032294}" -> "i#12 = 0 {1115233228}";
"i#12 = 0 {1115233228}" -> "$i3 = lengthof rgb {1358827326}";
"$i3 = lengthof rgb {1358827326}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1401041506}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1401041506}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {846043407}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {846043407}" -> "if i#12 >= $i3 goto return {1515440534}";
"if i#12 >= $i3 goto return {1515440534}" -> "$i4 = rgb[i#12] {81862461}";
"if i#12 >= $i3 goto return {1515440534}" -> "return {1068189912}";
"$i4 = rgb[i#12] {81862461}" -> "$i5 = -16777216 & $i4 {1447506170}";
"$i5 = -16777216 & $i4 {1447506170}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1050072900}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1050072900}" -> "if $i5 == 0 goto i#12 = i#12 + 1 {1593451016}";
"if $i5 == 0 goto i#12 = i#12 + 1 {1593451016}" -> "$i6 = rgb[i#12] {778471961}";
"if $i5 == 0 goto i#12 = i#12 + 1 {1593451016}" -> "i#12 = i#12 + 1 {2036873222}";
"$i6 = rgb[i#12] {778471961}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {1480742001}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {1480742001}" -> "if $i6 == -16777216 goto i#12 = i#12 + 1 {106655944}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {106655944}" -> "$i7 = rgb[i#12] {698674325}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {106655944}" -> "i#12 = i#12 + 1 {2036873222}";
"$i7 = rgb[i#12] {698674325}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {977884401}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {977884401}" -> "if $i7 == -65536 goto i#12 = i#12 + 1 {76402964}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {76402964}" -> "$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {232340467}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {76402964}" -> "i#12 = i#12 + 1 {2036873222}";
"$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {232340467}" -> "specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1472590958}";
"specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1472590958}" -> "throw $r0 {1026202355}";
"i#12 = i#12 + 1 {2036873222}" -> "goto [?= $i3 = lengthof rgb] {1194701524}";
"goto [?= $i3 = lengthof rgb] {1194701524}" -> "$i3 = lengthof rgb {1358827326}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1401041506}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1050072900}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {846043407}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {1480742001}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {977884401}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph resizeBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1876272753}" -> "border := @parameter0: java.awt.image.BufferedImage {113723364}";
"border := @parameter0: java.awt.image.BufferedImage {113723364}" -> "targetWidth := @parameter1: int {1543232524}";
"targetWidth := @parameter1: int {1543232524}" -> "targetHeight := @parameter2: int {1971813752}";
"targetHeight := @parameter2: int {1971813752}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {259176666}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {259176666}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1203127866}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1203127866}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {2077164084}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {2077164084}" -> "if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {2033373886}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {2033373886}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {992960478}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {2033373886}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {2085317531}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {992960478}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1885502997}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1885502997}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {850477913}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {850477913}" -> "if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1416092967}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1416092967}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {2085317531}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1416092967}" -> "w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1641010334}";
"$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {2085317531}" -> "endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {655626859}";
"endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {655626859}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {1849363668}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {1849363668}" -> "return endImage {1138539108}";
"w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1641010334}" -> "h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1647010091}";
"h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1647010091}" -> "data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {2099620761}";
"data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {2099620761}" -> "$i2 = targetWidth * targetHeight {343764189}";
"$i2 = targetWidth * targetHeight {343764189}" -> "newData = newarray (int)[$i2] {1758115295}";
"newData = newarray (int)[$i2] {1758115295}" -> "$i3 = targetWidth - 1 {1181529508}";
"$i3 = targetWidth - 1 {1181529508}" -> "$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {499209949}";
"$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {499209949}" -> "$f0 = (float) $i4 {717830723}";
"$f0 = (float) $i4 {717830723}" -> "$i5 = w - 1 {1234069015}";
"$i5 = w - 1 {1234069015}" -> "$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {2027295233}";
"$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {2027295233}" -> "$f1 = (float) $i6 {1404480222}";
"$f1 = (float) $i6 {1404480222}" -> "widthRatio = $f0 / $f1 {962639176}";
"widthRatio = $f0 / $f1 {962639176}" -> "$i7 = targetHeight - 1 {653999193}";
"$i7 = targetHeight - 1 {653999193}" -> "$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {1967336850}";
"$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {1967336850}" -> "$f2 = (float) $i8 {383585501}";
"$f2 = (float) $i8 {383585501}" -> "$i9 = h - 1 {2000585784}";
"$i9 = h - 1 {2000585784}" -> "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {1064032729}";
"$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {1064032729}" -> "$f3 = (float) $i10 {1288621321}";
"$f3 = (float) $i10 {1288621321}" -> "heightRatio = $f2 / $f3 {2031456455}";
"heightRatio = $f2 / $f3 {2031456455}" -> "y#60 = 0 {159875870}";
"y#60 = 0 {159875870}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1179925918}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1179925918}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {309186881}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {309186881}" -> "if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {831080229}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {831080229}" -> "x#64 = 0 {776328954}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {831080229}" -> "$r1 = new java.awt.image.BufferedImage {345095797}";
"x#64 = 0 {776328954}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {483667541}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {483667541}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {2133162252}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {2133162252}" -> "if x#64 >= w goto y#60 = y#60 + 1 {1426562236}";
"if x#64 >= w goto y#60 = y#60 + 1 {1426562236}" -> "$i11 = y#60 * w {1444599384}";
"if x#64 >= w goto y#60 = y#60 + 1 {1426562236}" -> "y#60 = y#60 + 1 {668478763}";
"$i11 = y#60 * w {1444599384}" -> "$i12 = $i11 + x#64 {1668880336}";
"$i12 = $i11 + x#64 {1668880336}" -> "$i13 = data[$i12] {2113863798}";
"$i13 = data[$i12] {2113863798}" -> "$i14 = -16777216 & $i13 {2102899079}";
"$i14 = -16777216 & $i13 {2102899079}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1825182177}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1825182177}" -> "if $i14 == 0 goto x#64 = x#64 + 1 {14880802}";
"if $i14 == 0 goto x#64 = x#64 + 1 {14880802}" -> "$f4 = (float) x#64 {779487710}";
"if $i14 == 0 goto x#64 = x#64 + 1 {14880802}" -> "x#64 = x#64 + 1 {2088476598}";
"$f4 = (float) x#64 {779487710}" -> "$f5 = $f4 * widthRatio {1989616113}";
"$f5 = $f4 * widthRatio {1989616113}" -> "$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {667564994}";
"$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {667564994}" -> "$i16 = targetWidth - 1 {1914895479}";
"$i16 = targetWidth - 1 {1914895479}" -> "newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {1227925331}";
"newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {1227925331}" -> "$f6 = (float) y#60 {783850771}";
"$f6 = (float) y#60 {783850771}" -> "$f7 = $f6 * heightRatio {784991974}";
"$f7 = $f6 * heightRatio {784991974}" -> "$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {596203122}";
"$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {596203122}" -> "$i18 = targetHeight - 1 {876726663}";
"$i18 = targetHeight - 1 {876726663}" -> "newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {1451779270}";
"newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {1451779270}" -> "$i19 = newY * targetWidth {2040963359}";
"$i19 = newY * targetWidth {2040963359}" -> "$i20 = $i19 + newX {712568590}";
"$i20 = $i19 + newX {712568590}" -> "$i21 = y#60 * w {809328464}";
"$i21 = y#60 * w {809328464}" -> "$i22 = $i21 + x#64 {1796354019}";
"$i22 = $i21 + x#64 {1796354019}" -> "$i23 = data[$i22] {809642745}";
"$i23 = data[$i22] {809642745}" -> "newData[$i20] = $i23 {1784624254}";
"newData[$i20] = $i23 {1784624254}" -> "x#64 = x#64 + 1 {2088476598}";
"x#64 = x#64 + 1 {2088476598}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {116185837}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {116185837}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {483667541}";
"y#60 = y#60 + 1 {668478763}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {876024170}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {876024170}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1179925918}";
"$r1 = new java.awt.image.BufferedImage {345095797}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {571794710}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {571794710}" -> "img = $r1 {693407458}";
"img = $r1 {693407458}" -> "virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1813669745}";
"virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1813669745}" -> "return img {1718059802}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1825182177}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1203127866}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1885502997}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {309186881}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {2077164084}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {850477913}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {483667541}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {2133162252}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1179925918}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph enforceBorderColors {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1716784241}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {672235305}";
"inputImage := @parameter0: java.awt.image.BufferedImage {672235305}" -> "g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1445443267}";
"g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1445443267}" -> "$r0 = new java.awt.Color {137479369}";
"$r0 = new java.awt.Color {137479369}" -> "specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {734405404}";
"specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {734405404}" -> "virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {1136625322}";
"virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {1136625322}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1406768552}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1406768552}" -> "$i1 = $i0 - 2 {1768191631}";
"$i1 = $i0 - 2 {1768191631}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {2013311330}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {2013311330}" -> "$i3 = $i2 - 2 {942197322}";
"$i3 = $i2 - 2 {942197322}" -> "virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {127618337}";
"virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {127618337}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {417983667}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {417983667}" -> "w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {2111665350}";
"w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {2111665350}" -> "h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1429243335}";
"h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1429243335}" -> "$i4 = w * h {114332673}";
"$i4 = w * h {114332673}" -> "rgb = newarray (int)[$i4] {147797057}";
"rgb = newarray (int)[$i4] {147797057}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {925342348}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {925342348}" -> "i#40 = 0 {1789162712}";
"i#40 = 0 {1789162712}" -> "$i5 = lengthof rgb {1086156040}";
"$i5 = lengthof rgb {1086156040}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1738523296}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1738523296}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1690481349}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1690481349}" -> "if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {167170931}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {167170931}" -> "$i6 = rgb[i#40] {1369431137}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {167170931}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1632635261}";
"$i6 = rgb[i#40] {1369431137}" -> "$i7 = -16777216 & $i6 {784181272}";
"$i7 = -16777216 & $i6 {784181272}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {52288270}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {52288270}" -> "if $i7 == 0 goto i#40 = i#40 + 1 {1944828243}";
"if $i7 == 0 goto i#40 = i#40 + 1 {1944828243}" -> "rgb[i#40] = -16777216 {813271642}";
"if $i7 == 0 goto i#40 = i#40 + 1 {1944828243}" -> "i#40 = i#40 + 1 {524546277}";
"rgb[i#40] = -16777216 {813271642}" -> "i#40 = i#40 + 1 {524546277}";
"i#40 = i#40 + 1 {524546277}" -> "goto [?= $i5 = lengthof rgb] {36695373}";
"goto [?= $i5 = lengthof rgb] {36695373}" -> "$i5 = lengthof rgb {1086156040}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1632635261}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {1824046063}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {1824046063}" -> "$i8 = h - 1 {2069088833}";
"$i8 = h - 1 {2069088833}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1331761581}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1331761581}" -> "$i9 = w - 1 {1154424708}";
"$i9 = w - 1 {1154424708}" -> "$i10 = h - 1 {543519443}";
"$i10 = h - 1 {543519443}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {1944753788}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {1944753788}" -> "$i11 = w - 1 {716742741}";
"$i11 = w - 1 {716742741}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1476641384}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1476641384}" -> "return {936803125}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {52288270}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1738523296}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1690481349}"[fontcolor="blue", penwidth=3, color="blue"];
}


