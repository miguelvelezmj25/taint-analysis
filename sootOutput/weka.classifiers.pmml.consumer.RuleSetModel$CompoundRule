    public void <init>(org.w3c.dom.Element, weka.core.pmml.MiningSchema) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule this, $r5, childRule#44;
        org.w3c.dom.Element ruleE, $r1, $r3, $r6;
        weka.core.pmml.MiningSchema miningSchema;
        org.w3c.dom.NodeList ruleChildren;
        org.w3c.dom.Node child;
        java.lang.String tagName;
        java.util.ArrayList $r0, $r4, $r7;
        int i#10, $i0;
        short $s1;
        boolean $z0, $z2;
        weka.classifiers.pmml.consumer.RuleSetModel$SimpleRule $r2, childRule#31;

        this := @this: weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule;

        ruleE := @parameter0: org.w3c.dom.Element;

        miningSchema := @parameter1: weka.core.pmml.MiningSchema;

        specialinvoke this.<weka.classifiers.pmml.consumer.RuleSetModel$Rule: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>(ruleE, miningSchema);

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule: java.util.ArrayList m_childRules> = $r0;

        ruleChildren = interfaceinvoke ruleE.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i#10 = 0;

     label1:
        $i0 = interfaceinvoke ruleChildren.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#10);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#10 >= $i0 goto label4;

        child = interfaceinvoke ruleChildren.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#10);

        $s1 = interfaceinvoke child.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if $s1 != 1 goto label3;

        $r1 = (org.w3c.dom.Element) child;

        tagName = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("SimpleRule");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r2 = new weka.classifiers.pmml.consumer.RuleSetModel$SimpleRule;

        $r3 = (org.w3c.dom.Element) child;

        specialinvoke $r2.<weka.classifiers.pmml.consumer.RuleSetModel$SimpleRule: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r3, miningSchema);

        childRule#31 = $r2;

        $r4 = this.<weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule: java.util.ArrayList m_childRules>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(childRule#31);

        goto label3;

     label2:
        $z2 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("CompoundRule");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r5 = new weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule;

        $r6 = (org.w3c.dom.Element) child;

        specialinvoke $r5.<weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r6, miningSchema);

        childRule#44 = $r5;

        $r7 = this.<weka.classifiers.pmml.consumer.RuleSetModel$CompoundRule: java.util.ArrayList m_childRules>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(childRule#44);

     label3:
        i#10 = i#10 + 1;

        goto label1;

     label4:
        return;
    }


