    void <init>(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)
    {
        java.util.HashMap$Node l0, l4;
        int l1;
        java.lang.Object l2, l3;

        l0 := @this: java.util.HashMap$Node;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.Object;

        l3 := @parameter2: java.lang.Object;

        l4 := @parameter3: java.util.HashMap$Node;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.util.HashMap$Node: int hash> = l1;

        l0.<java.util.HashMap$Node: java.lang.Object key> = l2;

        l0.<java.util.HashMap$Node: java.lang.Object value> = l3;

        l0.<java.util.HashMap$Node: java.util.HashMap$Node next> = l4;

        return;
    }

    public final java.lang.Object getKey()
    {
        java.util.HashMap$Node l0;
        java.lang.Object $r0;

        l0 := @this: java.util.HashMap$Node;

        $r0 = l0.<java.util.HashMap$Node: java.lang.Object key>;

        return $r0;
    }

    public final java.lang.Object getValue()
    {
        java.util.HashMap$Node l0;
        java.lang.Object $r0;

        l0 := @this: java.util.HashMap$Node;

        $r0 = l0.<java.util.HashMap$Node: java.lang.Object value>;

        return $r0;
    }


