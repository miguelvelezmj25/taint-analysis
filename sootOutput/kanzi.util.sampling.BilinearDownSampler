    public boolean supportsScalingFactor(int)
    {
        kanzi.util.sampling.BilinearDownSampler this;
        int factor;
        boolean $z0;

        this := @this: kanzi.util.sampling.BilinearDownSampler;

        factor := @parameter0: int;

        if factor == 2 goto label1;

        if factor != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void subSample(int[], int[])
    {
        kanzi.util.sampling.BilinearDownSampler this;
        int[] input, output;
        int w, st, val, line2, line3, val, line0#3, oOffs#9, $i0, j#15, line1#20, i#22, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, j#64, line1#69, i#77, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76;

        this := @this: kanzi.util.sampling.BilinearDownSampler;

        input := @parameter0: int[];

        output := @parameter1: int[];

        line0#3 = this.<kanzi.util.sampling.BilinearDownSampler: int offset>;

        w = this.<kanzi.util.sampling.BilinearDownSampler: int width>;

        st = this.<kanzi.util.sampling.BilinearDownSampler: int stride>;

        oOffs#9 = 0;

        $i0 = this.<kanzi.util.sampling.BilinearDownSampler: int factor>;

        if $i0 != 2 goto label5;

        j#15 = this.<kanzi.util.sampling.BilinearDownSampler: int height>;

     label1:
        if j#15 <= 0 goto label4;

        line1#20 = line0#3 + st;

        i#22 = 0;

     label2:
        if i#22 >= w goto label3;

        $i1 = line0#3 + i#22;

        $i2 = input[$i1];

        $i3 = line0#3 + i#22;

        $i4 = $i3 + 1;

        $i5 = input[$i4];

        $i6 = $i2 + $i5;

        $i7 = line1#20 + i#22;

        $i8 = input[$i7];

        $i9 = $i6 + $i8;

        $i10 = line1#20 + i#22;

        $i11 = $i10 + 1;

        $i12 = input[$i11];

        val = $i9 + $i12;

        $i13 = oOffs#9;

        oOffs#9 = oOffs#9 + 1;

        $i14 = val + 2;

        $i15 = $i14 >> 2;

        output[$i13] = $i15;

        i#22 = i#22 + 2;

        goto label2;

     label3:
        line0#3 = line1#20 + st;

        j#15 = j#15 + -2;

        goto label1;

     label4:
        goto label9;

     label5:
        j#64 = this.<kanzi.util.sampling.BilinearDownSampler: int height>;

     label6:
        if j#64 <= 0 goto label9;

        line1#69 = line0#3 + st;

        line2 = line1#69 + st;

        line3 = line2 + st;

        i#77 = 0;

     label7:
        if i#77 >= w goto label8;

        $i16 = line0#3 + i#77;

        $i17 = input[$i16];

        $i18 = line0#3 + i#77;

        $i19 = $i18 + 1;

        $i20 = input[$i19];

        $i21 = $i17 + $i20;

        $i22 = line0#3 + i#77;

        $i23 = $i22 + 2;

        $i24 = input[$i23];

        $i25 = $i21 + $i24;

        $i26 = line0#3 + i#77;

        $i27 = $i26 + 3;

        $i28 = input[$i27];

        $i29 = $i25 + $i28;

        $i30 = line1#69 + i#77;

        $i31 = input[$i30];

        $i32 = $i29 + $i31;

        $i33 = line1#69 + i#77;

        $i34 = $i33 + 1;

        $i35 = input[$i34];

        $i36 = $i32 + $i35;

        $i37 = line1#69 + i#77;

        $i38 = $i37 + 2;

        $i39 = input[$i38];

        $i40 = $i36 + $i39;

        $i41 = line1#69 + i#77;

        $i42 = $i41 + 3;

        $i43 = input[$i42];

        $i44 = $i40 + $i43;

        $i45 = line2 + i#77;

        $i46 = input[$i45];

        $i47 = $i44 + $i46;

        $i48 = line2 + i#77;

        $i49 = $i48 + 1;

        $i50 = input[$i49];

        $i51 = $i47 + $i50;

        $i52 = line2 + i#77;

        $i53 = $i52 + 2;

        $i54 = input[$i53];

        $i55 = $i51 + $i54;

        $i56 = line2 + i#77;

        $i57 = $i56 + 3;

        $i58 = input[$i57];

        $i59 = $i55 + $i58;

        $i60 = line3 + i#77;

        $i61 = input[$i60];

        $i62 = $i59 + $i61;

        $i63 = line3 + i#77;

        $i64 = $i63 + 1;

        $i65 = input[$i64];

        $i66 = $i62 + $i65;

        $i67 = line3 + i#77;

        $i68 = $i67 + 2;

        $i69 = input[$i68];

        $i70 = $i66 + $i69;

        $i71 = line3 + i#77;

        $i72 = $i71 + 3;

        $i73 = input[$i72];

        val = $i70 + $i73;

        $i74 = oOffs#9;

        oOffs#9 = oOffs#9 + 1;

        $i75 = val + 8;

        $i76 = $i75 >> 4;

        output[$i74] = $i76;

        i#77 = i#77 + 4;

        goto label7;

     label8:
        line0#3 = line3 + st;

        j#64 = j#64 + -4;

        goto label6;

     label9:
        return;
    }

    public void subSampleHorizontal(int[], int[])
    {
        kanzi.util.sampling.BilinearDownSampler this;
        int[] input, output;
        int w, st, iOffs#3, oOffs#5, $i0, j#15, end#20, i#22, oOffs#27, $i1, $i2, $i3, $i4, $i5, oOffs#41, $i6, $i7, $i8, $i9, $i10, $i11, oOffs#57, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, j#91, end#96, i#98, oOffs#103, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48;

        this := @this: kanzi.util.sampling.BilinearDownSampler;

        input := @parameter0: int[];

        output := @parameter1: int[];

        iOffs#3 = this.<kanzi.util.sampling.BilinearDownSampler: int offset>;

        oOffs#5 = 0;

        w = this.<kanzi.util.sampling.BilinearDownSampler: int width>;

        st = this.<kanzi.util.sampling.BilinearDownSampler: int stride>;

        $i0 = this.<kanzi.util.sampling.BilinearDownSampler: int factor>;

        if $i0 != 2 goto label5;

        j#15 = this.<kanzi.util.sampling.BilinearDownSampler: int height>;

     label1:
        if j#15 <= 0 goto label4;

        end#20 = iOffs#3 + w;

        i#22 = iOffs#3;

     label2:
        if i#22 >= end#20 goto label3;

        oOffs#27 = oOffs#5 + 1;

        $i1 = input[i#22];

        $i2 = i#22 + 1;

        $i3 = input[$i2];

        $i4 = $i1 + $i3;

        $i5 = $i4 >> 1;

        output[oOffs#5] = $i5;

        oOffs#41 = oOffs#27 + 1;

        $i6 = i#22 + 2;

        $i7 = input[$i6];

        $i8 = i#22 + 3;

        $i9 = input[$i8];

        $i10 = $i7 + $i9;

        $i11 = $i10 >> 1;

        output[oOffs#27] = $i11;

        oOffs#57 = oOffs#41 + 1;

        $i12 = i#22 + 4;

        $i13 = input[$i12];

        $i14 = i#22 + 5;

        $i15 = input[$i14];

        $i16 = $i13 + $i15;

        $i17 = $i16 >> 1;

        output[oOffs#41] = $i17;

        oOffs#5 = oOffs#57 + 1;

        $i18 = i#22 + 6;

        $i19 = input[$i18];

        $i20 = i#22 + 7;

        $i21 = input[$i20];

        $i22 = $i19 + $i21;

        $i23 = $i22 >> 1;

        output[oOffs#57] = $i23;

        i#22 = i#22 + 8;

        goto label2;

     label3:
        iOffs#3 = iOffs#3 + st;

        j#15 = j#15 + -1;

        goto label1;

     label4:
        goto label9;

     label5:
        j#91 = this.<kanzi.util.sampling.BilinearDownSampler: int height>;

     label6:
        if j#91 <= 0 goto label9;

        end#96 = iOffs#3 + w;

        i#98 = iOffs#3;

     label7:
        if i#98 >= end#96 goto label8;

        oOffs#103 = oOffs#5 + 1;

        $i24 = input[i#98];

        $i25 = i#98 + 1;

        $i26 = input[$i25];

        $i27 = $i24 + $i26;

        $i28 = i#98 + 2;

        $i29 = input[$i28];

        $i30 = $i27 + $i29;

        $i31 = i#98 + 3;

        $i32 = input[$i31];

        $i33 = $i30 + $i32;

        $i34 = $i33 + 2;

        $i35 = $i34 >> 2;

        output[oOffs#5] = $i35;

        oOffs#5 = oOffs#103 + 1;

        $i36 = i#98 + 4;

        $i37 = input[$i36];

        $i38 = i#98 + 5;

        $i39 = input[$i38];

        $i40 = $i37 + $i39;

        $i41 = i#98 + 6;

        $i42 = input[$i41];

        $i43 = $i40 + $i42;

        $i44 = i#98 + 7;

        $i45 = input[$i44];

        $i46 = $i43 + $i45;

        $i47 = $i46 + 2;

        $i48 = $i47 >> 2;

        output[oOffs#103] = $i48;

        i#98 = i#98 + 8;

        goto label7;

     label8:
        iOffs#3 = iOffs#3 + st;

        j#91 = j#91 + -1;

        goto label6;

     label9:
        return;
    }


