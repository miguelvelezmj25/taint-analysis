    void <init>(at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm, int, int, at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$1)
    {
        at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$MultiStepLanczos3RescaleOp this;
        at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm x0;
        int x1, x2;
        at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$1 x3;

        this := @this: at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$MultiStepLanczos3RescaleOp;

        x0 := @parameter0: at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm;

        x1 := @parameter1: int;

        x2 := @parameter2: int;

        x3 := @parameter3: at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$1;

        specialinvoke this.<at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$MultiStepLanczos3RescaleOp: void <init>(at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm,int,int)>(x0, x1, x2);

        return;
    }

    private void <init>(at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm, int, int)
    {
        at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$MultiStepLanczos3RescaleOp this;
        at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm l1;
        int dstWidth, dstHeight;
        com.mortennobel.imagescaling.DimensionConstrain $r0;

        this := @this: at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$MultiStepLanczos3RescaleOp;

        l1 := @parameter0: at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm;

        dstWidth := @parameter1: int;

        dstHeight := @parameter2: int;

        this.<at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm$MultiStepLanczos3RescaleOp: at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm this$0> = l1;

        $r0 = staticinvoke <com.mortennobel.imagescaling.DimensionConstrain: com.mortennobel.imagescaling.DimensionConstrain createAbsolutionDimension(int,int)>(dstWidth, dstHeight);

        specialinvoke this.<com.mortennobel.imagescaling.AdvancedResizeOp: void <init>(com.mortennobel.imagescaling.DimensionConstrain)>($r0);

        return;
    }


