    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.io.File $r1;
        persist.gettingStarted.MyDbEnv $r2;

        $r0 = class "persist/gettingStarted/ExampleInventoryRead";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <persist.gettingStarted.ExampleInventoryRead: boolean $assertionsDisabled> = $z1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/berkeley-db/env");

        <persist.gettingStarted.ExampleInventoryRead: java.io.File myDbEnvPath> = $r1;

        $r2 = new persist.gettingStarted.MyDbEnv;

        specialinvoke $r2.<persist.gettingStarted.MyDbEnv: void <init>()>();

        <persist.gettingStarted.ExampleInventoryRead: persist.gettingStarted.MyDbEnv myDbEnv> = $r2;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        persist.gettingStarted.ExampleInventoryRead eir, $r0;
        com.sleepycat.je.DatabaseException dbe, $r2;
        java.lang.Throwable l3, $r10;
        persist.gettingStarted.MyDbEnv $r1, $r9, $r11;
        java.io.PrintStream $r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $r0 = new persist.gettingStarted.ExampleInventoryRead;

        specialinvoke $r0.<persist.gettingStarted.ExampleInventoryRead: void <init>()>();

        eir = $r0;

     label1:
        specialinvoke eir.<persist.gettingStarted.ExampleInventoryRead: void run(java.lang.String[])>(args);

     label2:
        $r1 = <persist.gettingStarted.ExampleInventoryRead: persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r1.<persist.gettingStarted.MyDbEnv: void close()>();

        goto label7;

     label3:
        $r2 := @caughtexception;

     label4:
        dbe = $r2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExampleInventoryRead: ");

        $r6 = virtualinvoke dbe.<com.sleepycat.je.DatabaseException: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke dbe.<com.sleepycat.je.DatabaseException: void printStackTrace()>();

     label5:
        $r9 = <persist.gettingStarted.ExampleInventoryRead: persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r9.<persist.gettingStarted.MyDbEnv: void close()>();

        goto label7;

     label6:
        $r10 := @caughtexception;

        l3 = $r10;

        $r11 = <persist.gettingStarted.ExampleInventoryRead: persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r11.<persist.gettingStarted.MyDbEnv: void close()>();

        throw l3;

     label7:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("All done.");

        return;

        catch com.sleepycat.je.DatabaseException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void <init>()
    {
        persist.gettingStarted.ExampleInventoryRead this;

        this := @this: persist.gettingStarted.ExampleInventoryRead;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private void run(java.lang.String[]) throws com.sleepycat.je.DatabaseException
    {
        persist.gettingStarted.ExampleInventoryRead this;
        java.lang.String[] args;
        boolean allowCreate#3, $z0, $z1, $z2, allowCreate#11;
        java.lang.String $r0;
        java.lang.Boolean $r1;

        this := @this: persist.gettingStarted.ExampleInventoryRead;

        args := @parameter0: java.lang.String[];

        staticinvoke <persist.gettingStarted.ExampleInventoryRead: void parseArgs(java.lang.String[])>(args);

        allowCreate#3 = 0;

        $r0 = args[0];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionALLOWCREATE(boolean)>($z0);

        <persist.gettingStarted.ExampleInventoryRead: boolean ALLOWCREATE> = $z1;

        $z2 = <persist.gettingStarted.ExampleInventoryRead: boolean ALLOWCREATE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label1;

        allowCreate#11 = 1;

     label1:
        return;
    }

    private static void parseArgs(java.lang.String[])
    {
        java.lang.String[] args;
        int i#2, $i0;
        java.lang.String $r0, $r1, $r3, $r4;
        boolean $z0;
        char $c1;
        java.io.File $r2;

        args := @parameter0: java.lang.String[];

        i#2 = 0;

     label1:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#2 >= $i0 goto label6;

        $r0 = args[i#2];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label5;

        $r1 = args[i#2];

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c1);

        lookupswitch($c1)
        {
            case 104: goto label2;
            case 115: goto label3;
            default: goto label4;
        };

     label2:
        $r2 = new java.io.File;

        i#2 = i#2 + 1;

        $r3 = args[i#2];

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        <persist.gettingStarted.ExampleInventoryRead: java.io.File myDbEnvPath> = $r2;

        goto label5;

     label3:
        i#2 = i#2 + 1;

        $r4 = args[i#2];

        <persist.gettingStarted.ExampleInventoryRead: java.lang.String locateItem> = $r4;

        goto label5;

     label4:
        staticinvoke <persist.gettingStarted.ExampleInventoryRead: void usage()>();

     label5:
        i#2 = i#2 + 1;

        goto label1;

     label6:
        return;
    }

    private static void usage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("ExampleInventoryRead [-h <env directory>][-s <item to locate>]");

        staticinvoke <java.lang.System: void exit(int)>(-1);

        return;
    }


