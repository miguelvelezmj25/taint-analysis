digraph <init> {
"this := @this: com.sleepycat.je.LockTimeoutException {1954575842}" -> "locker := @parameter0: com.sleepycat.je.txn.Locker {1403392031}";
"locker := @parameter0: com.sleepycat.je.txn.Locker {1403392031}" -> "message := @parameter1: java.lang.String {1795793229}";
"message := @parameter1: java.lang.String {1795793229}" -> "specialinvoke this.<com.sleepycat.je.LockConflictException: void <init>(com.sleepycat.je.txn.Locker,java.lang.String)>(locker, message) {1544799263}";
"specialinvoke this.<com.sleepycat.je.LockConflictException: void <init>(com.sleepycat.je.txn.Locker,java.lang.String)>(locker, message) {1544799263}" -> "return {1325745365}";
}

digraph wrapSelf {
"this := @this: com.sleepycat.je.LockTimeoutException {620842911}" -> "msg := @parameter0: java.lang.String {1400943704}";
"msg := @parameter0: java.lang.String {1400943704}" -> "$r0 = new com.sleepycat.je.LockTimeoutException {185779148}";
"$r0 = new com.sleepycat.je.LockTimeoutException {185779148}" -> "specialinvoke $r0.<com.sleepycat.je.LockTimeoutException: void <init>(java.lang.String,com.sleepycat.je.LockTimeoutException)>(msg, this) {868801264}";
"specialinvoke $r0.<com.sleepycat.je.LockTimeoutException: void <init>(java.lang.String,com.sleepycat.je.LockTimeoutException)>(msg, this) {868801264}" -> "return $r0 {331556334}";
}

digraph <init> {
"this := @this: com.sleepycat.je.LockTimeoutException {1776675818}" -> "message := @parameter0: java.lang.String {992905963}";
"message := @parameter0: java.lang.String {992905963}" -> "cause := @parameter1: com.sleepycat.je.LockTimeoutException {290887729}";
"cause := @parameter1: com.sleepycat.je.LockTimeoutException {290887729}" -> "specialinvoke this.<com.sleepycat.je.LockConflictException: void <init>(java.lang.String,com.sleepycat.je.OperationFailureException)>(message, cause) {1796053976}";
"specialinvoke this.<com.sleepycat.je.LockConflictException: void <init>(java.lang.String,com.sleepycat.je.OperationFailureException)>(message, cause) {1796053976}" -> "return {1209523957}";
}


