    void <init>(java.lang.String, int, java.lang.String)
    {
        weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$2 this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$2;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction: void <init>(java.lang.String,int,java.lang.String,weka.classifiers.pmml.consumer.GeneralRegression$1)>(l1, l2, name, null);

        return;
    }

    double eval(double, double, double, double, double)
    {
        weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$2 this;
        double value, offset, trials, distParam, linkParam, $d0, $d1, $d2, $d3, $d4, $d5;

        this := @this: weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$2;

        value := @parameter0: double;

        offset := @parameter1: double;

        trials := @parameter2: double;

        distParam := @parameter3: double;

        linkParam := @parameter4: double;

        $d0 = value + offset;

        $d1 = staticinvoke <java.lang.Math: double exp(double)>($d0);

        $d2 = neg $d1;

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        $d4 = 1.0 - $d3;

        $d5 = $d4 * trials;

        return $d5;
    }


