digraph writeCRC32 {
"out := @parameter0: java.io.OutputStream {374971187}" -> "buf := @parameter1: byte[] {525196920}";
"buf := @parameter1: byte[] {525196920}" -> "$r0 = new java.util.zip.CRC32 {1626494017}";
"$r0 = new java.util.zip.CRC32 {1626494017}" -> "specialinvoke $r0.<java.util.zip.CRC32: void <init>()>() {240523739}";
"specialinvoke $r0.<java.util.zip.CRC32: void <init>()>() {240523739}" -> "crc32 = $r0 {480922428}";
"crc32 = $r0 {480922428}" -> "virtualinvoke crc32.<java.util.zip.CRC32: void update(byte[])>(buf) {312041974}";
"virtualinvoke crc32.<java.util.zip.CRC32: void update(byte[])>(buf) {312041974}" -> "value = virtualinvoke crc32.<java.util.zip.CRC32: long getValue()>() {158979752}";
"value = virtualinvoke crc32.<java.util.zip.CRC32: long getValue()>() {158979752}" -> "i#8 = 0 {804927462}";
"i#8 = 0 {804927462}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {740058581}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {740058581}" -> "if i#8 >= 4 goto return {1058878084}";
"if i#8 >= 4 goto return {1058878084}" -> "$i0 = i#8 * 8 {744830242}";
"if i#8 >= 4 goto return {1058878084}" -> "return {759948768}";
"$i0 = i#8 * 8 {744830242}" -> "$l1 = value >>> $i0 {828031951}";
"$l1 = value >>> $i0 {828031951}" -> "$i2 = (int) $l1 {472920784}";
"$i2 = (int) $l1 {472920784}" -> "$b3 = (byte) $i2 {908742614}";
"$b3 = (byte) $i2 {908742614}" -> "virtualinvoke out.<java.io.OutputStream: void write(int)>($b3) {862167060}";
"virtualinvoke out.<java.io.OutputStream: void write(int)>($b3) {862167060}" -> "i#8 = i#8 + 1 {1413499148}";
"i#8 = i#8 + 1 {1413499148}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {1232816102}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {1232816102}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {740058581}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {740058581}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph encodeVLI {
"out := @parameter0: java.io.OutputStream {1803843525}" -> "num#1 := @parameter1: long {1155522711}";
"num#1 := @parameter1: long {1155522711}" -> "$b0 = num#1 cmp 128L {48417367}";
"$b0 = num#1 cmp 128L {48417367}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {1383855304}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {1383855304}" -> "if $b0 < 0 goto $i4 = (int) num#1 {644532055}";
"if $b0 < 0 goto $i4 = (int) num#1 {644532055}" -> "$l1 = num#1 | 128L {1233209238}";
"if $b0 < 0 goto $i4 = (int) num#1 {644532055}" -> "$i4 = (int) num#1 {397035918}";
"$l1 = num#1 | 128L {1233209238}" -> "$i2 = (int) $l1 {151713052}";
"$i2 = (int) $l1 {151713052}" -> "$b3 = (byte) $i2 {941899056}";
"$b3 = (byte) $i2 {941899056}" -> "virtualinvoke out.<java.io.OutputStream: void write(int)>($b3) {564127245}";
"virtualinvoke out.<java.io.OutputStream: void write(int)>($b3) {564127245}" -> "num#1 = num#1 >>> 7 {2067288382}";
"num#1 = num#1 >>> 7 {2067288382}" -> "goto [?= $b0 = num#1 cmp 128L] {343162198}";
"goto [?= $b0 = num#1 cmp 128L] {343162198}" -> "$b0 = num#1 cmp 128L {48417367}";
"$i4 = (int) num#1 {397035918}" -> "$b5 = (byte) $i4 {570509472}";
"$b5 = (byte) $i4 {570509472}" -> "virtualinvoke out.<java.io.OutputStream: void write(int)>($b5) {1225248896}";
"virtualinvoke out.<java.io.OutputStream: void write(int)>($b5) {1225248896}" -> "return {1979677073}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {1383855304}"[fontcolor="blue", penwidth=3, color="blue"];
}


