    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/log/FileReader";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.log.FileReader: boolean $assertionsDisabled> = $z1;

        return;
    }

    public boolean readNextEntry()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        boolean $z0;
        java.io.FileNotFoundException $r0, e#4;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r1, $r5;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2, $r6;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r3, $r7;
        berkeley.com.sleepycat.je.log.ChecksumException $r4, e#12;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

     label1:
        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: boolean readNextEntryAllowExceptions()>();

     label2:
        return $z0;

     label3:
        $r0 := @caughtexception;

        e#4 = $r0;

        $r1 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r3 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_FILE_NOT_FOUND>;

        specialinvoke $r1.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r2, $r3, e#4);

        throw $r1;

     label4:
        $r4 := @caughtexception;

        e#12 = $r4;

        $r5 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r6 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r7 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_CHECKSUM>;

        specialinvoke $r5.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r6, $r7, e#12);

        throw $r5;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch berkeley.com.sleepycat.je.log.ChecksumException from label1 to label2 with label4;
    }

    public long getLastLsn()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0;
        long $l0, $l1, $l2;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l1 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset>;

        $l2 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>($l0, $l1);

        return $l2;
    }

    public int getLastEntrySize()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getEntrySize()>();

        return $i0;
    }

    public long getNRepeatIteratorReads()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long getNRepeatIteratorReads()>();

        return $l0;
    }

    public final boolean readNextEntryAllowExceptions() throws java.io.FileNotFoundException, berkeley.com.sleepycat.je.log.ChecksumException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        long savedCurrentEntryOffset, savedNextEntryOffset, $l0, $l1, $l5, $l6;
        int optionalPortionLen, $i2, $i3, $i4, $i7, $i8, $i9;
        boolean isTarget, isChecksumTarget, collectData, foundEntry#2, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Throwable e, $r8;
        java.nio.ByteBuffer dataBuffer#15, dataBuffer#76;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r1, $r2, $r4, $r5, $r6, $r7;
        berkeley.com.sleepycat.je.log.FileReader$EOFException $r10, e#102;
        berkeley.com.sleepycat.je.DatabaseException $r11, e#106;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        foundEntry#2 = 0;

        savedCurrentEntryOffset = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset>;

        savedNextEntryOffset = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

     label01:
        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean eof>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label18;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(foundEntry#2);

        if foundEntry#2 != 0 goto label18;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void getLogEntryInReadBuffer()>();

        dataBuffer#15 = specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer readData(int,boolean)>(14, 1);

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void readBasicHeader(java.nio.ByteBuffer)>(dataBuffer#15);

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isVariableLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void startChecksum(java.nio.ByteBuffer)>(dataBuffer#15);

        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        optionalPortionLen = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getVariablePortionSize()>();

        dataBuffer#15 = specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer readData(int,boolean)>(optionalPortionLen, 1);

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void addToChecksum(java.nio.ByteBuffer,int)>(dataBuffer#15, optionalPortionLen);

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: void readVariablePortion(java.nio.ByteBuffer)>(dataBuffer#15);

     label02:
        $z2 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean forward>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label03;

        $l0 = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset> = $l0;

        $l1 = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

        $r4 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i2 = virtualinvoke $r4.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $r5 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i3 = virtualinvoke $r5.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i4 = $i2 + $i3;

        $l5 = (long) $i4;

        $l6 = $l1 + $l5;

        this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset> = $l6;

     label03:
        isTarget = virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: boolean isTargetEntry()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isTarget);

        if isTarget != 0 goto label04;

        $z3 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean alwaysValidateChecksum>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label05;

     label04:
        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        isChecksumTarget = $z4;

        $r6 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z5 = virtualinvoke $r6.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isVariableLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label07;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void startChecksum(java.nio.ByteBuffer,boolean)>(dataBuffer#15, isChecksumTarget);

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isChecksumTarget);

        if isChecksumTarget == 0 goto label08;

        $z6 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean doChecksumOnRead>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label09;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isTarget);

        if isTarget == 0 goto label10;

     label09:
        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        collectData = $z7;

        $r7 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i7 = virtualinvoke $r7.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        dataBuffer#76 = specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer readData(int,boolean)>($i7, collectData);

     label12:
        goto label15;

     label13:
        $r8 := @caughtexception;

        e = $r8;

        $z8 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean forward>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label14;

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset> = savedCurrentEntryOffset;

        this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset> = savedNextEntryOffset;

     label14:
        throw e;

     label15:
        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void validateChecksum(java.nio.ByteBuffer,boolean)>(dataBuffer#76, isChecksumTarget);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isTarget);

        if isTarget == 0 goto label16;

        $z9 = virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: boolean processEntry(java.nio.ByteBuffer)>(dataBuffer#76);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label17;

        foundEntry#2 = 1;

        $i8 = this.<berkeley.com.sleepycat.je.log.FileReader: int nRead>;

        $i9 = $i8 + 1;

        this.<berkeley.com.sleepycat.je.log.FileReader: int nRead> = $i9;

        goto label17;

     label16:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(collectData);

        if collectData == 0 goto label17;

        virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void skipEntry(java.nio.ByteBuffer)>(dataBuffer#76);

     label17:
        goto label01;

     label18:
        goto label21;

     label19:
        $r10 := @caughtexception;

        e#102 = $r10;

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean eof> = 1;

        goto label21;

     label20:
        $r11 := @caughtexception;

        e#106 = $r11;

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean eof> = 1;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void reportProblem(java.lang.Exception)>(e#106);

        throw e#106;

     label21:
        return foundEntry#2;

        catch java.lang.Throwable from label03 to label12 with label13;
        catch berkeley.com.sleepycat.je.log.FileReader$EOFException from label01 to label18 with label19;
        catch berkeley.com.sleepycat.je.DatabaseException from label01 to label18 with label20;
    }

    private void getLogEntryInReadBuffer() throws berkeley.com.sleepycat.je.log.ChecksumException, berkeley.com.sleepycat.je.log.FileReader$EOFException, java.io.FileNotFoundException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean forward>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void setForwardPosition()>();

        goto label2;

     label1:
        virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void setBackwardPosition()>();

     label2:
        return;
    }

    private java.nio.ByteBuffer readData(int, boolean) throws berkeley.com.sleepycat.je.log.ChecksumException, berkeley.com.sleepycat.je.log.FileReader$EOFException, java.io.FileNotFoundException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        int amountToRead, bytesNeeded, positionIncrement, alreadyRead#2, $i0, $i1, $i2;
        boolean collectData, $z0, $z1, $z2, $z3;
        java.nio.ByteBuffer completeBuffer#4, $r0, $r4, $r11;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        amountToRead := @parameter0: int;

        collectData := @parameter1: boolean;

        alreadyRead#2 = 0;

        completeBuffer#4 = null;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(alreadyRead#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(amountToRead);

        if alreadyRead#2 >= amountToRead goto label9;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean eof>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label9;

        bytesNeeded = amountToRead - alreadyRead#2;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $z1 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: boolean hasRemaining()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(collectData);

        if collectData == 0 goto label4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(alreadyRead#2);

        if alreadyRead#2 > 0 goto label2;

        $r3 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i0 = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int remaining()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytesNeeded);

        if $i0 >= bytesNeeded goto label3;

     label2:
        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void copyToSaveBuffer(int)>(bytesNeeded);

        $r4 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        alreadyRead#2 = virtualinvoke $r4.<java.nio.ByteBuffer: int position()>();

        completeBuffer#4 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        goto label8;

     label3:
        $r5 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        completeBuffer#4 = virtualinvoke $r5.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: java.nio.ByteBuffer getBuffer()>();

        alreadyRead#2 = amountToRead;

        goto label8;

     label4:
        $r6 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i1 = virtualinvoke $r6.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int remaining()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytesNeeded);

        if $i1 <= bytesNeeded goto label5;

        $i2 = bytesNeeded;

        goto label6;

     label5:
        $r7 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i2 = virtualinvoke $r7.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int remaining()>();

     label6:
        positionIncrement = $i2;

        alreadyRead#2 = alreadyRead#2 + positionIncrement;

        $r8 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        virtualinvoke $r8.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void incrementBufferPosition(int)>(positionIncrement);

        $r9 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        completeBuffer#4 = virtualinvoke $r9.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: java.nio.ByteBuffer getBuffer()>();

        goto label8;

     label7:
        $r10 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $z2 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean singleFile>;

        $z3 = virtualinvoke $r10.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: boolean fillNext(boolean,int)>($z2, bytesNeeded);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label8;

        this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset> = 0L;

     label8:
        goto label1;

     label9:
        $r11 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        return completeBuffer#4;
    }

    private void readBasicHeader(java.nio.ByteBuffer) throws berkeley.com.sleepycat.je.log.ChecksumException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.nio.ByteBuffer dataBuffer;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r3;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r1, $r2;
        int $i0;
        long $l1, $l2;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        dataBuffer := @parameter0: java.nio.ByteBuffer;

        $r0 = new berkeley.com.sleepycat.je.log.LogEntryHeader;

        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i0 = staticinvoke <berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int access$000(berkeley.com.sleepycat.je.log.FileReader$ReadWindow)>($r1);

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l1 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long getCurrentLsn()>();

        specialinvoke $r0.<berkeley.com.sleepycat.je.log.LogEntryHeader: void <init>(java.nio.ByteBuffer,int,long)>(dataBuffer, $i0, $l1);

        this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader> = $r0;

        $r3 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $l2 = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.LogEntryHeader: long getPrevOffset()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset> = $l2;

        return;
    }

    private void startChecksum(java.nio.ByteBuffer) throws berkeley.com.sleepycat.je.log.ChecksumException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.nio.ByteBuffer dataBuffer;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        dataBuffer := @parameter0: java.nio.ByteBuffer;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void startChecksum(java.nio.ByteBuffer,boolean)>(dataBuffer, 1);

        return;
    }

    private void addToChecksum(java.nio.ByteBuffer, int) throws berkeley.com.sleepycat.je.log.ChecksumException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.nio.ByteBuffer dataBuffer;
        int length;
        boolean $z0;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        dataBuffer := @parameter0: java.nio.ByteBuffer;

        length := @parameter1: int;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean doChecksumOnRead>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.ChecksumValidator cksumValidator>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(java.nio.ByteBuffer,int)>(dataBuffer, length);

        return;
    }

    private void startChecksum(java.nio.ByteBuffer, boolean) throws berkeley.com.sleepycat.je.log.ChecksumException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.nio.ByteBuffer dataBuffer;
        boolean isChecksumTarget, $z0, $z1;
        int originalPosition, headerSizeMinusChecksum, entryTypeStart, $i0;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r0, $r4;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r1, $r2;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        dataBuffer := @parameter0: java.nio.ByteBuffer;

        isChecksumTarget := @parameter1: boolean;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean doChecksumOnRead>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isChecksumTarget);

        if isChecksumTarget != 0 goto label2;

        return;

     label2:
        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.ChecksumValidator cksumValidator>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.log.ChecksumValidator: void reset()>();

        originalPosition = virtualinvoke dataBuffer.<java.nio.ByteBuffer: int position()>();

        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z1 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isInvisible()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        $i0 = originalPosition - 14;

        staticinvoke <berkeley.com.sleepycat.je.log.LogEntryHeader: void turnOffInvisible(java.nio.ByteBuffer,int)>(dataBuffer, $i0);

     label3:
        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        headerSizeMinusChecksum = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getInvariantSizeMinusChecksum()>();

        entryTypeStart = originalPosition - headerSizeMinusChecksum;

        virtualinvoke dataBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(entryTypeStart);

        $r4 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.ChecksumValidator cksumValidator>;

        virtualinvoke $r4.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(java.nio.ByteBuffer,int)>(dataBuffer, headerSizeMinusChecksum);

        virtualinvoke dataBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(originalPosition);

        return;
    }

    private void validateChecksum(java.nio.ByteBuffer, boolean) throws berkeley.com.sleepycat.je.log.ChecksumException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.nio.ByteBuffer dataBuffer;
        boolean isChecksumTarget, $z0;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r0, $r2;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r1, $r3;
        int $i0;
        long $l1, $l2, $l3;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r4;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        dataBuffer := @parameter0: java.nio.ByteBuffer;

        isChecksumTarget := @parameter1: boolean;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean doChecksumOnRead>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isChecksumTarget);

        if isChecksumTarget != 0 goto label2;

        return;

     label2:
        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.ChecksumValidator cksumValidator>;

        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        virtualinvoke $r0.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(java.nio.ByteBuffer,int)>(dataBuffer, $i0);

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.ChecksumValidator cksumValidator>;

        $r3 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $l1 = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.LogEntryHeader: long getChecksum()>();

        $r4 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l2 = virtualinvoke $r4.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l3 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset>;

        virtualinvoke $r2.<berkeley.com.sleepycat.je.log.ChecksumValidator: void validate(long,long,long)>($l1, $l2, $l3);

        return;
    }

    protected void skipEntry(java.nio.ByteBuffer)
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.nio.ByteBuffer entryBuffer;
        int $i0, $i1, $i2;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i2 = $i0 + $i1;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        return;
    }

    private void reportProblem(java.lang.Exception)
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        java.lang.Exception e;
        java.lang.StringBuilder sb, $r0, $r1, $r4, $r5, $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29;
        berkeley.com.sleepycat.je.log.LogEntryType problemType;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r2;
        long $l0, $l1, $l2, $l3, $l7, $l9, $l11, $l12, $l14, $l15;
        java.lang.String $r3, $r6, $r11, $r24, $r32, $r35;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r13, $r14, $r18, $r21, $r27, $r30, $r31;
        byte $b4, $b5;
        int $i6, $i8, $i10, $i13;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r34;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        e := @parameter0: java.lang.Exception;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        sb = $r0;

        $r1 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Halted log file reading at file 0x");

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l0 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset 0x");

        $l1 = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset(decimal)=");

        $l2 = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prev=0x");

        $l3 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r13);

        if $r13 == null goto label1;

        $r14 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $b4 = virtualinvoke $r14.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        problemType = staticinvoke <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType findType(byte)>($b4);

        $r15 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\nentry=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(problemType);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=");

        $r18 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $b5 = virtualinvoke $r18.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",version=");

        $r21 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i6 = virtualinvoke $r21.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getVersion()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\nprev=0x");

        $l7 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        $r24 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l7);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nsize=");

        $r27 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i8 = virtualinvoke $r27.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nNext entry should be at 0x");

        $l9 = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

        $r30 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i10 = virtualinvoke $r30.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $l11 = (long) $i10;

        $l12 = $l9 + $l11;

        $r31 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i13 = virtualinvoke $r31.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $l14 = (long) $i13;

        $l15 = $l12 + $l14;

        $r32 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l15);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

     label1:
        $r34 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r35 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void traceAndLogException(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r34, "FileReader", "readNextEntry", $r35, e);

        return;
    }

    private void copyToSaveBuffer(int)
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        int bytesNeeded, $i0, bytesFromThisBuffer#6, $i1, $i2, $i3, $i4, $i5;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0, $r1, $r9, $r14;
        java.nio.ByteBuffer $r2, $r3, $r4, temp#24, $r5, $r7, $r10, temp#38, $r12;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        bytesNeeded := @parameter0: int;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int remaining()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytesNeeded);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if bytesNeeded > $i0 goto label1;

        bytesFromThisBuffer#6 = bytesNeeded;

        goto label2;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        bytesFromThisBuffer#6 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int remaining()>();

     label2:
        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int capacity()>();

        $r3 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        $i2 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i3 = $i1 - $i2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytesFromThisBuffer#6);

        if $i3 >= bytesFromThisBuffer#6 goto label3;

        $r4 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        $i4 = virtualinvoke $r4.<java.nio.ByteBuffer: int capacity()>();

        $i5 = $i4 + bytesFromThisBuffer#6;

        temp#24 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i5);

        $r5 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r7 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        virtualinvoke temp#24.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r7);

        this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer> = temp#24;

     label3:
        $r9 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $r10 = virtualinvoke $r9.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: java.nio.ByteBuffer getBuffer()>();

        temp#38 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        virtualinvoke temp#38.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(bytesFromThisBuffer#6);

        $r12 = this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer>;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(temp#38);

        $r14 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        virtualinvoke $r14.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void incrementBufferPosition(int)>(bytesFromThisBuffer#6);

        return;
    }

    protected void setForwardPosition() throws berkeley.com.sleepycat.je.log.FileReader$EOFException, berkeley.com.sleepycat.je.DatabaseException, berkeley.com.sleepycat.je.log.ChecksumException, java.io.FileNotFoundException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        long nextLsn, $l0, $l2, $l3, $l4;
        byte $b1;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0;
        int $i5;
        berkeley.com.sleepycat.je.log.FileReader$EOFException $r1;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $b1 = $l0 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l2 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l3 = this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset>;

        nextLsn = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>($l2, $l3);

        $l4 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $i5 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(nextLsn, $l4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 < 0 goto label1;

        $r1 = new berkeley.com.sleepycat.je.log.FileReader$EOFException;

        specialinvoke $r1.<berkeley.com.sleepycat.je.log.FileReader$EOFException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    protected void setBackwardPosition() throws berkeley.com.sleepycat.je.log.ChecksumException, java.io.FileNotFoundException, berkeley.com.sleepycat.je.log.FileReader$EOFException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        long nextLsn, newPosition, nextLsn, $l0, $l2, $l3, $l4, $l5, $l7, $l9, $l10, $l11, $l13, $l14, $l15, $l16, $l17, $l19, $l20, $l21, $l23, $l24, $l25, $l26, $l27, $l29, nextFile#115, nextWindowStart#118, nextTarget#121, $l30, $l31, $l32, $l34, $l36, $l38, $l40, $l41, $l42, $l44, $l46, $l47;
        java.lang.Long prevFileNum;
        byte $b1, $b6, $b12, $b18, $b22, $b28, $b35, $b39, $b43;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0, $r1, $r11, $r13, $r15, $r19, $r31, $r32, $r33, $r34, $r35, $r45;
        boolean $z0, $z1;
        int $i8, $i33, $i37, $i45;
        berkeley.com.sleepycat.je.log.FileReader$EOFException $r2, $r16, $r22, $r36;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r17, $r18, $r20, $r23, $r24, $r26, $r27, $r29, $r37, $r38, $r40, $r41, $r43;
        java.lang.String $r5, $r8, $r10, $r21, $r25, $r28, $r30, $r39, $r42, $r44;
        berkeley.com.sleepycat.je.log.FileManager $r12, $r14;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        $b1 = $l0 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 0 goto label02;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l2 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: boolean containsOffset(long)>($l2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l3 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l4 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        nextLsn = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>($l3, $l4);

        $l5 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $b6 = $l5 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 == 0 goto label01;

        $l7 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $i8 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(nextLsn, $l7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        if $i8 != -1 goto label01;

        $r2 = new berkeley.com.sleepycat.je.log.FileReader$EOFException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finish=");

        $l9 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $r5 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l9);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("next=");

        $r8 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(nextLsn);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<berkeley.com.sleepycat.je.log.FileReader$EOFException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label01:
        $r11 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l10 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        virtualinvoke $r11.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void positionBuffer(long)>($l10);

        goto label12;

     label02:
        $l11 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        $b12 = $l11 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b12);

        if $b12 != 0 goto label06;

        $r12 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileManager fileManager>;

        $r13 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l13 = virtualinvoke $r13.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l14 = virtualinvoke $r12.<berkeley.com.sleepycat.je.log.FileManager: long getFileHeaderPrevOffset(long)>($l13);

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset> = $l14;

        $r14 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileManager fileManager>;

        $r15 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l15 = virtualinvoke $r15.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        prevFileNum = virtualinvoke $r14.<berkeley.com.sleepycat.je.log.FileManager: java.lang.Long getFollowingFileNum(long,boolean)>($l15, 0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(prevFileNum);

        if prevFileNum != null goto label03;

        $r16 = new berkeley.com.sleepycat.je.log.FileReader$EOFException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No file following ");

        $r19 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l16 = virtualinvoke $r19.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<berkeley.com.sleepycat.je.log.FileReader$EOFException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label03:
        $l17 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $b18 = $l17 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b18);

        if $b18 == 0 goto label04;

        $l19 = virtualinvoke prevFileNum.<java.lang.Long: long longValue()>();

        $l20 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $l21 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l20);

        $b22 = $l19 cmp $l21;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b22);

        if $b22 >= 0 goto label04;

        $r22 = new berkeley.com.sleepycat.je.log.FileReader$EOFException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finish=");

        $l23 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $r25 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l23);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextFile=0x");

        $l24 = virtualinvoke prevFileNum.<java.lang.Long: long longValue()>();

        $r28 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l24);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<berkeley.com.sleepycat.je.log.FileReader$EOFException: void <init>(java.lang.String)>($r30);

        throw $r22;

     label04:
        $r31 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l25 = virtualinvoke $r31.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l26 = virtualinvoke prevFileNum.<java.lang.Long: long longValue()>();

        $l27 = $l25 - $l26;

        $b28 = $l27 cmp 1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b28);

        if $b28 == 0 goto label05;

        $l29 = virtualinvoke prevFileNum.<java.lang.Long: long longValue()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void handleGapInBackwardsScan(long)>($l29);

     label05:
        nextFile#115 = virtualinvoke prevFileNum.<java.lang.Long: long longValue()>();

        nextWindowStart#118 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        nextTarget#121 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        goto label10;

     label06:
        $l30 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset>;

        $l31 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        $l32 = $l30 - $l31;

        $r32 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i33 = virtualinvoke $r32.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int capacity()>();

        $l34 = (long) $i33;

        $b35 = $l32 cmp $l34;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b35);

        if $b35 <= 0 goto label07;

        $r33 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        nextFile#115 = virtualinvoke $r33.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        nextWindowStart#118 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        nextTarget#121 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        goto label10;

     label07:
        $r34 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        nextFile#115 = virtualinvoke $r34.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $l36 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset>;

        $r35 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i37 = virtualinvoke $r35.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int capacity()>();

        $l38 = (long) $i37;

        newPosition = $l36 - $l38;

        $b39 = newPosition cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b39);

        if $b39 >= 0 goto label08;

        $l40 = 0L;

        goto label09;

     label08:
        $l40 = newPosition;

     label09:
        nextWindowStart#118 = $l40;

        nextTarget#121 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

     label10:
        $l41 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        nextLsn = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>(nextFile#115, $l41);

        $l42 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $b43 = $l42 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b43);

        if $b43 == 0 goto label11;

        $l44 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $i45 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(nextLsn, $l44);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i45);

        if $i45 != -1 goto label11;

        $r36 = new berkeley.com.sleepycat.je.log.FileReader$EOFException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finish=");

        $l46 = this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn>;

        $r39 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l46);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" next=");

        $r42 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(nextLsn);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<berkeley.com.sleepycat.je.log.FileReader$EOFException: void <init>(java.lang.String)>($r44);

        throw $r36;

     label11:
        $r45 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $z1 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean forward>;

        virtualinvoke $r45.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void slideAndFill(long,long,long,boolean)>(nextFile#115, nextWindowStart#118, nextTarget#121, $z1);

     label12:
        $l47 = this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset>;

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset> = $l47;

        return;
    }

    protected void handleGapInBackwardsScan(long)
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        long prevFileNum, $l0;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r5;
        java.lang.String $r9;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        prevFileNum := @parameter0: long;

        $r0 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r1 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read backward over cleaned file from ");

        $r5 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l0 = virtualinvoke $r5.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long currentFileNum()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(prevFileNum);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r2, $r1, $r9);

        throw $r0;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, int, boolean, long, java.lang.Long, long, long) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        int readBufferSize;
        boolean forward, $z0, $z1, $z2;
        long startLsn, endOfFileLsn, finishLsn;
        java.lang.Long singleFileNumber;
        berkeley.com.sleepycat.je.log.FileManager $r0;
        berkeley.com.sleepycat.je.log.LogManager $r2;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r3;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r4;
        java.nio.ByteBuffer $r5;
        java.util.logging.Logger $r6;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        readBufferSize := @parameter1: int;

        forward := @parameter2: boolean;

        startLsn := @parameter3: long;

        singleFileNumber := @parameter4: java.lang.Long;

        endOfFileLsn := @parameter5: long;

        finishLsn := @parameter6: long;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        $r0 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileManager fileManager> = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(singleFileNumber);

        if singleFileNumber == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        this.<berkeley.com.sleepycat.je.log.FileReader: boolean singleFile> = $z0;

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean forward> = forward;

        $r2 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.LogManager getLogManager()>();

        $z1 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogManager: boolean getChecksumOnRead()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean doChecksumOnRead> = $z1;

        $z2 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean doChecksumOnRead>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r3 = new berkeley.com.sleepycat.je.log.ChecksumValidator;

        specialinvoke $r3.<berkeley.com.sleepycat.je.log.ChecksumValidator: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.ChecksumValidator cksumValidator> = $r3;

     label3:
        $r4 = virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow makeWindow(int)>(readBufferSize);

        this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window> = $r4;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(readBufferSize);

        this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer saveBuffer> = $r5;

        this.<berkeley.com.sleepycat.je.log.FileReader: int nRead> = 0;

        this.<berkeley.com.sleepycat.je.log.FileReader: long startLsn> = startLsn;

        this.<berkeley.com.sleepycat.je.log.FileReader: long finishLsn> = finishLsn;

        $r6 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger getLogger()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: java.util.logging.Logger logger> = $r6;

        virtualinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void initStartingPosition(long,java.lang.Long)>(endOfFileLsn, singleFileNumber);

        return;
    }

    protected berkeley.com.sleepycat.je.log.FileReader$ReadWindow makeWindow(int) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        int readBufferSize;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        readBufferSize := @parameter0: int;

        $r0 = new berkeley.com.sleepycat.je.log.FileReader$ReadWindow;

        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void <init>(int,berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>(readBufferSize, $r1);

        return $r0;
    }

    protected void initStartingPosition(long, java.lang.Long)
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        long endOfFileLsn, $l0, $l2, $l3, $l4, $l5, $l6, $l8, $l9, $l10, $l12, $l13, $l14;
        java.lang.Long ignoreSingleFileNumber, firstNum;
        boolean $z0, $z1;
        byte $b1, $b7, $b11;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0, $r2, $r3, $r5;
        berkeley.com.sleepycat.je.log.FileManager $r1;
        java.lang.AssertionError $r4;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        endOfFileLsn := @parameter0: long;

        ignoreSingleFileNumber := @parameter1: java.lang.Long;

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean eof> = 0;

        $z0 = this.<berkeley.com.sleepycat.je.log.FileReader: boolean forward>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        $l0 = this.<berkeley.com.sleepycat.je.log.FileReader: long startLsn>;

        $b1 = $l0 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l2 = this.<berkeley.com.sleepycat.je.log.FileReader: long startLsn>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void initAtFileStart(long)>($l2);

        goto label3;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileManager fileManager>;

        firstNum = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.FileManager: java.lang.Long getFirstFileNum()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(firstNum);

        if firstNum != null goto label2;

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean eof> = 1;

        goto label3;

     label2:
        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l3 = virtualinvoke firstNum.<java.lang.Long: long longValue()>();

        $l4 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long makeLsn(long,int)>($l3, 0);

        virtualinvoke $r2.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void initAtFileStart(long)>($l4);

     label3:
        $r3 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $l5 = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: long getEndOffset()>();

        this.<berkeley.com.sleepycat.je.log.FileReader: long nextEntryOffset> = $l5;

        goto label8;

     label4:
        $z1 = <berkeley.com.sleepycat.je.log.FileReader: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label5;

        $l6 = this.<berkeley.com.sleepycat.je.log.FileReader: long startLsn>;

        $b7 = $l6 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b7);

        if $b7 != 0 goto label5;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label5:
        $r5 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        virtualinvoke $r5.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: void initAtFileStart(long)>(endOfFileLsn);

        $l8 = this.<berkeley.com.sleepycat.je.log.FileReader: long startLsn>;

        $l9 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l8);

        $l10 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(endOfFileLsn);

        $b11 = $l9 cmp $l10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b11);

        if $b11 != 0 goto label6;

        $l12 = this.<berkeley.com.sleepycat.je.log.FileReader: long startLsn>;

        $l13 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>($l12);

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset> = $l13;

        goto label7;

     label6:
        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryPrevOffset> = 0L;

     label7:
        $l14 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(endOfFileLsn);

        this.<berkeley.com.sleepycat.je.log.FileReader: long currentEntryOffset> = $l14;

     label8:
        return;
    }

    public boolean entryIsReplicated()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r2;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r1;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("entryIsReplicated should not be used before reader is initialized");

        throw $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z0 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean getReplicated()>();

        return $z0;
    }

    public void setAlwaysValidateChecksum(boolean)
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        boolean validate;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        validate := @parameter0: boolean;

        this.<berkeley.com.sleepycat.je.log.FileReader: boolean alwaysValidateChecksum> = validate;

        return;
    }

    public void skipData(int) throws berkeley.com.sleepycat.je.log.ChecksumException, berkeley.com.sleepycat.je.log.FileReader$EOFException, java.io.FileNotFoundException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        int amountToSkip;
        berkeley.com.sleepycat.je.DatabaseException e, $r1;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        amountToSkip := @parameter0: int;

     label1:
        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: java.nio.ByteBuffer readData(int,boolean)>(amountToSkip, 0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void reportProblem(java.lang.Exception)>(e);

        throw e;

     label4:
        return;

        catch berkeley.com.sleepycat.je.DatabaseException from label1 to label2 with label3;
    }

    protected boolean isTargetEntry() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.FileReader this;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        return 1;
    }

    public int getAndResetNReads()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        berkeley.com.sleepycat.je.log.FileReader$ReadWindow $r0;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.FileReader: berkeley.com.sleepycat.je.log.FileReader$ReadWindow window>;

        $i0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileReader$ReadWindow: int getAndResetNReads()>();

        return $i0;
    }

    public int getNumRead()
    {
        berkeley.com.sleepycat.je.log.FileReader this;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.log.FileReader;

        $i0 = this.<berkeley.com.sleepycat.je.log.FileReader: int nRead>;

        return $i0;
    }


