digraph <clinit> {
"$r0 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy ROUND_HALF_UP> {778792520}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {862740746}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {862740746}" -> "$r1 = new java.util.HashSet {590346781}";
"$r1 = new java.util.HashSet {590346781}" -> "$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {531776763}";
"$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {531776763}" -> "$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {1098706047}";
"$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {1098706047}" -> "$r2[0] = $r3 {267672017}";
"$r2[0] = $r3 {267672017}" -> "$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {1160838713}";
"$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {1160838713}" -> "$r2[1] = $r4 {1755782559}";
"$r2[1] = $r4 {1755782559}" -> "$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {1822594460}";
"$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {1822594460}" -> "specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {1087285722}";
"specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {1087285722}" -> "<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {47007436}";
"<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {47007436}" -> "$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {1381427439}";
"$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {1381427439}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {706775372}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {706775372}" -> "$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {521495979}";
"$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {521495979}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {2005318563}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {2005318563}" -> "$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {317862956}";
"$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {317862956}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {1010218455}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {1010218455}" -> "$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {146450375}";
"$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {146450375}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1252220624}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1252220624}" -> "return {1232294140}";
}

digraph getImageType {
"srcFile := @parameter0: java.io.File {689683382}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {1450276365}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {1450276365}" -> "l2 = extension {1068087095}";
"l2 = extension {1068087095}" -> "l3#5 = -1 {450209485}";
"l3#5 = -1 {450209485}" -> "$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {557128591}";
"$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {557128591}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {578978641}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {578978641}" -> "lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {605499656}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {332001720}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {1769385505}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {669293410}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {500263928}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {1958658364}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {473998526}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {1451240643}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {1829562437}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1503675846}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {1769385505}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {144278331}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {144278331}" -> "if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {617653013}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {617653013}" -> "l3#5 = 0 {693208718}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {617653013}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 0 {693208718}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1971986979}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1971986979}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {1451240643}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1915786036}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1915786036}" -> "if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1925158666}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1925158666}" -> "l3#5 = 1 {1330903433}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1925158666}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 1 {1330903433}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {409084564}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {409084564}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {669293410}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1583826030}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1583826030}" -> "if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {773553032}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {773553032}" -> "l3#5 = 2 {1299185613}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {773553032}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 2 {1299185613}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1322467977}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1322467977}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {1958658364}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {378600744}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {378600744}" -> "if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {539824680}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {539824680}" -> "l3#5 = 3 {1041070816}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {539824680}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 3 {1041070816}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1018755900}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1018755900}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {473998526}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1724271713}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1724271713}" -> "if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1734008081}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1734008081}" -> "l3#5 = 4 {1115839915}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1734008081}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 4 {1115839915}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1543402513}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1543402513}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {1829562437}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {506810993}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {506810993}" -> "if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1165641481}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1165641481}" -> "l3#5 = 5 {1652053788}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1165641481}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 5 {1652053788}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1748813270}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1748813270}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {500263928}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {270129854}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {270129854}" -> "if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {332210145}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {332210145}" -> "l3#5 = 6 {367181347}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {332210145}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 6 {367181347}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {58362316}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {58362316}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {332001720}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {32578600}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {32578600}" -> "if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1152007908}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1152007908}" -> "l3#5 = 7 {1622669747}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1152007908}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 7 {1622669747}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1009750060}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1009750060}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {605499656}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {1663989906}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {1663989906}" -> "if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1694067542}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1694067542}" -> "l3#5 = 8 {434023114}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1694067542}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"l3#5 = 8 {434023114}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}" -> "tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {52799980}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {164045279}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {218490107}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {1552019297}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {1467276125}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {798592745}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {230215607}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {735063966}" -> "$r7 = new java.lang.IllegalArgumentException {379255712}";
"$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {52799980}" -> "return $r0 {1866582968}";
"$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {164045279}" -> "return $r1 {599872422}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {218490107}" -> "return $r2 {1819865832}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {1552019297}" -> "return $r3 {1970592564}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {1467276125}" -> "return $r4 {2083560681}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {798592745}" -> "return $r5 {2087148885}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {230215607}" -> "return $r6 {1972882749}";
"$r7 = new java.lang.IllegalArgumentException {379255712}" -> "$r8 = new java.lang.StringBuilder {1357574506}";
"$r8 = new java.lang.StringBuilder {1357574506}" -> "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {790260894}";
"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {790260894}" -> "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {1532649138}";
"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {1532649138}" -> "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {312250504}";
"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {312250504}" -> "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {1447481588}";
"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {1447481588}" -> "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1037129965}";
"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1037129965}" -> "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1731749545}";
"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1731749545}" -> "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {119131082}";
"specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {119131082}" -> "throw $r7 {819962738}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {378600744}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {144278331}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1724271713}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {578978641}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {937402188}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1583826030}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {270129854}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {1663989906}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {506810993}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {32578600}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1915786036}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getOutCompressionForType {
"type := @parameter0: at.favre.tools.dconvert.arg.EOutputCompressionMode {485890098}" -> "imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {220831516}";
"imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {220831516}" -> "$r0 = new java.util.ArrayList {1056810563}";
"$r0 = new java.util.ArrayList {1056810563}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {762264821}";
"specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {762264821}" -> "list = $r0 {1205377562}";
"list = $r0 {1205377562}" -> "$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {27349678}";
"$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {27349678}" -> "$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {1168976122}";
"$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {1168976122}" -> "$i1 = $r1[$i0] {1185313311}";
"$i1 = $r1[$i0] {1185313311}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1432027163}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1432027163}" -> "tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {1584063966}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {1345332196}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {1547771653}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {59666746}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {397454050}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {975568414}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1301904455}" -> "$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {349590540}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {1584063966}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {58489252}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {58489252}" -> "goto [?= return list] {941731042}";
"goto [?= return list] {941731042}" -> "return list {1090932883}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {1345332196}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {1150032129}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {1150032129}" -> "goto [?= return list] {1026916773}";
"goto [?= return list] {1026916773}" -> "return list {1090932883}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {1547771653}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {303462735}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {303462735}" -> "goto [?= return list] {1713012624}";
"goto [?= return list] {1713012624}" -> "return list {1090932883}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {59666746}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {1936415419}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {1936415419}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {662218571}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {662218571}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {322616363}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {322616363}" -> "goto [?= return list] {626728987}";
"goto [?= return list] {626728987}" -> "return list {1090932883}";
"$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {397454050}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {937098076}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {937098076}" -> "goto [?= return list] {1772553023}";
"goto [?= return list] {1772553023}" -> "return list {1090932883}";
"$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {975568414}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {380051689}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {380051689}" -> "goto [?= return list] {1680163901}";
"goto [?= return list] {1680163901}" -> "return list {1090932883}";
"$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {349590540}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {1060113924}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {1060113924}" -> "return list {1090932883}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1432027163}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: at.favre.tools.dconvert.arg.Arguments {1704540328}" -> "src := @parameter0: java.io.File {1761711704}";
"src := @parameter0: java.io.File {1761711704}" -> "dst := @parameter1: java.io.File {1587222519}";
"dst := @parameter1: java.io.File {1587222519}" -> "scale := @parameter2: float {1093319000}";
"scale := @parameter2: float {1093319000}" -> "platform := @parameter3: java.util.Set {1814256226}";
"platform := @parameter3: java.util.Set {1814256226}" -> "outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1051423061}";
"outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1051423061}" -> "scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {749414683}";
"scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {749414683}" -> "downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {478963857}";
"downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {478963857}" -> "upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {1606597246}";
"upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {1606597246}" -> "compressionQuality := @parameter8: float {502897445}";
"compressionQuality := @parameter8: float {502897445}" -> "threadCount := @parameter9: int {1486305012}";
"threadCount := @parameter9: int {1486305012}" -> "skipExistingFiles := @parameter10: boolean {508020300}";
"skipExistingFiles := @parameter10: boolean {508020300}" -> "skipUpscaling := @parameter11: boolean {239561000}";
"skipUpscaling := @parameter11: boolean {239561000}" -> "verboseLog := @parameter12: boolean {1404587639}";
"verboseLog := @parameter12: boolean {1404587639}" -> "includeAndroidLdpiTvdpi := @parameter13: boolean {1061778407}";
"includeAndroidLdpiTvdpi := @parameter13: boolean {1061778407}" -> "haltOnError := @parameter14: boolean {838741224}";
"haltOnError := @parameter14: boolean {838741224}" -> "createMipMapInsteadOfDrawableDir := @parameter15: boolean {1570498657}";
"createMipMapInsteadOfDrawableDir := @parameter15: boolean {1570498657}" -> "iosCreateImagesetFolders := @parameter16: boolean {500002804}";
"iosCreateImagesetFolders := @parameter16: boolean {500002804}" -> "enablePngCrush := @parameter17: boolean {2102089188}";
"enablePngCrush := @parameter17: boolean {2102089188}" -> "enableMozJpeg := @parameter18: boolean {1928113184}";
"enableMozJpeg := @parameter18: boolean {1928113184}" -> "postConvertWebp := @parameter19: boolean {559840370}";
"postConvertWebp := @parameter19: boolean {559840370}" -> "enableAntiAliasing := @parameter20: boolean {1956794381}";
"enableAntiAliasing := @parameter20: boolean {1956794381}" -> "dryRun := @parameter21: boolean {1339065837}";
"dryRun := @parameter21: boolean {1339065837}" -> "keepUnoptimizedFilesPostProcessor := @parameter22: boolean {157520365}";
"keepUnoptimizedFilesPostProcessor := @parameter22: boolean {157520365}" -> "roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {565569970}";
"roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {565569970}" -> "guiAdvancedOptions := @parameter24: boolean {1728677524}";
"guiAdvancedOptions := @parameter24: boolean {1728677524}" -> "clearDirBeforeConvert := @parameter25: boolean {212655089}";
"clearDirBeforeConvert := @parameter25: boolean {212655089}" -> "scaleIsHeightdp := @parameter26: boolean {1372728637}";
"scaleIsHeightdp := @parameter26: boolean {1372728637}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {818137747}";
"specialinvoke this.<java.lang.Object: void <init>()>() {818137747}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {2109686575}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {2109686575}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {1094114307}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {1094114307}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {1009005501}";
"this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {1009005501}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {1638962190}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {1638962190}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {342517378}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {342517378}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {343391639}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {343391639}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {1649537618}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {1649537618}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {1862507246}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {1862507246}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {275920401}";
"this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {275920401}" -> "this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {154640421}";
"this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {154640421}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {1566753153}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {1566753153}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {1420126079}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {1420126079}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {216922138}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {216922138}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {1755401817}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {1755401817}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {1913805181}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {1913805181}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {1481047889}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {1481047889}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {583990943}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {583990943}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {541283167}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {541283167}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {1283106540}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {1283106540}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {1666260898}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {1666260898}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {1265112106}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {1265112106}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {1884265365}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {1884265365}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {253678091}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {253678091}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {2008760001}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {2008760001}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {1474068141}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {1474068141}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {1777362044}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {1777362044}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> = scaleIsHeightdp {23566935}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> = scaleIsHeightdp {23566935}" -> "$r0 = new java.util.ArrayList {1555240079}";
"$r0 = new java.util.ArrayList {1555240079}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>()>() {1423284577}";
"specialinvoke $r0.<java.util.ArrayList: void <init>()>() {1423284577}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {268888088}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {268888088}" -> "supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {291430553}";
"supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {291430553}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {676888434}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {676888434}" -> "if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1631868841}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1631868841}" -> "$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {771262596}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1631868841}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {189058782}";
"$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {771262596}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1222916380}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1222916380}" -> "if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1734990373}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1734990373}" -> "l29 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {145072739}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1734990373}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {189058782}";
"l29 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {145072739}" -> "l30 = lengthof l29 {1369839694}";
"l30 = lengthof l29 {1369839694}" -> "l31#67 = 0 {309647265}";
"l31#67 = 0 {309647265}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {296195068}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {296195068}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {1485249377}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {1485249377}" -> "if l31#67 >= l30 goto (branch) {1955245951}";
"if l31#67 >= l30 goto (branch) {1955245951}" -> "file = l29[l31#67] {1281429779}";
"if l31#67 >= l30 goto (branch) {1955245951}" -> "goto [?= return] {1796540235}";
"file = l29[l31#67] {1281429779}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {959937863}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {959937863}" -> "$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {448441721}";
"$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {448441721}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1710325293}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1710325293}" -> "if $z1 == 0 goto l31#67 = l31#67 + 1 {409286188}";
"if $z1 == 0 goto l31#67 = l31#67 + 1 {409286188}" -> "$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {849158621}";
"if $z1 == 0 goto l31#67 = l31#67 + 1 {409286188}" -> "l31#67 = l31#67 + 1 {1979964787}";
"$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {849158621}" -> "interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {1150755099}";
"interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {1150755099}" -> "l31#67 = l31#67 + 1 {1979964787}";
"l31#67 = l31#67 + 1 {1979964787}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67)] {402509602}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67)] {402509602}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {296195068}";
"goto [?= return] {1796540235}" -> "return {437033274}";
"$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {189058782}" -> "$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {1219014562}";
"$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {1219014562}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {2000650092}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {2000650092}" -> "if $z3 == 0 goto return {459942575}";
"if $z3 == 0 goto return {459942575}" -> "$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {136964299}";
"if $z3 == 0 goto return {459942575}" -> "return {437033274}";
"$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {136964299}" -> "interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {2132326415}";
"interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {2132326415}" -> "return {437033274}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {676888434}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1222916380}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1710325293}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {1485249377}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {2000650092}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {296195068}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getSupportedFileTypes {
"$r0 = new java.util.HashSet {255441209}" -> "specialinvoke $r0.<java.util.HashSet: void <init>()>() {895942038}";
"specialinvoke $r0.<java.util.HashSet: void <init>()>() {895942038}" -> "set = $r0 {1540518042}";
"set = $r0 {1540518042}" -> "l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {200488402}";
"l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {200488402}" -> "l2 = lengthof l1 {361627362}";
"l2 = lengthof l1 {361627362}" -> "l3#7 = 0 {1097755113}";
"l3#7 = 0 {1097755113}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {613462282}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {613462282}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {1249817507}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {1249817507}" -> "if l3#7 >= l2 goto return set {1560644957}";
"if l3#7 >= l2 goto return set {1560644957}" -> "imageType = l1[l3#7] {804087221}";
"if l3#7 >= l2 goto return set {1560644957}" -> "return set {1144092903}";
"imageType = l1[l3#7] {804087221}" -> "$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {633516231}";
"$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {633516231}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {591089449}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {591089449}" -> "if $z0 == 0 goto l3#7 = l3#7 + 1 {1580803793}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {1580803793}" -> "$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {1627379834}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {1580803793}" -> "l3#7 = l3#7 + 1 {318436398}";
"$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {1627379834}" -> "$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {2003264794}";
"$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {2003264794}" -> "interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {1042689150}";
"interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {1042689150}" -> "l3#7 = l3#7 + 1 {318436398}";
"l3#7 = l3#7 + 1 {318436398}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {1593384158}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {1593384158}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {613462282}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {1249817507}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {613462282}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {591089449}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph round {
"this := @this: at.favre.tools.dconvert.arg.Arguments {278482105}" -> "raw := @parameter0: double {382043617}";
"raw := @parameter0: double {382043617}" -> "$r0 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {952245577}";
"$r0 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {952245577}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {603814750}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {603814750}" -> "if $r0 == null goto return raw {34762045}";
"if $r0 == null goto return raw {34762045}" -> "$r1 = new at.favre.tools.dconvert.arg.RoundingHandler {628274353}";
"if $r0 == null goto return raw {34762045}" -> "return raw {1819726256}";
"$r1 = new at.favre.tools.dconvert.arg.RoundingHandler {628274353}" -> "$r2 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {366674265}";
"$r2 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {366674265}" -> "specialinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r2) {1226198635}";
"specialinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r2) {1226198635}" -> "$l0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {1181803942}";
"$l0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {1181803942}" -> "$d0 = (double) $l0 {200078840}";
"$d0 = (double) $l0 {200078840}" -> "return $d0 {1894942712}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {603814750}"[fontcolor="blue", penwidth=3, color="blue"];
}


