    static void compress(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, byte[], com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        byte[] input;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int j, $i0, $i1, $i2, $i3, $i4, $i5, i#1;
        boolean $z0;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        input := @parameter2: byte[];

        output := @parameter3: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        i#1 = 0;

     label1:
        $i0 = lengthof input;

        if i#1 >= $i0 goto label4;

        $i1 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int masterBlockSize>;

        $i3 = i#1 + $i1;

        $i2 = lengthof input;

        j = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $i5 = i#1;

        $i4 = lengthof input;

        if j != $i4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflatePart(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,byte[],int,int,boolean,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, input, $i5, j, $z0, output);

        i#1 = j;

        goto label1;

     label4:
        return;
    }

    private static void deflatePart(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, byte[], int, int, boolean, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        byte[] input;
        int 'from', 'to', $i0, $i1;
        boolean flush;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting $r0;
        int[] $r1;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        input := @parameter2: byte[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        flush := @parameter5: boolean;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$1: int[] $SwitchMap$com$googlecode$pngtastic$core$processing$zopfli$Options$BlockSplitting>;

        $r0 = options.<com.googlecode.pngtastic.core.processing.zopfli.Options: com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting blockSplitting>;

        $i0 = virtualinvoke $r0.<com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateSplittingFirst(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

        goto label4;

     label2:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateSplittingLast(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

        goto label4;

     label3:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateDynamicBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

     label4:
        return;
    }

    private static void deflateDynamicBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0, $z1, $z2, $z3;
        byte[] input;
        int 'from', 'to', dynCost, fixedCost, $i0, $i1, $i2, $i3, $i4, $i5;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore fixedStore, store#2;
        long[] $r0;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType type#1;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        flush := @parameter2: boolean;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        lmc = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc>;

        $i0 = 'to' - 'from';

        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void init(int)>($i0);

        type#1 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType DYNAMIC>;

        $i1 = options.<com.googlecode.pngtastic.core.processing.zopfli.Options: int numIterations>;

        store#2 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int)>(cookie, $i1, lmc, input, 'from', 'to');

        $i2 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        if $i2 >= 1000 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z0 == 0 goto label5;

        fixedStore = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LzStore store1>;

        virtualinvoke fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        $r1 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        $r0 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: long[] costs>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void bestFixedLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],long[])>(cookie, lmc, input, 'from', 'to', $r1, $r0);

        $r2 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void optimalRun(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, lmc, input, 'from', 'to', $r2, fixedStore);

        $r4 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r3 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i3 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        dynCost = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, $r4, $r3, 0, $i3);

        $r6 = fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r5 = fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i4 = fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        fixedCost = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateFixedBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r6, $r5, $i4);

        if fixedCost >= dynCost goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z1 == 0 goto label5;

        type#1 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        store#2 = fixedStore;

     label5:
        $r7 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r8 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i5 = store#2.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType,boolean,char[],char[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, type#1, flush, $r7, $r8, 0, $i5, output);

        return;
    }

    private static void deflateSplittingLast(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0;
        byte[] input;
        int 'from', 'to', nPoints, start, end, $i0, $i1, $i2, $i3, i#1;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        int[] splitPoints;
        char[] $r0, $r1, $r4, $r5;
        com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType $r3;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        flush := @parameter2: boolean;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        lmc = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc>;

        $i0 = 'to' - 'from';

        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void init(int)>($i0);

        $i1 = options.<com.googlecode.pngtastic.core.processing.zopfli.Options: int numIterations>;

        store = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int)>(cookie, $i1, lmc, input, 'from', 'to');

        $r1 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r0 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i2 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nPoints = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int splitLz(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r1, $r0, $i2);

        splitPoints = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        i#1 = 1;

     label1:
        if i#1 > nPoints goto label4;

        $i3 = i#1 - 1;

        start = splitPoints[$i3];

        end = splitPoints[i#1];

        $r3 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType DYNAMIC>;

        if i#1 != nPoints goto label2;

        if flush == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r4 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r5 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType,boolean,char[],char[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, $r3, $z0, $r4, $r5, start, end, output);

        i#1 = i#1 + 1;

        goto label1;

     label4:
        return;
    }

    private static void deflateSplittingFirst(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0;
        byte[] input;
        int 'from', 'to', nPoints, i#1, $i0, $i1, $i2;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] splitPoints;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        flush := @parameter2: boolean;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nPoints = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int split(com.googlecode.pngtastic.core.processing.zopfli.Cookie,byte[],int,int)>(cookie, input, 'from', 'to');

        splitPoints = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        i#1 = 1;

     label1:
        if i#1 > nPoints goto label4;

        if i#1 != nPoints goto label2;

        if flush == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $i0 = i#1 - 1;

        $i1 = splitPoints[$i0];

        $i2 = splitPoints[i#1];

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateDynamicBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, $z0, input, $i1, $i2, output);

        i#1 = i#1 + 1;

        goto label1;

     label4:
        return;
    }

    private static void addLzBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType, boolean, char[], char[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType type, $r4, $r5;
        boolean last, $z0, $z1, $z2, $z3;
        char[] litLens, dists;
        int lStart, lEnd, $i0, $i1;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] llLengths, dLengths, llCounts, dCounts, llSymbols, dSymbols, $r0, $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11;
        byte $b2;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        type := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType;

        last := @parameter2: boolean;

        litLens := @parameter3: char[];

        dists := @parameter4: char[];

        lStart := @parameter5: int;

        lEnd := @parameter6: int;

        output := @parameter7: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        llLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, llLengths, 0, 288);

        dLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, dLengths, 0, 32);

        llCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288b>;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, llCounts, 0, 288);

        dCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        $r3 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, dCounts, 0, 32);

        if last == 0 goto label01;

        $b2 = 1;

        goto label02;

     label01:
        $b2 = 0;

     label02:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($b2, 1);

        $r4 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        if type != $r4 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z0 == 0 goto label05;

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(2, 2);

        goto label06;

     label05:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(1, 2);

     label06:
        $r5 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        if type != $r5 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z1 == 0 goto label09;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void getFixedTree(int[],int[])>(llLengths, dLengths);

        goto label10;

     label09:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lzCounts(char[],char[],int,int,int[],int[])>(litLens, dists, lStart, lEnd, llCounts, dCounts);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, llCounts);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, llCounts, 15, llLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, dCounts);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, dCounts, 15, dLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void patchDistanceCodesForBuggyDecoders(int[])>(dLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, llLengths, dLengths, output);

     label10:
        llSymbols = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288c>;

        $r6 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, llSymbols, 0, 288);

        $r8 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        $r7 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(llLengths, 288, 15, llSymbols, $r8, $r7);

        dSymbols = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        $r9 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, dSymbols, 0, 32);

        $r11 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        $r10 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(dLengths, 32, 15, dSymbols, $r11, $r10);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzData(char[],char[],int,int,int[],int[],int[],int[],com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(litLens, dists, lStart, lEnd, llSymbols, llLengths, dSymbols, dLengths, output);

        $i1 = llSymbols[256];

        $i0 = llLengths[256];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i1, $i0);

        return;
    }

    private static int calculateFixedBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int size, $i0, $i1, $i2, $i3, $i4, result#1, i#2, result#4, result#5, result#6, $i6, result#14;
        int[] llLengths, dLengths, cachedDistExtraBits, lengthExtraBits, lengthSymbol;
        char d, l;
        boolean $z0, $z1;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        litLens := @parameter1: char[];

        dists := @parameter2: char[];

        size := @parameter3: int;

        llLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        dLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void getFixedTree(int[],int[])>(llLengths, dLengths);

        result#1 = 3;

        cachedDistExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        lengthExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        i#2 = 0;

     label01:
        if i#2 >= size goto label10;

        d = dists[i#2];

        l = litLens[i#2];

        if d != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z0 == 0 goto label04;

        $i4 = llLengths[l];

        result#1 = result#1 + $i4;

        goto label09;

     label04:
        $i1 = lengthSymbol[l];

        $i2 = llLengths[$i1];

        result#4 = result#1 + $i2;

        $i3 = lengthExtraBits[l];

        result#5 = result#4 + $i3;

        result#6 = result#5 + 5;

        if d >= 4097 goto label05;

        $i6 = cachedDistExtraBits[d];

        goto label08;

     label05:
        if d >= 16385 goto label07;

        if d >= 8193 goto label06;

        $i6 = 11;

        goto label08;

     label06:
        $i6 = 12;

        goto label08;

     label07:
        $i6 = 13;

     label08:
        result#1 = result#6 + $i6;

     label09:
        i#2 = i#2 + 1;

        goto label01;

     label10:
        $i0 = llLengths[256];

        result#14 = result#1 + $i0;

        return result#14;
    }

    static int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int, int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int lStart, lEnd, distSymbol, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, result#1, i#2, result#9, l#10, l#11;
        int[] llLengths, dLengths, llCounts, dCounts, lengthSymbol, cachedDistSymbol, lengthExtraBits, $r0, $r1, $r2, $r3, i#7, d#8;
        boolean $z0, $z1, $z2, $z3;
        char d#3, l#4;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        litLens := @parameter1: char[];

        dists := @parameter2: char[];

        lStart := @parameter3: int;

        lEnd := @parameter4: int;

        llLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, llLengths, 0, 288);

        dLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, dLengths, 0, 32);

        result#1 = 3;

        llCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288b>;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, llCounts, 0, 288);

        dCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        $r3 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, dCounts, 0, 32);

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        lengthExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        i#2 = lStart;

     label01:
        if i#2 >= lEnd goto label08;

        d#3 = dists[i#2];

        l#4 = litLens[i#2];

        if d#3 != 0 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z0 == 0 goto label04;

        $i15 = llCounts[l#4];

        $i16 = $i15 + 1;

        llCounts[l#4] = $i16;

        goto label07;

     label04:
        $i7 = lengthSymbol[l#4];

        $i8 = llCounts[$i7];

        $i9 = $i8 + 1;

        llCounts[$i7] = $i9;

        distSymbol = cachedDistSymbol[d#3];

        $i10 = dCounts[distSymbol];

        $i11 = $i10 + 1;

        dCounts[distSymbol] = $i11;

        $i12 = lengthExtraBits[l#4];

        result#1 = result#1 + $i12;

        if distSymbol <= 3 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z1 == 0 goto label07;

        $i13 = distSymbol / 2;

        $i14 = $i13 - 1;

        result#1 = result#1 + $i14;

     label07:
        i#2 = i#2 + 1;

        goto label01;

     label08:
        llCounts[256] = 1;

        i#7 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llCounts, 0, i#7, 0, 288);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, i#7);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, i#7, 15, llLengths);

        d#8 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dCounts, 0, d#8, 0, 32);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, d#8);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, d#8, 15, dLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void patchDistanceCodesForBuggyDecoders(int[])>(dLengths);

        $i0 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateAddDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[])>(cookie, llLengths, dLengths);

        result#9 = result#1 + $i0;

        l#10 = 0;

     label09:
        if l#10 >= 288 goto label10;

        $i5 = llCounts[l#10];

        $i4 = llLengths[l#10];

        $i6 = $i5 * $i4;

        result#9 = result#9 + $i6;

        l#10 = l#10 + 1;

        goto label09;

     label10:
        l#11 = 0;

     label11:
        if l#11 >= 32 goto label12;

        $i2 = dCounts[l#11];

        $i1 = dLengths[l#11];

        $i3 = $i2 * $i1;

        result#9 = result#9 + $i3;

        l#11 = l#11 + 1;

        goto label11;

     label12:
        return result#9;
    }

    private static void addLzData(char[], char[], int, int, int[], int[], int[], int[], com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        char[] litLens, dists;
        int lStart, lEnd, lls, ds, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i#1, $i8, $i9;
        int[] llSymbols, llLengths, dSymbols, dLengths, cachedDistExtraBits, lengthExtraBits, lengthExtraBitsValue, lengthSymbol, cachedDistSymbol;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        char dist, litLen;
        boolean $z0, $z1;

        litLens := @parameter0: char[];

        dists := @parameter1: char[];

        lStart := @parameter2: int;

        lEnd := @parameter3: int;

        llSymbols := @parameter4: int[];

        llLengths := @parameter5: int[];

        dSymbols := @parameter6: int[];

        dLengths := @parameter7: int[];

        output := @parameter8: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        cachedDistExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        lengthExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        lengthExtraBitsValue = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS_VALUE>;

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        i#1 = lStart;

     label01:
        if i#1 >= lEnd goto label10;

        dist = dists[i#1];

        litLen = litLens[i#1];

        if dist != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z0 == 0 goto label04;

        $i7 = llSymbols[litLen];

        $i6 = llLengths[litLen];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i7, $i6);

        goto label09;

     label04:
        lls = lengthSymbol[litLen];

        ds = cachedDistSymbol[dist];

        $i1 = llSymbols[lls];

        $i0 = llLengths[lls];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i1, $i0);

        $i3 = lengthExtraBitsValue[litLen];

        $i2 = lengthExtraBits[litLen];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i3, $i2);

        $i5 = dSymbols[ds];

        $i4 = dLengths[ds];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i5, $i4);

        $i8 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Util: int distExtraBitsValue(int)>(dist);

        if dist >= 4097 goto label05;

        $i9 = cachedDistExtraBits[dist];

        goto label08;

     label05:
        if dist >= 16385 goto label07;

        if dist >= 8193 goto label06;

        $i9 = 11;

        goto label08;

     label06:
        $i9 = 12;

        goto label08;

     label07:
        $i9 = 13;

     label08:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i8, $i9);

     label09:
        i#1 = i#1 + 1;

        goto label01;

     label10:
        return;
    }

    private static void lengthsToSymbols(int[], int, int, int[], int[], int[])
    {
        int[] lengths, symbols, blCount, nextCode, $r0, $r1;
        int n, maxBits, len, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i#1, i#2, bits#3, bits#4;
        boolean $z0, $z1;

        lengths := @parameter0: int[];

        n := @parameter1: int;

        maxBits := @parameter2: int;

        symbols := @parameter3: int[];

        blCount := @parameter4: int[];

        nextCode := @parameter5: int[];

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        $i0 = maxBits + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, blCount, 0, $i0);

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        $i1 = maxBits + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, nextCode, 0, $i1);

        i#1 = 0;

     label1:
        if i#1 >= n goto label2;

        $i8 = lengths[i#1];

        $i9 = blCount[$i8];

        $i10 = $i9 + 1;

        blCount[$i8] = $i10;

        i#1 = i#1 + 1;

        goto label1;

     label2:
        i#2 = 0;

        blCount[0] = 0;

        bits#3 = 1;

     label3:
        if bits#3 > maxBits goto label4;

        $i5 = bits#3 - 1;

        $i6 = blCount[$i5];

        $i7 = i#2 + $i6;

        i#2 = $i7 << 1;

        nextCode[bits#3] = i#2;

        bits#3 = bits#3 + 1;

        goto label3;

     label4:
        bits#4 = 0;

     label5:
        if bits#4 >= n goto label9;

        len = lengths[bits#4];

        if len == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z0 == 0 goto label8;

        $i2 = nextCode[len];

        symbols[bits#4] = $i2;

        $i3 = nextCode[len];

        $i4 = $i3 + 1;

        nextCode[len] = $i4;

     label8:
        bits#4 = bits#4 + 1;

        goto label5;

     label9:
        return;
    }

    private static void addDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int size, $i0, $i1, $i2, $i3, best#1, bestSize#2, i#3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        output := @parameter3: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        best#1 = 0;

        bestSize#2 = 2147483647;

        i#3 = 0;

     label01:
        if i#3 >= 8 goto label11;

        $i2 = i#3 & 1;

        if $i2 == 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $i3 = i#3 & 2;

        if $i3 == 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $i4 = i#3 & 4;

        if $i4 == 0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        size = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateEncodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean)>(cookie, llLengths, dLengths, $z1, $z2, $z3);

        if size >= bestSize#2 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z0 == 0 goto label10;

        bestSize#2 = size;

        best#1 = i#3;

     label10:
        i#3 = i#3 + 1;

        goto label01;

     label11:
        $i0 = best#1 & 1;

        if $i0 == 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        $i1 = best#1 & 2;

        if $i1 == 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        $i5 = best#1 & 4;

        if $i5 == 0 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void encodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, llLengths, dLengths, $z5, $z6, $z7, output);

        return;
    }

    private static void patchDistanceCodesForBuggyDecoders(int[])
    {
        int[] dLengths;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1, numDistCodes#1, i#2;
        byte $b2;

        dLengths := @parameter0: int[];

        numDistCodes#1 = 0;

        i#2 = 0;

     label01:
        if i#2 >= 30 goto label07;

        $i1 = dLengths[i#2];

        if $i1 == 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z2 == 0 goto label06;

        numDistCodes#1 = numDistCodes#1 + 1;

        if numDistCodes#1 != 2 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z3 == 0 goto label06;

        return;

     label06:
        i#2 = i#2 + 1;

        goto label01;

     label07:
        if numDistCodes#1 != 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z0 == 0 goto label10;

        dLengths[0] = 1;

        dLengths[1] = 1;

        goto label15;

     label10:
        if numDistCodes#1 != 1 goto label11;

        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z1 == 0 goto label15;

        $i0 = dLengths[0];

        if $i0 == 0 goto label13;

        $b2 = 1;

        goto label14;

     label13:
        $b2 = 0;

     label14:
        dLengths[$b2] = 1;

     label15:
        return;
    }

    private static void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] counts, goodForRle, $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, length#1, symbol#4, stride#5, i#6, $i29, k#19, stride#21, i#22, k#23, i#24, count#30, k#33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        counts := @parameter1: int[];

        goodForRle = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i289a>;

        length#1 = lengthof counts;

     label01:
        if length#1 < 0 goto label08;

        if length#1 != 0 goto label02;

        $z10 = 1;

        goto label03;

     label02:
        $z10 = 0;

     label03:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z8 == 0 goto label04;

        return;

     label04:
        $i27 = length#1 - 1;

        $i28 = counts[$i27];

        if $i28 == 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z11);

        if $z9 == 0 goto label07;

        goto label08;

     label07:
        length#1 = length#1 + -1;

        goto label01;

     label08:
        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        $i0 = length#1 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, goodForRle, 0, $i0);

        symbol#4 = counts[0];

        stride#5 = 0;

        i#6 = 0;

     label09:
        $i29 = length#1 + 1;

        if i#6 >= $i29 goto label23;

        if i#6 == length#1 goto label10;

        $i26 = counts[i#6];

        if $i26 == symbol#4 goto label11;

     label10:
        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z6 == 0 goto label21;

        if symbol#4 != 0 goto label13;

        if stride#5 >= 5 goto label14;

     label13:
        if symbol#4 == 0 goto label15;

        if stride#5 < 7 goto label15;

     label14:
        $z13 = 1;

        goto label16;

     label15:
        $z13 = 0;

     label16:
        $z14 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z13);

        if $z14 == 0 goto label18;

        k#19 = 0;

     label17:
        if k#19 >= stride#5 goto label18;

        $i24 = i#6 - k#19;

        $i25 = $i24 - 1;

        goodForRle[$i25] = 1;

        k#19 = k#19 + 1;

        goto label17;

     label18:
        stride#5 = 1;

        if i#6 == length#1 goto label19;

        $z15 = 1;

        goto label20;

     label19:
        $z15 = 0;

     label20:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z15);

        if $z7 == 0 goto label22;

        symbol#4 = counts[i#6];

        goto label22;

     label21:
        stride#5 = stride#5 + 1;

     label22:
        i#6 = i#6 + 1;

        goto label09;

     label23:
        stride#21 = 0;

        i#22 = counts[0];

        k#23 = 0;

        i#24 = 0;

     label24:
        $i1 = length#1 + 1;

        if i#24 >= $i1 goto label49;

        if i#24 == length#1 goto label25;

        $i19 = goodForRle[i#24];

        if $i19 != 0 goto label25;

        $i20 = counts[i#24];

        $i21 = $i20 - i#22;

        if $i21 >= 4 goto label25;

        $i22 = counts[i#24];

        $i23 = i#22 - $i22;

        if $i23 < 4 goto label26;

     label25:
        $z16 = 1;

        goto label27;

     label26:
        $z16 = 0;

     label27:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z0 == 0 goto label45;

        if stride#21 >= 4 goto label28;

        if stride#21 < 3 goto label29;

        if k#23 != 0 goto label29;

     label28:
        $z17 = 1;

        goto label30;

     label29:
        $z17 = 0;

     label30:
        $z18 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z17);

        if $z18 == 0 goto label38;

        $i15 = stride#21 / 2;

        $i16 = k#23 + $i15;

        count#30 = $i16 / stride#21;

        if count#30 >= 1 goto label31;

        $z19 = 1;

        goto label32;

     label31:
        $z19 = 0;

     label32:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z4 == 0 goto label33;

        count#30 = 1;

     label33:
        if k#23 != 0 goto label34;

        $z20 = 1;

        goto label35;

     label34:
        $z20 = 0;

     label35:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z5 == 0 goto label36;

        count#30 = 0;

     label36:
        k#33 = 0;

     label37:
        if k#33 >= stride#21 goto label38;

        $i17 = i#24 - k#33;

        $i18 = $i17 - 1;

        counts[$i18] = count#30;

        k#33 = k#33 + 1;

        goto label37;

     label38:
        stride#21 = 0;

        k#23 = 0;

        $i3 = length#1 - 3;

        if i#24 >= $i3 goto label39;

        $z21 = 1;

        goto label40;

     label39:
        $z21 = 0;

     label40:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z21);

        if $z2 == 0 goto label41;

        $i6 = counts[i#24];

        $i4 = i#24 + 1;

        $i5 = counts[$i4];

        $i9 = $i6 + $i5;

        $i7 = i#24 + 2;

        $i8 = counts[$i7];

        $i12 = $i9 + $i8;

        $i10 = i#24 + 3;

        $i11 = counts[$i10];

        $i13 = $i12 + $i11;

        $i14 = $i13 + 2;

        i#22 = $i14 / 4;

        goto label45;

     label41:
        if i#24 >= length#1 goto label42;

        $z22 = 1;

        goto label43;

     label42:
        $z22 = 0;

     label43:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z22);

        if $z3 == 0 goto label44;

        i#22 = counts[i#24];

        goto label45;

     label44:
        i#22 = 0;

     label45:
        stride#21 = stride#21 + 1;

        if i#24 == length#1 goto label46;

        $z23 = 1;

        goto label47;

     label46:
        $z23 = 0;

     label47:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z23);

        if $z1 == 0 goto label48;

        $i2 = counts[i#24];

        k#23 = k#23 + $i2;

     label48:
        i#24 = i#24 + 1;

        goto label24;

     label49:
        return;
    }

    private static void lzCounts(char[], char[], int, int, int[], int[])
    {
        char[] litLens, dists;
        int start, end, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i#1;
        int[] llCount, dCount, lengthSymbol, cachedDistSymbol;
        char d, l;
        boolean $z0, $z1;

        litLens := @parameter0: char[];

        dists := @parameter1: char[];

        start := @parameter2: int;

        end := @parameter3: int;

        llCount := @parameter4: int[];

        dCount := @parameter5: int[];

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        i#1 = start;

     label1:
        if i#1 >= end goto label6;

        d = dists[i#1];

        l = litLens[i#1];

        if d != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z0 == 0 goto label4;

        $i6 = llCount[l];

        $i7 = $i6 + 1;

        llCount[l] = $i7;

        goto label5;

     label4:
        $i0 = lengthSymbol[l];

        $i1 = llCount[$i0];

        $i2 = $i1 + 1;

        llCount[$i0] = $i2;

        $i3 = cachedDistSymbol[d];

        $i4 = dCount[$i3];

        $i5 = $i4 + 1;

        dCount[$i3] = $i5;

     label5:
        i#1 = i#1 + 1;

        goto label1;

     label6:
        llCount[256] = 1;

        return;
    }

    private static void getFixedTree(int[], int[])
    {
        int[] llLengths, dLengths;
        int i#1, i#2, i#3, i#4, i#5;

        llLengths := @parameter0: int[];

        dLengths := @parameter1: int[];

        i#1 = 0;

     label01:
        if i#1 >= 144 goto label02;

        llLengths[i#1] = 8;

        i#1 = i#1 + 1;

        goto label01;

     label02:
        i#2 = 144;

     label03:
        if i#2 >= 256 goto label04;

        llLengths[i#2] = 9;

        i#2 = i#2 + 1;

        goto label03;

     label04:
        i#3 = 256;

     label05:
        if i#3 >= 280 goto label06;

        llLengths[i#3] = 7;

        i#3 = i#3 + 1;

        goto label05;

     label06:
        i#4 = 280;

     label07:
        if i#4 >= 288 goto label08;

        llLengths[i#4] = 8;

        i#4 = i#4 + 1;

        goto label07;

     label08:
        i#5 = 0;

     label09:
        if i#5 >= 32 goto label10;

        dLengths[i#5] = 5;

        i#5 = i#5 + 1;

        goto label09;

     label10:
        return;
    }

    private static int simulateAddDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths;
        int size, $i0, $i1, bestSize#1, i#2, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        bestSize#1 = 2147483647;

        i#2 = 0;

     label01:
        if i#2 >= 8 goto label11;

        $i0 = i#2 & 1;

        if $i0 == 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $i1 = i#2 & 2;

        if $i1 == 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $i2 = i#2 & 4;

        if $i2 == 0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        size = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateEncodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean)>(cookie, llLengths, dLengths, $z1, $z2, $z3);

        if size >= bestSize#1 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z0 == 0 goto label10;

        bestSize#1 = size;

     label10:
        i#2 = i#2 + 1;

        goto label01;

     label11:
        return bestSize#1;
    }

    static void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, int, com.googlecode.pngtastic.core.processing.zopfli.Hash, byte[], int, int, int, char[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        int blockStart, pos, size, offset, arrayEnd, threshold, marker, same0, $i0, $i1, $i6, $i7, $i10, $i11, $i12, $i16, $i20, $i22, $i23, $i26, $i28, limit#1, $i31, bestDist#26, bestLength#27, chainCounter#28, pp#30, p#31, pp#32, $i32, dist#34, scan#39, match#40, same1#45, $i33, same#47, scan#55, same1#58, pp#69, pp#71, $i34;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        byte[] array;
        char[] subLen, lmcLength, $r2, $r3, $r4, $r7, $r8, $r9;
        int[] hPrev2, hashVal2, $r0, $r1, $r5, $r6, hPrev#29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        char $c2, $c3, $c4, $c5, $c13, $c19, $c21, $c24, $c25, $c27, $c29, $c30;
        byte $b8, $b9, $b14, $b15, $b17, $b18;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        blockStart := @parameter2: int;

        h := @parameter3: com.googlecode.pngtastic.core.processing.zopfli.Hash;

        array := @parameter4: byte[];

        pos := @parameter5: int;

        size := @parameter6: int;

        limit#1 := @parameter7: int;

        subLen := @parameter8: char[];

        offset = pos - blockStart;

        if lmc == null goto label01;

        $r9 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length>;

        goto label02;

     label01:
        $r9 = null;

     label02:
        lmcLength = $r9;

        if lmc == null goto label04;

        $c29 = lmcLength[offset];

        if $c29 == 0 goto label03;

        $r8 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c30 = $r8[offset];

        if $c30 == 0 goto label04;

     label03:
        $z12 = 1;

        goto label05;

     label04:
        $z12 = 0;

     label05:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label18;

        if limit#1 == 258 goto label06;

        $c27 = lmcLength[offset];

        if $c27 <= limit#1 goto label06;

        if subLen == null goto label18;

        $i28 = virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(offset);

        if $i28 < limit#1 goto label18;

     label06:
        if subLen == null goto label07;

        $c25 = lmcLength[offset];

        $i26 = virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(offset);

        if $c25 > $i26 goto label08;

     label07:
        $z14 = 1;

        goto label09;

     label08:
        $z14 = 0;

     label09:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z9 == 0 goto label17;

        $c19 = lmcLength[offset];

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = $c19;

        $i20 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        if $i20 <= limit#1 goto label10;

        $z15 = 1;

        goto label11;

     label10:
        $z15 = 0;

     label11:
        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z15);

        if $z10 == 0 goto label12;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = limit#1;

     label12:
        if subLen == null goto label13;

        $z16 = 1;

        goto label14;

     label13:
        $z16 = 0;

     label14:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z11 == 0 goto label15;

        $i22 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void cacheToSubLen(int,int,char[])>(offset, $i22, subLen);

        $i23 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        $c24 = subLen[$i23];

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = $c24;

        goto label16;

     label15:
        $r7 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c21 = $r7[offset];

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = $c21;

     label16:
        return;

     label17:
        limit#1 = lmcLength[offset];

     label18:
        $i31 = size - pos;

        if $i31 >= 3 goto label19;

        $z17 = 1;

        goto label20;

     label19:
        $z17 = 0;

     label20:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z17);

        if $z0 == 0 goto label21;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = 0;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = 0;

        return;

     label21:
        $i0 = pos + limit#1;

        if $i0 <= size goto label22;

        $z18 = 1;

        goto label23;

     label22:
        $z18 = 0;

     label23:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z18);

        if $z1 == 0 goto label24;

        limit#1 = size - pos;

     label24:
        bestDist#26 = 0;

        bestLength#27 = 1;

        arrayEnd = pos + limit#1;

        chainCounter#28 = 8192;

        hPrev#29 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] prev>;

        hPrev2 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] prev2>;

        $r0 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] head>;

        $i1 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int val>;

        pp#30 = $r0[$i1];

        $r1 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        threshold = $r1[pp#30];

        hashVal2 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] hashVal2>;

        marker = hashVal2[pp#30];

        p#31 = hPrev#29[pp#30];

        pp#32 = pp#30 - p#31;

        if pp#32 <= 0 goto label25;

        $i32 = pp#32;

        goto label26;

     label25:
        $i32 = pp#32 + 32768;

     label26:
        dist#34 = $i32;

     label27:
        if dist#34 >= 32768 goto label56;

        if chainCounter#28 <= 0 goto label56;

        scan#39 = pos;

        match#40 = pos - dist#34;

        $i6 = scan#39 + bestLength#27;

        $b9 = array[$i6];

        $i7 = match#40 + bestLength#27;

        $b8 = array[$i7];

        if $b9 != $b8 goto label28;

        $z19 = 1;

        goto label29;

     label28:
        $z19 = 0;

     label29:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z3 == 0 goto label47;

        $r5 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        $i12 = pos & 32767;

        same0 = $r5[$i12];

        if same0 <= 2 goto label30;

        $b18 = array[scan#39];

        $b17 = array[match#40];

        if $b18 != $b17 goto label30;

        $z20 = 1;

        goto label31;

     label30:
        $z20 = 0;

     label31:
        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z21 == 0 goto label37;

        $r6 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        $i16 = match#40 & 32767;

        same1#45 = $r6[$i16];

        if same0 >= same1#45 goto label32;

        $i33 = same0;

        goto label33;

     label32:
        $i33 = same1#45;

     label33:
        same#47 = $i33;

        if same#47 <= limit#1 goto label34;

        $z22 = 1;

        goto label35;

     label34:
        $z22 = 0;

     label35:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z22);

        if $z8 == 0 goto label36;

        same#47 = limit#1;

     label36:
        scan#39 = scan#39 + same#47;

        match#40 = match#40 + same#47;

     label37:
        if scan#39 == arrayEnd goto label38;

        $b15 = array[scan#39];

        $b14 = array[match#40];

        if $b15 != $b14 goto label38;

        scan#39 = scan#39 + 1;

        match#40 = match#40 + 1;

        goto label37;

     label38:
        scan#55 = scan#39 - pos;

        if scan#55 <= bestLength#27 goto label39;

        $z23 = 1;

        goto label40;

     label39:
        $z23 = 0;

     label40:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z23);

        if $z5 == 0 goto label47;

        if subLen == null goto label41;

        $z24 = 1;

        goto label42;

     label41:
        $z24 = 0;

     label42:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z24);

        if $z6 == 0 goto label44;

        same1#58 = bestLength#27 + 1;

     label43:
        if same1#58 > scan#55 goto label44;

        $c13 = (char) dist#34;

        subLen[same1#58] = $c13;

        same1#58 = same1#58 + 1;

        goto label43;

     label44:
        bestDist#26 = dist#34;

        bestLength#27 = scan#55;

        if scan#55 < limit#1 goto label45;

        $z25 = 1;

        goto label46;

     label45:
        $z25 = 0;

     label46:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z25);

        if $z7 == 0 goto label47;

        goto label56;

     label47:
        if hPrev#29 == hPrev2 goto label48;

        if bestLength#27 < threshold goto label48;

        $i11 = hashVal2[p#31];

        if marker != $i11 goto label48;

        $z26 = 1;

        goto label49;

     label48:
        $z26 = 0;

     label49:
        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z26);

        if $z27 == 0 goto label50;

        hPrev#29 = hPrev2;

     label50:
        pp#69 = p#31;

        p#31 = hPrev#29[p#31];

        if p#31 != pp#69 goto label51;

        $z28 = 1;

        goto label52;

     label51:
        $z28 = 0;

     label52:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        if $z4 == 0 goto label53;

        goto label56;

     label53:
        pp#71 = pp#69 - p#31;

        $i10 = dist#34;

        if pp#71 <= 0 goto label54;

        $i34 = pp#71;

        goto label55;

     label54:
        $i34 = 32768 + pp#71;

     label55:
        dist#34 = $i10 + $i34;

        chainCounter#28 = chainCounter#28 + -1;

        goto label27;

     label56:
        if lmc == null goto label57;

        if limit#1 != 258 goto label57;

        if subLen == null goto label57;

        $c4 = lmcLength[offset];

        if $c4 == 0 goto label57;

        $r4 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c5 = $r4[offset];

        if $c5 != 0 goto label57;

        $z29 = 1;

        goto label58;

     label57:
        $z29 = 0;

     label58:
        $z30 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z29);

        if $z30 == 0 goto label63;

        if bestLength#27 >= 3 goto label59;

        $z31 = 1;

        goto label60;

     label59:
        $z31 = 0;

     label60:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z31);

        if $z2 == 0 goto label61;

        $r3 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $r3[offset] = 0;

        lmcLength[offset] = 0;

        goto label62;

     label61:
        $r2 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c2 = (char) bestDist#26;

        $r2[offset] = $c2;

        $c3 = (char) bestLength#27;

        lmcLength[offset] = $c3;

     label62:
        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void subLenToCache(char[],int,int)>(subLen, offset, bestLength#27);

     label63:
        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = bestDist#26;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = bestLength#27;

        return;
    }

    static void greedy(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.LzStore)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        byte[] input;
        int 'from', 'to', dist, lengthScore, prevLengthScore, $i0, $i1, $i7, $i10, prevLength#1, prevMatch#2, i#4, len#5, $i14, $i15, j#12, j#17;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        char[] dummySubLen;
        boolean $z0, $z1, $z2, matchAvailable#3, $z3, $z4, $z5, $z6, $z7, $z8;
        byte $b2, $b11;
        short $s3, $s12;
        char $c4, $c5, $c6, $c8, $c9, $c13;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        input := @parameter2: byte[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        store := @parameter5: com.googlecode.pngtastic.core.processing.zopfli.LzStore;

        h = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.Hash h>;

        $i0 = 'from' - 32768;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void init(byte[],int,int,int)>(input, $i1, 'from', 'to');

        prevLength#1 = 0;

        prevMatch#2 = 0;

        dummySubLen = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] c259a>;

        matchAvailable#3 = 0;

        i#4 = 'from';

     label01:
        if i#4 >= 'to' goto label23;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#4, 'to');

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,com.googlecode.pngtastic.core.processing.zopfli.Hash,byte[],int,int,int,char[])>(cookie, lmc, 'from', h, input, i#4, 'to', 258, dummySubLen);

        len#5 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        dist = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal>;

        if dist <= 1024 goto label02;

        $i14 = len#5 - 1;

        goto label03;

     label02:
        $i14 = len#5;

     label03:
        lengthScore = $i14;

        if prevMatch#2 <= 1024 goto label04;

        $i15 = prevLength#1 - 1;

        goto label05;

     label04:
        $i15 = prevLength#1;

     label05:
        prevLengthScore = $i15;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(matchAvailable#3);

        if $z0 == 0 goto label13;

        matchAvailable#3 = 0;

        $i7 = prevLengthScore + 1;

        if lengthScore <= $i7 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z2 == 0 goto label10;

        $i10 = i#4 - 1;

        $b11 = input[$i10];

        $s12 = $b11 & 255;

        $c13 = (char) $s12;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c13, 0);

        if lengthScore < 3 goto label08;

        if len#5 >= 258 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label16;

        matchAvailable#3 = 1;

        prevLength#1 = len#5;

        prevMatch#2 = dist;

        goto label22;

     label10:
        $c9 = (char) prevLength#1;

        $c8 = (char) prevMatch#2;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c9, $c8);

        j#12 = 2;

     label11:
        if j#12 >= prevLength#1 goto label12;

        i#4 = i#4 + 1;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#4, 'to');

        j#12 = j#12 + 1;

        goto label11;

     label12:
        goto label22;

     label13:
        if lengthScore < 3 goto label14;

        if len#5 >= 258 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label16;

        matchAvailable#3 = 1;

        prevLength#1 = len#5;

        prevMatch#2 = dist;

        goto label22;

     label16:
        if lengthScore < 3 goto label17;

        $z8 = 1;

        goto label18;

     label17:
        $z8 = 0;

     label18:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z1 == 0 goto label19;

        $c6 = (char) len#5;

        $c5 = (char) dist;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c6, $c5);

        goto label20;

     label19:
        len#5 = 1;

        $b2 = input[i#4];

        $s3 = $b2 & 255;

        $c4 = (char) $s3;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c4, 0);

     label20:
        j#17 = 1;

     label21:
        if j#17 >= len#5 goto label22;

        i#4 = i#4 + 1;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#4, 'to');

        j#17 = j#17 + 1;

        goto label21;

     label22:
        i#4 = i#4 + 1;

        goto label01;

     label23:
        return;
    }

    private static void encodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], boolean, boolean, boolean, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths, lldLengths, rle, rleBits, $r0, $r1, $r2, $r3, i#47, count#49, symbol#50, j#51;
        boolean use16, use17, use18, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int lldTotal, symbol, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, hLit#1, hDist#2, rleSize#5, i#6, count#11, symbol#12, j#17, $i33, i#28, $i34, j#35, $i35, j#37, $i36, j#44, count#48, hcLen#52, i#53, $i37, i#62;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        use16 := @parameter3: boolean;

        use17 := @parameter4: boolean;

        use18 := @parameter5: boolean;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        hLit#1 = 29;

        hDist#2 = 29;

     label01:
        if hLit#1 <= 0 goto label02;

        $i31 = 256 + hLit#1;

        $i32 = llLengths[$i31];

        if $i32 != 0 goto label02;

        hLit#1 = hLit#1 + -1;

        goto label01;

     label02:
        if hDist#2 <= 0 goto label03;

        $i30 = dLengths[hDist#2];

        if $i30 != 0 goto label03;

        hDist#2 = hDist#2 + -1;

        goto label02;

     label03:
        $i0 = hLit#1 + 258;

        lldTotal = $i0 + hDist#2;

        lldLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320b>;

        $i1 = 257 + hLit#1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llLengths, 0, lldLengths, 0, $i1);

        $i3 = 257 + hLit#1;

        $i2 = hDist#2 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dLengths, 0, lldLengths, $i3, $i2);

        rleSize#5 = 0;

        rle = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320a>;

        rleBits = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320c>;

        i#6 = 0;

     label04:
        if i#6 >= lldTotal goto label27;

        count#11 = 1;

        symbol#12 = lldLengths[i#6];

        if use16 != 0 goto label05;

        if symbol#12 != 0 goto label06;

        if use17 != 0 goto label05;

        if use18 == 0 goto label06;

     label05:
        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z6 == 0 goto label09;

        j#17 = i#6 + 1;

     label08:
        if j#17 >= lldTotal goto label09;

        $i29 = lldLengths[j#17];

        if symbol#12 != $i29 goto label09;

        count#11 = count#11 + 1;

        j#17 = j#17 + 1;

        goto label08;

     label09:
        $i33 = count#11 - 1;

        i#28 = i#6 + $i33;

        if symbol#12 != 0 goto label10;

        if count#11 <= 2 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label19;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use18);

        if $z3 == 0 goto label15;

     label12:
        if count#11 <= 10 goto label15;

        if count#11 <= 138 goto label13;

        $i34 = 138;

        goto label14;

     label13:
        $i34 = count#11;

     label14:
        j#35 = $i34;

        rle[rleSize#5] = 18;

        $i27 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        $i28 = j#35 - 11;

        rleBits[$i27] = $i28;

        count#11 = count#11 - j#35;

        goto label12;

     label15:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use17);

        if $z4 == 0 goto label19;

     label16:
        if count#11 <= 2 goto label19;

        if count#11 <= 10 goto label17;

        $i35 = 10;

        goto label18;

     label17:
        $i35 = count#11;

     label18:
        j#37 = $i35;

        rle[rleSize#5] = 17;

        $i25 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        $i26 = j#37 - 3;

        rleBits[$i25] = $i26;

        count#11 = count#11 - j#37;

        goto label16;

     label19:
        if use16 == 0 goto label20;

        if count#11 <= 3 goto label20;

        $z9 = 1;

        goto label21;

     label20:
        $z9 = 0;

     label21:
        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z9);

        if $z10 == 0 goto label25;

        count#11 = count#11 + -1;

        rle[rleSize#5] = symbol#12;

        $i22 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rleBits[$i22] = 0;

     label22:
        if count#11 <= 2 goto label25;

        if count#11 <= 6 goto label23;

        $i36 = 6;

        goto label24;

     label23:
        $i36 = count#11;

     label24:
        j#44 = $i36;

        rle[rleSize#5] = 16;

        $i23 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        $i24 = j#44 - 3;

        rleBits[$i23] = $i24;

        count#11 = count#11 - j#44;

        goto label22;

     label25:
        if count#11 == 0 goto label26;

        rle[rleSize#5] = symbol#12;

        $i21 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rleBits[$i21] = 0;

        count#11 = count#11 + -1;

        goto label25;

     label26:
        i#6 = i#28 + 1;

        goto label04;

     label27:
        i#47 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, i#47, 0, 19);

        count#48 = 0;

     label28:
        if count#48 >= rleSize#5 goto label29;

        $i18 = rle[count#48];

        $i19 = i#47[$i18];

        $i20 = $i19 + 1;

        i#47[$i18] = $i20;

        count#48 = count#48 + 1;

        goto label28;

     label29:
        count#49 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19b>;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, count#49, 0, 19);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, i#47, 7, count#49);

        symbol#50 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19c>;

        $r3 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        $r2 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(count#49, 19, 7, symbol#50, $r3, $r2);

        j#51 = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] ORDER>;

        hcLen#52 = 15;

     label30:
        if hcLen#52 <= 0 goto label31;

        $i15 = hcLen#52 + 3;

        $i16 = j#51[$i15];

        $i17 = i#47[$i16];

        if $i17 != 0 goto label31;

        hcLen#52 = hcLen#52 + -1;

        goto label30;

     label31:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hLit#1, 5);

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hDist#2, 5);

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hcLen#52, 4);

        i#53 = 0;

     label32:
        $i37 = hcLen#52 + 4;

        if i#53 >= $i37 goto label33;

        $i13 = j#51[i#53];

        $i14 = count#49[$i13];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i14, 3);

        i#53 = i#53 + 1;

        goto label32;

     label33:
        i#62 = 0;

     label34:
        if i#62 >= rleSize#5 goto label44;

        $i4 = rle[i#62];

        symbol = symbol#50[$i4];

        $i5 = rle[i#62];

        $i6 = count#49[$i5];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(symbol, $i6);

        $i7 = rle[i#62];

        if $i7 != 16 goto label35;

        $z11 = 1;

        goto label36;

     label35:
        $z11 = 0;

     label36:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z11);

        if $z0 == 0 goto label37;

        $i12 = rleBits[i#62];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i12, 2);

        goto label43;

     label37:
        $i8 = rle[i#62];

        if $i8 != 17 goto label38;

        $z12 = 1;

        goto label39;

     label38:
        $z12 = 0;

     label39:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z1 == 0 goto label40;

        $i11 = rleBits[i#62];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i11, 3);

        goto label43;

     label40:
        $i9 = rle[i#62];

        if $i9 != 18 goto label41;

        $z13 = 1;

        goto label42;

     label41:
        $z13 = 0;

     label42:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z13);

        if $z2 == 0 goto label43;

        $i10 = rleBits[i#62];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i10, 7);

     label43:
        i#62 = i#62 + 1;

        goto label34;

     label44:
        return;
    }

    private static int simulateEncodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], boolean, boolean, boolean)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths, lldLengths, rle, $r0, $r1, i#44, count#46, symbol#47;
        boolean use16, use17, use18, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int lldTotal, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, hLit#1, hDist#2, rleSize#5, i#6, count#11, symbol#12, j#17, $i33, i#28, $i34, $i35, $i36, count#45, j#48, result#49, i#50;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        use16 := @parameter3: boolean;

        use17 := @parameter4: boolean;

        use18 := @parameter5: boolean;

        hLit#1 = 29;

        hDist#2 = 29;

     label01:
        if hLit#1 <= 0 goto label02;

        $i31 = 256 + hLit#1;

        $i32 = llLengths[$i31];

        if $i32 != 0 goto label02;

        hLit#1 = hLit#1 + -1;

        goto label01;

     label02:
        if hDist#2 <= 0 goto label03;

        $i30 = dLengths[hDist#2];

        if $i30 != 0 goto label03;

        hDist#2 = hDist#2 + -1;

        goto label02;

     label03:
        $i0 = hLit#1 + 258;

        lldTotal = $i0 + hDist#2;

        lldLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320b>;

        $i1 = 257 + hLit#1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llLengths, 0, lldLengths, 0, $i1);

        $i3 = 257 + hLit#1;

        $i2 = hDist#2 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dLengths, 0, lldLengths, $i3, $i2);

        rle = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320a>;

        rleSize#5 = 0;

        i#6 = 0;

     label04:
        if i#6 >= lldTotal goto label27;

        count#11 = 1;

        symbol#12 = lldLengths[i#6];

        if use16 != 0 goto label05;

        if symbol#12 != 0 goto label06;

        if use17 != 0 goto label05;

        if use18 == 0 goto label06;

     label05:
        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label09;

        j#17 = i#6 + 1;

     label08:
        if j#17 >= lldTotal goto label09;

        $i29 = lldLengths[j#17];

        if symbol#12 != $i29 goto label09;

        count#11 = count#11 + 1;

        j#17 = j#17 + 1;

        goto label08;

     label09:
        $i33 = count#11 - 1;

        i#28 = i#6 + $i33;

        if symbol#12 != 0 goto label10;

        if count#11 <= 2 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label19;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use18);

        if $z0 == 0 goto label15;

     label12:
        if count#11 <= 10 goto label15;

        $i27 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rle[$i27] = 18;

        $i28 = count#11;

        if count#11 <= 138 goto label13;

        $i34 = 138;

        goto label14;

     label13:
        $i34 = count#11;

     label14:
        count#11 = $i28 - $i34;

        goto label12;

     label15:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use17);

        if $z1 == 0 goto label19;

     label16:
        if count#11 <= 2 goto label19;

        $i25 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rle[$i25] = 17;

        $i26 = count#11;

        if count#11 <= 10 goto label17;

        $i35 = 10;

        goto label18;

     label17:
        $i35 = count#11;

     label18:
        count#11 = $i26 - $i35;

        goto label16;

     label19:
        if use16 == 0 goto label20;

        if count#11 <= 3 goto label20;

        $z6 = 1;

        goto label21;

     label20:
        $z6 = 0;

     label21:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label25;

        count#11 = count#11 + -1;

        $i22 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rle[$i22] = symbol#12;

     label22:
        if count#11 <= 2 goto label25;

        $i23 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rle[$i23] = 16;

        $i24 = count#11;

        if count#11 <= 6 goto label23;

        $i36 = 6;

        goto label24;

     label23:
        $i36 = count#11;

     label24:
        count#11 = $i24 - $i36;

        goto label22;

     label25:
        if count#11 == 0 goto label26;

        $i21 = rleSize#5;

        rleSize#5 = rleSize#5 + 1;

        rle[$i21] = symbol#12;

        count#11 = count#11 + -1;

        goto label25;

     label26:
        i#6 = i#28 + 1;

        goto label04;

     label27:
        i#44 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, i#44, 0, 19);

        count#45 = 0;

     label28:
        if count#45 >= rleSize#5 goto label29;

        $i18 = rle[count#45];

        $i19 = i#44[$i18];

        $i20 = $i19 + 1;

        i#44[$i18] = $i20;

        count#45 = count#45 + 1;

        goto label28;

     label29:
        count#46 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19b>;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, count#46, 0, 19);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, i#44, 7, count#46);

        $i4 = count#46[16];

        $i5 = $i4 + 2;

        count#46[16] = $i5;

        $i6 = count#46[17];

        $i7 = $i6 + 3;

        count#46[17] = $i7;

        $i8 = count#46[18];

        $i9 = $i8 + 7;

        count#46[18] = $i9;

        symbol#47 = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] ORDER>;

        j#48 = 15;

     label30:
        if j#48 <= 0 goto label31;

        $i15 = j#48 + 3;

        $i16 = symbol#47[$i15];

        $i17 = i#44[$i16];

        if $i17 != 0 goto label31;

        j#48 = j#48 + -1;

        goto label30;

     label31:
        $i10 = j#48 + 4;

        $i11 = $i10 * 3;

        result#49 = 14 + $i11;

        i#50 = 0;

     label32:
        if i#50 >= 19 goto label33;

        $i13 = count#46[i#50];

        $i12 = i#44[i#50];

        $i14 = $i13 * $i12;

        result#49 = result#49 + $i14;

        i#50 = i#50 + 1;

        goto label32;

     label33:
        return result#49;
    }


