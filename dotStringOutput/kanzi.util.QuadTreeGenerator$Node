digraph <init> {
"this := @this: kanzi.util.QuadTreeGenerator$Node {1132629332}" -> "x0 := @parameter0: kanzi.util.QuadTreeGenerator$Node {1801848546}";
"x0 := @parameter0: kanzi.util.QuadTreeGenerator$Node {1801848546}" -> "x1 := @parameter1: int {248822496}";
"x1 := @parameter1: int {248822496}" -> "x2 := @parameter2: int {768735601}";
"x2 := @parameter2: int {768735601}" -> "x3 := @parameter3: int {70638210}";
"x3 := @parameter3: int {70638210}" -> "x4 := @parameter4: int {234831346}";
"x4 := @parameter4: int {234831346}" -> "x5 := @parameter5: boolean {1667013666}";
"x5 := @parameter5: boolean {1667013666}" -> "x6 := @parameter6: kanzi.util.QuadTreeGenerator$1 {41091021}";
"x6 := @parameter6: kanzi.util.QuadTreeGenerator$1 {41091021}" -> "specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: void <init>(kanzi.util.QuadTreeGenerator$Node,int,int,int,int,boolean)>(x0, x1, x2, x3, x4, x5) {1537752800}";
"specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: void <init>(kanzi.util.QuadTreeGenerator$Node,int,int,int,int,boolean)>(x0, x1, x2, x3, x4, x5) {1537752800}" -> "return {218860170}";
}

digraph <init> {
"this := @this: kanzi.util.QuadTreeGenerator$Node {23104486}" -> "parent := @parameter0: kanzi.util.QuadTreeGenerator$Node {2086842697}";
"parent := @parameter0: kanzi.util.QuadTreeGenerator$Node {2086842697}" -> "x := @parameter1: int {283245864}";
"x := @parameter1: int {283245864}" -> "y := @parameter2: int {524466141}";
"y := @parameter2: int {524466141}" -> "w := @parameter3: int {1310627268}";
"w := @parameter3: int {1310627268}" -> "h := @parameter4: int {788905230}";
"h := @parameter4: int {788905230}" -> "isRGB := @parameter5: boolean {231590845}";
"isRGB := @parameter5: boolean {231590845}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {993180798}";
"specialinvoke this.<java.lang.Object: void <init>()>() {993180798}" -> "this.<kanzi.util.QuadTreeGenerator$Node: kanzi.util.QuadTreeGenerator$Node parent> = parent {219947523}";
"this.<kanzi.util.QuadTreeGenerator$Node: kanzi.util.QuadTreeGenerator$Node parent> = parent {219947523}" -> "this.<kanzi.util.QuadTreeGenerator$Node: int x> = x {850336990}";
"this.<kanzi.util.QuadTreeGenerator$Node: int x> = x {850336990}" -> "this.<kanzi.util.QuadTreeGenerator$Node: int y> = y {79602941}";
"this.<kanzi.util.QuadTreeGenerator$Node: int y> = y {79602941}" -> "this.<kanzi.util.QuadTreeGenerator$Node: int w> = w {1032014980}";
"this.<kanzi.util.QuadTreeGenerator$Node: int w> = w {1032014980}" -> "this.<kanzi.util.QuadTreeGenerator$Node: int h> = h {64466521}";
"this.<kanzi.util.QuadTreeGenerator$Node: int h> = h {64466521}" -> "this.<kanzi.util.QuadTreeGenerator$Node: boolean isRGB> = isRGB {156471681}";
"this.<kanzi.util.QuadTreeGenerator$Node: boolean isRGB> = isRGB {156471681}" -> "return {935875476}";
}

digraph computeVariance {
"this := @this: kanzi.util.QuadTreeGenerator$Node {1937229935}" -> "buffer := @parameter0: int[] {369712219}";
"buffer := @parameter0: int[] {369712219}" -> "stride := @parameter1: int {1173796810}";
"stride := @parameter1: int {1173796810}" -> "$z0 = this.<kanzi.util.QuadTreeGenerator$Node: boolean isRGB> {2141298497}";
"$z0 = this.<kanzi.util.QuadTreeGenerator$Node: boolean isRGB> {2141298497}" -> "if $z0 != 1 goto $i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceY(int[],int)>(buffer, stride) {1759859526}";
"if $z0 != 1 goto $i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceY(int[],int)>(buffer, stride) {1759859526}" -> "$i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceRGB(int[],int)>(buffer, stride) {1898119352}";
"if $z0 != 1 goto $i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceY(int[],int)>(buffer, stride) {1759859526}" -> "$i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceY(int[],int)>(buffer, stride) {645418960}";
"$i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceRGB(int[],int)>(buffer, stride) {1898119352}" -> "goto [?= return $i0] {1555867541}";
"goto [?= return $i0] {1555867541}" -> "return $i0 {1008970752}";
"$i0 = specialinvoke this.<kanzi.util.QuadTreeGenerator$Node: int computeVarianceY(int[],int)>(buffer, stride) {645418960}" -> "return $i0 {1008970752}";
}

digraph computeVarianceRGB {
"this := @this: kanzi.util.QuadTreeGenerator$Node {1432099726}" -> "rgb := @parameter0: int[] {1266744953}";
"rgb := @parameter0: int[] {1266744953}" -> "stride := @parameter1: int {1072858452}";
"stride := @parameter1: int {1072858452}" -> "$i0 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {219923743}";
"$i0 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {219923743}" -> "$i1 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {280740892}";
"$i1 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {280740892}" -> "iend = $i0 + $i1 {1978714824}";
"iend = $i0 + $i1 {1978714824}" -> "$i2 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {639792787}";
"$i2 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {639792787}" -> "$i3 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {606222178}";
"$i3 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {606222178}" -> "jend = $i2 + $i3 {1861759317}";
"jend = $i2 + $i3 {1861759317}" -> "$i4 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {91928281}";
"$i4 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {91928281}" -> "$i5 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {1517516505}";
"$i5 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {1517516505}" -> "len = $i4 * $i5 {1952501045}";
"len = $i4 * $i5 {1952501045}" -> "sq_sumR#17 = 0L {16631920}";
"sq_sumR#17 = 0L {16631920}" -> "sq_sumB#19 = 0L {12773386}";
"sq_sumB#19 = 0L {12773386}" -> "sq_sumG#21 = 0L {1829099092}";
"sq_sumG#21 = 0L {1829099092}" -> "sumR#23 = 0L {973456714}";
"sumR#23 = 0L {973456714}" -> "sumG#25 = 0L {1852473888}";
"sumG#25 = 0L {1852473888}" -> "sumB#27 = 0L {961570084}";
"sumB#27 = 0L {961570084}" -> "$i6 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1880770137}";
"$i6 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1880770137}" -> "offs#32 = $i6 * stride {748399275}";
"offs#32 = $i6 * stride {748399275}" -> "j#35 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {2019961259}";
"j#35 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {2019961259}" -> "if j#35 >= jend goto $l19 = sumR#23 * sumR#23 {678770378}";
"if j#35 >= jend goto $l19 = sumR#23 * sumR#23 {678770378}" -> "i#40 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {1276402705}";
"if j#35 >= jend goto $l19 = sumR#23 * sumR#23 {678770378}" -> "$l19 = sumR#23 * sumR#23 {1272096898}";
"i#40 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {1276402705}" -> "if i#40 >= iend goto offs#32 = offs#32 + stride {1779095346}";
"if i#40 >= iend goto offs#32 = offs#32 + stride {1779095346}" -> "$i7 = offs#32 + i#40 {126964129}";
"if i#40 >= iend goto offs#32 = offs#32 + stride {1779095346}" -> "offs#32 = offs#32 + stride {1372538876}";
"$i7 = offs#32 + i#40 {126964129}" -> "pixel = rgb[$i7] {1145406156}";
"pixel = rgb[$i7] {1145406156}" -> "$i8 = pixel >> 16 {1376171096}";
"$i8 = pixel >> 16 {1376171096}" -> "r = $i8 & 255 {1186716004}";
"r = $i8 & 255 {1186716004}" -> "$i9 = pixel >> 8 {2019467044}";
"$i9 = pixel >> 8 {2019467044}" -> "g = $i9 & 255 {1830733966}";
"g = $i9 & 255 {1830733966}" -> "b = pixel & 255 {1551587160}";
"b = pixel & 255 {1551587160}" -> "$l10 = (long) r {301398732}";
"$l10 = (long) r {301398732}" -> "sumR#23 = sumR#23 + $l10 {446216268}";
"sumR#23 = sumR#23 + $l10 {446216268}" -> "$l11 = (long) g {805156977}";
"$l11 = (long) g {805156977}" -> "sumG#25 = sumG#25 + $l11 {1799775481}";
"sumG#25 = sumG#25 + $l11 {1799775481}" -> "$l12 = (long) b {274807324}";
"$l12 = (long) b {274807324}" -> "sumB#27 = sumB#27 + $l12 {1240118338}";
"sumB#27 = sumB#27 + $l12 {1240118338}" -> "$i13 = r * r {856014869}";
"$i13 = r * r {856014869}" -> "$l14 = (long) $i13 {978345664}";
"$l14 = (long) $i13 {978345664}" -> "sq_sumR#17 = sq_sumR#17 + $l14 {27561925}";
"sq_sumR#17 = sq_sumR#17 + $l14 {27561925}" -> "$i15 = g * g {1531350031}";
"$i15 = g * g {1531350031}" -> "$l16 = (long) $i15 {538262905}";
"$l16 = (long) $i15 {538262905}" -> "sq_sumG#21 = sq_sumG#21 + $l16 {624072274}";
"sq_sumG#21 = sq_sumG#21 + $l16 {624072274}" -> "$i17 = b * b {489402027}";
"$i17 = b * b {489402027}" -> "$l18 = (long) $i17 {230747705}";
"$l18 = (long) $i17 {230747705}" -> "sq_sumB#19 = sq_sumB#19 + $l18 {1375202881}";
"sq_sumB#19 = sq_sumB#19 + $l18 {1375202881}" -> "i#40 = i#40 + 1 {300502050}";
"i#40 = i#40 + 1 {300502050}" -> "goto [?= (branch)] {466802944}";
"goto [?= (branch)] {466802944}" -> "if i#40 >= iend goto offs#32 = offs#32 + stride {1779095346}";
"offs#32 = offs#32 + stride {1372538876}" -> "j#35 = j#35 + 1 {963310858}";
"j#35 = j#35 + 1 {963310858}" -> "goto [?= (branch)] {1684366165}";
"goto [?= (branch)] {1684366165}" -> "if j#35 >= jend goto $l19 = sumR#23 * sumR#23 {678770378}";
"$l19 = sumR#23 * sumR#23 {1272096898}" -> "$l20 = (long) len {1184461388}";
"$l20 = (long) len {1184461388}" -> "$l21 = $l19 / $l20 {1301557088}";
"$l21 = $l19 / $l20 {1301557088}" -> "vR = sq_sumR#17 - $l21 {113108014}";
"vR = sq_sumR#17 - $l21 {113108014}" -> "$l22 = sumG#25 * sumG#25 {606889769}";
"$l22 = sumG#25 * sumG#25 {606889769}" -> "$l23 = (long) len {285613512}";
"$l23 = (long) len {285613512}" -> "$l24 = $l22 / $l23 {392745446}";
"$l24 = $l22 / $l23 {392745446}" -> "vG = sq_sumG#21 - $l24 {770147080}";
"vG = sq_sumG#21 - $l24 {770147080}" -> "$l25 = sumB#27 * sumB#27 {396439100}";
"$l25 = sumB#27 * sumB#27 {396439100}" -> "$l26 = (long) len {999881074}";
"$l26 = (long) len {999881074}" -> "$l27 = $l25 / $l26 {1169703517}";
"$l27 = $l25 / $l26 {1169703517}" -> "vB = sq_sumB#19 - $l27 {1796413713}";
"vB = sq_sumB#19 - $l27 {1796413713}" -> "$l28 = vR + vG {7136611}";
"$l28 = vR + vG {7136611}" -> "$l29 = $l28 + vB {322479855}";
"$l29 = $l28 + vB {322479855}" -> "$i30 = 3 * len {1761098853}";
"$i30 = 3 * len {1761098853}" -> "$l31 = (long) $i30 {1050800203}";
"$l31 = (long) $i30 {1050800203}" -> "$l32 = $l29 / $l31 {1339928480}";
"$l32 = $l29 / $l31 {1339928480}" -> "$i33 = (int) $l32 {1550986668}";
"$i33 = (int) $l32 {1550986668}" -> "this.<kanzi.util.QuadTreeGenerator$Node: int variance> = $i33 {1967139155}";
"this.<kanzi.util.QuadTreeGenerator$Node: int variance> = $i33 {1967139155}" -> "$i34 = this.<kanzi.util.QuadTreeGenerator$Node: int variance> {1716566925}";
"$i34 = this.<kanzi.util.QuadTreeGenerator$Node: int variance> {1716566925}" -> "return $i34 {730002854}";
}

digraph computeVarianceY {
"this := @this: kanzi.util.QuadTreeGenerator$Node {841344889}" -> "yBuffer := @parameter0: int[] {539409860}";
"yBuffer := @parameter0: int[] {539409860}" -> "stride := @parameter1: int {71441066}";
"stride := @parameter1: int {71441066}" -> "$i0 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {462943487}";
"$i0 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {462943487}" -> "$i1 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {1879219152}";
"$i1 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {1879219152}" -> "iend = $i0 + $i1 {1671276127}";
"iend = $i0 + $i1 {1671276127}" -> "$i2 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1713079185}";
"$i2 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1713079185}" -> "$i3 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {1878458289}";
"$i3 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {1878458289}" -> "jend = $i2 + $i3 {540538856}";
"jend = $i2 + $i3 {540538856}" -> "$i4 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {953903692}";
"$i4 = this.<kanzi.util.QuadTreeGenerator$Node: int w> {953903692}" -> "$i5 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {901477273}";
"$i5 = this.<kanzi.util.QuadTreeGenerator$Node: int h> {901477273}" -> "len = $i4 * $i5 {1119357360}";
"len = $i4 * $i5 {1119357360}" -> "sq_sum#17 = 0L {467649893}";
"sq_sum#17 = 0L {467649893}" -> "sum#19 = 0L {1625050486}";
"sum#19 = 0L {1625050486}" -> "$i6 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1508422649}";
"$i6 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1508422649}" -> "offs#24 = $i6 * stride {760880601}";
"offs#24 = $i6 * stride {760880601}" -> "j#27 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1102434494}";
"j#27 = this.<kanzi.util.QuadTreeGenerator$Node: int y> {1102434494}" -> "if j#27 >= jend goto $l11 = sum#19 * sum#19 {29508156}";
"if j#27 >= jend goto $l11 = sum#19 * sum#19 {29508156}" -> "i#32 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {1198218100}";
"if j#27 >= jend goto $l11 = sum#19 * sum#19 {29508156}" -> "$l11 = sum#19 * sum#19 {1842370406}";
"i#32 = this.<kanzi.util.QuadTreeGenerator$Node: int x> {1198218100}" -> "if i#32 >= iend goto offs#24 = offs#24 + stride {2050630248}";
"if i#32 >= iend goto offs#24 = offs#24 + stride {2050630248}" -> "$i7 = offs#24 + i#32 {1825523319}";
"if i#32 >= iend goto offs#24 = offs#24 + stride {2050630248}" -> "offs#24 = offs#24 + stride {545624292}";
"$i7 = offs#24 + i#32 {1825523319}" -> "pixel = yBuffer[$i7] {1126512147}";
"pixel = yBuffer[$i7] {1126512147}" -> "$l8 = (long) pixel {1390993426}";
"$l8 = (long) pixel {1390993426}" -> "sum#19 = sum#19 + $l8 {345191106}";
"sum#19 = sum#19 + $l8 {345191106}" -> "$i9 = pixel * pixel {1324609425}";
"$i9 = pixel * pixel {1324609425}" -> "$l10 = (long) $i9 {1607381977}";
"$l10 = (long) $i9 {1607381977}" -> "sq_sum#17 = sq_sum#17 + $l10 {329165282}";
"sq_sum#17 = sq_sum#17 + $l10 {329165282}" -> "i#32 = i#32 + 1 {1119896423}";
"i#32 = i#32 + 1 {1119896423}" -> "goto [?= (branch)] {1748660381}";
"goto [?= (branch)] {1748660381}" -> "if i#32 >= iend goto offs#24 = offs#24 + stride {2050630248}";
"offs#24 = offs#24 + stride {545624292}" -> "j#27 = j#27 + 1 {2122268949}";
"j#27 = j#27 + 1 {2122268949}" -> "goto [?= (branch)] {2098220250}";
"goto [?= (branch)] {2098220250}" -> "if j#27 >= jend goto $l11 = sum#19 * sum#19 {29508156}";
"$l11 = sum#19 * sum#19 {1842370406}" -> "$l12 = (long) len {1565588050}";
"$l12 = (long) len {1565588050}" -> "$l13 = $l11 / $l12 {41662888}";
"$l13 = $l11 / $l12 {41662888}" -> "$l14 = sq_sum#17 - $l13 {1845470694}";
"$l14 = sq_sum#17 - $l13 {1845470694}" -> "$l15 = (long) len {1768948463}";
"$l15 = (long) len {1768948463}" -> "$l16 = $l14 / $l15 {916013200}";
"$l16 = $l14 / $l15 {916013200}" -> "$i17 = (int) $l16 {651756336}";
"$i17 = (int) $l16 {651756336}" -> "this.<kanzi.util.QuadTreeGenerator$Node: int variance> = $i17 {1382033077}";
"this.<kanzi.util.QuadTreeGenerator$Node: int variance> = $i17 {1382033077}" -> "$i18 = this.<kanzi.util.QuadTreeGenerator$Node: int variance> {1200585537}";
"$i18 = this.<kanzi.util.QuadTreeGenerator$Node: int variance> {1200585537}" -> "return $i18 {690036739}";
}


