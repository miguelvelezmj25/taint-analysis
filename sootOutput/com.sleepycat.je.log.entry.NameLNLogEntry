    public void <init>()
    {
        com.sleepycat.je.log.entry.NameLNLogEntry this;

        this := @this: com.sleepycat.je.log.entry.NameLNLogEntry;

        specialinvoke this.<com.sleepycat.je.log.entry.LNLogEntry: void <init>(java.lang.Class)>(class "com/sleepycat/je/tree/NameLN");

        return;
    }

    public void readEntry(com.sleepycat.je.dbi.EnvironmentImpl, com.sleepycat.je.log.LogEntryHeader, java.nio.ByteBuffer)
    {
        com.sleepycat.je.log.entry.NameLNLogEntry this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        com.sleepycat.je.log.LogEntryHeader header;
        java.nio.ByteBuffer entryBuffer;
        int version;
        com.sleepycat.je.log.entry.DbOperationType $r0, $r1, $r4, $r5, $r8;
        boolean $z0;
        com.sleepycat.je.dbi.ReplicatedDatabaseConfig $r2, $r3;
        com.sleepycat.je.dbi.DatabaseId $r6, $r7;

        this := @this: com.sleepycat.je.log.entry.NameLNLogEntry;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        header := @parameter1: com.sleepycat.je.log.LogEntryHeader;

        entryBuffer := @parameter2: java.nio.ByteBuffer;

        virtualinvoke this.<com.sleepycat.je.log.entry.NameLNLogEntry: void readBaseLNEntry(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.log.LogEntryHeader,java.nio.ByteBuffer,boolean)>(envImpl, header, entryBuffer, 0);

        version = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: int getVersion()>();

        if version < 6 goto label2;

        $r0 = staticinvoke <com.sleepycat.je.log.entry.DbOperationType: com.sleepycat.je.log.entry.DbOperationType readTypeFromLog(java.nio.ByteBuffer,int)>(entryBuffer, version);

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType> = $r0;

        $r1 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $z0 = staticinvoke <com.sleepycat.je.log.entry.DbOperationType: boolean isWriteConfigType(com.sleepycat.je.log.entry.DbOperationType)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new com.sleepycat.je.dbi.ReplicatedDatabaseConfig;

        specialinvoke $r2.<com.sleepycat.je.dbi.ReplicatedDatabaseConfig: void <init>()>();

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.ReplicatedDatabaseConfig replicatedCreateConfig> = $r2;

        $r3 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.ReplicatedDatabaseConfig replicatedCreateConfig>;

        virtualinvoke $r3.<com.sleepycat.je.dbi.ReplicatedDatabaseConfig: void readFromLog(java.nio.ByteBuffer,int)>(entryBuffer, version);

     label1:
        $r4 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $r5 = <com.sleepycat.je.log.entry.DbOperationType: com.sleepycat.je.log.entry.DbOperationType TRUNCATE>;

        if $r4 != $r5 goto label3;

        $r6 = new com.sleepycat.je.dbi.DatabaseId;

        specialinvoke $r6.<com.sleepycat.je.dbi.DatabaseId: void <init>()>();

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.DatabaseId truncateOldDbId> = $r6;

        $r7 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.DatabaseId truncateOldDbId>;

        virtualinvoke $r7.<com.sleepycat.je.dbi.DatabaseId: void readFromLog(java.nio.ByteBuffer,int)>(entryBuffer, version);

        goto label3;

     label2:
        $r8 = <com.sleepycat.je.log.entry.DbOperationType: com.sleepycat.je.log.entry.DbOperationType NONE>;

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType> = $r8;

     label3:
        return;
    }

    public void <init>(com.sleepycat.je.log.LogEntryType, com.sleepycat.je.dbi.DatabaseId, com.sleepycat.je.txn.Txn, long, boolean, byte[], com.sleepycat.je.tree.NameLN, com.sleepycat.je.log.ReplicationContext)
    {
        com.sleepycat.je.log.entry.NameLNLogEntry this;
        com.sleepycat.je.log.LogEntryType entryType;
        com.sleepycat.je.dbi.DatabaseId dbId, $r7;
        com.sleepycat.je.txn.Txn txn;
        long abortLsn;
        boolean abortKD, $z0;
        byte[] key;
        com.sleepycat.je.tree.NameLN nameLN;
        com.sleepycat.je.log.ReplicationContext repContext, operationContext;
        com.sleepycat.je.log.entry.DbOperationType $r0, $r1, $r4, $r5;
        com.sleepycat.je.log.DbOpReplicationContext $r2, $r6;
        com.sleepycat.je.dbi.ReplicatedDatabaseConfig $r3;

        this := @this: com.sleepycat.je.log.entry.NameLNLogEntry;

        entryType := @parameter0: com.sleepycat.je.log.LogEntryType;

        dbId := @parameter1: com.sleepycat.je.dbi.DatabaseId;

        txn := @parameter2: com.sleepycat.je.txn.Txn;

        abortLsn := @parameter3: long;

        abortKD := @parameter4: boolean;

        key := @parameter5: byte[];

        nameLN := @parameter6: com.sleepycat.je.tree.NameLN;

        repContext := @parameter7: com.sleepycat.je.log.ReplicationContext;

        specialinvoke this.<com.sleepycat.je.log.entry.LNLogEntry: void <init>(com.sleepycat.je.log.LogEntryType,com.sleepycat.je.dbi.DatabaseId,com.sleepycat.je.txn.Txn,long,boolean,byte[],byte[],long,int,boolean,byte[],com.sleepycat.je.tree.LN,boolean,int,boolean)>(entryType, dbId, txn, abortLsn, abortKD, null, null, -1L, 0, 0, key, nameLN, 0, 0, 0);

        operationContext = repContext;

        $r0 = virtualinvoke repContext.<com.sleepycat.je.log.ReplicationContext: com.sleepycat.je.log.entry.DbOperationType getDbOperationType()>();

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType> = $r0;

        $r1 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $z0 = staticinvoke <com.sleepycat.je.log.entry.DbOperationType: boolean isWriteConfigType(com.sleepycat.je.log.entry.DbOperationType)>($r1);

        if $z0 == 0 goto label1;

        $r2 = (com.sleepycat.je.log.DbOpReplicationContext) operationContext;

        $r3 = virtualinvoke $r2.<com.sleepycat.je.log.DbOpReplicationContext: com.sleepycat.je.dbi.ReplicatedDatabaseConfig getCreateConfig()>();

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.ReplicatedDatabaseConfig replicatedCreateConfig> = $r3;

     label1:
        $r4 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $r5 = <com.sleepycat.je.log.entry.DbOperationType: com.sleepycat.je.log.entry.DbOperationType TRUNCATE>;

        if $r4 != $r5 goto label2;

        $r6 = (com.sleepycat.je.log.DbOpReplicationContext) operationContext;

        $r7 = virtualinvoke $r6.<com.sleepycat.je.log.DbOpReplicationContext: com.sleepycat.je.dbi.DatabaseId getTruncateOldDbId()>();

        this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.DatabaseId truncateOldDbId> = $r7;

     label2:
        return;
    }

    public void writeEntry(java.nio.ByteBuffer, int, boolean)
    {
        com.sleepycat.je.log.entry.NameLNLogEntry this;
        java.nio.ByteBuffer destBuffer;
        int logVersion;
        boolean forReplication, $z0;
        com.sleepycat.je.log.entry.DbOperationType $r0, $r1, $r3, $r4;
        com.sleepycat.je.dbi.ReplicatedDatabaseConfig $r2;
        com.sleepycat.je.dbi.DatabaseId $r5;

        this := @this: com.sleepycat.je.log.entry.NameLNLogEntry;

        destBuffer := @parameter0: java.nio.ByteBuffer;

        logVersion := @parameter1: int;

        forReplication := @parameter2: boolean;

        virtualinvoke this.<com.sleepycat.je.log.entry.NameLNLogEntry: void writeBaseLNEntry(java.nio.ByteBuffer,int,boolean,boolean)>(destBuffer, 14, 0, 0);

        $r0 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        virtualinvoke $r0.<com.sleepycat.je.log.entry.DbOperationType: void writeToLog(java.nio.ByteBuffer,int,boolean)>(destBuffer, 14, 0);

        $r1 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $z0 = staticinvoke <com.sleepycat.je.log.entry.DbOperationType: boolean isWriteConfigType(com.sleepycat.je.log.entry.DbOperationType)>($r1);

        if $z0 == 0 goto label1;

        $r2 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.ReplicatedDatabaseConfig replicatedCreateConfig>;

        virtualinvoke $r2.<com.sleepycat.je.dbi.ReplicatedDatabaseConfig: void writeToLog(java.nio.ByteBuffer,int,boolean)>(destBuffer, 14, 0);

     label1:
        $r3 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $r4 = <com.sleepycat.je.log.entry.DbOperationType: com.sleepycat.je.log.entry.DbOperationType TRUNCATE>;

        if $r3 != $r4 goto label2;

        $r5 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.DatabaseId truncateOldDbId>;

        virtualinvoke $r5.<com.sleepycat.je.dbi.DatabaseId: void writeToLog(java.nio.ByteBuffer,int,boolean)>(destBuffer, 14, 0);

     label2:
        return;
    }

    public int getSize(int, boolean)
    {
        com.sleepycat.je.log.entry.NameLNLogEntry this;
        int logVersion, size#6, $i0, size#14, $i1, $i2;
        boolean forReplication, $z0;
        com.sleepycat.je.log.entry.DbOperationType $r0, $r1, $r3, $r4;
        com.sleepycat.je.dbi.ReplicatedDatabaseConfig $r2;
        com.sleepycat.je.dbi.DatabaseId $r5;

        this := @this: com.sleepycat.je.log.entry.NameLNLogEntry;

        logVersion := @parameter0: int;

        forReplication := @parameter1: boolean;

        size#6 = virtualinvoke this.<com.sleepycat.je.log.entry.NameLNLogEntry: int getBaseLNEntrySize(int,boolean,boolean)>(14, 0, 0);

        $r0 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $i0 = 1;

        size#14 = size#6 + 1;

        $r1 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $z0 = staticinvoke <com.sleepycat.je.log.entry.DbOperationType: boolean isWriteConfigType(com.sleepycat.je.log.entry.DbOperationType)>($r1);

        if $z0 == 0 goto label1;

        $r2 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.ReplicatedDatabaseConfig replicatedCreateConfig>;

        $i1 = virtualinvoke $r2.<com.sleepycat.je.dbi.ReplicatedDatabaseConfig: int getLogSize(int,boolean)>(14, 0);

        size#14 = size#14 + $i1;

     label1:
        $r3 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.log.entry.DbOperationType operationType>;

        $r4 = <com.sleepycat.je.log.entry.DbOperationType: com.sleepycat.je.log.entry.DbOperationType TRUNCATE>;

        if $r3 != $r4 goto label2;

        $r5 = this.<com.sleepycat.je.log.entry.NameLNLogEntry: com.sleepycat.je.dbi.DatabaseId truncateOldDbId>;

        $i2 = virtualinvoke $r5.<com.sleepycat.je.dbi.DatabaseId: int getLogSize(int,boolean)>(14, 0);

        size#14 = size#14 + $i2;

     label2:
        return size#14;
    }


