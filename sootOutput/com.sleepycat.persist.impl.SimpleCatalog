    static boolean addMissingSimpleFormats(java.lang.ClassLoader, java.util.List)
    {
        java.lang.ClassLoader loader;
        java.util.List copyToList, $r1, $r7;
        com.sleepycat.persist.impl.Format thisFormat, otherFormat, $r4;
        boolean anyCopied#2, $z0;
        com.sleepycat.persist.impl.SimpleCatalog tempCatalog#4, $r0, $r6;
        int i#6;
        java.lang.Object $r2, $r3, $r8;
        java.lang.AssertionError $r5;

        loader := @parameter0: java.lang.ClassLoader;

        copyToList := @parameter1: java.util.List;

        anyCopied#2 = 0;

        tempCatalog#4 = null;

        i#6 = 0;

     label1:
        if i#6 > 30 goto label5;

        $r0 = <com.sleepycat.persist.impl.SimpleCatalog: com.sleepycat.persist.impl.SimpleCatalog instance>;

        $r1 = $r0.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i#6);

        thisFormat = (com.sleepycat.persist.impl.Format) $r2;

        $r3 = interfaceinvoke copyToList.<java.util.List: java.lang.Object get(int)>(i#6);

        otherFormat = (com.sleepycat.persist.impl.Format) $r3;

        if thisFormat == null goto label4;

        if otherFormat != null goto label4;

        $z0 = <com.sleepycat.persist.impl.SimpleCatalog: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke thisFormat.<com.sleepycat.persist.impl.Format: com.sleepycat.persist.impl.Format getWrapperFormat()>();

        if $r4 == null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        if tempCatalog#4 != null goto label3;

        $r6 = new com.sleepycat.persist.impl.SimpleCatalog;

        specialinvoke $r6.<com.sleepycat.persist.impl.SimpleCatalog: void <init>(java.lang.ClassLoader)>(loader);

        tempCatalog#4 = $r6;

     label3:
        $r7 = tempCatalog#4.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i#6);

        interfaceinvoke copyToList.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i#6, $r8);

        anyCopied#2 = 1;

     label4:
        i#6 = i#6 + 1;

        goto label1;

     label5:
        return anyCopied#2;
    }

    static java.util.List getAllSimpleFormats(java.lang.ClassLoader)
    {
        java.lang.ClassLoader loader;
        java.util.ArrayList $r0;
        com.sleepycat.persist.impl.SimpleCatalog $r1;
        java.util.List $r2;

        loader := @parameter0: java.lang.ClassLoader;

        $r0 = new java.util.ArrayList;

        $r1 = new com.sleepycat.persist.impl.SimpleCatalog;

        specialinvoke $r1.<com.sleepycat.persist.impl.SimpleCatalog: void <init>(java.lang.ClassLoader)>(loader);

        $r2 = $r1.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49;
        boolean $z0, $z1;
        java.util.HashMap $r1, $r26;
        java.util.Map $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48;
        com.sleepycat.persist.impl.SimpleCatalog $r51;

        $r0 = class "com/sleepycat/persist/impl/SimpleCatalog";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.persist.impl.SimpleCatalog: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(8);

        <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive> = $r1;

        $r2 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("boolean", $r3);

        $r5 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("char", $r6);

        $r8 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r9 = <java.lang.Byte: java.lang.Class TYPE>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("byte", $r9);

        $r11 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r12 = <java.lang.Short: java.lang.Class TYPE>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("short", $r12);

        $r14 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("int", $r15);

        $r17 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r18 = <java.lang.Long: java.lang.Class TYPE>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("long", $r18);

        $r20 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r21 = <java.lang.Float: java.lang.Class TYPE>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("float", $r21);

        $r23 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r24 = <java.lang.Double: java.lang.Class TYPE>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("double", $r24);

        $r26 = new java.util.HashMap;

        specialinvoke $r26.<java.util.HashMap: void <init>(int)>(8);

        <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper> = $r26;

        $r27 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r28 = <java.lang.Boolean: java.lang.Class TYPE>;

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, class "java/lang/Boolean");

        $r30 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r31 = <java.lang.Character: java.lang.Class TYPE>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, class "java/lang/Character");

        $r33 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r34 = <java.lang.Byte: java.lang.Class TYPE>;

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, class "java/lang/Byte");

        $r36 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r37 = <java.lang.Short: java.lang.Class TYPE>;

        interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, class "java/lang/Short");

        $r39 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r40 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, class "java/lang/Integer");

        $r42 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r43 = <java.lang.Long: java.lang.Class TYPE>;

        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, class "java/lang/Long");

        $r45 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r46 = <java.lang.Float: java.lang.Class TYPE>;

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, class "java/lang/Float");

        $r48 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r49 = <java.lang.Double: java.lang.Class TYPE>;

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r49, class "java/lang/Double");

        $r51 = new com.sleepycat.persist.impl.SimpleCatalog;

        specialinvoke $r51.<com.sleepycat.persist.impl.SimpleCatalog: void <init>(java.lang.ClassLoader)>(null);

        <com.sleepycat.persist.impl.SimpleCatalog: com.sleepycat.persist.impl.SimpleCatalog instance> = $r51;

        return;
    }

    void <init>(java.lang.ClassLoader)
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        java.lang.ClassLoader classLoader;
        byte initCapacity;
        java.util.ArrayList $r0;
        java.util.HashMap $r1;
        int i#14;
        java.util.List $r2;
        com.sleepycat.persist.impl.SimpleFormat$FBool $r3, $r4;
        com.sleepycat.persist.impl.SimpleFormat$FByte $r5, $r6;
        com.sleepycat.persist.impl.SimpleFormat$FShort $r7, $r8;
        com.sleepycat.persist.impl.SimpleFormat$FInt $r9, $r10;
        com.sleepycat.persist.impl.SimpleFormat$FLong $r11, $r12;
        com.sleepycat.persist.impl.SimpleFormat$FFloat $r13, $r14;
        com.sleepycat.persist.impl.SimpleFormat$FDouble $r15, $r16;
        com.sleepycat.persist.impl.SimpleFormat$FChar $r17, $r18;
        com.sleepycat.persist.impl.SimpleFormat$FString $r19;
        com.sleepycat.persist.impl.SimpleFormat$FBigInt $r20;
        com.sleepycat.persist.impl.SimpleFormat$FBigDec $r21;
        com.sleepycat.persist.impl.SimpleFormat$FDate $r22;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        classLoader := @parameter0: java.lang.ClassLoader;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.persist.impl.SimpleCatalog: java.lang.ClassLoader classLoader> = classLoader;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(60);

        this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(60);

        this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.Map formatMap> = $r1;

        i#14 = 0;

     label1:
        if i#14 > 30 goto label2;

        $r2 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(null);

        i#14 = i#14 + 1;

        goto label1;

     label2:
        $r3 = new com.sleepycat.persist.impl.SimpleFormat$FBool;

        specialinvoke $r3.<com.sleepycat.persist.impl.SimpleFormat$FBool: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(2, $r3);

        $r4 = new com.sleepycat.persist.impl.SimpleFormat$FBool;

        specialinvoke $r4.<com.sleepycat.persist.impl.SimpleFormat$FBool: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(3, $r4);

        $r5 = new com.sleepycat.persist.impl.SimpleFormat$FByte;

        specialinvoke $r5.<com.sleepycat.persist.impl.SimpleFormat$FByte: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(4, $r5);

        $r6 = new com.sleepycat.persist.impl.SimpleFormat$FByte;

        specialinvoke $r6.<com.sleepycat.persist.impl.SimpleFormat$FByte: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(5, $r6);

        $r7 = new com.sleepycat.persist.impl.SimpleFormat$FShort;

        specialinvoke $r7.<com.sleepycat.persist.impl.SimpleFormat$FShort: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(6, $r7);

        $r8 = new com.sleepycat.persist.impl.SimpleFormat$FShort;

        specialinvoke $r8.<com.sleepycat.persist.impl.SimpleFormat$FShort: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(7, $r8);

        $r9 = new com.sleepycat.persist.impl.SimpleFormat$FInt;

        specialinvoke $r9.<com.sleepycat.persist.impl.SimpleFormat$FInt: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(8, $r9);

        $r10 = new com.sleepycat.persist.impl.SimpleFormat$FInt;

        specialinvoke $r10.<com.sleepycat.persist.impl.SimpleFormat$FInt: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(9, $r10);

        $r11 = new com.sleepycat.persist.impl.SimpleFormat$FLong;

        specialinvoke $r11.<com.sleepycat.persist.impl.SimpleFormat$FLong: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(10, $r11);

        $r12 = new com.sleepycat.persist.impl.SimpleFormat$FLong;

        specialinvoke $r12.<com.sleepycat.persist.impl.SimpleFormat$FLong: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(11, $r12);

        $r13 = new com.sleepycat.persist.impl.SimpleFormat$FFloat;

        specialinvoke $r13.<com.sleepycat.persist.impl.SimpleFormat$FFloat: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(12, $r13);

        $r14 = new com.sleepycat.persist.impl.SimpleFormat$FFloat;

        specialinvoke $r14.<com.sleepycat.persist.impl.SimpleFormat$FFloat: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(13, $r14);

        $r15 = new com.sleepycat.persist.impl.SimpleFormat$FDouble;

        specialinvoke $r15.<com.sleepycat.persist.impl.SimpleFormat$FDouble: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(14, $r15);

        $r16 = new com.sleepycat.persist.impl.SimpleFormat$FDouble;

        specialinvoke $r16.<com.sleepycat.persist.impl.SimpleFormat$FDouble: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(15, $r16);

        $r17 = new com.sleepycat.persist.impl.SimpleFormat$FChar;

        specialinvoke $r17.<com.sleepycat.persist.impl.SimpleFormat$FChar: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 1);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(16, $r17);

        $r18 = new com.sleepycat.persist.impl.SimpleFormat$FChar;

        specialinvoke $r18.<com.sleepycat.persist.impl.SimpleFormat$FChar: void <init>(com.sleepycat.persist.impl.Catalog,boolean)>(this, 0);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(17, $r18);

        $r19 = new com.sleepycat.persist.impl.SimpleFormat$FString;

        specialinvoke $r19.<com.sleepycat.persist.impl.SimpleFormat$FString: void <init>(com.sleepycat.persist.impl.Catalog)>(this);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(18, $r19);

        $r20 = new com.sleepycat.persist.impl.SimpleFormat$FBigInt;

        specialinvoke $r20.<com.sleepycat.persist.impl.SimpleFormat$FBigInt: void <init>(com.sleepycat.persist.impl.Catalog)>(this);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(19, $r20);

        $r21 = new com.sleepycat.persist.impl.SimpleFormat$FBigDec;

        specialinvoke $r21.<com.sleepycat.persist.impl.SimpleFormat$FBigDec: void <init>(com.sleepycat.persist.impl.Catalog)>(this);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(20, $r21);

        $r22 = new com.sleepycat.persist.impl.SimpleFormat$FDate;

        specialinvoke $r22.<com.sleepycat.persist.impl.SimpleFormat$FDate: void <init>(com.sleepycat.persist.impl.Catalog)>(this);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setFormat(int,com.sleepycat.persist.impl.SimpleFormat)>(21, $r22);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(2, 3);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(4, 5);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(6, 7);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(8, 9);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(10, 11);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(12, 13);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(14, 15);

        specialinvoke this.<com.sleepycat.persist.impl.SimpleCatalog: void setWrapper(int,int)>(16, 17);

        return;
    }

    private void setFormat(int, com.sleepycat.persist.impl.SimpleFormat)
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        int id;
        com.sleepycat.persist.impl.SimpleFormat format;
        java.util.List $r0;
        java.util.Map $r2;
        java.lang.String $r3;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        id := @parameter0: int;

        format := @parameter1: com.sleepycat.persist.impl.SimpleFormat;

        virtualinvoke format.<com.sleepycat.persist.impl.SimpleFormat: void setId(int)>(id);

        virtualinvoke format.<com.sleepycat.persist.impl.SimpleFormat: void initializeIfNeeded(com.sleepycat.persist.impl.Catalog,com.sleepycat.persist.model.EntityModel)>(this, null);

        $r0 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(id, format);

        $r2 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.Map formatMap>;

        $r3 = virtualinvoke format.<com.sleepycat.persist.impl.SimpleFormat: java.lang.String getClassName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, format);

        return;
    }

    private void setWrapper(int, int)
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        int primitiveId, wrapperId;
        com.sleepycat.persist.impl.SimpleFormat primitiveFormat, wrapperFormat;
        java.util.List $r0, $r2;
        java.lang.Object $r1, $r3;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        primitiveId := @parameter0: int;

        wrapperId := @parameter1: int;

        $r0 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(primitiveId);

        primitiveFormat = (com.sleepycat.persist.impl.SimpleFormat) $r1;

        $r2 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(wrapperId);

        wrapperFormat = (com.sleepycat.persist.impl.SimpleFormat) $r3;

        virtualinvoke primitiveFormat.<com.sleepycat.persist.impl.SimpleFormat: void setWrapperFormat(com.sleepycat.persist.impl.SimpleFormat)>(wrapperFormat);

        return;
    }

    public boolean isRawAccess()
    {
        com.sleepycat.persist.impl.SimpleCatalog this;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        return 0;
    }

    public int getInitVersion(com.sleepycat.persist.impl.Format, boolean)
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        com.sleepycat.persist.impl.Format format;
        boolean forReader;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        format := @parameter0: com.sleepycat.persist.impl.Format;

        forReader := @parameter1: boolean;

        return 1;
    }

    public static boolean allowRegisterProxy(java.lang.Class)
    {
        java.lang.Class type;
        boolean $z0, $z1;

        type := @parameter0: java.lang.Class;

        $z0 = staticinvoke <com.sleepycat.persist.impl.SimpleCatalog: boolean isSimpleType(java.lang.Class)>(type);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static boolean isSimpleType(java.lang.Class)
    {
        java.lang.Class type;
        com.sleepycat.persist.impl.SimpleCatalog $r0;
        java.util.Map $r1;
        java.lang.String $r2;
        boolean $z0;

        type := @parameter0: java.lang.Class;

        $r0 = <com.sleepycat.persist.impl.SimpleCatalog: com.sleepycat.persist.impl.SimpleCatalog instance>;

        $r1 = $r0.<com.sleepycat.persist.impl.SimpleCatalog: java.util.Map formatMap>;

        $r2 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public static java.lang.Class resolveClass(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        java.lang.String className;
        java.lang.ClassLoader loader;
        java.util.Map $r0;
        java.lang.Object $r1;
        java.lang.Class cls#5;

        className := @parameter0: java.lang.String;

        loader := @parameter1: java.lang.ClassLoader;

        $r0 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        cls#5 = (java.lang.Class) $r1;

        if cls#5 != null goto label1;

        cls#5 = staticinvoke <com.sleepycat.util.ClassResolver: java.lang.Class resolveClass(java.lang.String,java.lang.ClassLoader)>(className, loader);

     label1:
        return cls#5;
    }

    public static java.lang.Class resolveKeyClass(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String className, $r9;
        java.lang.ClassLoader loader;
        java.lang.ClassNotFoundException e, $r4;
        java.util.Map $r0, $r2;
        java.lang.Object $r1, $r3;
        java.lang.Class cls#5, cls#11;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        className := @parameter0: java.lang.String;

        loader := @parameter1: java.lang.ClassLoader;

        $r0 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        cls#5 = (java.lang.Class) $r1;

        if cls#5 == null goto label1;

        $r2 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(cls#5);

        cls#11 = (java.lang.Class) $r3;

        goto label4;

     label1:
        cls#11 = staticinvoke <com.sleepycat.util.ClassResolver: java.lang.Class resolveClass(java.lang.String,java.lang.ClassLoader)>(className, loader);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key class not found: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        return cls#11;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.Class resolveClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        java.lang.String clsName;
        java.lang.ClassLoader $r0;
        java.lang.Class $r1;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        clsName := @parameter0: java.lang.String;

        $r0 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.lang.ClassLoader classLoader>;

        $r1 = staticinvoke <com.sleepycat.persist.impl.SimpleCatalog: java.lang.Class resolveClass(java.lang.String,java.lang.ClassLoader)>(clsName, $r0);

        return $r1;
    }

    public static java.lang.String keyClassName(java.lang.String)
    {
        java.lang.String className, $r4;
        java.util.Map $r0, $r2;
        java.lang.Object $r1, $r3;
        java.lang.Class cls#5, cls#11;

        className := @parameter0: java.lang.String;

        $r0 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map keywordToPrimitive>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        cls#5 = (java.lang.Class) $r1;

        if cls#5 == null goto label1;

        $r2 = <com.sleepycat.persist.impl.SimpleCatalog: java.util.Map primitiveTypeToWrapper>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(cls#5);

        cls#11 = (java.lang.Class) $r3;

        $r4 = virtualinvoke cls#11.<java.lang.Class: java.lang.String getName()>();

        return $r4;

     label1:
        return className;
    }

    public com.sleepycat.persist.impl.Format getFormat(java.lang.String)
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        java.lang.String className;
        java.util.Map $r0;
        java.lang.Object $r1;
        com.sleepycat.persist.impl.Format $r2;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        className := @parameter0: java.lang.String;

        $r0 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.Map formatMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(className);

        $r2 = (com.sleepycat.persist.impl.Format) $r1;

        return $r2;
    }

    public com.sleepycat.persist.impl.Format getFormat(int, boolean)
    {
        com.sleepycat.persist.impl.SimpleCatalog this;
        int formatId;
        boolean expectStored;
        com.sleepycat.persist.impl.Format format;
        java.util.NoSuchElementException e, $r8;
        java.util.List $r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        java.lang.RuntimeException $r6, $r13;

        this := @this: com.sleepycat.persist.impl.SimpleCatalog;

        formatId := @parameter0: int;

        expectStored := @parameter1: boolean;

     label1:
        $r0 = this.<com.sleepycat.persist.impl.SimpleCatalog: java.util.List formatList>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(formatId);

        format = (com.sleepycat.persist.impl.Format) $r1;

        if format != null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a simple type: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(formatId);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r5);

        throw $r6;

     label2:
        return format;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a simple type: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(formatId);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r12);

        throw $r13;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }


