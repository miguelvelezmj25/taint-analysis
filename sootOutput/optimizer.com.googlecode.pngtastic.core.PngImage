    public void <init>(java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.lang.String fileName, logLevel;
        java.io.FileInputStream $r0;
        java.io.BufferedInputStream $r1;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        fileName := @parameter0: java.lang.String;

        nop;

        logLevel := @parameter1: java.lang.String;

        nop;

        $r1 = new java.io.BufferedInputStream;

        nop;

        $r0 = new java.io.FileInputStream;

        nop;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(fileName);

        nop;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r0);

        nop;

        specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: void <init>(java.io.InputStream,java.lang.String)>($r1, logLevel);

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.lang.String fileName> = fileName;

        nop;

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String)
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.InputStream ins;
        java.lang.String logLevel, $r4, $r5, $r10, $r12;
        java.io.DataInputStream dis, $r1;
        int length;
        byte[] type, data;
        long crc;
        optimizer.com.googlecode.pngtastic.core.PngChunk chunk, $r2;
        java.io.IOException e, $r6;
        optimizer.com.googlecode.pngtastic.core.Logger $r0;
        boolean $z0, $z1;
        optimizer.com.googlecode.pngtastic.core.PngException $r3, $r7;
        java.lang.StringBuilder $r8, $r9, $r11;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        ins := @parameter0: java.io.InputStream;

        nop;

        logLevel := @parameter1: java.lang.String;

        nop;

        $r0 = new optimizer.com.googlecode.pngtastic.core.Logger;

        nop;

        specialinvoke $r0.<optimizer.com.googlecode.pngtastic.core.Logger: void <init>(java.lang.String)>(logLevel);

        nop;

        specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: void <init>(optimizer.com.googlecode.pngtastic.core.Logger)>($r0);

     label1:
        nop;

        $r1 = new java.io.DataInputStream;

        nop;

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>(ins);

        nop;

        dis = $r1;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.PngImage: void readSignature(java.io.DataInputStream)>(dis);

     label2:
        nop;

        length = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: int getChunkLength(java.io.DataInputStream)>(dis);

        nop;

        type = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: byte[] getChunkType(java.io.InputStream)>(dis);

        nop;

        data = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: byte[] getChunkData(java.io.InputStream,int)>(dis, length);

        nop;

        crc = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: long getChunkCrc(java.io.DataInputStream)>(dis);

        nop;

        $r2 = new optimizer.com.googlecode.pngtastic.core.PngChunk;

        nop;

        specialinvoke $r2.<optimizer.com.googlecode.pngtastic.core.PngChunk: void <init>(byte[],byte[])>(type, data);

        nop;

        chunk = $r2;

        nop;

        $z0 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: boolean verifyCRC(long)>(crc);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 != 0 goto label3;

        nop;

        $r3 = new optimizer.com.googlecode.pngtastic.core.PngException;

        nop;

        specialinvoke $r3.<optimizer.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>("Corrupted file, crc check failed");

        nop;

        throw $r3;

     label3:
        nop;

        virtualinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: void addChunk(optimizer.com.googlecode.pngtastic.core.PngChunk)>(chunk);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length);

        nop;

        if length <= 0 goto label4;

        nop;

        $r4 = "IEND";

        nop;

        $r5 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        nop;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        nop;

        if $z1 == 0 goto label2;

     label4:
        nop;

        goto label6;

     label5:
        nop;

        $r6 := @caughtexception;

        nop;

        e = $r6;

        nop;

        $r7 = new optimizer.com.googlecode.pngtastic.core.PngException;

        nop;

        $r8 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        nop;

        $r10 = virtualinvoke e.<java.io.IOException: java.lang.String getMessage()>();

        nop;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        nop;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r7.<optimizer.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String,java.lang.Throwable)>($r12, e);

        nop;

        throw $r7;

     label6:
        nop;

        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private static void readSignature(java.io.DataInputStream) throws optimizer.com.googlecode.pngtastic.core.PngException, java.io.IOException
    {
        java.io.DataInputStream ins;
        long signature;
        byte $b0;
        optimizer.com.googlecode.pngtastic.core.PngException $r0;

        nop;

        ins := @parameter0: java.io.DataInputStream;

        nop;

        signature = virtualinvoke ins.<java.io.DataInputStream: long readLong()>();

        nop;

        $b0 = signature cmp -8552249625308161526L;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        nop;

        if $b0 == 0 goto label1;

        nop;

        $r0 = new optimizer.com.googlecode.pngtastic.core.PngException;

        nop;

        specialinvoke $r0.<optimizer.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>("Bad png signature");

        nop;

        throw $r0;

     label1:
        nop;

        return;
    }

    public void <init>(optimizer.com.googlecode.pngtastic.core.Logger)
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        optimizer.com.googlecode.pngtastic.core.Logger log;
        java.util.ArrayList $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        log := @parameter0: optimizer.com.googlecode.pngtastic.core.Logger;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        $r0 = new java.util.ArrayList;

        nop;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.util.List chunks> = $r0;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.Logger log> = log;

        nop;

        return;
    }

    private int getChunkLength(java.io.DataInputStream) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.DataInputStream ins;
        int $i0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        ins := @parameter0: java.io.DataInputStream;

        nop;

        $i0 = virtualinvoke ins.<java.io.DataInputStream: int readInt()>();

        nop;

        return $i0;
    }

    private byte[] getChunkType(java.io.InputStream) throws optimizer.com.googlecode.pngtastic.core.PngException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.InputStream ins;
        byte[] $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        ins := @parameter0: java.io.InputStream;

        nop;

        $r0 = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: byte[] getChunkData(java.io.InputStream,int)>(ins, 4);

        nop;

        return $r0;
    }

    private byte[] getChunkData(java.io.InputStream, int) throws optimizer.com.googlecode.pngtastic.core.PngException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.InputStream ins;
        int length, actual;
        byte[] data;
        java.io.IOException e, $r5;
        optimizer.com.googlecode.pngtastic.core.PngException $r0, $r6;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        ins := @parameter0: java.io.InputStream;

        nop;

        length := @parameter1: int;

        nop;

        data = newarray (byte)[length];

     label1:
        nop;

        actual = virtualinvoke ins.<java.io.InputStream: int read(byte[])>(data);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(actual);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length);

        nop;

        if actual >= length goto label2;

        nop;

        $r0 = new optimizer.com.googlecode.pngtastic.core.PngException;

        nop;

        $r1 = newarray (java.lang.Object)[2];

        nop;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(length);

        nop;

        $r1[0] = $r2;

        nop;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(actual);

        nop;

        $r1[1] = $r3;

        nop;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Expected %d bytes but got %d", $r1);

        nop;

        specialinvoke $r0.<optimizer.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>($r4);

        nop;

        throw $r0;

     label2:
        nop;

        goto label4;

     label3:
        nop;

        $r5 := @caughtexception;

        nop;

        e = $r5;

        nop;

        $r6 = new optimizer.com.googlecode.pngtastic.core.PngException;

        nop;

        specialinvoke $r6.<optimizer.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String,java.lang.Throwable)>("Error reading chunk data", e);

        nop;

        throw $r6;

     label4:
        nop;

        return data;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private long getChunkCrc(java.io.DataInputStream) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.DataInputStream ins;
        int i;
        long crc, $l0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        ins := @parameter0: java.io.DataInputStream;

        nop;

        i = virtualinvoke ins.<java.io.DataInputStream: int readInt()>();

        nop;

        $l0 = (long) i;

        nop;

        crc = $l0 & 4294967295L;

        nop;

        return crc;
    }

    public void addChunk(optimizer.com.googlecode.pngtastic.core.PngChunk)
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        optimizer.com.googlecode.pngtastic.core.PngChunk chunk;
        java.lang.String l2;
        byte l3#4;
        int $i0;
        boolean $z0, $z1;
        long $l1, $l2;
        short $s3, $s4, $s5;
        java.util.List $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        chunk := @parameter0: optimizer.com.googlecode.pngtastic.core.PngChunk;

        nop;

        l2 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        nop;

        l3#4 = -1;

        nop;

        $i0 = virtualinvoke l2.<java.lang.String: int hashCode()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        lookupswitch($i0)
        {
            case 2246125: goto label1;
            case 2458989: goto label2;
            default: goto label3;
        };

     label1:
        nop;

        $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("IHDR");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 == 0 goto label3;

        nop;

        l3#4 = 0;

        nop;

        goto label3;

     label2:
        nop;

        $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("PLTE");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        nop;

        if $z1 == 0 goto label3;

        nop;

        l3#4 = 1;

     label3:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#4);

        nop;

        lookupswitch(l3#4)
        {
            case 0: goto label4;
            case 1: goto label5;
            default: goto label6;
        };

     label4:
        nop;

        $l1 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: long getWidth()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: long width> = $l1;

        nop;

        $l2 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: long getHeight()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: long height> = $l2;

        nop;

        $s3 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: short getBitDepth()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: short bitDepth> = $s3;

        nop;

        $s4 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: short getColorType()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: short colorType> = $s4;

        nop;

        $s5 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: short getInterlace()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: short interlace> = $s5;

        nop;

        goto label6;

     label5:
        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.PngChunk palette> = chunk;

     label6:
        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.util.List chunks>;

        nop;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(chunk);

        nop;

        return;
    }

    public java.lang.String getFileName()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.lang.String $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.lang.String fileName>;

        nop;

        return $r0;
    }

    public long getWidth()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        long $l0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        $l0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: long width>;

        nop;

        return $l0;
    }

    public long getHeight()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        long $l0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        $l0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: long height>;

        nop;

        return $l0;
    }

    public java.io.DataOutputStream writeDataOutputStream(java.io.OutputStream) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.OutputStream output;
        java.io.DataOutputStream outs, $r0;
        java.util.Iterator l3;
        optimizer.com.googlecode.pngtastic.core.PngChunk chunk;
        int i, $i0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;
        optimizer.com.googlecode.pngtastic.core.Logger $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5;
        byte[] $r6, $r7;
        long $l1;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        output := @parameter0: java.io.OutputStream;

        nop;

        $r0 = new java.io.DataOutputStream;

        nop;

        specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(output);

        nop;

        outs = $r0;

        nop;

        virtualinvoke outs.<java.io.DataOutputStream: void writeLong(long)>(-8552249625308161526L);

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.util.List chunks>;

        nop;

        l3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        nop;

        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 == 0 goto label2;

        nop;

        $r2 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        nop;

        chunk = (optimizer.com.googlecode.pngtastic.core.PngChunk) $r2;

        nop;

        $r3 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.Logger log>;

        nop;

        $r4 = newarray (java.lang.Object)[1];

        nop;

        $r5 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: java.lang.String toString()>();

        nop;

        $r4[0] = $r5;

        nop;

        virtualinvoke $r3.<optimizer.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("export: %s", $r4);

        nop;

        $i0 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: int getLength()>();

        nop;

        virtualinvoke outs.<java.io.DataOutputStream: void writeInt(int)>($i0);

        nop;

        $r6 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: byte[] getType()>();

        nop;

        virtualinvoke outs.<java.io.DataOutputStream: void write(byte[])>($r6);

        nop;

        $r7 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: byte[] getData()>();

        nop;

        virtualinvoke outs.<java.io.DataOutputStream: void write(byte[])>($r7);

        nop;

        $l1 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: long getCRC()>();

        nop;

        i = (int) $l1;

        nop;

        virtualinvoke outs.<java.io.DataOutputStream: void writeInt(int)>(i);

        nop;

        goto label1;

     label2:
        nop;

        virtualinvoke outs.<java.io.DataOutputStream: void close()>();

        nop;

        return outs;
    }

    public java.io.File export(java.lang.String, byte[]) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.lang.String fileName;
        byte[] bytes;
        java.io.File out, $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        fileName := @parameter0: java.lang.String;

        nop;

        bytes := @parameter1: byte[];

        nop;

        $r0 = new java.io.File;

        nop;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(fileName);

        nop;

        out = $r0;

        nop;

        virtualinvoke this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.io.FileOutputStream writeFileOutputStream(java.io.File,byte[])>(out, bytes);

        nop;

        return out;
    }

    java.io.FileOutputStream writeFileOutputStream(java.io.File, byte[]) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.File out;
        byte[] bytes;
        java.lang.Throwable l4, $r1;
        java.io.FileOutputStream outs#2, $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        out := @parameter0: java.io.File;

        nop;

        bytes := @parameter1: byte[];

        nop;

        outs#2 = null;

     label1:
        nop;

        $r0 = new java.io.FileOutputStream;

        nop;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(out);

        nop;

        outs#2 = $r0;

        nop;

        virtualinvoke outs#2.<java.io.FileOutputStream: void write(byte[])>(bytes);

     label2:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(outs#2);

        nop;

        if outs#2 == null goto label7;

        nop;

        virtualinvoke outs#2.<java.io.FileOutputStream: void close()>();

        nop;

        goto label7;

     label3:
        nop;

        $r1 := @caughtexception;

     label4:
        nop;

        l4 = $r1;

     label5:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(outs#2);

        nop;

        if outs#2 == null goto label6;

        nop;

        virtualinvoke outs#2.<java.io.FileOutputStream: void close()>();

     label6:
        nop;

        throw l4;

     label7:
        nop;

        return outs#2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setInterlace(short)
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        short interlace;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        interlace := @parameter0: short;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: short interlace> = interlace;

        nop;

        return;
    }

    public java.util.List getChunks()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.util.List $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.util.List chunks>;

        nop;

        return $r0;
    }

    public short getInterlace()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        short $s0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        $s0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: short interlace>;

        nop;

        return $s0;
    }

    public int getSampleBitCount()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        optimizer.com.googlecode.pngtastic.core.PngImageType $r1, $r2, $r3;
        short $s0, $s2;
        int $i1, $i3;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.PngImageType imageType>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        nop;

        if $r1 != null goto label1;

        nop;

        $s0 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: short colorType>;

        nop;

        $r2 = staticinvoke <optimizer.com.googlecode.pngtastic.core.PngImageType: optimizer.com.googlecode.pngtastic.core.PngImageType forColorType(int)>($s0);

        nop;

        goto label2;

     label1:
        nop;

        $r2 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.PngImageType imageType>;

     label2:
        nop;

        this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.PngImageType imageType> = $r2;

        nop;

        $r3 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: optimizer.com.googlecode.pngtastic.core.PngImageType imageType>;

        nop;

        $i1 = virtualinvoke $r3.<optimizer.com.googlecode.pngtastic.core.PngImageType: int channelCount()>();

        nop;

        $s2 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: short bitDepth>;

        nop;

        $i3 = $i1 * $s2;

        nop;

        return $i3;
    }

    public byte[] getImageData()
    {
        optimizer.com.googlecode.pngtastic.core.PngImage this;
        java.io.ByteArrayOutputStream out, $r0;
        java.util.Iterator l2;
        optimizer.com.googlecode.pngtastic.core.PngChunk chunk;
        java.io.IOException e, $r6;
        java.util.List $r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.lang.String $r3, $r11;
        byte[] $r4, $r5;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.PngImage;

     label1:
        nop;

        $r0 = new java.io.ByteArrayOutputStream;

        nop;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        nop;

        out = $r0;

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.PngImage: java.util.List chunks>;

        nop;

        l2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        nop;

        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 == 0 goto label4;

        nop;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        nop;

        chunk = (optimizer.com.googlecode.pngtastic.core.PngChunk) $r2;

        nop;

        $r3 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        nop;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("IDAT");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        nop;

        if $z1 == 0 goto label3;

        nop;

        $r4 = virtualinvoke chunk.<optimizer.com.googlecode.pngtastic.core.PngChunk: byte[] getData()>();

        nop;

        virtualinvoke out.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

     label3:
        nop;

        goto label2;

     label4:
        nop;

        $r5 = virtualinvoke out.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label5:
        nop;

        return $r5;

     label6:
        nop;

        $r6 := @caughtexception;

        nop;

        e = $r6;

        nop;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        nop;

        $r8 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t get image data: ");

        nop;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);

        nop;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        nop;

        return null;

        catch java.io.IOException from label1 to label5 with label6;
    }


