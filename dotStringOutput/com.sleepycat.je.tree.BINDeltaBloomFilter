digraph writeToLog {
"bf := @parameter0: byte[] {1453646033}" -> "buffer := @parameter1: java.nio.ByteBuffer {889287369}";
"buffer := @parameter1: java.nio.ByteBuffer {889287369}" -> "staticinvoke <com.sleepycat.je.log.LogUtils: void writeByteArray(java.nio.ByteBuffer,byte[])>(buffer, bf) {734005105}";
"staticinvoke <com.sleepycat.je.log.LogUtils: void writeByteArray(java.nio.ByteBuffer,byte[])>(buffer, bf) {734005105}" -> "return {2027117675}";
}

digraph <clinit> {
"$r0 = class \"com/sleepycat/je/tree/BINDeltaBloomFilter\" {2004784}" -> "$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {421962417}";
"$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {421962417}" -> "if $z0 != 0 goto $z1 = 0 {185256444}";
"if $z0 != 0 goto $z1 = 0 {185256444}" -> "$z1 = 1 {1946451280}";
"if $z0 != 0 goto $z1 = 0 {185256444}" -> "$z1 = 0 {751360630}";
"$z1 = 1 {1946451280}" -> "goto [?= <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1] {14144503}";
"goto [?= <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1] {14144503}" -> "<com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1 {1909498682}";
"$z1 = 0 {751360630}" -> "<com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1 {1909498682}";
"<com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1 {1909498682}" -> "return {652848813}";
}

digraph add {
"bf := @parameter0: byte[] {1220090703}" -> "key := @parameter1: byte[] {168390202}";
"key := @parameter1: byte[] {168390202}" -> "hc := @parameter2: com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {1126649244}";
"hc := @parameter2: com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {1126649244}" -> "staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {485521589}";
"staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {485521589}" -> "l3 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1858132948}";
"l3 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1858132948}" -> "l4 = lengthof l3 {1269145957}";
"l4 = lengthof l3 {1269145957}" -> "l5#8 = 0 {42346386}";
"l5#8 = 0 {42346386}" -> "if l5#8 >= l4 goto return {50587959}";
"if l5#8 >= l4 goto return {50587959}" -> "idx = l3[l5#8] {1299545686}";
"if l5#8 >= l4 goto return {50587959}" -> "return {767731756}";
"idx = l3[l5#8] {1299545686}" -> "staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: void setBit(byte[],int)>(bf, idx) {1265672163}";
"staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: void setBit(byte[],int)>(bf, idx) {1265672163}" -> "l5#8 = l5#8 + 1 {764530453}";
"l5#8 = l5#8 + 1 {764530453}" -> "goto [?= (branch)] {1904050365}";
"goto [?= (branch)] {1904050365}" -> "if l5#8 >= l4 goto return {50587959}";
}

digraph getByteSize {
"numKeys := @parameter0: int {1103448012}" -> "$z0 = <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {59741910}";
"$z0 = <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {59741910}" -> "if $z0 != 0 goto nbits = numKeys * 8 {1490750698}";
"if $z0 != 0 goto nbits = numKeys * 8 {1490750698}" -> "if numKeys > 0 goto nbits = numKeys * 8 {1933208842}";
"if $z0 != 0 goto nbits = numKeys * 8 {1490750698}" -> "nbits = numKeys * 8 {837328272}";
"if numKeys > 0 goto nbits = numKeys * 8 {1933208842}" -> "$r0 = new java.lang.AssertionError {209480861}";
"if numKeys > 0 goto nbits = numKeys * 8 {1933208842}" -> "nbits = numKeys * 8 {837328272}";
"$r0 = new java.lang.AssertionError {209480861}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1095530285}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1095530285}" -> "throw $r0 {775680797}";
"nbits = numKeys * 8 {837328272}" -> "$i0 = nbits + 7 {1722172609}";
"$i0 = nbits + 7 {1722172609}" -> "$i1 = $i0 / 8 {1037784483}";
"$i1 = $i0 / 8 {1037784483}" -> "return $i1 {866627167}";
}

digraph setBit {
"bf := @parameter0: byte[] {1837025865}" -> "idx := @parameter1: int {379211856}";
"idx := @parameter1: int {379211856}" -> "$i0 = idx / 8 {1348309617}";
"$i0 = idx / 8 {1348309617}" -> "$b1 = bf[$i0] {1506237417}";
"$b1 = bf[$i0] {1506237417}" -> "$i2 = idx % 8 {1014183799}";
"$i2 = idx % 8 {1014183799}" -> "$i3 = 1 << $i2 {667067338}";
"$i3 = 1 << $i2 {667067338}" -> "$i4 = $b1 | $i3 {132163277}";
"$i4 = $b1 | $i3 {132163277}" -> "$b5 = (byte) $i4 {459228785}";
"$b5 = (byte) $i4 {459228785}" -> "bf[$i0] = $b5 {1051853538}";
"bf[$i0] = $b5 {1051853538}" -> "return {215755277}";
}

digraph hash {
"bf := @parameter0: byte[] {902200873}" -> "key := @parameter1: byte[] {99482163}";
"key := @parameter1: byte[] {99482163}" -> "hc := @parameter2: com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {543701312}";
"hc := @parameter2: com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {543701312}" -> "$z0 = <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {929541233}";
"$z0 = <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {929541233}" -> "if $z0 != 0 goto $r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1479904149}";
"if $z0 != 0 goto $r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1479904149}" -> "$r0 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1809393819}";
"if $z0 != 0 goto $r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1479904149}" -> "$r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {471879255}";
"$r0 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1809393819}" -> "$i0 = lengthof $r0 {1641481653}";
"$i0 = lengthof $r0 {1641481653}" -> "if $i0 == 3 goto $r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1045814743}";
"if $i0 == 3 goto $r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1045814743}" -> "$r1 = new java.lang.AssertionError {1735826693}";
"if $i0 == 3 goto $r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1045814743}" -> "$r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {471879255}";
"$r1 = new java.lang.AssertionError {1735826693}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {1767376207}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {1767376207}" -> "throw $r1 {2046023382}";
"$r2 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {471879255}" -> "$l1 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: long initFNVvalue> {300205707}";
"$l1 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: long initFNVvalue> {300205707}" -> "$l2 = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(key, $l1) {2120741388}";
"$l2 = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(key, $l1) {2120741388}" -> "virtualinvoke $r2.<java.util.Random: void setSeed(long)>($l2) {1738017833}";
"virtualinvoke $r2.<java.util.Random: void setSeed(long)>($l2) {1738017833}" -> "$i3 = lengthof bf {470148727}";
"$i3 = lengthof bf {470148727}" -> "numBits = $i3 * 8 {2002558494}";
"numBits = $i3 * 8 {2002558494}" -> "if numBits > 1024 goto $r7 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {776054299}";
"if numBits > 1024 goto $r7 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {776054299}" -> "$r3 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1624002960}";
"if numBits > 1024 goto $r7 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {776054299}" -> "$r7 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {524089871}";
"$r3 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1624002960}" -> "hash#23 = virtualinvoke $r3.<java.util.Random: int nextInt()>() {483656433}";
"hash#23 = virtualinvoke $r3.<java.util.Random: int nextInt()>() {483656433}" -> "$r4 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {865698415}";
"$r4 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {865698415}" -> "$i4 = hash#23 & 1023 {127281657}";
"$i4 = hash#23 & 1023 {127281657}" -> "$i5 = $i4 % numBits {1204141974}";
"$i5 = $i4 % numBits {1204141974}" -> "$r4[0] = $i5 {1443625688}";
"$r4[0] = $i5 {1443625688}" -> "hash#35 = hash#23 >> 10 {723617068}";
"hash#35 = hash#23 >> 10 {723617068}" -> "$r5 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {391591453}";
"$r5 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {391591453}" -> "$i6 = hash#35 & 1023 {1634205999}";
"$i6 = hash#35 & 1023 {1634205999}" -> "$i7 = $i6 % numBits {971996247}";
"$i7 = $i6 % numBits {971996247}" -> "$r5[1] = $i7 {2130752275}";
"$r5[1] = $i7 {2130752275}" -> "hash#47 = hash#35 >> 10 {220674386}";
"hash#47 = hash#35 >> 10 {220674386}" -> "$r6 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {833210359}";
"$r6 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {833210359}" -> "$i8 = hash#47 & 1023 {967616898}";
"$i8 = hash#47 & 1023 {967616898}" -> "$i9 = $i8 % numBits {1204200018}";
"$i9 = $i8 % numBits {1204200018}" -> "$r6[2] = $i9 {732524832}";
"$r6[2] = $i9 {732524832}" -> "goto [?= return] {2006265198}";
"goto [?= return] {2006265198}" -> "return {889385088}";
"$r7 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {524089871}" -> "$r8 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {485848563}";
"$r8 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {485848563}" -> "$i10 = virtualinvoke $r8.<java.util.Random: int nextInt()>() {1692473568}";
"$i10 = virtualinvoke $r8.<java.util.Random: int nextInt()>() {1692473568}" -> "$l11 = (long) $i10 {2118278565}";
"$l11 = (long) $i10 {2118278565}" -> "$l12 = $l11 & 4294967295L {1683693119}";
"$l12 = $l11 & 4294967295L {1683693119}" -> "$l13 = (long) numBits {1404444146}";
"$l13 = (long) numBits {1404444146}" -> "$l14 = $l12 % $l13 {1386746328}";
"$l14 = $l12 % $l13 {1386746328}" -> "$i15 = (int) $l14 {1849579348}";
"$i15 = (int) $l14 {1849579348}" -> "$r7[0] = $i15 {539752719}";
"$r7[0] = $i15 {539752719}" -> "$r9 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1361434142}";
"$r9 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1361434142}" -> "$r10 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {2016483600}";
"$r10 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {2016483600}" -> "$i16 = virtualinvoke $r10.<java.util.Random: int nextInt()>() {131835182}";
"$i16 = virtualinvoke $r10.<java.util.Random: int nextInt()>() {131835182}" -> "$l17 = (long) $i16 {666534699}";
"$l17 = (long) $i16 {666534699}" -> "$l18 = $l17 & 4294967295L {1795925201}";
"$l18 = $l17 & 4294967295L {1795925201}" -> "$l19 = (long) numBits {1114890399}";
"$l19 = (long) numBits {1114890399}" -> "$l20 = $l18 % $l19 {1329939710}";
"$l20 = $l18 % $l19 {1329939710}" -> "$i21 = (int) $l20 {2036227307}";
"$i21 = (int) $l20 {2036227307}" -> "$r9[1] = $i21 {1419953245}";
"$r9[1] = $i21 {1419953245}" -> "$r11 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1821337125}";
"$r11 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1821337125}" -> "$r12 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1764860397}";
"$r12 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1764860397}" -> "$i22 = virtualinvoke $r12.<java.util.Random: int nextInt()>() {2123910304}";
"$i22 = virtualinvoke $r12.<java.util.Random: int nextInt()>() {2123910304}" -> "$l23 = (long) $i22 {2006897190}";
"$l23 = (long) $i22 {2006897190}" -> "$l24 = $l23 & 4294967295L {1297312003}";
"$l24 = $l23 & 4294967295L {1297312003}" -> "$l25 = (long) numBits {1880896179}";
"$l25 = (long) numBits {1880896179}" -> "$l26 = $l24 % $l25 {363386381}";
"$l26 = $l24 % $l25 {363386381}" -> "$i27 = (int) $l26 {1139125962}";
"$i27 = (int) $l26 {1139125962}" -> "$r11[2] = $i27 {605734682}";
"$r11[2] = $i27 {605734682}" -> "return {889385088}";
}

digraph hashFNV {
"key := @parameter0: byte[] {756849882}" -> "initValue := @parameter1: long {1315623194}";
"initValue := @parameter1: long {1315623194}" -> "hash#2 = initValue {1572681079}";
"hash#2 = initValue {1572681079}" -> "l5 = key {1924839412}";
"l5 = key {1924839412}" -> "l6 = lengthof l5 {1198020092}";
"l6 = lengthof l5 {1198020092}" -> "l7#7 = 0 {1084885974}";
"l7#7 = 0 {1084885974}" -> "if l7#7 >= l6 goto return hash#2 {497369770}";
"if l7#7 >= l6 goto return hash#2 {497369770}" -> "b = l5[l7#7] {1822965770}";
"if l7#7 >= l6 goto return hash#2 {497369770}" -> "return hash#2 {721226754}";
"b = l5[l7#7] {1822965770}" -> "$l0 = hash#2 * 16777619L {2116975828}";
"$l0 = hash#2 * 16777619L {2116975828}" -> "hash#18 = $l0 & -1L {1272964084}";
"hash#18 = $l0 & -1L {1272964084}" -> "$l1 = (long) b {1009026172}";
"$l1 = (long) b {1009026172}" -> "hash#2 = hash#18 ^ $l1 {422525188}";
"hash#2 = hash#18 ^ $l1 {422525188}" -> "l7#7 = l7#7 + 1 {1514119548}";
"l7#7 = l7#7 + 1 {1514119548}" -> "goto [?= (branch)] {1109448995}";
"goto [?= (branch)] {1109448995}" -> "if l7#7 >= l6 goto return hash#2 {497369770}";
}

digraph access$000 {
"x0 := @parameter0: byte[] {981775956}" -> "x1 := @parameter1: long {486433687}";
"x1 := @parameter1: long {486433687}" -> "$l0 = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(x0, x1) {497368536}";
"$l0 = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(x0, x1) {497368536}" -> "return $l0 {1902581276}";
}

digraph getLogSize {
"numKeys := @parameter0: int {1300389423}" -> "nbytes = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: int getByteSize(int)>(numKeys) {461584074}";
"nbytes = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: int getByteSize(int)>(numKeys) {461584074}" -> "$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(nbytes) {1342982805}";
"$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(nbytes) {1342982805}" -> "$i1 = $i0 + nbytes {1690547281}";
"$i1 = $i0 + nbytes {1690547281}" -> "return $i1 {1453916862}";
}

digraph getLogSize {
"bf := @parameter0: byte[] {581539953}" -> "$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getByteArrayLogSize(byte[])>(bf) {150926142}";
"$i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getByteArrayLogSize(byte[])>(bf) {150926142}" -> "return $i0 {1727694912}";
}

digraph readFromLog {
"buffer := @parameter0: java.nio.ByteBuffer {377331053}" -> "entryVersion := @parameter1: int {910012113}";
"entryVersion := @parameter1: int {910012113}" -> "$r0 = staticinvoke <com.sleepycat.je.log.LogUtils: byte[] readByteArray(java.nio.ByteBuffer,boolean)>(buffer, 0) {1418414129}";
"$r0 = staticinvoke <com.sleepycat.je.log.LogUtils: byte[] readByteArray(java.nio.ByteBuffer,boolean)>(buffer, 0) {1418414129}" -> "return $r0 {931912707}";
}

digraph getMemorySize {
"bf := @parameter0: byte[] {2087670979}" -> "$i0 = lengthof bf {1885884381}";
"$i0 = lengthof bf {1885884381}" -> "$i1 = staticinvoke <com.sleepycat.je.dbi.MemoryBudget: int byteArraySize(int)>($i0) {1982321759}";
"$i1 = staticinvoke <com.sleepycat.je.dbi.MemoryBudget: int byteArraySize(int)>($i0) {1982321759}" -> "return $i1 {2013645803}";
}

digraph contains {
"bf := @parameter0: byte[] {1035650301}" -> "key := @parameter1: byte[] {1542175050}";
"key := @parameter1: byte[] {1542175050}" -> "$r0 = new com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {822179647}";
"$r0 = new com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {822179647}" -> "specialinvoke $r0.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: void <init>()>() {292444256}";
"specialinvoke $r0.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: void <init>()>() {292444256}" -> "hc = $r0 {1714287485}";
"hc = $r0 {1714287485}" -> "staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {182107395}";
"staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {182107395}" -> "l3 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {241854115}";
"l3 = hc.<com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {241854115}" -> "l4 = lengthof l3 {1260793598}";
"l4 = lengthof l3 {1260793598}" -> "l5#10 = 0 {958835073}";
"l5#10 = 0 {958835073}" -> "if l5#10 >= l4 goto return 1 {482969246}";
"if l5#10 >= l4 goto return 1 {482969246}" -> "idx = l3[l5#10] {1512932191}";
"if l5#10 >= l4 goto return 1 {482969246}" -> "return 1 {208935026}";
"idx = l3[l5#10] {1512932191}" -> "$z0 = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean getBit(byte[],int)>(bf, idx) {2059333693}";
"$z0 = staticinvoke <com.sleepycat.je.tree.BINDeltaBloomFilter: boolean getBit(byte[],int)>(bf, idx) {2059333693}" -> "if $z0 != 0 goto l5#10 = l5#10 + 1 {1279243086}";
"if $z0 != 0 goto l5#10 = l5#10 + 1 {1279243086}" -> "return 0 {528647387}";
"if $z0 != 0 goto l5#10 = l5#10 + 1 {1279243086}" -> "l5#10 = l5#10 + 1 {305180686}";
"l5#10 = l5#10 + 1 {305180686}" -> "goto [?= (branch)] {598004933}";
"goto [?= (branch)] {598004933}" -> "if l5#10 >= l4 goto return 1 {482969246}";
}

digraph getBit {
"bf := @parameter0: byte[] {5916778}" -> "idx := @parameter1: int {1956701391}";
"idx := @parameter1: int {1956701391}" -> "$i0 = idx / 8 {587879557}";
"$i0 = idx / 8 {587879557}" -> "$b1 = bf[$i0] {1913754864}";
"$b1 = bf[$i0] {1913754864}" -> "$i2 = idx % 8 {412835592}";
"$i2 = idx % 8 {412835592}" -> "$i3 = 1 << $i2 {57081414}";
"$i3 = 1 << $i2 {57081414}" -> "$i4 = $b1 & $i3 {400000229}";
"$i4 = $b1 & $i3 {400000229}" -> "if $i4 == 0 goto $z0 = 0 {947395626}";
"if $i4 == 0 goto $z0 = 0 {947395626}" -> "$z0 = 1 {2061068082}";
"if $i4 == 0 goto $z0 = 0 {947395626}" -> "$z0 = 0 {1696757623}";
"$z0 = 1 {2061068082}" -> "goto [?= return $z0] {1324950241}";
"goto [?= return $z0] {1324950241}" -> "return $z0 {490974901}";
"$z0 = 0 {1696757623}" -> "return $z0 {490974901}";
}


