    static void compress(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options, byte[], optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options;
        byte[] input;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int j, $i0, i#2, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        options := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options;

        nop;

        input := @parameter2: byte[];

        nop;

        output := @parameter3: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        i#2 = 0;

     label1:
        nop;

        $i2 = lengthof input;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if i#2 >= $i2 goto label4;

        nop;

        $i3 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int masterBlockSize>;

        nop;

        $i4 = i#2 + $i3;

        nop;

        $i5 = lengthof input;

        nop;

        j = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        nop;

        $i0 = i#2;

        nop;

        $i6 = lengthof input;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6);

        nop;

        if j != $i6 goto label2;

        nop;

        $z0 = 1;

        nop;

        goto label3;

     label2:
        nop;

        $z0 = 0;

     label3:
        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflatePart(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options,byte[],int,int,boolean,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, input, $i0, j, $z0, output);

        nop;

        i#2 = j;

        nop;

        goto label1;

     label4:
        nop;

        return;
    }

    private static void deflatePart(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options, byte[], int, int, boolean, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options;
        byte[] input;
        int 'from', 'to', $i0, $i1;
        boolean flush;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] $r0;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting $r1;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        options := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options;

        nop;

        input := @parameter2: byte[];

        nop;

        'from' := @parameter3: int;

        nop;

        'to' := @parameter4: int;

        nop;

        flush := @parameter5: boolean;

        nop;

        output := @parameter6: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$1: int[] $SwitchMap$optimizer$com$googlecode$pngtastic$core$processing$zopfli$Options$BlockSplitting>;

        nop;

        $r1 = options.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting blockSplitting>;

        nop;

        $i0 = virtualinvoke $r1.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting: int ordinal()>();

        nop;

        $i1 = $r0[$i0];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateSplittingFirst(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

        nop;

        goto label4;

     label2:
        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateSplittingLast(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

        nop;

        goto label4;

     label3:
        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateDynamicBlock(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

     label4:
        nop;

        return;
    }

    private static void deflateDynamicBlock(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush;
        byte[] input;
        int 'from', 'to', dynCost, fixedCost, $i0, $i1, $i2, $i3, $i4, $i5;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore fixedStore, store#17;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType type#8;
        char[] $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        long[] $r1;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        options := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options;

        nop;

        flush := @parameter2: boolean;

        nop;

        input := @parameter3: byte[];

        nop;

        'from' := @parameter4: int;

        nop;

        'to' := @parameter5: int;

        nop;

        output := @parameter6: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        lmc = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc>;

        nop;

        $i0 = 'to' - 'from';

        nop;

        virtualinvoke lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void init(int)>($i0);

        nop;

        type#8 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType DYNAMIC>;

        nop;

        $i1 = options.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options: int numIterations>;

        nop;

        store#17 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Squeeze: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int)>(cookie, $i1, lmc, input, 'from', 'to');

        nop;

        $i2 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if $i2 >= 1000 goto label1;

        nop;

        fixedStore = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore store1>;

        nop;

        virtualinvoke fixedStore.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        nop;

        $r0 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        nop;

        $r1 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: long[] costs>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void bestFixedLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],long[])>(cookie, lmc, input, 'from', 'to', $r0, $r1);

        nop;

        $r2 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void optimalRun(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, lmc, input, 'from', 'to', $r2, fixedStore);

        nop;

        $r3 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        $r4 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        $i3 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nop;

        dynCost = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, $r3, $r4, 0, $i3);

        nop;

        $r5 = fixedStore.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        $r6 = fixedStore.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        $i4 = fixedStore.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nop;

        fixedCost = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateFixedBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r5, $r6, $i4);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fixedCost);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dynCost);

        nop;

        if fixedCost >= dynCost goto label1;

        nop;

        type#8 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        nop;

        store#17 = fixedStore;

     label1:
        nop;

        $r7 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        $r8 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        $i5 = store#17.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzBlock(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType,boolean,char[],char[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, type#8, flush, $r7, $r8, 0, $i5, output);

        nop;

        return;
    }

    private static void deflateSplittingLast(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0;
        byte[] input;
        int 'from', 'to', nPoints, start, end, $i0, $i1, $i2, i#26, $i3;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        int[] splitPoints;
        char[] $r0, $r1, $r4, $r5;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType $r3;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        options := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options;

        nop;

        flush := @parameter2: boolean;

        nop;

        input := @parameter3: byte[];

        nop;

        'from' := @parameter4: int;

        nop;

        'to' := @parameter5: int;

        nop;

        output := @parameter6: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        lmc = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc>;

        nop;

        $i0 = 'to' - 'from';

        nop;

        virtualinvoke lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void init(int)>($i0);

        nop;

        $i1 = options.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options: int numIterations>;

        nop;

        store = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Squeeze: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int)>(cookie, $i1, lmc, input, 'from', 'to');

        nop;

        $r0 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        $r1 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        $i2 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nop;

        nPoints = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int splitLz(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r0, $r1, $i2);

        nop;

        splitPoints = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        nop;

        i#26 = 1;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#26);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nPoints);

        nop;

        if i#26 > nPoints goto label4;

        nop;

        $i3 = i#26 - 1;

        nop;

        start = splitPoints[$i3];

        nop;

        end = splitPoints[i#26];

        nop;

        $r3 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType DYNAMIC>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#26);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nPoints);

        nop;

        if i#26 != nPoints goto label2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(flush);

        nop;

        if flush == 0 goto label2;

        nop;

        $z0 = 1;

        nop;

        goto label3;

     label2:
        nop;

        $z0 = 0;

     label3:
        nop;

        $r4 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        nop;

        $r5 = store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzBlock(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType,boolean,char[],char[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, $r3, $z0, $r4, $r5, start, end, output);

        nop;

        i#26 = i#26 + 1;

        nop;

        goto label1;

     label4:
        nop;

        return;
    }

    private static void deflateSplittingFirst(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0;
        byte[] input;
        int 'from', 'to', nPoints, i#9, $i0, $i1, $i2;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] splitPoints;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        options := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options;

        nop;

        flush := @parameter2: boolean;

        nop;

        input := @parameter3: byte[];

        nop;

        'from' := @parameter4: int;

        nop;

        'to' := @parameter5: int;

        nop;

        output := @parameter6: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        nPoints = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int split(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,byte[],int,int)>(cookie, input, 'from', 'to');

        nop;

        splitPoints = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        nop;

        i#9 = 1;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nPoints);

        nop;

        if i#9 > nPoints goto label4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nPoints);

        nop;

        if i#9 != nPoints goto label2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(flush);

        nop;

        if flush == 0 goto label2;

        nop;

        $z0 = 1;

        nop;

        goto label3;

     label2:
        nop;

        $z0 = 0;

     label3:
        nop;

        $i0 = i#9 - 1;

        nop;

        $i1 = splitPoints[$i0];

        nop;

        $i2 = splitPoints[i#9];

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateDynamicBlock(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, $z0, input, $i1, $i2, output);

        nop;

        i#9 = i#9 + 1;

        nop;

        goto label1;

     label4:
        nop;

        return;
    }

    private static void addLzBlock(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType, boolean, char[], char[], int, int, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType type, $r5, $r6;
        boolean last;
        char[] litLens, dists;
        int lStart, lEnd, $i1, $i2;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] llLengths, dLengths, llCounts, dCounts, llSymbols, dSymbols, $r0, $r1, $r2, $r3, $r7, $r8, $r9, $r10, $r11, $r12;
        byte $b0;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        type := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType;

        nop;

        last := @parameter2: boolean;

        nop;

        litLens := @parameter3: char[];

        nop;

        dists := @parameter4: char[];

        nop;

        lStart := @parameter5: int;

        nop;

        lEnd := @parameter6: int;

        nop;

        output := @parameter7: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        llLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, llLengths, 0, 288);

        nop;

        dLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        nop;

        $r1 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, dLengths, 0, 32);

        nop;

        llCounts = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288b>;

        nop;

        $r2 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, llCounts, 0, 288);

        nop;

        dCounts = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        nop;

        $r3 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, dCounts, 0, 32);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(last);

        nop;

        if last == 0 goto label1;

        nop;

        $b0 = 1;

        nop;

        goto label2;

     label1:
        nop;

        $b0 = 0;

     label2:
        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($b0, 1);

        nop;

        $r5 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(type);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        nop;

        if type != $r5 goto label3;

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(2, 2);

        nop;

        goto label4;

     label3:
        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(1, 2);

     label4:
        nop;

        $r6 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(type);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        nop;

        if type != $r6 goto label5;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void getFixedTree(int[],int[])>(llLengths, dLengths);

        nop;

        goto label6;

     label5:
        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lzCounts(char[],char[],int,int,int[],int[])>(litLens, dists, lStart, lEnd, llCounts, dCounts);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, llCounts);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, llCounts, 15, llLengths);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, dCounts);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, dCounts, 15, dLengths);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void patchDistanceCodesForBuggyDecoders(int[])>(dLengths);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addDynamicTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, llLengths, dLengths, output);

     label6:
        nop;

        llSymbols = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288c>;

        nop;

        $r7 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, llSymbols, 0, 288);

        nop;

        $r8 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        nop;

        $r9 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(llLengths, 288, 15, llSymbols, $r8, $r9);

        nop;

        dSymbols = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        nop;

        $r10 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, dSymbols, 0, 32);

        nop;

        $r11 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        nop;

        $r12 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(dLengths, 32, 15, dSymbols, $r11, $r12);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzData(char[],char[],int,int,int[],int[],int[],int[],optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(litLens, dists, lStart, lEnd, llSymbols, llLengths, dSymbols, dLengths, output);

        nop;

        $i1 = llSymbols[256];

        nop;

        $i2 = llLengths[256];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i1, $i2);

        nop;

        return;
    }

    private static int calculateFixedBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int size, result#8, i#13, $i0, $i1, $i2, result#34, $i3, result#40, result#41, $i5, $i6, result#58;
        int[] llLengths, dLengths, cachedDistExtraBits, lengthExtraBits, lengthSymbol;
        char d, l;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        litLens := @parameter1: char[];

        nop;

        dists := @parameter2: char[];

        nop;

        size := @parameter3: int;

        nop;

        llLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        nop;

        dLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void getFixedTree(int[],int[])>(llLengths, dLengths);

        nop;

        result#8 = 3;

        nop;

        cachedDistExtraBits = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        nop;

        lengthExtraBits = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        nop;

        lengthSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        nop;

        i#13 = 0;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#13);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        nop;

        if i#13 >= size goto label8;

        nop;

        d = dists[i#13];

        nop;

        l = litLens[i#13];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(d);

        nop;

        if d != 0 goto label2;

        nop;

        $i0 = llLengths[l];

        nop;

        result#8 = result#8 + $i0;

        nop;

        goto label7;

     label2:
        nop;

        $i1 = lengthSymbol[l];

        nop;

        $i2 = llLengths[$i1];

        nop;

        result#34 = result#8 + $i2;

        nop;

        $i3 = lengthExtraBits[l];

        nop;

        result#40 = result#34 + $i3;

        nop;

        result#41 = result#40 + 5;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(d);

        nop;

        if d >= 4097 goto label3;

        nop;

        $i5 = cachedDistExtraBits[d];

        nop;

        goto label6;

     label3:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(d);

        nop;

        if d >= 16385 goto label5;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(d);

        nop;

        if d >= 8193 goto label4;

        nop;

        $i5 = 11;

        nop;

        goto label6;

     label4:
        nop;

        $i5 = 12;

        nop;

        goto label6;

     label5:
        nop;

        $i5 = 13;

     label6:
        nop;

        result#8 = result#41 + $i5;

     label7:
        nop;

        i#13 = i#13 + 1;

        nop;

        goto label1;

     label8:
        nop;

        $i6 = llLengths[256];

        nop;

        result#58 = result#8 + $i6;

        nop;

        return result#58;
    }

    static int calculateBlockSize(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int lStart, lEnd, distSymbol, result#16, i#35, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, result#121, i#123, $i13, $i14, $i15, i#136, $i16, $i17, $i18;
        int[] llLengths, dLengths, llCounts, dCounts, lengthSymbol, cachedDistSymbol, lengthExtraBits, llCountsCopy, dCountsCopy, $r0, $r1, $r2, $r3;
        char d, l;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        litLens := @parameter1: char[];

        nop;

        dists := @parameter2: char[];

        nop;

        lStart := @parameter3: int;

        nop;

        lEnd := @parameter4: int;

        nop;

        llLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, llLengths, 0, 288);

        nop;

        dLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        nop;

        $r1 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, dLengths, 0, 32);

        nop;

        result#16 = 3;

        nop;

        llCounts = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288b>;

        nop;

        $r2 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, llCounts, 0, 288);

        nop;

        dCounts = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        nop;

        $r3 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, dCounts, 0, 32);

        nop;

        lengthSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        nop;

        cachedDistSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        nop;

        lengthExtraBits = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        nop;

        i#35 = lStart;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#35);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lEnd);

        nop;

        if i#35 >= lEnd goto label4;

        nop;

        d = dists[i#35];

        nop;

        l = litLens[i#35];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(d);

        nop;

        if d != 0 goto label2;

        nop;

        $i1 = llCounts[l];

        nop;

        $i2 = $i1 + 1;

        nop;

        llCounts[l] = $i2;

        nop;

        goto label3;

     label2:
        nop;

        $i3 = lengthSymbol[l];

        nop;

        $i4 = llCounts[$i3];

        nop;

        $i5 = $i4 + 1;

        nop;

        llCounts[$i3] = $i5;

        nop;

        distSymbol = cachedDistSymbol[d];

        nop;

        $i7 = dCounts[distSymbol];

        nop;

        $i8 = $i7 + 1;

        nop;

        dCounts[distSymbol] = $i8;

        nop;

        $i9 = lengthExtraBits[l];

        nop;

        result#16 = result#16 + $i9;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(distSymbol);

        nop;

        if distSymbol <= 3 goto label3;

        nop;

        $i10 = distSymbol / 2;

        nop;

        $i11 = $i10 - 1;

        nop;

        result#16 = result#16 + $i11;

     label3:
        nop;

        i#35 = i#35 + 1;

        nop;

        goto label1;

     label4:
        nop;

        llCounts[256] = 1;

        nop;

        llCountsCopy = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288c>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llCounts, 0, llCountsCopy, 0, 288);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, llCountsCopy);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, llCountsCopy, 15, llLengths);

        nop;

        dCountsCopy = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32c>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dCounts, 0, dCountsCopy, 0, 32);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, dCountsCopy);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, dCountsCopy, 15, dLengths);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void patchDistanceCodesForBuggyDecoders(int[])>(dLengths);

        nop;

        $i12 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateAddDynamicTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[])>(cookie, llLengths, dLengths);

        nop;

        result#121 = result#16 + $i12;

        nop;

        i#123 = 0;

     label5:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#123);

        nop;

        if i#123 >= 288 goto label6;

        nop;

        $i13 = llCounts[i#123];

        nop;

        $i14 = llLengths[i#123];

        nop;

        $i15 = $i13 * $i14;

        nop;

        result#121 = result#121 + $i15;

        nop;

        i#123 = i#123 + 1;

        nop;

        goto label5;

     label6:
        nop;

        i#136 = 0;

     label7:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#136);

        nop;

        if i#136 >= 32 goto label8;

        nop;

        $i16 = dCounts[i#136];

        nop;

        $i17 = dLengths[i#136];

        nop;

        $i18 = $i16 * $i17;

        nop;

        result#121 = result#121 + $i18;

        nop;

        i#136 = i#136 + 1;

        nop;

        goto label7;

     label8:
        nop;

        return result#121;
    }

    private static void addLzData(char[], char[], int, int, int[], int[], int[], int[], optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        char[] litLens, dists;
        int lStart, lEnd, lls, ds, i#7, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] llSymbols, llLengths, dSymbols, dLengths, cachedDistExtraBits, lengthExtraBits, lengthExtraBitsValue, lengthSymbol, cachedDistSymbol;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        char dist, litLen;

        nop;

        litLens := @parameter0: char[];

        nop;

        dists := @parameter1: char[];

        nop;

        lStart := @parameter2: int;

        nop;

        lEnd := @parameter3: int;

        nop;

        llSymbols := @parameter4: int[];

        nop;

        llLengths := @parameter5: int[];

        nop;

        dSymbols := @parameter6: int[];

        nop;

        dLengths := @parameter7: int[];

        nop;

        output := @parameter8: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        cachedDistExtraBits = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        nop;

        lengthExtraBits = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        nop;

        lengthExtraBitsValue = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS_VALUE>;

        nop;

        lengthSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        nop;

        cachedDistSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        nop;

        i#7 = lStart;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lEnd);

        nop;

        if i#7 >= lEnd goto label8;

        nop;

        dist = dists[i#7];

        nop;

        litLen = litLens[i#7];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dist);

        nop;

        if dist != 0 goto label2;

        nop;

        $i0 = llSymbols[litLen];

        nop;

        $i1 = llLengths[litLen];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i0, $i1);

        nop;

        goto label7;

     label2:
        nop;

        lls = lengthSymbol[litLen];

        nop;

        ds = cachedDistSymbol[dist];

        nop;

        $i2 = llSymbols[lls];

        nop;

        $i3 = llLengths[lls];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i2, $i3);

        nop;

        $i4 = lengthExtraBitsValue[litLen];

        nop;

        $i5 = lengthExtraBits[litLen];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i4, $i5);

        nop;

        $i6 = dSymbols[ds];

        nop;

        $i7 = dLengths[ds];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i6, $i7);

        nop;

        $i8 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int distExtraBitsValue(int)>(dist);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dist);

        nop;

        if dist >= 4097 goto label3;

        nop;

        $i9 = cachedDistExtraBits[dist];

        nop;

        goto label6;

     label3:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dist);

        nop;

        if dist >= 16385 goto label5;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dist);

        nop;

        if dist >= 8193 goto label4;

        nop;

        $i9 = 11;

        nop;

        goto label6;

     label4:
        nop;

        $i9 = 12;

        nop;

        goto label6;

     label5:
        nop;

        $i9 = 13;

     label6:
        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i8, $i9);

     label7:
        nop;

        i#7 = i#7 + 1;

        nop;

        goto label1;

     label8:
        nop;

        return;
    }

    private static void lengthsToSymbols(int[], int, int, int[], int[], int[])
    {
        int[] lengths, symbols, blCount, nextCode, $r0, $r1;
        int n, maxBits, len, $i0, $i1, i#16, $i2, $i3, $i4, code#29, bits#34, $i5, $i6, $i7, i#50, $i8, $i10, $i11;

        nop;

        lengths := @parameter0: int[];

        nop;

        n := @parameter1: int;

        nop;

        maxBits := @parameter2: int;

        nop;

        symbols := @parameter3: int[];

        nop;

        blCount := @parameter4: int[];

        nop;

        nextCode := @parameter5: int[];

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        $i0 = maxBits + 1;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, blCount, 0, $i0);

        nop;

        $r1 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        $i1 = maxBits + 1;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, nextCode, 0, $i1);

        nop;

        i#16 = 0;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#16);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if i#16 >= n goto label2;

        nop;

        $i2 = lengths[i#16];

        nop;

        $i3 = blCount[$i2];

        nop;

        $i4 = $i3 + 1;

        nop;

        blCount[$i2] = $i4;

        nop;

        i#16 = i#16 + 1;

        nop;

        goto label1;

     label2:
        nop;

        code#29 = 0;

        nop;

        blCount[0] = 0;

        nop;

        bits#34 = 1;

     label3:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bits#34);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(maxBits);

        nop;

        if bits#34 > maxBits goto label4;

        nop;

        $i5 = bits#34 - 1;

        nop;

        $i6 = blCount[$i5];

        nop;

        $i7 = code#29 + $i6;

        nop;

        code#29 = $i7 << 1;

        nop;

        nextCode[bits#34] = code#29;

        nop;

        bits#34 = bits#34 + 1;

        nop;

        goto label3;

     label4:
        nop;

        i#50 = 0;

     label5:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#50);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if i#50 >= n goto label7;

        nop;

        len = lengths[i#50];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        nop;

        if len == 0 goto label6;

        nop;

        $i8 = nextCode[len];

        nop;

        symbols[i#50] = $i8;

        nop;

        $i10 = nextCode[len];

        nop;

        $i11 = $i10 + 1;

        nop;

        nextCode[len] = $i11;

     label6:
        nop;

        i#50 = i#50 + 1;

        nop;

        goto label5;

     label7:
        nop;

        return;
    }

    private static void addDynamicTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int size, best#2, bestSize#4, i#6, $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        llLengths := @parameter1: int[];

        nop;

        dLengths := @parameter2: int[];

        nop;

        output := @parameter3: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        best#2 = 0;

        nop;

        bestSize#4 = 2147483647;

        nop;

        i#6 = 0;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        nop;

        if i#6 >= 8 goto label09;

        nop;

        $i0 = i#6 & 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 == 0 goto label02;

        nop;

        $z0 = 1;

        nop;

        goto label03;

     label02:
        nop;

        $z0 = 0;

     label03:
        nop;

        $i1 = i#6 & 2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 == 0 goto label04;

        nop;

        $z1 = 1;

        nop;

        goto label05;

     label04:
        nop;

        $z1 = 0;

     label05:
        nop;

        $i2 = i#6 & 4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if $i2 == 0 goto label06;

        nop;

        $z2 = 1;

        nop;

        goto label07;

     label06:
        nop;

        $z2 = 0;

     label07:
        nop;

        size = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateEncodeTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean)>(cookie, llLengths, dLengths, $z0, $z1, $z2);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestSize#4);

        nop;

        if size >= bestSize#4 goto label08;

        nop;

        bestSize#4 = size;

        nop;

        best#2 = i#6;

     label08:
        nop;

        i#6 = i#6 + 1;

        nop;

        goto label01;

     label09:
        nop;

        $i3 = best#2 & 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        if $i3 == 0 goto label10;

        nop;

        $z3 = 1;

        nop;

        goto label11;

     label10:
        nop;

        $z3 = 0;

     label11:
        nop;

        $i4 = best#2 & 2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        nop;

        if $i4 == 0 goto label12;

        nop;

        $z4 = 1;

        nop;

        goto label13;

     label12:
        nop;

        $z4 = 0;

     label13:
        nop;

        $i5 = best#2 & 4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        nop;

        if $i5 == 0 goto label14;

        nop;

        $z5 = 1;

        nop;

        goto label15;

     label14:
        nop;

        $z5 = 0;

     label15:
        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void encodeTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, llLengths, dLengths, $z3, $z4, $z5, output);

        nop;

        return;
    }

    private static void patchDistanceCodesForBuggyDecoders(int[])
    {
        int[] dLengths;
        int numDistCodes#2, i#4, $i0, $i1;
        byte $b2;

        nop;

        dLengths := @parameter0: int[];

        nop;

        numDistCodes#2 = 0;

        nop;

        i#4 = 0;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        nop;

        if i#4 >= 30 goto label3;

        nop;

        $i0 = dLengths[i#4];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 == 0 goto label2;

        nop;

        numDistCodes#2 = numDistCodes#2 + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(numDistCodes#2);

        nop;

        if numDistCodes#2 != 2 goto label2;

        nop;

        return;

     label2:
        nop;

        i#4 = i#4 + 1;

        nop;

        goto label1;

     label3:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(numDistCodes#2);

        nop;

        if numDistCodes#2 != 0 goto label4;

        nop;

        dLengths[0] = 1;

        nop;

        dLengths[1] = 1;

        nop;

        goto label7;

     label4:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(numDistCodes#2);

        nop;

        if numDistCodes#2 != 1 goto label7;

        nop;

        $i1 = dLengths[0];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 == 0 goto label5;

        nop;

        $b2 = 1;

        nop;

        goto label6;

     label5:
        nop;

        $b2 = 0;

     label6:
        nop;

        dLengths[$b2] = 1;

     label7:
        nop;

        return;
    }

    private static void optimizeHuffmanForRle(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[])
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] counts, goodForRle, $r0;
        int length#5, $i0, $i1, $i2, symbol#22, stride#24, i#26, $i3, $i4, k#44, $i5, $i6, stride#61, limit#65, sum#67, i#69, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, count#103, k#110, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        counts := @parameter1: int[];

        nop;

        goodForRle = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i289a>;

        nop;

        length#5 = lengthof counts;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if length#5 < 0 goto label04;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if length#5 != 0 goto label02;

        nop;

        return;

     label02:
        nop;

        $i0 = length#5 - 1;

        nop;

        $i1 = counts[$i0];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 == 0 goto label03;

        nop;

        goto label04;

     label03:
        nop;

        length#5 = length#5 + -1;

        nop;

        goto label01;

     label04:
        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        $i2 = length#5 + 1;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, goodForRle, 0, $i2);

        nop;

        symbol#22 = counts[0];

        nop;

        stride#24 = 0;

        nop;

        i#26 = 0;

     label05:
        nop;

        $i3 = length#5 + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#26);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        if i#26 >= $i3 goto label13;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#26);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if i#26 == length#5 goto label06;

        nop;

        $i4 = counts[i#26];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#22);

        nop;

        if $i4 == symbol#22 goto label11;

     label06:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#22);

        nop;

        if symbol#22 != 0 goto label07;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stride#24);

        nop;

        if stride#24 >= 5 goto label08;

     label07:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol#22);

        nop;

        if symbol#22 == 0 goto label10;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stride#24);

        nop;

        if stride#24 < 7 goto label10;

     label08:
        nop;

        k#44 = 0;

     label09:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(k#44);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stride#24);

        nop;

        if k#44 >= stride#24 goto label10;

        nop;

        $i5 = i#26 - k#44;

        nop;

        $i6 = $i5 - 1;

        nop;

        goodForRle[$i6] = 1;

        nop;

        k#44 = k#44 + 1;

        nop;

        goto label09;

     label10:
        nop;

        stride#24 = 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#26);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if i#26 == length#5 goto label12;

        nop;

        symbol#22 = counts[i#26];

        nop;

        goto label12;

     label11:
        nop;

        stride#24 = stride#24 + 1;

     label12:
        nop;

        i#26 = i#26 + 1;

        nop;

        goto label05;

     label13:
        nop;

        stride#61 = 0;

        nop;

        limit#65 = counts[0];

        nop;

        sum#67 = 0;

        nop;

        i#69 = 0;

     label14:
        nop;

        $i7 = length#5 + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#69);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        if i#69 >= $i7 goto label25;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#69);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if i#69 == length#5 goto label15;

        nop;

        $i8 = goodForRle[i#69];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        nop;

        if $i8 != 0 goto label15;

        nop;

        $i9 = counts[i#69];

        nop;

        $i10 = $i9 - limit#65;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        nop;

        if $i10 >= 4 goto label15;

        nop;

        $i11 = counts[i#69];

        nop;

        $i12 = limit#65 - $i11;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12);

        nop;

        if $i12 < 4 goto label23;

     label15:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stride#61);

        nop;

        if stride#61 >= 4 goto label16;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stride#61);

        nop;

        if stride#61 < 3 goto label20;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sum#67);

        nop;

        if sum#67 != 0 goto label20;

     label16:
        nop;

        $i13 = stride#61 / 2;

        nop;

        $i14 = sum#67 + $i13;

        nop;

        count#103 = $i14 / stride#61;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#103);

        nop;

        if count#103 >= 1 goto label17;

        nop;

        count#103 = 1;

     label17:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sum#67);

        nop;

        if sum#67 != 0 goto label18;

        nop;

        count#103 = 0;

     label18:
        nop;

        k#110 = 0;

     label19:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(k#110);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stride#61);

        nop;

        if k#110 >= stride#61 goto label20;

        nop;

        $i15 = i#69 - k#110;

        nop;

        $i16 = $i15 - 1;

        nop;

        counts[$i16] = count#103;

        nop;

        k#110 = k#110 + 1;

        nop;

        goto label19;

     label20:
        nop;

        stride#61 = 0;

        nop;

        sum#67 = 0;

        nop;

        $i17 = length#5 - 3;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#69);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        nop;

        if i#69 >= $i17 goto label21;

        nop;

        $i18 = counts[i#69];

        nop;

        $i19 = i#69 + 1;

        nop;

        $i20 = counts[$i19];

        nop;

        $i21 = $i18 + $i20;

        nop;

        $i22 = i#69 + 2;

        nop;

        $i23 = counts[$i22];

        nop;

        $i24 = $i21 + $i23;

        nop;

        $i25 = i#69 + 3;

        nop;

        $i26 = counts[$i25];

        nop;

        $i27 = $i24 + $i26;

        nop;

        $i28 = $i27 + 2;

        nop;

        limit#65 = $i28 / 4;

        nop;

        goto label23;

     label21:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#69);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if i#69 >= length#5 goto label22;

        nop;

        limit#65 = counts[i#69];

        nop;

        goto label23;

     label22:
        nop;

        limit#65 = 0;

     label23:
        nop;

        stride#61 = stride#61 + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#69);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#5);

        nop;

        if i#69 == length#5 goto label24;

        nop;

        $i29 = counts[i#69];

        nop;

        sum#67 = sum#67 + $i29;

     label24:
        nop;

        i#69 = i#69 + 1;

        nop;

        goto label14;

     label25:
        nop;

        return;
    }

    private static void lzCounts(char[], char[], int, int, int[], int[])
    {
        char[] litLens, dists;
        int start, end, i#4, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] llCount, dCount, lengthSymbol, cachedDistSymbol;
        char d, l;

        nop;

        litLens := @parameter0: char[];

        nop;

        dists := @parameter1: char[];

        nop;

        start := @parameter2: int;

        nop;

        end := @parameter3: int;

        nop;

        llCount := @parameter4: int[];

        nop;

        dCount := @parameter5: int[];

        nop;

        lengthSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        nop;

        cachedDistSymbol = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        nop;

        i#4 = start;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end);

        nop;

        if i#4 >= end goto label4;

        nop;

        d = dists[i#4];

        nop;

        l = litLens[i#4];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(d);

        nop;

        if d != 0 goto label2;

        nop;

        $i1 = llCount[l];

        nop;

        $i2 = $i1 + 1;

        nop;

        llCount[l] = $i2;

        nop;

        goto label3;

     label2:
        nop;

        $i3 = lengthSymbol[l];

        nop;

        $i4 = llCount[$i3];

        nop;

        $i5 = $i4 + 1;

        nop;

        llCount[$i3] = $i5;

        nop;

        $i6 = cachedDistSymbol[d];

        nop;

        $i7 = dCount[$i6];

        nop;

        $i8 = $i7 + 1;

        nop;

        dCount[$i6] = $i8;

     label3:
        nop;

        i#4 = i#4 + 1;

        nop;

        goto label1;

     label4:
        nop;

        llCount[256] = 1;

        nop;

        return;
    }

    private static void getFixedTree(int[], int[])
    {
        int[] llLengths, dLengths;
        int i#2, i#9, i#16, i#23, i#30;

        nop;

        llLengths := @parameter0: int[];

        nop;

        dLengths := @parameter1: int[];

        nop;

        i#2 = 0;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        nop;

        if i#2 >= 144 goto label02;

        nop;

        llLengths[i#2] = 8;

        nop;

        i#2 = i#2 + 1;

        nop;

        goto label01;

     label02:
        nop;

        i#9 = 144;

     label03:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9);

        nop;

        if i#9 >= 256 goto label04;

        nop;

        llLengths[i#9] = 9;

        nop;

        i#9 = i#9 + 1;

        nop;

        goto label03;

     label04:
        nop;

        i#16 = 256;

     label05:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#16);

        nop;

        if i#16 >= 280 goto label06;

        nop;

        llLengths[i#16] = 7;

        nop;

        i#16 = i#16 + 1;

        nop;

        goto label05;

     label06:
        nop;

        i#23 = 280;

     label07:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#23);

        nop;

        if i#23 >= 288 goto label08;

        nop;

        llLengths[i#23] = 8;

        nop;

        i#23 = i#23 + 1;

        nop;

        goto label07;

     label08:
        nop;

        i#30 = 0;

     label09:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#30);

        nop;

        if i#30 >= 32 goto label10;

        nop;

        dLengths[i#30] = 5;

        nop;

        i#30 = i#30 + 1;

        nop;

        goto label09;

     label10:
        nop;

        return;
    }

    private static int simulateAddDynamicTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[])
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths;
        int size, bestSize#2, i#4, $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        llLengths := @parameter1: int[];

        nop;

        dLengths := @parameter2: int[];

        nop;

        bestSize#2 = 2147483647;

        nop;

        i#4 = 0;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        nop;

        if i#4 >= 8 goto label9;

        nop;

        $i0 = i#4 & 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 == 0 goto label2;

        nop;

        $z0 = 1;

        nop;

        goto label3;

     label2:
        nop;

        $z0 = 0;

     label3:
        nop;

        $i1 = i#4 & 2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 == 0 goto label4;

        nop;

        $z1 = 1;

        nop;

        goto label5;

     label4:
        nop;

        $z1 = 0;

     label5:
        nop;

        $i2 = i#4 & 4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if $i2 == 0 goto label6;

        nop;

        $z2 = 1;

        nop;

        goto label7;

     label6:
        nop;

        $z2 = 0;

     label7:
        nop;

        size = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateEncodeTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean)>(cookie, llLengths, dLengths, $z0, $z1, $z2);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestSize#2);

        nop;

        if size >= bestSize#2 goto label8;

        nop;

        bestSize#2 = size;

     label8:
        nop;

        i#4 = i#4 + 1;

        nop;

        goto label1;

     label9:
        nop;

        return bestSize#2;
    }

    static void findLongestMatch(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, int, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash, byte[], int, int, int, char[])
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        int blockStart, pos, size, offset, arrayEnd, threshold, marker, same0, same1, limit#1, $i3, $i5, $i7, $i8, $i9, $i12, $i13, bestDist#78, bestLength#80, chainCounter#85, $i14, pp#96, p#109, pp#113, $i15, dist#118, scan#123, match#127, $i16, $i18, $i20, $i23, $i24, same#161, scan#182, j#189, $i28, pp#210, pp#219, $i29, $i30;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        byte[] array;
        char[] subLen, lmcLength, $r0, $r1, $r2, $r7, $r8, $r9;
        int[] hPrev2, hashVal2, hPrev#88, $r3, $r4, $r5, $r6;
        char $c0, $c1, $c2, $c4, $c6, $c10, $c11, $c27, $c31, $c32, $c33, $c34;
        byte $b17, $b19, $b21, $b22, $b25, $b26;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        lmc := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        blockStart := @parameter2: int;

        nop;

        h := @parameter3: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash;

        nop;

        array := @parameter4: byte[];

        nop;

        pos := @parameter5: int;

        nop;

        size := @parameter6: int;

        nop;

        limit#1 := @parameter7: int;

        nop;

        subLen := @parameter8: char[];

        nop;

        offset = pos - blockStart;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lmc);

        nop;

        if lmc == null goto label01;

        nop;

        $r0 = lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length>;

        nop;

        goto label02;

     label01:
        nop;

        $r0 = null;

     label02:
        nop;

        lmcLength = $r0;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lmc);

        nop;

        if lmc == null goto label10;

        nop;

        $c0 = lmcLength[offset];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c0);

        nop;

        if $c0 == 0 goto label03;

        nop;

        $r1 = lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        nop;

        $c1 = $r1[offset];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c1);

        nop;

        if $c1 == 0 goto label10;

     label03:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if limit#1 == 258 goto label04;

        nop;

        $c2 = lmcLength[offset];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c2);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if $c2 <= limit#1 goto label04;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subLen);

        nop;

        if subLen == null goto label10;

        nop;

        $i3 = virtualinvoke lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(offset);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if $i3 < limit#1 goto label10;

     label04:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subLen);

        nop;

        if subLen == null goto label05;

        nop;

        $c4 = lmcLength[offset];

        nop;

        $i5 = virtualinvoke lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(offset);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c4);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        nop;

        if $c4 > $i5 goto label09;

     label05:
        nop;

        $c6 = lmcLength[offset];

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = $c6;

        nop;

        $i7 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if $i7 <= limit#1 goto label06;

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = limit#1;

     label06:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subLen);

        nop;

        if subLen == null goto label07;

        nop;

        $i8 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        nop;

        virtualinvoke lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void cacheToSubLen(int,int,char[])>(offset, $i8, subLen);

        nop;

        $i9 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        nop;

        $c10 = subLen[$i9];

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = $c10;

        nop;

        goto label08;

     label07:
        nop;

        $r2 = lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        nop;

        $c11 = $r2[offset];

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = $c11;

     label08:
        nop;

        return;

     label09:
        nop;

        limit#1 = lmcLength[offset];

     label10:
        nop;

        $i12 = size - pos;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12);

        nop;

        if $i12 >= 3 goto label11;

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = 0;

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = 0;

        nop;

        return;

     label11:
        nop;

        $i13 = pos + limit#1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        nop;

        if $i13 <= size goto label12;

        nop;

        limit#1 = size - pos;

     label12:
        nop;

        bestDist#78 = 0;

        nop;

        bestLength#80 = 1;

        nop;

        arrayEnd = pos + limit#1;

        nop;

        chainCounter#85 = 8192;

        nop;

        hPrev#88 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] prev>;

        nop;

        hPrev2 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] prev2>;

        nop;

        $r3 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] head>;

        nop;

        $i14 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int val>;

        nop;

        pp#96 = $r3[$i14];

        nop;

        $r4 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        nop;

        threshold = $r4[pp#96];

        nop;

        hashVal2 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] hashVal2>;

        nop;

        marker = hashVal2[pp#96];

        nop;

        p#109 = hPrev#88[pp#96];

        nop;

        pp#113 = pp#96 - p#109;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pp#113);

        nop;

        if pp#113 <= 0 goto label13;

        nop;

        $i15 = pp#113;

        nop;

        goto label14;

     label13:
        nop;

        $i15 = pp#113 + 32768;

     label14:
        nop;

        dist#118 = $i15;

     label15:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dist#118);

        nop;

        if dist#118 >= 32768 goto label28;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(chainCounter#85);

        nop;

        if chainCounter#85 <= 0 goto label28;

        nop;

        scan#123 = pos;

        nop;

        match#127 = pos - dist#118;

        nop;

        $i16 = scan#123 + bestLength#80;

        nop;

        $b17 = array[$i16];

        nop;

        $i18 = match#127 + bestLength#80;

        nop;

        $b19 = array[$i18];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b17);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b19);

        nop;

        if $b17 != $b19 goto label23;

        nop;

        $r5 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        nop;

        $i20 = pos & 32767;

        nop;

        same0 = $r5[$i20];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(same0);

        nop;

        if same0 <= 2 goto label19;

        nop;

        $b21 = array[scan#123];

        nop;

        $b22 = array[match#127];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b21);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b22);

        nop;

        if $b21 != $b22 goto label19;

        nop;

        $r6 = h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        nop;

        $i23 = match#127 & 32767;

        nop;

        same1 = $r6[$i23];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(same0);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(same1);

        nop;

        if same0 >= same1 goto label16;

        nop;

        $i24 = same0;

        nop;

        goto label17;

     label16:
        nop;

        $i24 = same1;

     label17:
        nop;

        same#161 = $i24;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(same#161);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if same#161 <= limit#1 goto label18;

        nop;

        same#161 = limit#1;

     label18:
        nop;

        scan#123 = scan#123 + same#161;

        nop;

        match#127 = match#127 + same#161;

     label19:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scan#123);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(arrayEnd);

        nop;

        if scan#123 == arrayEnd goto label20;

        nop;

        $b25 = array[scan#123];

        nop;

        $b26 = array[match#127];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b25);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b26);

        nop;

        if $b25 != $b26 goto label20;

        nop;

        scan#123 = scan#123 + 1;

        nop;

        match#127 = match#127 + 1;

        nop;

        goto label19;

     label20:
        nop;

        scan#182 = scan#123 - pos;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scan#182);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestLength#80);

        nop;

        if scan#182 <= bestLength#80 goto label23;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subLen);

        nop;

        if subLen == null goto label22;

        nop;

        j#189 = bestLength#80 + 1;

     label21:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#189);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scan#182);

        nop;

        if j#189 > scan#182 goto label22;

        nop;

        $c27 = (char) dist#118;

        nop;

        subLen[j#189] = $c27;

        nop;

        j#189 = j#189 + 1;

        nop;

        goto label21;

     label22:
        nop;

        bestDist#78 = dist#118;

        nop;

        bestLength#80 = scan#182;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scan#182);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if scan#182 < limit#1 goto label23;

        nop;

        goto label28;

     label23:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hPrev#88);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hPrev2);

        nop;

        if hPrev#88 == hPrev2 goto label24;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestLength#80);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(threshold);

        nop;

        if bestLength#80 < threshold goto label24;

        nop;

        $i28 = hashVal2[p#109];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(marker);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i28);

        nop;

        if marker != $i28 goto label24;

        nop;

        hPrev#88 = hPrev2;

     label24:
        nop;

        pp#210 = p#109;

        nop;

        p#109 = hPrev#88[p#109];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(p#109);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pp#210);

        nop;

        if p#109 != pp#210 goto label25;

        nop;

        goto label28;

     label25:
        nop;

        pp#219 = pp#210 - p#109;

        nop;

        $i29 = dist#118;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pp#219);

        nop;

        if pp#219 <= 0 goto label26;

        nop;

        $i30 = pp#219;

        nop;

        goto label27;

     label26:
        nop;

        $i30 = 32768 + pp#219;

     label27:
        nop;

        dist#118 = $i29 + $i30;

        nop;

        chainCounter#85 = chainCounter#85 + -1;

        nop;

        goto label15;

     label28:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lmc);

        nop;

        if lmc == null goto label31;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit#1);

        nop;

        if limit#1 != 258 goto label31;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subLen);

        nop;

        if subLen == null goto label31;

        nop;

        $c31 = lmcLength[offset];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c31);

        nop;

        if $c31 == 0 goto label31;

        nop;

        $r7 = lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        nop;

        $c32 = $r7[offset];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c32);

        nop;

        if $c32 != 0 goto label31;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestLength#80);

        nop;

        if bestLength#80 >= 3 goto label29;

        nop;

        $r8 = lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        nop;

        $r8[offset] = 0;

        nop;

        lmcLength[offset] = 0;

        nop;

        goto label30;

     label29:
        nop;

        $r9 = lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        nop;

        $c33 = (char) bestDist#78;

        nop;

        $r9[offset] = $c33;

        nop;

        $c34 = (char) bestLength#80;

        nop;

        lmcLength[offset] = $c34;

     label30:
        nop;

        virtualinvoke lmc.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void subLenToCache(char[],int,int)>(subLen, offset, bestLength#80);

     label31:
        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = bestDist#78;

        nop;

        cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = bestLength#80;

        nop;

        return;
    }

    static void greedy(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, byte[], int, int, optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        byte[] input;
        int 'from', 'to', dist, lengthScore, prevLengthScore, $i0, $i1, prevLength#13, prevMatch#15, i#21, len#35, $i2, $i3, $i4, $i5, j#77, j#108;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        char[] dummySubLen;
        boolean matchAvailable#19;
        byte $b6, $b13;
        short $s7, $s14;
        char $c8, $c9, $c10, $c11, $c12, $c15;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        lmc := @parameter1: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        input := @parameter2: byte[];

        nop;

        'from' := @parameter3: int;

        nop;

        'to' := @parameter4: int;

        nop;

        store := @parameter5: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore;

        nop;

        h = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash h>;

        nop;

        $i0 = 'from' - 32768;

        nop;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        nop;

        virtualinvoke h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: void init(byte[],int,int,int)>(input, $i1, 'from', 'to');

        nop;

        prevLength#13 = 0;

        nop;

        prevMatch#15 = 0;

        nop;

        dummySubLen = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] c259a>;

        nop;

        matchAvailable#19 = 0;

        nop;

        i#21 = 'from';

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>('to');

        nop;

        if i#21 >= 'to' goto label15;

        nop;

        virtualinvoke h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#21, 'to');

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void findLongestMatch(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash,byte[],int,int,int,char[])>(cookie, lmc, 'from', h, input, i#21, 'to', 258, dummySubLen);

        nop;

        len#35 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        nop;

        dist = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dist);

        nop;

        if dist <= 1024 goto label02;

        nop;

        $i2 = len#35 - 1;

        nop;

        goto label03;

     label02:
        nop;

        $i2 = len#35;

     label03:
        nop;

        lengthScore = $i2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(prevMatch#15);

        nop;

        if prevMatch#15 <= 1024 goto label04;

        nop;

        $i3 = prevLength#13 - 1;

        nop;

        goto label05;

     label04:
        nop;

        $i3 = prevLength#13;

     label05:
        nop;

        prevLengthScore = $i3;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(matchAvailable#19);

        nop;

        if matchAvailable#19 == 0 goto label09;

        nop;

        matchAvailable#19 = 0;

        nop;

        $i4 = prevLengthScore + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lengthScore);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        nop;

        if lengthScore <= $i4 goto label06;

        nop;

        $i5 = i#21 - 1;

        nop;

        $b6 = input[$i5];

        nop;

        $s7 = $b6 & 255;

        nop;

        $c8 = (char) $s7;

        nop;

        virtualinvoke store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c8, 0);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lengthScore);

        nop;

        if lengthScore < 3 goto label10;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#35);

        nop;

        if len#35 >= 258 goto label10;

        nop;

        matchAvailable#19 = 1;

        nop;

        prevLength#13 = len#35;

        nop;

        prevMatch#15 = dist;

        nop;

        goto label14;

     label06:
        nop;

        $c9 = (char) prevLength#13;

        nop;

        $c10 = (char) prevMatch#15;

        nop;

        virtualinvoke store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c9, $c10);

        nop;

        j#77 = 2;

     label07:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#77);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(prevLength#13);

        nop;

        if j#77 >= prevLength#13 goto label08;

        nop;

        i#21 = i#21 + 1;

        nop;

        virtualinvoke h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#21, 'to');

        nop;

        j#77 = j#77 + 1;

        nop;

        goto label07;

     label08:
        nop;

        goto label14;

     label09:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lengthScore);

        nop;

        if lengthScore < 3 goto label10;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#35);

        nop;

        if len#35 >= 258 goto label10;

        nop;

        matchAvailable#19 = 1;

        nop;

        prevLength#13 = len#35;

        nop;

        prevMatch#15 = dist;

        nop;

        goto label14;

     label10:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lengthScore);

        nop;

        if lengthScore < 3 goto label11;

        nop;

        $c11 = (char) len#35;

        nop;

        $c12 = (char) dist;

        nop;

        virtualinvoke store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c11, $c12);

        nop;

        goto label12;

     label11:
        nop;

        len#35 = 1;

        nop;

        $b13 = input[i#21];

        nop;

        $s14 = $b13 & 255;

        nop;

        $c15 = (char) $s14;

        nop;

        virtualinvoke store.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c15, 0);

     label12:
        nop;

        j#108 = 1;

     label13:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#108);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#35);

        nop;

        if j#108 >= len#35 goto label14;

        nop;

        i#21 = i#21 + 1;

        nop;

        virtualinvoke h.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#21, 'to');

        nop;

        j#108 = j#108 + 1;

        nop;

        goto label13;

     label14:
        nop;

        i#21 = i#21 + 1;

        nop;

        goto label01;

     label15:
        nop;

        return;
    }

    private static void encodeTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], boolean, boolean, boolean, optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths, lldLengths, rle, rleBits, clCounts, clCl, clSymbols, order, $r0, $r2, $r3, $r4;
        boolean use16, use17, use18;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int lldTotal, symbol, symbol, hLit#2, hDist#4, $i0, $i1, $i2, $i3, $i4, $i5, $i6, rleSize#39, i#45, count#49, j#60, $i7, $i8, i#72, $i9, delta#82, $i10, $i11, $i12, delta#100, $i13, $i14, $i15, $i16, delta#126, $i17, $i18, $i19, i#153, $i20, $i21, $i22, hcLen#188, $i23, $i24, $i25, i#207, $i26, $i27, $i28, i#220, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        llLengths := @parameter1: int[];

        nop;

        dLengths := @parameter2: int[];

        nop;

        use16 := @parameter3: boolean;

        nop;

        use17 := @parameter4: boolean;

        nop;

        use18 := @parameter5: boolean;

        nop;

        output := @parameter6: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nop;

        hLit#2 = 29;

        nop;

        hDist#4 = 29;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hLit#2);

        nop;

        if hLit#2 <= 0 goto label02;

        nop;

        $i0 = 256 + hLit#2;

        nop;

        $i1 = llLengths[$i0];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 != 0 goto label02;

        nop;

        hLit#2 = hLit#2 + -1;

        nop;

        goto label01;

     label02:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hDist#4);

        nop;

        if hDist#4 <= 0 goto label03;

        nop;

        $i2 = dLengths[hDist#4];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if $i2 != 0 goto label03;

        nop;

        hDist#4 = hDist#4 + -1;

        nop;

        goto label02;

     label03:
        nop;

        $i3 = hLit#2 + 258;

        nop;

        lldTotal = $i3 + hDist#4;

        nop;

        lldLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320b>;

        nop;

        $i4 = 257 + hLit#2;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llLengths, 0, lldLengths, 0, $i4);

        nop;

        $i5 = 257 + hLit#2;

        nop;

        $i6 = hDist#4 + 1;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dLengths, 0, lldLengths, $i5, $i6);

        nop;

        rleSize#39 = 0;

        nop;

        rle = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320a>;

        nop;

        rleBits = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320c>;

        nop;

        i#45 = 0;

     label04:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#45);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lldTotal);

        nop;

        if i#45 >= lldTotal goto label21;

        nop;

        count#49 = 1;

        nop;

        symbol = lldLengths[i#45];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use16);

        nop;

        if use16 != 0 goto label05;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol);

        nop;

        if symbol != 0 goto label07;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use17);

        nop;

        if use17 != 0 goto label05;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use18);

        nop;

        if use18 == 0 goto label07;

     label05:
        nop;

        j#60 = i#45 + 1;

     label06:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#60);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lldTotal);

        nop;

        if j#60 >= lldTotal goto label07;

        nop;

        $i7 = lldLengths[j#60];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        if symbol != $i7 goto label07;

        nop;

        count#49 = count#49 + 1;

        nop;

        j#60 = j#60 + 1;

        nop;

        goto label06;

     label07:
        nop;

        $i8 = count#49 - 1;

        nop;

        i#72 = i#45 + $i8;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol);

        nop;

        if symbol != 0 goto label15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 2 goto label15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use18);

        nop;

        if use18 == 0 goto label11;

     label08:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 10 goto label11;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 138 goto label09;

        nop;

        $i9 = 138;

        nop;

        goto label10;

     label09:
        nop;

        $i9 = count#49;

     label10:
        nop;

        delta#82 = $i9;

        nop;

        rle[rleSize#39] = 18;

        nop;

        $i10 = rleSize#39;

        nop;

        rleSize#39 = rleSize#39 + 1;

        nop;

        $i11 = delta#82 - 11;

        nop;

        rleBits[$i10] = $i11;

        nop;

        count#49 = count#49 - delta#82;

        nop;

        goto label08;

     label11:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use17);

        nop;

        if use17 == 0 goto label15;

     label12:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 2 goto label15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 10 goto label13;

        nop;

        $i12 = 10;

        nop;

        goto label14;

     label13:
        nop;

        $i12 = count#49;

     label14:
        nop;

        delta#100 = $i12;

        nop;

        rle[rleSize#39] = 17;

        nop;

        $i13 = rleSize#39;

        nop;

        rleSize#39 = rleSize#39 + 1;

        nop;

        $i14 = delta#100 - 3;

        nop;

        rleBits[$i13] = $i14;

        nop;

        count#49 = count#49 - delta#100;

        nop;

        goto label12;

     label15:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use16);

        nop;

        if use16 == 0 goto label19;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 3 goto label19;

        nop;

        count#49 = count#49 + -1;

        nop;

        rle[rleSize#39] = symbol;

        nop;

        $i15 = rleSize#39;

        nop;

        rleSize#39 = rleSize#39 + 1;

        nop;

        rleBits[$i15] = 0;

     label16:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 2 goto label19;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 <= 6 goto label17;

        nop;

        $i16 = 6;

        nop;

        goto label18;

     label17:
        nop;

        $i16 = count#49;

     label18:
        nop;

        delta#126 = $i16;

        nop;

        rle[rleSize#39] = 16;

        nop;

        $i17 = rleSize#39;

        nop;

        rleSize#39 = rleSize#39 + 1;

        nop;

        $i18 = delta#126 - 3;

        nop;

        rleBits[$i17] = $i18;

        nop;

        count#49 = count#49 - delta#126;

        nop;

        goto label16;

     label19:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#49);

        nop;

        if count#49 == 0 goto label20;

        nop;

        rle[rleSize#39] = symbol;

        nop;

        $i19 = rleSize#39;

        nop;

        rleSize#39 = rleSize#39 + 1;

        nop;

        rleBits[$i19] = 0;

        nop;

        count#49 = count#49 + -1;

        nop;

        goto label19;

     label20:
        nop;

        i#45 = i#72 + 1;

        nop;

        goto label04;

     label21:
        nop;

        clCounts = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19a>;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, clCounts, 0, 19);

        nop;

        i#153 = 0;

     label22:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#153);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rleSize#39);

        nop;

        if i#153 >= rleSize#39 goto label23;

        nop;

        $i20 = rle[i#153];

        nop;

        $i21 = clCounts[$i20];

        nop;

        $i22 = $i21 + 1;

        nop;

        clCounts[$i20] = $i22;

        nop;

        i#153 = i#153 + 1;

        nop;

        goto label22;

     label23:
        nop;

        clCl = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19b>;

        nop;

        $r2 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, clCl, 0, 19);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, clCounts, 7, clCl);

        nop;

        clSymbols = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19c>;

        nop;

        $r3 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        nop;

        $r4 = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(clCl, 19, 7, clSymbols, $r3, $r4);

        nop;

        order = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] ORDER>;

        nop;

        hcLen#188 = 15;

     label24:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hcLen#188);

        nop;

        if hcLen#188 <= 0 goto label25;

        nop;

        $i23 = hcLen#188 + 3;

        nop;

        $i24 = order[$i23];

        nop;

        $i25 = clCounts[$i24];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i25);

        nop;

        if $i25 != 0 goto label25;

        nop;

        hcLen#188 = hcLen#188 + -1;

        nop;

        goto label24;

     label25:
        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hLit#2, 5);

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hDist#4, 5);

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hcLen#188, 4);

        nop;

        i#207 = 0;

     label26:
        nop;

        $i26 = hcLen#188 + 4;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#207);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i26);

        nop;

        if i#207 >= $i26 goto label27;

        nop;

        $i27 = order[i#207];

        nop;

        $i28 = clCl[$i27];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i28, 3);

        nop;

        i#207 = i#207 + 1;

        nop;

        goto label26;

     label27:
        nop;

        i#220 = 0;

     label28:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#220);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rleSize#39);

        nop;

        if i#220 >= rleSize#39 goto label32;

        nop;

        $i29 = rle[i#220];

        nop;

        symbol = clSymbols[$i29];

        nop;

        $i30 = rle[i#220];

        nop;

        $i31 = clCl[$i30];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(symbol, $i31);

        nop;

        $i32 = rle[i#220];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i32);

        nop;

        if $i32 != 16 goto label29;

        nop;

        $i33 = rleBits[i#220];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i33, 2);

        nop;

        goto label31;

     label29:
        nop;

        $i34 = rle[i#220];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i34);

        nop;

        if $i34 != 17 goto label30;

        nop;

        $i35 = rleBits[i#220];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i35, 3);

        nop;

        goto label31;

     label30:
        nop;

        $i36 = rle[i#220];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i36);

        nop;

        if $i36 != 18 goto label31;

        nop;

        $i37 = rleBits[i#220];

        nop;

        virtualinvoke output.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i37, 7);

     label31:
        nop;

        i#220 = i#220 + 1;

        nop;

        goto label28;

     label32:
        nop;

        return;
    }

    private static int simulateEncodeTree(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], boolean, boolean, boolean)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths, lldLengths, rle, clCounts, clCl, order, $r0, $r2;
        boolean use16, use17, use18;
        int lldTotal, symbol, hLit#2, hDist#4, $i0, $i1, $i2, $i3, $i4, $i5, $i6, rleSize#41, i#43, count#47, j#58, $i7, $i8, i#70, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i#124, $i20, $i21, $i22, $i24, $i25, $i27, $i28, $i30, $i31, hcLen#170, $i32, $i33, $i34, $i35, $i36, result#186, i#188, $i37, $i38, $i39;

        nop;

        cookie := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        nop;

        llLengths := @parameter1: int[];

        nop;

        dLengths := @parameter2: int[];

        nop;

        use16 := @parameter3: boolean;

        nop;

        use17 := @parameter4: boolean;

        nop;

        use18 := @parameter5: boolean;

        nop;

        hLit#2 = 29;

        nop;

        hDist#4 = 29;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hLit#2);

        nop;

        if hLit#2 <= 0 goto label02;

        nop;

        $i0 = 256 + hLit#2;

        nop;

        $i1 = llLengths[$i0];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 != 0 goto label02;

        nop;

        hLit#2 = hLit#2 + -1;

        nop;

        goto label01;

     label02:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hDist#4);

        nop;

        if hDist#4 <= 0 goto label03;

        nop;

        $i2 = dLengths[hDist#4];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        nop;

        if $i2 != 0 goto label03;

        nop;

        hDist#4 = hDist#4 + -1;

        nop;

        goto label02;

     label03:
        nop;

        $i3 = hLit#2 + 258;

        nop;

        lldTotal = $i3 + hDist#4;

        nop;

        lldLengths = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320b>;

        nop;

        $i4 = 257 + hLit#2;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llLengths, 0, lldLengths, 0, $i4);

        nop;

        $i5 = 257 + hLit#2;

        nop;

        $i6 = hDist#4 + 1;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dLengths, 0, lldLengths, $i5, $i6);

        nop;

        rle = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320a>;

        nop;

        rleSize#41 = 0;

        nop;

        i#43 = 0;

     label04:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#43);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lldTotal);

        nop;

        if i#43 >= lldTotal goto label21;

        nop;

        count#47 = 1;

        nop;

        symbol = lldLengths[i#43];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use16);

        nop;

        if use16 != 0 goto label05;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol);

        nop;

        if symbol != 0 goto label07;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use17);

        nop;

        if use17 != 0 goto label05;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use18);

        nop;

        if use18 == 0 goto label07;

     label05:
        nop;

        j#58 = i#43 + 1;

     label06:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#58);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lldTotal);

        nop;

        if j#58 >= lldTotal goto label07;

        nop;

        $i7 = lldLengths[j#58];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        if symbol != $i7 goto label07;

        nop;

        count#47 = count#47 + 1;

        nop;

        j#58 = j#58 + 1;

        nop;

        goto label06;

     label07:
        nop;

        $i8 = count#47 - 1;

        nop;

        i#70 = i#43 + $i8;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(symbol);

        nop;

        if symbol != 0 goto label15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 2 goto label15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use18);

        nop;

        if use18 == 0 goto label11;

     label08:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 10 goto label11;

        nop;

        $i9 = rleSize#41;

        nop;

        rleSize#41 = rleSize#41 + 1;

        nop;

        rle[$i9] = 18;

        nop;

        $i10 = count#47;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 138 goto label09;

        nop;

        $i11 = 138;

        nop;

        goto label10;

     label09:
        nop;

        $i11 = count#47;

     label10:
        nop;

        count#47 = $i10 - $i11;

        nop;

        goto label08;

     label11:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use17);

        nop;

        if use17 == 0 goto label15;

     label12:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 2 goto label15;

        nop;

        $i12 = rleSize#41;

        nop;

        rleSize#41 = rleSize#41 + 1;

        nop;

        rle[$i12] = 17;

        nop;

        $i13 = count#47;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 10 goto label13;

        nop;

        $i14 = 10;

        nop;

        goto label14;

     label13:
        nop;

        $i14 = count#47;

     label14:
        nop;

        count#47 = $i13 - $i14;

        nop;

        goto label12;

     label15:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(use16);

        nop;

        if use16 == 0 goto label19;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 3 goto label19;

        nop;

        count#47 = count#47 + -1;

        nop;

        $i15 = rleSize#41;

        nop;

        rleSize#41 = rleSize#41 + 1;

        nop;

        rle[$i15] = symbol;

     label16:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 2 goto label19;

        nop;

        $i16 = rleSize#41;

        nop;

        rleSize#41 = rleSize#41 + 1;

        nop;

        rle[$i16] = 16;

        nop;

        $i17 = count#47;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 <= 6 goto label17;

        nop;

        $i18 = 6;

        nop;

        goto label18;

     label17:
        nop;

        $i18 = count#47;

     label18:
        nop;

        count#47 = $i17 - $i18;

        nop;

        goto label16;

     label19:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#47);

        nop;

        if count#47 == 0 goto label20;

        nop;

        $i19 = rleSize#41;

        nop;

        rleSize#41 = rleSize#41 + 1;

        nop;

        rle[$i19] = symbol;

        nop;

        count#47 = count#47 + -1;

        nop;

        goto label19;

     label20:
        nop;

        i#43 = i#70 + 1;

        nop;

        goto label04;

     label21:
        nop;

        clCounts = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19a>;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, clCounts, 0, 19);

        nop;

        i#124 = 0;

     label22:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#124);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rleSize#41);

        nop;

        if i#124 >= rleSize#41 goto label23;

        nop;

        $i20 = rle[i#124];

        nop;

        $i21 = clCounts[$i20];

        nop;

        $i22 = $i21 + 1;

        nop;

        clCounts[$i20] = $i22;

        nop;

        i#124 = i#124 + 1;

        nop;

        goto label22;

     label23:
        nop;

        clCl = cookie.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19b>;

        nop;

        $r2 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, clCl, 0, 19);

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, clCounts, 7, clCl);

        nop;

        $i24 = clCl[16];

        nop;

        $i25 = $i24 + 2;

        nop;

        clCl[16] = $i25;

        nop;

        $i27 = clCl[17];

        nop;

        $i28 = $i27 + 3;

        nop;

        clCl[17] = $i28;

        nop;

        $i30 = clCl[18];

        nop;

        $i31 = $i30 + 7;

        nop;

        clCl[18] = $i31;

        nop;

        order = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Util: int[] ORDER>;

        nop;

        hcLen#170 = 15;

     label24:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(hcLen#170);

        nop;

        if hcLen#170 <= 0 goto label25;

        nop;

        $i32 = hcLen#170 + 3;

        nop;

        $i33 = order[$i32];

        nop;

        $i34 = clCounts[$i33];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i34);

        nop;

        if $i34 != 0 goto label25;

        nop;

        hcLen#170 = hcLen#170 + -1;

        nop;

        goto label24;

     label25:
        nop;

        $i35 = hcLen#170 + 4;

        nop;

        $i36 = $i35 * 3;

        nop;

        result#186 = 14 + $i36;

        nop;

        i#188 = 0;

     label26:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#188);

        nop;

        if i#188 >= 19 goto label27;

        nop;

        $i37 = clCl[i#188];

        nop;

        $i38 = clCounts[i#188];

        nop;

        $i39 = $i37 * $i38;

        nop;

        result#186 = result#186 + $i39;

        nop;

        i#188 = i#188 + 1;

        nop;

        goto label26;

     label27:
        nop;

        return result#186;
    }


