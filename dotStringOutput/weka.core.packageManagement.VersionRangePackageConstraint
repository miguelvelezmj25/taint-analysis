digraph setRangeConstraint {
"this := @this: weka.core.packageManagement.VersionRangePackageConstraint {161545141}" -> "bound1 := @parameter0: java.lang.String {1648654836}";
"bound1 := @parameter0: java.lang.String {1648654836}" -> "comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {1788054850}";
"comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {1788054850}" -> "bound2 := @parameter2: java.lang.String {1223185110}";
"bound2 := @parameter2: java.lang.String {1223185110}" -> "comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {1604275313}";
"comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {1604275313}" -> "$r0 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1095965355}";
"$r0 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1095965355}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {1287265597}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {1287265597}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {950894617}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {950894617}" -> "if comp1 == $r0 goto $r2 = new java.lang.Exception {1408928647}";
"if comp1 == $r0 goto $r2 = new java.lang.Exception {1408928647}" -> "$r1 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1516626623}";
"if comp1 == $r0 goto $r2 = new java.lang.Exception {1408928647}" -> "$r2 = new java.lang.Exception {68892761}";
"$r1 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1516626623}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp2) {812931129}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp2) {812931129}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {250626449}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {250626449}" -> "if comp2 != $r1 goto $z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {62536986}";
"if comp2 != $r1 goto $z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {62536986}" -> "$r2 = new java.lang.Exception {68892761}";
"if comp2 != $r1 goto $z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {62536986}" -> "$z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {1091411198}";
"$r2 = new java.lang.Exception {68892761}" -> "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint (= not allowed)!\") {1662092447}";
"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint (= not allowed)!\") {1662092447}" -> "throw $r2 {2031305146}";
"$z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {1091411198}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {602432859}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {602432859}" -> "if $z0 == 0 goto boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {586161140}";
"if $z0 == 0 goto boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {586161140}" -> "$r3 = new java.lang.Exception {797128420}";
"if $z0 == 0 goto boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {586161140}" -> "boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {781792999}";
"$r3 = new java.lang.Exception {797128420}" -> "specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint!\") {805866958}";
"specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint!\") {805866958}" -> "throw $r3 {109750589}";
"boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {781792999}" -> "$r4 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1311059489}";
"$r4 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1311059489}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1367049193}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1367049193}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {835667659}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {835667659}" -> "if boundsComp != $r4 goto $r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1406965007}";
"if boundsComp != $r4 goto $r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1406965007}" -> "$r5 = new java.lang.Exception {873840541}";
"if boundsComp != $r4 goto $r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1406965007}" -> "$r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1602624845}";
"$r5 = new java.lang.Exception {873840541}" -> "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range - both bounds are equal!\") {985896018}";
"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range - both bounds are equal!\") {985896018}" -> "throw $r5 {590560704}";
"$r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1602624845}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {944103689}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {944103689}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6) {987354948}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6) {987354948}" -> "if comp1 == $r6 goto $r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {2034328555}";
"if comp1 == $r6 goto $r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {2034328555}" -> "$r7 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHANOREQUAL> {1318893645}";
"if comp1 == $r6 goto $r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {2034328555}" -> "$r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {612591729}";
"$r7 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHANOREQUAL> {1318893645}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {1774390564}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {1774390564}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7) {165769210}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7) {165769210}" -> "if comp1 != $r7 goto $r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {555727014}";
"if comp1 != $r7 goto $r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {555727014}" -> "$r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {612591729}";
"if comp1 != $r7 goto $r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {555727014}" -> "$r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1890127163}";
"$r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {612591729}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1639841426}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1639841426}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8) {1533076209}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8) {1533076209}" -> "if boundsComp != $r8 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {267838076}";
"if boundsComp != $r8 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {267838076}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {557514943}";
"if boundsComp != $r8 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {267838076}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {693164265}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {557514943}" -> "goto [?= $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN>] {426173414}";
"goto [?= $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN>] {426173414}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {693164265}";
"$r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1890127163}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {790119550}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {790119550}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9) {577896127}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9) {577896127}" -> "if boundsComp != $r9 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {158258537}";
"if boundsComp != $r9 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {158258537}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {986461037}";
"if boundsComp != $r9 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {158258537}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {693164265}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {986461037}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {693164265}";
"$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {693164265}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1689772300}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1689772300}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10) {1226731299}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10) {1226731299}" -> "if boundsComp != $r10 goto this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {175227288}";
"if boundsComp != $r10 goto this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {175227288}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound1 {144910841}";
"if boundsComp != $r10 goto this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {175227288}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {289749050}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound1 {144910841}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp1 {1296695277}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp1 {1296695277}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound2 {1228511040}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound2 {1228511040}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp2 {704119119}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp2 {704119119}" -> "goto [?= return] {746459303}";
"goto [?= return] {746459303}" -> "return {2106878522}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {289749050}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp2 {664829621}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp2 {664829621}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound1 {1900301140}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound1 {1900301140}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp1 {786012766}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp1 {786012766}" -> "return {2106878522}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {835667659}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {1774390564}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9) {577896127}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp2) {812931129}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {602432859}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8) {1533076209}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {790119550}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {944103689}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {950894617}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7) {165769210}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1689772300}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1367049193}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10) {1226731299}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {250626449}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1639841426}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6) {987354948}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {1287265597}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: weka.core.packageManagement.VersionRangePackageConstraint {1989786511}" -> "p := @parameter0: weka.core.packageManagement.Package {124347921}";
"p := @parameter0: weka.core.packageManagement.Package {124347921}" -> "specialinvoke this.<weka.core.packageManagement.PackageConstraint: void <init>()>() {304711738}";
"specialinvoke this.<weka.core.packageManagement.PackageConstraint: void <init>()>() {304711738}" -> "virtualinvoke this.<weka.core.packageManagement.VersionRangePackageConstraint: void setPackage(weka.core.packageManagement.Package)>(p) {1328020148}";
"virtualinvoke this.<weka.core.packageManagement.VersionRangePackageConstraint: void setPackage(weka.core.packageManagement.Package)>(p) {1328020148}" -> "return {1883770605}";
}

digraph checkConstraint {
"this := @this: weka.core.packageManagement.VersionRangePackageConstraint {78741319}" -> "target := @parameter0: weka.core.packageManagement.Package {672946014}";
"target := @parameter0: weka.core.packageManagement.Package {672946014}" -> "$r0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {504758219}";
"$r0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {504758219}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {681779306}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {681779306}" -> "if $r0 == null goto $r2 = new java.lang.Exception {1425669616}";
"if $r0 == null goto $r2 = new java.lang.Exception {1425669616}" -> "$r1 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {2075145688}";
"if $r0 == null goto $r2 = new java.lang.Exception {1425669616}" -> "$r2 = new java.lang.Exception {1365705746}";
"$r1 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {2075145688}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {1767323437}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {1767323437}" -> "if $r1 != null goto $r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1256879810}";
"if $r1 != null goto $r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1256879810}" -> "$r2 = new java.lang.Exception {1365705746}";
"if $r1 != null goto $r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1256879810}" -> "$r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1624881273}";
"$r2 = new java.lang.Exception {1365705746}" -> "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] No constraint has been set!\") {1323879375}";
"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] No constraint has been set!\") {1323879375}" -> "throw $r2 {2143249154}";
"$r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1624881273}" -> "$r4 = virtualinvoke target.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>($r3) {1760014622}";
"$r4 = virtualinvoke target.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>($r3) {1760014622}" -> "targetVersion = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>() {1870358246}";
"targetVersion = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>() {1870358246}" -> "$r5 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {1463969342}";
"$r5 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {1463969342}" -> "$r6 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> {1407284402}";
"$r6 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> {1407284402}" -> "$r7 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {527606784}";
"$r7 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {527606784}" -> "$r8 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> {1013196759}";
"$r8 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> {1013196759}" -> "$z0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> {73210124}";
"$z0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> {73210124}" -> "$z1 = staticinvoke <weka.core.packageManagement.VersionRangePackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,boolean)>(targetVersion, $r5, $r6, $r7, $r8, $z0) {421190863}";
"$z1 = staticinvoke <weka.core.packageManagement.VersionRangePackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,boolean)>(targetVersion, $r5, $r6, $r7, $r8, $z0) {421190863}" -> "return $z1 {1229027901}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {681779306}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {1767323437}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph checkConstraint {
"toCheck := @parameter0: java.lang.String {1632457396}" -> "comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {781523035}";
"comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {781523035}" -> "bound1 := @parameter2: java.lang.String {1034318658}";
"bound1 := @parameter2: java.lang.String {1034318658}" -> "comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {315679440}";
"comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {315679440}" -> "bound2 := @parameter4: java.lang.String {16067254}";
"bound2 := @parameter4: java.lang.String {16067254}" -> "boundOr := @parameter5: boolean {176561556}";
"boundOr := @parameter5: boolean {176561556}" -> "result1 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp1, bound1) {928264862}";
"result1 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp1, bound1) {928264862}" -> "result2 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp2, bound2) {549791981}";
"result2 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp2, bound2) {549791981}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundOr) {1085291953}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundOr) {1085291953}" -> "if boundOr == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {114735966}";
"if boundOr == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {114735966}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {564090574}";
"if boundOr == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {114735966}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {807182775}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {564090574}" -> "if result1 != 0 goto $z0 = 1 {1744992793}";
"if result1 != 0 goto $z0 = 1 {1744992793}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {1751067067}";
"if result1 != 0 goto $z0 = 1 {1744992793}" -> "$z0 = 1 {2034189029}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {1751067067}" -> "if result2 == 0 goto $z0 = 0 {1438546379}";
"if result2 == 0 goto $z0 = 0 {1438546379}" -> "$z0 = 1 {2034189029}";
"if result2 == 0 goto $z0 = 0 {1438546379}" -> "$z0 = 0 {1835564775}";
"$z0 = 1 {2034189029}" -> "goto [?= return $z0] {43396457}";
"goto [?= return $z0] {43396457}" -> "return $z0 {1262363296}";
"$z0 = 0 {1835564775}" -> "return $z0 {1262363296}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {807182775}" -> "if result1 == 0 goto $z1 = 0 {2078009430}";
"if result1 == 0 goto $z1 = 0 {2078009430}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {269391061}";
"if result1 == 0 goto $z1 = 0 {2078009430}" -> "$z1 = 0 {752927590}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {269391061}" -> "if result2 == 0 goto $z1 = 0 {1878736291}";
"if result2 == 0 goto $z1 = 0 {1878736291}" -> "$z1 = 1 {206034493}";
"if result2 == 0 goto $z1 = 0 {1878736291}" -> "$z1 = 0 {752927590}";
"$z1 = 1 {206034493}" -> "goto [?= return $z1] {679085755}";
"goto [?= return $z1] {679085755}" -> "return $z1 {448853372}";
"$z1 = 0 {752927590}" -> "return $z1 {448853372}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {807182775}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {269391061}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundOr) {1085291953}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {564090574}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {1751067067}"[fontcolor="blue", penwidth=3, color="blue"];
}


