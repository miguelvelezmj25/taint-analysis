digraph <init> {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {1806815749}" -> "btreeComparator := @parameter0: java.util.Comparator {135254299}";
"btreeComparator := @parameter0: java.util.Comparator {135254299}" -> "dupComparator := @parameter1: java.util.Comparator {1236904625}";
"dupComparator := @parameter1: java.util.Comparator {1236904625}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {2132574865}";
"specialinvoke this.<java.lang.Object: void <init>()>() {2132574865}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {441606426}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {441606426}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {473178101}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {473178101}" -> "return {367523800}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {566696980}" -> "l1 := @parameter0: java.lang.Object {1048747846}";
"l1 := @parameter0: java.lang.Object {1048747846}" -> "l2 := @parameter1: java.lang.Object {172962163}";
"l2 := @parameter1: java.lang.Object {172962163}" -> "$r0 = (byte[]) l1 {563206382}";
"$r0 = (byte[]) l1 {563206382}" -> "$r1 = (byte[]) l2 {718735451}";
"$r1 = (byte[]) l2 {718735451}" -> "$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {95351623}";
"$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {95351623}" -> "return $i0 {1029023213}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {864089552}" -> "twoPartKey1 := @parameter0: byte[] {1012709288}";
"twoPartKey1 := @parameter0: byte[] {1012709288}" -> "twoPartKey2 := @parameter1: byte[] {1585946028}";
"twoPartKey2 := @parameter1: byte[] {1585946028}" -> "$i0 = lengthof twoPartKey1 {1983472314}";
"$i0 = lengthof twoPartKey1 {1983472314}" -> "$i1 = $i0 - 1 {1525713654}";
"$i1 = $i0 - 1 {1525713654}" -> "origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {1075642013}";
"origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {1075642013}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {1575102504}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1575102504}" -> "$i2 = lengthof twoPartKey1 {1327990499}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1575102504}" -> "$i3 = origKeySize1 {645338477}";
"$i2 = lengthof twoPartKey1 {1327990499}" -> "$i3 = $i2 - 1 {1103456672}";
"$i3 = $i2 - 1 {1103456672}" -> "goto [?= keySize1 = $i3] {1427411378}";
"goto [?= keySize1 = $i3] {1427411378}" -> "keySize1 = $i3 {343786743}";
"$i3 = origKeySize1 {645338477}" -> "keySize1 = $i3 {343786743}";
"keySize1 = $i3 {343786743}" -> "$i4 = lengthof twoPartKey2 {2082006700}";
"$i4 = lengthof twoPartKey2 {2082006700}" -> "$i5 = $i4 - 1 {1234483902}";
"$i5 = $i4 - 1 {1234483902}" -> "origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {1980711629}";
"origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {1980711629}" -> "if origKeySize2 != -1 goto $i7 = origKeySize2 {342784633}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {342784633}" -> "$i6 = lengthof twoPartKey2 {275665507}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {342784633}" -> "$i7 = origKeySize2 {1015071944}";
"$i6 = lengthof twoPartKey2 {275665507}" -> "$i7 = $i6 - 1 {478059389}";
"$i7 = $i6 - 1 {478059389}" -> "goto [?= keySize2 = $i7] {1587505202}";
"goto [?= keySize2 = $i7] {1587505202}" -> "keySize2 = $i7 {199813227}";
"$i7 = origKeySize2 {1015071944}" -> "keySize2 = $i7 {199813227}";
"keySize2 = $i7 {199813227}" -> "$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {344975442}";
"$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {344975442}" -> "if $r0 != null goto key1 = newarray (byte)[keySize1] {1592817000}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {1592817000}" -> "keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {377577661}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {1592817000}" -> "key1 = newarray (byte)[keySize1] {128592959}";
"keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {377577661}" -> "goto [?= (branch)] {1095674212}";
"goto [?= (branch)] {1095674212}" -> "if keyCmp#34 == 0 goto (branch) {816046983}";
"key1 = newarray (byte)[keySize1] {128592959}" -> "key2 = newarray (byte)[keySize2] {849432790}";
"key2 = newarray (byte)[keySize2] {849432790}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {2064922760}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {2064922760}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {501984510}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {501984510}" -> "$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {310806364}";
"$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {310806364}" -> "keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {380176666}";
"keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {380176666}" -> "if keyCmp#34 == 0 goto (branch) {816046983}";
"if keyCmp#34 == 0 goto (branch) {816046983}" -> "return keyCmp#34 {1075884232}";
"if keyCmp#34 == 0 goto (branch) {816046983}" -> "if origKeySize1 == -1 goto (branch) {1789563058}";
"if origKeySize1 == -1 goto (branch) {1789563058}" -> "if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {57723757}";
"if origKeySize1 == -1 goto (branch) {1789563058}" -> "if origKeySize1 != origKeySize2 goto (branch) {997524741}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {57723757}" -> "if origKeySize1 != origKeySize2 goto (branch) {997524741}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {57723757}" -> "$i9 = lengthof twoPartKey1 {851065198}";
"if origKeySize1 != origKeySize2 goto (branch) {997524741}" -> "return 0 {212678051}";
"if origKeySize1 != origKeySize2 goto (branch) {997524741}" -> "if origKeySize1 != -1 goto $b8 = 1 {533007838}";
"if origKeySize1 != -1 goto $b8 = 1 {533007838}" -> "$b8 = -1 {2048926632}";
"if origKeySize1 != -1 goto $b8 = 1 {533007838}" -> "$b8 = 1 {442586388}";
"$b8 = -1 {2048926632}" -> "goto [?= return $b8] {713802983}";
"goto [?= return $b8] {713802983}" -> "return $b8 {771559547}";
"$b8 = 1 {442586388}" -> "return $b8 {771559547}";
"$i9 = lengthof twoPartKey1 {851065198}" -> "$i10 = $i9 - 1 {2079213398}";
"$i10 = $i9 - 1 {2079213398}" -> "keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1503497319}";
"keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1503497319}" -> "$i11 = lengthof twoPartKey2 {572524495}";
"$i11 = lengthof twoPartKey2 {572524495}" -> "$i12 = $i11 - 1 {1121562700}";
"$i12 = $i11 - 1 {1121562700}" -> "keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {1742008985}";
"keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {1742008985}" -> "$i13 = lengthof twoPartKey1 {1163183639}";
"$i13 = lengthof twoPartKey1 {1163183639}" -> "$i14 = $i13 - keySize1 {1777911449}";
"$i14 = $i13 - keySize1 {1777911449}" -> "dataSize1 = $i14 - keySizeLen1 {570723810}";
"dataSize1 = $i14 - keySizeLen1 {570723810}" -> "$i15 = lengthof twoPartKey2 {2039033108}";
"$i15 = lengthof twoPartKey2 {2039033108}" -> "$i16 = $i15 - keySize2 {1220725440}";
"$i16 = $i15 - keySize2 {1220725440}" -> "dataSize2 = $i16 - keySizeLen2 {1872124048}";
"dataSize2 = $i16 - keySizeLen2 {1872124048}" -> "$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1420745088}";
"$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1420745088}" -> "if $r2 != null goto data1 = newarray (byte)[dataSize1] {86409788}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {86409788}" -> "dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {79516734}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {86409788}" -> "data1 = newarray (byte)[dataSize1] {1079340049}";
"dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {79516734}" -> "goto [?= return dataCmp#99] {115676016}";
"goto [?= return dataCmp#99] {115676016}" -> "return dataCmp#99 {121810173}";
"data1 = newarray (byte)[dataSize1] {1079340049}" -> "data2 = newarray (byte)[dataSize2] {1034867851}";
"data2 = newarray (byte)[dataSize2] {1034867851}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {758149242}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {758149242}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {9560707}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {9560707}" -> "$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1185982356}";
"$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1185982356}" -> "dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1536365384}";
"dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1536365384}" -> "return dataCmp#99 {121810173}";
}


