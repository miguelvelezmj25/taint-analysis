    public void <init>(java.lang.String, java.util.List)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        java.util.List attributeValues;
        weka.core.ProtectedProperties $r0;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        attributeValues := @parameter1: java.util.List;

        $r0 = (weka.core.ProtectedProperties) null;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,java.util.List,weka.core.ProtectedProperties)>(attributeName, attributeValues, $r0);

        return;
    }

    public void <init>(java.lang.String, java.util.List, weka.core.ProtectedProperties)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        java.util.List attributeValues;
        weka.core.ProtectedProperties metadata;
        weka.core.NominalAttributeInfo $r0;
        weka.core.AttributeMetaInfo $r1;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        attributeValues := @parameter1: java.util.List;

        metadata := @parameter2: weka.core.ProtectedProperties;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.Attribute: int m_Index> = -1;

        this.<weka.core.Attribute: double m_Weight> = 1.0;

        this.<weka.core.Attribute: java.lang.String m_Name> = attributeName;

        $r0 = new weka.core.NominalAttributeInfo;

        specialinvoke $r0.<weka.core.NominalAttributeInfo: void <init>(java.util.List,java.lang.String)>(attributeValues, attributeName);

        this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo> = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(attributeValues);

        if attributeValues != null goto label1;

        this.<weka.core.Attribute: int m_Type> = 2;

        goto label2;

     label1:
        this.<weka.core.Attribute: int m_Type> = 1;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(metadata);

        if metadata == null goto label3;

        $r1 = new weka.core.AttributeMetaInfo;

        specialinvoke $r1.<weka.core.AttributeMetaInfo: void <init>(weka.core.ProtectedProperties,weka.core.Attribute)>(metadata, this);

        this.<weka.core.Attribute: weka.core.AttributeMetaInfo m_AttributeMetaInfo> = $r1;

     label3:
        return;
    }

    public void <init>(java.lang.String)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        weka.core.ProtectedProperties $r0;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        $r0 = (weka.core.ProtectedProperties) null;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,weka.core.ProtectedProperties)>(attributeName, $r0);

        return;
    }

    public void <init>(java.lang.String, weka.core.ProtectedProperties)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        weka.core.ProtectedProperties metadata;
        weka.core.AttributeMetaInfo $r0;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        metadata := @parameter1: weka.core.ProtectedProperties;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.Attribute: int m_Index> = -1;

        this.<weka.core.Attribute: double m_Weight> = 1.0;

        this.<weka.core.Attribute: java.lang.String m_Name> = attributeName;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(metadata);

        if metadata == null goto label1;

        $r0 = new weka.core.AttributeMetaInfo;

        specialinvoke $r0.<weka.core.AttributeMetaInfo: void <init>(weka.core.ProtectedProperties,weka.core.Attribute)>(metadata, this);

        this.<weka.core.Attribute: weka.core.AttributeMetaInfo m_AttributeMetaInfo> = $r0;

     label1:
        return;
    }

    public int addStringValue(java.lang.String)
    {
        weka.core.Attribute this;
        java.lang.String value;
        java.lang.Exception ex, $r1;
        java.lang.Integer index, $r16;
        int intIndex, $i0, $i1;
        boolean $z0;
        java.io.Serializable store#5;
        weka.core.SerializedObject $r0;
        java.io.PrintStream $r2;
        weka.core.AttributeInfo $r3, $r7, $r10, $r13;
        weka.core.NominalAttributeInfo $r4, $r8, $r11, $r14;
        java.util.Hashtable $r5, $r15;
        java.lang.Object $r6;
        java.util.ArrayList $r9, $r12;

        this := @this: weka.core.Attribute;

        value := @parameter0: java.lang.String;

        $z0 = virtualinvoke this.<weka.core.Attribute: boolean isString()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        store#5 = value;

        $i0 = virtualinvoke value.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 200 goto label5;

     label2:
        $r0 = new weka.core.SerializedObject;

        specialinvoke $r0.<weka.core.SerializedObject: void <init>(java.lang.Object,boolean)>(value, 1);

        store#5 = $r0;

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

        ex = $r1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Couldn\'t compress string attribute value - storing uncompressed.");

     label5:
        $r3 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r4 = (weka.core.NominalAttributeInfo) $r3;

        $r5 = $r4.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(store#5);

        index = (java.lang.Integer) $r6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index);

        if index == null goto label6;

        $i1 = virtualinvoke index.<java.lang.Integer: int intValue()>();

        return $i1;

     label6:
        $r7 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r8 = (weka.core.NominalAttributeInfo) $r7;

        $r9 = $r8.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values>;

        intIndex = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r10 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r11 = (weka.core.NominalAttributeInfo) $r10;

        $r12 = $r11.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(store#5);

        $r13 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r14 = (weka.core.NominalAttributeInfo) $r13;

        $r15 = $r14.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable>;

        $r16 = new java.lang.Integer;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(intIndex);

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(store#5, $r16);

        return intIndex;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public final int numValues()
    {
        weka.core.Attribute this;
        boolean $z0, $z1, $z2;
        weka.core.AttributeInfo $r0;
        weka.core.NominalAttributeInfo $r1;
        java.util.ArrayList $r2;
        int $i0;

        this := @this: weka.core.Attribute;

        $z0 = virtualinvoke this.<weka.core.Attribute: boolean isNominal()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke this.<weka.core.Attribute: boolean isString()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke this.<weka.core.Attribute: boolean isRelationValued()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label1;

        return 0;

     label1:
        $r0 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r1 = (weka.core.NominalAttributeInfo) $r0;

        $r2 = $r1.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public final java.lang.String value(int)
    {
        weka.core.Attribute this;
        int valIndex;
        boolean $z0, $z1, $z2;
        weka.core.AttributeInfo $r0;
        weka.core.NominalAttributeInfo $r1;
        java.util.ArrayList $r2;
        java.lang.Object val#11;
        weka.core.SerializedObject $r3;
        java.lang.String $r4;

        this := @this: weka.core.Attribute;

        valIndex := @parameter0: int;

        $z0 = virtualinvoke this.<weka.core.Attribute: boolean isNominal()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke this.<weka.core.Attribute: boolean isString()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label1;

        return "";

     label1:
        $r0 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r1 = (weka.core.NominalAttributeInfo) $r0;

        $r2 = $r1.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values>;

        val#11 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(valIndex);

        $z2 = val#11 instanceof weka.core.SerializedObject;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label2;

        $r3 = (weka.core.SerializedObject) val#11;

        val#11 = virtualinvoke $r3.<weka.core.SerializedObject: java.lang.Object getObject()>();

     label2:
        $r4 = (java.lang.String) val#11;

        return $r4;
    }

    public final boolean isNominal()
    {
        weka.core.Attribute this;
        int $i0;
        boolean $z0;

        this := @this: weka.core.Attribute;

        $i0 = this.<weka.core.Attribute: int m_Type>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isString()
    {
        weka.core.Attribute this;
        int $i0;
        boolean $z0;

        this := @this: weka.core.Attribute;

        $i0 = this.<weka.core.Attribute: int m_Type>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isRelationValued()
    {
        weka.core.Attribute this;
        int $i0;
        boolean $z0;

        this := @this: weka.core.Attribute;

        $i0 = this.<weka.core.Attribute: int m_Type>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>(java.lang.String, java.util.List, int)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        java.util.List attributeValues;
        int index;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        attributeValues := @parameter1: java.util.List;

        index := @parameter2: int;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,java.util.List)>(attributeName, attributeValues);

        this.<weka.core.Attribute: int m_Index> = index;

        return;
    }

    public void <init>(java.lang.String, weka.core.Instances, int)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        weka.core.Instances header;
        int index;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        header := @parameter1: weka.core.Instances;

        index := @parameter2: int;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,weka.core.Instances)>(attributeName, header);

        this.<weka.core.Attribute: int m_Index> = index;

        return;
    }

    public void <init>(java.lang.String, weka.core.Instances)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        weka.core.Instances header;
        weka.core.ProtectedProperties $r0;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        header := @parameter1: weka.core.Instances;

        $r0 = (weka.core.ProtectedProperties) null;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,weka.core.Instances,weka.core.ProtectedProperties)>(attributeName, header, $r0);

        return;
    }

    public void <init>(java.lang.String, weka.core.Instances, weka.core.ProtectedProperties)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        weka.core.Instances header;
        weka.core.ProtectedProperties metadata;
        int $i0;
        java.lang.IllegalArgumentException $r0;
        weka.core.RelationalAttributeInfo $r1;
        weka.core.AttributeMetaInfo $r2;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        header := @parameter1: weka.core.Instances;

        metadata := @parameter2: weka.core.ProtectedProperties;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.Attribute: int m_Index> = -1;

        this.<weka.core.Attribute: double m_Weight> = 1.0;

        $i0 = virtualinvoke header.<weka.core.Instances: int numInstances()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header for relation-valued attribute should not contain any instances");

        throw $r0;

     label1:
        this.<weka.core.Attribute: java.lang.String m_Name> = attributeName;

        this.<weka.core.Attribute: int m_Type> = 4;

        $r1 = new weka.core.RelationalAttributeInfo;

        specialinvoke $r1.<weka.core.RelationalAttributeInfo: void <init>(weka.core.Instances)>(header);

        this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo> = $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(metadata);

        if metadata == null goto label2;

        $r2 = new weka.core.AttributeMetaInfo;

        specialinvoke $r2.<weka.core.AttributeMetaInfo: void <init>(weka.core.ProtectedProperties,weka.core.Attribute)>(metadata, this);

        this.<weka.core.Attribute: weka.core.AttributeMetaInfo m_AttributeMetaInfo> = $r2;

     label2:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, int)
    {
        weka.core.Attribute this;
        java.lang.String attributeName, dateFormat;
        int index;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        dateFormat := @parameter1: java.lang.String;

        index := @parameter2: int;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,java.lang.String)>(attributeName, dateFormat);

        this.<weka.core.Attribute: int m_Index> = index;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        weka.core.Attribute this;
        java.lang.String attributeName, dateFormat;
        weka.core.ProtectedProperties $r0;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        dateFormat := @parameter1: java.lang.String;

        $r0 = (weka.core.ProtectedProperties) null;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String,java.lang.String,weka.core.ProtectedProperties)>(attributeName, dateFormat, $r0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, weka.core.ProtectedProperties)
    {
        weka.core.Attribute this;
        java.lang.String attributeName, dateFormat;
        weka.core.ProtectedProperties metadata;
        weka.core.DateAttributeInfo $r0;
        weka.core.AttributeMetaInfo $r1;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        dateFormat := @parameter1: java.lang.String;

        metadata := @parameter2: weka.core.ProtectedProperties;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.Attribute: int m_Index> = -1;

        this.<weka.core.Attribute: double m_Weight> = 1.0;

        this.<weka.core.Attribute: java.lang.String m_Name> = attributeName;

        this.<weka.core.Attribute: int m_Type> = 3;

        $r0 = new weka.core.DateAttributeInfo;

        specialinvoke $r0.<weka.core.DateAttributeInfo: void <init>(java.lang.String)>(dateFormat);

        this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo> = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(metadata);

        if metadata == null goto label1;

        $r1 = new weka.core.AttributeMetaInfo;

        specialinvoke $r1.<weka.core.AttributeMetaInfo: void <init>(weka.core.ProtectedProperties,weka.core.Attribute)>(metadata, this);

        this.<weka.core.Attribute: weka.core.AttributeMetaInfo m_AttributeMetaInfo> = $r1;

     label1:
        return;
    }

    public void <init>(java.lang.String, int)
    {
        weka.core.Attribute this;
        java.lang.String attributeName;
        int index;

        this := @this: weka.core.Attribute;

        attributeName := @parameter0: java.lang.String;

        index := @parameter1: int;

        specialinvoke this.<weka.core.Attribute: void <init>(java.lang.String)>(attributeName);

        this.<weka.core.Attribute: int m_Index> = index;

        return;
    }

    public final int indexOfValue(java.lang.String)
    {
        weka.core.Attribute this;
        java.lang.String value;
        java.lang.Exception ex, $r1;
        java.lang.Integer val;
        boolean $z0, $z1;
        java.io.Serializable store#7;
        int $i0, $i1;
        weka.core.SerializedObject $r0;
        java.io.PrintStream $r2;
        weka.core.AttributeInfo $r3;
        weka.core.NominalAttributeInfo $r4;
        java.util.Hashtable $r5;
        java.lang.Object $r6;

        this := @this: weka.core.Attribute;

        value := @parameter0: java.lang.String;

        $z0 = virtualinvoke this.<weka.core.Attribute: boolean isNominal()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke this.<weka.core.Attribute: boolean isString()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label1;

        return -1;

     label1:
        store#7 = value;

        $i0 = virtualinvoke value.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 200 goto label5;

     label2:
        $r0 = new weka.core.SerializedObject;

        specialinvoke $r0.<weka.core.SerializedObject: void <init>(java.lang.Object,boolean)>(value, 1);

        store#7 = $r0;

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

        ex = $r1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Couldn\'t compress string attribute value - searching uncompressed.");

     label5:
        $r3 = this.<weka.core.Attribute: weka.core.AttributeInfo m_AttributeInfo>;

        $r4 = (weka.core.NominalAttributeInfo) $r3;

        $r5 = $r4.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(store#7);

        val = (java.lang.Integer) $r6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val != null goto label6;

        return -1;

     label6:
        $i1 = virtualinvoke val.<java.lang.Integer: int intValue()>();

        return $i1;

        catch java.lang.Exception from label2 to label3 with label4;
    }


