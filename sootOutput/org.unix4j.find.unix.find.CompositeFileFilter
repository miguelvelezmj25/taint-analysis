    public void add(java.io.FileFilter)
    {
        org.unix4j.find.unix.find.CompositeFileFilter this;
        java.io.FileFilter filter;
        java.util.List $r0;

        this := @this: org.unix4j.find.unix.find.CompositeFileFilter;

        filter := @parameter0: java.io.FileFilter;

        $r0 = this.<org.unix4j.find.unix.find.CompositeFileFilter: java.util.List componentFilters>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(filter);

        return;
    }

    public void addIfNotNull(java.io.FileFilter)
    {
        org.unix4j.find.unix.find.CompositeFileFilter this;
        java.io.FileFilter filter;

        this := @this: org.unix4j.find.unix.find.CompositeFileFilter;

        filter := @parameter0: java.io.FileFilter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(filter);

        if filter == null goto label1;

        virtualinvoke this.<org.unix4j.find.unix.find.CompositeFileFilter: void add(java.io.FileFilter)>(filter);

     label1:
        return;
    }

    public java.io.FileFilter simplify()
    {
        org.unix4j.find.unix.find.CompositeFileFilter this;
        java.util.List $r0, $r2, $r3;
        boolean $z0;
        org.unix4j.find.unix.find.CompositeFileFilter$1 $r1;
        int $i0;
        java.lang.Object $r4;
        java.io.FileFilter $r5;

        this := @this: org.unix4j.find.unix.find.CompositeFileFilter;

        $r0 = this.<org.unix4j.find.unix.find.CompositeFileFilter: java.util.List componentFilters>;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r1 = new org.unix4j.find.unix.find.CompositeFileFilter$1;

        specialinvoke $r1.<org.unix4j.find.unix.find.CompositeFileFilter$1: void <init>(org.unix4j.find.unix.find.CompositeFileFilter)>(this);

        return $r1;

     label1:
        $r2 = this.<org.unix4j.find.unix.find.CompositeFileFilter: java.util.List componentFilters>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 1 goto label2;

        $r3 = this.<org.unix4j.find.unix.find.CompositeFileFilter: java.util.List componentFilters>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.io.FileFilter) $r4;

        return $r5;

     label2:
        return this;
    }

    public void <init>()
    {
        org.unix4j.find.unix.find.CompositeFileFilter this;
        java.util.ArrayList $r0;

        this := @this: org.unix4j.find.unix.find.CompositeFileFilter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<org.unix4j.find.unix.find.CompositeFileFilter: java.util.List componentFilters> = $r0;

        return;
    }

    public boolean accept(java.io.File)
    {
        org.unix4j.find.unix.find.CompositeFileFilter this;
        java.io.File file;
        java.util.Iterator l2;
        java.io.FileFilter filter;
        java.util.List $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;

        this := @this: org.unix4j.find.unix.find.CompositeFileFilter;

        file := @parameter0: java.io.File;

        $r0 = this.<org.unix4j.find.unix.find.CompositeFileFilter: java.util.List componentFilters>;

        l2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        filter = (java.io.FileFilter) $r1;

        $z1 = interfaceinvoke filter.<java.io.FileFilter: boolean accept(java.io.File)>(file);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }


