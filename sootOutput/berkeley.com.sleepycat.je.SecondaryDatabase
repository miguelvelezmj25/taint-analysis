    static boolean needOldDataForDelete(java.util.Collection)
    {
        java.util.Collection secondaries;
        java.util.Iterator l1;
        berkeley.com.sleepycat.je.SecondaryDatabase secDb;
        boolean $z0, $z1;
        java.lang.Object $r0;
        berkeley.com.sleepycat.je.SecondaryConfig $r1;

        secondaries := @parameter0: java.util.Collection;

        if secondaries != null goto label1;

        return 0;

     label1:
        l1 = interfaceinvoke secondaries.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r0 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        secDb = (berkeley.com.sleepycat.je.SecondaryDatabase) $r0;

        $r1 = secDb.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        $z1 = virtualinvoke $r1.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getExtractFromPrimaryKeyOnly()>();

        if $z1 != 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.Set $r1;

        $r0 = class "berkeley/com/sleepycat/je/SecondaryDatabase";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.SecondaryDatabase: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        <berkeley.com.sleepycat.je.SecondaryDatabase: java.util.Set EMPTY_SET> = $r1;

        return;
    }

    static boolean needOldDataForUpdate(java.util.Collection)
    {
        java.util.Collection secondaries;
        java.util.Iterator l1;
        berkeley.com.sleepycat.je.SecondaryDatabase secDb;
        boolean $z0, $z1;
        java.lang.Object $r0;

        secondaries := @parameter0: java.util.Collection;

        if secondaries != null goto label1;

        return 0;

     label1:
        l1 = interfaceinvoke secondaries.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r0 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        secDb = (berkeley.com.sleepycat.je.SecondaryDatabase) $r0;

        $z1 = virtualinvoke secDb.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean updateMayChangeSecondary()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    void <init>(berkeley.com.sleepycat.je.Environment, berkeley.com.sleepycat.je.SecondaryConfig, berkeley.com.sleepycat.je.Database)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Environment env, $r14;
        berkeley.com.sleepycat.je.SecondaryConfig secConfig;
        berkeley.com.sleepycat.je.Database primaryDatabase, foreignDb, $r35;
        berkeley.com.sleepycat.je.SecondaryAssociation $r0, $r3;
        java.lang.IllegalArgumentException $r1, $r2, $r4, $r7, $r16, $r20, $r23, $r26, $r31, $r34, $r37;
        boolean $z0, $z1, $z2, $z3;
        berkeley.com.sleepycat.je.DatabaseConfig $r6, $r17;
        java.lang.StringBuilder $r8, $r9, $r11, $r38, $r39, $r41;
        java.lang.String $r10, $r12, $r40, $r42;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r13, $r15;
        berkeley.com.sleepycat.je.SecondaryKeyCreator $r18, $r21;
        berkeley.com.sleepycat.je.SecondaryMultiKeyCreator $r19, $r22, $r33;
        berkeley.com.sleepycat.je.ForeignKeyNullifier $r24, $r29, $r32;
        berkeley.com.sleepycat.je.ForeignMultiKeyNullifier $r25, $r30;
        berkeley.com.sleepycat.je.ForeignKeyDeleteAction $r27, $r28;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r36;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        env := @parameter0: berkeley.com.sleepycat.je.Environment;

        secConfig := @parameter1: berkeley.com.sleepycat.je.SecondaryConfig;

        primaryDatabase := @parameter2: berkeley.com.sleepycat.je.Database;

        specialinvoke this.<berkeley.com.sleepycat.je.Database: void <init>(berkeley.com.sleepycat.je.Environment)>(env);

        this.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean isFullyPopulated> = 1;

        this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase> = primaryDatabase;

        if primaryDatabase != null goto label02;

        $r0 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryAssociation getSecondaryAssociation()>();

        if $r0 != null goto label01;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one must be non-null: PrimaryDatabase or SecondaryAssociation");

        throw $r1;

     label01:
        $z0 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getAllowPopulate()>();

        if $z0 == 0 goto label06;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AllowPopulate must be false when a SecondaryAssociation is configured");

        throw $r2;

     label02:
        $r3 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryAssociation getSecondaryAssociation()>();

        if $r3 == null goto label03;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one must be non-null: PrimaryDatabase or SecondaryAssociation");

        throw $r4;

     label03:
        virtualinvoke primaryDatabase.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.dbi.DatabaseImpl checkOpen()>();

        $r6 = primaryDatabase.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.DatabaseConfig configuration>;

        $z1 = virtualinvoke $r6.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getSortedDuplicates()>();

        if $z1 == 0 goto label04;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicates not allowed for a primary database: ");

        $r10 = virtualinvoke primaryDatabase.<berkeley.com.sleepycat.je.Database: java.lang.String getDebugName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label04:
        $r13 = virtualinvoke env.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getNonNullEnvImpl()>();

        $r14 = virtualinvoke primaryDatabase.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.Environment getEnvironment()>();

        $r15 = virtualinvoke $r14.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getNonNullEnvImpl()>();

        if $r13 == $r15 goto label05;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Primary and secondary databases must be in the same environment");

        throw $r16;

     label05:
        $r17 = primaryDatabase.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.DatabaseConfig configuration>;

        $z2 = virtualinvoke $r17.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReadOnly()>();

        if $z2 != 0 goto label06;

        $r18 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryKeyCreator getKeyCreator()>();

        if $r18 != null goto label06;

        $r19 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        if $r19 != null goto label06;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SecondaryConfig.getKeyCreator()/getMultiKeyCreator() may be null only if the primary database is read-only");

        throw $r20;

     label06:
        $r21 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryKeyCreator getKeyCreator()>();

        if $r21 == null goto label07;

        $r22 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        if $r22 == null goto label07;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("secConfig.getKeyCreator() and getMultiKeyCreator() may not both be non-null");

        throw $r23;

     label07:
        $r24 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.ForeignKeyNullifier getForeignKeyNullifier()>();

        if $r24 == null goto label08;

        $r25 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.ForeignMultiKeyNullifier getForeignMultiKeyNullifier()>();

        if $r25 == null goto label08;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("secConfig.getForeignKeyNullifier() and getForeignMultiKeyNullifier() may not both be non-null");

        throw $r26;

     label08:
        $r27 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.ForeignKeyDeleteAction getForeignKeyDeleteAction()>();

        $r28 = <berkeley.com.sleepycat.je.ForeignKeyDeleteAction: berkeley.com.sleepycat.je.ForeignKeyDeleteAction NULLIFY>;

        if $r27 != $r28 goto label09;

        $r29 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.ForeignKeyNullifier getForeignKeyNullifier()>();

        if $r29 != null goto label09;

        $r30 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.ForeignMultiKeyNullifier getForeignMultiKeyNullifier()>();

        if $r30 != null goto label09;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ForeignKeyNullifier or ForeignMultiKeyNullifier must be non-null when ForeignKeyDeleteAction is NULLIFY");

        throw $r31;

     label09:
        $r32 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.ForeignKeyNullifier getForeignKeyNullifier()>();

        if $r32 == null goto label10;

        $r33 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        if $r33 == null goto label10;

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ForeignKeyNullifier may not be used with SecondaryMultiKeyCreator -- use ForeignMultiKeyNullifier instead");

        throw $r34;

     label10:
        $r35 = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.Database getForeignKeyDatabase()>();

        if $r35 == null goto label11;

        foreignDb = virtualinvoke secConfig.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.Database getForeignKeyDatabase()>();

        $r36 = virtualinvoke foreignDb.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDbImpl()>();

        $z3 = virtualinvoke $r36.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>();

        if $z3 == 0 goto label11;

        $r37 = new java.lang.IllegalArgumentException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicates must not be allowed for a foreign key  database: ");

        $r40 = virtualinvoke foreignDb.<berkeley.com.sleepycat.je.Database: java.lang.String getDebugName()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r37;

     label11:
        return;
    }

    public volatile berkeley.com.sleepycat.je.DatabaseConfig getConfig()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.SecondaryConfig $r0;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig getConfig()>();

        return $r0;
    }

    public berkeley.com.sleepycat.je.SecondaryConfig getConfig()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.DatabaseConfig $r0;
        berkeley.com.sleepycat.je.SecondaryConfig $r1;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        $r0 = specialinvoke this.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.DatabaseConfig getConfig()>();

        $r1 = (berkeley.com.sleepycat.je.SecondaryConfig) $r0;

        return $r1;
    }

    void initExisting(berkeley.com.sleepycat.je.Environment, berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.dbi.DatabaseImpl, java.lang.String, berkeley.com.sleepycat.je.DatabaseConfig)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Environment env;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl database, $r1, $r3;
        java.lang.String databaseName, $r7, $r9;
        berkeley.com.sleepycat.je.DatabaseConfig dbConfig;
        berkeley.com.sleepycat.je.Database otherPriDb, $r0, $r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        env := @parameter0: berkeley.com.sleepycat.je.Environment;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        database := @parameter2: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        databaseName := @parameter3: java.lang.String;

        dbConfig := @parameter4: berkeley.com.sleepycat.je.DatabaseConfig;

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        if $r0 == null goto label1;

        otherPriDb = virtualinvoke database.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.Database findPrimaryDatabase()>();

        if otherPriDb == null goto label1;

        $r1 = virtualinvoke otherPriDb.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDbImpl()>();

        $r2 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDbImpl()>();

        if $r1 == $r3 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Secondary already associated with different primary: ");

        $r7 = virtualinvoke otherPriDb.<berkeley.com.sleepycat.je.Database: java.lang.String getDebugName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        specialinvoke this.<berkeley.com.sleepycat.je.Database: void initExisting(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.dbi.DatabaseImpl,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig)>(env, locker, database, databaseName, dbConfig);

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void init(berkeley.com.sleepycat.je.txn.Locker)>(locker);

        return;
    }

    berkeley.com.sleepycat.je.dbi.DatabaseImpl initNew(berkeley.com.sleepycat.je.Environment, berkeley.com.sleepycat.je.txn.Locker, java.lang.String, berkeley.com.sleepycat.je.DatabaseConfig)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Environment env;
        berkeley.com.sleepycat.je.txn.Locker locker;
        java.lang.String databaseName;
        berkeley.com.sleepycat.je.DatabaseConfig dbConfig;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl dbImpl;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        env := @parameter0: berkeley.com.sleepycat.je.Environment;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        databaseName := @parameter2: java.lang.String;

        dbConfig := @parameter3: berkeley.com.sleepycat.je.DatabaseConfig;

        dbImpl = specialinvoke this.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.dbi.DatabaseImpl initNew(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.txn.Locker,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig)>(env, locker, databaseName, dbConfig);

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void init(berkeley.com.sleepycat.je.txn.Locker)>(locker);

        return dbImpl;
    }

    void removeReferringAssociations()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Database foreignDb, $r0, $r1;
        java.util.Collection $r2, $r5;
        berkeley.com.sleepycat.je.SecondaryConfig $r3, $r4;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        specialinvoke this.<berkeley.com.sleepycat.je.Database: void removeReferringAssociations()>();

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        $r2 = $r1.<berkeley.com.sleepycat.je.Database: java.util.Collection simpleAssocSecondaries>;

        interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(this);

     label1:
        $r3 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        if $r3 == null goto label2;

        $r4 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        foreignDb = virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.Database getForeignKeyDatabase()>();

        if foreignDb == null goto label2;

        $r5 = foreignDb.<berkeley.com.sleepycat.je.Database: java.util.Collection foreignKeySecondaries>;

        interfaceinvoke $r5.<java.util.Collection: boolean remove(java.lang.Object)>(this);

     label2:
        return;
    }

    private void init(berkeley.com.sleepycat.je.txn.Locker)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.Database foreignDb, $r12;
        berkeley.com.sleepycat.je.DatabaseEntry key, data, $r8, $r9;
        java.lang.Throwable l8, $r16;
        java.util.logging.Level $r0;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r1;
        berkeley.com.sleepycat.je.DatabaseConfig $r2;
        berkeley.com.sleepycat.je.SecondaryConfig $r3, $r4, $r6;
        java.util.Collection $r5;
        boolean $z1;
        berkeley.com.sleepycat.je.Cursor secCursor#22, priCursor#24, $r7, $r11;
        berkeley.com.sleepycat.je.LockMode $r10, $r13, $r14;
        berkeley.com.sleepycat.je.OperationResult result#41, result#60;
        long $l0, $l1;
        berkeley.com.sleepycat.je.dbi.GetMode $r15;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        locker := @parameter0: berkeley.com.sleepycat.je.txn.Locker;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void trace(java.util.logging.Level,java.lang.String)>($r0, "SecondaryDatabase open");

        $r1 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDbImpl()>();

        virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: void setKnownSecondary()>();

        $r2 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.DatabaseConfig configuration>;

        $r3 = (berkeley.com.sleepycat.je.SecondaryConfig) $r2;

        this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig> = $r3;

        $r4 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        foreignDb = virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.Database getForeignKeyDatabase()>();

        if foreignDb == null goto label01;

        $r5 = foreignDb.<berkeley.com.sleepycat.je.Database: java.util.Collection foreignKeySecondaries>;

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(this);

     label01:
        $r6 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        $z1 = virtualinvoke $r6.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getAllowPopulate()>();

        if $z1 != 0 goto label02;

        return;

     label02:
        secCursor#22 = null;

        priCursor#24 = null;

     label03:
        $r7 = new berkeley.com.sleepycat.je.Cursor;

        specialinvoke $r7.<berkeley.com.sleepycat.je.Cursor: void <init>(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.CursorConfig)>(this, locker, null);

        secCursor#22 = $r7;

        $r8 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r8.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        key = $r8;

        $r9 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r9.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        data = $r9;

        $r10 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode DEFAULT>;

        result#41 = virtualinvoke secCursor#22.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult position(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode,berkeley.com.sleepycat.je.CacheMode,boolean)>(key, data, $r10, null, 1);

        if result#41 == null goto label07;

     label04:
        if secCursor#22 == null goto label05;

        virtualinvoke secCursor#22.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label05:
        if priCursor#24 == null goto label06;

        virtualinvoke priCursor#24.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label06:
        return;

     label07:
        $r11 = new berkeley.com.sleepycat.je.Cursor;

        $r12 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        specialinvoke $r11.<berkeley.com.sleepycat.je.Cursor: void <init>(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.CursorConfig)>($r12, locker, null);

        priCursor#24 = $r11;

        $r13 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode DEFAULT>;

        result#60 = virtualinvoke priCursor#24.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult position(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode,berkeley.com.sleepycat.je.CacheMode,boolean)>(key, data, $r13, null, 1);

     label08:
        if result#60 == null goto label09;

        $l0 = virtualinvoke result#60.<berkeley.com.sleepycat.je.OperationResult: long getExpirationTime()>();

        $l1 = virtualinvoke result#60.<berkeley.com.sleepycat.je.OperationResult: long getExpirationTime()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: int updateSecondary(berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,long,boolean,long)>(locker, secCursor#22, key, null, data, null, $l0, 0, $l1);

        $r14 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode DEFAULT>;

        $r15 = <berkeley.com.sleepycat.je.dbi.GetMode: berkeley.com.sleepycat.je.dbi.GetMode NEXT>;

        result#60 = virtualinvoke priCursor#24.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult retrieveNext(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.GetMode)>(key, data, $r14, null, $r15);

        goto label08;

     label09:
        if secCursor#22 == null goto label10;

        virtualinvoke secCursor#22.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label10:
        if priCursor#24 == null goto label16;

        virtualinvoke priCursor#24.<berkeley.com.sleepycat.je.Cursor: void close()>();

        goto label16;

     label11:
        $r16 := @caughtexception;

     label12:
        l8 = $r16;

     label13:
        if secCursor#22 == null goto label14;

        virtualinvoke secCursor#22.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label14:
        if priCursor#24 == null goto label15;

        virtualinvoke priCursor#24.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label15:
        throw l8;

     label16:
        return;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label09 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void trace(java.util.logging.Level, java.lang.String)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        java.util.logging.Level level;
        java.lang.String methodName, $r4, $r8, $r12;
        java.lang.StringBuilder sb, $r1, $r3, $r6;
        java.util.logging.Logger $r0, $r10;
        boolean $z0;
        berkeley.com.sleepycat.je.Database $r7;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r11;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        level := @parameter0: java.util.logging.Level;

        methodName := @parameter1: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.util.logging.Logger logger>;

        $z0 = virtualinvoke $r0.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>(level);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        sb = $r1;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(methodName);

        $r3 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r4 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" primary=");

        $r7 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        $r8 = virtualinvoke $r7.<berkeley.com.sleepycat.je.Database: java.lang.String getDebugName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.util.logging.Logger logger>;

        $r11 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        $r12 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r10, $r11, level, $r12);

     label1:
        return;
    }

    int updateSecondary(berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.Cursor, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.CacheMode, long, boolean, long)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.DatabaseEntry priKey, oldData, newData, oldSecKey#21, newSecKey#23, secKey#187, secKey#204, secKey#224, tmp$1447041247, tmp$665937984;
        berkeley.com.sleepycat.je.CacheMode cacheMode;
        long expirationTime, oldExpirationTime;
        boolean expirationUpdated, expirationInHours, localCursor, doDelete, doInsert, doUpdate, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z13, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        int expiration, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        berkeley.com.sleepycat.je.SecondaryKeyCreator keyCreator;
        berkeley.com.sleepycat.je.SecondaryMultiKeyCreator multiKeyCreator;
        java.lang.Throwable l24, $r6, l22#97, $r17;
        berkeley.com.sleepycat.je.Cursor cursor#1, tmp$1128184452, tmp$588364177;
        berkeley.com.sleepycat.je.SecondaryConfig $r0, $r1;
        byte $b0, $b1, $b3;
        java.lang.Object oldKeys#116, newKeys#126, toDelete#137, toInsert#147, toUpdate#158, $r14, $r15, $r16;
        java.util.Iterator l22#181, l22#198, l22#218;
        java.lang.AssertionError tmp$1640035925;
        java.lang.IllegalArgumentException tmp$72146562;
        java.util.HashSet tmp$1374540427, tmp$26420267, tmp$1425882794, tmp$1699177199, tmp$1845137270;
        java.util.Set tmp$925876366, tmp$1945746143, tmp$746875206, tmp$929308705, tmp$29024686, tmp$923107055, tmp$1428468036, tmp$927438925, tmp$1643396637, tmp$1088151352, tmp$946530732, tmp$934932407, tmp$1375037812, tmp$779523348, tmp$73118162, tmp$405935487, tmp$1097599635, tmp$2093912137, tmp$1111732187, tmp$1098993024;
        java.util.Collection tmp$1793553260, tmp$49834699, tmp$990197404, tmp$181025301, tmp$1546446486, tmp$1620234081;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        locker := @parameter0: berkeley.com.sleepycat.je.txn.Locker;

        cursor#1 := @parameter1: berkeley.com.sleepycat.je.Cursor;

        priKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        oldData := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry;

        newData := @parameter4: berkeley.com.sleepycat.je.DatabaseEntry;

        cacheMode := @parameter5: berkeley.com.sleepycat.je.CacheMode;

        expirationTime := @parameter6: long;

        expirationUpdated := @parameter7: boolean;

        oldExpirationTime := @parameter8: long;

        expirationInHours = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: boolean isSystemTimeInHours(long)>(expirationTime);

        expiration = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: int systemTimeToExpiration(long,boolean)>(expirationTime, expirationInHours);

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        keyCreator = virtualinvoke $r0.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryKeyCreator getKeyCreator()>();

        $r1 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        multiKeyCreator = virtualinvoke $r1.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        if cursor#1 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        localCursor = $z0;

        if keyCreator == null goto label29;

        $z1 = <berkeley.com.sleepycat.je.SecondaryDatabase: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        if multiKeyCreator == null goto label03;

        tmp$1640035925 = new java.lang.AssertionError;

        specialinvoke tmp$1640035925.<java.lang.AssertionError: void <init>()>();

        throw tmp$1640035925;

     label03:
        oldSecKey#21 = null;

        newSecKey#23 = null;

        if oldData != null goto label04;

        if newData != null goto label05;

     label04:
        tmp$1447041247 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke tmp$1447041247.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        oldSecKey#21 = tmp$1447041247;

        $z2 = interfaceinvoke keyCreator.<berkeley.com.sleepycat.je.SecondaryKeyCreator: boolean createSecondaryKey(berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(this, priKey, oldData, oldSecKey#21);

        if $z2 != 0 goto label05;

        oldSecKey#21 = null;

     label05:
        if newData == null goto label06;

        tmp$665937984 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke tmp$665937984.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        newSecKey#23 = tmp$665937984;

        $z3 = interfaceinvoke keyCreator.<berkeley.com.sleepycat.je.SecondaryKeyCreator: boolean createSecondaryKey(berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>(this, priKey, newData, newSecKey#23);

        if $z3 != 0 goto label06;

        newSecKey#23 = null;

     label06:
        if oldSecKey#21 == null goto label07;

        $z4 = virtualinvoke oldSecKey#21.<berkeley.com.sleepycat.je.DatabaseEntry: boolean equals(java.lang.Object)>(newSecKey#23);

        if $z4 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        doDelete = $z5;

        if newSecKey#23 == null goto label09;

        $z6 = virtualinvoke newSecKey#23.<berkeley.com.sleepycat.je.DatabaseEntry: boolean equals(java.lang.Object)>(oldSecKey#21);

        if $z6 != 0 goto label09;

        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        doInsert = $z7;

        if expirationUpdated == 0 goto label11;

        if newSecKey#23 == null goto label11;

        if doInsert != 0 goto label11;

        $z8 = 1;

        goto label12;

     label11:
        $z8 = 0;

     label12:
        doUpdate = $z8;

        if doDelete != 0 goto label13;

        if doInsert != 0 goto label13;

        if doUpdate == 0 goto label22;

     label13:
        if localCursor == 0 goto label14;

        tmp$1128184452 = new berkeley.com.sleepycat.je.Cursor;

        specialinvoke tmp$1128184452.<berkeley.com.sleepycat.je.Cursor: void <init>(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.CursorConfig)>(this, locker, null);

        cursor#1 = tmp$1128184452;

     label14:
        if doDelete == 0 goto label15;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void deleteKey(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,long)>(cursor#1, priKey, oldSecKey#21, cacheMode, oldExpirationTime);

     label15:
        if doInsert == 0 goto label16;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void insertKey(berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,int,boolean,long)>(locker, cursor#1, priKey, newSecKey#23, cacheMode, expiration, expirationInHours, oldExpirationTime);

     label16:
        if doUpdate == 0 goto label17;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void updateExpiration(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,int,boolean,long)>(cursor#1, priKey, oldSecKey#21, cacheMode, expiration, expirationInHours, oldExpirationTime);

     label17:
        if localCursor == 0 goto label22;

        virtualinvoke cursor#1.<berkeley.com.sleepycat.je.Cursor: void close()>();

        goto label22;

     label18:
        $r6 := @caughtexception;

     label19:
        l22#97 = $r6;

     label20:
        if localCursor == 0 goto label21;

        virtualinvoke cursor#1.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label21:
        throw l22#97;

     label22:
        if doDelete == 0 goto label23;

        $b0 = 1;

        goto label24;

     label23:
        $b0 = 0;

     label24:
        if doInsert == 0 goto label25;

        $b1 = 1;

        goto label26;

     label25:
        $b1 = 0;

     label26:
        $i2 = $b0 + $b1;

        if doUpdate == 0 goto label27;

        $b3 = 1;

        goto label28;

     label27:
        $b3 = 0;

     label28:
        $i4 = $i2 + $b3;

        return $i4;

     label29:
        if multiKeyCreator != null goto label30;

        tmp$72146562 = new java.lang.IllegalArgumentException;

        specialinvoke tmp$72146562.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SecondaryConfig.getKeyCreator()/getMultiKeyCreator() may be null only if the primary database is read-only");

        throw tmp$72146562;

     label30:
        if oldData != null goto label31;

        if newData == null goto label31;

        oldKeys#116 = <berkeley.com.sleepycat.je.SecondaryDatabase: java.util.Set EMPTY_SET>;

        goto label32;

     label31:
        tmp$1374540427 = new java.util.HashSet;

        specialinvoke tmp$1374540427.<java.util.HashSet: void <init>()>();

        oldKeys#116 = tmp$1374540427;

        tmp$925876366 = (java.util.Set) oldKeys#116;

        interfaceinvoke multiKeyCreator.<berkeley.com.sleepycat.je.SecondaryMultiKeyCreator: void createSecondaryKeys(berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,java.util.Set)>(this, priKey, oldData, tmp$925876366);

     label32:
        if newData != null goto label33;

        newKeys#126 = <berkeley.com.sleepycat.je.SecondaryDatabase: java.util.Set EMPTY_SET>;

        goto label34;

     label33:
        tmp$26420267 = new java.util.HashSet;

        specialinvoke tmp$26420267.<java.util.HashSet: void <init>()>();

        newKeys#126 = tmp$26420267;

        tmp$1945746143 = (java.util.Set) newKeys#126;

        interfaceinvoke multiKeyCreator.<berkeley.com.sleepycat.je.SecondaryMultiKeyCreator: void createSecondaryKeys(berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,java.util.Set)>(this, priKey, newData, tmp$1945746143);

     label34:
        tmp$746875206 = (java.util.Set) oldKeys#116;

        $z9 = interfaceinvoke tmp$746875206.<java.util.Set: boolean isEmpty()>();

        if $z9 == 0 goto label35;

        toDelete#137 = <berkeley.com.sleepycat.je.SecondaryDatabase: java.util.Set EMPTY_SET>;

        goto label36;

     label35:
        tmp$1425882794 = new java.util.HashSet;

        tmp$1793553260 = (java.util.Collection) oldKeys#116;

        specialinvoke tmp$1425882794.<java.util.HashSet: void <init>(java.util.Collection)>(tmp$1793553260);

        toDelete#137 = tmp$1425882794;

        tmp$929308705 = (java.util.Set) toDelete#137;

        tmp$49834699 = (java.util.Collection) newKeys#126;

        interfaceinvoke tmp$929308705.<java.util.Set: boolean removeAll(java.util.Collection)>(tmp$49834699);

     label36:
        tmp$29024686 = (java.util.Set) newKeys#126;

        $z11 = interfaceinvoke tmp$29024686.<java.util.Set: boolean isEmpty()>();

        if $z11 == 0 goto label37;

        toInsert#147 = <berkeley.com.sleepycat.je.SecondaryDatabase: java.util.Set EMPTY_SET>;

        goto label38;

     label37:
        tmp$1699177199 = new java.util.HashSet;

        tmp$990197404 = (java.util.Collection) newKeys#126;

        specialinvoke tmp$1699177199.<java.util.HashSet: void <init>(java.util.Collection)>(tmp$990197404);

        toInsert#147 = tmp$1699177199;

        tmp$923107055 = (java.util.Set) toInsert#147;

        tmp$181025301 = (java.util.Collection) oldKeys#116;

        interfaceinvoke tmp$923107055.<java.util.Set: boolean removeAll(java.util.Collection)>(tmp$181025301);

     label38:
        if expirationUpdated == 0 goto label39;

        tmp$1428468036 = (java.util.Set) newKeys#126;

        $z13 = interfaceinvoke tmp$1428468036.<java.util.Set: boolean isEmpty()>();

        if $z13 == 0 goto label40;

     label39:
        toUpdate#158 = <berkeley.com.sleepycat.je.SecondaryDatabase: java.util.Set EMPTY_SET>;

        goto label41;

     label40:
        tmp$1845137270 = new java.util.HashSet;

        tmp$1546446486 = (java.util.Collection) newKeys#126;

        specialinvoke tmp$1845137270.<java.util.HashSet: void <init>(java.util.Collection)>(tmp$1546446486);

        toUpdate#158 = tmp$1845137270;

        tmp$927438925 = (java.util.Set) toUpdate#158;

        tmp$1620234081 = (java.util.Collection) oldKeys#116;

        interfaceinvoke tmp$927438925.<java.util.Set: boolean retainAll(java.util.Collection)>(tmp$1620234081);

     label41:
        tmp$1643396637 = (java.util.Set) toDelete#137;

        $z15 = interfaceinvoke tmp$1643396637.<java.util.Set: boolean isEmpty()>();

        if $z15 == 0 goto label42;

        tmp$1088151352 = (java.util.Set) toInsert#147;

        $z16 = interfaceinvoke tmp$1088151352.<java.util.Set: boolean isEmpty()>();

        if $z16 == 0 goto label42;

        tmp$946530732 = (java.util.Set) toUpdate#158;

        $z17 = interfaceinvoke tmp$946530732.<java.util.Set: boolean isEmpty()>();

        if $z17 != 0 goto label54;

     label42:
        if localCursor == 0 goto label43;

        tmp$588364177 = new berkeley.com.sleepycat.je.Cursor;

        specialinvoke tmp$588364177.<berkeley.com.sleepycat.je.Cursor: void <init>(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.CursorConfig)>(this, locker, null);

        cursor#1 = tmp$588364177;

     label43:
        tmp$934932407 = (java.util.Set) toDelete#137;

        $z18 = interfaceinvoke tmp$934932407.<java.util.Set: boolean isEmpty()>();

        if $z18 != 0 goto label45;

        tmp$1375037812 = (java.util.Set) toDelete#137;

        l22#181 = interfaceinvoke tmp$1375037812.<java.util.Set: java.util.Iterator iterator()>();

     label44:
        $z19 = interfaceinvoke l22#181.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label45;

        $r14 = interfaceinvoke l22#181.<java.util.Iterator: java.lang.Object next()>();

        secKey#187 = (berkeley.com.sleepycat.je.DatabaseEntry) $r14;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void deleteKey(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,long)>(cursor#1, priKey, secKey#187, cacheMode, oldExpirationTime);

        goto label44;

     label45:
        tmp$779523348 = (java.util.Set) toInsert#147;

        $z20 = interfaceinvoke tmp$779523348.<java.util.Set: boolean isEmpty()>();

        if $z20 != 0 goto label47;

        tmp$73118162 = (java.util.Set) toInsert#147;

        l22#198 = interfaceinvoke tmp$73118162.<java.util.Set: java.util.Iterator iterator()>();

     label46:
        $z21 = interfaceinvoke l22#198.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label47;

        $r15 = interfaceinvoke l22#198.<java.util.Iterator: java.lang.Object next()>();

        secKey#204 = (berkeley.com.sleepycat.je.DatabaseEntry) $r15;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void insertKey(berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,int,boolean,long)>(locker, cursor#1, priKey, secKey#204, cacheMode, expiration, expirationInHours, oldExpirationTime);

        goto label46;

     label47:
        tmp$405935487 = (java.util.Set) toUpdate#158;

        $z22 = interfaceinvoke tmp$405935487.<java.util.Set: boolean isEmpty()>();

        if $z22 != 0 goto label49;

        tmp$1097599635 = (java.util.Set) toUpdate#158;

        l22#218 = interfaceinvoke tmp$1097599635.<java.util.Set: java.util.Iterator iterator()>();

     label48:
        $z23 = interfaceinvoke l22#218.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label49;

        $r16 = interfaceinvoke l22#218.<java.util.Iterator: java.lang.Object next()>();

        secKey#224 = (berkeley.com.sleepycat.je.DatabaseEntry) $r16;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void updateExpiration(berkeley.com.sleepycat.je.Cursor,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,int,boolean,long)>(cursor#1, priKey, secKey#224, cacheMode, expiration, expirationInHours, oldExpirationTime);

        goto label48;

     label49:
        if localCursor == 0 goto label54;

        virtualinvoke cursor#1.<berkeley.com.sleepycat.je.Cursor: void close()>();

        goto label54;

     label50:
        $r17 := @caughtexception;

     label51:
        l24 = $r17;

     label52:
        if localCursor == 0 goto label53;

        virtualinvoke cursor#1.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label53:
        throw l24;

     label54:
        tmp$2093912137 = (java.util.Set) toDelete#137;

        $i5 = interfaceinvoke tmp$2093912137.<java.util.Set: int size()>();

        tmp$1111732187 = (java.util.Set) toInsert#147;

        $i6 = interfaceinvoke tmp$1111732187.<java.util.Set: int size()>();

        $i7 = $i5 + $i6;

        tmp$1098993024 = (java.util.Set) toUpdate#158;

        $i8 = interfaceinvoke tmp$1098993024.<java.util.Set: int size()>();

        $i9 = $i7 + $i8;

        return $i9;

        catch java.lang.Throwable from label14 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label43 to label49 with label50;
        catch java.lang.Throwable from label51 to label52 with label50;
    }

    private void deleteKey(berkeley.com.sleepycat.je.Cursor, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.CacheMode, long)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Cursor cursor;
        berkeley.com.sleepycat.je.DatabaseEntry priKey, oldSecKey;
        berkeley.com.sleepycat.je.CacheMode cacheMode;
        long oldExpirationTime, $l1;
        berkeley.com.sleepycat.je.OperationResult result;
        berkeley.com.sleepycat.je.LockMode $r0;
        berkeley.com.sleepycat.je.dbi.SearchMode $r1;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r2;
        berkeley.com.sleepycat.je.log.ReplicationContext $r3;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r5, $r6;
        int $i0;
        berkeley.com.sleepycat.je.SecondaryIntegrityException $r7;
        berkeley.com.sleepycat.je.dbi.CursorImpl $r8;
        berkeley.com.sleepycat.je.txn.Locker $r9;
        java.lang.String $r10;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        cursor := @parameter0: berkeley.com.sleepycat.je.Cursor;

        priKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        oldSecKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        cacheMode := @parameter3: berkeley.com.sleepycat.je.CacheMode;

        oldExpirationTime := @parameter4: long;

        $r0 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode RMW>;

        $r1 = <berkeley.com.sleepycat.je.dbi.SearchMode: berkeley.com.sleepycat.je.dbi.SearchMode BOTH>;

        result = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult search(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.SearchMode,boolean)>(oldSecKey, priKey, $r0, cacheMode, $r1, 0);

        if result == null goto label1;

        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDbImpl()>();

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.log.ReplicationContext getRepContext()>();

        virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult deleteInternal(berkeley.com.sleepycat.je.log.ReplicationContext,berkeley.com.sleepycat.je.CacheMode)>($r3, cacheMode);

        return;

     label1:
        $z0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean isFullyPopulated>;

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        $r6 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        $i0 = virtualinvoke $r6.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: int getTtlClockTolerance()>();

        $l1 = (long) $i0;

        $z1 = virtualinvoke $r5.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean expiresWithin(long,long)>(oldExpirationTime, $l1);

        if $z1 != 0 goto label2;

        $r7 = new berkeley.com.sleepycat.je.SecondaryIntegrityException;

        $r8 = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.dbi.CursorImpl getCursorImpl()>();

        $r9 = virtualinvoke $r8.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        $r10 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        specialinvoke $r7.<berkeley.com.sleepycat.je.SecondaryIntegrityException: void <init>(berkeley.com.sleepycat.je.txn.Locker,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,long)>($r9, "Secondary is corrupt: the primary record contains a key that is not present in the secondary", $r10, oldSecKey, priKey, oldExpirationTime);

        throw $r7;

     label2:
        return;
    }

    private void insertKey(berkeley.com.sleepycat.je.txn.Locker, berkeley.com.sleepycat.je.Cursor, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.CacheMode, int, boolean, long)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.Cursor cursor, foreignCursor, $r1;
        berkeley.com.sleepycat.je.DatabaseEntry priKey, newSecKey, tmpData, $r2;
        berkeley.com.sleepycat.je.CacheMode cacheMode;
        int expiration;
        boolean expirationInHours, $z0, $z1, $z2;
        long oldExpirationTime;
        berkeley.com.sleepycat.je.Database foreignDb;
        berkeley.com.sleepycat.je.OperationResult result, result#80, result#100;
        java.lang.Throwable l15, l16, l12#11, $r15, l13#48, $r16, l13#53, $r17, $r18;
        berkeley.com.sleepycat.je.dbi.ExpirationInfo expInfo, $r19;
        berkeley.com.sleepycat.je.SecondaryConfig $r0;
        berkeley.com.sleepycat.je.LockMode $r3;
        berkeley.com.sleepycat.je.dbi.SearchMode $r4;
        berkeley.com.sleepycat.je.ForeignConstraintException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;
        java.lang.String $r8, $r11, $r13, $r14, $r23, $r26;
        berkeley.com.sleepycat.je.DatabaseConfig $r20;
        berkeley.com.sleepycat.je.dbi.PutMode $r21, $r24;
        berkeley.com.sleepycat.je.SecondaryIntegrityException $r22;
        berkeley.com.sleepycat.je.UniqueConstraintException $r25;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        locker := @parameter0: berkeley.com.sleepycat.je.txn.Locker;

        cursor := @parameter1: berkeley.com.sleepycat.je.Cursor;

        priKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        newSecKey := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry;

        cacheMode := @parameter4: berkeley.com.sleepycat.je.CacheMode;

        expiration := @parameter5: int;

        expirationInHours := @parameter6: boolean;

        oldExpirationTime := @parameter7: long;

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        foreignDb = virtualinvoke $r0.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.Database getForeignKeyDatabase()>();

        if foreignDb == null goto label16;

        $r1 = new berkeley.com.sleepycat.je.Cursor;

        specialinvoke $r1.<berkeley.com.sleepycat.je.Cursor: void <init>(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.CursorConfig)>(foreignDb, locker, null);

        foreignCursor = $r1;

        l12#11 = null;

     label01:
        $r2 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        tmpData = $r2;

        $r3 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode DEFAULT>;

        $r4 = <berkeley.com.sleepycat.je.dbi.SearchMode: berkeley.com.sleepycat.je.dbi.SearchMode SET>;

        result = virtualinvoke foreignCursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult search(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.SearchMode,boolean)>(newSecKey, tmpData, $r3, cacheMode, $r4, 1);

        if result != null goto label02;

        $r5 = new berkeley.com.sleepycat.je.ForeignConstraintException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Secondary ");

        $r8 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" foreign key not allowed: it is not present in the foreign database ");

        $r11 = virtualinvoke foreignDb.<berkeley.com.sleepycat.je.Database: java.lang.String getDebugName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        specialinvoke $r5.<berkeley.com.sleepycat.je.ForeignConstraintException: void <init>(berkeley.com.sleepycat.je.txn.Locker,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,long)>(locker, $r13, $r14, newSecKey, priKey, oldExpirationTime);

        throw $r5;

     label02:
        if foreignCursor == null goto label16;

        if l12#11 == null goto label06;

     label03:
        virtualinvoke foreignCursor.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label04:
        goto label16;

     label05:
        $r15 := @caughtexception;

        l13#48 = $r15;

        virtualinvoke l12#11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l13#48);

        goto label16;

     label06:
        virtualinvoke foreignCursor.<berkeley.com.sleepycat.je.Cursor: void close()>();

        goto label16;

     label07:
        $r16 := @caughtexception;

     label08:
        l13#53 = $r16;

        l12#11 = l13#53;

        throw l13#53;

     label09:
        $r17 := @caughtexception;

        l15 = $r17;

     label10:
        if foreignCursor == null goto label15;

        if l12#11 == null goto label14;

     label11:
        virtualinvoke foreignCursor.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label12:
        goto label15;

     label13:
        $r18 := @caughtexception;

        l16 = $r18;

        virtualinvoke l12#11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l16);

        goto label15;

     label14:
        virtualinvoke foreignCursor.<berkeley.com.sleepycat.je.Cursor: void close()>();

     label15:
        throw l15;

     label16:
        $r19 = new berkeley.com.sleepycat.je.dbi.ExpirationInfo;

        specialinvoke $r19.<berkeley.com.sleepycat.je.dbi.ExpirationInfo: void <init>(int,boolean,boolean)>(expiration, expirationInHours, 0);

        expInfo = $r19;

        $r20 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.DatabaseConfig configuration>;

        $z0 = virtualinvoke $r20.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getSortedDuplicates()>();

        if $z0 == 0 goto label18;

        $r21 = <berkeley.com.sleepycat.je.dbi.PutMode: berkeley.com.sleepycat.je.dbi.PutMode NO_DUP_DATA>;

        result#80 = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult putInternal(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.ExpirationInfo,berkeley.com.sleepycat.je.dbi.PutMode)>(newSecKey, priKey, cacheMode, expInfo, $r21);

        if result#80 != null goto label17;

        $z1 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean isFullyPopulated>;

        if $z1 == 0 goto label17;

        $r22 = new berkeley.com.sleepycat.je.SecondaryIntegrityException;

        $r23 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        specialinvoke $r22.<berkeley.com.sleepycat.je.SecondaryIntegrityException: void <init>(berkeley.com.sleepycat.je.txn.Locker,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,long)>(locker, "Secondary/primary record already present", $r23, newSecKey, priKey, oldExpirationTime);

        throw $r22;

     label17:
        goto label19;

     label18:
        $r24 = <berkeley.com.sleepycat.je.dbi.PutMode: berkeley.com.sleepycat.je.dbi.PutMode NO_OVERWRITE>;

        result#100 = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult putInternal(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.ExpirationInfo,berkeley.com.sleepycat.je.dbi.PutMode)>(newSecKey, priKey, cacheMode, expInfo, $r24);

        if result#100 != null goto label19;

        $z2 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean isFullyPopulated>;

        if $z2 == 0 goto label19;

        $r25 = new berkeley.com.sleepycat.je.UniqueConstraintException;

        $r26 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        specialinvoke $r25.<berkeley.com.sleepycat.je.UniqueConstraintException: void <init>(berkeley.com.sleepycat.je.txn.Locker,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,long)>(locker, "Unique secondary key is already present", $r26, newSecKey, priKey, oldExpirationTime);

        throw $r25;

     label19:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    private void updateExpiration(berkeley.com.sleepycat.je.Cursor, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.CacheMode, int, boolean, long)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Cursor cursor;
        berkeley.com.sleepycat.je.DatabaseEntry priKey, secKey;
        berkeley.com.sleepycat.je.CacheMode cacheMode;
        int expiration, $i0;
        boolean expirationInHours, $z0, $z1, $z2;
        long oldExpirationTime, $l1;
        berkeley.com.sleepycat.je.dbi.ExpirationInfo expInfo, $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        berkeley.com.sleepycat.je.OperationResult result;
        berkeley.com.sleepycat.je.LockMode $r4;
        berkeley.com.sleepycat.je.DatabaseConfig $r6;
        berkeley.com.sleepycat.je.dbi.SearchMode $r7;
        berkeley.com.sleepycat.je.SecondaryIntegrityException $r8;
        berkeley.com.sleepycat.je.dbi.CursorImpl $r9;
        berkeley.com.sleepycat.je.txn.Locker $r10;
        java.lang.String $r11;
        berkeley.com.sleepycat.je.dbi.PutMode putMode#39;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        cursor := @parameter0: berkeley.com.sleepycat.je.Cursor;

        priKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        secKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        cacheMode := @parameter3: berkeley.com.sleepycat.je.CacheMode;

        expiration := @parameter4: int;

        expirationInHours := @parameter5: boolean;

        oldExpirationTime := @parameter6: long;

        $r0 = new berkeley.com.sleepycat.je.dbi.ExpirationInfo;

        specialinvoke $r0.<berkeley.com.sleepycat.je.dbi.ExpirationInfo: void <init>(int,boolean,boolean)>(expiration, expirationInHours, 1);

        expInfo = $r0;

        envImpl = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        $z0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean isFullyPopulated>;

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: int getTtlClockTolerance()>();

        $l1 = (long) $i0;

        $z1 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean expiresWithin(long,long)>(oldExpirationTime, $l1);

        if $z1 != 0 goto label4;

        $r4 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode RMW>;

        $r6 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.DatabaseConfig configuration>;

        $z2 = virtualinvoke $r6.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getSortedDuplicates()>();

        if $z2 == 0 goto label1;

        $r7 = <berkeley.com.sleepycat.je.dbi.SearchMode: berkeley.com.sleepycat.je.dbi.SearchMode BOTH>;

        goto label2;

     label1:
        $r7 = <berkeley.com.sleepycat.je.dbi.SearchMode: berkeley.com.sleepycat.je.dbi.SearchMode SET>;

     label2:
        result = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult search(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.SearchMode,boolean)>(secKey, priKey, $r4, cacheMode, $r7, 0);

        if result != null goto label3;

        $r8 = new berkeley.com.sleepycat.je.SecondaryIntegrityException;

        $r9 = virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.dbi.CursorImpl getCursorImpl()>();

        $r10 = virtualinvoke $r9.<berkeley.com.sleepycat.je.dbi.CursorImpl: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        $r11 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: java.lang.String getDebugName()>();

        specialinvoke $r8.<berkeley.com.sleepycat.je.SecondaryIntegrityException: void <init>(berkeley.com.sleepycat.je.txn.Locker,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,long)>($r10, "Secondary is corrupt: the primary record contains a key that is not present in the secondary", $r11, secKey, priKey, oldExpirationTime);

        throw $r8;

     label3:
        putMode#39 = <berkeley.com.sleepycat.je.dbi.PutMode: berkeley.com.sleepycat.je.dbi.PutMode CURRENT>;

        goto label5;

     label4:
        putMode#39 = <berkeley.com.sleepycat.je.dbi.PutMode: berkeley.com.sleepycat.je.dbi.PutMode OVERWRITE>;

     label5:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.OperationResult putInternal(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.CacheMode,berkeley.com.sleepycat.je.dbi.ExpirationInfo,berkeley.com.sleepycat.je.dbi.PutMode)>(secKey, priKey, cacheMode, expInfo, putMode#39);

        return;
    }

    boolean hasSecondaryOrForeignKeyAssociations()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        return 0;
    }

    berkeley.com.sleepycat.je.SecondaryAssociation makeSecondaryAssociation()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Database $r0, $r1, $r3;
        java.util.Collection $r2;
        berkeley.com.sleepycat.je.SecondaryAssociation $r4, $r6;
        berkeley.com.sleepycat.je.DatabaseConfig $r5;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        $r2 = $r1.<berkeley.com.sleepycat.je.Database: java.util.Collection simpleAssocSecondaries>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(this);

        $r3 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Database primaryDatabase>;

        $r4 = $r3.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.SecondaryAssociation secAssoc>;

        return $r4;

     label1:
        $r5 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.DatabaseConfig configuration>;

        $r6 = virtualinvoke $r5.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.SecondaryAssociation getSecondaryAssociation()>();

        return $r6;
    }

    public berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.Get, berkeley.com.sleepycat.je.ReadOptions)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.je.DatabaseEntry key, data;
        berkeley.com.sleepycat.je.Get getType;
        berkeley.com.sleepycat.je.ReadOptions options;
        berkeley.com.sleepycat.je.OperationResult $r0;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        key := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        data := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        getType := @parameter3: berkeley.com.sleepycat.je.Get;

        options := @parameter4: berkeley.com.sleepycat.je.ReadOptions;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions)>(txn, key, null, data, getType, options);

        return $r0;
    }

    public berkeley.com.sleepycat.je.OperationResult get(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.DatabaseEntry, berkeley.com.sleepycat.je.Get, berkeley.com.sleepycat.je.ReadOptions)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.je.DatabaseEntry key, pKey, data;
        berkeley.com.sleepycat.je.Get getType;
        berkeley.com.sleepycat.je.txn.Locker locker;
        berkeley.com.sleepycat.je.SecondaryCursor cursor, $r5;
        java.lang.Throwable l14, l15, l16, l12#41, $r6, l13#54, $r7, l13#59, $r8, $r9, $r11;
        java.lang.Error E, $r14;
        berkeley.com.sleepycat.je.ReadOptions options#1;
        berkeley.com.sleepycat.je.LockMode lockMode#10, $r4;
        java.util.logging.Level $r2;
        java.lang.String $r3;
        berkeley.com.sleepycat.je.CursorConfig cursorConfig#25;
        berkeley.com.sleepycat.je.OperationResult result#29;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.Environment $r15;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        key := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        pKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry;

        data := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry;

        getType := @parameter4: berkeley.com.sleepycat.je.Get;

        options#1 := @parameter5: berkeley.com.sleepycat.je.ReadOptions;

     label01:
        virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.EnvironmentImpl checkEnv()>();

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.DatabaseImpl checkReadable()>();

        if options#1 != null goto label02;

        options#1 = <berkeley.com.sleepycat.je.Cursor: berkeley.com.sleepycat.je.ReadOptions DEFAULT_READ_OPTIONS>;

     label02:
        lockMode#10 = virtualinvoke options#1.<berkeley.com.sleepycat.je.ReadOptions: berkeley.com.sleepycat.je.LockMode getLockMode()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(getType);

        virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void trace(java.util.logging.Level,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.LockMode)>($r2, "SecondaryDatabase.get", $r3, txn, key, null, lockMode#10);

        virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: void checkLockModeWithoutTxn(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.LockMode)>(txn, lockMode#10);

        $r4 = <berkeley.com.sleepycat.je.LockMode: berkeley.com.sleepycat.je.LockMode READ_COMMITTED>;

        if lockMode#10 != $r4 goto label03;

        cursorConfig#25 = <berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.CursorConfig READ_COMMITTED_CURSOR_CONFIG>;

        lockMode#10 = null;

        goto label04;

     label03:
        cursorConfig#25 = <berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.CursorConfig DEFAULT_CURSOR_CONFIG>;

     label04:
        result#29 = null;

        $z0 = virtualinvoke cursorConfig#25.<berkeley.com.sleepycat.je.CursorConfig: boolean getReadCommitted()>();

        locker = staticinvoke <berkeley.com.sleepycat.je.txn.LockerFactory: berkeley.com.sleepycat.je.txn.Locker getReadableLocker(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.Transaction,boolean)>(this, txn, $z0);

     label05:
        $r5 = new berkeley.com.sleepycat.je.SecondaryCursor;

        specialinvoke $r5.<berkeley.com.sleepycat.je.SecondaryCursor: void <init>(berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.CursorConfig)>(this, locker, cursorConfig#25);

        cursor = $r5;

        l12#41 = null;

     label06:
        result#29 = virtualinvoke cursor.<berkeley.com.sleepycat.je.SecondaryCursor: berkeley.com.sleepycat.je.OperationResult getInternal(berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.Get,berkeley.com.sleepycat.je.ReadOptions,berkeley.com.sleepycat.je.LockMode)>(key, pKey, data, getType, options#1, lockMode#10);

     label07:
        if cursor == null goto label21;

        if l12#41 == null goto label11;

     label08:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.SecondaryCursor: void close()>();

     label09:
        goto label21;

     label10:
        $r6 := @caughtexception;

        l13#54 = $r6;

        virtualinvoke l12#41.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l13#54);

        goto label21;

     label11:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.SecondaryCursor: void close()>();

        goto label21;

     label12:
        $r7 := @caughtexception;

     label13:
        l13#59 = $r7;

        l12#41 = l13#59;

        throw l13#59;

     label14:
        $r8 := @caughtexception;

        l14 = $r8;

     label15:
        if cursor == null goto label20;

        if l12#41 == null goto label19;

     label16:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.SecondaryCursor: void close()>();

     label17:
        goto label20;

     label18:
        $r9 := @caughtexception;

        l15 = $r9;

        virtualinvoke l12#41.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l15);

        goto label20;

     label19:
        virtualinvoke cursor.<berkeley.com.sleepycat.je.SecondaryCursor: void close()>();

     label20:
        throw l14;

     label21:
        if result#29 == null goto label22;

        $z1 = 1;

        goto label23;

     label22:
        $z1 = 0;

     label23:
        virtualinvoke locker.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd(boolean)>($z1);

        goto label29;

     label24:
        $r11 := @caughtexception;

     label25:
        l16 = $r11;

     label26:
        if result#29 == null goto label27;

        $z2 = 1;

        goto label28;

     label27:
        $z2 = 0;

     label28:
        virtualinvoke locker.<berkeley.com.sleepycat.je.txn.Locker: void operationEnd(boolean)>($z2);

        throw l16;

     label29:
        return result#29;

     label30:
        $r14 := @caughtexception;

        E = $r14;

        $r15 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.Environment envHandle>;

        virtualinvoke $r15.<berkeley.com.sleepycat.je.Environment: void invalidate(java.lang.Error)>(E);

        throw E;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label13 to label15 with label14;
        catch java.lang.Throwable from label05 to label21 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Error from label01 to label29 with label30;
    }

    private berkeley.com.sleepycat.je.dbi.DatabaseImpl checkReadable()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0;
        java.lang.IllegalStateException $r0;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        dbImpl = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.DatabaseImpl checkOpen()>();

        $z0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: boolean isFullyPopulated>;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Incremental population is currently enabled.");

        throw $r0;

     label1:
        return dbImpl;
    }

    public volatile berkeley.com.sleepycat.je.Cursor openCursor(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.je.CursorConfig)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Transaction l1;
        berkeley.com.sleepycat.je.CursorConfig l2;
        berkeley.com.sleepycat.je.SecondaryCursor $r0;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        l1 := @parameter0: berkeley.com.sleepycat.je.Transaction;

        l2 := @parameter1: berkeley.com.sleepycat.je.CursorConfig;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryCursor openCursor(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.CursorConfig)>(l1, l2);

        return $r0;
    }

    public berkeley.com.sleepycat.je.SecondaryCursor openCursor(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.je.CursorConfig)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.je.CursorConfig cursorConfig;
        berkeley.com.sleepycat.je.Cursor $r1;
        berkeley.com.sleepycat.je.SecondaryCursor $r2;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        cursorConfig := @parameter1: berkeley.com.sleepycat.je.CursorConfig;

        specialinvoke this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.dbi.DatabaseImpl checkReadable()>();

        $r1 = specialinvoke this.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.Cursor openCursor(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.CursorConfig)>(txn, cursorConfig);

        $r2 = (berkeley.com.sleepycat.je.SecondaryCursor) $r1;

        return $r2;
    }

    berkeley.com.sleepycat.je.Cursor newDbcInstance(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.je.CursorConfig)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.je.CursorConfig cursorConfig;
        berkeley.com.sleepycat.je.SecondaryCursor $r0;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        cursorConfig := @parameter1: berkeley.com.sleepycat.je.CursorConfig;

        $r0 = new berkeley.com.sleepycat.je.SecondaryCursor;

        specialinvoke $r0.<berkeley.com.sleepycat.je.SecondaryCursor: void <init>(berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.CursorConfig)>(this, txn, cursorConfig);

        return $r0;
    }

    berkeley.com.sleepycat.je.SecondaryConfig getPrivateSecondaryConfig()
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.SecondaryConfig $r0;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryConfig secondaryConfig>;

        return $r0;
    }

    berkeley.com.sleepycat.je.Database getPrimary(berkeley.com.sleepycat.je.DatabaseEntry)
    {
        berkeley.com.sleepycat.je.SecondaryDatabase this;
        berkeley.com.sleepycat.je.DatabaseEntry priKey;
        berkeley.com.sleepycat.je.Database priDb;
        java.lang.RuntimeException e, $r1;
        berkeley.com.sleepycat.je.SecondaryAssociation $r0, $r3, $r4;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r2;
        java.lang.IllegalArgumentException $r5;

        this := @this: berkeley.com.sleepycat.je.SecondaryDatabase;

        priKey := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry;

     label1:
        $r0 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryAssociation secAssoc>;

        priDb = interfaceinvoke $r0.<berkeley.com.sleepycat.je.SecondaryAssociation: berkeley.com.sleepycat.je.Database getPrimary(berkeley.com.sleepycat.je.DatabaseEntry)>(priKey);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedException(java.lang.String,java.lang.Exception)>("Exception from SecondaryAssociation.getPrimary", e);

        throw $r2;

     label4:
        if priDb != null goto label5;

        return null;

     label5:
        $r3 = priDb.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.SecondaryAssociation secAssoc>;

        $r4 = this.<berkeley.com.sleepycat.je.SecondaryDatabase: berkeley.com.sleepycat.je.SecondaryAssociation secAssoc>;

        if $r3 == $r4 goto label6;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Primary and secondary have different SecondaryAssociation instances. Remember to configure the SecondaryAssociation on the primary database.");

        throw $r5;

     label6:
        return priDb;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }


