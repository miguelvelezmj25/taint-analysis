    public static void write(java.lang.String, weka.core.Instances) throws java.lang.Exception
    {
        java.lang.String filename;
        weka.core.Instances data;
        weka.core.converters.ConverterUtils$DataSink sink, $r0;

        filename := @parameter0: java.lang.String;

        data := @parameter1: weka.core.Instances;

        $r0 = new weka.core.converters.ConverterUtils$DataSink;

        specialinvoke $r0.<weka.core.converters.ConverterUtils$DataSink: void <init>(java.lang.String)>(filename);

        sink = $r0;

        virtualinvoke sink.<weka.core.converters.ConverterUtils$DataSink: void write(weka.core.Instances)>(data);

        return;
    }

    public void <init>(java.lang.String) throws java.lang.Exception
    {
        weka.core.converters.ConverterUtils$DataSink this;
        java.lang.String filename;
        boolean $z0;
        weka.core.converters.ArffSaver $r0;
        weka.core.converters.AbstractFileSaver $r1, $r3;
        weka.core.converters.Saver $r2;
        java.io.File $r4;

        this := @this: weka.core.converters.ConverterUtils$DataSink;

        filename := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver> = null;

        this.<weka.core.converters.ConverterUtils$DataSink: java.io.OutputStream m_Stream> = null;

        this.<weka.core.converters.ConverterUtils$DataSink: java.io.OutputStream m_Stream> = null;

        $z0 = staticinvoke <weka.core.converters.ConverterUtils$DataSource: boolean isArff(java.lang.String)>(filename);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = new weka.core.converters.ArffSaver;

        specialinvoke $r0.<weka.core.converters.ArffSaver: void <init>()>();

        this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver> = $r0;

        goto label2;

     label1:
        $r1 = staticinvoke <weka.core.converters.ConverterUtils: weka.core.converters.AbstractFileSaver getSaverForFile(java.lang.String)>(filename);

        this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver> = $r1;

     label2:
        $r2 = this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver>;

        $r3 = (weka.core.converters.AbstractFileSaver) $r2;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(filename);

        virtualinvoke $r3.<weka.core.converters.AbstractFileSaver: void setFile(java.io.File)>($r4);

        return;
    }

    public void write(weka.core.Instances) throws java.lang.Exception
    {
        weka.core.converters.ConverterUtils$DataSink this;
        weka.core.Instances data;
        weka.core.converters.Saver $r0, $r1, $r2;
        java.io.OutputStream $r3, $r6;
        java.lang.String $r4;
        byte[] $r5;

        this := @this: weka.core.converters.ConverterUtils$DataSink;

        data := @parameter0: weka.core.Instances;

        $r0 = this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver>;

        interfaceinvoke $r1.<weka.core.converters.Saver: void setInstances(weka.core.Instances)>(data);

        $r2 = this.<weka.core.converters.ConverterUtils$DataSink: weka.core.converters.Saver m_Saver>;

        interfaceinvoke $r2.<weka.core.converters.Saver: void writeBatch()>();

        goto label2;

     label1:
        $r3 = this.<weka.core.converters.ConverterUtils$DataSink: java.io.OutputStream m_Stream>;

        $r4 = virtualinvoke data.<weka.core.Instances: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r5);

        $r6 = this.<weka.core.converters.ConverterUtils$DataSink: java.io.OutputStream m_Stream>;

        virtualinvoke $r6.<java.io.OutputStream: void flush()>();

     label2:
        return;
    }


