    public void <init>(int)
    {
        family.ElevatorSystem.Floor this;
        int id;
        java.util.ArrayList $r0;

        this := @this: family.ElevatorSystem.Floor;

        id := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<family.ElevatorSystem.Floor: boolean elevatorCall> = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<family.ElevatorSystem.Floor: java.util.List waiting> = $r0;

        this.<family.ElevatorSystem.Floor: int thisFloorID> = id;

        return;
    }

    public boolean hasCall()
    {
        family.ElevatorSystem.Floor this;
        boolean $z0;

        this := @this: family.ElevatorSystem.Floor;

        $z0 = this.<family.ElevatorSystem.Floor: boolean elevatorCall>;

        return $z0;
    }

    public int getFloorID()
    {
        family.ElevatorSystem.Floor this;
        int $i0;

        this := @this: family.ElevatorSystem.Floor;

        $i0 = this.<family.ElevatorSystem.Floor: int thisFloorID>;

        return $i0;
    }

    public void processWaitingPersons(family.ElevatorSystem.Elevator)
    {
        family.ElevatorSystem.Floor this;
        family.ElevatorSystem.Elevator e;
        java.util.Iterator l2;
        family.ElevatorSystem.Person p;
        java.util.List $r0, $r2;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: family.ElevatorSystem.Floor;

        e := @parameter0: family.ElevatorSystem.Elevator;

        $r0 = this.<family.ElevatorSystem.Floor: java.util.List waiting>;

        l2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        p = (family.ElevatorSystem.Person) $r1;

        virtualinvoke e.<family.ElevatorSystem.Elevator: void enterElevator(family.ElevatorSystem.Person)>(p);

        goto label1;

     label2:
        $r2 = this.<family.ElevatorSystem.Floor: java.util.List waiting>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        virtualinvoke this.<family.ElevatorSystem.Floor: void reset()>();

        return;
    }

    public void reset()
    {
        family.ElevatorSystem.Floor this;

        this := @this: family.ElevatorSystem.Floor;

        this.<family.ElevatorSystem.Floor: boolean elevatorCall> = 0;

        return;
    }

    public void addWaitingPerson(family.ElevatorSystem.Person)
    {
        family.ElevatorSystem.Floor this;
        family.ElevatorSystem.Person person;
        java.util.List $r0;

        this := @this: family.ElevatorSystem.Floor;

        person := @parameter0: family.ElevatorSystem.Person;

        $r0 = this.<family.ElevatorSystem.Floor: java.util.List waiting>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(person);

        virtualinvoke this.<family.ElevatorSystem.Floor: void callElevator()>();

        return;
    }

    public void callElevator()
    {
        family.ElevatorSystem.Floor this;

        this := @this: family.ElevatorSystem.Floor;

        this.<family.ElevatorSystem.Floor: boolean elevatorCall> = 1;

        return;
    }


