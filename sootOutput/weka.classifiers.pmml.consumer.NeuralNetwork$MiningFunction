    static void <clinit>()
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction $r0, $r1, $r3, $r4;
        weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction[] $r2;

        $r0 = new weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction;

        specialinvoke $r0.<weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: void <init>(java.lang.String,int)>("CLASSIFICATION", 0);

        <weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction CLASSIFICATION> = $r0;

        $r1 = new weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction;

        specialinvoke $r1.<weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: void <init>(java.lang.String,int)>("REGRESSION", 1);

        <weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction REGRESSION> = $r1;

        $r2 = newarray (weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction)[2];

        $r3 = <weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction CLASSIFICATION>;

        $r2[0] = $r3;

        $r4 = <weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction REGRESSION>;

        $r2[1] = $r4;

        <weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction: weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction[] $VALUES> = $r2;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction this;
        java.lang.String l1;
        int l2;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$MiningFunction;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }


