    static void compress(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, byte[], com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        byte[] input;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int j, $i0, i#2, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        input := @parameter2: byte[];

        output := @parameter3: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        i#2 = 0;

     label1:
        $i2 = lengthof input;

        if i#2 >= $i2 goto label4;

        $i3 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int masterBlockSize>;

        $i4 = i#2 + $i3;

        $i5 = lengthof input;

        j = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $i0 = i#2;

        $i6 = lengthof input;

        if j != $i6 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflatePart(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,byte[],int,int,boolean,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, input, $i0, j, $z0, output);

        i#2 = j;

        goto label1;

     label4:
        return;
    }

    private static void deflatePart(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, byte[], int, int, boolean, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        byte[] input;
        int 'from', 'to', $i0, $i1;
        boolean flush;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] $r0;
        com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting $r1;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        input := @parameter2: byte[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        flush := @parameter5: boolean;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$1: int[] $SwitchMap$com$googlecode$pngtastic$core$processing$zopfli$Options$BlockSplitting>;

        $r1 = options.<com.googlecode.pngtastic.core.processing.zopfli.Options: com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting blockSplitting>;

        $i0 = virtualinvoke $r1.<com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting: int ordinal()>();

        $i1 = $r0[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateSplittingFirst(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

        goto label4;

     label2:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateSplittingLast(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

        goto label4;

     label3:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateDynamicBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, flush, input, 'from', 'to', output);

     label4:
        return;
    }

    private static void deflateDynamicBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0, $z1, $z2, $z3;
        byte[] input;
        int 'from', 'to', dynCost, fixedCost, $i0, $i1, $i2, $i3, $i4, $i5;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore fixedStore, store#17;
        com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType type#8;
        char[] $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        long[] $r1;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        flush := @parameter2: boolean;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        lmc = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc>;

        $i0 = 'to' - 'from';

        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void init(int)>($i0);

        type#8 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType DYNAMIC>;

        $i1 = options.<com.googlecode.pngtastic.core.processing.zopfli.Options: int numIterations>;

        store#17 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int)>(cookie, $i1, lmc, input, 'from', 'to');

        $i2 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        if $i2 >= 1000 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label5;

        fixedStore = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LzStore store1>;

        virtualinvoke fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        $r0 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        $r1 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: long[] costs>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void bestFixedLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],long[])>(cookie, lmc, input, 'from', 'to', $r0, $r1);

        $r2 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void optimalRun(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, lmc, input, 'from', 'to', $r2, fixedStore);

        $r3 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r4 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i3 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        dynCost = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, $r3, $r4, 0, $i3);

        $r5 = fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r6 = fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i4 = fixedStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        fixedCost = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateFixedBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r5, $r6, $i4);

        if fixedCost >= dynCost goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label5;

        type#8 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        store#17 = fixedStore;

     label5:
        $r7 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r8 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i5 = store#17.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType,boolean,char[],char[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, type#8, flush, $r7, $r8, 0, $i5, output);

        return;
    }

    private static void deflateSplittingLast(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0;
        byte[] input;
        int 'from', 'to', nPoints, start, end, $i0, $i1, $i2, i#26, $i3;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        int[] splitPoints;
        char[] $r0, $r1, $r4, $r5;
        com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType $r3;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        flush := @parameter2: boolean;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        lmc = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc>;

        $i0 = 'to' - 'from';

        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void init(int)>($i0);

        $i1 = options.<com.googlecode.pngtastic.core.processing.zopfli.Options: int numIterations>;

        store = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int)>(cookie, $i1, lmc, input, 'from', 'to');

        $r0 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r1 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i2 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nPoints = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int splitLz(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r0, $r1, $i2);

        splitPoints = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        i#26 = 1;

     label1:
        if i#26 > nPoints goto label4;

        $i3 = i#26 - 1;

        start = splitPoints[$i3];

        end = splitPoints[i#26];

        $r3 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType DYNAMIC>;

        if i#26 != nPoints goto label2;

        if flush == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r4 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r5 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType,boolean,char[],char[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, $r3, $z0, $r4, $r5, start, end, output);

        i#26 = i#26 + 1;

        goto label1;

     label4:
        return;
    }

    private static void deflateSplittingFirst(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Options, boolean, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Options options;
        boolean flush, $z0;
        byte[] input;
        int 'from', 'to', nPoints, i#9, $i0, $i1, $i2;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] splitPoints;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        options := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Options;

        flush := @parameter2: boolean;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        nPoints = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int split(com.googlecode.pngtastic.core.processing.zopfli.Cookie,byte[],int,int)>(cookie, input, 'from', 'to');

        splitPoints = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        i#9 = 1;

     label1:
        if i#9 > nPoints goto label4;

        if i#9 != nPoints goto label2;

        if flush == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $i0 = i#9 - 1;

        $i1 = splitPoints[$i0];

        $i2 = splitPoints[i#9];

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void deflateDynamicBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.Options,boolean,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, options, $z0, input, $i1, $i2, output);

        i#9 = i#9 + 1;

        goto label1;

     label4:
        return;
    }

    private static void addLzBlock(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType, boolean, char[], char[], int, int, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType type, $r5, $r6;
        boolean last, $z0, $z1, $z2, $z3;
        char[] litLens, dists;
        int lStart, lEnd, $i1, $i2;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int[] llLengths, dLengths, llCounts, dCounts, llSymbols, dSymbols, $r0, $r1, $r2, $r3, $r7, $r8, $r9, $r10, $r11, $r12;
        byte $b0;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        type := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType;

        last := @parameter2: boolean;

        litLens := @parameter3: char[];

        dists := @parameter4: char[];

        lStart := @parameter5: int;

        lEnd := @parameter6: int;

        output := @parameter7: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        llLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, llLengths, 0, 288);

        dLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, dLengths, 0, 32);

        llCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288b>;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, llCounts, 0, 288);

        dCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        $r3 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, dCounts, 0, 32);

        if last == 0 goto label01;

        $b0 = 1;

        goto label02;

     label01:
        $b0 = 0;

     label02:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($b0, 1);

        $r5 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        if type != $r5 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label05;

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(2, 2);

        goto label06;

     label05:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(1, 2);

     label06:
        $r6 = <com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType: com.googlecode.pngtastic.core.processing.zopfli.Deflate$BlockType FIXED>;

        if type != $r6 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label09;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void getFixedTree(int[],int[])>(llLengths, dLengths);

        goto label10;

     label09:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lzCounts(char[],char[],int,int,int[],int[])>(litLens, dists, lStart, lEnd, llCounts, dCounts);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, llCounts);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, llCounts, 15, llLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, dCounts);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, dCounts, 15, dLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void patchDistanceCodesForBuggyDecoders(int[])>(dLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, llLengths, dLengths, output);

     label10:
        llSymbols = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288c>;

        $r7 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, llSymbols, 0, 288);

        $r8 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        $r9 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(llLengths, 288, 15, llSymbols, $r8, $r9);

        dSymbols = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        $r10 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, dSymbols, 0, 32);

        $r11 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        $r12 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(dLengths, 32, 15, dSymbols, $r11, $r12);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void addLzData(char[],char[],int,int,int[],int[],int[],int[],com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(litLens, dists, lStart, lEnd, llSymbols, llLengths, dSymbols, dLengths, output);

        $i1 = llSymbols[256];

        $i2 = llLengths[256];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i1, $i2);

        return;
    }

    private static int calculateFixedBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int size, result#8, i#13, $i0, $i1, $i2, result#36, $i3, result#42, result#43, $i5, $i6, result#60;
        int[] llLengths, dLengths, cachedDistExtraBits, lengthExtraBits, lengthSymbol;
        char d, l;
        boolean $z0, $z1;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        litLens := @parameter1: char[];

        dists := @parameter2: char[];

        size := @parameter3: int;

        llLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        dLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void getFixedTree(int[],int[])>(llLengths, dLengths);

        result#8 = 3;

        cachedDistExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        lengthExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        i#13 = 0;

     label01:
        if i#13 >= size goto label10;

        d = dists[i#13];

        l = litLens[i#13];

        if d != 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label04;

        $i0 = llLengths[l];

        result#8 = result#8 + $i0;

        goto label09;

     label04:
        $i1 = lengthSymbol[l];

        $i2 = llLengths[$i1];

        result#36 = result#8 + $i2;

        $i3 = lengthExtraBits[l];

        result#42 = result#36 + $i3;

        result#43 = result#42 + 5;

        if d >= 4097 goto label05;

        $i5 = cachedDistExtraBits[d];

        goto label08;

     label05:
        if d >= 16385 goto label07;

        if d >= 8193 goto label06;

        $i5 = 11;

        goto label08;

     label06:
        $i5 = 12;

        goto label08;

     label07:
        $i5 = 13;

     label08:
        result#8 = result#43 + $i5;

     label09:
        i#13 = i#13 + 1;

        goto label01;

     label10:
        $i6 = llLengths[256];

        result#60 = result#8 + $i6;

        return result#60;
    }

    static int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int, int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int lStart, lEnd, distSymbol, result#16, i#35, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, result#125, i#127, $i13, $i14, $i15, i#140, $i16, $i17, $i18;
        int[] llLengths, dLengths, llCounts, dCounts, lengthSymbol, cachedDistSymbol, lengthExtraBits, llCountsCopy, dCountsCopy, $r0, $r1, $r2, $r3;
        char d, l;
        boolean $z0, $z1, $z2, $z3;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        litLens := @parameter1: char[];

        dists := @parameter2: char[];

        lStart := @parameter3: int;

        lEnd := @parameter4: int;

        llLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, llLengths, 0, 288);

        dLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32a>;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, dLengths, 0, 32);

        result#16 = 3;

        llCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288b>;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, llCounts, 0, 288);

        dCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32b>;

        $r3 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, dCounts, 0, 32);

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        lengthExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        i#35 = lStart;

     label01:
        if i#35 >= lEnd goto label08;

        d = dists[i#35];

        l = litLens[i#35];

        if d != 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label04;

        $i1 = llCounts[l];

        $i2 = $i1 + 1;

        llCounts[l] = $i2;

        goto label07;

     label04:
        $i3 = lengthSymbol[l];

        $i4 = llCounts[$i3];

        $i5 = $i4 + 1;

        llCounts[$i3] = $i5;

        distSymbol = cachedDistSymbol[d];

        $i7 = dCounts[distSymbol];

        $i8 = $i7 + 1;

        dCounts[distSymbol] = $i8;

        $i9 = lengthExtraBits[l];

        result#16 = result#16 + $i9;

        if distSymbol <= 3 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label07;

        $i10 = distSymbol / 2;

        $i11 = $i10 - 1;

        result#16 = result#16 + $i11;

     label07:
        i#35 = i#35 + 1;

        goto label01;

     label08:
        llCounts[256] = 1;

        llCountsCopy = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i288c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llCounts, 0, llCountsCopy, 0, 288);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, llCountsCopy);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, llCountsCopy, 15, llLengths);

        dCountsCopy = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i32c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dCounts, 0, dCountsCopy, 0, 32);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[])>(cookie, dCountsCopy);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, dCountsCopy, 15, dLengths);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void patchDistanceCodesForBuggyDecoders(int[])>(dLengths);

        $i12 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateAddDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[])>(cookie, llLengths, dLengths);

        result#125 = result#16 + $i12;

        i#127 = 0;

     label09:
        if i#127 >= 288 goto label10;

        $i13 = llCounts[i#127];

        $i14 = llLengths[i#127];

        $i15 = $i13 * $i14;

        result#125 = result#125 + $i15;

        i#127 = i#127 + 1;

        goto label09;

     label10:
        i#140 = 0;

     label11:
        if i#140 >= 32 goto label12;

        $i16 = dCounts[i#140];

        $i17 = dLengths[i#140];

        $i18 = $i16 * $i17;

        result#125 = result#125 + $i18;

        i#140 = i#140 + 1;

        goto label11;

     label12:
        return result#125;
    }

    private static void addLzData(char[], char[], int, int, int[], int[], int[], int[], com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        char[] litLens, dists;
        int lStart, lEnd, lls, ds, i#7, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] llSymbols, llLengths, dSymbols, dLengths, cachedDistExtraBits, lengthExtraBits, lengthExtraBitsValue, lengthSymbol, cachedDistSymbol;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        char dist, litLen;
        boolean $z0, $z1;

        litLens := @parameter0: char[];

        dists := @parameter1: char[];

        lStart := @parameter2: int;

        lEnd := @parameter3: int;

        llSymbols := @parameter4: int[];

        llLengths := @parameter5: int[];

        dSymbols := @parameter6: int[];

        dLengths := @parameter7: int[];

        output := @parameter8: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        cachedDistExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        lengthExtraBits = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        lengthExtraBitsValue = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS_VALUE>;

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        i#7 = lStart;

     label01:
        if i#7 >= lEnd goto label10;

        dist = dists[i#7];

        litLen = litLens[i#7];

        if dist != 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label04;

        $i0 = llSymbols[litLen];

        $i1 = llLengths[litLen];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i0, $i1);

        goto label09;

     label04:
        lls = lengthSymbol[litLen];

        ds = cachedDistSymbol[dist];

        $i2 = llSymbols[lls];

        $i3 = llLengths[lls];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i2, $i3);

        $i4 = lengthExtraBitsValue[litLen];

        $i5 = lengthExtraBits[litLen];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i4, $i5);

        $i6 = dSymbols[ds];

        $i7 = dLengths[ds];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>($i6, $i7);

        $i8 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Util: int distExtraBitsValue(int)>(dist);

        if dist >= 4097 goto label05;

        $i9 = cachedDistExtraBits[dist];

        goto label08;

     label05:
        if dist >= 16385 goto label07;

        if dist >= 8193 goto label06;

        $i9 = 11;

        goto label08;

     label06:
        $i9 = 12;

        goto label08;

     label07:
        $i9 = 13;

     label08:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i8, $i9);

     label09:
        i#7 = i#7 + 1;

        goto label01;

     label10:
        return;
    }

    private static void lengthsToSymbols(int[], int, int, int[], int[], int[])
    {
        int[] lengths, symbols, blCount, nextCode, $r0, $r1;
        int n, maxBits, len, $i0, $i1, i#16, $i2, $i3, $i4, code#29, bits#34, $i5, $i6, $i7, i#50, $i8, $i10, $i11;
        boolean $z0, $z1;

        lengths := @parameter0: int[];

        n := @parameter1: int;

        maxBits := @parameter2: int;

        symbols := @parameter3: int[];

        blCount := @parameter4: int[];

        nextCode := @parameter5: int[];

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        $i0 = maxBits + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, blCount, 0, $i0);

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        $i1 = maxBits + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, nextCode, 0, $i1);

        i#16 = 0;

     label1:
        if i#16 >= n goto label2;

        $i2 = lengths[i#16];

        $i3 = blCount[$i2];

        $i4 = $i3 + 1;

        blCount[$i2] = $i4;

        i#16 = i#16 + 1;

        goto label1;

     label2:
        code#29 = 0;

        blCount[0] = 0;

        bits#34 = 1;

     label3:
        if bits#34 > maxBits goto label4;

        $i5 = bits#34 - 1;

        $i6 = blCount[$i5];

        $i7 = code#29 + $i6;

        code#29 = $i7 << 1;

        nextCode[bits#34] = code#29;

        bits#34 = bits#34 + 1;

        goto label3;

     label4:
        i#50 = 0;

     label5:
        if i#50 >= n goto label9;

        len = lengths[i#50];

        if len == 0 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label8;

        $i8 = nextCode[len];

        symbols[i#50] = $i8;

        $i10 = nextCode[len];

        $i11 = $i10 + 1;

        nextCode[len] = $i11;

     label8:
        i#50 = i#50 + 1;

        goto label5;

     label9:
        return;
    }

    private static void addDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int size, best#2, bestSize#4, i#6, $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        output := @parameter3: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        best#2 = 0;

        bestSize#4 = 2147483647;

        i#6 = 0;

     label01:
        if i#6 >= 8 goto label11;

        $i0 = i#6 & 1;

        if $i0 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $i1 = i#6 & 2;

        if $i1 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $i2 = i#6 & 4;

        if $i2 == 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        size = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateEncodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean)>(cookie, llLengths, dLengths, $z0, $z1, $z2);

        if size >= bestSize#4 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z4 == 0 goto label10;

        bestSize#4 = size;

        best#2 = i#6;

     label10:
        i#6 = i#6 + 1;

        goto label01;

     label11:
        $i3 = best#2 & 1;

        if $i3 == 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        $i4 = best#2 & 2;

        if $i4 == 0 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        $i5 = best#2 & 4;

        if $i5 == 0 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void encodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean,com.googlecode.pngtastic.core.processing.zopfli.Buffer)>(cookie, llLengths, dLengths, $z5, $z6, $z7, output);

        return;
    }

    private static void patchDistanceCodesForBuggyDecoders(int[])
    {
        int[] dLengths;
        int numDistCodes#2, i#4, $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte $b2;

        dLengths := @parameter0: int[];

        numDistCodes#2 = 0;

        i#4 = 0;

     label01:
        if i#4 >= 30 goto label07;

        $i0 = dLengths[i#4];

        if $i0 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label06;

        numDistCodes#2 = numDistCodes#2 + 1;

        if numDistCodes#2 != 2 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        return;

     label06:
        i#4 = i#4 + 1;

        goto label01;

     label07:
        if numDistCodes#2 != 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label10;

        dLengths[0] = 1;

        dLengths[1] = 1;

        goto label15;

     label10:
        if numDistCodes#2 != 1 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label15;

        $i1 = dLengths[0];

        if $i1 == 0 goto label13;

        $b2 = 1;

        goto label14;

     label13:
        $b2 = 0;

     label14:
        dLengths[$b2] = 1;

     label15:
        return;
    }

    private static void optimizeHuffmanForRle(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] counts, goodForRle, $r0;
        int length#5, $i0, $i1, $i2, symbol#26, stride#28, i#30, $i3, $i4, k#52, $i5, $i6, stride#71, limit#75, sum#77, i#79, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, count#117, k#128, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        counts := @parameter1: int[];

        goodForRle = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i289a>;

        length#5 = lengthof counts;

     label01:
        if length#5 < 0 goto label08;

        if length#5 != 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label04;

        return;

     label04:
        $i0 = length#5 - 1;

        $i1 = counts[$i0];

        if $i1 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label07;

        goto label08;

     label07:
        length#5 = length#5 + -1;

        goto label01;

     label08:
        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        $i2 = length#5 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, goodForRle, 0, $i2);

        symbol#26 = counts[0];

        stride#28 = 0;

        i#30 = 0;

     label09:
        $i3 = length#5 + 1;

        if i#30 >= $i3 goto label23;

        if i#30 == length#5 goto label10;

        $i4 = counts[i#30];

        if $i4 == symbol#26 goto label11;

     label10:
        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label21;

        if symbol#26 != 0 goto label13;

        if stride#28 >= 5 goto label14;

     label13:
        if symbol#26 == 0 goto label15;

        if stride#28 < 7 goto label15;

     label14:
        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label18;

        k#52 = 0;

     label17:
        if k#52 >= stride#28 goto label18;

        $i5 = i#30 - k#52;

        $i6 = $i5 - 1;

        goodForRle[$i6] = 1;

        k#52 = k#52 + 1;

        goto label17;

     label18:
        stride#28 = 1;

        if i#30 == length#5 goto label19;

        $z8 = 1;

        goto label20;

     label19:
        $z8 = 0;

     label20:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label22;

        symbol#26 = counts[i#30];

        goto label22;

     label21:
        stride#28 = stride#28 + 1;

     label22:
        i#30 = i#30 + 1;

        goto label09;

     label23:
        stride#71 = 0;

        limit#75 = counts[0];

        sum#77 = 0;

        i#79 = 0;

     label24:
        $i7 = length#5 + 1;

        if i#79 >= $i7 goto label49;

        if i#79 == length#5 goto label25;

        $i8 = goodForRle[i#79];

        if $i8 != 0 goto label25;

        $i9 = counts[i#79];

        $i10 = $i9 - limit#75;

        if $i10 >= 4 goto label25;

        $i11 = counts[i#79];

        $i12 = limit#75 - $i11;

        if $i12 < 4 goto label26;

     label25:
        $z10 = 1;

        goto label27;

     label26:
        $z10 = 0;

     label27:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label45;

        if stride#71 >= 4 goto label28;

        if stride#71 < 3 goto label29;

        if sum#77 != 0 goto label29;

     label28:
        $z12 = 1;

        goto label30;

     label29:
        $z12 = 0;

     label30:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label38;

        $i13 = stride#71 / 2;

        $i14 = sum#77 + $i13;

        count#117 = $i14 / stride#71;

        if count#117 >= 1 goto label31;

        $z14 = 1;

        goto label32;

     label31:
        $z14 = 0;

     label32:
        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label33;

        count#117 = 1;

     label33:
        if sum#77 != 0 goto label34;

        $z16 = 1;

        goto label35;

     label34:
        $z16 = 0;

     label35:
        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z17 == 0 goto label36;

        count#117 = 0;

     label36:
        k#128 = 0;

     label37:
        if k#128 >= stride#71 goto label38;

        $i15 = i#79 - k#128;

        $i16 = $i15 - 1;

        counts[$i16] = count#117;

        k#128 = k#128 + 1;

        goto label37;

     label38:
        stride#71 = 0;

        sum#77 = 0;

        $i17 = length#5 - 3;

        if i#79 >= $i17 goto label39;

        $z18 = 1;

        goto label40;

     label39:
        $z18 = 0;

     label40:
        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z18);

        if $z19 == 0 goto label41;

        $i18 = counts[i#79];

        $i19 = i#79 + 1;

        $i20 = counts[$i19];

        $i21 = $i18 + $i20;

        $i22 = i#79 + 2;

        $i23 = counts[$i22];

        $i24 = $i21 + $i23;

        $i25 = i#79 + 3;

        $i26 = counts[$i25];

        $i27 = $i24 + $i26;

        $i28 = $i27 + 2;

        limit#75 = $i28 / 4;

        goto label45;

     label41:
        if i#79 >= length#5 goto label42;

        $z20 = 1;

        goto label43;

     label42:
        $z20 = 0;

     label43:
        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z21 == 0 goto label44;

        limit#75 = counts[i#79];

        goto label45;

     label44:
        limit#75 = 0;

     label45:
        stride#71 = stride#71 + 1;

        if i#79 == length#5 goto label46;

        $z22 = 1;

        goto label47;

     label46:
        $z22 = 0;

     label47:
        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z22);

        if $z23 == 0 goto label48;

        $i29 = counts[i#79];

        sum#77 = sum#77 + $i29;

     label48:
        i#79 = i#79 + 1;

        goto label24;

     label49:
        return;
    }

    private static void lzCounts(char[], char[], int, int, int[], int[])
    {
        char[] litLens, dists;
        int start, end, i#4, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] llCount, dCount, lengthSymbol, cachedDistSymbol;
        char d, l;
        boolean $z0, $z1;

        litLens := @parameter0: char[];

        dists := @parameter1: char[];

        start := @parameter2: int;

        end := @parameter3: int;

        llCount := @parameter4: int[];

        dCount := @parameter5: int[];

        lengthSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        i#4 = start;

     label1:
        if i#4 >= end goto label6;

        d = dists[i#4];

        l = litLens[i#4];

        if d != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label4;

        $i1 = llCount[l];

        $i2 = $i1 + 1;

        llCount[l] = $i2;

        goto label5;

     label4:
        $i3 = lengthSymbol[l];

        $i4 = llCount[$i3];

        $i5 = $i4 + 1;

        llCount[$i3] = $i5;

        $i6 = cachedDistSymbol[d];

        $i7 = dCount[$i6];

        $i8 = $i7 + 1;

        dCount[$i6] = $i8;

     label5:
        i#4 = i#4 + 1;

        goto label1;

     label6:
        llCount[256] = 1;

        return;
    }

    private static void getFixedTree(int[], int[])
    {
        int[] llLengths, dLengths;
        int i#2, i#9, i#16, i#23, i#30;

        llLengths := @parameter0: int[];

        dLengths := @parameter1: int[];

        i#2 = 0;

     label01:
        if i#2 >= 144 goto label02;

        llLengths[i#2] = 8;

        i#2 = i#2 + 1;

        goto label01;

     label02:
        i#9 = 144;

     label03:
        if i#9 >= 256 goto label04;

        llLengths[i#9] = 9;

        i#9 = i#9 + 1;

        goto label03;

     label04:
        i#16 = 256;

     label05:
        if i#16 >= 280 goto label06;

        llLengths[i#16] = 7;

        i#16 = i#16 + 1;

        goto label05;

     label06:
        i#23 = 280;

     label07:
        if i#23 >= 288 goto label08;

        llLengths[i#23] = 8;

        i#23 = i#23 + 1;

        goto label07;

     label08:
        i#30 = 0;

     label09:
        if i#30 >= 32 goto label10;

        dLengths[i#30] = 5;

        i#30 = i#30 + 1;

        goto label09;

     label10:
        return;
    }

    private static int simulateAddDynamicTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths;
        int size, bestSize#2, i#4, $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        bestSize#2 = 2147483647;

        i#4 = 0;

     label01:
        if i#4 >= 8 goto label11;

        $i0 = i#4 & 1;

        if $i0 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $i1 = i#4 & 2;

        if $i1 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $i2 = i#4 & 4;

        if $i2 == 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        size = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int simulateEncodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int[],boolean,boolean,boolean)>(cookie, llLengths, dLengths, $z0, $z1, $z2);

        if size >= bestSize#2 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z4 == 0 goto label10;

        bestSize#2 = size;

     label10:
        i#4 = i#4 + 1;

        goto label01;

     label11:
        return bestSize#2;
    }

    static void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, int, com.googlecode.pngtastic.core.processing.zopfli.Hash, byte[], int, int, int, char[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        int blockStart, pos, size, offset, arrayEnd, threshold, marker, same0, same1, limit#1, $i3, $i5, $i7, $i8, $i9, $i12, $i13, bestDist#90, bestLength#92, chainCounter#97, $i14, pp#108, p#121, pp#125, $i15, dist#130, scan#135, match#139, $i16, $i18, $i20, $i23, $i24, same#177, scan#200, j#211, $i28, pp#236, pp#247, $i29, $i30;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        byte[] array;
        char[] subLen, lmcLength, $r0, $r1, $r2, $r7, $r8, $r9;
        int[] hPrev2, hashVal2, hPrev#100, $r3, $r4, $r5, $r6;
        char $c0, $c1, $c2, $c4, $c6, $c10, $c11, $c27, $c31, $c32, $c33, $c34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        byte $b17, $b19, $b21, $b22, $b25, $b26;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        blockStart := @parameter2: int;

        h := @parameter3: com.googlecode.pngtastic.core.processing.zopfli.Hash;

        array := @parameter4: byte[];

        pos := @parameter5: int;

        size := @parameter6: int;

        limit#1 := @parameter7: int;

        subLen := @parameter8: char[];

        offset = pos - blockStart;

        if lmc == null goto label01;

        $r0 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length>;

        goto label02;

     label01:
        $r0 = null;

     label02:
        lmcLength = $r0;

        if lmc == null goto label04;

        $c0 = lmcLength[offset];

        if $c0 == 0 goto label03;

        $r1 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c1 = $r1[offset];

        if $c1 == 0 goto label04;

     label03:
        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label18;

        if limit#1 == 258 goto label06;

        $c2 = lmcLength[offset];

        if $c2 <= limit#1 goto label06;

        if subLen == null goto label18;

        $i3 = virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(offset);

        if $i3 < limit#1 goto label18;

     label06:
        if subLen == null goto label07;

        $c4 = lmcLength[offset];

        $i5 = virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(offset);

        if $c4 > $i5 goto label08;

     label07:
        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label17;

        $c6 = lmcLength[offset];

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = $c6;

        $i7 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        if $i7 <= limit#1 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label12;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = limit#1;

     label12:
        if subLen == null goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label15;

        $i8 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void cacheToSubLen(int,int,char[])>(offset, $i8, subLen);

        $i9 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        $c10 = subLen[$i9];

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = $c10;

        goto label16;

     label15:
        $r2 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c11 = $r2[offset];

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = $c11;

     label16:
        return;

     label17:
        limit#1 = lmcLength[offset];

     label18:
        $i12 = size - pos;

        if $i12 >= 3 goto label19;

        $z8 = 1;

        goto label20;

     label19:
        $z8 = 0;

     label20:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label21;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = 0;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = 0;

        return;

     label21:
        $i13 = pos + limit#1;

        if $i13 <= size goto label22;

        $z10 = 1;

        goto label23;

     label22:
        $z10 = 0;

     label23:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label24;

        limit#1 = size - pos;

     label24:
        bestDist#90 = 0;

        bestLength#92 = 1;

        arrayEnd = pos + limit#1;

        chainCounter#97 = 8192;

        hPrev#100 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] prev>;

        hPrev2 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] prev2>;

        $r3 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] head>;

        $i14 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int val>;

        pp#108 = $r3[$i14];

        $r4 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        threshold = $r4[pp#108];

        hashVal2 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] hashVal2>;

        marker = hashVal2[pp#108];

        p#121 = hPrev#100[pp#108];

        pp#125 = pp#108 - p#121;

        if pp#125 <= 0 goto label25;

        $i15 = pp#125;

        goto label26;

     label25:
        $i15 = pp#125 + 32768;

     label26:
        dist#130 = $i15;

     label27:
        if dist#130 >= 32768 goto label56;

        if chainCounter#97 <= 0 goto label56;

        scan#135 = pos;

        match#139 = pos - dist#130;

        $i16 = scan#135 + bestLength#92;

        $b17 = array[$i16];

        $i18 = match#139 + bestLength#92;

        $b19 = array[$i18];

        if $b17 != $b19 goto label28;

        $z12 = 1;

        goto label29;

     label28:
        $z12 = 0;

     label29:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label47;

        $r5 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        $i20 = pos & 32767;

        same0 = $r5[$i20];

        if same0 <= 2 goto label30;

        $b21 = array[scan#135];

        $b22 = array[match#139];

        if $b21 != $b22 goto label30;

        $z14 = 1;

        goto label31;

     label30:
        $z14 = 0;

     label31:
        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label37;

        $r6 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        $i23 = match#139 & 32767;

        same1 = $r6[$i23];

        if same0 >= same1 goto label32;

        $i24 = same0;

        goto label33;

     label32:
        $i24 = same1;

     label33:
        same#177 = $i24;

        if same#177 <= limit#1 goto label34;

        $z16 = 1;

        goto label35;

     label34:
        $z16 = 0;

     label35:
        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z17 == 0 goto label36;

        same#177 = limit#1;

     label36:
        scan#135 = scan#135 + same#177;

        match#139 = match#139 + same#177;

     label37:
        if scan#135 == arrayEnd goto label38;

        $b25 = array[scan#135];

        $b26 = array[match#139];

        if $b25 != $b26 goto label38;

        scan#135 = scan#135 + 1;

        match#139 = match#139 + 1;

        goto label37;

     label38:
        scan#200 = scan#135 - pos;

        if scan#200 <= bestLength#92 goto label39;

        $z18 = 1;

        goto label40;

     label39:
        $z18 = 0;

     label40:
        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z18);

        if $z19 == 0 goto label47;

        if subLen == null goto label41;

        $z20 = 1;

        goto label42;

     label41:
        $z20 = 0;

     label42:
        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z21 == 0 goto label44;

        j#211 = bestLength#92 + 1;

     label43:
        if j#211 > scan#200 goto label44;

        $c27 = (char) dist#130;

        subLen[j#211] = $c27;

        j#211 = j#211 + 1;

        goto label43;

     label44:
        bestDist#90 = dist#130;

        bestLength#92 = scan#200;

        if scan#200 < limit#1 goto label45;

        $z22 = 1;

        goto label46;

     label45:
        $z22 = 0;

     label46:
        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z22);

        if $z23 == 0 goto label47;

        goto label56;

     label47:
        if hPrev#100 == hPrev2 goto label48;

        if bestLength#92 < threshold goto label48;

        $i28 = hashVal2[p#121];

        if marker != $i28 goto label48;

        $z24 = 1;

        goto label49;

     label48:
        $z24 = 0;

     label49:
        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z24);

        if $z25 == 0 goto label50;

        hPrev#100 = hPrev2;

     label50:
        pp#236 = p#121;

        p#121 = hPrev#100[p#121];

        if p#121 != pp#236 goto label51;

        $z26 = 1;

        goto label52;

     label51:
        $z26 = 0;

     label52:
        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z26);

        if $z27 == 0 goto label53;

        goto label56;

     label53:
        pp#247 = pp#236 - p#121;

        $i29 = dist#130;

        if pp#247 <= 0 goto label54;

        $i30 = pp#247;

        goto label55;

     label54:
        $i30 = 32768 + pp#247;

     label55:
        dist#130 = $i29 + $i30;

        chainCounter#97 = chainCounter#97 + -1;

        goto label27;

     label56:
        if lmc == null goto label57;

        if limit#1 != 258 goto label57;

        if subLen == null goto label57;

        $c31 = lmcLength[offset];

        if $c31 == 0 goto label57;

        $r7 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c32 = $r7[offset];

        if $c32 != 0 goto label57;

        $z28 = 1;

        goto label58;

     label57:
        $z28 = 0;

     label58:
        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        if $z29 == 0 goto label63;

        if bestLength#92 >= 3 goto label59;

        $z30 = 1;

        goto label60;

     label59:
        $z30 = 0;

     label60:
        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z30);

        if $z31 == 0 goto label61;

        $r8 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $r8[offset] = 0;

        lmcLength[offset] = 0;

        goto label62;

     label61:
        $r9 = lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        $c33 = (char) bestDist#90;

        $r9[offset] = $c33;

        $c34 = (char) bestLength#92;

        lmcLength[offset] = $c34;

     label62:
        virtualinvoke lmc.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: void subLenToCache(char[],int,int)>(subLen, offset, bestLength#92);

     label63:
        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal> = bestDist#90;

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal> = bestLength#92;

        return;
    }

    static void greedy(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, byte[], int, int, com.googlecode.pngtastic.core.processing.zopfli.LzStore)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        byte[] input;
        int 'from', 'to', dist, lengthScore, prevLengthScore, $i0, $i1, prevLength#13, prevMatch#15, i#21, len#35, $i2, $i3, $i4, $i5, j#82, j#117;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        char[] dummySubLen;
        boolean matchAvailable#19, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte $b6, $b13;
        short $s7, $s14;
        char $c8, $c9, $c10, $c11, $c12, $c15;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        input := @parameter2: byte[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        store := @parameter5: com.googlecode.pngtastic.core.processing.zopfli.LzStore;

        h = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.Hash h>;

        $i0 = 'from' - 32768;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void init(byte[],int,int,int)>(input, $i1, 'from', 'to');

        prevLength#13 = 0;

        prevMatch#15 = 0;

        dummySubLen = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] c259a>;

        matchAvailable#19 = 0;

        i#21 = 'from';

     label01:
        if i#21 >= 'to' goto label23;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#21, 'to');

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,com.googlecode.pngtastic.core.processing.zopfli.Hash,byte[],int,int,int,char[])>(cookie, lmc, 'from', h, input, i#21, 'to', 258, dummySubLen);

        len#35 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        dist = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal>;

        if dist <= 1024 goto label02;

        $i2 = len#35 - 1;

        goto label03;

     label02:
        $i2 = len#35;

     label03:
        lengthScore = $i2;

        if prevMatch#15 <= 1024 goto label04;

        $i3 = prevLength#13 - 1;

        goto label05;

     label04:
        $i3 = prevLength#13;

     label05:
        prevLengthScore = $i3;

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(matchAvailable#19);

        if $z0 == 0 goto label13;

        matchAvailable#19 = 0;

        $i4 = prevLengthScore + 1;

        if lengthScore <= $i4 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z2 == 0 goto label10;

        $i5 = i#21 - 1;

        $b6 = input[$i5];

        $s7 = $b6 & 255;

        $c8 = (char) $s7;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c8, 0);

        if lengthScore < 3 goto label08;

        if len#35 >= 258 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z4 == 0 goto label16;

        matchAvailable#19 = 1;

        prevLength#13 = len#35;

        prevMatch#15 = dist;

        goto label22;

     label10:
        $c9 = (char) prevLength#13;

        $c10 = (char) prevMatch#15;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c9, $c10);

        j#82 = 2;

     label11:
        if j#82 >= prevLength#13 goto label12;

        i#21 = i#21 + 1;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#21, 'to');

        j#82 = j#82 + 1;

        goto label11;

     label12:
        goto label22;

     label13:
        if lengthScore < 3 goto label14;

        if len#35 >= 258 goto label14;

        $z5 = 1;

        goto label15;

     label14:
        $z5 = 0;

     label15:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z6 == 0 goto label16;

        matchAvailable#19 = 1;

        prevLength#13 = len#35;

        prevMatch#15 = dist;

        goto label22;

     label16:
        if lengthScore < 3 goto label17;

        $z7 = 1;

        goto label18;

     label17:
        $z7 = 0;

     label18:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label19;

        $c11 = (char) len#35;

        $c12 = (char) dist;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c11, $c12);

        goto label20;

     label19:
        len#35 = 1;

        $b13 = input[i#21];

        $s14 = $b13 & 255;

        $c15 = (char) $s14;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c15, 0);

     label20:
        j#117 = 1;

     label21:
        if j#117 >= len#35 goto label22;

        i#21 = i#21 + 1;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#21, 'to');

        j#117 = j#117 + 1;

        goto label21;

     label22:
        i#21 = i#21 + 1;

        goto label01;

     label23:
        return;
    }

    private static void encodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], boolean, boolean, boolean, com.googlecode.pngtastic.core.processing.zopfli.Buffer)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths, lldLengths, rle, rleBits, clCounts, clCl, clSymbols, order, $r0, $r2, $r3, $r4;
        boolean use16, use17, use18, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.googlecode.pngtastic.core.processing.zopfli.Buffer output;
        int lldTotal, symbol, symbol, hLit#2, hDist#4, $i0, $i1, $i2, $i3, $i4, $i5, $i6, rleSize#39, i#45, count#49, j#62, $i7, $i8, i#74, $i9, delta#87, $i10, $i11, $i12, delta#106, $i13, $i14, $i15, $i16, delta#134, $i17, $i18, $i19, i#161, $i20, $i21, $i22, hcLen#196, $i23, $i24, $i25, i#215, $i26, $i27, $i28, i#228, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        use16 := @parameter3: boolean;

        use17 := @parameter4: boolean;

        use18 := @parameter5: boolean;

        output := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.Buffer;

        hLit#2 = 29;

        hDist#4 = 29;

     label01:
        if hLit#2 <= 0 goto label02;

        $i0 = 256 + hLit#2;

        $i1 = llLengths[$i0];

        if $i1 != 0 goto label02;

        hLit#2 = hLit#2 + -1;

        goto label01;

     label02:
        if hDist#4 <= 0 goto label03;

        $i2 = dLengths[hDist#4];

        if $i2 != 0 goto label03;

        hDist#4 = hDist#4 + -1;

        goto label02;

     label03:
        $i3 = hLit#2 + 258;

        lldTotal = $i3 + hDist#4;

        lldLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320b>;

        $i4 = 257 + hLit#2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llLengths, 0, lldLengths, 0, $i4);

        $i5 = 257 + hLit#2;

        $i6 = hDist#4 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dLengths, 0, lldLengths, $i5, $i6);

        rleSize#39 = 0;

        rle = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320a>;

        rleBits = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320c>;

        i#45 = 0;

     label04:
        if i#45 >= lldTotal goto label27;

        count#49 = 1;

        symbol = lldLengths[i#45];

        if use16 != 0 goto label05;

        if symbol != 0 goto label06;

        if use17 != 0 goto label05;

        if use18 == 0 goto label06;

     label05:
        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label09;

        j#62 = i#45 + 1;

     label08:
        if j#62 >= lldTotal goto label09;

        $i7 = lldLengths[j#62];

        if symbol != $i7 goto label09;

        count#49 = count#49 + 1;

        j#62 = j#62 + 1;

        goto label08;

     label09:
        $i8 = count#49 - 1;

        i#74 = i#45 + $i8;

        if symbol != 0 goto label10;

        if count#49 <= 2 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label19;

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use18);

        if $z4 == 0 goto label15;

     label12:
        if count#49 <= 10 goto label15;

        if count#49 <= 138 goto label13;

        $i9 = 138;

        goto label14;

     label13:
        $i9 = count#49;

     label14:
        delta#87 = $i9;

        rle[rleSize#39] = 18;

        $i10 = rleSize#39;

        rleSize#39 = rleSize#39 + 1;

        $i11 = delta#87 - 11;

        rleBits[$i10] = $i11;

        count#49 = count#49 - delta#87;

        goto label12;

     label15:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use17);

        if $z5 == 0 goto label19;

     label16:
        if count#49 <= 2 goto label19;

        if count#49 <= 10 goto label17;

        $i12 = 10;

        goto label18;

     label17:
        $i12 = count#49;

     label18:
        delta#106 = $i12;

        rle[rleSize#39] = 17;

        $i13 = rleSize#39;

        rleSize#39 = rleSize#39 + 1;

        $i14 = delta#106 - 3;

        rleBits[$i13] = $i14;

        count#49 = count#49 - delta#106;

        goto label16;

     label19:
        if use16 == 0 goto label20;

        if count#49 <= 3 goto label20;

        $z6 = 1;

        goto label21;

     label20:
        $z6 = 0;

     label21:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label25;

        count#49 = count#49 + -1;

        rle[rleSize#39] = symbol;

        $i15 = rleSize#39;

        rleSize#39 = rleSize#39 + 1;

        rleBits[$i15] = 0;

     label22:
        if count#49 <= 2 goto label25;

        if count#49 <= 6 goto label23;

        $i16 = 6;

        goto label24;

     label23:
        $i16 = count#49;

     label24:
        delta#134 = $i16;

        rle[rleSize#39] = 16;

        $i17 = rleSize#39;

        rleSize#39 = rleSize#39 + 1;

        $i18 = delta#134 - 3;

        rleBits[$i17] = $i18;

        count#49 = count#49 - delta#134;

        goto label22;

     label25:
        if count#49 == 0 goto label26;

        rle[rleSize#39] = symbol;

        $i19 = rleSize#39;

        rleSize#39 = rleSize#39 + 1;

        rleBits[$i19] = 0;

        count#49 = count#49 + -1;

        goto label25;

     label26:
        i#45 = i#74 + 1;

        goto label04;

     label27:
        clCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, clCounts, 0, 19);

        i#161 = 0;

     label28:
        if i#161 >= rleSize#39 goto label29;

        $i20 = rle[i#161];

        $i21 = clCounts[$i20];

        $i22 = $i21 + 1;

        clCounts[$i20] = $i22;

        i#161 = i#161 + 1;

        goto label28;

     label29:
        clCl = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19b>;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, clCl, 0, 19);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, clCounts, 7, clCl);

        clSymbols = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19c>;

        $r3 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16a>;

        $r4 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i16b>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void lengthsToSymbols(int[],int,int,int[],int[],int[])>(clCl, 19, 7, clSymbols, $r3, $r4);

        order = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] ORDER>;

        hcLen#196 = 15;

     label30:
        if hcLen#196 <= 0 goto label31;

        $i23 = hcLen#196 + 3;

        $i24 = order[$i23];

        $i25 = clCounts[$i24];

        if $i25 != 0 goto label31;

        hcLen#196 = hcLen#196 + -1;

        goto label30;

     label31:
        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hLit#2, 5);

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hDist#4, 5);

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>(hcLen#196, 4);

        i#215 = 0;

     label32:
        $i26 = hcLen#196 + 4;

        if i#215 >= $i26 goto label33;

        $i27 = order[i#215];

        $i28 = clCl[$i27];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i28, 3);

        i#215 = i#215 + 1;

        goto label32;

     label33:
        i#228 = 0;

     label34:
        if i#228 >= rleSize#39 goto label44;

        $i29 = rle[i#228];

        symbol = clSymbols[$i29];

        $i30 = rle[i#228];

        $i31 = clCl[$i30];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addHuffmanBits(int,int)>(symbol, $i31);

        $i32 = rle[i#228];

        if $i32 != 16 goto label35;

        $z8 = 1;

        goto label36;

     label35:
        $z8 = 0;

     label36:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label37;

        $i33 = rleBits[i#228];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i33, 2);

        goto label43;

     label37:
        $i34 = rle[i#228];

        if $i34 != 17 goto label38;

        $z10 = 1;

        goto label39;

     label38:
        $z10 = 0;

     label39:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label40;

        $i35 = rleBits[i#228];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i35, 3);

        goto label43;

     label40:
        $i36 = rle[i#228];

        if $i36 != 18 goto label41;

        $z12 = 1;

        goto label42;

     label41:
        $z12 = 0;

     label42:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label43;

        $i37 = rleBits[i#228];

        virtualinvoke output.<com.googlecode.pngtastic.core.processing.zopfli.Buffer: void addBits(int,int)>($i37, 7);

     label43:
        i#228 = i#228 + 1;

        goto label34;

     label44:
        return;
    }

    private static int simulateEncodeTree(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int[], int[], boolean, boolean, boolean)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int[] llLengths, dLengths, lldLengths, rle, clCounts, clCl, order, $r0, $r2;
        boolean use16, use17, use18, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int lldTotal, symbol, hLit#2, hDist#4, $i0, $i1, $i2, $i3, $i4, $i5, $i6, rleSize#41, i#43, count#47, j#60, $i7, $i8, i#72, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i#132, $i20, $i21, $i22, $i24, $i25, $i27, $i28, $i30, $i31, hcLen#178, $i32, $i33, $i34, $i35, $i36, result#194, i#196, $i37, $i38, $i39;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        llLengths := @parameter1: int[];

        dLengths := @parameter2: int[];

        use16 := @parameter3: boolean;

        use17 := @parameter4: boolean;

        use18 := @parameter5: boolean;

        hLit#2 = 29;

        hDist#4 = 29;

     label01:
        if hLit#2 <= 0 goto label02;

        $i0 = 256 + hLit#2;

        $i1 = llLengths[$i0];

        if $i1 != 0 goto label02;

        hLit#2 = hLit#2 + -1;

        goto label01;

     label02:
        if hDist#4 <= 0 goto label03;

        $i2 = dLengths[hDist#4];

        if $i2 != 0 goto label03;

        hDist#4 = hDist#4 + -1;

        goto label02;

     label03:
        $i3 = hLit#2 + 258;

        lldTotal = $i3 + hDist#4;

        lldLengths = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320b>;

        $i4 = 257 + hLit#2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(llLengths, 0, lldLengths, 0, $i4);

        $i5 = 257 + hLit#2;

        $i6 = hDist#4 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dLengths, 0, lldLengths, $i5, $i6);

        rle = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i320a>;

        rleSize#41 = 0;

        i#43 = 0;

     label04:
        if i#43 >= lldTotal goto label27;

        count#47 = 1;

        symbol = lldLengths[i#43];

        if use16 != 0 goto label05;

        if symbol != 0 goto label06;

        if use17 != 0 goto label05;

        if use18 == 0 goto label06;

     label05:
        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label09;

        j#60 = i#43 + 1;

     label08:
        if j#60 >= lldTotal goto label09;

        $i7 = lldLengths[j#60];

        if symbol != $i7 goto label09;

        count#47 = count#47 + 1;

        j#60 = j#60 + 1;

        goto label08;

     label09:
        $i8 = count#47 - 1;

        i#72 = i#43 + $i8;

        if symbol != 0 goto label10;

        if count#47 <= 2 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label19;

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use18);

        if $z4 == 0 goto label15;

     label12:
        if count#47 <= 10 goto label15;

        $i9 = rleSize#41;

        rleSize#41 = rleSize#41 + 1;

        rle[$i9] = 18;

        $i10 = count#47;

        if count#47 <= 138 goto label13;

        $i11 = 138;

        goto label14;

     label13:
        $i11 = count#47;

     label14:
        count#47 = $i10 - $i11;

        goto label12;

     label15:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(use17);

        if $z5 == 0 goto label19;

     label16:
        if count#47 <= 2 goto label19;

        $i12 = rleSize#41;

        rleSize#41 = rleSize#41 + 1;

        rle[$i12] = 17;

        $i13 = count#47;

        if count#47 <= 10 goto label17;

        $i14 = 10;

        goto label18;

     label17:
        $i14 = count#47;

     label18:
        count#47 = $i13 - $i14;

        goto label16;

     label19:
        if use16 == 0 goto label20;

        if count#47 <= 3 goto label20;

        $z6 = 1;

        goto label21;

     label20:
        $z6 = 0;

     label21:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label25;

        count#47 = count#47 + -1;

        $i15 = rleSize#41;

        rleSize#41 = rleSize#41 + 1;

        rle[$i15] = symbol;

     label22:
        if count#47 <= 2 goto label25;

        $i16 = rleSize#41;

        rleSize#41 = rleSize#41 + 1;

        rle[$i16] = 16;

        $i17 = count#47;

        if count#47 <= 6 goto label23;

        $i18 = 6;

        goto label24;

     label23:
        $i18 = count#47;

     label24:
        count#47 = $i17 - $i18;

        goto label22;

     label25:
        if count#47 == 0 goto label26;

        $i19 = rleSize#41;

        rleSize#41 = rleSize#41 + 1;

        rle[$i19] = symbol;

        count#47 = count#47 + -1;

        goto label25;

     label26:
        i#43 = i#72 + 1;

        goto label04;

     label27:
        clCounts = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, clCounts, 0, 19);

        i#132 = 0;

     label28:
        if i#132 >= rleSize#41 goto label29;

        $i20 = rle[i#132];

        $i21 = clCounts[$i20];

        $i22 = $i21 + 1;

        clCounts[$i20] = $i22;

        i#132 = i#132 + 1;

        goto label28;

     label29:
        clCl = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] i19b>;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] intZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, clCl, 0, 19);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Katajainen: void lengthLimitedCodeLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,int[],int,int[])>(cookie, clCounts, 7, clCl);

        $i24 = clCl[16];

        $i25 = $i24 + 2;

        clCl[16] = $i25;

        $i27 = clCl[17];

        $i28 = $i27 + 3;

        clCl[17] = $i28;

        $i30 = clCl[18];

        $i31 = $i30 + 7;

        clCl[18] = $i31;

        order = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] ORDER>;

        hcLen#178 = 15;

     label30:
        if hcLen#178 <= 0 goto label31;

        $i32 = hcLen#178 + 3;

        $i33 = order[$i32];

        $i34 = clCounts[$i33];

        if $i34 != 0 goto label31;

        hcLen#178 = hcLen#178 + -1;

        goto label30;

     label31:
        $i35 = hcLen#178 + 4;

        $i36 = $i35 * 3;

        result#194 = 14 + $i36;

        i#196 = 0;

     label32:
        if i#196 >= 19 goto label33;

        $i37 = clCl[i#196];

        $i38 = clCounts[i#196];

        $i39 = $i37 * $i38;

        result#194 = result#194 + $i39;

        i#196 = i#196 + 1;

        goto label32;

     label33:
        return result#194;
    }


