    public void <init>(int)
    {
        org.tukaani.xz.rangecoder.RangeEncoderToBuffer this;
        int bufSize;
        byte[] $r0;

        this := @this: org.tukaani.xz.rangecoder.RangeEncoderToBuffer;

        bufSize := @parameter0: int;

        specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void <init>()>();

        $r0 = newarray (byte)[bufSize];

        this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: byte[] buf> = $r0;

        virtualinvoke this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: void reset()>();

        return;
    }

    public void reset()
    {
        org.tukaani.xz.rangecoder.RangeEncoderToBuffer this;

        this := @this: org.tukaani.xz.rangecoder.RangeEncoderToBuffer;

        specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: void reset()>();

        this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: int bufPos> = 0;

        return;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        org.tukaani.xz.rangecoder.RangeEncoderToBuffer this;
        java.io.OutputStream out;
        byte[] $r0;
        int $i0;

        this := @this: org.tukaani.xz.rangecoder.RangeEncoderToBuffer;

        out := @parameter0: java.io.OutputStream;

        $r0 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: byte[] buf>;

        $i0 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: int bufPos>;

        virtualinvoke out.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0);

        return;
    }

    public int finish()
    {
        org.tukaani.xz.rangecoder.RangeEncoderToBuffer this;
        java.io.IOException e, $r0;
        java.lang.Error $r1;
        int $i1;

        this := @this: org.tukaani.xz.rangecoder.RangeEncoderToBuffer;

     label1:
        nop;

        specialinvoke this.<org.tukaani.xz.rangecoder.RangeEncoder: int finish()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>()>();

        throw $r1;

     label4:
        $i1 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: int bufPos>;

        return $i1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void writeByte(int)
    {
        org.tukaani.xz.rangecoder.RangeEncoderToBuffer this;
        int b, $i0, $i1;
        byte[] $r0;
        byte $b2;

        this := @this: org.tukaani.xz.rangecoder.RangeEncoderToBuffer;

        b := @parameter0: int;

        $r0 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: byte[] buf>;

        $i0 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: int bufPos>;

        $i1 = $i0 + 1;

        this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: int bufPos> = $i1;

        $b2 = (byte) b;

        $r0[$i0] = $b2;

        return;
    }

    public int getPendingSize()
    {
        org.tukaani.xz.rangecoder.RangeEncoderToBuffer this;
        int $i0, $i2, $i3, $i4, $i5;
        long $l1;

        this := @this: org.tukaani.xz.rangecoder.RangeEncoderToBuffer;

        $i0 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: int bufPos>;

        $l1 = this.<org.tukaani.xz.rangecoder.RangeEncoderToBuffer: long cacheSize>;

        $i2 = (int) $l1;

        $i3 = $i0 + $i2;

        $i4 = $i3 + 5;

        $i5 = $i4 - 1;

        return $i5;
    }


