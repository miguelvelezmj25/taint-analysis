    public static weka.classifiers.pmml.consumer.GeneralRegression$Distribution[] values()
    {
        weka.classifiers.pmml.consumer.GeneralRegression$Distribution[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (weka.classifiers.pmml.consumer.GeneralRegression$Distribution[]) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        weka.classifiers.pmml.consumer.GeneralRegression$Distribution $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        weka.classifiers.pmml.consumer.GeneralRegression$Distribution[] $r7;

        $r0 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r0.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("NONE", 0, "none");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution NONE> = $r0;

        $r1 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r1.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("NORMAL", 1, "normal");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution NORMAL> = $r1;

        $r2 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r2.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("BINOMIAL", 2, "binomial");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution BINOMIAL> = $r2;

        $r3 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r3.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("GAMMA", 3, "gamma");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution GAMMA> = $r3;

        $r4 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r4.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("INVGAUSSIAN", 4, "igauss");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution INVGAUSSIAN> = $r4;

        $r5 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r5.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("NEGBINOMIAL", 5, "negbin");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution NEGBINOMIAL> = $r5;

        $r6 = new weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        specialinvoke $r6.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: void <init>(java.lang.String,int,java.lang.String)>("POISSON", 6, "poisson");

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution POISSON> = $r6;

        $r7 = newarray (weka.classifiers.pmml.consumer.GeneralRegression$Distribution)[7];

        $r8 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution NONE>;

        $r7[0] = $r8;

        $r9 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution NORMAL>;

        $r7[1] = $r9;

        $r10 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution BINOMIAL>;

        $r7[2] = $r10;

        $r11 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution GAMMA>;

        $r7[3] = $r11;

        $r12 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution INVGAUSSIAN>;

        $r7[4] = $r12;

        $r13 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution NEGBINOMIAL>;

        $r7[5] = $r13;

        $r14 = <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution POISSON>;

        $r7[6] = $r14;

        <weka.classifiers.pmml.consumer.GeneralRegression$Distribution: weka.classifiers.pmml.consumer.GeneralRegression$Distribution[] $VALUES> = $r7;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        weka.classifiers.pmml.consumer.GeneralRegression$Distribution this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: java.lang.String m_stringVal> = name;

        return;
    }

    public java.lang.String toString()
    {
        weka.classifiers.pmml.consumer.GeneralRegression$Distribution this;
        java.lang.String $r0;

        this := @this: weka.classifiers.pmml.consumer.GeneralRegression$Distribution;

        $r0 = this.<weka.classifiers.pmml.consumer.GeneralRegression$Distribution: java.lang.String m_stringVal>;

        return $r0;
    }


