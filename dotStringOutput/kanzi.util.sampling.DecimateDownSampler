digraph <init> {
"this := @this: kanzi.util.sampling.DecimateDownSampler {365536297}" -> "width := @parameter0: int {1604789115}";
"width := @parameter0: int {1604789115}" -> "height := @parameter1: int {1618145458}";
"height := @parameter1: int {1618145458}" -> "stride := @parameter2: int {1345352866}";
"stride := @parameter2: int {1345352866}" -> "offset := @parameter3: int {138818682}";
"offset := @parameter3: int {138818682}" -> "factor := @parameter4: int {1008878058}";
"factor := @parameter4: int {1008878058}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {97546202}";
"specialinvoke this.<java.lang.Object: void <init>()>() {97546202}" -> "if height >= 8 goto (branch) {1954861006}";
"if height >= 8 goto (branch) {1954861006}" -> "$r0 = new java.lang.IllegalArgumentException {1165661534}";
"if height >= 8 goto (branch) {1954861006}" -> "if width >= 8 goto (branch) {606803093}";
"$r0 = new java.lang.IllegalArgumentException {1165661534}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The height must be at least 8\") {1410354877}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The height must be at least 8\") {1410354877}" -> "throw $r0 {1654452532}";
"if width >= 8 goto (branch) {606803093}" -> "$r1 = new java.lang.IllegalArgumentException {557536373}";
"if width >= 8 goto (branch) {606803093}" -> "if offset >= 0 goto (branch) {1495776053}";
"$r1 = new java.lang.IllegalArgumentException {557536373}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The width must be at least 8\") {24362599}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The width must be at least 8\") {24362599}" -> "throw $r1 {2047924928}";
"if offset >= 0 goto (branch) {1495776053}" -> "$r2 = new java.lang.IllegalArgumentException {1161537264}";
"if offset >= 0 goto (branch) {1495776053}" -> "if stride >= width goto (branch) {684588771}";
"$r2 = new java.lang.IllegalArgumentException {1161537264}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The offset must be at least 0\") {938317007}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The offset must be at least 0\") {938317007}" -> "throw $r2 {796506340}";
"if stride >= width goto (branch) {684588771}" -> "$r3 = new java.lang.IllegalArgumentException {1242680710}";
"if stride >= width goto (branch) {684588771}" -> "if factor >= 2 goto this.<kanzi.util.sampling.DecimateDownSampler: int height> = height {710880634}";
"$r3 = new java.lang.IllegalArgumentException {1242680710}" -> "specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The stride must be at least as big as the width\") {2080869058}";
"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The stride must be at least as big as the width\") {2080869058}" -> "throw $r3 {943588665}";
"if factor >= 2 goto this.<kanzi.util.sampling.DecimateDownSampler: int height> = height {710880634}" -> "$r4 = new java.lang.IllegalArgumentException {1652613829}";
"if factor >= 2 goto this.<kanzi.util.sampling.DecimateDownSampler: int height> = height {710880634}" -> "this.<kanzi.util.sampling.DecimateDownSampler: int height> = height {920966581}";
"$r4 = new java.lang.IllegalArgumentException {1652613829}" -> "specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"This implementation only supports a scaling factor greater than or equal to 2\") {735176334}";
"specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"This implementation only supports a scaling factor greater than or equal to 2\") {735176334}" -> "throw $r4 {1310896123}";
"this.<kanzi.util.sampling.DecimateDownSampler: int height> = height {920966581}" -> "this.<kanzi.util.sampling.DecimateDownSampler: int width> = width {1527132007}";
"this.<kanzi.util.sampling.DecimateDownSampler: int width> = width {1527132007}" -> "this.<kanzi.util.sampling.DecimateDownSampler: int stride> = stride {199672497}";
"this.<kanzi.util.sampling.DecimateDownSampler: int stride> = stride {199672497}" -> "this.<kanzi.util.sampling.DecimateDownSampler: int offset> = offset {541970178}";
"this.<kanzi.util.sampling.DecimateDownSampler: int offset> = offset {541970178}" -> "this.<kanzi.util.sampling.DecimateDownSampler: int factor> = factor {2078514326}";
"this.<kanzi.util.sampling.DecimateDownSampler: int factor> = factor {2078514326}" -> "return {899180855}";
}

digraph subSample {
"this := @this: kanzi.util.sampling.DecimateDownSampler {351096400}" -> "input := @parameter0: int[] {1946238833}";
"input := @parameter0: int[] {1946238833}" -> "output := @parameter1: int[] {1716695195}";
"output := @parameter1: int[] {1716695195}" -> "w = this.<kanzi.util.sampling.DecimateDownSampler: int width> {1738021267}";
"w = this.<kanzi.util.sampling.DecimateDownSampler: int width> {1738021267}" -> "inc = this.<kanzi.util.sampling.DecimateDownSampler: int factor> {403705613}";
"inc = this.<kanzi.util.sampling.DecimateDownSampler: int factor> {403705613}" -> "$i0 = this.<kanzi.util.sampling.DecimateDownSampler: int stride> {1746129733}";
"$i0 = this.<kanzi.util.sampling.DecimateDownSampler: int stride> {1746129733}" -> "stn = $i0 * inc {1282206136}";
"stn = $i0 * inc {1282206136}" -> "iOffs#11 = this.<kanzi.util.sampling.DecimateDownSampler: int offset> {1273274096}";
"iOffs#11 = this.<kanzi.util.sampling.DecimateDownSampler: int offset> {1273274096}" -> "oOffs#13 = 0 {1270204852}";
"oOffs#13 = 0 {1270204852}" -> "j#16 = this.<kanzi.util.sampling.DecimateDownSampler: int height> {522059151}";
"j#16 = this.<kanzi.util.sampling.DecimateDownSampler: int height> {522059151}" -> "if j#16 <= 0 goto return {1582758676}";
"if j#16 <= 0 goto return {1582758676}" -> "end = iOffs#11 + w {1805809660}";
"if j#16 <= 0 goto return {1582758676}" -> "return {595963587}";
"end = iOffs#11 + w {1805809660}" -> "i#22 = iOffs#11 {1487480924}";
"i#22 = iOffs#11 {1487480924}" -> "if i#22 >= end goto iOffs#11 = iOffs#11 + stn {1221733848}";
"if i#22 >= end goto iOffs#11 = iOffs#11 + stn {1221733848}" -> "$i1 = oOffs#13 {476590312}";
"if i#22 >= end goto iOffs#11 = iOffs#11 + stn {1221733848}" -> "iOffs#11 = iOffs#11 + stn {1914691871}";
"$i1 = oOffs#13 {476590312}" -> "oOffs#13 = oOffs#13 + 1 {1497621096}";
"oOffs#13 = oOffs#13 + 1 {1497621096}" -> "$i2 = input[i#22] {928587344}";
"$i2 = input[i#22] {928587344}" -> "output[$i1] = $i2 {1189696678}";
"output[$i1] = $i2 {1189696678}" -> "i#22 = i#22 + inc {1153972158}";
"i#22 = i#22 + inc {1153972158}" -> "goto [?= (branch)] {123021907}";
"goto [?= (branch)] {123021907}" -> "if i#22 >= end goto iOffs#11 = iOffs#11 + stn {1221733848}";
"iOffs#11 = iOffs#11 + stn {1914691871}" -> "j#16 = j#16 - inc {58610232}";
"j#16 = j#16 - inc {58610232}" -> "goto [?= (branch)] {2131133909}";
"goto [?= (branch)] {2131133909}" -> "if j#16 <= 0 goto return {1582758676}";
}

digraph supportsScalingFactor {
"this := @this: kanzi.util.sampling.DecimateDownSampler {392826922}" -> "factor := @parameter0: int {2026554747}";
"factor := @parameter0: int {2026554747}" -> "if factor < 2 goto $z0 = 0 {503196747}";
"if factor < 2 goto $z0 = 0 {503196747}" -> "$z0 = 1 {1638804001}";
"if factor < 2 goto $z0 = 0 {503196747}" -> "$z0 = 0 {817759931}";
"$z0 = 1 {1638804001}" -> "goto [?= return $z0] {82871372}";
"goto [?= return $z0] {82871372}" -> "return $z0 {1548679315}";
"$z0 = 0 {817759931}" -> "return $z0 {1548679315}";
}

digraph subSampleHorizontal {
"this := @this: kanzi.util.sampling.DecimateDownSampler {740076342}" -> "input := @parameter0: int[] {1157421922}";
"input := @parameter0: int[] {1157421922}" -> "output := @parameter1: int[] {522169793}";
"output := @parameter1: int[] {522169793}" -> "w = this.<kanzi.util.sampling.DecimateDownSampler: int width> {701124721}";
"w = this.<kanzi.util.sampling.DecimateDownSampler: int width> {701124721}" -> "inc = this.<kanzi.util.sampling.DecimateDownSampler: int factor> {1666777129}";
"inc = this.<kanzi.util.sampling.DecimateDownSampler: int factor> {1666777129}" -> "st = this.<kanzi.util.sampling.DecimateDownSampler: int stride> {1534083795}";
"st = this.<kanzi.util.sampling.DecimateDownSampler: int stride> {1534083795}" -> "iOffs#9 = this.<kanzi.util.sampling.DecimateDownSampler: int offset> {705760111}";
"iOffs#9 = this.<kanzi.util.sampling.DecimateDownSampler: int offset> {705760111}" -> "oOffs#11 = 0 {2047907757}";
"oOffs#11 = 0 {2047907757}" -> "j#14 = this.<kanzi.util.sampling.DecimateDownSampler: int height> {1089826168}";
"j#14 = this.<kanzi.util.sampling.DecimateDownSampler: int height> {1089826168}" -> "if j#14 <= 0 goto return {443904594}";
"if j#14 <= 0 goto return {443904594}" -> "end = iOffs#9 + w {770054018}";
"if j#14 <= 0 goto return {443904594}" -> "return {370915605}";
"end = iOffs#9 + w {770054018}" -> "i#20 = iOffs#9 {1965179204}";
"i#20 = iOffs#9 {1965179204}" -> "if i#20 >= end goto iOffs#9 = iOffs#9 + st {606722398}";
"if i#20 >= end goto iOffs#9 = iOffs#9 + st {606722398}" -> "$i0 = oOffs#11 {63983821}";
"if i#20 >= end goto iOffs#9 = iOffs#9 + st {606722398}" -> "iOffs#9 = iOffs#9 + st {472849330}";
"$i0 = oOffs#11 {63983821}" -> "oOffs#11 = oOffs#11 + 1 {2093523674}";
"oOffs#11 = oOffs#11 + 1 {2093523674}" -> "$i1 = input[i#20] {1151514330}";
"$i1 = input[i#20] {1151514330}" -> "output[$i0] = $i1 {520989272}";
"output[$i0] = $i1 {520989272}" -> "i#20 = i#20 + inc {939776424}";
"i#20 = i#20 + inc {939776424}" -> "goto [?= (branch)] {207095616}";
"goto [?= (branch)] {207095616}" -> "if i#20 >= end goto iOffs#9 = iOffs#9 + st {606722398}";
"iOffs#9 = iOffs#9 + st {472849330}" -> "j#14 = j#14 + -1 {1926799399}";
"j#14 = j#14 + -1 {1926799399}" -> "goto [?= (branch)] {1298586112}";
"goto [?= (branch)] {1298586112}" -> "if j#14 <= 0 goto return {443904594}";
}


