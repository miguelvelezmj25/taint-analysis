    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.WeakHashMap $r1;

        $r0 = class "berkeley/com/sleepycat/persist/impl/Store";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <berkeley.com.sleepycat.persist.impl.Store: java.util.Map catalogPool> = $r1;

        return;
    }

    public void <init>(berkeley.com.sleepycat.je.Environment, java.lang.String, berkeley.com.sleepycat.persist.StoreConfig, boolean) throws berkeley.com.sleepycat.persist.StoreExistsException, berkeley.com.sleepycat.persist.StoreNotFoundException, berkeley.com.sleepycat.persist.evolve.IncompatibleClassException, berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.Environment env;
        java.lang.String storeName, relatedClsName, $r16, $r34, $r36, $r39, $r65, $r67, $r70, $r90;
        berkeley.com.sleepycat.persist.StoreConfig config, $r2, $r7, $r28, $r31, $r52, $r54, $r56, $r58, $r60, $r62;
        boolean rawAccess, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        berkeley.com.sleepycat.je.Durability envDurability;
        berkeley.com.sleepycat.je.DatabaseConfig dbConfig, dbConfig, tmp$355185868, tmp$1389994320;
        java.util.Map l5, $r41, $r42, $r45, $r82, $r85, $r88, tmp$1021620392, tmp$1649127281;
        java.lang.Throwable l8, $r75;
        java.util.ArrayList entityFormats, tmp$1348191360;
        java.util.Iterator l6, l9;
        berkeley.com.sleepycat.persist.impl.Format entityFormat;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        berkeley.com.sleepycat.je.TransactionConfig $r5, $r9, $r10, tmp$319461886, tmp$1539280298;
        berkeley.com.sleepycat.je.EnvironmentConfig $r8;
        berkeley.com.sleepycat.persist.model.EntityModel $r11, $r25, $r71, $r77;
        java.lang.StringBuilder $r13, $r14, $r15, $r37, $r38, $r68, $r69, tmp$1950830528, tmp$395271003, tmp$2040603986;
        berkeley.com.sleepycat.persist.evolve.Mutations $r40, $r72;
        java.lang.Object $r43, catalogMap#123, $r47, $r81, $r84, $r86, inverseClassNames#241;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r48, $r49, $r50, $r73, $r76, $r80, tmp$268416168, tmp$1315729466;
        java.util.Collection $r83;
        java.lang.NullPointerException tmp$1757437019;
        java.util.HashMap tmp$1537685787, tmp$153107896, tmp$106773123, tmp$1940682518, tmp$2109503434, tmp$1545712174, tmp$106068640, tmp$812765318, tmp$674041891;
        java.util.IdentityHashMap tmp$817025639;
        java.lang.IllegalArgumentException tmp$1332146909;
        java.util.HashSet tmp$2032586898;
        java.util.Set tmp$1761678320;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        env := @parameter0: berkeley.com.sleepycat.je.Environment;

        storeName := @parameter1: java.lang.String;

        config := @parameter2: berkeley.com.sleepycat.persist.StoreConfig;

        rawAccess := @parameter3: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env> = env;

        this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storeName> = storeName;

        this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess> = rawAccess;

        if env == null goto label01;

        if storeName != null goto label02;

     label01:
        tmp$1757437019 = new java.lang.NullPointerException;

        specialinvoke tmp$1757437019.<java.lang.NullPointerException: void <init>(java.lang.String)>("env and storeName parameters must not be null");

        throw tmp$1757437019;

     label02:
        if config == null goto label03;

        $r2 = virtualinvoke config.<berkeley.com.sleepycat.persist.StoreConfig: berkeley.com.sleepycat.persist.StoreConfig clone()>();

        goto label04;

     label03:
        $r2 = <berkeley.com.sleepycat.persist.StoreConfig: berkeley.com.sleepycat.persist.StoreConfig DEFAULT>;

     label04:
        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig> = $r2;

        tmp$319461886 = new berkeley.com.sleepycat.je.TransactionConfig;

        specialinvoke tmp$319461886.<berkeley.com.sleepycat.je.TransactionConfig: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitTxnConfig> = tmp$319461886;

        tmp$1539280298 = new berkeley.com.sleepycat.je.TransactionConfig;

        specialinvoke tmp$1539280298.<berkeley.com.sleepycat.je.TransactionConfig: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitNoWaitTxnConfig> = tmp$1539280298;

        $r5 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitNoWaitTxnConfig>;

        virtualinvoke $r5.<berkeley.com.sleepycat.je.TransactionConfig: berkeley.com.sleepycat.je.TransactionConfig setNoWait(boolean)>(1);

        $r7 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z0 = virtualinvoke $r7.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReplicated()>();

        if $z0 != 0 goto label05;

        $r8 = virtualinvoke env.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.EnvironmentConfig getConfig()>();

        envDurability = virtualinvoke $r8.<berkeley.com.sleepycat.je.EnvironmentConfig: berkeley.com.sleepycat.je.Durability getDurability()>();

        $r9 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitTxnConfig>;

        staticinvoke <berkeley.com.sleepycat.persist.impl.Store: void configForNonRepDb(berkeley.com.sleepycat.je.TransactionConfig,berkeley.com.sleepycat.je.Durability)>($r9, envDurability);

        $r10 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitNoWaitTxnConfig>;

        staticinvoke <berkeley.com.sleepycat.persist.impl.Store: void configForNonRepDb(berkeley.com.sleepycat.je.TransactionConfig,berkeley.com.sleepycat.je.Durability)>($r10, envDurability);

     label05:
        $r11 = virtualinvoke config.<berkeley.com.sleepycat.persist.StoreConfig: berkeley.com.sleepycat.persist.model.EntityModel getModel()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model> = $r11;

        tmp$1950830528 = new java.lang.StringBuilder;

        specialinvoke tmp$1950830528.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke tmp$1950830528.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persist#");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(storeName);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix> = $r16;

        tmp$1537685787 = new java.util.HashMap;

        specialinvoke tmp$1537685787.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap> = tmp$1537685787;

        tmp$153107896 = new java.util.HashMap;

        specialinvoke tmp$153107896.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap> = tmp$153107896;

        tmp$106773123 = new java.util.HashMap;

        specialinvoke tmp$106773123.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priConfigMap> = tmp$106773123;

        tmp$1940682518 = new java.util.HashMap;

        specialinvoke tmp$1940682518.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secConfigMap> = tmp$1940682518;

        tmp$2109503434 = new java.util.HashMap;

        specialinvoke tmp$2109503434.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map keyBindingMap> = tmp$2109503434;

        tmp$1545712174 = new java.util.HashMap;

        specialinvoke tmp$1545712174.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceMap> = tmp$1545712174;

        tmp$106068640 = new java.util.HashMap;

        specialinvoke tmp$106068640.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceConfigMap> = tmp$106068640;

        tmp$817025639 = new java.util.IdentityHashMap;

        specialinvoke tmp$817025639.<java.util.IdentityHashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.IdentityHashMap deferredWriteDatabases> = tmp$817025639;

        if rawAccess == 0 goto label07;

        $r25 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model>;

        if $r25 == null goto label06;

        tmp$1332146909 = new java.lang.IllegalArgumentException;

        specialinvoke tmp$1332146909.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A model may not be specified when opening a RawStore");

        throw tmp$1332146909;

     label06:
        tmp$355185868 = new berkeley.com.sleepycat.je.DatabaseConfig;

        specialinvoke tmp$355185868.<berkeley.com.sleepycat.je.DatabaseConfig: void <init>()>();

        dbConfig = tmp$355185868;

        $r28 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z1 = virtualinvoke $r28.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReplicated()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReplicated(boolean)>($z1);

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReadOnly(boolean)>(1);

        $r31 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z2 = virtualinvoke $r31.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTransactional()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTransactional(boolean)>($z2);

        tmp$268416168 = new berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $r34 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        tmp$395271003 = new java.lang.StringBuilder;

        specialinvoke tmp$395271003.<java.lang.StringBuilder: void <init>()>();

        $r36 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        $r37 = virtualinvoke tmp$395271003.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.sleepycat.persist.formats");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = virtualinvoke config.<berkeley.com.sleepycat.persist.StoreConfig: berkeley.com.sleepycat.persist.evolve.Mutations getMutations()>();

        specialinvoke tmp$268416168.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void <init>(berkeley.com.sleepycat.je.Environment,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig,berkeley.com.sleepycat.persist.model.EntityModel,berkeley.com.sleepycat.persist.evolve.Mutations,boolean,berkeley.com.sleepycat.persist.impl.Store)>(env, $r34, $r39, dbConfig, null, $r40, rawAccess, this);

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog> = tmp$268416168;

        goto label16;

     label07:
        $r41 = <berkeley.com.sleepycat.persist.impl.Store: java.util.Map catalogPool>;

        l5 = $r41;

        entermonitor $r41;

     label08:
        $r42 = <berkeley.com.sleepycat.persist.impl.Store: java.util.Map catalogPool>;

        $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(env);

        catalogMap#123 = (java.util.Map) $r43;

        if catalogMap#123 != null goto label09;

        tmp$812765318 = new java.util.HashMap;

        specialinvoke tmp$812765318.<java.util.HashMap: void <init>()>();

        catalogMap#123 = tmp$812765318;

        $r45 = <berkeley.com.sleepycat.persist.impl.Store: java.util.Map catalogPool>;

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(env, catalogMap#123);

     label09:
        tmp$1021620392 = (java.util.Map) catalogMap#123;

        $r47 = interfaceinvoke tmp$1021620392.<java.util.Map: java.lang.Object get(java.lang.Object)>(storeName);

        $r48 = (berkeley.com.sleepycat.persist.impl.PersistCatalog) $r47;

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog> = $r48;

        $r49 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        if $r49 == null goto label10;

        $r50 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke $r50.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void openExisting()>();

        goto label11;

     label10:
        tmp$1389994320 = new berkeley.com.sleepycat.je.DatabaseConfig;

        specialinvoke tmp$1389994320.<berkeley.com.sleepycat.je.DatabaseConfig: void <init>()>();

        dbConfig = tmp$1389994320;

        $r52 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z3 = virtualinvoke $r52.<berkeley.com.sleepycat.persist.StoreConfig: boolean getAllowCreate()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>($z3);

        $r54 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z4 = virtualinvoke $r54.<berkeley.com.sleepycat.persist.StoreConfig: boolean getExclusiveCreate()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setExclusiveCreate(boolean)>($z4);

        $r56 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z5 = virtualinvoke $r56.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTemporary()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTemporary(boolean)>($z5);

        $r58 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z6 = virtualinvoke $r58.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReplicated()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReplicated(boolean)>($z6);

        $r60 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z7 = virtualinvoke $r60.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReadOnly()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReadOnly(boolean)>($z7);

        $r62 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z8 = virtualinvoke $r62.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTransactional()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTransactional(boolean)>($z8);

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: void setTypeBtree(berkeley.com.sleepycat.je.DatabaseConfig)>(dbConfig);

        tmp$1315729466 = new berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $r65 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        tmp$2040603986 = new java.lang.StringBuilder;

        specialinvoke tmp$2040603986.<java.lang.StringBuilder: void <init>()>();

        $r67 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        $r68 = virtualinvoke tmp$2040603986.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.sleepycat.persist.formats");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        $r71 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model>;

        $r72 = virtualinvoke config.<berkeley.com.sleepycat.persist.StoreConfig: berkeley.com.sleepycat.persist.evolve.Mutations getMutations()>();

        specialinvoke tmp$1315729466.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void <init>(berkeley.com.sleepycat.je.Environment,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig,berkeley.com.sleepycat.persist.model.EntityModel,berkeley.com.sleepycat.persist.evolve.Mutations,boolean,berkeley.com.sleepycat.persist.impl.Store)>(env, $r65, $r70, dbConfig, $r71, $r72, rawAccess, this);

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog> = tmp$1315729466;

        $r73 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        tmp$1649127281 = (java.util.Map) catalogMap#123;

        interfaceinvoke tmp$1649127281.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(storeName, $r73);

     label11:
        exitmonitor l5;

     label12:
        goto label16;

     label13:
        $r75 := @caughtexception;

     label14:
        l8 = $r75;

        exitmonitor l5;

     label15:
        throw l8;

     label16:
        $r76 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $r77 = virtualinvoke $r76.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.model.EntityModel getResolvedModel()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model> = $r77;

        tmp$674041891 = new java.util.HashMap;

        specialinvoke tmp$674041891.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map inverseRelatedEntityMap> = tmp$674041891;

        tmp$1348191360 = new java.util.ArrayList;

        specialinvoke tmp$1348191360.<java.util.ArrayList: void <init>()>();

        entityFormats = tmp$1348191360;

        $r80 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke $r80.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void getEntityFormats(java.util.Collection)>(entityFormats);

        l6 = interfaceinvoke entityFormats.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z9 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label22;

        $r81 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        entityFormat = (berkeley.com.sleepycat.persist.impl.Format) $r81;

        entityMeta = virtualinvoke entityFormat.<berkeley.com.sleepycat.persist.impl.Format: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata()>();

        $r82 = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.util.Map getSecondaryKeys()>();

        $r83 = interfaceinvoke $r82.<java.util.Map: java.util.Collection values()>();

        l9 = interfaceinvoke $r83.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z10 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label21;

        $r84 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        secKeyMeta = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r84;

        relatedClsName = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getRelatedEntity()>();

        if relatedClsName == null goto label20;

        $r85 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map inverseRelatedEntityMap>;

        $r86 = interfaceinvoke $r85.<java.util.Map: java.lang.Object get(java.lang.Object)>(relatedClsName);

        inverseClassNames#241 = (java.util.Set) $r86;

        if inverseClassNames#241 != null goto label19;

        tmp$2032586898 = new java.util.HashSet;

        specialinvoke tmp$2032586898.<java.util.HashSet: void <init>()>();

        inverseClassNames#241 = tmp$2032586898;

        $r88 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map inverseRelatedEntityMap>;

        interfaceinvoke $r88.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(relatedClsName, inverseClassNames#241);

     label19:
        $r90 = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.lang.String getClassName()>();

        tmp$1761678320 = (java.util.Set) inverseClassNames#241;

        interfaceinvoke tmp$1761678320.<java.util.Set: boolean add(java.lang.Object)>($r90);

     label20:
        goto label18;

     label21:
        goto label17;

     label22:
        return;

        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private static void configForNonRepDb(berkeley.com.sleepycat.je.TransactionConfig, berkeley.com.sleepycat.je.Durability)
    {
        berkeley.com.sleepycat.je.TransactionConfig config;
        berkeley.com.sleepycat.je.Durability envDurability, $r1;
        berkeley.com.sleepycat.je.Durability$ReplicaAckPolicy $r0;
        berkeley.com.sleepycat.je.Durability$SyncPolicy $r2, $r3;
        berkeley.com.sleepycat.je.rep.NoConsistencyRequiredPolicy $r5;

        config := @parameter0: berkeley.com.sleepycat.je.TransactionConfig;

        envDurability := @parameter1: berkeley.com.sleepycat.je.Durability;

        $r1 = new berkeley.com.sleepycat.je.Durability;

        $r2 = virtualinvoke envDurability.<berkeley.com.sleepycat.je.Durability: berkeley.com.sleepycat.je.Durability$SyncPolicy getLocalSync()>();

        $r3 = virtualinvoke envDurability.<berkeley.com.sleepycat.je.Durability: berkeley.com.sleepycat.je.Durability$SyncPolicy getReplicaSync()>();

        $r0 = <berkeley.com.sleepycat.je.Durability$ReplicaAckPolicy: berkeley.com.sleepycat.je.Durability$ReplicaAckPolicy NONE>;

        specialinvoke $r1.<berkeley.com.sleepycat.je.Durability: void <init>(berkeley.com.sleepycat.je.Durability$SyncPolicy,berkeley.com.sleepycat.je.Durability$SyncPolicy,berkeley.com.sleepycat.je.Durability$ReplicaAckPolicy)>($r2, $r3, $r0);

        virtualinvoke config.<berkeley.com.sleepycat.je.TransactionConfig: berkeley.com.sleepycat.je.TransactionConfig setDurability(berkeley.com.sleepycat.je.Durability)>($r1);

        $r5 = <berkeley.com.sleepycat.je.rep.NoConsistencyRequiredPolicy: berkeley.com.sleepycat.je.rep.NoConsistencyRequiredPolicy NO_CONSISTENCY>;

        virtualinvoke config.<berkeley.com.sleepycat.je.TransactionConfig: berkeley.com.sleepycat.je.TransactionConfig setConsistencyPolicy(berkeley.com.sleepycat.je.ReplicaConsistencyPolicy)>($r5);

        virtualinvoke config.<berkeley.com.sleepycat.je.TransactionConfig: berkeley.com.sleepycat.je.TransactionConfig setLocalWrite(boolean)>(1);

        return;
    }

    public static java.lang.String[] parseDbName(java.lang.String, berkeley.com.sleepycat.persist.DatabaseNamer)
    {
        java.lang.String wholeName;
        berkeley.com.sleepycat.persist.DatabaseNamer namer;
        java.lang.String[] result;

        wholeName := @parameter0: java.lang.String;

        namer := @parameter1: berkeley.com.sleepycat.persist.DatabaseNamer;

        result = newarray (java.lang.String)[2];

        result[0] = null;

        result[1] = wholeName;

        return result;
    }

    static java.lang.String makeSecDbName(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String storePrefix, entityClsName, keyName, $r2, $r4;
        java.lang.StringBuilder $r0, $r1, $r3;

        storePrefix := @parameter0: java.lang.String;

        entityClsName := @parameter1: java.lang.String;

        keyName := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(storePrefix);

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(entityClsName, keyName);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static java.lang.String makePriDbName(java.lang.String, java.lang.String)
    {
        java.lang.String storePrefix, entityClsName, $r3;
        java.lang.StringBuilder $r0, $r1, $r2;

        storePrefix := @parameter0: java.lang.String;

        entityClsName := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(storePrefix);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityClsName);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static java.lang.String makeSecName(java.lang.String, java.lang.String)
    {
        java.lang.String entityClsName, keyName, $r4;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;

        entityClsName := @parameter0: java.lang.String;

        keyName := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityClsName);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keyName);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String[] parseDbName(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String wholeName;
        berkeley.com.sleepycat.persist.StoreConfig $r0;
        berkeley.com.sleepycat.persist.DatabaseNamer $r1;
        java.lang.String[] $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        wholeName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.persist.StoreConfig: berkeley.com.sleepycat.persist.DatabaseNamer getDatabaseNamer()>();

        $r2 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String,berkeley.com.sleepycat.persist.DatabaseNamer)>(wholeName, $r1);

        return $r2;
    }

    java.lang.String getDbNameMessage(java.lang.String[])
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String[] names;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r2, $r4;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        names := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("database: ");

        $r2 = names[1];

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public synchronized void close() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        boolean allClosed, $z0, $z1, $z2, removeFromCatalog#27, removeFromCatalog#31, $z3, $z4, $z5;
        java.util.Map catalogMap, $r3, l2#16, $r4, $r16, $r21, $r26;
        java.lang.Throwable l5, l6, $r11, $r14;
        berkeley.com.sleepycat.je.DatabaseException e, e, firstException#4, $r15, $r19, firstException#72, firstException#89;
        berkeley.com.sleepycat.je.Sequence seq;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r0, $r1, $r8;
        java.lang.AssertionError $r2, $r7;
        berkeley.com.sleepycat.je.Environment $r5;
        java.lang.Object $r6, $r18, $r23, $r28;
        java.lang.String $r9, $r12;
        java.util.Collection $r17, $r22, $r27;
        java.util.Iterator l2#57, l2#77, l2#99;
        berkeley.com.sleepycat.je.Database $r20, $r25, $r29;
        berkeley.com.sleepycat.persist.SecondaryIndex index#83;
        berkeley.com.sleepycat.je.SecondaryDatabase $r24;
        berkeley.com.sleepycat.persist.PrimaryIndex index#105;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        if $r0 != null goto label01;

        return;

     label01:
        firstException#4 = null;

     label02:
        $z0 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z0 == 0 goto label04;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        allClosed = virtualinvoke $r1.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean close()>();

        $z1 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        if allClosed != 0 goto label03;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label03:
        goto label18;

     label04:
        $r3 = <berkeley.com.sleepycat.persist.impl.Store: java.util.Map catalogPool>;

        l2#16 = $r3;

        entermonitor $r3;

     label05:
        $r4 = <berkeley.com.sleepycat.persist.impl.Store: java.util.Map catalogPool>;

        $r5 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        catalogMap = (java.util.Map) $r6;

        $z2 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z2 != 0 goto label06;

        if catalogMap != null goto label06;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label06:
        removeFromCatalog#27 = 1;

     label07:
        $r8 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        removeFromCatalog#31 = virtualinvoke $r8.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean close()>();

     label08:
        if removeFromCatalog#31 == 0 goto label13;

        $r9 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storeName>;

        interfaceinvoke catalogMap.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

        goto label13;

     label09:
        $r11 := @caughtexception;

     label10:
        l5 = $r11;

     label11:
        if removeFromCatalog#27 == 0 goto label12;

        $r12 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storeName>;

        interfaceinvoke catalogMap.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12);

     label12:
        throw l5;

     label13:
        exitmonitor l2#16;

     label14:
        goto label18;

     label15:
        $r14 := @caughtexception;

     label16:
        l6 = $r14;

        exitmonitor l2#16;

     label17:
        throw l6;

     label18:
        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog> = null;

     label19:
        goto label21;

     label20:
        $r15 := @caughtexception;

        e = $r15;

        if firstException#4 != null goto label21;

        firstException#4 = e;

     label21:
        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceMap>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Collection values()>();

        l2#57 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label22:
        $z3 = interfaceinvoke l2#57.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label27;

        $r18 = interfaceinvoke l2#57.<java.util.Iterator: java.lang.Object next()>();

        seq = (berkeley.com.sleepycat.je.Sequence) $r18;

     label23:
        virtualinvoke seq.<berkeley.com.sleepycat.je.Sequence: void close()>();

     label24:
        goto label26;

     label25:
        $r19 := @caughtexception;

        e = $r19;

        if firstException#4 != null goto label26;

        firstException#4 = e;

     label26:
        goto label22;

     label27:
        $r20 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Database sequenceDb>;

        firstException#72 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseException closeDb(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.DatabaseException)>($r20, firstException#4);

        $r21 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Collection values()>();

        l2#77 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label28:
        $z4 = interfaceinvoke l2#77.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label29;

        $r23 = interfaceinvoke l2#77.<java.util.Iterator: java.lang.Object next()>();

        index#83 = (berkeley.com.sleepycat.persist.SecondaryIndex) $r23;

        $r24 = virtualinvoke index#83.<berkeley.com.sleepycat.persist.SecondaryIndex: berkeley.com.sleepycat.je.SecondaryDatabase getDatabase()>();

        firstException#89 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseException closeDb(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.DatabaseException)>($r24, firstException#72);

        $r25 = virtualinvoke index#83.<berkeley.com.sleepycat.persist.SecondaryIndex: berkeley.com.sleepycat.je.Database getKeysDatabase()>();

        firstException#72 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseException closeDb(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.DatabaseException)>($r25, firstException#89);

        goto label28;

     label29:
        $r26 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();

        l2#99 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>();

     label30:
        $z5 = interfaceinvoke l2#99.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label31;

        $r28 = interfaceinvoke l2#99.<java.util.Iterator: java.lang.Object next()>();

        index#105 = (berkeley.com.sleepycat.persist.PrimaryIndex) $r28;

        $r29 = virtualinvoke index#105.<berkeley.com.sleepycat.persist.PrimaryIndex: berkeley.com.sleepycat.je.Database getDatabase()>();

        firstException#72 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseException closeDb(berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.DatabaseException)>($r29, firstException#72);

        goto label30;

     label31:
        if firstException#72 == null goto label32;

        throw firstException#72;

     label32:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label05 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch berkeley.com.sleepycat.je.DatabaseException from label02 to label19 with label20;
        catch berkeley.com.sleepycat.je.DatabaseException from label23 to label24 with label25;
    }

    private berkeley.com.sleepycat.je.DatabaseException closeDb(berkeley.com.sleepycat.je.Database, berkeley.com.sleepycat.je.DatabaseException)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.Database db;
        berkeley.com.sleepycat.je.DatabaseException e, firstException#1, $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        db := @parameter0: berkeley.com.sleepycat.je.Database;

        firstException#1 := @parameter1: berkeley.com.sleepycat.je.DatabaseException;

        if db == null goto label4;

     label1:
        virtualinvoke db.<berkeley.com.sleepycat.je.Database: void close()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        if firstException#1 != null goto label4;

        firstException#1 = e;

     label4:
        return firstException#1;

        catch berkeley.com.sleepycat.je.DatabaseException from label1 to label2 with label3;
    }

    public berkeley.com.sleepycat.je.Environment getEnvironment()
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.Environment $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        return $r0;
    }

    berkeley.com.sleepycat.je.TransactionConfig getAutoCommitTxnConfig()
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.TransactionConfig $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitTxnConfig>;

        return $r0;
    }

    public synchronized berkeley.com.sleepycat.persist.SecondaryIndex getSecondaryIndex(berkeley.com.sleepycat.persist.PrimaryIndex, java.lang.Class, java.lang.String, java.lang.Class, java.lang.String, java.lang.String) throws berkeley.com.sleepycat.je.DatabaseException, berkeley.com.sleepycat.persist.IndexNotAvailableException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.PrimaryIndex primaryIndex;
        java.lang.Class entityClass, keyClass, $r1;
        java.lang.String entityClassName, keyName, subclassName, declaringClassName, secName, expectClsName, dbClassName, dbKeyName, keyClassName#1, $r9, $r11, $r30, $r38, $r48;
        berkeley.com.sleepycat.persist.impl.RefreshException e, e2, $r14, $r18;
        berkeley.com.sleepycat.je.LockConflictException l15, $r40;
        java.lang.Throwable l16, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, success#143, $z8, success#157;
        java.lang.AssertionError $r0, $r3, $r23;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta#13;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta#15;
        berkeley.com.sleepycat.persist.model.EntityModel $r2, $r22;
        java.lang.IllegalArgumentException $r4, $r24;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r25, $r26, $r27, $r28, $r29, $r43, $r44, $r45, $r46, $r47;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r12, $r16, $r31, $r32, $r39;
        java.lang.RuntimeException $r19;
        java.util.Map $r20;
        java.lang.Object $r21;
        berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex secIndex#77;
        berkeley.com.sleepycat.je.Transaction txn#128, $r35;
        berkeley.com.sleepycat.je.DatabaseConfig $r33;
        berkeley.com.sleepycat.je.Environment $r34, $r36;
        berkeley.com.sleepycat.je.TransactionConfig $r37;
        berkeley.com.sleepycat.persist.IndexNotAvailableException $r42;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        primaryIndex := @parameter0: berkeley.com.sleepycat.persist.PrimaryIndex;

        entityClass := @parameter1: java.lang.Class;

        entityClassName := @parameter2: java.lang.String;

        keyClass := @parameter3: java.lang.Class;

        keyClassName#1 := @parameter4: java.lang.String;

        keyName := @parameter5: java.lang.String;

        $z0 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $z1 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z1 == 0 goto label01;

        if keyClassName#1 == null goto label03;

     label01:
        $z2 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z2 != 0 goto label02;

        if keyClassName#1 != null goto label03;

     label02:
        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label03:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void checkOpen()>();

        entityMeta#13 = null;

        secKeyMeta#15 = null;

        $r1 = virtualinvoke primaryIndex.<berkeley.com.sleepycat.persist.PrimaryIndex: java.lang.Class getEntityClass()>();

        if entityClass == $r1 goto label11;

        $r2 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model>;

        entityMeta#13 = virtualinvoke $r2.<berkeley.com.sleepycat.persist.model.EntityModel: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata(java.lang.String)>(entityClassName);

        $z3 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        if entityMeta#13 != null goto label04;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label04:
        secKeyMeta#15 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata checkSecKey(berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.String)>(entityMeta#13, keyName);

        subclassName = virtualinvoke entityClass.<java.lang.Class: java.lang.String getName()>();

        declaringClassName = virtualinvoke secKeyMeta#15.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getDeclaringClassName()>();

        $z4 = virtualinvoke subclassName.<java.lang.String: boolean equals(java.lang.Object)>(declaringClassName);

        if $z4 != 0 goto label05;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key for subclass ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(subclassName);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is declared in a different class: ");

        $r9 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(declaringClassName, keyName);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label05:
        $r12 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke $r12.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getFormat(java.lang.Class,boolean)>(entityClass, 0);

     label06:
        goto label11;

     label07:
        $r14 := @caughtexception;

        e = $r14;

        virtualinvoke e.<berkeley.com.sleepycat.persist.impl.RefreshException: berkeley.com.sleepycat.persist.impl.PersistCatalog refresh()>();

     label08:
        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke $r16.<berkeley.com.sleepycat.persist.impl.PersistCatalog: berkeley.com.sleepycat.persist.impl.Format getFormat(java.lang.Class,boolean)>(entityClass, 0);

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

        e2 = $r18;

        $r19 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e2);

        throw $r19;

     label11:
        secName = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(entityClassName, keyName);

        $r20 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(secName);

        secIndex#77 = (berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex) $r21;

        if secIndex#77 != null goto label30;

        if entityMeta#13 != null goto label12;

        $r22 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model>;

        entityMeta#13 = virtualinvoke $r22.<berkeley.com.sleepycat.persist.model.EntityModel: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata(java.lang.String)>(entityClassName);

        $z5 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z5 != 0 goto label12;

        if entityMeta#13 != null goto label12;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label12:
        if secKeyMeta#15 != null goto label13;

        secKeyMeta#15 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata checkSecKey(berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.String)>(entityMeta#13, keyName);

     label13:
        if keyClassName#1 != null goto label14;

        keyClassName#1 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String getSecKeyClass(berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata)>(secKeyMeta#15);

        goto label15;

     label14:
        expectClsName = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String getSecKeyClass(berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata)>(secKeyMeta#15);

        $z6 = virtualinvoke keyClassName#1.<java.lang.String: boolean equals(java.lang.Object)>(expectClsName);

        if $z6 != 0 goto label15;

        $r24 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong secondary key class: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keyClassName#1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Correct class is: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expectClsName);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r24;

     label15:
        $r31 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        dbClassName = virtualinvoke $r31.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.String getDatabaseClassName(java.lang.String)>(entityClassName);

        $r32 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        dbKeyName = virtualinvoke $r32.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.String getDatabaseKeyName(java.lang.String,java.lang.String)>(entityClassName, keyName);

        if dbClassName == null goto label29;

        if dbKeyName == null goto label29;

        txn#128 = null;

        $r33 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseConfig getPrimaryConfig(berkeley.com.sleepycat.persist.model.EntityMetadata)>(entityMeta#13);

        $z7 = virtualinvoke $r33.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getTransactional()>();

        if $z7 == 0 goto label16;

        $r34 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r35 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Transaction getThreadTransaction(berkeley.com.sleepycat.je.Environment)>($r34);

        if $r35 != null goto label16;

        $r36 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r37 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitNoWaitTxnConfig>;

        txn#128 = virtualinvoke $r36.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.Transaction beginTransaction(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.TransactionConfig)>(null, $r37);

     label16:
        success#143 = 0;

     label17:
        $r38 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(dbClassName, dbKeyName);

        $r39 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $z8 = virtualinvoke $r39.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        secIndex#77 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex openSecondaryIndex(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.persist.PrimaryIndex,java.lang.Class,berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.Class,java.lang.String,berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata,java.lang.String,java.lang.String,boolean,berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState)>(txn#128, primaryIndex, entityClass, entityMeta#13, keyClass, keyClassName#1, secKeyMeta#15, secName, $r38, $z8, null);

        success#157 = 1;

     label18:
        if success#157 == 0 goto label19;

        if txn#128 == null goto label29;

        virtualinvoke txn#128.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label29;

     label19:
        if txn#128 == null goto label29;

        virtualinvoke txn#128.<berkeley.com.sleepycat.je.Transaction: void abort()>();

        goto label29;

     label20:
        $r40 := @caughtexception;

     label21:
        l15 = $r40;

     label22:
        if success#143 == 0 goto label23;

        if txn#128 == null goto label29;

        virtualinvoke txn#128.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label29;

     label23:
        if txn#128 == null goto label29;

        virtualinvoke txn#128.<berkeley.com.sleepycat.je.Transaction: void abort()>();

        goto label29;

     label24:
        $r41 := @caughtexception;

     label25:
        l16 = $r41;

     label26:
        if success#143 == 0 goto label27;

        if txn#128 == null goto label28;

        virtualinvoke txn#128.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label28;

     label27:
        if txn#128 == null goto label28;

        virtualinvoke txn#128.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label28:
        throw l16;

     label29:
        if secIndex#77 != null goto label30;

        $r42 = new berkeley.com.sleepycat.persist.IndexNotAvailableException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SecondaryIndex not yet available on this Replica, entity class: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityClassName);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", key name: ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keyName);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<berkeley.com.sleepycat.persist.IndexNotAvailableException: void <init>(java.lang.String)>($r48);

        throw $r42;

     label30:
        return secIndex#77;

        catch berkeley.com.sleepycat.persist.impl.RefreshException from label05 to label06 with label07;
        catch berkeley.com.sleepycat.persist.impl.RefreshException from label08 to label09 with label10;
        catch berkeley.com.sleepycat.je.LockConflictException from label17 to label18 with label20;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    private void checkOpen()
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r0;
        java.lang.IllegalStateException $r1;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Store has been closed");

        throw $r1;

     label1:
        return;
    }

    private berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata checkSecKey(berkeley.com.sleepycat.persist.model.EntityMetadata, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        java.lang.String keyName, $r5, $r6, $r8;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        java.util.Map $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r7;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        entityMeta := @parameter0: berkeley.com.sleepycat.persist.model.EntityMetadata;

        keyName := @parameter1: java.lang.String;

        $r0 = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.util.Map getSecondaryKeys()>();

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(keyName);

        secKeyMeta = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r1;

        if secKeyMeta != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a secondary key: ");

        $r5 = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.lang.String getClassName()>();

        $r6 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>($r5, keyName);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        return secKeyMeta;
    }

    private java.lang.String getSecKeyClass(berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        java.lang.String clsName#3, $r0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        secKeyMeta := @parameter0: berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata;

        clsName#3 = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getElementClassName()>();

        if clsName#3 != null goto label1;

        clsName#3 = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getClassName()>();

     label1:
        $r0 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: java.lang.String keyClassName(java.lang.String)>(clsName#3);

        return $r0;
    }

    private synchronized berkeley.com.sleepycat.je.DatabaseConfig getPrimaryConfig(berkeley.com.sleepycat.persist.model.EntityMetadata)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.model.EntityMetadata meta;
        java.lang.String clsName, $r18;
        java.util.Map $r0, $r19;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.DatabaseConfig config#8, $r2, $r5;
        berkeley.com.sleepycat.persist.StoreConfig $r3, $r6, $r8, $r10, $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata $r17;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        meta := @parameter0: berkeley.com.sleepycat.persist.model.EntityMetadata;

        clsName = virtualinvoke meta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.lang.String getClassName()>();

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priConfigMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(clsName);

        config#8 = (berkeley.com.sleepycat.je.DatabaseConfig) $r1;

        if config#8 != null goto label3;

        $r2 = new berkeley.com.sleepycat.je.DatabaseConfig;

        specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseConfig: void <init>()>();

        config#8 = $r2;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z0 = virtualinvoke $r3.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTransactional()>();

        virtualinvoke config#8.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTransactional(boolean)>($z0);

        $r5 = config#8;

        $r6 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z1 = virtualinvoke $r6.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReadOnly()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke $r5.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>($z2);

        $r8 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z3 = virtualinvoke $r8.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReadOnly()>();

        virtualinvoke config#8.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReadOnly(boolean)>($z3);

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: void setTypeBtree(berkeley.com.sleepycat.je.DatabaseConfig)>(config#8);

        $r10 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z4 = virtualinvoke $r10.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReplicated()>();

        virtualinvoke config#8.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReplicated(boolean)>($z4);

        $r12 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z5 = virtualinvoke $r12.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTemporary()>();

        virtualinvoke config#8.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTemporary(boolean)>($z5);

        $r14 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z6 = virtualinvoke $r14.<berkeley.com.sleepycat.persist.StoreConfig: boolean getDeferredWrite()>();

        virtualinvoke config#8.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setDeferredWrite(boolean)>($z6);

        virtualinvoke config#8.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideBtreeComparator(boolean)>(1);

        $r17 = virtualinvoke meta.<berkeley.com.sleepycat.persist.model.EntityMetadata: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey()>();

        $r18 = virtualinvoke $r17.<berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata: java.lang.String getClassName()>();

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void setBtreeComparator(berkeley.com.sleepycat.je.DatabaseConfig,java.lang.String)>(config#8, $r18);

        $r19 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priConfigMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(clsName, config#8);

     label3:
        return config#8;
    }

    private berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex openSecondaryIndex(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.persist.PrimaryIndex, java.lang.Class, berkeley.com.sleepycat.persist.model.EntityMetadata, java.lang.Class, java.lang.String, berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata, java.lang.String, java.lang.String, boolean, berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.persist.PrimaryIndex primaryIndex, relatedIndex;
        java.lang.Class entityClass, keyClass;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        java.lang.String keyClassName, secName, dbSecName, relatedClsName, $r3, $r6, $r10;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        boolean doNotCreate, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState priOpenState;
        java.lang.String[] fileAndDbNames;
        berkeley.com.sleepycat.je.SecondaryConfig config;
        berkeley.com.sleepycat.je.Database priDb, $r7;
        berkeley.com.sleepycat.je.DatabaseConfig priConfig;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding keyBinding;
        berkeley.com.sleepycat.je.SecondaryDatabase db;
        berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex secIndex, $r12;
        java.util.Map $r0, $r14;
        java.lang.AssertionError $r1, $r11;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.IllegalArgumentException $r9;
        berkeley.com.sleepycat.persist.impl.PersistKeyCreator $r13;
        java.util.IdentityHashMap $r16;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        primaryIndex := @parameter1: berkeley.com.sleepycat.persist.PrimaryIndex;

        entityClass := @parameter2: java.lang.Class;

        entityMeta := @parameter3: berkeley.com.sleepycat.persist.model.EntityMetadata;

        keyClass := @parameter4: java.lang.Class;

        keyClassName := @parameter5: java.lang.String;

        secKeyMeta := @parameter6: berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata;

        secName := @parameter7: java.lang.String;

        dbSecName := @parameter8: java.lang.String;

        doNotCreate := @parameter9: boolean;

        priOpenState := @parameter10: berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        $z0 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>(secName);

        if $z1 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbSecName);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        fileAndDbNames = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>($r6);

        config = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.SecondaryConfig getSecondaryConfig(java.lang.String,berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.String,berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata)>(secName, entityMeta, keyClassName, secKeyMeta);

        priDb = virtualinvoke primaryIndex.<berkeley.com.sleepycat.persist.PrimaryIndex: berkeley.com.sleepycat.je.Database getDatabase()>();

        priConfig = virtualinvoke priDb.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.DatabaseConfig getConfig()>();

        relatedClsName = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getRelatedEntity()>();

        if relatedClsName == null goto label2;

        relatedIndex = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.PrimaryIndex getRelatedIndex(java.lang.String)>(relatedClsName);

        $r7 = virtualinvoke relatedIndex.<berkeley.com.sleepycat.persist.PrimaryIndex: berkeley.com.sleepycat.je.Database getDatabase()>();

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setForeignKeyDatabase(berkeley.com.sleepycat.je.Database)>($r7);

     label2:
        $z2 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getTransactional()>();

        $z3 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getTransactional()>();

        if $z2 != $z3 goto label3;

        $z4 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean getDeferredWrite(berkeley.com.sleepycat.je.DatabaseConfig)>(config);

        $z5 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean getDeferredWrite(berkeley.com.sleepycat.je.DatabaseConfig)>(priConfig);

        if $z4 != $z5 goto label3;

        $z6 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getReadOnly()>();

        $z7 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReadOnly()>();

        if $z6 == $z7 goto label4;

     label3:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("One of these properties was changed to be inconsistent with the associated primary database:  Transactional, DeferredWrite, ReadOnly");

        throw $r9;

     label4:
        keyBinding = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistKeyBinding getKeyBinding(java.lang.String)>(keyClassName);

        $r10 = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getKeyName()>();

        db = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.SecondaryDatabase openSecondaryDatabase(berkeley.com.sleepycat.je.Transaction,java.lang.String[],berkeley.com.sleepycat.persist.PrimaryIndex,java.lang.String,berkeley.com.sleepycat.je.SecondaryConfig,boolean)>(txn, fileAndDbNames, primaryIndex, $r10, config, doNotCreate);

        if db != null goto label6;

        $z8 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z8 != 0 goto label5;

        if doNotCreate != 0 goto label5;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label5:
        return null;

     label6:
        $r12 = new berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex;

        $r13 = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistKeyCreator getKeyCreator(berkeley.com.sleepycat.je.SecondaryConfig)>(config);

        specialinvoke $r12.<berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex: void <init>(berkeley.com.sleepycat.persist.impl.Store,berkeley.com.sleepycat.je.SecondaryDatabase,berkeley.com.sleepycat.persist.PrimaryIndex,java.lang.Class,berkeley.com.sleepycat.persist.impl.PersistKeyBinding,berkeley.com.sleepycat.persist.impl.PersistKeyCreator)>(this, db, primaryIndex, keyClass, keyBinding, $r13);

        secIndex = $r12;

        $r14 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(secName, secIndex);

        $z9 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean getDeferredWrite(berkeley.com.sleepycat.je.DatabaseConfig)>(config);

        if $z9 == 0 goto label7;

        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.IdentityHashMap deferredWriteDatabases>;

        virtualinvoke $r16.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(db, null);

     label7:
        if priOpenState == null goto label8;

        virtualinvoke priOpenState.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: void addDatabase(berkeley.com.sleepycat.je.Database)>(db);

        virtualinvoke priOpenState.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: void addSecondaryName(java.lang.String)>(secName);

     label8:
        return secIndex;
    }

    private berkeley.com.sleepycat.je.SecondaryConfig getSecondaryConfig(java.lang.String, berkeley.com.sleepycat.persist.model.EntityMetadata, java.lang.String, berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String secName, keyClassName, $r26;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        berkeley.com.sleepycat.je.DatabaseConfig priConfig;
        berkeley.com.sleepycat.persist.model.Relationship rel, $r14, $r15, $r21, $r22;
        berkeley.com.sleepycat.persist.impl.PersistKeyCreator keyCreator, $r19;
        berkeley.com.sleepycat.persist.model.DeleteAction deleteAction, $r29;
        java.util.Map $r0, $r31;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.SecondaryConfig config#6, $r2, $r4, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Comparator $r17;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r20;
        int[] $r25;
        int $i0, $i1;
        berkeley.com.sleepycat.je.ForeignKeyDeleteAction baseDeleteAction#88;
        java.lang.RuntimeException $r27;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        secName := @parameter0: java.lang.String;

        entityMeta := @parameter1: berkeley.com.sleepycat.persist.model.EntityMetadata;

        keyClassName := @parameter2: java.lang.String;

        secKeyMeta := @parameter3: berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secConfigMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(secName);

        config#6 = (berkeley.com.sleepycat.je.SecondaryConfig) $r1;

        if config#6 != null goto label15;

        priConfig = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseConfig getPrimaryConfig(berkeley.com.sleepycat.persist.model.EntityMetadata)>(entityMeta);

        $r2 = new berkeley.com.sleepycat.je.SecondaryConfig;

        specialinvoke $r2.<berkeley.com.sleepycat.je.SecondaryConfig: void <init>()>();

        config#6 = $r2;

        $z0 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getTransactional()>();

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setTransactional(boolean)>($z0);

        $r4 = config#6;

        $z1 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReadOnly()>();

        if $z1 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        virtualinvoke $r4.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>($z2);

        $z3 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReadOnly()>();

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setReadOnly(boolean)>($z3);

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: void setTypeBtree(berkeley.com.sleepycat.je.DatabaseConfig)>(config#6);

        $z4 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReplicated()>();

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setReplicated(boolean)>($z4);

        $z5 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getTemporary()>();

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setTemporary(boolean)>($z5);

        $z6 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getDeferredWrite()>();

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setDeferredWrite(boolean)>($z6);

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideBtreeComparator(boolean)>(1);

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideDuplicateComparator(boolean)>(1);

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setAllowPopulate(boolean)>(1);

        rel = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: berkeley.com.sleepycat.persist.model.Relationship getRelationship()>();

        $r13 = config#6;

        $r14 = <berkeley.com.sleepycat.persist.model.Relationship: berkeley.com.sleepycat.persist.model.Relationship MANY_TO_ONE>;

        if rel == $r14 goto label03;

        $r15 = <berkeley.com.sleepycat.persist.model.Relationship: berkeley.com.sleepycat.persist.model.Relationship MANY_TO_MANY>;

        if rel != $r15 goto label04;

     label03:
        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        virtualinvoke $r13.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setSortedDuplicates(boolean)>($z7);

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void setBtreeComparator(berkeley.com.sleepycat.je.DatabaseConfig,java.lang.String)>(config#6, keyClassName);

        $r17 = virtualinvoke priConfig.<berkeley.com.sleepycat.je.DatabaseConfig: java.util.Comparator getBtreeComparator()>();

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setDuplicateComparator(java.util.Comparator)>($r17);

        $r19 = new berkeley.com.sleepycat.persist.impl.PersistKeyCreator;

        $r20 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $z8 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        specialinvoke $r19.<berkeley.com.sleepycat.persist.impl.PersistKeyCreator: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.String,berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata,boolean)>($r20, entityMeta, keyClassName, secKeyMeta, $z8);

        keyCreator = $r19;

        $r21 = <berkeley.com.sleepycat.persist.model.Relationship: berkeley.com.sleepycat.persist.model.Relationship ONE_TO_MANY>;

        if rel == $r21 goto label06;

        $r22 = <berkeley.com.sleepycat.persist.model.Relationship: berkeley.com.sleepycat.persist.model.Relationship MANY_TO_MANY>;

        if rel != $r22 goto label07;

     label06:
        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setMultiKeyCreator(berkeley.com.sleepycat.je.SecondaryMultiKeyCreator)>(keyCreator);

        goto label08;

     label07:
        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setKeyCreator(berkeley.com.sleepycat.je.SecondaryKeyCreator)>(keyCreator);

     label08:
        deleteAction = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: berkeley.com.sleepycat.persist.model.DeleteAction getDeleteAction()>();

        if deleteAction == null goto label14;

        $r25 = <berkeley.com.sleepycat.persist.impl.Store$1: int[] $SwitchMap$berkeley$com$sleepycat$persist$model$DeleteAction>;

        $i0 = virtualinvoke deleteAction.<berkeley.com.sleepycat.persist.model.DeleteAction: int ordinal()>();

        $i1 = $r25[$i0];

        tableswitch($i1)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label09:
        baseDeleteAction#88 = <berkeley.com.sleepycat.je.ForeignKeyDeleteAction: berkeley.com.sleepycat.je.ForeignKeyDeleteAction ABORT>;

        goto label13;

     label10:
        baseDeleteAction#88 = <berkeley.com.sleepycat.je.ForeignKeyDeleteAction: berkeley.com.sleepycat.je.ForeignKeyDeleteAction CASCADE>;

        goto label13;

     label11:
        baseDeleteAction#88 = <berkeley.com.sleepycat.je.ForeignKeyDeleteAction: berkeley.com.sleepycat.je.ForeignKeyDeleteAction NULLIFY>;

        goto label13;

     label12:
        $r26 = virtualinvoke deleteAction.<berkeley.com.sleepycat.persist.model.DeleteAction: java.lang.String toString()>();

        $r27 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>($r26);

        throw $r27;

     label13:
        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setForeignKeyDeleteAction(berkeley.com.sleepycat.je.ForeignKeyDeleteAction)>(baseDeleteAction#88);

        $r29 = <berkeley.com.sleepycat.persist.model.DeleteAction: berkeley.com.sleepycat.persist.model.DeleteAction NULLIFY>;

        if deleteAction != $r29 goto label14;

        virtualinvoke config#6.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setForeignMultiKeyNullifier(berkeley.com.sleepycat.je.ForeignMultiKeyNullifier)>(keyCreator);

     label14:
        $r31 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secConfigMap>;

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(secName, config#6);

     label15:
        return config#6;
    }

    private berkeley.com.sleepycat.persist.PrimaryIndex getRelatedIndex(java.lang.String) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String relatedClsName, relatedKeyClsName#18, $r8, $r10;
        berkeley.com.sleepycat.persist.model.EntityMetadata relatedEntityMeta;
        java.lang.ClassNotFoundException e, $r3;
        java.util.Map $r0;
        java.lang.Object $r1;
        berkeley.com.sleepycat.persist.PrimaryIndex relatedIndex#6;
        boolean $z0;
        java.lang.Class relatedCls#14, relatedKeyCls#16;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r2, $r11;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata $r9;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        relatedClsName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(relatedClsName);

        relatedIndex#6 = (berkeley.com.sleepycat.persist.PrimaryIndex) $r1;

        if relatedIndex#6 != null goto label6;

        relatedEntityMeta = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityMetadata checkEntityClass(java.lang.String)>(relatedClsName);

        $z0 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z0 == 0 goto label1;

        relatedCls#14 = class "berkeley/com/sleepycat/persist/raw/RawObject";

        relatedKeyCls#16 = class "java/lang/Object";

        relatedKeyClsName#18 = null;

        goto label5;

     label1:
        $r2 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        relatedCls#14 = virtualinvoke $r2.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.Class resolveClass(java.lang.String)>(relatedClsName);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Related entity class not found: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(relatedClsName);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label4:
        $r9 = virtualinvoke relatedEntityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey()>();

        $r10 = virtualinvoke $r9.<berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata: java.lang.String getClassName()>();

        relatedKeyClsName#18 = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: java.lang.String keyClassName(java.lang.String)>($r10);

        $r11 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        relatedKeyCls#16 = virtualinvoke $r11.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.Class resolveKeyClass(java.lang.String)>(relatedKeyClsName#18);

     label5:
        relatedIndex#6 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.PrimaryIndex getPrimaryIndex(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>(relatedKeyCls#16, relatedKeyClsName#18, relatedCls#14, relatedClsName);

     label6:
        return relatedIndex#6;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private berkeley.com.sleepycat.persist.impl.PersistKeyBinding getKeyBinding(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String keyClassName;
        java.util.Map $r0, $r4;
        java.lang.Object $r1;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding#6, $r2;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r3;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        keyClassName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map keyBindingMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(keyClassName);

        binding#6 = (berkeley.com.sleepycat.persist.impl.PersistKeyBinding) $r1;

        if binding#6 != null goto label1;

        $r2 = new berkeley.com.sleepycat.persist.impl.PersistKeyBinding;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $z0 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        specialinvoke $r2.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.String,boolean)>($r3, keyClassName, $z0);

        binding#6 = $r2;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map keyBindingMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(keyClassName, binding#6);

     label1:
        return binding#6;
    }

    private berkeley.com.sleepycat.je.SecondaryDatabase openSecondaryDatabase(berkeley.com.sleepycat.je.Transaction, java.lang.String[], berkeley.com.sleepycat.persist.PrimaryIndex, java.lang.String, berkeley.com.sleepycat.je.SecondaryConfig, boolean) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.Transaction txn;
        java.lang.String[] fileAndDbNames;
        berkeley.com.sleepycat.persist.PrimaryIndex priIndex;
        java.lang.String keyName, $r8, $r9, $r26, $r27;
        berkeley.com.sleepycat.je.SecondaryConfig config;
        boolean doNotCreate, saveAllowCreate, saveOverrideDuplicateComparator, $z0, $z1, $z2, $z3, $z4, doFlush#48, $z5, $z6, $z7, $z8;
        berkeley.com.sleepycat.je.Database priDb;
        berkeley.com.sleepycat.persist.impl.ComplexFormat entityFormat;
        java.util.Comparator saveDupComparator, $r10, $r21, $r23;
        berkeley.com.sleepycat.je.SecondaryDatabase l14, l13, db#45, db#113;
        java.lang.Throwable l15, $r33;
        java.lang.AssertionError $r0, $r1, $r12;
        berkeley.com.sleepycat.bind.EntityBinding $r2;
        berkeley.com.sleepycat.persist.impl.PersistEntityBinding $r3;
        berkeley.com.sleepycat.persist.impl.Format $r4;
        berkeley.com.sleepycat.je.Environment $r7, $r25;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r11;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        fileAndDbNames := @parameter1: java.lang.String[];

        priIndex := @parameter2: berkeley.com.sleepycat.persist.PrimaryIndex;

        keyName := @parameter3: java.lang.String;

        config := @parameter4: berkeley.com.sleepycat.je.SecondaryConfig;

        doNotCreate := @parameter5: boolean;

        $z0 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getAllowPopulate()>();

        if $z1 != 0 goto label01;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label01:
        $z2 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z2 != 0 goto label02;

        $z3 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getExclusiveCreate()>();

        if $z3 == 0 goto label02;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label02:
        priDb = virtualinvoke priIndex.<berkeley.com.sleepycat.persist.PrimaryIndex: berkeley.com.sleepycat.je.Database getDatabase()>();

        $r2 = virtualinvoke priIndex.<berkeley.com.sleepycat.persist.PrimaryIndex: berkeley.com.sleepycat.bind.EntityBinding getEntityBinding()>();

        $r3 = (berkeley.com.sleepycat.persist.impl.PersistEntityBinding) $r2;

        $r4 = $r3.<berkeley.com.sleepycat.persist.impl.PersistEntityBinding: berkeley.com.sleepycat.persist.impl.Format entityFormat>;

        entityFormat = (berkeley.com.sleepycat.persist.impl.ComplexFormat) $r4;

        saveAllowCreate = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getAllowCreate()>();

        saveOverrideDuplicateComparator = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getOverrideDuplicateComparator()>();

        saveDupComparator = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: java.util.Comparator getDuplicateComparator()>();

     label03:
        if doNotCreate == 0 goto label04;

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(0);

     label04:
        $z4 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: boolean getAllowCreate()>();

        if $z4 == 0 goto label08;

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setExclusiveCreate(boolean)>(1);

        $r7 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r8 = fileAndDbNames[0];

        $r9 = fileAndDbNames[1];

        db#45 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.SecondaryDatabase openSecondaryDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.SecondaryConfig)>($r7, txn, $r8, $r9, priDb, config);

        if db#45 == null goto label08;

        doFlush#48 = 0;

        $r10 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: java.util.Comparator getDuplicateComparator()>();

        if $r10 == null goto label05;

        $z5 = virtualinvoke entityFormat.<berkeley.com.sleepycat.persist.impl.ComplexFormat: boolean setSecKeyCorrectlyOrdered(java.lang.String)>(keyName);

        if $z5 == 0 goto label05;

        $r11 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke $r11.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void flush(berkeley.com.sleepycat.je.Transaction)>(txn);

        doFlush#48 = 1;

     label05:
        $z6 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z6 != 0 goto label06;

        $z7 = <berkeley.com.sleepycat.persist.impl.Store: boolean expectFlush>;

        if $z7 == 0 goto label06;

        if doFlush#48 != 0 goto label06;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label06:
        l14 = db#45;

     label07:
        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setAllowPopulate(boolean)>(1);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setExclusiveCreate(boolean)>(0);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(saveAllowCreate);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideBtreeComparator(boolean)>(saveOverrideDuplicateComparator);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setDuplicateComparator(java.util.Comparator)>(saveDupComparator);

        return l14;

     label08:
        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(0);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setAllowPopulate(boolean)>(0);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setExclusiveCreate(boolean)>(0);

        $r21 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: java.util.Comparator getDuplicateComparator()>();

        if $r21 == null goto label09;

        $z8 = virtualinvoke entityFormat.<berkeley.com.sleepycat.persist.impl.ComplexFormat: boolean isSecKeyIncorrectlyOrdered(java.lang.String)>(keyName);

        if $z8 == 0 goto label09;

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideDuplicateComparator(boolean)>(0);

        $r23 = (java.util.Comparator) null;

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setDuplicateComparator(java.util.Comparator)>($r23);

     label09:
        $r25 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r26 = fileAndDbNames[0];

        $r27 = fileAndDbNames[1];

        db#113 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.SecondaryDatabase openSecondaryDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.Database,berkeley.com.sleepycat.je.SecondaryConfig)>($r25, txn, $r26, $r27, priDb, config);

        l13 = db#113;

     label10:
        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setAllowPopulate(boolean)>(1);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setExclusiveCreate(boolean)>(0);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(saveAllowCreate);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideBtreeComparator(boolean)>(saveOverrideDuplicateComparator);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setDuplicateComparator(java.util.Comparator)>(saveDupComparator);

        return l13;

     label11:
        $r33 := @caughtexception;

     label12:
        l15 = $r33;

     label13:
        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryConfig setAllowPopulate(boolean)>(1);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setExclusiveCreate(boolean)>(0);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(saveAllowCreate);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setOverrideBtreeComparator(boolean)>(saveOverrideDuplicateComparator);

        virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.DatabaseConfig setDuplicateComparator(java.util.Comparator)>(saveDupComparator);

        throw l15;

        catch java.lang.Throwable from label03 to label07 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private berkeley.com.sleepycat.persist.impl.PersistKeyCreator getKeyCreator(berkeley.com.sleepycat.je.SecondaryConfig)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.SecondaryConfig config;
        berkeley.com.sleepycat.je.SecondaryKeyCreator $r0;
        berkeley.com.sleepycat.persist.impl.PersistKeyCreator keyCreator#4, keyCreator#10;
        berkeley.com.sleepycat.je.SecondaryMultiKeyCreator $r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        config := @parameter0: berkeley.com.sleepycat.je.SecondaryConfig;

        $r0 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryKeyCreator getKeyCreator()>();

        keyCreator#4 = (berkeley.com.sleepycat.persist.impl.PersistKeyCreator) $r0;

        if keyCreator#4 == null goto label1;

        return keyCreator#4;

     label1:
        $r1 = virtualinvoke config.<berkeley.com.sleepycat.je.SecondaryConfig: berkeley.com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        keyCreator#10 = (berkeley.com.sleepycat.persist.impl.PersistKeyCreator) $r1;

        $z0 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if keyCreator#10 != null goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        return keyCreator#10;
    }

    private berkeley.com.sleepycat.persist.model.EntityMetadata checkEntityClass(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String clsName, $r5;
        berkeley.com.sleepycat.persist.model.EntityMetadata meta;
        berkeley.com.sleepycat.persist.model.EntityModel $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        clsName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityModel model>;

        meta = virtualinvoke $r0.<berkeley.com.sleepycat.persist.model.EntityModel: berkeley.com.sleepycat.persist.model.EntityMetadata getEntityMetadata(java.lang.String)>(clsName);

        if meta != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class could not be loaded or is not an entity class: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clsName);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return meta;
    }

    public synchronized berkeley.com.sleepycat.persist.PrimaryIndex getPrimaryIndex(java.lang.Class, java.lang.String, java.lang.Class, java.lang.String) throws berkeley.com.sleepycat.je.DatabaseException, berkeley.com.sleepycat.persist.IndexNotAvailableException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.Class primaryKeyClass, entityClass;
        java.lang.String entityClassName, expectClsName, seqName, dbClassName, relatedClsName, primaryKeyClassName#1, $r4, $r11, $r26, $r29, $r31, $r32, $r38;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata priKeyMeta;
        berkeley.com.sleepycat.persist.impl.PersistEntityBinding entityBinding, $r12;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding keyBinding;
        berkeley.com.sleepycat.je.DatabaseConfig dbConfig;
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState priOpenState, $r21;
        boolean saveAllowCreate, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, success#104, $z10, $z11, $z12, $z13, success#196;
        java.lang.String[] fileAndDbNames;
        java.util.Set inverseClassNames;
        java.lang.Throwable l21, $r49;
        java.lang.AssertionError $r0, $r1;
        java.util.Map $r2, $r40, $r44;
        java.lang.Object $r3, $r45, $r46;
        berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex priIndex#28, $r39;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r25, $r27, $r28, $r35, $r36, $r37;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r13, $r22, $r24;
        berkeley.com.sleepycat.persist.StoreConfig $r14;
        berkeley.com.sleepycat.persist.impl.PersistKeyAssigner $r15;
        berkeley.com.sleepycat.je.Sequence $r16;
        berkeley.com.sleepycat.je.Transaction txn#82, $r18;
        berkeley.com.sleepycat.je.Environment $r17, $r19, $r30;
        berkeley.com.sleepycat.je.TransactionConfig $r20;
        berkeley.com.sleepycat.je.Database db#112;
        berkeley.com.sleepycat.je.LockConflictException $r33, l19#140;
        berkeley.com.sleepycat.persist.IndexNotAvailableException $r34;
        java.util.IdentityHashMap $r42;
        java.util.Iterator l19#186;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        primaryKeyClass := @parameter0: java.lang.Class;

        primaryKeyClassName#1 := @parameter1: java.lang.String;

        entityClass := @parameter2: java.lang.Class;

        entityClassName := @parameter3: java.lang.String;

        $z0 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $z1 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z1 == 0 goto label01;

        if entityClass == class "berkeley/com/sleepycat/persist/raw/RawObject" goto label03;

     label01:
        $z2 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z2 != 0 goto label02;

        if entityClass != class "berkeley/com/sleepycat/persist/raw/RawObject" goto label03;

     label02:
        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label03:
        $z3 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z3 != 0 goto label06;

        $z4 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z4 == 0 goto label04;

        if primaryKeyClassName#1 == null goto label06;

     label04:
        $z5 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z5 != 0 goto label05;

        if primaryKeyClassName#1 != null goto label06;

     label05:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label06:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void checkOpen()>();

        $r2 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(entityClassName);

        priIndex#28 = (berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex) $r3;

        if priIndex#28 != null goto label30;

        entityMeta = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.model.EntityMetadata checkEntityClass(java.lang.String)>(entityClassName);

        priKeyMeta = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata getPrimaryKey()>();

        if primaryKeyClassName#1 != null goto label07;

        primaryKeyClassName#1 = virtualinvoke priKeyMeta.<berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata: java.lang.String getClassName()>();

        goto label08;

     label07:
        $r4 = virtualinvoke priKeyMeta.<berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata: java.lang.String getClassName()>();

        expectClsName = staticinvoke <berkeley.com.sleepycat.persist.impl.SimpleCatalog: java.lang.String keyClassName(java.lang.String)>($r4);

        $z6 = virtualinvoke primaryKeyClassName#1.<java.lang.String: boolean equals(java.lang.Object)>(expectClsName);

        if $z6 != 0 goto label08;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong primary key class: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(primaryKeyClassName#1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Correct class is: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expectClsName);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label08:
        $r12 = new berkeley.com.sleepycat.persist.impl.PersistEntityBinding;

        $r13 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $z7 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        specialinvoke $r12.<berkeley.com.sleepycat.persist.impl.PersistEntityBinding: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog,java.lang.String,boolean)>($r13, entityClassName, $z7);

        entityBinding = $r12;

        keyBinding = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistKeyBinding getKeyBinding(java.lang.String)>(primaryKeyClassName#1);

        seqName = virtualinvoke priKeyMeta.<berkeley.com.sleepycat.persist.model.PrimaryKeyMetadata: java.lang.String getSequenceName()>();

        $r14 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z8 = virtualinvoke $r14.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReadOnly()>();

        if $z8 != 0 goto label09;

        if seqName == null goto label09;

        $r15 = new berkeley.com.sleepycat.persist.impl.PersistKeyAssigner;

        $r16 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Sequence getSequence(java.lang.String)>(seqName);

        specialinvoke $r15.<berkeley.com.sleepycat.persist.impl.PersistKeyAssigner: void <init>(berkeley.com.sleepycat.persist.impl.PersistKeyBinding,berkeley.com.sleepycat.persist.impl.PersistEntityBinding,berkeley.com.sleepycat.je.Sequence)>(keyBinding, entityBinding, $r16);

        entityBinding.<berkeley.com.sleepycat.persist.impl.PersistEntityBinding: berkeley.com.sleepycat.persist.impl.PersistKeyAssigner keyAssigner> = $r15;

     label09:
        txn#82 = null;

        dbConfig = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.DatabaseConfig getPrimaryConfig(berkeley.com.sleepycat.persist.model.EntityMetadata)>(entityMeta);

        $z9 = virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getTransactional()>();

        if $z9 == 0 goto label10;

        $r17 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r18 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Transaction getThreadTransaction(berkeley.com.sleepycat.je.Environment)>($r17);

        if $r18 != null goto label10;

        $r19 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r20 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.TransactionConfig autoCommitNoWaitTxnConfig>;

        txn#82 = virtualinvoke $r19.<berkeley.com.sleepycat.je.Environment: berkeley.com.sleepycat.je.Transaction beginTransaction(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.TransactionConfig)>(null, $r20);

     label10:
        $r21 = new berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        specialinvoke $r21.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: void <init>(berkeley.com.sleepycat.persist.impl.Store,java.lang.String)>(this, entityClassName);

        priOpenState = $r21;

        saveAllowCreate = virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getAllowCreate()>();

        success#104 = 0;

     label11:
        $r22 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $z10 = virtualinvoke $r22.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        if $z10 == 0 goto label12;

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(0);

     label12:
        db#112 = null;

        $r24 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        dbClassName = virtualinvoke $r24.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.String getDatabaseClassName(java.lang.String)>(entityClassName);

        if dbClassName == null goto label16;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbClassName);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        fileAndDbNames = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>($r29);

     label13:
        $r30 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r31 = fileAndDbNames[0];

        $r32 = fileAndDbNames[1];

        db#112 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Database openDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig)>($r30, txn#82, $r31, $r32, dbConfig);

     label14:
        goto label16;

     label15:
        $r33 := @caughtexception;

        l19#140 = $r33;

     label16:
        if db#112 != null goto label17;

        $r34 = new berkeley.com.sleepycat.persist.IndexNotAvailableException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PrimaryIndex not yet available on this Replica, entity class: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityClassName);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<berkeley.com.sleepycat.persist.IndexNotAvailableException: void <init>(java.lang.String)>($r38);

        throw $r34;

     label17:
        virtualinvoke priOpenState.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: void addDatabase(berkeley.com.sleepycat.je.Database)>(db#112);

        $r39 = new berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex;

        specialinvoke $r39.<berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex: void <init>(berkeley.com.sleepycat.persist.impl.Store,berkeley.com.sleepycat.je.Database,java.lang.Class,berkeley.com.sleepycat.persist.impl.PersistKeyBinding,java.lang.Class,berkeley.com.sleepycat.persist.impl.PersistEntityBinding)>(this, db#112, primaryKeyClass, keyBinding, entityClass, entityBinding);

        priIndex#28 = $r39;

        $r40 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(entityClassName, priIndex#28);

        $z11 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: boolean getDeferredWrite(berkeley.com.sleepycat.je.DatabaseConfig)>(dbConfig);

        if $z11 == 0 goto label18;

        $r42 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.IdentityHashMap deferredWriteDatabases>;

        virtualinvoke $r42.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(db#112, null);

     label18:
        $z12 = virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: boolean getReadOnly()>();

        if $z12 != 0 goto label20;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void openSecondaryIndexes(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.persist.model.EntityMetadata,berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState)>(txn#82, entityMeta, priOpenState);

        $r44 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map inverseRelatedEntityMap>;

        $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>(entityClassName);

        inverseClassNames = (java.util.Set) $r45;

        if inverseClassNames == null goto label20;

        l19#186 = interfaceinvoke inverseClassNames.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z13 = interfaceinvoke l19#186.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label20;

        $r46 = interfaceinvoke l19#186.<java.util.Iterator: java.lang.Object next()>();

        relatedClsName = (java.lang.String) $r46;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.PrimaryIndex getRelatedIndex(java.lang.String)>(relatedClsName);

        goto label19;

     label20:
        success#196 = 1;

     label21:
        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(saveAllowCreate);

        if success#196 == 0 goto label22;

        if txn#82 == null goto label30;

        virtualinvoke txn#82.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label30;

     label22:
        if txn#82 == null goto label23;

        virtualinvoke txn#82.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label23:
        virtualinvoke priOpenState.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: void undoState()>();

        goto label30;

     label24:
        $r49 := @caughtexception;

     label25:
        l21 = $r49;

     label26:
        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(saveAllowCreate);

        if success#104 == 0 goto label27;

        if txn#82 == null goto label29;

        virtualinvoke txn#82.<berkeley.com.sleepycat.je.Transaction: void commit()>();

        goto label29;

     label27:
        if txn#82 == null goto label28;

        virtualinvoke txn#82.<berkeley.com.sleepycat.je.Transaction: void abort()>();

     label28:
        virtualinvoke priOpenState.<berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState: void undoState()>();

     label29:
        throw l21;

     label30:
        return priIndex#28;

        catch berkeley.com.sleepycat.je.LockConflictException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label21 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    static java.util.IdentityHashMap access$200(berkeley.com.sleepycat.persist.impl.Store)
    {
        berkeley.com.sleepycat.persist.impl.Store x0;
        java.util.IdentityHashMap $r0;

        x0 := @parameter0: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = x0.<berkeley.com.sleepycat.persist.impl.Store: java.util.IdentityHashMap deferredWriteDatabases>;

        return $r0;
    }

    static java.util.Map access$100(berkeley.com.sleepycat.persist.impl.Store)
    {
        berkeley.com.sleepycat.persist.impl.Store x0;
        java.util.Map $r0;

        x0 := @parameter0: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = x0.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        return $r0;
    }

    static java.util.Map access$000(berkeley.com.sleepycat.persist.impl.Store)
    {
        berkeley.com.sleepycat.persist.impl.Store x0;
        java.util.Map $r0;

        x0 := @parameter0: berkeley.com.sleepycat.persist.impl.Store;

        $r0 = x0.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        return $r0;
    }

    public synchronized berkeley.com.sleepycat.je.Sequence getSequence(java.lang.String) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String name, $r6, $r9, $r19, $r20;
        java.lang.String[] fileAndDbNames;
        berkeley.com.sleepycat.je.DatabaseConfig dbConfig, $r10;
        berkeley.com.sleepycat.je.DatabaseEntry entry, $r24;
        berkeley.com.sleepycat.persist.StoreConfig $r0, $r11, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r1;
        java.util.Map $r2, $r31;
        java.lang.Object $r3;
        berkeley.com.sleepycat.je.Sequence seq#13;
        berkeley.com.sleepycat.je.Database $r4, $r21, $r22, $r25;
        java.lang.StringBuilder $r5, $r7, $r8;
        berkeley.com.sleepycat.je.Environment $r18;
        java.lang.AssertionError $r23;
        berkeley.com.sleepycat.je.SequenceConfig $r26;
        berkeley.com.sleepycat.je.SequenceExistsException $r27, e#78;
        java.lang.RuntimeException $r28, $r30;
        berkeley.com.sleepycat.je.SequenceNotFoundException $r29, e#82;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        name := @parameter0: java.lang.String;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void checkOpen()>();

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReadOnly()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Store is read-only");

        throw $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);

        seq#13 = (berkeley.com.sleepycat.je.Sequence) $r3;

        if seq#13 != null goto label8;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Database sequenceDb>;

        if $r4 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.sleepycat.persist.sequences");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        fileAndDbNames = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String[] parseDbName(java.lang.String)>($r9);

        $r10 = new berkeley.com.sleepycat.je.DatabaseConfig;

        specialinvoke $r10.<berkeley.com.sleepycat.je.DatabaseConfig: void <init>()>();

        dbConfig = $r10;

        $r11 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z1 = virtualinvoke $r11.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTransactional()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTransactional(boolean)>($z1);

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setAllowCreate(boolean)>(1);

        $r14 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z2 = virtualinvoke $r14.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReplicated()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setReplicated(boolean)>($z2);

        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z3 = virtualinvoke $r16.<berkeley.com.sleepycat.persist.StoreConfig: boolean getTemporary()>();

        virtualinvoke dbConfig.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setTemporary(boolean)>($z3);

        staticinvoke <berkeley.com.sleepycat.compat.DbCompat: void setTypeBtree(berkeley.com.sleepycat.je.DatabaseConfig)>(dbConfig);

        $r18 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Environment env>;

        $r19 = fileAndDbNames[0];

        $r20 = fileAndDbNames[1];

        $r21 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: berkeley.com.sleepycat.je.Database openDatabase(berkeley.com.sleepycat.je.Environment,berkeley.com.sleepycat.je.Transaction,java.lang.String,java.lang.String,berkeley.com.sleepycat.je.DatabaseConfig)>($r18, null, $r19, $r20, dbConfig);

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Database sequenceDb> = $r21;

        $z4 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z4 != 0 goto label2;

        $r22 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Database sequenceDb>;

        if $r22 != null goto label2;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label2:
        $r24 = new berkeley.com.sleepycat.je.DatabaseEntry;

        specialinvoke $r24.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>()>();

        entry = $r24;

        staticinvoke <berkeley.com.sleepycat.bind.tuple.StringBinding: void stringToEntry(java.lang.String,berkeley.com.sleepycat.je.DatabaseEntry)>(name, entry);

     label3:
        $r25 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.Database sequenceDb>;

        $r26 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.je.SequenceConfig getSequenceConfig(java.lang.String)>(name);

        seq#13 = virtualinvoke $r25.<berkeley.com.sleepycat.je.Database: berkeley.com.sleepycat.je.Sequence openSequence(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.SequenceConfig)>(null, entry, $r26);

     label4:
        goto label7;

     label5:
        $r27 := @caughtexception;

        e#78 = $r27;

        $r28 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e#78);

        throw $r28;

     label6:
        $r29 := @caughtexception;

        e#82 = $r29;

        $r30 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e#82);

        throw $r30;

     label7:
        $r31 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceMap>;

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, seq#13);

     label8:
        return seq#13;

        catch berkeley.com.sleepycat.je.SequenceExistsException from label3 to label4 with label5;
        catch berkeley.com.sleepycat.je.SequenceNotFoundException from label3 to label4 with label6;
    }

    private void openSecondaryIndexes(berkeley.com.sleepycat.je.Transaction, berkeley.com.sleepycat.persist.model.EntityMetadata, berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.Transaction txn;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState priOpenState;
        java.lang.String entityClassName, keyName, secName, keyClassName, dbClassName, dbKeyName, $r20;
        berkeley.com.sleepycat.persist.PrimaryIndex priIndex;
        java.lang.Class entityClass, keyClass;
        java.util.Iterator l7;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        berkeley.com.sleepycat.persist.SecondaryIndex secIndex;
        java.util.Map $r6, $r9, $r12;
        java.lang.Object $r7, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.AssertionError $r8;
        java.util.Collection $r10;
        berkeley.com.sleepycat.persist.impl.PersistCatalog $r14, $r15, $r16, $r22;
        berkeley.com.sleepycat.persist.StoreConfig $r21;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        txn := @parameter0: berkeley.com.sleepycat.je.Transaction;

        entityMeta := @parameter1: berkeley.com.sleepycat.persist.model.EntityMetadata;

        priOpenState := @parameter2: berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState;

        entityClassName = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.lang.String getClassName()>();

        $r6 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(entityClassName);

        priIndex = (berkeley.com.sleepycat.persist.PrimaryIndex) $r7;

        $z0 = <berkeley.com.sleepycat.persist.impl.Store: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if priIndex != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        entityClass = virtualinvoke priIndex.<berkeley.com.sleepycat.persist.PrimaryIndex: java.lang.Class getEntityClass()>();

        $r9 = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.util.Map getSecondaryKeys()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>();

        l7 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r11 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        secKeyMeta = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r11;

        keyName = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getKeyName()>();

        secName = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(entityClassName, keyName);

        $r12 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(secName);

        secIndex = (berkeley.com.sleepycat.persist.SecondaryIndex) $r13;

        if secIndex != null goto label6;

        keyClassName = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String getSecKeyClass(berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata)>(secKeyMeta);

        $r14 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        keyClass = virtualinvoke $r14.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.Class resolveKeyClass(java.lang.String)>(keyClassName);

        $r15 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        dbClassName = virtualinvoke $r15.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.String getDatabaseClassName(java.lang.String)>(entityClassName);

        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        dbKeyName = virtualinvoke $r16.<berkeley.com.sleepycat.persist.impl.PersistCatalog: java.lang.String getDatabaseKeyName(java.lang.String,java.lang.String)>(entityClassName, keyName);

        if dbClassName == null goto label6;

        if dbKeyName == null goto label6;

        $r20 = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(dbClassName, dbKeyName);

        $r21 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z2 = virtualinvoke $r21.<berkeley.com.sleepycat.persist.StoreConfig: boolean getSecondaryBulkLoad()>();

        if $z2 != 0 goto label3;

        $r22 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $z3 = virtualinvoke $r22.<berkeley.com.sleepycat.persist.impl.PersistCatalog: boolean isReadOnly()>();

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex openSecondaryIndex(berkeley.com.sleepycat.je.Transaction,berkeley.com.sleepycat.persist.PrimaryIndex,java.lang.Class,berkeley.com.sleepycat.persist.model.EntityMetadata,java.lang.Class,java.lang.String,berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata,java.lang.String,java.lang.String,boolean,berkeley.com.sleepycat.persist.impl.Store$PrimaryOpenState)>(txn, priIndex, entityClass, entityMeta, keyClass, keyClassName, secKeyMeta, secName, $r20, $z4, priOpenState);

     label6:
        goto label2;

     label7:
        return;
    }

    public synchronized berkeley.com.sleepycat.je.SequenceConfig getSequenceConfig(java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        java.lang.String name;
        java.util.Map $r0, $r10;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.SequenceConfig config#7, $r2, $r7;
        berkeley.com.sleepycat.persist.StoreConfig $r8;
        boolean $z0, $z1;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        name := @parameter0: java.lang.String;

        specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: void checkOpen()>();

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceConfigMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);

        config#7 = (berkeley.com.sleepycat.je.SequenceConfig) $r1;

        if config#7 != null goto label3;

        $r2 = new berkeley.com.sleepycat.je.SequenceConfig;

        specialinvoke $r2.<berkeley.com.sleepycat.je.SequenceConfig: void <init>()>();

        config#7 = $r2;

        virtualinvoke config#7.<berkeley.com.sleepycat.je.SequenceConfig: berkeley.com.sleepycat.je.SequenceConfig setInitialValue(long)>(1L);

        virtualinvoke config#7.<berkeley.com.sleepycat.je.SequenceConfig: berkeley.com.sleepycat.je.SequenceConfig setRange(long,long)>(1L, 9223372036854775807L);

        virtualinvoke config#7.<berkeley.com.sleepycat.je.SequenceConfig: berkeley.com.sleepycat.je.SequenceConfig setCacheSize(int)>(100);

        virtualinvoke config#7.<berkeley.com.sleepycat.je.SequenceConfig: berkeley.com.sleepycat.je.SequenceConfig setAutoCommitNoSync(boolean)>(1);

        $r7 = config#7;

        $r8 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z0 = virtualinvoke $r8.<berkeley.com.sleepycat.persist.StoreConfig: boolean getReadOnly()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r7.<berkeley.com.sleepycat.je.SequenceConfig: berkeley.com.sleepycat.je.SequenceConfig setAllowCreate(boolean)>($z1);

        $r10 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map sequenceConfigMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, config#7);

     label3:
        return config#7;
    }

    private void setBtreeComparator(berkeley.com.sleepycat.je.DatabaseConfig, java.lang.String)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.je.DatabaseConfig config;
        java.lang.String clsName;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding;
        berkeley.com.sleepycat.persist.impl.Format format;
        java.lang.Class keyClass, $r0;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.persist.impl.PersistComparator $r1;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        config := @parameter0: berkeley.com.sleepycat.je.DatabaseConfig;

        clsName := @parameter1: java.lang.String;

        $z0 = this.<berkeley.com.sleepycat.persist.impl.Store: boolean rawAccess>;

        if $z0 != 0 goto label1;

        binding = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistKeyBinding getKeyBinding(java.lang.String)>(clsName);

        format = binding.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: berkeley.com.sleepycat.persist.impl.Format keyFormat>;

        $z1 = format instanceof berkeley.com.sleepycat.persist.impl.CompositeKeyFormat;

        if $z1 == 0 goto label1;

        keyClass = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.Format: java.lang.Class getType()>();

        $r0 = class "java/lang/Comparable";

        $z2 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(keyClass);

        if $z2 == 0 goto label1;

        $r1 = new berkeley.com.sleepycat.persist.impl.PersistComparator;

        specialinvoke $r1.<berkeley.com.sleepycat.persist.impl.PersistComparator: void <init>(berkeley.com.sleepycat.persist.impl.PersistKeyBinding)>(binding);

        virtualinvoke config.<berkeley.com.sleepycat.je.DatabaseConfig: berkeley.com.sleepycat.je.DatabaseConfig setBtreeComparator(java.util.Comparator)>($r1);

     label1:
        return;
    }

    synchronized void checkEntitySubclassSecondaries(berkeley.com.sleepycat.persist.model.EntityMetadata, java.lang.String) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.model.EntityMetadata entityMeta;
        java.lang.String subclassName, entityClassName, keyName, secName, $r9;
        java.util.Iterator l4;
        berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata secKeyMeta;
        berkeley.com.sleepycat.persist.StoreConfig $r0;
        boolean $z0, $z1, $z2;
        java.util.Map $r1, $r4;
        java.util.Collection $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        entityMeta := @parameter0: berkeley.com.sleepycat.persist.model.EntityMetadata;

        subclassName := @parameter1: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.StoreConfig storeConfig>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.persist.StoreConfig: boolean getSecondaryBulkLoad()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        entityClassName = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.lang.String getClassName()>();

        $r1 = virtualinvoke entityMeta.<berkeley.com.sleepycat.persist.model.EntityMetadata: java.util.Map getSecondaryKeys()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        l4 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        secKeyMeta = (berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata) $r3;

        keyName = virtualinvoke secKeyMeta.<berkeley.com.sleepycat.persist.model.SecondaryKeyMetadata: java.lang.String getKeyName()>();

        secName = staticinvoke <berkeley.com.sleepycat.persist.impl.Store: java.lang.String makeSecName(java.lang.String,java.lang.String)>(entityClassName, keyName);

        $r4 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(secName);

        if $z2 != 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entity subclasses defining a secondary key must be registered by calling EntityModel.registerClass or EntityStore.getSubclassIndex before storing an instance of the subclass: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(subclassName);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        goto label2;

     label4:
        return;
    }

    public boolean attemptRefresh()
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.impl.PersistCatalog oldCatalog, newCatalog;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        oldCatalog = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        newCatalog = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog refresh(berkeley.com.sleepycat.persist.impl.PersistCatalog,int,berkeley.com.sleepycat.persist.impl.RefreshException)>(oldCatalog, -1, null);

        if oldCatalog == newCatalog goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    synchronized berkeley.com.sleepycat.persist.impl.PersistCatalog refresh(berkeley.com.sleepycat.persist.impl.PersistCatalog, int, berkeley.com.sleepycat.persist.impl.RefreshException)
    {
        berkeley.com.sleepycat.persist.impl.Store this;
        berkeley.com.sleepycat.persist.impl.PersistCatalog oldCatalog, $r0, $r1, $r2, $r6, $r11, $r19, $r23, $r27, $r31, $r32;
        int errorFormatId, $i0, $i1;
        berkeley.com.sleepycat.persist.impl.RefreshException cause;
        berkeley.com.sleepycat.je.DatabaseException e, $r4;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding;
        berkeley.com.sleepycat.je.SecondaryConfig config;
        berkeley.com.sleepycat.persist.impl.PersistKeyCreator keyCreator;
        java.lang.String $r3, $r14;
        java.lang.RuntimeException $r5, $r15;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r13;
        java.util.Map $r16, $r20, $r24, $r28;
        java.util.Collection $r17, $r21, $r25, $r29;
        java.util.Iterator l4#38, l4#52, l4#66, l4#79;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r18, $r22, $r26, $r30;
        berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex index#44;
        berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex index#58;

        this := @this: berkeley.com.sleepycat.persist.impl.Store;

        oldCatalog := @parameter0: berkeley.com.sleepycat.persist.impl.PersistCatalog;

        errorFormatId := @parameter1: int;

        cause := @parameter2: berkeley.com.sleepycat.persist.impl.RefreshException;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        if oldCatalog == $r0 goto label01;

        $r1 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        return $r1;

     label01:
        $r2 = new berkeley.com.sleepycat.persist.impl.PersistCatalog;

        $r3 = this.<berkeley.com.sleepycat.persist.impl.Store: java.lang.String storePrefix>;

        specialinvoke $r2.<berkeley.com.sleepycat.persist.impl.PersistCatalog: void <init>(berkeley.com.sleepycat.persist.impl.PersistCatalog,java.lang.String)>(oldCatalog, $r3);

        this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog> = $r2;

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

        e = $r4;

        $r5 = staticinvoke <berkeley.com.sleepycat.util.RuntimeExceptionWrapper: java.lang.RuntimeException wrapIfNeeded(java.lang.Throwable)>(e);

        throw $r5;

     label04:
        $r6 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $i0 = virtualinvoke $r6.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int getNFormats()>();

        if errorFormatId < $i0 goto label05;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Catalog could not be refreshed, may indicate corruption, errorFormatId=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(errorFormatId);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nFormats=");

        $r11 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        $i1 = virtualinvoke $r11.<berkeley.com.sleepycat.persist.impl.PersistCatalog: int getNFormats()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.String,java.lang.Exception)>($r14, cause);

        throw $r15;

     label05:
        $r16 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map priIndexMap>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Collection values()>();

        l4#38 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke l4#38.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r18 = interfaceinvoke l4#38.<java.util.Iterator: java.lang.Object next()>();

        index#44 = (berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex) $r18;

        $r19 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke index#44.<berkeley.com.sleepycat.persist.impl.Store$InternalPrimaryIndex: void refresh(berkeley.com.sleepycat.persist.impl.PersistCatalog)>($r19);

        goto label06;

     label07:
        $r20 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secIndexMap>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Collection values()>();

        l4#52 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke l4#52.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r22 = interfaceinvoke l4#52.<java.util.Iterator: java.lang.Object next()>();

        index#58 = (berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex) $r22;

        $r23 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke index#58.<berkeley.com.sleepycat.persist.impl.Store$InternalSecondaryIndex: void refresh(berkeley.com.sleepycat.persist.impl.PersistCatalog)>($r23);

        goto label08;

     label09:
        $r24 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map keyBindingMap>;

        $r25 = interfaceinvoke $r24.<java.util.Map: java.util.Collection values()>();

        l4#66 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke l4#66.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r26 = interfaceinvoke l4#66.<java.util.Iterator: java.lang.Object next()>();

        binding = (berkeley.com.sleepycat.persist.impl.PersistKeyBinding) $r26;

        $r27 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke binding.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: void refresh(berkeley.com.sleepycat.persist.impl.PersistCatalog)>($r27);

        goto label10;

     label11:
        $r28 = this.<berkeley.com.sleepycat.persist.impl.Store: java.util.Map secConfigMap>;

        $r29 = interfaceinvoke $r28.<java.util.Map: java.util.Collection values()>();

        l4#79 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke l4#79.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r30 = interfaceinvoke l4#79.<java.util.Iterator: java.lang.Object next()>();

        config = (berkeley.com.sleepycat.je.SecondaryConfig) $r30;

        keyCreator = specialinvoke this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistKeyCreator getKeyCreator(berkeley.com.sleepycat.je.SecondaryConfig)>(config);

        $r31 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        virtualinvoke keyCreator.<berkeley.com.sleepycat.persist.impl.PersistKeyCreator: void refresh(berkeley.com.sleepycat.persist.impl.PersistCatalog)>($r31);

        goto label12;

     label13:
        $r32 = this.<berkeley.com.sleepycat.persist.impl.Store: berkeley.com.sleepycat.persist.impl.PersistCatalog catalog>;

        return $r32;

        catch berkeley.com.sleepycat.je.DatabaseException from label01 to label02 with label03;
    }


