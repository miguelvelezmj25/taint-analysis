    static void <clinit>()
    {
        java.lang.StackTraceElement[] $r0;
        java.lang.RuntimePermission $r1;

        staticinvoke <java.lang.Thread: void registerNatives()>();

        $r0 = newarray (java.lang.StackTraceElement)[0];

        <java.lang.Thread: java.lang.StackTraceElement[] EMPTY_STACK_TRACE> = $r0;

        $r1 = new java.lang.RuntimePermission;

        specialinvoke $r1.<java.lang.RuntimePermission: void <init>(java.lang.String)>("enableContextClassLoaderOverride");

        <java.lang.Thread: java.lang.RuntimePermission SUBCLASS_IMPLEMENTATION_PERMISSION> = $r1;

        return;
    }

    public java.lang.ClassLoader getContextClassLoader()
    {
        java.lang.Thread l0;
        java.lang.SecurityManager l1;
        java.lang.Class $r0;
        java.lang.ClassLoader $r1, $r2, $r3;

        l0 := @this: java.lang.Thread;

        $r1 = l0.<java.lang.Thread: java.lang.ClassLoader contextClassLoader>;

        if $r1 != null goto label1;

        return null;

     label1:
        l1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if l1 == null goto label2;

        $r2 = l0.<java.lang.Thread: java.lang.ClassLoader contextClassLoader>;

        $r0 = staticinvoke <sun.reflect.Reflection: java.lang.Class getCallerClass()>();

        staticinvoke <java.lang.ClassLoader: void checkClassLoaderPermission(java.lang.ClassLoader,java.lang.Class)>($r2, $r0);

     label2:
        $r3 = l0.<java.lang.Thread: java.lang.ClassLoader contextClassLoader>;

        return $r3;
    }


