    void <init>()
    {
        java.lang.Class$3 l0;

        l0 := @this: java.lang.Class$3;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object run()
    {
        java.lang.Class$3 l0;
        java.lang.Void $r0;

        l0 := @this: java.lang.Class$3;

        $r0 = virtualinvoke l0.<java.lang.Class$3: java.lang.Void run()>();

        return $r0;
    }

    public java.lang.Void run()
    {
        java.lang.Class$3 l0;
        java.lang.String l1;
        java.io.PrintStream $r0;
        boolean $z0;

        l0 := @this: java.lang.Class$3;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return null;

     label1:
        l1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.reflect.noCaches");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if l1 == null goto label2;

        $z0 = virtualinvoke l1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        staticinvoke <java.lang.Class: boolean access$402(boolean)>(0);

     label2:
        staticinvoke <java.lang.Class: boolean access$502(boolean)>(1);

        return null;
    }


