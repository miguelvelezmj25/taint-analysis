    void add(java.lang.Long, com.sleepycat.je.cleaner.LNInfo)
    {
        com.sleepycat.je.cleaner.FileProcessor$LookAheadCache this;
        java.lang.Long lsnOffset;
        com.sleepycat.je.cleaner.LNInfo info;
        java.util.SortedMap $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: com.sleepycat.je.cleaner.FileProcessor$LookAheadCache;

        lsnOffset := @parameter0: java.lang.Long;

        info := @parameter1: com.sleepycat.je.cleaner.LNInfo;

        $r0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: java.util.SortedMap map>;

        interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(lsnOffset, info);

        $i0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem>;

        $i1 = virtualinvoke info.<com.sleepycat.je.cleaner.LNInfo: int getMemorySize()>();

        $i2 = $i0 + $i1;

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem> = $i2;

        $i3 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem>;

        $i4 = <com.sleepycat.je.dbi.MemoryBudget: int TREEMAP_ENTRY_OVERHEAD>;

        $i5 = $i3 + $i4;

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem> = $i5;

        return;
    }

    boolean isFull()
    {
        com.sleepycat.je.cleaner.FileProcessor$LookAheadCache this;
        int $i0, $i1;
        boolean $z0;

        this := @this: com.sleepycat.je.cleaner.FileProcessor$LookAheadCache;

        $i0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem>;

        $i1 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int maxMem>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isEmpty()
    {
        com.sleepycat.je.cleaner.FileProcessor$LookAheadCache this;
        java.util.SortedMap $r0;
        boolean $z0;

        this := @this: com.sleepycat.je.cleaner.FileProcessor$LookAheadCache;

        $r0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: java.util.SortedMap map>;

        $z0 = interfaceinvoke $r0.<java.util.SortedMap: boolean isEmpty()>();

        return $z0;
    }

    void <init>(int)
    {
        com.sleepycat.je.cleaner.FileProcessor$LookAheadCache this;
        int lookAheadCacheSize, $i0;
        java.util.TreeMap $r0;

        this := @this: com.sleepycat.je.cleaner.FileProcessor$LookAheadCache;

        lookAheadCacheSize := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: java.util.SortedMap map> = $r0;

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int maxMem> = lookAheadCacheSize;

        $i0 = <com.sleepycat.je.dbi.MemoryBudget: int TREEMAP_OVERHEAD>;

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem> = $i0;

        return;
    }

    java.lang.Long nextOffset()
    {
        com.sleepycat.je.cleaner.FileProcessor$LookAheadCache this;
        java.util.SortedMap $r0;
        java.lang.Object $r1;
        java.lang.Long $r2;

        this := @this: com.sleepycat.je.cleaner.FileProcessor$LookAheadCache;

        $r0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: java.util.SortedMap map>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object firstKey()>();

        $r2 = (java.lang.Long) $r1;

        return $r2;
    }

    com.sleepycat.je.cleaner.LNInfo remove(java.lang.Long)
    {
        com.sleepycat.je.cleaner.FileProcessor$LookAheadCache this;
        java.lang.Long offset;
        com.sleepycat.je.cleaner.LNInfo info;
        java.util.SortedMap $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: com.sleepycat.je.cleaner.FileProcessor$LookAheadCache;

        offset := @parameter0: java.lang.Long;

        $r0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: java.util.SortedMap map>;

        $r1 = interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>(offset);

        info = (com.sleepycat.je.cleaner.LNInfo) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(info);

        if info == null goto label1;

        $i0 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem>;

        $i1 = virtualinvoke info.<com.sleepycat.je.cleaner.LNInfo: int getMemorySize()>();

        $i2 = $i0 - $i1;

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem> = $i2;

        $i3 = this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem>;

        $i4 = <com.sleepycat.je.dbi.MemoryBudget: int TREEMAP_ENTRY_OVERHEAD>;

        $i5 = $i3 - $i4;

        this.<com.sleepycat.je.cleaner.FileProcessor$LookAheadCache: int usedMem> = $i5;

     label1:
        return info;
    }


