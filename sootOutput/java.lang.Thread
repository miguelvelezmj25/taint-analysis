    protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Thread l0;
        java.lang.CloneNotSupportedException $r0;

        l0 := @this: java.lang.Thread;

        $r0 = new java.lang.CloneNotSupportedException;

        specialinvoke $r0.<java.lang.CloneNotSupportedException: void <init>()>();

        throw $r0;
    }

    public java.lang.String toString()
    {
        java.lang.Thread l0;
        java.lang.ThreadGroup l1;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17;
        java.lang.String $r2, $r7, $r10, $r15, $r18;
        int $i0, $i1;

        l0 := @this: java.lang.Thread;

        l1 = virtualinvoke l0.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

        if l1 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread[");

        $r10 = virtualinvoke l0.<java.lang.Thread: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = virtualinvoke l0.<java.lang.Thread: int getPriority()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r15 = virtualinvoke l1.<java.lang.ThreadGroup: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread[");

        $r2 = virtualinvoke l0.<java.lang.Thread: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i0 = virtualinvoke l0.<java.lang.Thread: int getPriority()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.StackTraceElement[] $r0;
        java.lang.RuntimePermission $r1;

        staticinvoke <java.lang.Thread: void registerNatives()>();

        $r0 = newarray (java.lang.StackTraceElement)[0];

        <java.lang.Thread: java.lang.StackTraceElement[] EMPTY_STACK_TRACE> = $r0;

        $r1 = new java.lang.RuntimePermission;

        specialinvoke $r1.<java.lang.RuntimePermission: void <init>(java.lang.String)>("enableContextClassLoaderOverride");

        <java.lang.Thread: java.lang.RuntimePermission SUBCLASS_IMPLEMENTATION_PERMISSION> = $r1;

        return;
    }

    public final java.lang.ThreadGroup getThreadGroup()
    {
        java.lang.Thread l0;
        java.lang.ThreadGroup $r0;

        l0 := @this: java.lang.Thread;

        $r0 = l0.<java.lang.Thread: java.lang.ThreadGroup group>;

        return $r0;
    }

    public final java.lang.String getName()
    {
        java.lang.Thread l0;
        java.lang.String $r0;

        l0 := @this: java.lang.Thread;

        $r0 = l0.<java.lang.Thread: java.lang.String name>;

        return $r0;
    }

    public final int getPriority()
    {
        java.lang.Thread l0;
        int $i0;

        l0 := @this: java.lang.Thread;

        $i0 = l0.<java.lang.Thread: int priority>;

        return $i0;
    }


