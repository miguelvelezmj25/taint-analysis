    public static boolean isProtected(int)
    {
        int l0, $i0;
        boolean $z0;

        l0 := @parameter0: int;

        $i0 = l0 & 4;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isVolatile(int)
    {
        int l0, $i0;
        boolean $z0;

        l0 := @parameter0: int;

        $i0 = l0 & 64;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        sun.reflect.ReflectionFactory l0;
        sun.reflect.ReflectionFactory$GetReflectionFactoryAction $r0;
        java.lang.Object $r1;
        java.lang.reflect.ReflectAccess $r2;

        $r0 = new sun.reflect.ReflectionFactory$GetReflectionFactoryAction;

        specialinvoke $r0.<sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()>();

        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        l0 = (sun.reflect.ReflectionFactory) $r1;

        $r2 = new java.lang.reflect.ReflectAccess;

        specialinvoke $r2.<java.lang.reflect.ReflectAccess: void <init>()>();

        virtualinvoke l0.<sun.reflect.ReflectionFactory: void setLangReflectAccess(sun.reflect.LangReflectAccess)>($r2);

        return;
    }


