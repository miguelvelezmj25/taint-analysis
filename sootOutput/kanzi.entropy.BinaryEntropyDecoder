    public void dispose()
    {
        kanzi.entropy.BinaryEntropyDecoder this;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        return;
    }

    public void <init>(kanzi.InputBitStream, kanzi.entropy.Predictor)
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        kanzi.InputBitStream bitstream;
        kanzi.entropy.Predictor predictor;
        java.lang.NullPointerException $r0, $r1;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        bitstream := @parameter0: kanzi.InputBitStream;

        predictor := @parameter1: kanzi.entropy.Predictor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if bitstream != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid null bitstream parameter");

        throw $r0;

     label1:
        if predictor != null goto label2;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Invalid null predictor parameter");

        throw $r1;

     label2:
        this.<kanzi.entropy.BinaryEntropyDecoder: long low> = 0L;

        this.<kanzi.entropy.BinaryEntropyDecoder: long high> = 72057594037927935L;

        this.<kanzi.entropy.BinaryEntropyDecoder: kanzi.InputBitStream bitstream> = bitstream;

        this.<kanzi.entropy.BinaryEntropyDecoder: kanzi.entropy.Predictor predictor> = predictor;

        return;
    }

    public int decode(byte[], int, int)
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        byte[] array;
        int blkptr, len, end, $i0, $i1, i#17;
        boolean $z0;
        byte $b2;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        array := @parameter0: byte[];

        blkptr := @parameter1: int;

        len := @parameter2: int;

        if array == null goto label1;

        $i0 = blkptr + len;

        $i1 = lengthof array;

        if $i0 > $i1 goto label1;

        if blkptr < 0 goto label1;

        if len >= 0 goto label2;

     label1:
        return -1;

     label2:
        $z0 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: boolean isInitialized()>();

        if $z0 != 0 goto label3;

        virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: void initialize()>();

     label3:
        end = blkptr + len;

        i#17 = blkptr;

     label4:
        if i#17 >= end goto label5;

        $b2 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: byte decodeByte()>();

        array[i#17] = $b2;

        i#17 = i#17 + 1;

        goto label4;

     label5:
        return len;
    }

    public boolean isInitialized()
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        boolean $z0;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        $z0 = this.<kanzi.entropy.BinaryEntropyDecoder: boolean initialized>;

        return $z0;
    }

    public void initialize()
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        boolean $z0;
        kanzi.InputBitStream $r0;
        long $l0;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        $z0 = this.<kanzi.entropy.BinaryEntropyDecoder: boolean initialized>;

        if $z0 != 1 goto label1;

        return;

     label1:
        $r0 = this.<kanzi.entropy.BinaryEntropyDecoder: kanzi.InputBitStream bitstream>;

        $l0 = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(56);

        this.<kanzi.entropy.BinaryEntropyDecoder: long current> = $l0;

        this.<kanzi.entropy.BinaryEntropyDecoder: boolean initialized> = 1;

        return;
    }

    public final byte decodeByte()
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        byte $b22;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        $i0 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i1 = $i0 << 7;

        $i2 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i3 = $i2 << 6;

        $i4 = $i1 | $i3;

        $i5 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i6 = $i5 << 5;

        $i7 = $i4 | $i6;

        $i8 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i9 = $i8 << 4;

        $i10 = $i7 | $i9;

        $i11 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i12 = $i11 << 3;

        $i13 = $i10 | $i12;

        $i14 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i15 = $i14 << 2;

        $i16 = $i13 | $i15;

        $i17 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i18 = $i17 << 1;

        $i19 = $i16 | $i18;

        $i20 = virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: int decodeBit()>();

        $i21 = $i19 | $i20;

        $b22 = (byte) $i21;

        return $b22;
    }

    public int decodeBit()
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        long split, $l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8, $l9, $l11, $l12, $l13, $l14, $l15, $l16;
        kanzi.entropy.Predictor $r0, $r1;
        int $i4;
        byte $b10, bit#23, $b17;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        $l0 = this.<kanzi.entropy.BinaryEntropyDecoder: long high>;

        $l1 = this.<kanzi.entropy.BinaryEntropyDecoder: long low>;

        $l2 = $l0 - $l1;

        $l3 = $l2 >>> 4;

        $r0 = this.<kanzi.entropy.BinaryEntropyDecoder: kanzi.entropy.Predictor predictor>;

        $i4 = interfaceinvoke $r0.<kanzi.entropy.Predictor: int get()>();

        $l5 = (long) $i4;

        $l6 = $l3 * $l5;

        $l7 = $l6 >>> 8;

        $l8 = this.<kanzi.entropy.BinaryEntropyDecoder: long low>;

        split = $l7 + $l8;

        $l9 = this.<kanzi.entropy.BinaryEntropyDecoder: long current>;

        $b10 = split cmp $l9;

        if $b10 < 0 goto label1;

        bit#23 = 1;

        this.<kanzi.entropy.BinaryEntropyDecoder: long high> = split;

        goto label2;

     label1:
        bit#23 = 0;

        $l11 = split ^ -1L;

        $l12 = neg $l11;

        this.<kanzi.entropy.BinaryEntropyDecoder: long low> = $l12;

     label2:
        $r1 = this.<kanzi.entropy.BinaryEntropyDecoder: kanzi.entropy.Predictor predictor>;

        interfaceinvoke $r1.<kanzi.entropy.Predictor: void update(int)>(bit#23);

     label3:
        $l13 = this.<kanzi.entropy.BinaryEntropyDecoder: long low>;

        $l14 = this.<kanzi.entropy.BinaryEntropyDecoder: long high>;

        $l15 = $l13 ^ $l14;

        $l16 = $l15 & 72057594021150720L;

        $b17 = $l16 cmp 0L;

        if $b17 != 0 goto label4;

        virtualinvoke this.<kanzi.entropy.BinaryEntropyDecoder: void read()>();

        goto label3;

     label4:
        return bit#23;
    }

    protected void read()
    {
        kanzi.entropy.BinaryEntropyDecoder this;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11;
        kanzi.InputBitStream $r0;

        this := @this: kanzi.entropy.BinaryEntropyDecoder;

        $l0 = this.<kanzi.entropy.BinaryEntropyDecoder: long low>;

        $l1 = $l0 << 32;

        $l2 = $l1 & 72057594037927935L;

        this.<kanzi.entropy.BinaryEntropyDecoder: long low> = $l2;

        $l3 = this.<kanzi.entropy.BinaryEntropyDecoder: long high>;

        $l4 = $l3 << 32;

        $l5 = $l4 | 4294967295L;

        $l6 = $l5 & 72057594037927935L;

        this.<kanzi.entropy.BinaryEntropyDecoder: long high> = $l6;

        $l7 = this.<kanzi.entropy.BinaryEntropyDecoder: long current>;

        $l8 = $l7 << 32;

        $r0 = this.<kanzi.entropy.BinaryEntropyDecoder: kanzi.InputBitStream bitstream>;

        $l9 = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(32);

        $l10 = $l8 | $l9;

        $l11 = $l10 & 72057594037927935L;

        this.<kanzi.entropy.BinaryEntropyDecoder: long current> = $l11;

        return;
    }


