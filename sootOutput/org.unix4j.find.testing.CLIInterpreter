    public static void printHelp(org.apache.commons.cli.Options)
    {
        org.apache.commons.cli.Options options;
        org.apache.commons.cli.HelpFormatter help, $r0;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.Class $r3;
        java.lang.Package $r4;
        java.lang.String $r5, $r7;

        options := @parameter0: org.apache.commons.cli.Options;

        $r0 = new org.apache.commons.cli.HelpFormatter;

        specialinvoke $r0.<org.apache.commons.cli.HelpFormatter: void <init>()>();

        help = $r0;

        virtualinvoke help.<org.apache.commons.cli.HelpFormatter: void setWidth(int)>(110);

        virtualinvoke help.<org.apache.commons.cli.HelpFormatter: void setLeftPadding(int)>(4);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version: ");

        $r3 = class "org/unix4j/find/testing/CLIInterpreter";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Package getPackage()>();

        $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke help.<org.apache.commons.cli.HelpFormatter: void printHelp(java.lang.String,java.lang.String,org.apache.commons.cli.Options,java.lang.String,boolean)>("converter", $r7, options, "", 1);

        return;
    }

    public static org.apache.commons.cli.Options setupOptions(java.util.ResourceBundle)
    {
        java.util.ResourceBundle bundle;
        org.apache.commons.cli.Options options, $r0, $r135, $r137, $r138, $r139, $r140, $r141, $r142, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157;
        org.apache.commons.cli.Option srcOpt, srcScaleOpt, dstOpt, platform, threadCount, roundingHandler, compression, compressionQuality, upScalingAlgo, downScalingAlgo, skipExistingFiles, androidIncludeLdpiTvdpi, mipmapInsteadOfDrawable, iosCreateImagesetFolders, skipUpscaling, verboseLog, haltOnError, antiAliasing, enablePngCrush, postWebpConvert, keepUnPostProcessed, dpScaleIsHeight, dryRun, enableMozJpeg, cleanBeforeConvert, help, version, gui;
        org.apache.commons.cli.OptionGroup mainArgs, $r130, $r131, $r132, $r133;
        org.apache.commons.cli.Option$Builder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r35, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r48, $r53, $r54, $r55, $r58, $r63, $r64, $r65, $r68, $r73, $r74, $r76, $r77, $r79, $r80, $r82, $r83, $r85, $r86, $r88, $r89, $r91, $r92, $r94, $r95, $r97, $r98, $r100, $r101, $r103, $r104, $r106, $r107, $r109, $r110, $r112, $r113, $r115, $r116, $r118, $r119, $r120, $r122, $r123, $r124, $r126, $r127, $r129;
        java.lang.String $r5, $r10, $r15, $r20, $r23, $r28, $r30, $r31, $r36, $r39, $r44, $r49, $r51, $r52, $r57, $r59, $r62, $r67, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r121, $r125, $r128;
        java.lang.Object[] $r21, $r29, $r37, $r50, $r60, $r70;
        java.util.Set $r22, $r61, $r71;
        org.unix4j.find.testing.RoundingHandler$Strategy $r38;
        org.unix4j.find.testing.EScalingAlgorithm$Type $r56, $r66;

        bundle := @parameter0: java.util.ResourceBundle;

        $r0 = new org.apache.commons.cli.Options;

        specialinvoke $r0.<org.apache.commons.cli.Options: void <init>()>();

        options = $r0;

        $r1 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("src");

        $r2 = virtualinvoke $r1.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder required()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("path to file or folder");

        $r4 = virtualinvoke $r3.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r5 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.src");

        $r6 = virtualinvoke $r4.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r5);

        srcOpt = virtualinvoke $r6.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r7 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("scale");

        $r8 = virtualinvoke $r7.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("[float]|[int]dp");

        $r9 = virtualinvoke $r8.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r10 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.scale");

        $r11 = virtualinvoke $r9.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r10);

        srcScaleOpt = virtualinvoke $r11.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r12 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("dst");

        $r13 = virtualinvoke $r12.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r14 = virtualinvoke $r13.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("path");

        $r15 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.dst");

        $r16 = virtualinvoke $r14.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r15);

        dstOpt = virtualinvoke $r16.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r17 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("platform");

        $r18 = virtualinvoke $r17.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r19 = virtualinvoke $r18.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("all|android|ios|win|web");

        $r20 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.platform");

        $r21 = newarray (java.lang.Object)[1];

        $r22 = <org.unix4j.find.testing.Arguments: java.util.Set DEFAULT_PLATFORM>;

        $r21[0] = $r22;

        $r23 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r20, $r21);

        $r24 = virtualinvoke $r19.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r23);

        platform = virtualinvoke $r24.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r25 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("threads");

        $r26 = virtualinvoke $r25.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("1-8");

        $r27 = virtualinvoke $r26.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r28 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.threads");

        $r29 = newarray (java.lang.Object)[1];

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(4);

        $r29[0] = $r30;

        $r31 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r28, $r29);

        $r32 = virtualinvoke $r27.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r31);

        threadCount = virtualinvoke $r32.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r33 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("roundingMode");

        $r34 = virtualinvoke $r33.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("round|ceil|floor");

        $r35 = virtualinvoke $r34.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r36 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.rounding");

        $r37 = newarray (java.lang.Object)[1];

        $r38 = <org.unix4j.find.testing.Arguments: org.unix4j.find.testing.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY>;

        $r37[0] = $r38;

        $r39 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r36, $r37);

        $r40 = virtualinvoke $r35.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r39);

        roundingHandler = virtualinvoke $r40.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r41 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("outCompression");

        $r42 = virtualinvoke $r41.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r43 = virtualinvoke $r42.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("png|jpg|gif|bmp");

        $r44 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.outcompression");

        $r45 = virtualinvoke $r43.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r44);

        compression = virtualinvoke $r45.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r46 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("compressionQuality");

        $r47 = virtualinvoke $r46.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r48 = virtualinvoke $r47.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>("0.0-1.0");

        $r49 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.compression");

        $r50 = newarray (java.lang.Object)[1];

        $r51 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(0.9F);

        $r50[0] = $r51;

        $r52 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r49, $r50);

        $r53 = virtualinvoke $r48.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r52);

        compressionQuality = virtualinvoke $r53.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r54 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("algorithmUpscaling");

        $r55 = virtualinvoke $r54.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r56 = <org.unix4j.find.testing.EScalingAlgorithm$Type: org.unix4j.find.testing.EScalingAlgorithm$Type UPSCALING>;

        $r57 = staticinvoke <org.unix4j.find.testing.EScalingAlgorithm: java.lang.String getCliArgString(org.unix4j.find.testing.EScalingAlgorithm$Type)>($r56);

        $r58 = virtualinvoke $r55.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>($r57);

        $r59 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.scalingalgo");

        $r60 = newarray (java.lang.Object)[1];

        $r61 = <org.unix4j.find.testing.Arguments: java.util.Set DEFAULT_PLATFORM>;

        $r60[0] = $r61;

        $r62 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r59, $r60);

        $r63 = virtualinvoke $r58.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r62);

        upScalingAlgo = virtualinvoke $r63.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r64 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("algorithmDownscaling");

        $r65 = virtualinvoke $r64.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg(boolean)>(1);

        $r66 = <org.unix4j.find.testing.EScalingAlgorithm$Type: org.unix4j.find.testing.EScalingAlgorithm$Type DOWNSCALING>;

        $r67 = staticinvoke <org.unix4j.find.testing.EScalingAlgorithm: java.lang.String getCliArgString(org.unix4j.find.testing.EScalingAlgorithm$Type)>($r66);

        $r68 = virtualinvoke $r65.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder argName(java.lang.String)>($r67);

        $r69 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.scalingalgo");

        $r70 = newarray (java.lang.Object)[1];

        $r71 = <org.unix4j.find.testing.Arguments: java.util.Set DEFAULT_PLATFORM>;

        $r70[0] = $r71;

        $r72 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r69, $r70);

        $r73 = virtualinvoke $r68.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r72);

        downScalingAlgo = virtualinvoke $r73.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r74 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("skipExisting");

        $r75 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.skipexisting");

        $r76 = virtualinvoke $r74.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r75);

        skipExistingFiles = virtualinvoke $r76.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r77 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("androidIncludeLdpiTvdpi");

        $r78 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.androidmipmap");

        $r79 = virtualinvoke $r77.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r78);

        androidIncludeLdpiTvdpi = virtualinvoke $r79.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r80 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("androidMipmapInsteadOfDrawable");

        $r81 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.androidldpi");

        $r82 = virtualinvoke $r80.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r81);

        mipmapInsteadOfDrawable = virtualinvoke $r82.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r83 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("iosCreateImagesetFolders");

        $r84 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.iosimageset");

        $r85 = virtualinvoke $r83.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r84);

        iosCreateImagesetFolders = virtualinvoke $r85.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r86 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("skipUpscaling");

        $r87 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.skipupscaling");

        $r88 = virtualinvoke $r86.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r87);

        skipUpscaling = virtualinvoke $r88.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r89 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("verbose");

        $r90 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.verbose");

        $r91 = virtualinvoke $r89.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r90);

        verboseLog = virtualinvoke $r91.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r92 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("haltOnError");

        $r93 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.halterror");

        $r94 = virtualinvoke $r92.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r93);

        haltOnError = virtualinvoke $r94.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r95 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("antiAliasing");

        $r96 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.antialiasing");

        $r97 = virtualinvoke $r95.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r96);

        antiAliasing = virtualinvoke $r97.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r98 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("postProcessorPngCrush");

        $r99 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.pngcrush");

        $r100 = virtualinvoke $r98.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r99);

        enablePngCrush = virtualinvoke $r100.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r101 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("postProcessorWebp");

        $r102 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.webp");

        $r103 = virtualinvoke $r101.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r102);

        postWebpConvert = virtualinvoke $r103.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r104 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("keepOriginalPostProcessedFiles");

        $r105 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.keeporiginal");

        $r106 = virtualinvoke $r104.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r105);

        keepUnPostProcessed = virtualinvoke $r106.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r107 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("scaleIsHeightDp");

        $r108 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.dpIsHeight");

        $r109 = virtualinvoke $r107.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r108);

        dpScaleIsHeight = virtualinvoke $r109.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r110 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("dryRun");

        $r111 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.dryrun");

        $r112 = virtualinvoke $r110.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r111);

        dryRun = virtualinvoke $r112.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r113 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("postProcessorMozJpeg");

        $r114 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.mozjpeg");

        $r115 = virtualinvoke $r113.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r114);

        enableMozJpeg = virtualinvoke $r115.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r116 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("clean");

        $r117 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.clean");

        $r118 = virtualinvoke $r116.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r117);

        cleanBeforeConvert = virtualinvoke $r118.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r119 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("h");

        $r120 = virtualinvoke $r119.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder longOpt(java.lang.String)>("help");

        $r121 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.help");

        $r122 = virtualinvoke $r120.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r121);

        help = virtualinvoke $r122.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r123 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("v");

        $r124 = virtualinvoke $r123.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder longOpt(java.lang.String)>("version");

        $r125 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.version");

        $r126 = virtualinvoke $r124.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r125);

        version = virtualinvoke $r126.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r127 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder(java.lang.String)>("gui");

        $r128 = virtualinvoke bundle.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("arg.descr.cmd.gui");

        $r129 = virtualinvoke $r127.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>($r128);

        gui = virtualinvoke $r129.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>();

        $r130 = new org.apache.commons.cli.OptionGroup;

        specialinvoke $r130.<org.apache.commons.cli.OptionGroup: void <init>()>();

        mainArgs = $r130;

        $r131 = virtualinvoke mainArgs.<org.apache.commons.cli.OptionGroup: org.apache.commons.cli.OptionGroup addOption(org.apache.commons.cli.Option)>(srcOpt);

        $r132 = virtualinvoke $r131.<org.apache.commons.cli.OptionGroup: org.apache.commons.cli.OptionGroup addOption(org.apache.commons.cli.Option)>(help);

        $r133 = virtualinvoke $r132.<org.apache.commons.cli.OptionGroup: org.apache.commons.cli.OptionGroup addOption(org.apache.commons.cli.Option)>(version);

        virtualinvoke $r133.<org.apache.commons.cli.OptionGroup: org.apache.commons.cli.OptionGroup addOption(org.apache.commons.cli.Option)>(gui);

        virtualinvoke mainArgs.<org.apache.commons.cli.OptionGroup: void setRequired(boolean)>(1);

        $r135 = virtualinvoke options.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(srcScaleOpt);

        virtualinvoke $r135.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(dstOpt);

        $r137 = virtualinvoke options.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(platform);

        $r138 = virtualinvoke $r137.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(compression);

        $r139 = virtualinvoke $r138.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(compressionQuality);

        $r140 = virtualinvoke $r139.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(threadCount);

        $r141 = virtualinvoke $r140.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(roundingHandler);

        $r142 = virtualinvoke $r141.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(upScalingAlgo);

        virtualinvoke $r142.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(downScalingAlgo);

        $r144 = virtualinvoke options.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(skipExistingFiles);

        $r145 = virtualinvoke $r144.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(skipUpscaling);

        $r146 = virtualinvoke $r145.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(androidIncludeLdpiTvdpi);

        $r147 = virtualinvoke $r146.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(verboseLog);

        $r148 = virtualinvoke $r147.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(antiAliasing);

        $r149 = virtualinvoke $r148.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(dryRun);

        $r150 = virtualinvoke $r149.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(haltOnError);

        $r151 = virtualinvoke $r150.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(mipmapInsteadOfDrawable);

        $r152 = virtualinvoke $r151.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(enablePngCrush);

        $r153 = virtualinvoke $r152.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(postWebpConvert);

        $r154 = virtualinvoke $r153.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(dpScaleIsHeight);

        $r155 = virtualinvoke $r154.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(enableMozJpeg);

        $r156 = virtualinvoke $r155.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(keepUnPostProcessed);

        $r157 = virtualinvoke $r156.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(iosCreateImagesetFolders);

        virtualinvoke $r157.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>(cleanBeforeConvert);

        virtualinvoke options.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOptionGroup(org.apache.commons.cli.OptionGroup)>(mainArgs);

        return options;
    }


