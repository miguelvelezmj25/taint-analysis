    void <init>(berkeley.com.sleepycat.je.evictor.Evictor)
    {
        berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask this;
        berkeley.com.sleepycat.je.evictor.Evictor evictor;

        this := @this: berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask;

        evictor := @parameter0: berkeley.com.sleepycat.je.evictor.Evictor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: berkeley.com.sleepycat.je.evictor.Evictor evictor> = evictor;

        this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: boolean backgroundIO> = 1;

        return;
    }

    public void run()
    {
        berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask this;
        berkeley.com.sleepycat.je.evictor.Evictor$EvictionSource $r0;
        java.lang.Throwable l1, $r6;
        berkeley.com.sleepycat.je.evictor.Evictor $r1, $r3, $r4, $r7;
        java.util.concurrent.atomic.AtomicInteger $r2, $r5, $r8;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask;

        $r1 = this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: berkeley.com.sleepycat.je.evictor.Evictor evictor>;

        $r2 = staticinvoke <berkeley.com.sleepycat.je.evictor.Evictor: java.util.concurrent.atomic.AtomicInteger access$200(berkeley.com.sleepycat.je.evictor.Evictor)>($r1);

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label1:
        $r3 = this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: berkeley.com.sleepycat.je.evictor.Evictor evictor>;

        $r0 = <berkeley.com.sleepycat.je.evictor.Evictor$EvictionSource: berkeley.com.sleepycat.je.evictor.Evictor$EvictionSource EVICTORTHREAD>;

        $z0 = this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: boolean backgroundIO>;

        virtualinvoke $r3.<berkeley.com.sleepycat.je.evictor.Evictor: void doEvict(berkeley.com.sleepycat.je.evictor.Evictor$EvictionSource,boolean)>($r0, $z0);

     label2:
        $r4 = this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: berkeley.com.sleepycat.je.evictor.Evictor evictor>;

        $r5 = staticinvoke <berkeley.com.sleepycat.je.evictor.Evictor: java.util.concurrent.atomic.AtomicInteger access$200(berkeley.com.sleepycat.je.evictor.Evictor)>($r4);

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        goto label4;

     label3:
        $r6 := @caughtexception;

        l1 = $r6;

        $r7 = this.<berkeley.com.sleepycat.je.evictor.Evictor$BackgroundEvictTask: berkeley.com.sleepycat.je.evictor.Evictor evictor>;

        $r8 = staticinvoke <berkeley.com.sleepycat.je.evictor.Evictor: java.util.concurrent.atomic.AtomicInteger access$200(berkeley.com.sleepycat.je.evictor.Evictor)>($r7);

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        throw l1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }


