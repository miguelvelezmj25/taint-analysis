    void <init>(com.sleepycat.je.Cursor, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.Cursor$2 this;
        com.sleepycat.je.Cursor this$0;
        com.sleepycat.je.DatabaseEntry l2;

        this := @this: com.sleepycat.je.Cursor$2;

        this$0 := @parameter0: com.sleepycat.je.Cursor;

        l2 := @parameter1: com.sleepycat.je.DatabaseEntry;

        this.<com.sleepycat.je.Cursor$2: com.sleepycat.je.Cursor this$0> = this$0;

        this.<com.sleepycat.je.Cursor$2: com.sleepycat.je.DatabaseEntry val$key2> = l2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean inBounds(byte[])
    {
        com.sleepycat.je.Cursor$2 this;
        byte[] checkKey, $r1;
        com.sleepycat.je.DatabaseEntry $r0, $r2, $r3;
        int $i0, $i1, $i2;
        com.sleepycat.je.Cursor $r4;
        com.sleepycat.je.dbi.DatabaseImpl $r5;
        java.util.Comparator $r6;
        boolean $z0;

        this := @this: com.sleepycat.je.Cursor$2;

        checkKey := @parameter0: byte[];

        $r0 = this.<com.sleepycat.je.Cursor$2: com.sleepycat.je.DatabaseEntry val$key2>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $r2 = this.<com.sleepycat.je.Cursor$2: com.sleepycat.je.DatabaseEntry val$key2>;

        $i0 = virtualinvoke $r2.<com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $r3 = this.<com.sleepycat.je.Cursor$2: com.sleepycat.je.DatabaseEntry val$key2>;

        $i1 = virtualinvoke $r3.<com.sleepycat.je.DatabaseEntry: int getSize()>();

        $r4 = this.<com.sleepycat.je.Cursor$2: com.sleepycat.je.Cursor this$0>;

        $r5 = staticinvoke <com.sleepycat.je.Cursor: com.sleepycat.je.dbi.DatabaseImpl access$000(com.sleepycat.je.Cursor)>($r4);

        $r6 = virtualinvoke $r5.<com.sleepycat.je.dbi.DatabaseImpl: java.util.Comparator getBtreeComparator()>();

        $i2 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(checkKey, $r1, $i0, $i1, $r6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }


