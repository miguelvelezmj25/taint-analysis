    public final long readSortedPackedLong()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int len, $i0, $i1, $i2, $i3;
        long val;
        byte[] $r0, $r1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $r0 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i0 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadSortedLongLength(byte[],int)>($r0, $i0);

        $r1 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i1 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        val = staticinvoke <com.sleepycat.util.PackedInteger: long readSortedLong(byte[],int)>($r1, $i1);

        $i2 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i3 = $i2 + len;

        this.<com.sleepycat.bind.tuple.TupleInput: int off> = $i3;

        return val;
    }

    public void <init>(byte[], int, int)
    {
        com.sleepycat.bind.tuple.TupleInput this;
        byte[] buffer;
        int offset, length;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        buffer := @parameter0: byte[];

        offset := @parameter1: int;

        length := @parameter2: int;

        specialinvoke this.<com.sleepycat.util.FastInputStream: void <init>(byte[],int,int)>(buffer, offset, length);

        return;
    }

    public final long readPackedLong()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int len, $i0, $i1, $i2, $i3;
        long val;
        byte[] $r0, $r1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $r0 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i0 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadLongLength(byte[],int)>($r0, $i0);

        $r1 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i1 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        val = staticinvoke <com.sleepycat.util.PackedInteger: long readLong(byte[],int)>($r1, $i1);

        $i2 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i3 = $i2 + len;

        this.<com.sleepycat.bind.tuple.TupleInput: int off> = $i3;

        return val;
    }

    public void <init>(com.sleepycat.bind.tuple.TupleOutput)
    {
        com.sleepycat.bind.tuple.TupleInput this;
        com.sleepycat.bind.tuple.TupleOutput output;
        byte[] $r0;
        int $i0, $i1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        output := @parameter0: com.sleepycat.bind.tuple.TupleOutput;

        $r0 = virtualinvoke output.<com.sleepycat.bind.tuple.TupleOutput: byte[] getBufferBytes()>();

        $i0 = 0;

        $i1 = virtualinvoke output.<com.sleepycat.bind.tuple.TupleOutput: int getBufferLength()>();

        specialinvoke this.<com.sleepycat.util.FastInputStream: void <init>(byte[],int,int)>($r0, 0, $i1);

        return;
    }

    public final int readPackedInt()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int len, val, $i0, $i1, $i2, $i3;
        byte[] $r0, $r1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $r0 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i0 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>($r0, $i0);

        $r1 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i1 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        val = staticinvoke <com.sleepycat.util.PackedInteger: int readInt(byte[],int)>($r1, $i1);

        $i2 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i3 = $i2 + len;

        this.<com.sleepycat.bind.tuple.TupleInput: int off> = $i3;

        return val;
    }

    public final int getStringByteLength() throws java.lang.IndexOutOfBoundsException, java.lang.IllegalArgumentException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8;
        byte[] $r0, $r1, $r2;
        byte $b2, $b5;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int available()>();

        if $i0 < 2 goto label1;

        $r0 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i1 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $b2 = $r0[$i1];

        if $b2 != -1 goto label1;

        $r1 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i3 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i4 = $i3 + 1;

        $b5 = $r1[$i4];

        if $b5 != 0 goto label1;

        return 2;

     label1:
        $r2 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i6 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i7 = staticinvoke <com.sleepycat.util.UtfOps: int getZeroTerminatedByteLength(byte[],int)>($r2, $i6);

        $i8 = $i7 + 1;

        return $i8;
    }

    public final java.lang.String readString() throws java.lang.IndexOutOfBoundsException, java.lang.IllegalArgumentException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        byte[] myBuf;
        int myOff, byteLen, $i0, $i2, $i5;
        byte $b1, $b3;
        long $l6;
        java.lang.String $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        myBuf = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        myOff = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int available()>();

        if $i0 < 2 goto label1;

        $b1 = myBuf[myOff];

        if $b1 != -1 goto label1;

        $i2 = myOff + 1;

        $b3 = myBuf[$i2];

        if $b3 != 0 goto label1;

        virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: long skip(long)>(2L);

        return null;

     label1:
        byteLen = staticinvoke <com.sleepycat.util.UtfOps: int getZeroTerminatedByteLength(byte[],int)>(myBuf, myOff);

        $i5 = byteLen + 1;

        $l6 = (long) $i5;

        virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: long skip(long)>($l6);

        $r0 = staticinvoke <com.sleepycat.util.UtfOps: java.lang.String bytesToString(byte[],int,int)>(myBuf, myOff, byteLen);

        return $r0;
    }

    public final long readLong() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        long $l0, $l1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $l0 = specialinvoke this.<com.sleepycat.bind.tuple.TupleInput: long readUnsignedLong()>();

        $l1 = $l0 ^ -9223372036854775808L;

        return $l1;
    }

    private final long readUnsignedLong() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        long c1, c2, c3, c4, c5, c6, c7, c8, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        byte $b15;
        java.lang.IndexOutOfBoundsException $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c1 = (long) $i0;

        $i1 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c2 = (long) $i1;

        $i2 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c3 = (long) $i2;

        $i3 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c4 = (long) $i3;

        $i4 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c5 = (long) $i4;

        $i5 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c6 = (long) $i5;

        $i6 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c7 = (long) $i6;

        $i7 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c8 = (long) $i7;

        $l8 = c1 | c2;

        $l9 = $l8 | c3;

        $l10 = $l9 | c4;

        $l11 = $l10 | c5;

        $l12 = $l11 | c6;

        $l13 = $l12 | c7;

        $l14 = $l13 | c8;

        $b15 = $l14 cmp 0L;

        if $b15 >= 0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label1:
        $l16 = c1 << 56;

        $l17 = c2 << 48;

        $l18 = $l16 | $l17;

        $l19 = c3 << 40;

        $l20 = $l18 | $l19;

        $l21 = c4 << 32;

        $l22 = $l20 | $l21;

        $l23 = c5 << 24;

        $l24 = $l22 | $l23;

        $l25 = c6 << 16;

        $l26 = $l24 | $l25;

        $l27 = c7 << 8;

        $l28 = $l26 | $l27;

        $l29 = $l28 | c8;

        return $l29;
    }

    public final java.math.BigDecimal readSortedBigDecimal()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        byte sign;
        int exponent, $i0;
        java.math.BigDecimal normalizedVal, $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        sign = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: byte readByte()>();

        exponent = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readSortedPackedInt()>();

        normalizedVal = specialinvoke this.<com.sleepycat.bind.tuple.TupleInput: java.math.BigDecimal readSortedNormalizedBigDecimal()>();

        $i0 = exponent * sign;

        $r0 = virtualinvoke normalizedVal.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>($i0);

        return $r0;
    }

    public final byte readByte() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int $i0, $i1;
        byte $b2;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readUnsignedByte()>();

        $i1 = $i0 ^ 128;

        $b2 = (byte) $i1;

        return $b2;
    }

    public final int readSortedPackedInt()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int len, val, $i0, $i1, $i2, $i3;
        byte[] $r0, $r1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $r0 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i0 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        len = staticinvoke <com.sleepycat.util.PackedInteger: int getReadSortedIntLength(byte[],int)>($r0, $i0);

        $r1 = this.<com.sleepycat.bind.tuple.TupleInput: byte[] buf>;

        $i1 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        val = staticinvoke <com.sleepycat.util.PackedInteger: int readSortedInt(byte[],int)>($r1, $i1);

        $i2 = this.<com.sleepycat.bind.tuple.TupleInput: int off>;

        $i3 = $i2 + len;

        this.<com.sleepycat.bind.tuple.TupleInput: int off> = $i3;

        return val;
    }

    private java.math.BigDecimal readSortedNormalizedBigDecimal()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        java.lang.StringBuilder valStr, $r0;
        byte sign, $b0;
        java.lang.String groupDigits, $r4;
        int insertLen, scale, subVal#6, $i1, subVal#15, $i2, $i3, $i4, i#27, $i5;
        java.math.BigInteger $r3, digitsVal#42;
        java.math.BigDecimal $r5, $r6;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(32);

        valStr = $r0;

        subVal#6 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readSortedPackedInt()>();

        if subVal#6 >= 0 goto label1;

        $b0 = -1;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        sign = $b0;

     label3:
        if subVal#6 == -1 goto label8;

        if subVal#6 >= 0 goto label4;

        $i1 = subVal#6 + 1;

        goto label5;

     label4:
        $i1 = subVal#6;

     label5:
        subVal#15 = $i1;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>(subVal#15);

        groupDigits = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $i3 = virtualinvoke groupDigits.<java.lang.String: int length()>();

        if $i3 >= 9 goto label7;

        $i4 = virtualinvoke groupDigits.<java.lang.String: int length()>();

        insertLen = 9 - $i4;

        i#27 = 0;

     label6:
        if i#27 >= insertLen goto label7;

        virtualinvoke valStr.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        i#27 = i#27 + 1;

        goto label6;

     label7:
        virtualinvoke valStr.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupDigits);

        subVal#6 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readSortedPackedInt()>();

        goto label3;

     label8:
        $r3 = new java.math.BigInteger;

        $r4 = virtualinvoke valStr.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.math.BigInteger: void <init>(java.lang.String)>($r4);

        digitsVal#42 = $r3;

        if sign >= 0 goto label9;

        digitsVal#42 = virtualinvoke digitsVal#42.<java.math.BigInteger: java.math.BigInteger negate()>();

     label9:
        $i5 = virtualinvoke valStr.<java.lang.StringBuilder: int length()>();

        scale = $i5 - 1;

        $r5 = new java.math.BigDecimal;

        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>(digitsVal#42, scale);

        $r6 = virtualinvoke $r5.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();

        return $r6;
    }

    public final int readUnsignedByte() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int c;
        java.lang.IndexOutOfBoundsException $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        c = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        if c >= 0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label1:
        return c;
    }

    public final java.math.BigInteger readBigInteger()
    {
        com.sleepycat.bind.tuple.TupleInput this;
        byte[] a;
        short len#3;
        byte $b0;
        int $i1, $i2;
        java.math.BigInteger $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        len#3 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: short readShort()>();

        if len#3 >= 0 goto label1;

        len#3 = neg len#3;

     label1:
        a = newarray (byte)[len#3];

        $b0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: byte readByte()>();

        a[0] = $b0;

        $i1 = lengthof a;

        $i2 = $i1 - 1;

        virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast(byte[],int,int)>(a, 1, $i2);

        $r0 = new java.math.BigInteger;

        specialinvoke $r0.<java.math.BigInteger: void <init>(byte[])>(a);

        return $r0;
    }

    public final short readShort() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int $i0, $i1;
        short $s2;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readUnsignedShort()>();

        $i1 = $i0 ^ 32768;

        $s2 = (short) $i1;

        return $s2;
    }

    public final int readUnsignedShort() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int c1, c2, $i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        c1 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c2 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        $i0 = c1 | c2;

        if $i0 >= 0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label1:
        $i1 = c1 << 8;

        $i2 = $i1 | c2;

        return $i2;
    }

    public final char readChar() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int $i0;
        char $c1;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readUnsignedShort()>();

        $c1 = (char) $i0;

        return $c1;
    }

    public final double readSortedDouble() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        long val#3, $l2, val#9;
        byte $b1;
        double $d0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        val#3 = specialinvoke this.<com.sleepycat.bind.tuple.TupleInput: long readUnsignedLong()>();

        $b1 = val#3 cmp 0L;

        if $b1 >= 0 goto label1;

        $l2 = -9223372036854775808L;

        goto label2;

     label1:
        $l2 = -1L;

     label2:
        val#9 = val#3 ^ $l2;

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(val#9);

        return $d0;
    }

    public final float readSortedFloat() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        long $l0;
        int val#4, $i2, val#9;
        float $f0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $l0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: long readUnsignedInt()>();

        val#4 = (int) $l0;

        if val#4 >= 0 goto label1;

        $i2 = -2147483648;

        goto label2;

     label1:
        $i2 = -1;

     label2:
        val#9 = val#4 ^ $i2;

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(val#9);

        return $f0;
    }

    public final long readUnsignedInt() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        long c1, c2, c3, c4, $l4, $l5, $l6, $l8, $l9, $l10, $l11, $l12, $l13;
        int $i0, $i1, $i2, $i3;
        byte $b7;
        java.lang.IndexOutOfBoundsException $r0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $i0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c1 = (long) $i0;

        $i1 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c2 = (long) $i1;

        $i2 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c3 = (long) $i2;

        $i3 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        c4 = (long) $i3;

        $l4 = c1 | c2;

        $l5 = $l4 | c3;

        $l6 = $l5 | c4;

        $b7 = $l6 cmp 0L;

        if $b7 >= 0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label1:
        $l8 = c1 << 24;

        $l9 = c2 << 16;

        $l10 = $l8 | $l9;

        $l11 = c3 << 8;

        $l12 = $l10 | $l11;

        $l13 = $l12 | c4;

        return $l13;
    }

    public final int readInt() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        long $l0, $l1;
        int $i2;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        $l0 = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: long readUnsignedInt()>();

        $l1 = $l0 ^ -2147483648L;

        $i2 = (int) $l1;

        return $i2;
    }

    public final boolean readBoolean() throws java.lang.IndexOutOfBoundsException
    {
        com.sleepycat.bind.tuple.TupleInput this;
        int c;
        java.lang.IndexOutOfBoundsException $r0;
        boolean $z0;

        this := @this: com.sleepycat.bind.tuple.TupleInput;

        c = virtualinvoke this.<com.sleepycat.bind.tuple.TupleInput: int readFast()>();

        if c >= 0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label1:
        if c == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }


