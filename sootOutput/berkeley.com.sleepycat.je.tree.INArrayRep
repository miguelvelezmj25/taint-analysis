    public void <init>()
    {
        berkeley.com.sleepycat.je.tree.INArrayRep this;

        this := @this: berkeley.com.sleepycat.je.tree.INArrayRep;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    final void updateCacheStats(boolean, berkeley.com.sleepycat.je.tree.IN)
    {
        berkeley.com.sleepycat.je.tree.INArrayRep this;
        boolean increment, $z0;
        berkeley.com.sleepycat.je.tree.IN parent;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0;
        berkeley.com.sleepycat.je.evictor.Evictor $r1;

        this := @this: berkeley.com.sleepycat.je.tree.INArrayRep;

        increment := @parameter0: boolean;

        parent := @parameter1: berkeley.com.sleepycat.je.tree.IN;

        $z0 = virtualinvoke parent.<berkeley.com.sleepycat.je.tree.IN: boolean getInListResident()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r0 = virtualinvoke parent.<berkeley.com.sleepycat.je.tree.IN: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.evictor.Evictor getEvictor()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.tree.INArrayRep: void updateCacheStats(boolean,berkeley.com.sleepycat.je.evictor.Evictor)>(increment, $r1);

        return;
    }

    final void noteRepChange(berkeley.com.sleepycat.je.tree.INArrayRep, berkeley.com.sleepycat.je.tree.IN)
    {
        berkeley.com.sleepycat.je.tree.INArrayRep this, newRep;
        berkeley.com.sleepycat.je.tree.IN parent;
        long $l0, $l1, $l2;

        this := @this: berkeley.com.sleepycat.je.tree.INArrayRep;

        newRep := @parameter0: berkeley.com.sleepycat.je.tree.INArrayRep;

        parent := @parameter1: berkeley.com.sleepycat.je.tree.IN;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(parent);

        if parent != null goto label1;

        return;

     label1:
        $l0 = virtualinvoke newRep.<berkeley.com.sleepycat.je.tree.INArrayRep: long calculateMemorySize()>();

        $l1 = virtualinvoke this.<berkeley.com.sleepycat.je.tree.INArrayRep: long calculateMemorySize()>();

        $l2 = $l0 - $l1;

        virtualinvoke parent.<berkeley.com.sleepycat.je.tree.IN: void updateMemorySize(long)>($l2);

        virtualinvoke this.<berkeley.com.sleepycat.je.tree.INArrayRep: void updateCacheStats(boolean,berkeley.com.sleepycat.je.tree.IN)>(0, parent);

        virtualinvoke newRep.<berkeley.com.sleepycat.je.tree.INArrayRep: void updateCacheStats(boolean,berkeley.com.sleepycat.je.tree.IN)>(1, parent);

        return;
    }


