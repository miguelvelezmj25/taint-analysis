    public void <init>(org.w3c.dom.Element, weka.core.pmml.FieldMetaInfo$Optype, java.util.ArrayList) throws java.lang.Exception
    {
        weka.core.pmml.Discretize this;
        org.w3c.dom.Element discretize, dbE;
        weka.core.pmml.FieldMetaInfo$Optype opType, $r9;
        java.util.ArrayList fieldDefs, $r0, $r10;
        org.w3c.dom.NodeList dbL;
        org.w3c.dom.Node dbN;
        weka.core.pmml.Discretize$DiscretizeBin db, $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, i#41, $i2;
        short $s3;

        this := @this: weka.core.pmml.Discretize;

        discretize := @parameter0: org.w3c.dom.Element;

        opType := @parameter1: weka.core.pmml.FieldMetaInfo$Optype;

        fieldDefs := @parameter2: java.util.ArrayList;

        specialinvoke this.<weka.core.pmml.Expression: void <init>(weka.core.pmml.FieldMetaInfo$Optype,java.util.ArrayList)>(opType, fieldDefs);

        this.<weka.core.pmml.Discretize: boolean m_mapMissingDefined> = 0;

        this.<weka.core.pmml.Discretize: boolean m_defaultValueDefined> = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<weka.core.pmml.Discretize: java.util.ArrayList m_bins> = $r0;

        $r1 = interfaceinvoke discretize.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("field");

        this.<weka.core.pmml.Discretize: java.lang.String m_fieldName> = $r1;

        $r2 = interfaceinvoke discretize.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("mapMissingTo");

        this.<weka.core.pmml.Discretize: java.lang.String m_mapMissingTo> = $r2;

        $r3 = this.<weka.core.pmml.Discretize: java.lang.String m_mapMissingTo>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label1;

        $r4 = this.<weka.core.pmml.Discretize: java.lang.String m_mapMissingTo>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label1;

        this.<weka.core.pmml.Discretize: boolean m_mapMissingDefined> = 1;

     label1:
        $r5 = interfaceinvoke discretize.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("defaultValue");

        this.<weka.core.pmml.Discretize: java.lang.String m_defaultValue> = $r5;

        $r6 = this.<weka.core.pmml.Discretize: java.lang.String m_defaultValue>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r6 == null goto label2;

        $r7 = this.<weka.core.pmml.Discretize: java.lang.String m_defaultValue>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label2;

        this.<weka.core.pmml.Discretize: boolean m_defaultValueDefined> = 1;

     label2:
        dbL = interfaceinvoke discretize.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("DiscretizeBin");

        i#41 = 0;

     label3:
        $i2 = interfaceinvoke dbL.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#41);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if i#41 >= $i2 goto label5;

        dbN = interfaceinvoke dbL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#41);

        $s3 = interfaceinvoke dbN.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s3);

        if $s3 != 1 goto label4;

        dbE = (org.w3c.dom.Element) dbN;

        $r8 = new weka.core.pmml.Discretize$DiscretizeBin;

        $r9 = this.<weka.core.pmml.Discretize: weka.core.pmml.FieldMetaInfo$Optype m_opType>;

        specialinvoke $r8.<weka.core.pmml.Discretize$DiscretizeBin: void <init>(weka.core.pmml.Discretize,org.w3c.dom.Element,weka.core.pmml.FieldMetaInfo$Optype)>(this, dbE, $r9);

        db = $r8;

        $r10 = this.<weka.core.pmml.Discretize: java.util.ArrayList m_bins>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(db);

     label4:
        i#41 = i#41 + 1;

        goto label3;

     label5:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fieldDefs);

        if fieldDefs == null goto label6;

        specialinvoke this.<weka.core.pmml.Discretize: void setUpField()>();

     label6:
        return;
    }

    private void setUpField() throws java.lang.Exception
    {
        weka.core.pmml.Discretize this;
        weka.core.Attribute field, $r24, tempAtt#84, $r38;
        java.util.ArrayList values, $r0, $r9, $r22, $r31, $r36;
        java.lang.String $r1, $r5, $r8, $r14, $r17, $r27, $r30, $r33, $r34, $r35, $r37, $r40, $r43;
        int $i0, $i1, $i2, i#115, $i3;
        java.lang.Exception $r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r12, $r13, $r15, $r16, $r26, $r28, $r29, $r39, $r41, $r42;
        java.lang.Object $r10, $r23, $r32;
        boolean $z0, categorical#47, $z1, $z2, $z3, $z4, $z5;
        weka.core.pmml.FieldMetaInfo$Optype $r18, $r19, $r20, $r21;
        java.util.Iterator l3#57, l3#89;
        weka.core.pmml.Discretize$DiscretizeBin d#63, d#95;
        double $d0;

        this := @this: weka.core.pmml.Discretize;

        this.<weka.core.pmml.Discretize: int m_fieldIndex> = -1;

        $r0 = this.<weka.core.pmml.Discretize: java.util.ArrayList m_fieldDefs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label02;

        $r1 = this.<weka.core.pmml.Discretize: java.lang.String m_fieldName>;

        $i0 = virtualinvoke this.<weka.core.pmml.Discretize: int getFieldDefIndex(java.lang.String)>($r1);

        this.<weka.core.pmml.Discretize: int m_fieldIndex> = $i0;

        $i1 = this.<weka.core.pmml.Discretize: int m_fieldIndex>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 >= 0 goto label01;

        $r2 = new java.lang.Exception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Discretize] Can\'t find field ");

        $r5 = this.<weka.core.pmml.Discretize: java.lang.String m_fieldName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the supplied field definitions.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>($r8);

        throw $r2;

     label01:
        $r9 = this.<weka.core.pmml.Discretize: java.util.ArrayList m_fieldDefs>;

        $i2 = this.<weka.core.pmml.Discretize: int m_fieldIndex>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        field = (weka.core.Attribute) $r10;

        $z0 = virtualinvoke field.<weka.core.Attribute: boolean isNumeric()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label02;

        $r11 = new java.lang.Exception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Discretize] reference field ");

        $r14 = this.<weka.core.pmml.Discretize: java.lang.String m_fieldName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be continuous.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r17);

        throw $r11;

     label02:
        categorical#47 = 0;

        $r18 = this.<weka.core.pmml.Discretize: weka.core.pmml.FieldMetaInfo$Optype m_opType>;

        $r19 = <weka.core.pmml.FieldMetaInfo$Optype: weka.core.pmml.FieldMetaInfo$Optype CONTINUOUS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r18);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r19);

        if $r18 == $r19 goto label03;

        $r20 = this.<weka.core.pmml.Discretize: weka.core.pmml.FieldMetaInfo$Optype m_opType>;

        $r21 = <weka.core.pmml.FieldMetaInfo$Optype: weka.core.pmml.FieldMetaInfo$Optype ORDINAL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r21);

        if $r20 != $r21 goto label07;

     label03:
        $r22 = this.<weka.core.pmml.Discretize: java.util.ArrayList m_bins>;

        l3#57 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke l3#57.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label06;

        $r23 = interfaceinvoke l3#57.<java.util.Iterator: java.lang.Object next()>();

        d#63 = (weka.core.pmml.Discretize$DiscretizeBin) $r23;

        $d0 = virtualinvoke d#63.<weka.core.pmml.Discretize$DiscretizeBin: double getBinValueNumeric()>();

        $z2 = staticinvoke <weka.core.Utils: boolean isMissingValue(double)>($d0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label05;

        categorical#47 = 1;

        goto label06;

     label05:
        goto label04;

     label06:
        goto label08;

     label07:
        categorical#47 = 1;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(categorical#47);

        if categorical#47 == 0 goto label09;

        $r24 = new weka.core.Attribute;

        specialinvoke $r24.<weka.core.Attribute: void <init>(java.lang.String,java.util.List)>("temp", null);

        goto label10;

     label09:
        $r24 = new weka.core.Attribute;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = this.<weka.core.pmml.Discretize: java.lang.String m_fieldName>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_discretized(optype=continuous)");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<weka.core.Attribute: void <init>(java.lang.String)>($r30);

     label10:
        tempAtt#84 = $r24;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(categorical#47);

        if categorical#47 == 0 goto label17;

        $r31 = this.<weka.core.pmml.Discretize: java.util.ArrayList m_bins>;

        l3#89 = virtualinvoke $r31.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke l3#89.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label12;

        $r32 = interfaceinvoke l3#89.<java.util.Iterator: java.lang.Object next()>();

        d#95 = (weka.core.pmml.Discretize$DiscretizeBin) $r32;

        $r33 = virtualinvoke d#95.<weka.core.pmml.Discretize$DiscretizeBin: java.lang.String getBinValue()>();

        virtualinvoke tempAtt#84.<weka.core.Attribute: int addStringValue(java.lang.String)>($r33);

        goto label11;

     label12:
        $z4 = this.<weka.core.pmml.Discretize: boolean m_defaultValueDefined>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label13;

        $r34 = this.<weka.core.pmml.Discretize: java.lang.String m_defaultValue>;

        virtualinvoke tempAtt#84.<weka.core.Attribute: int addStringValue(java.lang.String)>($r34);

     label13:
        $z5 = this.<weka.core.pmml.Discretize: boolean m_mapMissingDefined>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label14;

        $r35 = this.<weka.core.pmml.Discretize: java.lang.String m_mapMissingTo>;

        virtualinvoke tempAtt#84.<weka.core.Attribute: int addStringValue(java.lang.String)>($r35);

     label14:
        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>()>();

        values = $r36;

        i#115 = 0;

     label15:
        $i3 = virtualinvoke tempAtt#84.<weka.core.Attribute: int numValues()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#115);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if i#115 >= $i3 goto label16;

        $r37 = virtualinvoke tempAtt#84.<weka.core.Attribute: java.lang.String value(int)>(i#115);

        virtualinvoke values.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

        i#115 = i#115 + 1;

        goto label15;

     label16:
        $r38 = new weka.core.Attribute;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = this.<weka.core.pmml.Discretize: java.lang.String m_fieldName>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_discretized");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<weka.core.Attribute: void <init>(java.lang.String,java.util.List)>($r43, values);

        this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef> = $r38;

        goto label18;

     label17:
        this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef> = tempAtt#84;

     label18:
        return;
    }

    public double getResult(double[]) throws java.lang.Exception
    {
        weka.core.pmml.Discretize this;
        double[] incoming;
        double value, result#2;
        java.lang.NumberFormatException ex, ex, $r4, $r15;
        java.util.Iterator l7;
        weka.core.pmml.Discretize$DiscretizeBin b;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, found#28, $z3, $z4, $z5, $z6, $z7;
        weka.core.Attribute $r0, $r1, $r8, $r9, $r11, $r12;
        java.lang.String $r2, $r3, $r10, $r13, $r14;
        java.lang.Exception $r5, $r16;
        java.util.ArrayList $r6;
        java.lang.Object $r7;

        this := @this: weka.core.pmml.Discretize;

        incoming := @parameter0: double[];

        result#2 = staticinvoke <weka.core.Utils: double missingValue()>();

        $i0 = this.<weka.core.pmml.Discretize: int m_fieldIndex>;

        value = incoming[$i0];

        $z0 = staticinvoke <weka.core.Utils: boolean isMissingValue(double)>(value);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label04;

        $z1 = this.<weka.core.pmml.Discretize: boolean m_mapMissingDefined>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label12;

        $r0 = this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef>;

        $z2 = virtualinvoke $r0.<weka.core.Attribute: boolean isNominal()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label01;

        $r1 = this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef>;

        $r2 = this.<weka.core.pmml.Discretize: java.lang.String m_mapMissingTo>;

        $i1 = virtualinvoke $r1.<weka.core.Attribute: int indexOfValue(java.lang.String)>($r2);

        result#2 = (double) $i1;

        goto label12;

     label01:
        $r3 = this.<weka.core.pmml.Discretize: java.lang.String m_mapMissingTo>;

        result#2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label02:
        goto label12;

     label03:
        $r4 := @caughtexception;

        ex = $r4;

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>("[Discretize] Optype is continuous but value of mapMissingTo can not be parsed as a number!");

        throw $r5;

     label04:
        found#28 = 0;

        $r6 = this.<weka.core.pmml.Discretize: java.util.ArrayList m_bins>;

        l7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label08;

        $r7 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        b = (weka.core.pmml.Discretize$DiscretizeBin) $r7;

        $z4 = virtualinvoke b.<weka.core.pmml.Discretize$DiscretizeBin: boolean containsValue(double)>(value);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label07;

        found#28 = 1;

        $r8 = this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef>;

        $z5 = virtualinvoke $r8.<weka.core.Attribute: boolean isNominal()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label06;

        $r9 = this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef>;

        $r10 = virtualinvoke b.<weka.core.pmml.Discretize$DiscretizeBin: java.lang.String getBinValue()>();

        $i2 = virtualinvoke $r9.<weka.core.Attribute: int indexOfValue(java.lang.String)>($r10);

        result#2 = (double) $i2;

        goto label08;

     label06:
        result#2 = virtualinvoke b.<weka.core.pmml.Discretize$DiscretizeBin: double getBinValueNumeric()>();

        goto label08;

     label07:
        goto label05;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(found#28);

        if found#28 != 0 goto label12;

        $z6 = this.<weka.core.pmml.Discretize: boolean m_defaultValueDefined>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label12;

        $r11 = this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef>;

        $z7 = virtualinvoke $r11.<weka.core.Attribute: boolean isNominal()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label09;

        $r12 = this.<weka.core.pmml.Discretize: weka.core.Attribute m_outputDef>;

        $r13 = this.<weka.core.pmml.Discretize: java.lang.String m_defaultValue>;

        $i3 = virtualinvoke $r12.<weka.core.Attribute: int indexOfValue(java.lang.String)>($r13);

        result#2 = (double) $i3;

        goto label12;

     label09:
        $r14 = this.<weka.core.pmml.Discretize: java.lang.String m_defaultValue>;

        result#2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;

        ex = $r15;

        $r16 = new java.lang.Exception;

        specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>("[Discretize] Optype is continuous but value of default value can not be parsed as a number!");

        throw $r16;

     label12:
        return result#2;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }


