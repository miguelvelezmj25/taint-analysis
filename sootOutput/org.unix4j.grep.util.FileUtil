    public static transient java.util.List expandFiles(java.io.File, java.lang.String[])
    {
        java.io.File currentDirectory, $r1;
        java.lang.String[] paths, l3;
        java.util.ArrayList expanded, $r0;
        int l4, $i0, l5#9;
        java.lang.String path;

        currentDirectory := @parameter0: java.io.File;

        paths := @parameter1: java.lang.String[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof paths;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        expanded = $r0;

        l3 = paths;

        l4 = lengthof l3;

        l5#9 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4);

        if l5#9 >= l4 goto label2;

        path = l3[l5#9];

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(path);

        staticinvoke <org.unix4j.grep.util.FileUtil: void addFileExpanded(java.io.File,java.io.File,java.util.List)>(currentDirectory, $r1, expanded);

        l5#9 = l5#9 + 1;

        goto label1;

     label2:
        return expanded;
    }

    static void <clinit>()
    {
        boolean $z0;
        java.lang.String $r0;

        $z0 = staticinvoke <org.unix4j.grep.util.FileUtil: boolean isWindows()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = "C:\\";

        goto label2;

     label1:
        $r0 = "/";

     label2:
        <org.unix4j.grep.util.FileUtil: java.lang.String ROOT> = $r0;

        return;
    }

    private static void addFileExpanded(java.io.File, java.io.File, java.util.List)
    {
        java.io.File currentDirectory, relFile, file#1, $r0, f#15, p#21, $r10, $r23;
        java.util.List expandedFiles;
        java.util.LinkedList parts, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9;
        java.lang.String $r1, $r2, $r4, $r6, $r9, $r12, $r22, $r24, $r32;
        java.lang.Object $r8, $r11;
        java.lang.IllegalArgumentException $r13, $r25;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r27, $r28, $r29, $r30, $r31;

        currentDirectory := @parameter0: java.io.File;

        file#1 := @parameter1: java.io.File;

        expandedFiles := @parameter2: java.util.List;

        $z0 = virtualinvoke file#1.<java.io.File: boolean isAbsolute()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        $r0 = new java.io.File;

        $r1 = virtualinvoke file#1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(currentDirectory, $r1);

        file#1 = $r0;

     label01:
        $r2 = virtualinvoke file#1.<java.io.File: java.lang.String getPath()>();

        $z1 = staticinvoke <org.unix4j.grep.util.FileUtil: boolean isWildcardFileName(java.lang.String)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label07;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        parts = $r3;

        f#15 = file#1;

     label02:
        $r4 = virtualinvoke f#15.<java.io.File: java.lang.String getName()>();

        interfaceinvoke parts.<java.util.List: void add(int,java.lang.Object)>(0, $r4);

        p#21 = f#15;

        f#15 = virtualinvoke f#15.<java.io.File: java.io.File getParentFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(f#15);

        if f#15 != null goto label02;

        $z2 = virtualinvoke p#21.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label03;

        interfaceinvoke parts.<java.util.List: java.lang.Object remove(int)>(0);

        goto label04;

     label03:
        $r6 = virtualinvoke p#21.<java.io.File: java.lang.String getPath()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("\\");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label04;

        interfaceinvoke parts.<java.util.List: java.lang.Object remove(int)>(0);

     label04:
        $z4 = interfaceinvoke parts.<java.util.List: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label05;

        $r8 = interfaceinvoke parts.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        $z5 = staticinvoke <org.unix4j.grep.util.FileUtil: boolean isWildcardFileName(java.lang.String)>($r9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label05;

        $r10 = new java.io.File;

        $r11 = interfaceinvoke parts.<java.util.List: java.lang.Object remove(int)>(0);

        $r12 = (java.lang.String) $r11;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(p#21, $r12);

        p#21 = $r10;

        goto label04;

     label05:
        $z6 = virtualinvoke p#21.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label06;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file not found: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file#1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [root=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p#21);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentDirectory=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(currentDirectory);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r13;

     label06:
        staticinvoke <org.unix4j.grep.util.FileUtil: void listFiles(java.io.File,java.util.List,java.util.List)>(p#21, parts, expandedFiles);

        goto label10;

     label07:
        $z7 = virtualinvoke file#1.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label08;

        interfaceinvoke expandedFiles.<java.util.List: boolean add(java.lang.Object)>(file#1);

        goto label10;

     label08:
        $r23 = new java.io.File;

        $r24 = virtualinvoke file#1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>(currentDirectory, $r24);

        relFile = $r23;

        $z9 = virtualinvoke relFile.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label09;

        interfaceinvoke expandedFiles.<java.util.List: boolean add(java.lang.Object)>(relFile);

        goto label10;

     label09:
        $r25 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file not found: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file#1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [currentDirectory=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(currentDirectory);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r25;

     label10:
        return;
    }

    private static boolean isWindows()
    {
        org.unix4j.grep.util.OS $r0, $r1;
        boolean $z0;

        $r1 = <org.unix4j.grep.util.OS: org.unix4j.grep.util.OS Windows>;

        $r0 = staticinvoke <org.unix4j.grep.util.OS: org.unix4j.grep.util.OS current()>();

        $z0 = virtualinvoke $r1.<org.unix4j.grep.util.OS: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    private static void listFiles(java.io.File, java.util.List, java.util.List)
    {
        java.io.File file, f;
        java.util.List parts, dest;
        java.lang.String part;
        java.io.FilenameFilter filter;
        java.io.File[] l5;
        int l6, l7#13;
        java.lang.Object $r0;
        boolean $z0, $z2;

        file := @parameter0: java.io.File;

        parts := @parameter1: java.util.List;

        dest := @parameter2: java.util.List;

        $r0 = interfaceinvoke parts.<java.util.List: java.lang.Object remove(int)>(0);

        part = (java.lang.String) $r0;

        filter = staticinvoke <org.unix4j.grep.util.FileUtil: java.io.FilenameFilter getFileNameFilter(java.lang.String)>(part);

        l5 = virtualinvoke file.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(filter);

        l6 = lengthof l5;

        l7#13 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l7#13 >= l6 goto label4;

        f = l5[l7#13];

        $z0 = interfaceinvoke parts.<java.util.List: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        interfaceinvoke dest.<java.util.List: boolean add(java.lang.Object)>(f);

        goto label3;

     label2:
        $z2 = virtualinvoke f.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        staticinvoke <org.unix4j.grep.util.FileUtil: void listFiles(java.io.File,java.util.List,java.util.List)>(f, parts, dest);

     label3:
        l7#13 = l7#13 + 1;

        goto label1;

     label4:
        interfaceinvoke parts.<java.util.List: void add(int,java.lang.Object)>(0, part);

        return;
    }

    public static boolean isWildcardFileName(java.lang.String)
    {
        java.lang.String name, $r0, $r1, unescaped#18, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        name := @parameter0: java.lang.String;

        $z0 = virtualinvoke name.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke name.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label7;

     label1:
        $z2 = staticinvoke <org.unix4j.grep.util.FileUtil: boolean isWindows()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label2;

        $r0 = virtualinvoke name.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%%", "%_");

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%*", "%_");

        unescaped#18 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%?", "%_");

        goto label3;

     label2:
        $r2 = virtualinvoke name.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\\", "\\_");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\*", "\\_");

        unescaped#18 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\?", "\\_");

     label3:
        $z3 = virtualinvoke unescaped#18.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke unescaped#18.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label5;

     label4:
        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;

     label7:
        return 0;
    }

    public static java.io.FilenameFilter getFileNameFilter(java.lang.String)
    {
        java.util.regex.Pattern pattern;
        java.lang.String fileName, name#1, name#9, $r0, $r1, name#20, $r2, $r3, name#31, $r4, $r5, name#42, name#47, name#52, $r6, $r7, name#63, $r8, $r9, name#74, $r10, $r11, name#85;
        boolean $z0, $z1;
        org.unix4j.grep.util.FileUtil$1 $r12;
        org.unix4j.grep.util.FileUtil$2 $r13;

        name#1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.unix4j.grep.util.FileUtil: boolean isWildcardFileName(java.lang.String)>(name#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <org.unix4j.grep.util.FileUtil: boolean isWindows()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        name#9 = virtualinvoke name#1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%%", "%_");

        $r0 = virtualinvoke name#9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%.", "%/");

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "\\.");

        name#20 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%/", "\\.");

        $r2 = virtualinvoke name#20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%*", "%/");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", ".*");

        name#31 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%/", "\\*");

        $r4 = virtualinvoke name#31.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%?", "%/");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("?", ".");

        name#42 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%/", "\\?");

        name#47 = virtualinvoke name#42.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%_", "%");

        goto label2;

     label1:
        name#52 = virtualinvoke name#1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\\", "\\_");

        $r6 = virtualinvoke name#52.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\.", "\\/");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "\\.");

        name#63 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\/", "\\.");

        $r8 = virtualinvoke name#63.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\*", "\\/");

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", ".*");

        name#74 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\/", "\\*");

        $r10 = virtualinvoke name#74.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\?", "\\/");

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("?", ".");

        name#85 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\/", "\\?");

        name#47 = virtualinvoke name#85.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\_", "\\\\");

     label2:
        pattern = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(name#47);

        $r12 = new org.unix4j.grep.util.FileUtil$1;

        specialinvoke $r12.<org.unix4j.grep.util.FileUtil$1: void <init>(java.util.regex.Pattern)>(pattern);

        return $r12;

     label3:
        fileName = name#1;

        $r13 = new org.unix4j.grep.util.FileUtil$2;

        specialinvoke $r13.<org.unix4j.grep.util.FileUtil$2: void <init>(java.lang.String)>(fileName);

        return $r13;
    }


