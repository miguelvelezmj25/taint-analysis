    public void <init>(java.util.Comparator)
    {
        berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator this;
        java.util.Comparator btreeComparator;

        this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator;

        btreeComparator := @parameter0: java.util.Comparator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator: java.util.Comparator btreeComparator> = btreeComparator;

        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator this;
        java.lang.Object l1, l2;
        byte[] $r0, $r1;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.lang.Object;

        $r0 = (byte[]) l1;

        $r1 = (byte[]) l2;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator: int compare(byte[],byte[])>($r0, $r1);

        return $i0;
    }

    public int compare(byte[], byte[])
    {
        berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator this;
        byte[] twoPartKey1, twoPartKey2;
        int 'cmp', $i0;
        java.util.Comparator $r0;

        this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator;

        twoPartKey1 := @parameter0: byte[];

        twoPartKey2 := @parameter1: byte[];

        $r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$NextNoDupComparator: java.util.Comparator btreeComparator>;

        'cmp' = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],java.util.Comparator)>(twoPartKey1, twoPartKey2, $r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>('cmp');

        if 'cmp' == 0 goto label1;

        $i0 = 'cmp';

        goto label2;

     label1:
        $i0 = 1;

     label2:
        return $i0;
    }


