    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/recovery/RollbackTracker";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker, berkeley.com.sleepycat.je.txn.RollbackEnd, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        berkeley.com.sleepycat.je.recovery.RollbackTracker tracker;
        berkeley.com.sleepycat.je.txn.RollbackEnd rollbackEnd;
        long rollbackEndLSN, $l0, $l1, $l2;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        tracker := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        rollbackEnd := @parameter1: berkeley.com.sleepycat.je.txn.RollbackEnd;

        rollbackEndLSN := @parameter2: long;

        $l0 = virtualinvoke rollbackEnd.<berkeley.com.sleepycat.je.txn.RollbackEnd: long getMatchpoint()>();

        $l1 = virtualinvoke rollbackEnd.<berkeley.com.sleepycat.je.txn.RollbackEnd: long getRollbackStart()>();

        $l2 = virtualinvoke tracker.<berkeley.com.sleepycat.je.recovery.RollbackTracker: long getCheckpointStart()>();

        specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker,long,long,long,long,java.util.Set)>(tracker, $l0, $l1, rollbackEndLSN, $l2, null);

        return;
    }

    private void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker, long, long, long, long, java.util.Set)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        berkeley.com.sleepycat.je.recovery.RollbackTracker tracker;
        long matchpointLSN, rollbackStartLSN, rollbackEndLSN, checkpointStart;
        java.util.Set activeTxnIds;
        boolean $z0;
        java.util.HashMap $r0;
        java.util.ArrayList $r1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        tracker := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        matchpointLSN := @parameter1: long;

        rollbackStartLSN := @parameter2: long;

        rollbackEndLSN := @parameter3: long;

        checkpointStart := @parameter4: long;

        activeTxnIds := @parameter5: java.util.Set;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild> = null;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker tracker> = tracker;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN> = matchpointLSN;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN> = rollbackStartLSN;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN> = rollbackEndLSN;

        $z0 = specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean calcBeforeCheckpoint(long)>(checkpointStart);

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean beforeCheckpointStart> = $z0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Map txnChainMap> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.List children> = $r1;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Set activeTxnIds> = activeTxnIds;

        return;
    }

    private boolean calcBeforeCheckpoint(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long checkpointStart, $l1, $l3;
        byte $b0, $b2;
        int $i4;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        checkpointStart := @parameter0: long;

        $b0 = checkpointStart cmp -1L;

        if $b0 == 0 goto label1;

        $l1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label1;

        $l3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $i4 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l3, checkpointStart);

        if $i4 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean makeNestedPeriod(berkeley.com.sleepycat.je.txn.RollbackEnd, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, target;
        berkeley.com.sleepycat.je.txn.RollbackEnd foundRBEnd;
        long foundLSN;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBEnd := @parameter0: berkeley.com.sleepycat.je.txn.RollbackEnd;

        foundLSN := @parameter1: long;

        target = virtualinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getNewPeriodTarget(berkeley.com.sleepycat.je.txn.RollbackEnd,long)>(foundRBEnd, foundLSN);

        if target == null goto label1;

        specialinvoke target.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void makeChild(berkeley.com.sleepycat.je.txn.RollbackEnd,long)>(foundRBEnd, foundLSN);

        return 1;

     label1:
        return 0;
    }

    berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getNewPeriodTarget(berkeley.com.sleepycat.je.txn.RollbackEnd, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, target, $r0, $r1;
        berkeley.com.sleepycat.je.txn.RollbackEnd foundRBEnd;
        long foundLSN;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBEnd := @parameter0: berkeley.com.sleepycat.je.txn.RollbackEnd;

        foundLSN := @parameter1: long;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        target = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getNewPeriodTarget(berkeley.com.sleepycat.je.txn.RollbackEnd,long)>(foundRBEnd, foundLSN);

        if target == null goto label1;

        return target;

     label1:
        $z0 = specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean contained(berkeley.com.sleepycat.je.txn.RollbackEnd,long)>(foundRBEnd, foundLSN);

        if $z0 == 0 goto label2;

        return this;

     label2:
        return null;
    }

    private boolean contained(berkeley.com.sleepycat.je.txn.RollbackEnd, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        berkeley.com.sleepycat.je.txn.RollbackEnd foundRBEnd;
        long foundLSN, $l0, $l2, $l4, $l5, $l7, $l8;
        int $i1, $i3, $i6, $i9;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12;
        java.lang.String $r2, $r6, $r11, $r13;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBEnd := @parameter0: berkeley.com.sleepycat.je.txn.RollbackEnd;

        foundLSN := @parameter1: long;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        $i1 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(foundLSN, $l0);

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        $l2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $i3 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(foundLSN, $l2);

        if $i3 < 0 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should not be two RollbackEnds in a row. New RollbackEnd at ");

        $r2 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(foundLSN);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(foundRBEnd);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void fail(java.lang.String)>($r6);

     label2:
        $l4 = virtualinvoke foundRBEnd.<berkeley.com.sleepycat.je.txn.RollbackEnd: long getMatchpoint()>();

        $l5 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        $i6 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l4, $l5);

        if $i6 < 0 goto label3;

        $l7 = virtualinvoke foundRBEnd.<berkeley.com.sleepycat.je.txn.RollbackEnd: long getRollbackStart()>();

        $l8 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $i9 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l7, $l8);

        if $i9 < 0 goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RollbackEnd intersects current rollback period ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(foundRBEnd);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r11 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(foundLSN);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void fail(java.lang.String)>($r13);

     label4:
        return 1;
    }

    void fail(java.lang.String)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        java.lang.String errorMessage, $r9;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r0;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r1;
        berkeley.com.sleepycat.je.recovery.RollbackTracker $r2, $r7;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        errorMessage := @parameter0: java.lang.String;

        $r0 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker tracker>;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImpl()>();

        $r1 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(errorMessage);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ntracker contents=");

        $r7 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker tracker>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r3, $r1, $r9);

        throw $r0;
    }

    private void makeChild(berkeley.com.sleepycat.je.txn.RollbackEnd, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, $r0, $r3;
        berkeley.com.sleepycat.je.txn.RollbackEnd foundRBEnd;
        long foundLSN;
        berkeley.com.sleepycat.je.recovery.RollbackTracker $r1;
        java.util.List $r2;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBEnd := @parameter0: berkeley.com.sleepycat.je.txn.RollbackEnd;

        foundLSN := @parameter1: long;

        $r0 = new berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker tracker>;

        specialinvoke $r0.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker,berkeley.com.sleepycat.je.txn.RollbackEnd,long)>($r1, foundRBEnd, foundLSN);

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild> = $r0;

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.List children>;

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker, berkeley.com.sleepycat.je.txn.RollbackStart, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        berkeley.com.sleepycat.je.recovery.RollbackTracker tracker;
        berkeley.com.sleepycat.je.txn.RollbackStart rollbackStart;
        long rollbackStartLSN, $l0, $l1;
        java.util.Set $r0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        tracker := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        rollbackStart := @parameter1: berkeley.com.sleepycat.je.txn.RollbackStart;

        rollbackStartLSN := @parameter2: long;

        $l0 = virtualinvoke rollbackStart.<berkeley.com.sleepycat.je.txn.RollbackStart: long getMatchpoint()>();

        $l1 = virtualinvoke tracker.<berkeley.com.sleepycat.je.recovery.RollbackTracker: long getCheckpointStart()>();

        $r0 = virtualinvoke rollbackStart.<berkeley.com.sleepycat.je.txn.RollbackStart: java.util.Set getActiveTxnIds()>();

        specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker,long,long,long,long,java.util.Set)>(tracker, $l0, rollbackStartLSN, -1L, $l1, $r0);

        return;
    }

    boolean makeNestedPeriod(berkeley.com.sleepycat.je.txn.RollbackStart, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, target;
        berkeley.com.sleepycat.je.txn.RollbackStart foundRBStart;
        long foundLSN;
        boolean $z0, $z1;
        java.util.Set $r0, $r2;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBStart := @parameter0: berkeley.com.sleepycat.je.txn.RollbackStart;

        foundLSN := @parameter1: long;

        target = virtualinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getNewPeriodTarget(berkeley.com.sleepycat.je.txn.RollbackStart,long)>(foundRBStart, foundLSN);

        if target == null goto label4;

        $z0 = specialinvoke target.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean isMatchingRollbackStart(long)>(foundLSN);

        if $z0 == 0 goto label2;

        $z1 = <berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r0 = target.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Set activeTxnIds>;

        if $r0 == null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = virtualinvoke foundRBStart.<berkeley.com.sleepycat.je.txn.RollbackStart: java.util.Set getActiveTxnIds()>();

        target.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Set activeTxnIds> = $r2;

        goto label3;

     label2:
        specialinvoke target.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void makeChild(berkeley.com.sleepycat.je.txn.RollbackStart,long)>(foundRBStart, foundLSN);

     label3:
        return 1;

     label4:
        return 0;
    }

    berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getNewPeriodTarget(berkeley.com.sleepycat.je.txn.RollbackStart, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, target, $r0, $r1;
        berkeley.com.sleepycat.je.txn.RollbackStart foundRBStart;
        long foundLSN;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBStart := @parameter0: berkeley.com.sleepycat.je.txn.RollbackStart;

        foundLSN := @parameter1: long;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        target = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getNewPeriodTarget(berkeley.com.sleepycat.je.txn.RollbackStart,long)>(foundRBStart, foundLSN);

        if target == null goto label1;

        return target;

     label1:
        $z0 = specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean contained(berkeley.com.sleepycat.je.txn.RollbackStart,long)>(foundRBStart, foundLSN);

        if $z0 == 0 goto label2;

        return this;

     label2:
        return null;
    }

    private boolean contained(berkeley.com.sleepycat.je.txn.RollbackStart, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        berkeley.com.sleepycat.je.txn.RollbackStart foundRBStart;
        long foundLSN, $l0, $l2, $l3, $l5;
        int $i1, $i4, $i6;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBStart := @parameter0: berkeley.com.sleepycat.je.txn.RollbackStart;

        foundLSN := @parameter1: long;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        $i1 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(foundLSN, $l0);

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean isMatchingRollbackStart(long)>(foundLSN);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $l2 = virtualinvoke foundRBStart.<berkeley.com.sleepycat.je.txn.RollbackStart: long getMatchpoint()>();

        $l3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        $i4 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l2, $l3);

        if $i4 < 0 goto label3;

        $l5 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $i6 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(foundLSN, $l5);

        if $i6 < 0 goto label4;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RollbackStart intersects current rollback period ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(foundRBStart);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r4 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(foundLSN);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void fail(java.lang.String)>($r6);

     label4:
        return 1;
    }

    private boolean isMatchingRollbackStart(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long foundLSN, $l0;
        int $i1;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundLSN := @parameter0: long;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $i1 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(foundLSN, $l0);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void makeChild(berkeley.com.sleepycat.je.txn.RollbackStart, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, $r0, $r3;
        berkeley.com.sleepycat.je.txn.RollbackStart foundRBStart;
        long foundLSN;
        berkeley.com.sleepycat.je.recovery.RollbackTracker $r1;
        java.util.List $r2;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        foundRBStart := @parameter0: berkeley.com.sleepycat.je.txn.RollbackStart;

        foundLSN := @parameter1: long;

        $r0 = new berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker tracker>;

        specialinvoke $r0.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker,berkeley.com.sleepycat.je.txn.RollbackStart,long)>($r1, foundRBStart, foundLSN);

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild> = $r0;

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.List children>;

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    boolean contains(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long lsn, $l0, $l2;
        int $i1, $i3;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        lsn := @parameter0: long;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        $i1 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l0, lsn);

        if $i1 >= 0 goto label1;

        $l2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $i3 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l2, lsn);

        if $i3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean notInRollbackStartAndEnd(long, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long lsn, txnId, $l0, $l2, $l4;
        boolean $z0, $z1;
        byte $b1;
        int $i3, $i5;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        lsn := @parameter0: long;

        txnId := @parameter1: long;

        $z0 = staticinvoke <berkeley.com.sleepycat.je.txn.TxnManager: boolean isReplicatedTxn(long)>(txnId);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        return 1;

     label2:
        $l2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $i3 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l2, lsn);

        if $i3 >= 0 goto label3;

        $l4 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $i5 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l4, lsn);

        if $i5 > 0 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    java.lang.String bracketFailure(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long lsn, $l0, $l1, $l2, $l3;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15;
        java.lang.String $r3, $r8, $r13, $r16;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        lsn := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(lsn);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r3 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(lsn);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] should not be within rollbackStart ");

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $l1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackStartLSN>;

        $r8 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and rollbackEnd ");

        $l2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $l3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $r13 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getScannerTarget(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this, target, $r0, $r1;
        long lsn, $l0;
        int $i1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        lsn := @parameter0: long;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod currentChild>;

        target = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod getScannerTarget(long)>(lsn);

        if target == null goto label1;

        return target;

     label1:
        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        $i1 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(lsn, $l0);

        if $i1 <= 0 goto label2;

        return this;

     label2:
        return null;
    }

    boolean hasRollbackEnd()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long $l0;
        byte $b1;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long rollbackEndLSN>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    berkeley.com.sleepycat.je.txn.TxnChain getChain(long, long, berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long txnId, undoLsn, $l0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.util.Map $r0, $r4;
        java.lang.Long $r1, $r5;
        java.lang.Object $r2;
        berkeley.com.sleepycat.je.txn.TxnChain chain#7, $r3;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        txnId := @parameter0: long;

        undoLsn := @parameter1: long;

        envImpl := @parameter2: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Map txnChainMap>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(txnId);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        chain#7 = (berkeley.com.sleepycat.je.txn.TxnChain) $r2;

        if chain#7 != null goto label1;

        $r3 = new berkeley.com.sleepycat.je.txn.TxnChain;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: long matchpointLSN>;

        specialinvoke $r3.<berkeley.com.sleepycat.je.txn.TxnChain: void <init>(long,long,long,berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>(undoLsn, txnId, $l0, envImpl);

        chain#7 = $r3;

        $r4 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Map txnChainMap>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(txnId);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, chain#7);

     label1:
        return chain#7;
    }

    boolean beforeCheckpointStart()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean beforeCheckpointStart>;

        return $z0;
    }

    boolean containsLN(long, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod this;
        long lsn, txnId;
        boolean $z0, $z1, $z2;
        java.util.Set $r0;
        java.lang.Long $r1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        lsn := @parameter0: long;

        txnId := @parameter1: long;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean contains(long)>(lsn);

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: java.util.Set activeTxnIds>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(txnId);

        $z1 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }


