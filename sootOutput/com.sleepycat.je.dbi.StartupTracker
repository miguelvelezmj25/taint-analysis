    public void <init>(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        com.sleepycat.je.dbi.StartupTracker$Phase[] l2;
        int l3, l4#18;
        com.sleepycat.je.dbi.StartupTracker$Phase p;
        java.util.EnumMap $r0, $r1, $r2;
        java.util.Map $r3;
        com.sleepycat.je.dbi.StartupTracker$Elapsed $r4;
        java.lang.Class $r6;
        java.util.logging.Logger $r7;
        long $l0;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.EnumMap;

        specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "com/sleepycat/je/dbi/StartupTracker$Phase");

        this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed> = $r0;

        $r1 = new java.util.EnumMap;

        specialinvoke $r1.<java.util.EnumMap: void <init>(java.lang.Class)>(class "com/sleepycat/je/dbi/StartupTracker$Phase");

        this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map counters> = $r1;

        $r2 = new java.util.EnumMap;

        specialinvoke $r2.<java.util.EnumMap: void <init>(java.lang.Class)>(class "com/sleepycat/je/dbi/StartupTracker$Phase");

        this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map stats> = $r2;

        l2 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase[] values()>();

        l3 = lengthof l2;

        l4#18 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#18);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l4#18 >= l3 goto label2;

        p = l2[l4#18];

        $r3 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r4 = new com.sleepycat.je.dbi.StartupTracker$Elapsed;

        specialinvoke $r4.<com.sleepycat.je.dbi.StartupTracker$Elapsed: void <init>(com.sleepycat.je.dbi.StartupTracker$1)>(null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(p, $r4);

        l4#18 = l4#18 + 1;

        goto label1;

     label2:
        this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        $r6 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <com.sleepycat.je.utilint.LoggerUtils: java.util.logging.Logger getLogger(java.lang.Class)>($r6);

        this.<com.sleepycat.je.dbi.StartupTracker: java.util.logging.Logger logger> = $r7;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        this.<com.sleepycat.je.dbi.StartupTracker: long lastDumpMillis> = $l0;

        return;
    }

    public void start(com.sleepycat.je.dbi.StartupTracker$Phase)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.dbi.StartupTracker$Phase phase, $r18;
        com.sleepycat.je.dbi.StartupTracker$Counter c, $r15;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r6, $r8;
        java.lang.String msg#8;
        com.sleepycat.je.recovery.RecoveryInfo $r3, $r7;
        java.util.logging.Logger $r9;
        com.sleepycat.je.dbi.EnvironmentImpl $r10, $r19;
        java.util.logging.Level $r11;
        java.util.Map $r12, $r16;
        java.lang.Object $r13;
        com.sleepycat.je.dbi.StartupTracker$Elapsed $r14;
        boolean $z0;
        com.sleepycat.je.log.LogManager $r20;
        long $l0;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        phase := @parameter0: com.sleepycat.je.dbi.StartupTracker$Phase;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(phase);

        msg#8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg#8);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        msg#8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r9 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.logging.Logger logger>;

        $r10 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r11 = <java.util.logging.Level: java.util.logging.Level CONFIG>;

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r9, $r10, $r11, msg#8);

        $r12 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(phase);

        $r14 = (com.sleepycat.je.dbi.StartupTracker$Elapsed) $r13;

        staticinvoke <com.sleepycat.je.dbi.StartupTracker$Elapsed: void access$100(com.sleepycat.je.dbi.StartupTracker$Elapsed)>($r14);

        $r15 = new com.sleepycat.je.dbi.StartupTracker$Counter;

        specialinvoke $r15.<com.sleepycat.je.dbi.StartupTracker$Counter: void <init>()>();

        c = $r15;

        $r16 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map counters>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(phase, c);

        $r18 = <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase TOTAL_ENV_OPEN>;

        $z0 = virtualinvoke phase.<com.sleepycat.je.dbi.StartupTracker$Phase: boolean equals(java.lang.Object)>($r18);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r19 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r20 = virtualinvoke $r19.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        $l0 = virtualinvoke $r20.<com.sleepycat.je.log.LogManager: long getNCacheMiss()>();

        virtualinvoke c.<com.sleepycat.je.dbi.StartupTracker$Counter: void setCacheMissStart(long)>($l0);

     label2:
        return;
    }

    public void setProgress(com.sleepycat.je.RecoveryProgress)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.RecoveryProgress progress;
        com.sleepycat.je.ProgressListener progressListener;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r0;
        com.sleepycat.je.dbi.EnvironmentImpl $r1, $r3;
        boolean $z0;
        com.sleepycat.je.EnvironmentFailureException $r2;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        progress := @parameter0: com.sleepycat.je.RecoveryProgress;

        $r1 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        progressListener = virtualinvoke $r1.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ProgressListener getRecoveryProgressListener()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(progressListener);

        if progressListener != null goto label1;

        return;

     label1:
        $z0 = interfaceinvoke progressListener.<com.sleepycat.je.ProgressListener: boolean progress(java.lang.Enum,long,long)>(progress, -1L, -1L);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r2 = new com.sleepycat.je.EnvironmentFailureException;

        $r3 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r0 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason PROGRESS_LISTENER_HALT>;

        specialinvoke $r2.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r3, $r0, "EnvironmentConfig.recoveryProgressListener: ");

        throw $r2;

     label2:
        return;
    }

    public void stop(com.sleepycat.je.dbi.StartupTracker$Phase)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.dbi.StartupTracker$Phase phase, $r19;
        com.sleepycat.je.dbi.StartupTracker$Elapsed e;
        com.sleepycat.je.dbi.StartupTracker$Counter c;
        int dumpThreshold;
        java.util.Map $r0;
        java.lang.Object $r1;
        com.sleepycat.je.dbi.EnvironmentImpl $r2, $r14, $r16, $r23, $r29;
        com.sleepycat.je.log.LogManager $r3;
        long $l0, $l1, $l2, $l3, $l4, $l6, $l7, $l8, $l9;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12;
        java.lang.String msg#22, $r25, $r31;
        com.sleepycat.je.recovery.RecoveryInfo $r7, $r11;
        java.util.logging.Logger $r13, $r22, $r28;
        java.util.logging.Level $r15, $r24, $r30;
        com.sleepycat.je.dbi.DbConfigManager $r17;
        com.sleepycat.je.config.DurationConfigParam $r18;
        byte $b5, $b10;
        java.io.ByteArrayOutputStream $r20, baos#58, $r26, baos#82;
        java.io.PrintStream $r21, p#62, $r27, p#86;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        phase := @parameter0: com.sleepycat.je.dbi.StartupTracker$Phase;

        $r0 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(phase);

        e = (com.sleepycat.je.dbi.StartupTracker$Elapsed) $r1;

        staticinvoke <com.sleepycat.je.dbi.StartupTracker$Elapsed: void access$200(com.sleepycat.je.dbi.StartupTracker$Elapsed)>(e);

        c = virtualinvoke this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.StartupTracker$Counter getCounter(com.sleepycat.je.dbi.StartupTracker$Phase)>(phase);

        $r2 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r3 = virtualinvoke $r2.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        $l0 = virtualinvoke $r3.<com.sleepycat.je.log.LogManager: long getNCacheMiss()>();

        virtualinvoke c.<com.sleepycat.je.dbi.StartupTracker$Counter: void setCacheMissEnd(long)>($l0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(phase);

        msg#22 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7);

        if $r7 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg#22);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        msg#22 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r13 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.logging.Logger logger>;

        $r14 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r15 = <java.util.logging.Level: java.util.logging.Level CONFIG>;

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r13, $r14, $r15, msg#22);

        $r16 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r17 = virtualinvoke $r16.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r18 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam STARTUP_DUMP_THRESHOLD>;

        dumpThreshold = virtualinvoke $r17.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r18);

        $r19 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase access$300(com.sleepycat.je.dbi.StartupTracker$Phase)>(phase);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r19);

        if $r19 != null goto label2;

        $l1 = virtualinvoke e.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getEnd()>();

        $l2 = virtualinvoke e.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getStart()>();

        $l3 = $l1 - $l2;

        $l4 = (long) dumpThreshold;

        $b5 = $l3 cmp $l4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        if $b5 <= 0 goto label2;

        $r20 = new java.io.ByteArrayOutputStream;

        specialinvoke $r20.<java.io.ByteArrayOutputStream: void <init>()>();

        baos#58 = $r20;

        $r21 = new java.io.PrintStream;

        specialinvoke $r21.<java.io.PrintStream: void <init>(java.io.OutputStream)>(baos#58);

        p#62 = $r21;

        virtualinvoke this.<com.sleepycat.je.dbi.StartupTracker: void displayStats(java.io.PrintStream,com.sleepycat.je.dbi.StartupTracker$Phase)>(p#62, phase);

        $r22 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.logging.Logger logger>;

        $r23 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r24 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r25 = virtualinvoke baos#58.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r22, $r23, $r24, $r25);

        return;

     label2:
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = this.<com.sleepycat.je.dbi.StartupTracker: long lastDumpMillis>;

        $l8 = $l6 - $l7;

        $l9 = (long) dumpThreshold;

        $b10 = $l8 cmp $l9;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b10);

        if $b10 <= 0 goto label3;

        $r26 = new java.io.ByteArrayOutputStream;

        specialinvoke $r26.<java.io.ByteArrayOutputStream: void <init>()>();

        baos#82 = $r26;

        $r27 = new java.io.PrintStream;

        specialinvoke $r27.<java.io.PrintStream: void <init>(java.io.OutputStream)>(baos#82);

        p#86 = $r27;

        specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: void displayInterim(java.io.PrintStream,com.sleepycat.je.dbi.StartupTracker$Phase)>(p#86, phase);

        $r28 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.logging.Logger logger>;

        $r29 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r30 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r31 = virtualinvoke baos#82.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void logMsg(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.util.logging.Level,java.lang.String)>($r28, $r29, $r30, $r31);

     label3:
        return;
    }

    public com.sleepycat.je.dbi.StartupTracker$Counter getCounter(com.sleepycat.je.dbi.StartupTracker$Phase)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.dbi.StartupTracker$Phase phase;
        java.util.Map $r0;
        java.lang.Object $r1;
        com.sleepycat.je.dbi.StartupTracker$Counter $r2;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        phase := @parameter0: com.sleepycat.je.dbi.StartupTracker$Phase;

        $r0 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map counters>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(phase);

        $r2 = (com.sleepycat.je.dbi.StartupTracker$Counter) $r1;

        return $r2;
    }

    public void displayStats(java.io.PrintStream, com.sleepycat.je.dbi.StartupTracker$Phase)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        java.io.PrintStream stream;
        com.sleepycat.je.dbi.StartupTracker$Phase root, $r20, p#61, $r26, $r27, $r29, p#93, $r36;
        com.sleepycat.je.dbi.StartupTracker$Elapsed rootTime, $r31;
        java.util.Map$Entry x, s;
        long $l0, $l1, $l2;
        java.util.Map $r0, $r22, $r32;
        java.lang.Object $r1, $r24, $r25, $r28, $r30, $r34, $r35, $r38, $r42;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r12, $r14, $r15, $r18, $r37, $r39, $r40;
        java.lang.String $r4, $r7, $r11, $r13, $r17, $r19, $r21, $r41;
        java.lang.Long $r10, $r16;
        java.util.Set $r23, $r33;
        java.util.Iterator l4#52, l4#84;
        boolean $z0, $z1;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        stream := @parameter0: java.io.PrintStream;

        root := @parameter1: com.sleepycat.je.dbi.StartupTracker$Phase;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        this.<com.sleepycat.je.dbi.StartupTracker: long lastDumpMillis> = $l0;

        $r0 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(root);

        rootTime = (com.sleepycat.je.dbi.StartupTracker$Elapsed) $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n=== ");

        $r4 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: java.lang.String access$700(com.sleepycat.je.dbi.StartupTracker$Phase)>(root);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Report  ===");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start = ");

        $l1 = virtualinvoke rootTime.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getStart()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r11 = specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: java.lang.String displayTimestamp(java.lang.Long)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end   = ");

        $l2 = virtualinvoke rootTime.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getEnd()>();

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r17 = specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: java.lang.String displayTimestamp(java.lang.Long)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r20 = <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase TOTAL_ENV_OPEN>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(root);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r20);

        if root != $r20 goto label1;

        $r21 = specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: java.lang.String displayRecoveryInterval()>();

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.String)>($r21);

     label1:
        $r22 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>();

        l4#52 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l4#52.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label5;

        $r24 = interfaceinvoke l4#52.<java.util.Iterator: java.lang.Object next()>();

        x = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke x.<java.util.Map$Entry: java.lang.Object getKey()>();

        p#61 = (com.sleepycat.je.dbi.StartupTracker$Phase) $r25;

        $r26 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase access$300(com.sleepycat.je.dbi.StartupTracker$Phase)>(p#61);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r26);

        if $r26 != null goto label3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(p#61);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(root);

        if p#61 == root goto label4;

        goto label2;

     label3:
        $r27 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase access$300(com.sleepycat.je.dbi.StartupTracker$Phase)>(p#61);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(root);

        if $r27 == root goto label4;

        goto label2;

     label4:
        $r28 = interfaceinvoke x.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (com.sleepycat.je.dbi.StartupTracker$Phase) $r28;

        $r30 = interfaceinvoke x.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r31 = (com.sleepycat.je.dbi.StartupTracker$Elapsed) $r30;

        specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: void displayPhaseSubtree(java.io.PrintStream,com.sleepycat.je.dbi.StartupTracker$Phase,com.sleepycat.je.dbi.StartupTracker$Elapsed,com.sleepycat.je.dbi.StartupTracker$Elapsed)>(stream, $r29, $r31, rootTime);

        goto label2;

     label5:
        specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: void displayCounters(java.io.PrintStream,com.sleepycat.je.dbi.StartupTracker$Phase)>(stream, root);

        $r32 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map stats>;

        $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Set entrySet()>();

        l4#84 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke l4#84.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label8;

        $r34 = interfaceinvoke l4#84.<java.util.Iterator: java.lang.Object next()>();

        s = (java.util.Map$Entry) $r34;

        $r35 = interfaceinvoke s.<java.util.Map$Entry: java.lang.Object getKey()>();

        p#93 = (com.sleepycat.je.dbi.StartupTracker$Phase) $r35;

        $r36 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase access$300(com.sleepycat.je.dbi.StartupTracker$Phase)>(p#93);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r36);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(root);

        if $r36 == root goto label7;

        goto label6;

     label7:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = interfaceinvoke s.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stats:");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r42 = interfaceinvoke s.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.Object)>($r42);

        goto label6;

     label8:
        return;
    }

    private void displayInterim(java.io.PrintStream, com.sleepycat.je.dbi.StartupTracker$Phase)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        java.io.PrintStream stream;
        com.sleepycat.je.dbi.StartupTracker$Phase phase, p, $r13;
        java.util.Map$Entry x, s;
        com.sleepycat.je.dbi.StartupTracker$Elapsed e;
        long $l0, $l1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r17, $r19, $r20;
        java.lang.String $r4, $r5, $r21;
        boolean headerNotPrinted#17, $z0, $z1;
        java.util.Map $r6, $r14;
        java.util.Set $r7, $r15;
        java.util.Iterator l4#22, l4#61;
        java.lang.Object $r8, $r9, $r10, $r16, $r18, $r22;
        byte $b2;
        java.lang.Object[] $r11;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        stream := @parameter0: java.io.PrintStream;

        phase := @parameter1: com.sleepycat.je.dbi.StartupTracker$Phase;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        this.<com.sleepycat.je.dbi.StartupTracker: long lastDumpMillis> = $l0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n=== Interim ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(phase);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Report  ===");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r5 = specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: java.lang.String displayRecoveryInterval()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r5);

        headerNotPrinted#17 = 1;

        $r6 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        l4#22 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4#22.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke l4#22.<java.util.Iterator: java.lang.Object next()>();

        x = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke x.<java.util.Map$Entry: java.lang.Object getKey()>();

        p = (com.sleepycat.je.dbi.StartupTracker$Phase) $r9;

        $r10 = interfaceinvoke x.<java.util.Map$Entry: java.lang.Object getValue()>();

        e = (com.sleepycat.je.dbi.StartupTracker$Elapsed) $r10;

        $l1 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Elapsed: long access$800(com.sleepycat.je.dbi.StartupTracker$Elapsed)>(e);

        $b2 = $l1 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 != 0 goto label2;

        goto label1;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerNotPrinted#17);

        if headerNotPrinted#17 == 0 goto label3;

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>("                             Elapsed(ms)");

        headerNotPrinted#17 = 0;

     label3:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = p;

        $r11[1] = e;

        virtualinvoke stream.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%20s : %s\n", $r11);

        goto label1;

     label4:
        $r13 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase access$300(com.sleepycat.je.dbi.StartupTracker$Phase)>(phase);

        specialinvoke this.<com.sleepycat.je.dbi.StartupTracker: void displayCounters(java.io.PrintStream,com.sleepycat.je.dbi.StartupTracker$Phase)>(stream, $r13);

        $r14 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map stats>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        l4#61 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke l4#61.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label6;

        $r16 = interfaceinvoke l4#61.<java.util.Iterator: java.lang.Object next()>();

        s = (java.util.Map$Entry) $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = interfaceinvoke s.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stats:");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r22 = interfaceinvoke s.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.Object)>($r22);

        goto label5;

     label6:
        return;
    }

    private java.lang.String displayRecoveryInterval()
    {
        com.sleepycat.je.dbi.StartupTracker this;
        java.lang.StringBuilder returnInfo, sb, $r0, $r6, $r22, $r23, $r26, $r27, $r30, $r31, $r34, $r35, $r38, $r39, $r42, $r49, $r51, $r52, $r54;
        com.sleepycat.je.recovery.CheckpointEnd cEnd;
        long fileMax, useStart, head, useEnd, ckpt, useLast, tail, $l0, $l1, $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13, $l14, $l15, $l16;
        java.util.Formatter f, $r43;
        com.sleepycat.je.recovery.RecoveryInfo $r1, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r24, $r28, $r32, $r36;
        java.lang.String $r4, $r7, $r25, $r29, $r33, $r37, $r40, $r50, $r53, $r55;
        com.sleepycat.je.dbi.EnvironmentImpl $r10;
        com.sleepycat.je.dbi.DbConfigManager $r11;
        com.sleepycat.je.config.LongConfigParam $r12;
        byte $b2, $b6, $b10;
        java.lang.Object[] $r44;
        java.lang.Long $r45, $r46, $r47;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        returnInfo = $r0;

        $r1 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        cEnd = $r1.<com.sleepycat.je.recovery.RecoveryInfo: com.sleepycat.je.recovery.CheckpointEnd checkpointEnd>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cEnd);

        if cEnd == null goto label2;

        virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkpointId = ");

        $l0 = virtualinvoke cEnd.<com.sleepycat.je.recovery.CheckpointEnd: long getId()>();

        virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke cEnd.<com.sleepycat.je.recovery.CheckpointEnd: java.lang.String getInvoker()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 != null goto label1;

        virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label2;

     label1:
        $r6 = virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke cEnd.<com.sleepycat.je.recovery.CheckpointEnd: java.lang.String getInvoker()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

     label2:
        $r10 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r11 = virtualinvoke $r10.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r12 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.LongConfigParam LOG_FILE_MAX>;

        fileMax = virtualinvoke $r11.<com.sleepycat.je.dbi.DbConfigManager: long getLong(com.sleepycat.je.config.LongConfigParam)>($r12);

        $r13 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l1 = $r13.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointStartLsn>;

        $b2 = $l1 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 != 0 goto label3;

        $l3 = 0L;

        goto label4;

     label3:
        $r14 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l3 = $r14.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointStartLsn>;

     label4:
        useStart = $l3;

        $r15 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l4 = $r15.<com.sleepycat.je.recovery.RecoveryInfo: long firstActiveLsn>;

        head = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getNoCleaningDistance(long,long,long)>(useStart, $l4, fileMax);

        $r16 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l5 = $r16.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointEndLsn>;

        $b6 = $l5 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 != 0 goto label5;

        $l7 = 0L;

        goto label6;

     label5:
        $r17 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l7 = $r17.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointEndLsn>;

     label6:
        useEnd = $l7;

        $r18 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l8 = $r18.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointStartLsn>;

        ckpt = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getNoCleaningDistance(long,long,long)>(useEnd, $l8, fileMax);

        $r19 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l9 = $r19.<com.sleepycat.je.recovery.RecoveryInfo: long lastUsedLsn>;

        $b10 = $l9 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b10);

        if $b10 != 0 goto label7;

        $l11 = 0L;

        goto label8;

     label7:
        $r20 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l11 = $r20.<com.sleepycat.je.recovery.RecoveryInfo: long lastUsedLsn>;

     label8:
        useLast = $l11;

        $r21 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l12 = $r21.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointEndLsn>;

        tail = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getNoCleaningDistance(long,long,long)>(useLast, $l12, fileMax);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("firstActive[");

        $r24 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l13 = $r24.<com.sleepycat.je.recovery.RecoveryInfo: long firstActiveLsn>;

        $r25 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l13);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ckptStart[");

        $r28 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l14 = $r28.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointStartLsn>;

        $r29 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l14);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ckptEnd[");

        $r32 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l15 = $r32.<com.sleepycat.je.recovery.RecoveryInfo: long checkpointEndLsn>;

        $r33 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l15);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], lastUsed[");

        $r36 = this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info>;

        $l16 = $r36.<com.sleepycat.je.recovery.RecoveryInfo: long lastUsedLsn>;

        $r37 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l16);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        sb = $r42;

        $r43 = new java.util.Formatter;

        specialinvoke $r43.<java.util.Formatter: void <init>(java.lang.Appendable)>(sb);

        f = $r43;

        $r44 = newarray (java.lang.Object)[6];

        $r44[0] = "firstActive->ckptStart";

        $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(head);

        $r44[1] = $r45;

        $r44[2] = "ckptStart->ckptEnd";

        $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(ckpt);

        $r44[3] = $r46;

        $r44[4] = "ckptEnd->end bytes";

        $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(tail);

        $r44[5] = $r47;

        virtualinvoke f.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%24s bytes = %,d\n%24s bytes = %,d\n%24s bytes = %,d", $r44);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke returnInfo.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nApproximate distances:\n");

        $r53 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r55;
    }

    private void displayCounters(java.io.PrintStream, com.sleepycat.je.dbi.StartupTracker$Phase)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        java.io.PrintStream stream;
        com.sleepycat.je.dbi.StartupTracker$Phase root, p, $r4;
        java.lang.String basicFormat, $r7;
        java.util.Iterator l5;
        java.util.Map$Entry c;
        com.sleepycat.je.dbi.StartupTracker$Counter counter;
        boolean headerNotPrinted#3, $z0, $z1;
        java.util.Map $r0;
        java.util.Set $r1;
        java.lang.Object $r2, $r3, $r5, $r10;
        java.lang.Object[] $r6, $r9;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        stream := @parameter0: java.io.PrintStream;

        root := @parameter1: com.sleepycat.je.dbi.StartupTracker$Phase;

        basicFormat = "%20s   %s\n";

        headerNotPrinted#3 = 1;

        $r0 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map counters>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        l5 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        c = (java.util.Map$Entry) $r2;

        $r3 = interfaceinvoke c.<java.util.Map$Entry: java.lang.Object getKey()>();

        p = (com.sleepycat.je.dbi.StartupTracker$Phase) $r3;

        $r4 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase access$300(com.sleepycat.je.dbi.StartupTracker$Phase)>(p);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(root);

        if $r4 == root goto label2;

        goto label1;

     label2:
        $r5 = interfaceinvoke c.<java.util.Map$Entry: java.lang.Object getValue()>();

        counter = (com.sleepycat.je.dbi.StartupTracker$Counter) $r5;

        $z1 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Counter: boolean access$600(com.sleepycat.je.dbi.StartupTracker$Counter)>(counter);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        goto label1;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(headerNotPrinted#3);

        if headerNotPrinted#3 == 0 goto label4;

        virtualinvoke stream.<java.io.PrintStream: void println()>();

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = " ";

        $r7 = <com.sleepycat.je.dbi.StartupTracker$Counter: java.lang.String DISPLAY_COLUMNS>;

        $r6[1] = $r7;

        virtualinvoke stream.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(basicFormat, $r6);

        headerNotPrinted#3 = 0;

     label4:
        $r9 = newarray (java.lang.Object)[2];

        $r10 = interfaceinvoke c.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9[0] = $r10;

        $r9[1] = counter;

        virtualinvoke stream.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(basicFormat, $r9);

        goto label1;

     label5:
        return;
    }

    private java.lang.String displayTimestamp(java.lang.Long)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        java.lang.Long time;
        java.lang.StringBuilder sb, $r0;
        java.util.Formatter timestampFormatter, $r1;
        java.lang.Object[] $r2;
        java.lang.String $r4;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        time := @parameter0: java.lang.Long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        sb = $r0;

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>(java.lang.Appendable)>(sb);

        timestampFormatter = $r1;

        $r2 = newarray (java.lang.Object)[5];

        $r2[0] = time;

        $r2[1] = time;

        $r2[2] = time;

        $r2[3] = time;

        $r2[4] = time;

        virtualinvoke timestampFormatter.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%tD,%tH:%tM:%tS:%tL", $r2);

        $r4 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void displayPhaseSubtree(java.io.PrintStream, com.sleepycat.je.dbi.StartupTracker$Phase, com.sleepycat.je.dbi.StartupTracker$Elapsed, com.sleepycat.je.dbi.StartupTracker$Elapsed)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        java.io.PrintStream stream;
        com.sleepycat.je.dbi.StartupTracker$Phase parent, child;
        com.sleepycat.je.dbi.StartupTracker$Elapsed parentTime, rootElapsed, time;
        java.lang.String headerFormat, parentFormat, dataFormat, divider, $r2;
        com.sleepycat.je.dbi.StartupTracker$Phase[] l9, $r0;
        int l10, $i4, l11#51, $i7;
        long $l0, $l1, $l2, $l5;
        byte $b3, $b6;
        java.lang.Object[] $r1, $r4, $r9;
        java.lang.Integer $r5, $r10;
        java.util.Map $r7;
        java.lang.Object $r8;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        stream := @parameter0: java.io.PrintStream;

        parent := @parameter1: com.sleepycat.je.dbi.StartupTracker$Phase;

        parentTime := @parameter2: com.sleepycat.je.dbi.StartupTracker$Elapsed;

        rootElapsed := @parameter3: com.sleepycat.je.dbi.StartupTracker$Elapsed;

        headerFormat = "%24s  %% of total  %s\n";

        parentFormat = "%20s             %3d %s\n";

        dataFormat = "%24s         %3d %s\n";

        divider = "                         -------------------------";

        $r0 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase[] access$400(com.sleepycat.je.dbi.StartupTracker$Phase)>(parent);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return;

     label1:
        $l0 = virtualinvoke parentTime.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getEnd()>();

        $l1 = virtualinvoke parentTime.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getStart()>();

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 != 0 goto label2;

        return;

     label2:
        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>("\n");

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = " ";

        $r2 = <com.sleepycat.je.dbi.StartupTracker$Elapsed: java.lang.String DISPLAY_COLUMNS>;

        $r1[1] = $r2;

        virtualinvoke stream.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(headerFormat, $r1);

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = parent;

        $i4 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Elapsed: int access$500(com.sleepycat.je.dbi.StartupTracker$Elapsed,com.sleepycat.je.dbi.StartupTracker$Elapsed)>(parentTime, rootElapsed);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4[1] = $r5;

        $r4[2] = parentTime;

        virtualinvoke stream.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(parentFormat, $r4);

        virtualinvoke stream.<java.io.PrintStream: void println(java.lang.String)>(divider);

        l9 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase[] access$400(com.sleepycat.je.dbi.StartupTracker$Phase)>(parent);

        l10 = lengthof l9;

        l11#51 = 0;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l11#51);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l10);

        if l11#51 >= l10 goto label6;

        child = l9[l11#51];

        $r7 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map elapsed>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(child);

        time = (com.sleepycat.je.dbi.StartupTracker$Elapsed) $r8;

        $l5 = virtualinvoke time.<com.sleepycat.je.dbi.StartupTracker$Elapsed: long getStart()>();

        $b6 = $l5 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 != 0 goto label4;

        goto label5;

     label4:
        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = child;

        $i7 = staticinvoke <com.sleepycat.je.dbi.StartupTracker$Elapsed: int access$500(com.sleepycat.je.dbi.StartupTracker$Elapsed,com.sleepycat.je.dbi.StartupTracker$Elapsed)>(time, rootElapsed);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r9[1] = $r10;

        $r9[2] = time;

        virtualinvoke stream.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(dataFormat, $r9);

     label5:
        l11#51 = l11#51 + 1;

        goto label3;

     label6:
        return;
    }

    public void setRecoveryInfo(com.sleepycat.je.recovery.RecoveryInfo)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.recovery.RecoveryInfo rInfo;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        rInfo := @parameter0: com.sleepycat.je.recovery.RecoveryInfo;

        this.<com.sleepycat.je.dbi.StartupTracker: com.sleepycat.je.recovery.RecoveryInfo info> = rInfo;

        return;
    }

    public void setStats(com.sleepycat.je.dbi.StartupTracker$Phase, com.sleepycat.je.utilint.StatGroup)
    {
        com.sleepycat.je.dbi.StartupTracker this;
        com.sleepycat.je.dbi.StartupTracker$Phase phase;
        com.sleepycat.je.utilint.StatGroup sg;
        java.util.Map $r0;

        this := @this: com.sleepycat.je.dbi.StartupTracker;

        phase := @parameter0: com.sleepycat.je.dbi.StartupTracker$Phase;

        sg := @parameter1: com.sleepycat.je.utilint.StatGroup;

        $r0 = this.<com.sleepycat.je.dbi.StartupTracker: java.util.Map stats>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(phase, sg);

        return;
    }


