    public static weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel getKernel(org.w3c.dom.Element, weka.gui.Logger) throws java.lang.Exception
    {
        org.w3c.dom.Element svmMachineModelElement, $r3, $r6, $r9;
        weka.gui.Logger log;
        org.w3c.dom.NodeList kList#4, kList#13, kList#26, kList#39;
        int $i0, $i1, $i2, $i3;
        weka.classifiers.pmml.consumer.SupportVectorMachineModel$LinearKernel $r0;
        weka.classifiers.pmml.consumer.SupportVectorMachineModel$PolynomialKernel $r1;
        org.w3c.dom.Node $r2, $r5, $r8;
        weka.classifiers.pmml.consumer.SupportVectorMachineModel$RadialBasisKernel $r4;
        weka.classifiers.pmml.consumer.SupportVectorMachineModel$SigmoidKernel $r7;
        java.lang.Exception $r10;

        svmMachineModelElement := @parameter0: org.w3c.dom.Element;

        log := @parameter1: weka.gui.Logger;

        kList#4 = interfaceinvoke svmMachineModelElement.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("LinearKernelType");

        $i0 = interfaceinvoke kList#4.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label1;

        $r0 = new weka.classifiers.pmml.consumer.SupportVectorMachineModel$LinearKernel;

        specialinvoke $r0.<weka.classifiers.pmml.consumer.SupportVectorMachineModel$LinearKernel: void <init>(weka.gui.Logger)>(log);

        return $r0;

     label1:
        kList#13 = interfaceinvoke svmMachineModelElement.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("PolynomialKernelType");

        $i1 = interfaceinvoke kList#13.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label2;

        $r1 = new weka.classifiers.pmml.consumer.SupportVectorMachineModel$PolynomialKernel;

        $r2 = interfaceinvoke kList#13.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r3 = (org.w3c.dom.Element) $r2;

        specialinvoke $r1.<weka.classifiers.pmml.consumer.SupportVectorMachineModel$PolynomialKernel: void <init>(org.w3c.dom.Element,weka.gui.Logger)>($r3, log);

        return $r1;

     label2:
        kList#26 = interfaceinvoke svmMachineModelElement.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("RadialBasisKernelType");

        $i2 = interfaceinvoke kList#26.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 <= 0 goto label3;

        $r4 = new weka.classifiers.pmml.consumer.SupportVectorMachineModel$RadialBasisKernel;

        $r5 = interfaceinvoke kList#26.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r6 = (org.w3c.dom.Element) $r5;

        specialinvoke $r4.<weka.classifiers.pmml.consumer.SupportVectorMachineModel$RadialBasisKernel: void <init>(org.w3c.dom.Element,weka.gui.Logger)>($r6, log);

        return $r4;

     label3:
        kList#39 = interfaceinvoke svmMachineModelElement.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("SigmoidKernelType");

        $i3 = interfaceinvoke kList#39.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 0 goto label4;

        $r7 = new weka.classifiers.pmml.consumer.SupportVectorMachineModel$SigmoidKernel;

        $r8 = interfaceinvoke kList#39.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r9 = (org.w3c.dom.Element) $r8;

        specialinvoke $r7.<weka.classifiers.pmml.consumer.SupportVectorMachineModel$SigmoidKernel: void <init>(org.w3c.dom.Element,weka.gui.Logger)>($r9, log);

        return $r7;

     label4:
        $r10 = new java.lang.Exception;

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>("[Kernel] Can\'t find a kernel that I recognize!");

        throw $r10;
    }

    protected void <init>(weka.gui.Logger)
    {
        weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel this;
        weka.gui.Logger log;

        this := @this: weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel;

        log := @parameter0: weka.gui.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel: weka.gui.Logger m_log> = null;

        this.<weka.classifiers.pmml.consumer.SupportVectorMachineModel$Kernel: weka.gui.Logger m_log> = log;

        return;
    }


