    public java.util.Date executionTime()
    {
        org.prevayler.implementation.TransactionGuide this;
        org.prevayler.implementation.TransactionTimestamp $r0;
        java.util.Date $r1;

        this := @this: org.prevayler.implementation.TransactionGuide;

        $r0 = this.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp _transactionTimestamp>;

        $r1 = virtualinvoke $r0.<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>();

        return $r1;
    }

    public org.prevayler.implementation.TransactionTimestamp timestamp()
    {
        org.prevayler.implementation.TransactionGuide this;
        org.prevayler.implementation.TransactionTimestamp $r0;

        this := @this: org.prevayler.implementation.TransactionGuide;

        $r0 = this.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp _transactionTimestamp>;

        return $r0;
    }

    public void <init>(org.prevayler.implementation.TransactionTimestamp, org.prevayler.foundation.Turn)
    {
        org.prevayler.implementation.TransactionGuide this;
        org.prevayler.implementation.TransactionTimestamp transactionTimestamp;
        org.prevayler.foundation.Turn pipelineTurn;

        this := @this: org.prevayler.implementation.TransactionGuide;

        transactionTimestamp := @parameter0: org.prevayler.implementation.TransactionTimestamp;

        pipelineTurn := @parameter1: org.prevayler.foundation.Turn;

        specialinvoke this.<org.prevayler.foundation.Guided: void <init>(org.prevayler.foundation.Turn)>(pipelineTurn);

        this.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp _transactionTimestamp> = transactionTimestamp;

        return;
    }

    public void checkSystemVersion(long)
    {
        org.prevayler.implementation.TransactionGuide this;
        long expectedSystemVersion, $l0, $l2;
        org.prevayler.implementation.TransactionTimestamp $r0, $r4;
        byte $b1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7;
        java.lang.String $r8;

        this := @this: org.prevayler.implementation.TransactionGuide;

        expectedSystemVersion := @parameter0: long;

        $r0 = this.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp _transactionTimestamp>;

        $l0 = virtualinvoke $r0.<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>();

        $b1 = $l0 cmp expectedSystemVersion;

        if $b1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to process ");

        $r4 = this.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp _transactionTimestamp>;

        $l2 = virtualinvoke $r4.<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when ready for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(expectedSystemVersion);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.prevayler.implementation.TransactionGuide this;
        java.io.OutputStream stream;
        org.prevayler.implementation.TransactionTimestamp $r0;
        org.prevayler.foundation.Chunk $r1;

        this := @this: org.prevayler.implementation.TransactionGuide;

        stream := @parameter0: java.io.OutputStream;

        $r0 = this.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp _transactionTimestamp>;

        $r1 = virtualinvoke $r0.<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>();

        staticinvoke <org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>(stream, $r1);

        return;
    }


