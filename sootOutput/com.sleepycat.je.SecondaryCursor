    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/SecondaryCursor";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.SecondaryCursor: boolean $assertionsDisabled> = $z1;

        return;
    }

    com.sleepycat.je.OperationResult getInternal(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.Get, com.sleepycat.je.ReadOptions, com.sleepycat.je.LockMode)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.ReadOptions options;
        com.sleepycat.je.LockMode lockMode;
        com.sleepycat.je.CacheMode cacheMode;
        com.sleepycat.je.dbi.SearchMode searchMode;
        com.sleepycat.je.DatabaseEntry key#1, pKey#2, data#3, $r0, $r2, $r13, $r14, $r15;
        com.sleepycat.je.Get getType#4, $r5, $r7, $r9, $r10, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.sleepycat.je.OperationResult $r1, $r6, $r8, $r19;
        com.sleepycat.je.dbi.GetMode getMode#46;
        com.sleepycat.je.dbi.CursorImpl $r3;
        java.lang.AssertionError $r4, $r11;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key#1 := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey#2 := @parameter1: com.sleepycat.je.DatabaseEntry;

        data#3 := @parameter2: com.sleepycat.je.DatabaseEntry;

        getType#4 := @parameter3: com.sleepycat.je.Get;

        options := @parameter4: com.sleepycat.je.ReadOptions;

        lockMode := @parameter5: com.sleepycat.je.LockMode;

        staticinvoke <com.sleepycat.je.utilint.DatabaseUtil: void checkForNullParam(java.lang.Object,java.lang.String)>(getType#4, "getType");

        if data#3 != null goto label01;

        data#3 = <com.sleepycat.je.SecondaryCursor: com.sleepycat.je.DatabaseEntry NO_RETURN_DATA>;

     label01:
        cacheMode = virtualinvoke options.<com.sleepycat.je.ReadOptions: com.sleepycat.je.CacheMode getCacheMode()>();

        searchMode = virtualinvoke getType#4.<com.sleepycat.je.Get: com.sleepycat.je.dbi.SearchMode getSearchMode()>();

        if searchMode == null goto label04;

        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void checkState(boolean)>(0);

        staticinvoke <com.sleepycat.je.utilint.DatabaseUtil: void checkForNullDbt(com.sleepycat.je.DatabaseEntry,java.lang.String,boolean)>(key#1, "key", 1);

        staticinvoke <com.sleepycat.je.utilint.DatabaseUtil: void checkForPartial(com.sleepycat.je.DatabaseEntry,java.lang.String)>(key#1, "key");

        $z0 = virtualinvoke searchMode.<com.sleepycat.je.dbi.SearchMode: boolean isDataSearch()>();

        if $z0 == 0 goto label02;

        staticinvoke <com.sleepycat.je.utilint.DatabaseUtil: void checkForNullDbt(com.sleepycat.je.DatabaseEntry,java.lang.String,boolean)>(pKey#2, "pKey", 1);

        staticinvoke <com.sleepycat.je.utilint.DatabaseUtil: void checkForPartial(com.sleepycat.je.DatabaseEntry,java.lang.String)>(pKey#2, "pKey");

        goto label03;

     label02:
        if pKey#2 != null goto label03;

        $r0 = new com.sleepycat.je.DatabaseEntry;

        specialinvoke $r0.<com.sleepycat.je.DatabaseEntry: void <init>()>();

        pKey#2 = $r0;

     label03:
        $r1 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult search(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.SearchMode)>(key#1, pKey#2, data#3, lockMode, cacheMode, searchMode);

        return $r1;

     label04:
        if key#1 != null goto label05;

        key#1 = <com.sleepycat.je.SecondaryCursor: com.sleepycat.je.DatabaseEntry NO_RETURN_DATA>;

     label05:
        if pKey#2 != null goto label06;

        $r2 = new com.sleepycat.je.DatabaseEntry;

        specialinvoke $r2.<com.sleepycat.je.DatabaseEntry: void <init>()>();

        pKey#2 = $r2;

     label06:
        getMode#46 = virtualinvoke getType#4.<com.sleepycat.je.Get: com.sleepycat.je.dbi.GetMode getGetMode()>();

        $z1 = virtualinvoke getType#4.<com.sleepycat.je.Get: boolean getAllowNextPrevUninitialized()>();

        if $z1 == 0 goto label10;

        $r3 = this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.dbi.CursorImpl cursorImpl>;

        $z2 = virtualinvoke $r3.<com.sleepycat.je.dbi.CursorImpl: boolean isNotInitialized()>();

        if $z2 == 0 goto label10;

        $z3 = <com.sleepycat.je.SecondaryCursor: boolean $assertionsDisabled>;

        if $z3 != 0 goto label07;

        if getMode#46 != null goto label07;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label07:
        $z4 = virtualinvoke getMode#46.<com.sleepycat.je.dbi.GetMode: boolean isForward()>();

        if $z4 == 0 goto label08;

        $r5 = <com.sleepycat.je.Get: com.sleepycat.je.Get FIRST>;

        goto label09;

     label08:
        $r5 = <com.sleepycat.je.Get: com.sleepycat.je.Get LAST>;

     label09:
        getType#4 = $r5;

        getMode#46 = null;

     label10:
        if getMode#46 == null goto label11;

        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void checkState(boolean)>(1);

        $z5 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: boolean getLockPrimaryOnly(com.sleepycat.je.LockMode,com.sleepycat.je.DatabaseEntry)>(lockMode, data#3);

        $r6 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult retrieveNext(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.GetMode,boolean)>(key#1, pKey#2, data#3, lockMode, cacheMode, getMode#46, $z5);

        return $r6;

     label11:
        $r7 = <com.sleepycat.je.Get: com.sleepycat.je.Get CURRENT>;

        if getType#4 != $r7 goto label12;

        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void checkState(boolean)>(1);

        $r8 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult getCurrentInternal(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode)>(key#1, pKey#2, data#3, lockMode, cacheMode);

        return $r8;

     label12:
        $z6 = <com.sleepycat.je.SecondaryCursor: boolean $assertionsDisabled>;

        if $z6 != 0 goto label13;

        $r9 = <com.sleepycat.je.Get: com.sleepycat.je.Get FIRST>;

        if getType#4 == $r9 goto label13;

        $r10 = <com.sleepycat.je.Get: com.sleepycat.je.Get LAST>;

        if getType#4 == $r10 goto label13;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label13:
        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void checkState(boolean)>(0);

        $r13 = key#1;

        $r14 = pKey#2;

        $r15 = data#3;

        $r18 = <com.sleepycat.je.Get: com.sleepycat.je.Get FIRST>;

        if getType#4 != $r18 goto label14;

        $z7 = 1;

        goto label15;

     label14:
        $z7 = 0;

     label15:
        $z8 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: boolean getLockPrimaryOnly(com.sleepycat.je.LockMode,com.sleepycat.je.DatabaseEntry)>(lockMode, data#3);

        $r19 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult position(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,boolean,boolean)>($r13, $r14, $r15, lockMode, cacheMode, $z7, $z8);

        return $r19;
    }

    com.sleepycat.je.OperationResult search(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.LockMode, com.sleepycat.je.CacheMode, com.sleepycat.je.dbi.SearchMode)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data;
        com.sleepycat.je.LockMode lockMode, searchLockMode, $r0;
        com.sleepycat.je.CacheMode cacheMode;
        com.sleepycat.je.dbi.SearchMode searchMode;
        boolean lockPrimaryOnly, $z0;
        com.sleepycat.je.OperationResult result1, result2, $r3, $r5;
        int[] $r1;
        int $i0, $i1;
        com.sleepycat.je.dbi.GetMode $r2, $r4;
        com.sleepycat.je.EnvironmentFailureException $r6;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        lockMode := @parameter3: com.sleepycat.je.LockMode;

        cacheMode := @parameter4: com.sleepycat.je.CacheMode;

        searchMode := @parameter5: com.sleepycat.je.dbi.SearchMode;

        lockPrimaryOnly = specialinvoke this.<com.sleepycat.je.SecondaryCursor: boolean getLockPrimaryOnly(com.sleepycat.je.LockMode,com.sleepycat.je.DatabaseEntry)>(lockMode, data);

        if lockPrimaryOnly == 0 goto label1;

        $r0 = <com.sleepycat.je.LockMode: com.sleepycat.je.LockMode READ_UNCOMMITTED_ALL>;

        goto label2;

     label1:
        $r0 = lockMode;

     label2:
        searchLockMode = $r0;

        result1 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult search(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.SearchMode,boolean)>(key, pKey, searchLockMode, cacheMode, searchMode, 1);

        if result1 != null goto label3;

        return null;

     label3:
        $z0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean isReadUncommittedMode(com.sleepycat.je.LockMode)>(searchLockMode);

        result2 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult readPrimaryAfterGet(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,boolean,boolean,com.sleepycat.je.OperationResult)>(key, pKey, data, lockMode, $z0, lockPrimaryOnly, result1);

        if result2 == null goto label4;

        return result2;

     label4:
        $r1 = <com.sleepycat.je.SecondaryCursor$1: int[] $SwitchMap$com$sleepycat$je$dbi$SearchMode>;

        $i0 = virtualinvoke searchMode.<com.sleepycat.je.dbi.SearchMode: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label8;
        };

     label5:
        return null;

     label6:
        $r2 = <com.sleepycat.je.dbi.GetMode: com.sleepycat.je.dbi.GetMode NEXT_DUP>;

        $r3 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult retrieveNext(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.GetMode,boolean)>(key, pKey, data, lockMode, cacheMode, $r2, lockPrimaryOnly);

        return $r3;

     label7:
        $r4 = <com.sleepycat.je.dbi.GetMode: com.sleepycat.je.dbi.GetMode NEXT>;

        $r5 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult retrieveNext(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.GetMode,boolean)>(key, pKey, data, lockMode, cacheMode, $r4, lockPrimaryOnly);

        return $r5;

     label8:
        $r6 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState()>();

        throw $r6;
    }

    private boolean getLockPrimaryOnly(com.sleepycat.je.LockMode, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.LockMode lockMode;
        com.sleepycat.je.DatabaseEntry data;
        boolean dataRequested, $z0, $z1, $z2, $z3, $z4;
        int $i0;

        this := @this: com.sleepycat.je.SecondaryCursor;

        lockMode := @parameter0: com.sleepycat.je.LockMode;

        data := @parameter1: com.sleepycat.je.DatabaseEntry;

        if data == null goto label2;

        $z0 = virtualinvoke data.<com.sleepycat.je.DatabaseEntry: boolean getPartial()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke data.<com.sleepycat.je.DatabaseEntry: int getPartialLength()>();

        if $i0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        dataRequested = $z1;

        if dataRequested == 0 goto label4;

        $z2 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean isSerializableIsolation(com.sleepycat.je.LockMode)>(lockMode);

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean isReadUncommittedMode(com.sleepycat.je.LockMode)>(lockMode);

        if $z3 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    private com.sleepycat.je.OperationResult retrieveNext(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.LockMode, com.sleepycat.je.CacheMode, com.sleepycat.je.dbi.GetMode, boolean)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data;
        com.sleepycat.je.LockMode lockMode, searchLockMode, $r0;
        com.sleepycat.je.CacheMode cacheMode;
        com.sleepycat.je.dbi.GetMode getMode;
        boolean lockPrimaryOnly, $z0;
        com.sleepycat.je.OperationResult result1, result2;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        lockMode := @parameter3: com.sleepycat.je.LockMode;

        cacheMode := @parameter4: com.sleepycat.je.CacheMode;

        getMode := @parameter5: com.sleepycat.je.dbi.GetMode;

        lockPrimaryOnly := @parameter6: boolean;

        if lockPrimaryOnly == 0 goto label1;

        $r0 = <com.sleepycat.je.LockMode: com.sleepycat.je.LockMode READ_UNCOMMITTED_ALL>;

        goto label2;

     label1:
        $r0 = lockMode;

     label2:
        searchLockMode = $r0;

     label3:
        result1 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult retrieveNext(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.GetMode)>(key, pKey, searchLockMode, cacheMode, getMode);

        if result1 != null goto label4;

        return null;

     label4:
        $z0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean isReadUncommittedMode(com.sleepycat.je.LockMode)>(searchLockMode);

        result2 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult readPrimaryAfterGet(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,boolean,boolean,com.sleepycat.je.OperationResult)>(key, pKey, data, lockMode, $z0, lockPrimaryOnly, result1);

        if result2 == null goto label5;

        return result2;

     label5:
        goto label3;
    }

    private com.sleepycat.je.OperationResult getCurrentInternal(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.LockMode, com.sleepycat.je.CacheMode)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data;
        com.sleepycat.je.LockMode lockMode, searchLockMode, $r0;
        com.sleepycat.je.CacheMode cacheMode;
        boolean lockPrimaryOnly, $z0;
        com.sleepycat.je.OperationResult result, $r1;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        lockMode := @parameter3: com.sleepycat.je.LockMode;

        cacheMode := @parameter4: com.sleepycat.je.CacheMode;

        lockPrimaryOnly = specialinvoke this.<com.sleepycat.je.SecondaryCursor: boolean getLockPrimaryOnly(com.sleepycat.je.LockMode,com.sleepycat.je.DatabaseEntry)>(lockMode, data);

        if lockPrimaryOnly == 0 goto label1;

        $r0 = <com.sleepycat.je.LockMode: com.sleepycat.je.LockMode READ_UNCOMMITTED_ALL>;

        goto label2;

     label1:
        $r0 = lockMode;

     label2:
        searchLockMode = $r0;

        result = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult getCurrentInternal(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode)>(key, pKey, searchLockMode, cacheMode);

        if result != null goto label3;

        return null;

     label3:
        $z0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean isReadUncommittedMode(com.sleepycat.je.LockMode)>(searchLockMode);

        $r1 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult readPrimaryAfterGet(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,boolean,boolean,com.sleepycat.je.OperationResult)>(key, pKey, data, lockMode, $z0, lockPrimaryOnly, result);

        return $r1;
    }

    private com.sleepycat.je.OperationResult position(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.LockMode, com.sleepycat.je.CacheMode, boolean, boolean)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data;
        com.sleepycat.je.LockMode lockMode, searchLockMode, $r0;
        com.sleepycat.je.CacheMode cacheMode;
        boolean first, lockPrimaryOnly, $z0;
        com.sleepycat.je.OperationResult result1, result2, $r8;
        com.sleepycat.je.dbi.GetMode $r7;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        lockMode := @parameter3: com.sleepycat.je.LockMode;

        cacheMode := @parameter4: com.sleepycat.je.CacheMode;

        first := @parameter5: boolean;

        lockPrimaryOnly := @parameter6: boolean;

        if lockPrimaryOnly == 0 goto label1;

        $r0 = <com.sleepycat.je.LockMode: com.sleepycat.je.LockMode READ_UNCOMMITTED_ALL>;

        goto label2;

     label1:
        $r0 = lockMode;

     label2:
        searchLockMode = $r0;

        result1 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult position(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,boolean)>(key, pKey, searchLockMode, cacheMode, first);

        if result1 != null goto label3;

        return null;

     label3:
        $z0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean isReadUncommittedMode(com.sleepycat.je.LockMode)>(searchLockMode);

        result2 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult readPrimaryAfterGet(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,boolean,boolean,com.sleepycat.je.OperationResult)>(key, pKey, data, lockMode, $z0, lockPrimaryOnly, result1);

        if result2 == null goto label4;

        return result2;

     label4:
        if first == 0 goto label5;

        $r7 = <com.sleepycat.je.dbi.GetMode: com.sleepycat.je.dbi.GetMode NEXT>;

        goto label6;

     label5:
        $r7 = <com.sleepycat.je.dbi.GetMode: com.sleepycat.je.dbi.GetMode PREV>;

     label6:
        $r8 = specialinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult retrieveNext(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,com.sleepycat.je.CacheMode,com.sleepycat.je.dbi.GetMode,boolean)>(key, pKey, data, lockMode, cacheMode, $r7, lockPrimaryOnly);

        return $r8;
    }

    private com.sleepycat.je.OperationResult readPrimaryAfterGet(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.LockMode, boolean, boolean, com.sleepycat.je.OperationResult)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data;
        com.sleepycat.je.LockMode lockMode;
        boolean secDirtyRead, lockPrimaryOnly, $z0;
        com.sleepycat.je.OperationResult origResult, $r2;
        com.sleepycat.je.Database primaryDb;
        com.sleepycat.je.SecondaryDatabase $r0;
        com.sleepycat.je.dbi.CursorImpl $r1;
        long $l0;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        lockMode := @parameter3: com.sleepycat.je.LockMode;

        secDirtyRead := @parameter4: boolean;

        lockPrimaryOnly := @parameter5: boolean;

        origResult := @parameter6: com.sleepycat.je.OperationResult;

        $r0 = this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb>;

        primaryDb = virtualinvoke $r0.<com.sleepycat.je.SecondaryDatabase: com.sleepycat.je.Database getPrimary(com.sleepycat.je.DatabaseEntry)>(pKey);

        if primaryDb != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: boolean readPrimaryAfterGet(com.sleepycat.je.Database,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode,boolean,boolean)>(primaryDb, key, pKey, data, lockMode, secDirtyRead, lockPrimaryOnly);

        if $z0 != 0 goto label2;

        return null;

     label2:
        if secDirtyRead != 0 goto label3;

        return origResult;

     label3:
        $r1 = this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.dbi.CursorImpl cursorImpl>;

        $l0 = virtualinvoke $r1.<com.sleepycat.je.dbi.CursorImpl: long getExpirationTime()>();

        $r2 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.OperationResult makeResult(long)>($l0);

        return $r2;
    }

    boolean checkForPrimaryUpdate(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data, secKey, $r2;
        com.sleepycat.je.SecondaryConfig conf;
        java.util.HashSet results, $r6;
        com.sleepycat.je.SecondaryDatabase $r0, $r4, $r8;
        boolean possibleIntegrityError#5, $z0, $z1, $z2, $z3;
        com.sleepycat.je.SecondaryKeyCreator $r1, $r3;
        com.sleepycat.je.SecondaryMultiKeyCreator $r5, $r7;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        $r0 = this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb>;

        conf = virtualinvoke $r0.<com.sleepycat.je.SecondaryDatabase: com.sleepycat.je.SecondaryConfig getPrivateSecondaryConfig()>();

        possibleIntegrityError#5 = 0;

        $z0 = virtualinvoke conf.<com.sleepycat.je.SecondaryConfig: boolean getImmutableSecondaryKey()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        $r1 = virtualinvoke conf.<com.sleepycat.je.SecondaryConfig: com.sleepycat.je.SecondaryKeyCreator getKeyCreator()>();

        if $r1 == null goto label4;

        $r2 = new com.sleepycat.je.DatabaseEntry;

        specialinvoke $r2.<com.sleepycat.je.DatabaseEntry: void <init>()>();

        secKey = $r2;

        $r3 = virtualinvoke conf.<com.sleepycat.je.SecondaryConfig: com.sleepycat.je.SecondaryKeyCreator getKeyCreator()>();

        $r4 = this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb>;

        $z1 = interfaceinvoke $r3.<com.sleepycat.je.SecondaryKeyCreator: boolean createSecondaryKey(com.sleepycat.je.SecondaryDatabase,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>($r4, pKey, data, secKey);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke secKey.<com.sleepycat.je.DatabaseEntry: boolean equals(java.lang.Object)>(key);

        if $z2 != 0 goto label3;

     label2:
        possibleIntegrityError#5 = 1;

     label3:
        goto label5;

     label4:
        $r5 = virtualinvoke conf.<com.sleepycat.je.SecondaryConfig: com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        if $r5 == null goto label5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        results = $r6;

        $r7 = virtualinvoke conf.<com.sleepycat.je.SecondaryConfig: com.sleepycat.je.SecondaryMultiKeyCreator getMultiKeyCreator()>();

        $r8 = this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb>;

        interfaceinvoke $r7.<com.sleepycat.je.SecondaryMultiKeyCreator: void createSecondaryKeys(com.sleepycat.je.SecondaryDatabase,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,java.util.Set)>($r8, pKey, data, results);

        $z3 = interfaceinvoke results.<java.util.Set: boolean contains(java.lang.Object)>(key);

        if $z3 != 0 goto label5;

        possibleIntegrityError#5 = 1;

     label5:
        return possibleIntegrityError#5;
    }

    void <init>(com.sleepycat.je.SecondaryDatabase, com.sleepycat.je.txn.Locker, com.sleepycat.je.CursorConfig)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.SecondaryDatabase dbHandle;
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.CursorConfig cursorConfig;

        this := @this: com.sleepycat.je.SecondaryCursor;

        dbHandle := @parameter0: com.sleepycat.je.SecondaryDatabase;

        locker := @parameter1: com.sleepycat.je.txn.Locker;

        cursorConfig := @parameter2: com.sleepycat.je.CursorConfig;

        specialinvoke this.<com.sleepycat.je.Cursor: void <init>(com.sleepycat.je.Database,com.sleepycat.je.txn.Locker,com.sleepycat.je.CursorConfig)>(dbHandle, locker, cursorConfig);

        this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb> = dbHandle;

        return;
    }

    boolean isSecondaryCursor()
    {
        com.sleepycat.je.SecondaryCursor this;

        this := @this: com.sleepycat.je.SecondaryCursor;

        return 1;
    }

    public volatile com.sleepycat.je.Cursor dup(boolean)
    {
        com.sleepycat.je.SecondaryCursor this, $r0;
        boolean l1;

        this := @this: com.sleepycat.je.SecondaryCursor;

        l1 := @parameter0: boolean;

        $r0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryCursor dup(boolean)>(l1);

        return $r0;
    }

    public com.sleepycat.je.SecondaryCursor dup(boolean)
    {
        com.sleepycat.je.SecondaryCursor this, $r0;
        boolean samePosition;

        this := @this: com.sleepycat.je.SecondaryCursor;

        samePosition := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void checkOpenAndState(boolean)>(0);

        $r0 = new com.sleepycat.je.SecondaryCursor;

        specialinvoke $r0.<com.sleepycat.je.SecondaryCursor: void <init>(com.sleepycat.je.SecondaryCursor,boolean)>(this, samePosition);

        return $r0;
    }

    private void <init>(com.sleepycat.je.SecondaryCursor, boolean)
    {
        com.sleepycat.je.SecondaryCursor this, cursor;
        boolean samePosition;
        com.sleepycat.je.SecondaryDatabase $r0;

        this := @this: com.sleepycat.je.SecondaryCursor;

        cursor := @parameter0: com.sleepycat.je.SecondaryCursor;

        samePosition := @parameter1: boolean;

        specialinvoke this.<com.sleepycat.je.Cursor: void <init>(com.sleepycat.je.Cursor,boolean)>(cursor, samePosition);

        $r0 = cursor.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb>;

        this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb> = $r0;

        return;
    }

    void <init>(com.sleepycat.je.SecondaryDatabase, com.sleepycat.je.Transaction, com.sleepycat.je.CursorConfig)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.SecondaryDatabase dbHandle;
        com.sleepycat.je.Transaction txn;
        com.sleepycat.je.CursorConfig cursorConfig;

        this := @this: com.sleepycat.je.SecondaryCursor;

        dbHandle := @parameter0: com.sleepycat.je.SecondaryDatabase;

        txn := @parameter1: com.sleepycat.je.Transaction;

        cursorConfig := @parameter2: com.sleepycat.je.CursorConfig;

        specialinvoke this.<com.sleepycat.je.Cursor: void <init>(com.sleepycat.je.Database,com.sleepycat.je.Transaction,com.sleepycat.je.CursorConfig)>(dbHandle, null, cursorConfig);

        this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.SecondaryDatabase secondaryDb> = dbHandle;

        return;
    }

    public com.sleepycat.je.OperationResult get(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.Get, com.sleepycat.je.ReadOptions)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, data;
        com.sleepycat.je.Get getType;
        com.sleepycat.je.ReadOptions options;
        com.sleepycat.je.OperationResult $r0;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        data := @parameter1: com.sleepycat.je.DatabaseEntry;

        getType := @parameter2: com.sleepycat.je.Get;

        options := @parameter3: com.sleepycat.je.ReadOptions;

        $r0 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult get(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.Get,com.sleepycat.je.ReadOptions)>(key, null, data, getType, options);

        return $r0;
    }

    public com.sleepycat.je.OperationResult get(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.Get, com.sleepycat.je.ReadOptions)
    {
        com.sleepycat.je.SecondaryCursor this;
        com.sleepycat.je.DatabaseEntry key, pKey, data;
        com.sleepycat.je.Get getType;
        com.sleepycat.je.LockMode lockMode;
        java.lang.Error E, $r3;
        com.sleepycat.je.ReadOptions options#1;
        java.util.logging.Level $r0;
        java.lang.String $r1;
        com.sleepycat.je.OperationResult $r2;
        com.sleepycat.je.dbi.DatabaseImpl $r4;
        com.sleepycat.je.dbi.EnvironmentImpl $r5;

        this := @this: com.sleepycat.je.SecondaryCursor;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        pKey := @parameter1: com.sleepycat.je.DatabaseEntry;

        data := @parameter2: com.sleepycat.je.DatabaseEntry;

        getType := @parameter3: com.sleepycat.je.Get;

        options#1 := @parameter4: com.sleepycat.je.ReadOptions;

     label1:
        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void checkOpen()>();

        if options#1 != null goto label2;

        options#1 = <com.sleepycat.je.SecondaryCursor: com.sleepycat.je.ReadOptions DEFAULT_READ_OPTIONS>;

     label2:
        lockMode = virtualinvoke options#1.<com.sleepycat.je.ReadOptions: com.sleepycat.je.LockMode getLockMode()>();

        $r0 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(getType);

        virtualinvoke this.<com.sleepycat.je.SecondaryCursor: void trace(java.util.logging.Level,java.lang.String,java.lang.String,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.LockMode)>($r0, "SecondaryCursor.get: ", $r1, key, data, lockMode);

        $r2 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.OperationResult getInternal(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.Get,com.sleepycat.je.ReadOptions,com.sleepycat.je.LockMode)>(key, pKey, data, getType, options#1, lockMode);

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        E = $r3;

        $r4 = virtualinvoke this.<com.sleepycat.je.SecondaryCursor: com.sleepycat.je.dbi.DatabaseImpl getDatabaseImpl()>();

        $r5 = virtualinvoke $r4.<com.sleepycat.je.dbi.DatabaseImpl: com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        virtualinvoke $r5.<com.sleepycat.je.dbi.EnvironmentImpl: void invalidate(java.lang.Error)>(E);

        throw E;

        catch java.lang.Error from label1 to label3 with label4;
    }


