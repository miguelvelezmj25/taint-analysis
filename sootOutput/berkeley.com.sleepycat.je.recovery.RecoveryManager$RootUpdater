    boolean updateDone()
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        boolean $z0, $z1, $z2;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inserted>;

        if $z0 != 0 goto label1;

        $z1 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean replaced>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean getInFromLogIsLatched()
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inFromLogIsLatched>;

        return $z0;
    }

    boolean getReplaced()
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean replaced>;

        return $z0;
    }

    boolean getInserted()
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inserted>;

        return $z0;
    }

    long getOriginalLsn()
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long originalLsn>;

        return $l0;
    }

    void <init>(berkeley.com.sleepycat.je.tree.Tree, berkeley.com.sleepycat.je.tree.IN, long)
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        berkeley.com.sleepycat.je.tree.Tree tree;
        berkeley.com.sleepycat.je.tree.IN inFromLog;
        long lsn;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        tree := @parameter0: berkeley.com.sleepycat.je.tree.Tree;

        inFromLog := @parameter1: berkeley.com.sleepycat.je.tree.IN;

        lsn := @parameter2: long;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long lsn> = -1L;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inserted> = 0;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean replaced> = 0;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long originalLsn> = -1L;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inFromLogIsLatched> = 1;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.Tree tree> = tree;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.IN inFromLog> = inFromLog;

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long lsn> = lsn;

        return;
    }

    public berkeley.com.sleepycat.je.tree.IN doWork(berkeley.com.sleepycat.je.tree.ChildReference) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater this;
        berkeley.com.sleepycat.je.tree.ChildReference root, newRoot;
        berkeley.com.sleepycat.je.tree.Tree $r0, $r4, $r5;
        berkeley.com.sleepycat.je.tree.IN $r1, $r3;
        byte[] $r2;
        long $l0, $l1, $l2, $l3;
        int $i4;

        this := @this: berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater;

        root := @parameter0: berkeley.com.sleepycat.je.tree.ChildReference;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.Tree tree>;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.IN inFromLog>;

        $r2 = newarray (byte)[0];

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long lsn>;

        newRoot = virtualinvoke $r0.<berkeley.com.sleepycat.je.tree.Tree: berkeley.com.sleepycat.je.tree.ChildReference makeRootChildReference(berkeley.com.sleepycat.je.tree.Node,byte[],long)>($r1, $r2, $l0);

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.IN inFromLog>;

        virtualinvoke $r3.<berkeley.com.sleepycat.je.tree.IN: void releaseLatch()>();

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inFromLogIsLatched> = 0;

        if root != null goto label1;

        $r4 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.Tree tree>;

        virtualinvoke $r4.<berkeley.com.sleepycat.je.tree.Tree: void setRoot(berkeley.com.sleepycat.je.tree.ChildReference,boolean)>(newRoot, 0);

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean inserted> = 1;

        goto label2;

     label1:
        $l1 = virtualinvoke root.<berkeley.com.sleepycat.je.tree.ChildReference: long getLsn()>();

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long originalLsn> = $l1;

        $l2 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long originalLsn>;

        $l3 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: long lsn>;

        $i4 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l2, $l3);

        if $i4 >= 0 goto label2;

        $r5 = this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: berkeley.com.sleepycat.je.tree.Tree tree>;

        virtualinvoke $r5.<berkeley.com.sleepycat.je.tree.Tree: void setRoot(berkeley.com.sleepycat.je.tree.ChildReference,boolean)>(newRoot, 0);

        this.<berkeley.com.sleepycat.je.recovery.RecoveryManager$RootUpdater: boolean replaced> = 1;

     label2:
        return null;
    }


