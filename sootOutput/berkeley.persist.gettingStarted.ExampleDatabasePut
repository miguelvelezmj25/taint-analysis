    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        berkeley.persist.gettingStarted.ExampleDatabasePut edp, $r0;
        berkeley.com.sleepycat.je.DatabaseException dbe, $r2;
        java.lang.Exception e, $r10;
        java.lang.Throwable l3, $r18;
        berkeley.persist.gettingStarted.MyDbEnv $r1, $r9, $r17, $r19;
        java.io.PrintStream $r3, $r11, $r20;
        java.lang.StringBuilder $r4, $r5, $r7, $r12, $r13, $r15;
        java.lang.String $r6, $r8, $r14, $r16;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $r0 = new berkeley.persist.gettingStarted.ExampleDatabasePut;

        specialinvoke $r0.<berkeley.persist.gettingStarted.ExampleDatabasePut: void <init>()>();

        edp = $r0;

     label01:
        specialinvoke edp.<berkeley.persist.gettingStarted.ExampleDatabasePut: void run(java.lang.String[])>(args);

     label02:
        $r1 = <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r1.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        goto label10;

     label03:
        $r2 := @caughtexception;

     label04:
        dbe = $r2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExampleDatabasePut: ");

        $r6 = virtualinvoke dbe.<berkeley.com.sleepycat.je.DatabaseException: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke dbe.<berkeley.com.sleepycat.je.DatabaseException: void printStackTrace()>();

        virtualinvoke dbe.<berkeley.com.sleepycat.je.DatabaseException: void printStackTrace()>();

     label05:
        $r9 = <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r9.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        goto label10;

     label06:
        $r10 := @caughtexception;

     label07:
        e = $r10;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        $r14 = virtualinvoke e.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label08:
        $r17 = <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r17.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        goto label10;

     label09:
        $r18 := @caughtexception;

        l3 = $r18;

        $r19 = <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r19.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        throw l3;

     label10:
        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("All done.");

        return;

        catch berkeley.com.sleepycat.je.DatabaseException from label01 to label02 with label03;
        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    static void <clinit>()
    {
        java.io.File $r0, $r1, $r2;
        berkeley.persist.gettingStarted.MyDbEnv $r3;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/berkeleydb/env");

        <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File myDbEnvPath> = $r0;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/berkeleydb/src/main/java/berkeley/persist/gettingStarted/inventory.txt");

        <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File inventoryFile> = $r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/berkeleydb/src/main/java/berkeley/persist/gettingStarted/vendors.txt");

        <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File vendorsFile> = $r2;

        $r3 = new berkeley.persist.gettingStarted.MyDbEnv;

        specialinvoke $r3.<berkeley.persist.gettingStarted.MyDbEnv: void <init>()>();

        <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv> = $r3;

        return;
    }

    protected void <init>()
    {
        berkeley.persist.gettingStarted.ExampleDatabasePut this;

        this := @this: berkeley.persist.gettingStarted.ExampleDatabasePut;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private void run(java.lang.String[]) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleDatabasePut this;
        java.lang.String[] args;
        berkeley.persist.gettingStarted.MyDbEnv $r0, $r3;
        java.io.File $r1;
        berkeley.persist.gettingStarted.DataAccessor $r2;
        berkeley.com.sleepycat.persist.EntityStore $r4;
        java.io.PrintStream $r5, $r6;

        this := @this: berkeley.persist.gettingStarted.ExampleDatabasePut;

        args := @parameter0: java.lang.String[];

        staticinvoke <berkeley.persist.gettingStarted.ExampleDatabasePut: void parseArgs(java.lang.String[])>(args);

        $r0 = <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        $r1 = <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File myDbEnvPath>;

        virtualinvoke $r0.<berkeley.persist.gettingStarted.MyDbEnv: void setup(java.io.File,java.lang.String[])>($r1, args);

        $r2 = new berkeley.persist.gettingStarted.DataAccessor;

        $r3 = <berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        $r4 = virtualinvoke $r3.<berkeley.persist.gettingStarted.MyDbEnv: berkeley.com.sleepycat.persist.EntityStore getEntityStore()>();

        specialinvoke $r2.<berkeley.persist.gettingStarted.DataAccessor: void <init>(berkeley.com.sleepycat.persist.EntityStore)>($r4);

        this.<berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.DataAccessor da> = $r2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("loading vendors db....");

        specialinvoke this.<berkeley.persist.gettingStarted.ExampleDatabasePut: void loadVendorsDb()>();

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("loading inventory db....");

        specialinvoke this.<berkeley.persist.gettingStarted.ExampleDatabasePut: void loadInventoryDb()>();

        return;
    }

    private static void parseArgs(java.lang.String[])
    {
        java.lang.String[] args;
        int i#2, $i0;
        java.lang.String $r0, $r1, $r3, $r5, $r7;
        boolean $z0;
        char $c1;
        java.io.File $r2, $r4, $r6;

        args := @parameter0: java.lang.String[];

        i#2 = 0;

     label1:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#2 >= $i0 goto label7;

        $r0 = args[i#2];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label6;

        $r1 = args[i#2];

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c1);

        lookupswitch($c1)
        {
            case 104: goto label2;
            case 105: goto label3;
            case 118: goto label4;
            default: goto label5;
        };

     label2:
        $r2 = new java.io.File;

        i#2 = i#2 + 1;

        $r3 = args[i#2];

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File myDbEnvPath> = $r2;

        goto label6;

     label3:
        $r4 = new java.io.File;

        i#2 = i#2 + 1;

        $r5 = args[i#2];

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File inventoryFile> = $r4;

        goto label6;

     label4:
        $r6 = new java.io.File;

        i#2 = i#2 + 1;

        $r7 = args[i#2];

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7);

        <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File vendorsFile> = $r6;

        goto label6;

     label5:
        staticinvoke <berkeley.persist.gettingStarted.ExampleDatabasePut: void usage()>();

     label6:
        i#2 = i#2 + 1;

        goto label1;

     label7:
        return;
    }

    private static void usage()
    {
        java.io.PrintStream $r0, $r1;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("ExampleDatabasePut [-h <env directory>]");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("      [-i <inventory file>] [-v <vendors file>]");

        staticinvoke <java.lang.System: void exit(int)>(-1);

        return;
    }

    private void loadVendorsDb() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleDatabasePut this;
        java.util.List vendors;
        java.lang.String[] sArray, $r2;
        berkeley.persist.gettingStarted.Vendor theVendor, $r3;
        java.io.File $r0;
        int i#6, $i0;
        java.lang.Object $r1;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        berkeley.persist.gettingStarted.DataAccessor $r12;
        berkeley.com.sleepycat.persist.PrimaryIndex $r13;

        this := @this: berkeley.persist.gettingStarted.ExampleDatabasePut;

        $r0 = <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File vendorsFile>;

        vendors = specialinvoke this.<berkeley.persist.gettingStarted.ExampleDatabasePut: java.util.List loadFile(java.io.File,int)>($r0, 8);

        i#6 = 0;

     label1:
        $i0 = interfaceinvoke vendors.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#6 >= $i0 goto label2;

        $r1 = interfaceinvoke vendors.<java.util.List: java.lang.Object get(int)>(i#6);

        $r2 = (java.lang.String[]) $r1;

        sArray = (java.lang.String[]) $r2;

        $r3 = new berkeley.persist.gettingStarted.Vendor;

        specialinvoke $r3.<berkeley.persist.gettingStarted.Vendor: void <init>()>();

        theVendor = $r3;

        $r4 = sArray[0];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setVendorName(java.lang.String)>($r4);

        $r5 = sArray[1];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setAddress(java.lang.String)>($r5);

        $r6 = sArray[2];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setCity(java.lang.String)>($r6);

        $r7 = sArray[3];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setState(java.lang.String)>($r7);

        $r8 = sArray[4];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setZipcode(java.lang.String)>($r8);

        $r9 = sArray[5];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setBusinessPhoneNumber(java.lang.String)>($r9);

        $r10 = sArray[6];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setRepName(java.lang.String)>($r10);

        $r11 = sArray[7];

        virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: void setRepPhoneNumber(java.lang.String)>($r11);

        $r12 = this.<berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.DataAccessor da>;

        $r13 = $r12.<berkeley.persist.gettingStarted.DataAccessor: berkeley.com.sleepycat.persist.PrimaryIndex vendorByName>;

        virtualinvoke $r13.<berkeley.com.sleepycat.persist.PrimaryIndex: java.lang.Object put(java.lang.Object)>(theVendor);

        i#6 = i#6 + 1;

        goto label1;

     label2:
        return;
    }

    private void loadInventoryDb() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleDatabasePut this;
        java.util.List inventoryArray;
        java.lang.String[] sArray, $r2;
        java.lang.String sku, $r4, $r5, $r7, $r9, $r10, $r11;
        berkeley.persist.gettingStarted.Inventory theInventory, $r3;
        java.io.File $r0;
        int i#6, $i0, $i1;
        java.lang.Object $r1;
        java.lang.Float $r6;
        float $f0;
        java.lang.Integer $r8;
        berkeley.persist.gettingStarted.DataAccessor $r12;
        berkeley.com.sleepycat.persist.PrimaryIndex $r13;

        this := @this: berkeley.persist.gettingStarted.ExampleDatabasePut;

        $r0 = <berkeley.persist.gettingStarted.ExampleDatabasePut: java.io.File inventoryFile>;

        inventoryArray = specialinvoke this.<berkeley.persist.gettingStarted.ExampleDatabasePut: java.util.List loadFile(java.io.File,int)>($r0, 6);

        i#6 = 0;

     label1:
        $i0 = interfaceinvoke inventoryArray.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#6 >= $i0 goto label2;

        $r1 = interfaceinvoke inventoryArray.<java.util.List: java.lang.Object get(int)>(i#6);

        $r2 = (java.lang.String[]) $r1;

        sArray = (java.lang.String[]) $r2;

        sku = sArray[1];

        $r3 = new berkeley.persist.gettingStarted.Inventory;

        specialinvoke $r3.<berkeley.persist.gettingStarted.Inventory: void <init>()>();

        theInventory = $r3;

        $r4 = sArray[0];

        virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: void setItemName(java.lang.String)>($r4);

        $r5 = sArray[1];

        virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: void setSku(java.lang.String)>($r5);

        $r6 = new java.lang.Float;

        $r7 = sArray[2];

        specialinvoke $r6.<java.lang.Float: void <init>(java.lang.String)>($r7);

        $f0 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: void setVendorPrice(float)>($f0);

        $r8 = new java.lang.Integer;

        $r9 = sArray[3];

        specialinvoke $r8.<java.lang.Integer: void <init>(java.lang.String)>($r9);

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: void setVendorInventory(int)>($i1);

        $r10 = sArray[4];

        virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: void setCategory(java.lang.String)>($r10);

        $r11 = sArray[5];

        virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: void setVendor(java.lang.String)>($r11);

        $r12 = this.<berkeley.persist.gettingStarted.ExampleDatabasePut: berkeley.persist.gettingStarted.DataAccessor da>;

        $r13 = $r12.<berkeley.persist.gettingStarted.DataAccessor: berkeley.com.sleepycat.persist.PrimaryIndex inventoryBySku>;

        virtualinvoke $r13.<berkeley.com.sleepycat.persist.PrimaryIndex: java.lang.Object put(java.lang.Object)>(theInventory);

        i#6 = i#6 + 1;

        goto label1;

     label2:
        return;
    }

    private java.util.List loadFile(java.io.File, int)
    {
        berkeley.persist.gettingStarted.ExampleDatabasePut this;
        java.io.File theFile;
        int numFields, $i0, $i1;
        java.util.ArrayList records, $r0;
        java.io.FileInputStream fis, $r1;
        java.io.BufferedReader br, $r2;
        java.lang.String[] theLineArray;
        java.io.InputStreamReader $r3;
        java.lang.String $r4, theLine#14, $r8, $r10, $r15, $r20, $r24, $r27, $r32, $r34;
        java.io.PrintStream $r5, $r11, $r16, $r22, $r29;
        java.lang.StringBuilder $r6, $r7, $r9, $r12, $r13, $r14, $r17, $r18, $r19, $r23, $r25, $r26, $r30, $r31, $r33;
        java.io.FileNotFoundException $r21, e#53;
        java.io.IOException $r28, e#65;

        this := @this: berkeley.persist.gettingStarted.ExampleDatabasePut;

        theFile := @parameter0: java.io.File;

        numFields := @parameter1: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        records = $r0;

     label1:
        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(theFile);

        fis = $r1;

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(fis);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

        br = $r2;

     label2:
        $r4 = virtualinvoke br.<java.io.BufferedReader: java.lang.String readLine()>();

        theLine#14 = $r4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 == null goto label4;

        theLineArray = virtualinvoke theLine#14.<java.lang.String: java.lang.String[] split(java.lang.String)>("#");

        $i0 = lengthof theLineArray;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(numFields);

        if $i0 == numFields goto label3;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed line found in ");

        $r8 = virtualinvoke theFile.<java.io.File: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Line was: \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(theLine#14);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length found was: ");

        $i1 = lengthof theLineArray;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        staticinvoke <java.lang.System: void exit(int)>(-1);

     label3:
        interfaceinvoke records.<java.util.List: boolean add(java.lang.Object)>(theLineArray);

        goto label2;

     label4:
        virtualinvoke fis.<java.io.FileInputStream: void close()>();

     label5:
        goto label8;

     label6:
        $r21 := @caughtexception;

        e#53 = $r21;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke theFile.<java.io.File: java.lang.String getPath()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

        virtualinvoke e#53.<java.io.FileNotFoundException: void printStackTrace()>();

        staticinvoke <berkeley.persist.gettingStarted.ExampleDatabasePut: void usage()>();

        goto label8;

     label7:
        $r28 := @caughtexception;

        e#65 = $r28;

        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO Exception: ");

        $r32 = virtualinvoke e#65.<java.io.IOException: java.lang.String toString()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34);

        virtualinvoke e#65.<java.io.IOException: void printStackTrace()>();

        staticinvoke <java.lang.System: void exit(int)>(-1);

     label8:
        return records;

        catch java.io.FileNotFoundException from label1 to label5 with label6;
        catch java.io.IOException from label1 to label5 with label7;
    }


