    public static byte[] getByteArray(com.sleepycat.je.DatabaseEntry, int)
    {
        com.sleepycat.je.DatabaseEntry entry;
        int maxBytes;
        byte[] $r0;

        entry := @parameter0: com.sleepycat.je.DatabaseEntry;

        maxBytes := @parameter1: int;

        $r0 = staticinvoke <com.sleepycat.util.keyrange.KeyRange: byte[] getByteArrayInternal(com.sleepycat.je.DatabaseEntry,int)>(entry, maxBytes);

        return $r0;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <com.sleepycat.util.keyrange.KeyRange: byte[] ZERO_LENGTH_BYTE_ARRAY> = $r0;

        return;
    }

    private static byte[] getByteArrayInternal(com.sleepycat.je.DatabaseEntry, int)
    {
        com.sleepycat.je.DatabaseEntry entry;
        int maxBytes, size, $i0, $i1;
        byte[] bytes, data#11;

        entry := @parameter0: com.sleepycat.je.DatabaseEntry;

        maxBytes := @parameter1: int;

        bytes = virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytes);

        if bytes != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: int getSize()>();

        size = staticinvoke <java.lang.Math: int min(int,int)>($i0, maxBytes);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        if size != 0 goto label2;

        data#11 = <com.sleepycat.util.keyrange.KeyRange: byte[] ZERO_LENGTH_BYTE_ARRAY>;

        goto label3;

     label2:
        data#11 = newarray (byte)[size];

        $i1 = virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: int getOffset()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(bytes, $i1, data#11, 0, size);

     label3:
        return data#11;
    }

    public void <init>(java.util.Comparator)
    {
        com.sleepycat.util.keyrange.KeyRange this;
        java.util.Comparator comparator;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        comparator := @parameter0: java.util.Comparator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.util.keyrange.KeyRange: java.util.Comparator comparator> = comparator;

        return;
    }

    public static void copy(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.DatabaseEntry 'from', 'to';
        byte[] $r0;

        'from' := @parameter0: com.sleepycat.je.DatabaseEntry;

        'to' := @parameter1: com.sleepycat.je.DatabaseEntry;

        $r0 = staticinvoke <com.sleepycat.util.keyrange.KeyRange: byte[] getByteArray(com.sleepycat.je.DatabaseEntry)>('from');

        virtualinvoke 'to'.<com.sleepycat.je.DatabaseEntry: void setData(byte[])>($r0);

        virtualinvoke 'to'.<com.sleepycat.je.DatabaseEntry: void setOffset(int)>(0);

        return;
    }

    public static byte[] getByteArray(com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.DatabaseEntry entry;
        byte[] $r0;

        entry := @parameter0: com.sleepycat.je.DatabaseEntry;

        $r0 = staticinvoke <com.sleepycat.util.keyrange.KeyRange: byte[] getByteArrayInternal(com.sleepycat.je.DatabaseEntry,int)>(entry, 2147483647);

        return $r0;
    }

    public boolean check(com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.util.keyrange.KeyRange this;
        com.sleepycat.je.DatabaseEntry key, $r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        $z0 = this.<com.sleepycat.util.keyrange.KeyRange: boolean singleKey>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r0 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry beginKey>;

        $i0 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: int compare(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(key, $r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $z2 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: boolean checkBegin(com.sleepycat.je.DatabaseEntry,boolean)>(key, 1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: boolean checkEnd(com.sleepycat.je.DatabaseEntry,boolean)>(key, 1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    public int compare(com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.util.keyrange.KeyRange this;
        com.sleepycat.je.DatabaseEntry key1, key2;
        java.util.Comparator $r0, $r1;
        byte[] $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        key1 := @parameter0: com.sleepycat.je.DatabaseEntry;

        key2 := @parameter1: com.sleepycat.je.DatabaseEntry;

        $r0 = this.<com.sleepycat.util.keyrange.KeyRange: java.util.Comparator comparator>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.util.keyrange.KeyRange: java.util.Comparator comparator>;

        $r2 = staticinvoke <com.sleepycat.util.keyrange.KeyRange: byte[] getByteArray(com.sleepycat.je.DatabaseEntry)>(key1);

        $r3 = staticinvoke <com.sleepycat.util.keyrange.KeyRange: byte[] getByteArray(com.sleepycat.je.DatabaseEntry)>(key2);

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $i0;

     label1:
        $r4 = virtualinvoke key1.<com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i1 = virtualinvoke key1.<com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $i2 = virtualinvoke key1.<com.sleepycat.je.DatabaseEntry: int getSize()>();

        $r5 = virtualinvoke key2.<com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i3 = virtualinvoke key2.<com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $i4 = virtualinvoke key2.<com.sleepycat.je.DatabaseEntry: int getSize()>();

        $i5 = staticinvoke <com.sleepycat.util.keyrange.KeyRange: int compareBytes(byte[],int,int,byte[],int,int)>($r4, $i1, $i2, $r5, $i3, $i4);

        return $i5;
    }

    public boolean checkBegin(com.sleepycat.je.DatabaseEntry, boolean)
    {
        com.sleepycat.util.keyrange.KeyRange this;
        com.sleepycat.je.DatabaseEntry key, $r0, $r1, $r2;
        boolean inclusive, $z0, $z1, $z2;
        int $i0, $i1;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        inclusive := @parameter1: boolean;

        $r0 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry beginKey>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return 1;

     label1:
        $z0 = this.<com.sleepycat.util.keyrange.KeyRange: boolean beginInclusive>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(inclusive);

        if inclusive == 0 goto label4;

        $r1 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry beginKey>;

        $i0 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: int compare(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(key, $r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r2 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry beginKey>;

        $i1 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: int compare(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(key, $r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 < 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public boolean checkEnd(com.sleepycat.je.DatabaseEntry, boolean)
    {
        com.sleepycat.util.keyrange.KeyRange this;
        com.sleepycat.je.DatabaseEntry key, $r0, $r1, $r2;
        boolean inclusive, $z0, $z1, $z2;
        int $i0, $i1;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        inclusive := @parameter1: boolean;

        $r0 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry endKey>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return 1;

     label1:
        $z0 = this.<com.sleepycat.util.keyrange.KeyRange: boolean endInclusive>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(inclusive);

        if inclusive == 0 goto label4;

        $r1 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry endKey>;

        $i0 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: int compare(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(key, $r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 >= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r2 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry endKey>;

        $i1 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: int compare(com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(key, $r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 > 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public static int compareBytes(byte[], int, int, byte[], int, int)
    {
        byte[] data1, data2;
        int offset1, size1, offset2, size2, i#2, $i0, $i2;
        short b1, b2;
        byte $b1, $b3;

        data1 := @parameter0: byte[];

        offset1 := @parameter1: int;

        size1 := @parameter2: int;

        data2 := @parameter3: byte[];

        offset2 := @parameter4: int;

        size2 := @parameter5: int;

        i#2 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size1);

        if i#2 >= size1 goto label4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size2);

        if i#2 >= size2 goto label4;

        $i0 = offset1 + i#2;

        $b1 = data1[$i0];

        b1 = 255 & $b1;

        $i2 = offset2 + i#2;

        $b3 = data2[$i2];

        b2 = 255 & $b3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b2);

        if b1 >= b2 goto label2;

        return -1;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b2);

        if b1 <= b2 goto label3;

        return 1;

     label3:
        i#2 = i#2 + 1;

        goto label1;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size2);

        if size1 >= size2 goto label5;

        return -1;

     label5:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size2);

        if size1 <= size2 goto label6;

        return 1;

     label6:
        return 0;
    }

    public final boolean hasBound()
    {
        com.sleepycat.util.keyrange.KeyRange this;
        com.sleepycat.je.DatabaseEntry $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        $r0 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry endKey>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = this.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry beginKey>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public com.sleepycat.util.keyrange.KeyRange subRange(com.sleepycat.je.DatabaseEntry) throws com.sleepycat.util.keyrange.KeyRangeException
    {
        com.sleepycat.util.keyrange.KeyRange this, range, $r1;
        com.sleepycat.je.DatabaseEntry key;
        boolean $z0;
        com.sleepycat.util.keyrange.KeyRangeException $r0;
        java.util.Comparator $r2;

        this := @this: com.sleepycat.util.keyrange.KeyRange;

        key := @parameter0: com.sleepycat.je.DatabaseEntry;

        $z0 = virtualinvoke this.<com.sleepycat.util.keyrange.KeyRange: boolean check(com.sleepycat.je.DatabaseEntry)>(key);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r0 = new com.sleepycat.util.keyrange.KeyRangeException;

        specialinvoke $r0.<com.sleepycat.util.keyrange.KeyRangeException: void <init>(java.lang.String)>("singleKey out of range");

        throw $r0;

     label1:
        $r1 = new com.sleepycat.util.keyrange.KeyRange;

        $r2 = this.<com.sleepycat.util.keyrange.KeyRange: java.util.Comparator comparator>;

        specialinvoke $r1.<com.sleepycat.util.keyrange.KeyRange: void <init>(java.util.Comparator)>($r2);

        range = $r1;

        range.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry beginKey> = key;

        range.<com.sleepycat.util.keyrange.KeyRange: com.sleepycat.je.DatabaseEntry endKey> = key;

        range.<com.sleepycat.util.keyrange.KeyRange: boolean beginInclusive> = 1;

        range.<com.sleepycat.util.keyrange.KeyRange: boolean endInclusive> = 1;

        range.<com.sleepycat.util.keyrange.KeyRange: boolean singleKey> = 1;

        return range;
    }


