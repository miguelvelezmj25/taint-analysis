    public void clear()
    {
        kanzi.filter.MedianFilter$Histogram this;
        int i#2, i#10, $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: kanzi.filter.MedianFilter$Histogram;

        i#2 = 0;

     label1:
        if i#2 >= 16 goto label2;

        $r0 = this.<kanzi.filter.MedianFilter$Histogram: int[] coarse>;

        $r0[i#2] = 0;

        i#2 = i#2 + 1;

        goto label1;

     label2:
        i#10 = 0;

     label3:
        if i#10 >= 256 goto label4;

        $r1 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $r1[i#10] = 0;

        $r2 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i0 = i#10 + 1;

        $r2[$i0] = 0;

        $r3 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i1 = i#10 + 2;

        $r3[$i1] = 0;

        $r4 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i2 = i#10 + 3;

        $r4[$i2] = 0;

        $r5 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i3 = i#10 + 4;

        $r5[$i3] = 0;

        $r6 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i4 = i#10 + 5;

        $r6[$i4] = 0;

        $r7 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i5 = i#10 + 6;

        $r7[$i5] = 0;

        $r8 = this.<kanzi.filter.MedianFilter$Histogram: int[] fine>;

        $i6 = i#10 + 7;

        $r8[$i6] = 0;

        i#10 = i#10 + 8;

        goto label3;

     label4:
        return;
    }


