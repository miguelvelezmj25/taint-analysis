    public static void main(java.lang.String[])
    {
        java.lang.String[] args, files#42, files#45;
        java.util.HashMap options, $r0;
        java.lang.String arg, toDir, fileSuffix, $r1, $r8, $r11, $r13, $r15, $r17, $r19, $r21, compressor#113, logLevel#123;
        int next, last#4, i#6, $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Object[] $r4;
        java.io.PrintStream $r5, $r6;
        java.lang.Object $r7, $r9, $r10, $r12;
        java.lang.Boolean $r14, $r16, $r18, $r20, $r22, removeGamma#102;
        java.lang.Integer compressionLevel#108, iterations#118;
        com.googlecode.pngtastic.PngtasticOptimizer $r23;

        args := @parameter0: java.lang.String[];

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        options = $r0;

        last#4 = 0;

        i#6 = 0;

     label01:
        $i0 = lengthof args;

        if i#6 >= $i0 goto label04;

        arg = args[i#6];

        $z0 = virtualinvoke arg.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z0 == 0 goto label03;

        next = i#6 + 1;

        $i1 = lengthof args;

        if next >= $i1 goto label02;

        $r1 = args[next];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, $r1);

        last#4 = next + 1;

        goto label03;

     label02:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, null);

        last#4 = next;

     label03:
        i#6 = i#6 + 1;

        goto label01;

     label04:
        $i2 = lengthof args;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#4, $i2);

        files#42 = (java.lang.String[]) $r4;

        files#45 = newarray (java.lang.String)[1];

        files#45[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/instrumented/pngtastic/images/optimizer/1px.png";

        $i3 = lengthof files#45;

        if $i3 != 0 goto label05;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("java -cp pngtastic-x.x.jar com.googlecode.pngtastic.PngtasticOptimizer [options] file1 [file2 ..]\nOptions:\n  --toDir            the directory where optimized files go (will be created if it doesn\'t exist)\n  --fileSuffix       string appended to the optimized files (file.png can become file.png.optimized.png)\n  --removeGamma      remove gamma correction info if found\n  --compressionLevel the compression level; 0-9 allowed (default is to try them all by brute force)\n  --compressor       path to an alternate compressor (e.g. zopfli)\n  --iterations       number of compression iterations (useful for zopfli)\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label05:
        $r7 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        if $r7 != null goto label06;

        $r8 = ".";

        goto label07;

     label06:
        $r9 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        $r8 = (java.lang.String) $r9;

     label07:
        toDir = $r8;

        $r10 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        if $r10 != null goto label08;

        $r11 = "";

        goto label09;

     label08:
        $r12 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        $r11 = (java.lang.String) $r12;

     label09:
        fileSuffix = $r11;

        $r13 = args[0];

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13);

        $z1 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREMOVEGAMMA(boolean)>($z1);

        <com.googlecode.pngtastic.Run: boolean REMOVEGAMMA> = $z2;

        $r15 = args[1];

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15);

        $z3 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSIONLEVEL(boolean)>($z3);

        <com.googlecode.pngtastic.Run: boolean COMPRESSIONLEVEL> = $z4;

        $r17 = args[2];

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r17);

        $z5 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSOR(boolean)>($z5);

        <com.googlecode.pngtastic.Run: boolean COMPRESSOR> = $z6;

        $r19 = args[3];

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r19);

        $z7 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionITERATIONS(boolean)>($z7);

        <com.googlecode.pngtastic.Run: boolean ITERATIONS> = $z8;

        $r21 = args[4];

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r21);

        $z9 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLOGLEVEL(boolean)>($z9);

        <com.googlecode.pngtastic.Run: boolean LOGLEVEL> = $z10;

        $z11 = <com.googlecode.pngtastic.Run: boolean REMOVEGAMMA>;

        if $z11 == 0 goto label10;

        removeGamma#102 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        goto label11;

     label10:
        removeGamma#102 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label11:
        $z12 = <com.googlecode.pngtastic.Run: boolean COMPRESSIONLEVEL>;

        if $z12 == 0 goto label12;

        compressionLevel#108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        goto label13;

     label12:
        compressionLevel#108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label13:
        $z13 = <com.googlecode.pngtastic.Run: boolean COMPRESSOR>;

        if $z13 == 0 goto label14;

        compressor#113 = "zopfli";

        goto label15;

     label14:
        compressor#113 = "none";

     label15:
        $z14 = <com.googlecode.pngtastic.Run: boolean ITERATIONS>;

        if $z14 == 0 goto label16;

        iterations#118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        goto label17;

     label16:
        iterations#118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label17:
        $z15 = <com.googlecode.pngtastic.Run: boolean LOGLEVEL>;

        if $z15 == 0 goto label18;

        logLevel#123 = "debug";

        goto label19;

     label18:
        logLevel#123 = "none";

     label19:
        $r23 = new com.googlecode.pngtastic.PngtasticOptimizer;

        specialinvoke $r23.<com.googlecode.pngtastic.PngtasticOptimizer: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>(toDir, files#45, fileSuffix, removeGamma#102, compressionLevel#108, compressor#113, iterations#118, logLevel#123);

        return;
    }


