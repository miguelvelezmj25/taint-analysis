    public void <init>()
    {
        weka.core.converters.AbstractFileSaver this;

        this := @this: weka.core.converters.AbstractFileSaver;

        specialinvoke this.<weka.core.converters.AbstractSaver: void <init>()>();

        this.<weka.core.converters.AbstractFileSaver: java.lang.String FILE_EXTENSION_COMPRESSED> = ".gz";

        this.<weka.core.converters.AbstractFileSaver: boolean m_useRelativePath> = 0;

        return;
    }

    public void resetOptions()
    {
        weka.core.converters.AbstractFileSaver this;

        this := @this: weka.core.converters.AbstractFileSaver;

        specialinvoke this.<weka.core.converters.AbstractSaver: void resetOptions()>();

        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = null;

        this.<weka.core.converters.AbstractFileSaver: java.io.BufferedWriter m_writer> = null;

        this.<weka.core.converters.AbstractFileSaver: java.lang.String m_prefix> = "";

        this.<weka.core.converters.AbstractFileSaver: java.lang.String m_dir> = "";

        this.<weka.core.converters.AbstractFileSaver: int m_incrementalCounter> = 0;

        return;
    }

    protected void setFileExtension(java.lang.String)
    {
        weka.core.converters.AbstractFileSaver this;
        java.lang.String ext;

        this := @this: weka.core.converters.AbstractFileSaver;

        ext := @parameter0: java.lang.String;

        this.<weka.core.converters.AbstractFileSaver: java.lang.String FILE_EXTENSION> = ext;

        return;
    }

    public void setFile(java.io.File) throws java.io.IOException
    {
        weka.core.converters.AbstractFileSaver this;
        java.io.File outputFile;

        this := @this: weka.core.converters.AbstractFileSaver;

        outputFile := @parameter0: java.io.File;

        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = outputFile;

        virtualinvoke this.<weka.core.converters.AbstractFileSaver: void setDestination(java.io.File)>(outputFile);

        return;
    }

    public void setDestination(java.io.File) throws java.io.IOException
    {
        weka.core.converters.AbstractFileSaver this;
        java.lang.Exception l4, e, ex, $r3, $r9, $r13;
        java.lang.String out, outPath, tempOut#6, $r17, $r20;
        java.io.File dir, file#1, $r4, file#19, $r5, $r7, $r8, $r11;
        java.lang.Throwable l7, $r21;
        boolean success#3, $z0, $z1, $z2, $z4;
        weka.core.Environment $r0, $r1, $r2;
        java.io.IOException $r6, $r14;
        char $c0, $c2;
        int $i1, $i3;
        java.io.FileOutputStream $r10;
        java.io.PrintStream $r12, $r22;
        java.lang.StringBuilder $r15, $r16, $r18, $r19;

        this := @this: weka.core.converters.AbstractFileSaver;

        file#1 := @parameter0: java.io.File;

        success#3 = 0;

        tempOut#6 = virtualinvoke file#1.<java.io.File: java.lang.String getPath()>();

     label01:
        $r0 = this.<weka.core.converters.AbstractFileSaver: weka.core.Environment m_env>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label02;

        $r1 = staticinvoke <weka.core.Environment: weka.core.Environment getSystemWide()>();

        this.<weka.core.converters.AbstractFileSaver: weka.core.Environment m_env> = $r1;

     label02:
        $r2 = this.<weka.core.converters.AbstractFileSaver: weka.core.Environment m_env>;

        tempOut#6 = virtualinvoke $r2.<weka.core.Environment: java.lang.String substitute(java.lang.String)>(tempOut#6);

     label03:
        goto label05;

     label04:
        $r3 := @caughtexception;

        l4 = $r3;

     label05:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(tempOut#6);

        file#19 = $r4;

        out = virtualinvoke file#19.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if $r5 == null goto label22;

     label06:
        $z0 = virtualinvoke file#19.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label07;

        $z1 = virtualinvoke file#19.<java.io.File: boolean delete()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label07;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("File already exists.");

        throw $r6;

     label07:
        $c0 = <java.io.File: char separatorChar>;

        $i1 = virtualinvoke out.<java.lang.String: int lastIndexOf(int)>($c0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 != -1 goto label08;

        success#3 = virtualinvoke file#19.<java.io.File: boolean createNewFile()>();

        goto label10;

     label08:
        $c2 = <java.io.File: char separatorChar>;

        $i3 = virtualinvoke out.<java.lang.String: int lastIndexOf(int)>($c2);

        outPath = virtualinvoke out.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(outPath);

        dir = $r7;

        $z2 = virtualinvoke dir.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label09;

        success#3 = virtualinvoke file#19.<java.io.File: boolean createNewFile()>();

        goto label10;

     label09:
        virtualinvoke dir.<java.io.File: boolean mkdirs()>();

        success#3 = virtualinvoke file#19.<java.io.File: boolean createNewFile()>();

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#3);

        if success#3 == 0 goto label16;

        $z4 = this.<weka.core.converters.AbstractFileSaver: boolean m_useRelativePath>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label14;

     label11:
        $r8 = staticinvoke <weka.core.Utils: java.io.File convertToRelativePath(java.io.File)>(file#19);

        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = $r8;

     label12:
        goto label15;

     label13:
        $r9 := @caughtexception;

        e = $r9;

        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = file#19;

        goto label15;

     label14:
        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = file#19;

     label15:
        $r10 = new java.io.FileOutputStream;

        $r11 = this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile>;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r11);

        virtualinvoke this.<weka.core.converters.AbstractFileSaver: void setDestination(java.io.OutputStream)>($r10);

     label16:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#3);

        if success#3 != 0 goto label22;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Cannot create a new output file. Standard out is used.");

        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = null;

        goto label22;

     label17:
        $r13 := @caughtexception;

     label18:
        ex = $r13;

        $r14 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create a new output file (Reason: ");

        $r17 = virtualinvoke ex.<java.lang.Exception: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Standard out is used.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label19:
        $r21 := @caughtexception;

        l7 = $r21;

     label20:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#3);

        if success#3 != 0 goto label21;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Cannot create a new output file. Standard out is used.");

        this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile> = null;

     label21:
        throw l7;

     label22:
        return;

        catch java.lang.Exception from label01 to label03 with label04;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label06 to label16 with label17;
        catch java.lang.Throwable from label06 to label16 with label19;
        catch java.lang.Throwable from label18 to label20 with label19;
    }

    public void setDestination(java.io.OutputStream) throws java.io.IOException
    {
        weka.core.converters.AbstractFileSaver this;
        java.io.OutputStream output;
        java.io.BufferedWriter $r0;
        java.io.OutputStreamWriter $r1;

        this := @this: weka.core.converters.AbstractFileSaver;

        output := @parameter0: java.io.OutputStream;

        $r0 = new java.io.BufferedWriter;

        $r1 = new java.io.OutputStreamWriter;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(output);

        specialinvoke $r0.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r1);

        this.<weka.core.converters.AbstractFileSaver: java.io.BufferedWriter m_writer> = $r0;

        return;
    }

    public java.io.File retrieveFile()
    {
        weka.core.converters.AbstractFileSaver this;
        java.io.File $r0;

        this := @this: weka.core.converters.AbstractFileSaver;

        $r0 = this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile>;

        return $r0;
    }

    public java.io.BufferedWriter getWriter()
    {
        weka.core.converters.AbstractFileSaver this;
        java.io.BufferedWriter $r0;

        this := @this: weka.core.converters.AbstractFileSaver;

        $r0 = this.<weka.core.converters.AbstractFileSaver: java.io.BufferedWriter m_writer>;

        return $r0;
    }

    public void resetWriter()
    {
        weka.core.converters.AbstractFileSaver this;

        this := @this: weka.core.converters.AbstractFileSaver;

        this.<weka.core.converters.AbstractFileSaver: java.io.BufferedWriter m_writer> = null;

        return;
    }

    public void cancel()
    {
        weka.core.converters.AbstractFileSaver this;
        int $i0;
        java.io.File $r0, $r1, $r2;
        boolean $z0, $z1;
        java.io.PrintStream $r3;

        this := @this: weka.core.converters.AbstractFileSaver;

        $i0 = virtualinvoke this.<weka.core.converters.AbstractFileSaver: int getWriteMode()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 2 goto label2;

        $r0 = this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r2 = this.<weka.core.converters.AbstractFileSaver: java.io.File m_outputFile>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("File deleted.");

     label1:
        virtualinvoke this.<weka.core.converters.AbstractFileSaver: void resetOptions()>();

     label2:
        return;
    }


