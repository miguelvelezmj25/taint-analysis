    static void <clinit>()
    {
        <java.security.AccessControlContext: boolean debugInit> = 0;

        <java.security.AccessControlContext: sun.security.util.Debug debug> = null;

        return;
    }

    java.security.AccessControlContext optimize()
    {
        java.security.AccessControlContext l0, l3#4, l1#11;
        boolean l5, l6, l9, $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.security.ProtectionDomain[] l7, $r0, $r1, $r2, $r6, l8#52, $r7, $r8, $r11, $r12;
        java.security.DomainCombiner l2#2, $r3;
        java.security.Permission[] l4#6;
        sun.security.util.Debug $r4, $r5;
        int $i0;
        java.security.ProtectionDomain $r9, $r10;

        l0 := @this: java.security.AccessControlContext;

        l2#2 = null;

        l3#4 = null;

        l4#6 = null;

        $z0 = l0.<java.security.AccessControlContext: boolean isPrivileged>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        l1#11 = l0.<java.security.AccessControlContext: java.security.AccessControlContext privilegedContext>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1#11);

        if l1#11 == null goto label02;

        $z1 = l1#11.<java.security.AccessControlContext: boolean isWrapped>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        l4#6 = l1#11.<java.security.AccessControlContext: java.security.Permission[] permissions>;

        l3#4 = l1#11.<java.security.AccessControlContext: java.security.AccessControlContext parent>;

        goto label02;

     label01:
        l1#11 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getInheritedAccessControlContext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1#11);

        if l1#11 == null goto label02;

        $z2 = l1#11.<java.security.AccessControlContext: boolean isLimited>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label02;

        l3#4 = l1#11;

     label02:
        $r0 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        l5 = $z3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1#11);

        if l1#11 == null goto label05;

        $r1 = l1#11.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        l6 = $z4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l6 == 0 goto label08;

        $r2 = null;

        goto label09;

     label08:
        $r2 = l1#11.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

     label09:
        l7 = $r2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1#11);

        if l1#11 == null goto label10;

        $z5 = l1#11.<java.security.AccessControlContext: boolean isWrapped>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label11;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#4);

        if l3#4 != null goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        l9 = $z6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1#11);

        if l1#11 == null goto label14;

        $r3 = l1#11.<java.security.AccessControlContext: java.security.DomainCombiner combiner>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label14;

        $r4 = staticinvoke <java.security.AccessControlContext: sun.security.util.Debug getDebug()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 == null goto label13;

        $r5 = <java.security.AccessControlContext: sun.security.util.Debug debug>;

        virtualinvoke $r5.<sun.security.util.Debug: void println(java.lang.String)>("AccessControlContext invoking the Combiner");

     label13:
        l2#2 = l1#11.<java.security.AccessControlContext: java.security.DomainCombiner combiner>;

        $r6 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        l8#52 = interfaceinvoke l2#2.<java.security.DomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>($r6, l7);

        goto label19;

     label14:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5);

        if l5 == 0 goto label16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l6 == 0 goto label15;

        specialinvoke l0.<java.security.AccessControlContext: void calculateFields(java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>(l1#11, l3#4, l4#6);

        return l0;

     label15:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9);

        if l9 == 0 goto label17;

        return l1#11;

     label16:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7);

        if l7 == null goto label17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9);

        if l9 == 0 goto label17;

        $r7 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        $i0 = lengthof $r7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 1 goto label17;

        $r8 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        $r9 = $r8[0];

        $r10 = l7[0];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r9 != $r10 goto label17;

        return l1#11;

     label17:
        $r11 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        l8#52 = staticinvoke <java.security.AccessControlContext: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>($r11, l7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9);

        if l9 == 0 goto label18;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l6 != 0 goto label18;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#52);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7);

        if l8#52 != l7 goto label18;

        return l1#11;

     label18:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l6 == 0 goto label19;

        $r12 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#52);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r12);

        if l8#52 != $r12 goto label19;

        specialinvoke l0.<java.security.AccessControlContext: void calculateFields(java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>(l1#11, l3#4, l4#6);

        return l0;

     label19:
        l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context> = l8#52;

        l0.<java.security.AccessControlContext: java.security.DomainCombiner combiner> = l2#2;

        l0.<java.security.AccessControlContext: boolean isPrivileged> = 0;

        specialinvoke l0.<java.security.AccessControlContext: void calculateFields(java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>(l1#11, l3#4, l4#6);

        return l0;
    }

    private static java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[], java.security.ProtectionDomain[])
    {
        java.security.ProtectionDomain[] l0, l1, l6#20, l7#60;
        boolean l2, l3, $z0, $z1;
        int l4, $i0, $i1, l5#15, $i2, l7#28, l9#36, $i3, $i4, $i5;
        java.security.ProtectionDomain l8, $r0;

        l0 := @parameter0: java.security.ProtectionDomain[];

        l1 := @parameter1: java.security.ProtectionDomain[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l0);

        if l0 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        l2 = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if l1 != null goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        l3 = $z1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2);

        if l2 == 0 goto label05;

        $i0 = 0;

        goto label06;

     label05:
        $i0 = lengthof l0;

     label06:
        l4 = $i0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l3 == 0 goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4);

        if l4 > 2 goto label07;

        return l0;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l3 == 0 goto label08;

        $i1 = 0;

        goto label09;

     label08:
        $i1 = lengthof l1;

     label09:
        l5#15 = $i1;

        $i2 = l4 + l5#15;

        l6#20 = newarray (java.security.ProtectionDomain)[$i2];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l3 != 0 goto label10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l1, 0, l6#20, 0, l5#15);

     label10:
        l7#28 = 0;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#28);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4);

        if l7#28 >= l4 goto label16;

        l8 = l0[l7#28];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8);

        if l8 == null goto label15;

        l9#36 = 0;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9#36);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#15);

        if l9#36 >= l5#15 goto label14;

        $r0 = l6#20[l9#36];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if l8 != $r0 goto label13;

        goto label15;

     label13:
        l9#36 = l9#36 + 1;

        goto label12;

     label14:
        $i3 = l5#15;

        l5#15 = l5#15 + 1;

        l6#20[$i3] = l8;

     label15:
        l7#28 = l7#28 + 1;

        goto label11;

     label16:
        $i4 = lengthof l6#20;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#15);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if l5#15 == $i4 goto label19;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l3 != 0 goto label17;

        $i5 = lengthof l1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#15);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if l5#15 != $i5 goto label17;

        return l1;

     label17:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l3 == 0 goto label18;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#15);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4);

        if l5#15 != l4 goto label18;

        return l0;

     label18:
        l7#60 = newarray (java.security.ProtectionDomain)[l5#15];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l6#20, 0, l7#60, 0, l5#15);

        l6#20 = l7#60;

     label19:
        return l6#20;
    }

    static sun.security.util.Debug getDebug()
    {
        boolean $z0, $z1;
        sun.security.util.Debug $r0, $r1, $r2;

        $z0 = <java.security.AccessControlContext: boolean debugInit>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = <java.security.AccessControlContext: sun.security.util.Debug debug>;

        return $r0;

     label1:
        $z1 = staticinvoke <java.security.Policy: boolean isSet()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r1 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String)>("access");

        <java.security.AccessControlContext: sun.security.util.Debug debug> = $r1;

        <java.security.AccessControlContext: boolean debugInit> = 1;

     label2:
        $r2 = <java.security.AccessControlContext: sun.security.util.Debug debug>;

        return $r2;
    }

    private void calculateFields(java.security.AccessControlContext, java.security.AccessControlContext, java.security.Permission[])
    {
        java.security.AccessControlContext l0, l1, l2;
        java.security.Permission[] l3;
        java.security.ProtectionDomain[] l6, $r0, l4#8, $r1, l5#12, $r2, $r3;
        boolean $z0;

        l0 := @this: java.security.AccessControlContext;

        l1 := @parameter0: java.security.AccessControlContext;

        l2 := @parameter1: java.security.AccessControlContext;

        l3 := @parameter2: java.security.Permission[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2);

        if l2 == null goto label1;

        $r0 = l2.<java.security.AccessControlContext: java.security.ProtectionDomain[] limitedContext>;

        goto label2;

     label1:
        $r0 = null;

     label2:
        l4#8 = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if l1 == null goto label3;

        $r1 = l1.<java.security.AccessControlContext: java.security.ProtectionDomain[] limitedContext>;

        goto label4;

     label3:
        $r1 = null;

     label4:
        l5#12 = $r1;

        l6 = staticinvoke <java.security.AccessControlContext: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>(l4#8, l5#12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l6 == null goto label6;

        $r2 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 == null goto label5;

        $r3 = l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context>;

        $z0 = staticinvoke <java.security.AccessControlContext: boolean containsAllPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>(l6, $r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label6;

     label5:
        l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] limitedContext> = l6;

        l0.<java.security.AccessControlContext: java.security.Permission[] permissions> = l3;

        l0.<java.security.AccessControlContext: java.security.AccessControlContext parent> = l2;

        l0.<java.security.AccessControlContext: boolean isLimited> = 1;

     label6:
        return;
    }

    private static boolean containsAllPDs(java.security.ProtectionDomain[], java.security.ProtectionDomain[])
    {
        java.security.ProtectionDomain[] l0, l1;
        java.security.ProtectionDomain l3, l6, $r0, $r1;
        boolean l2#2, $z0, $z1, $z2;
        int l4#4, $i0, l5#14, $i1, l7#27, $i2;
        java.lang.Class l5#25, $r2;

        l0 := @parameter0: java.security.ProtectionDomain[];

        l1 := @parameter1: java.security.ProtectionDomain[];

        l2#2 = 0;

        l4#4 = 0;

     label01:
        $i0 = lengthof l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if l4#4 >= $i0 goto label12;

        l2#2 = 0;

        $r0 = l0[l4#4];

        l3 = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label06;

        l5#14 = 0;

     label02:
        $i1 = lengthof l1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if l5#14 >= $i1 goto label05;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2#2);

        if l2#2 != 0 goto label05;

        $r1 = l1[l5#14];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        l2#2 = $z0;

        l5#14 = l5#14 + 1;

        goto label02;

     label05:
        goto label10;

     label06:
        l5#25 = virtualinvoke l3.<java.lang.Object: java.lang.Class getClass()>();

        l7#27 = 0;

     label07:
        $i2 = lengthof l1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if l7#27 >= $i2 goto label10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2#2);

        if l2#2 != 0 goto label10;

        l6 = l1[l7#27];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l6 == null goto label08;

        $r2 = virtualinvoke l6.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#25);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if l5#25 != $r2 goto label08;

        $z1 = virtualinvoke l3.<java.lang.Object: boolean equals(java.lang.Object)>(l6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        l2#2 = $z2;

        l7#27 = l7#27 + 1;

        goto label07;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2#2);

        if l2#2 != 0 goto label11;

        return 0;

     label11:
        l4#4 = l4#4 + 1;

        goto label01;

     label12:
        return l2#2;
    }

    void <init>(java.security.ProtectionDomain[], boolean)
    {
        java.security.AccessControlContext l0;
        java.security.ProtectionDomain[] l1;
        boolean l2;

        l0 := @this: java.security.AccessControlContext;

        l1 := @parameter0: java.security.ProtectionDomain[];

        l2 := @parameter1: boolean;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.security.AccessControlContext: boolean isAuthorized> = 0;

        l0.<java.security.AccessControlContext: java.security.DomainCombiner combiner> = null;

        l0.<java.security.AccessControlContext: java.security.ProtectionDomain[] context> = l1;

        l0.<java.security.AccessControlContext: boolean isPrivileged> = l2;

        l0.<java.security.AccessControlContext: boolean isAuthorized> = 1;

        return;
    }


