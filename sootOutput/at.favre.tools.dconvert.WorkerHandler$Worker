    public void <init>(at.favre.tools.dconvert.WorkerHandler, java.io.File, java.lang.Object, at.favre.tools.dconvert.arg.Arguments, at.favre.tools.dconvert.WorkerHandler$InternalCallback)
    {
        at.favre.tools.dconvert.WorkerHandler$Worker this;
        at.favre.tools.dconvert.WorkerHandler l1;
        java.io.File unprocessedFile;
        java.lang.Object processors;
        at.favre.tools.dconvert.arg.Arguments arguments;
        at.favre.tools.dconvert.WorkerHandler$InternalCallback callback;

        this := @this: at.favre.tools.dconvert.WorkerHandler$Worker;

        l1 := @parameter0: at.favre.tools.dconvert.WorkerHandler;

        unprocessedFile := @parameter1: java.io.File;

        processors := @parameter2: java.lang.Object;

        arguments := @parameter3: at.favre.tools.dconvert.arg.Arguments;

        callback := @parameter4: at.favre.tools.dconvert.WorkerHandler$InternalCallback;

        this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.WorkerHandler this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile> = unprocessedFile;

        this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments> = arguments;

        this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor> = processors;

        this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.WorkerHandler$InternalCallback callback> = callback;

        return;
    }

    public void run()
    {
        at.favre.tools.dconvert.WorkerHandler$Worker this;
        at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor mp, $r4;
        at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor pp, $r9;
        at.favre.tools.dconvert.converters.postprocessing.WebpProcessor wp, $r14;
        at.favre.tools.dconvert.converters.AndroidConverter ac, $r22;
        at.favre.tools.dconvert.converters.IOSConverter ic, $r26;
        at.favre.tools.dconvert.converters.Result result#2;
        java.lang.Class $r0, $r17;
        java.lang.Object $r1, $r2, $r7, $r12, $r18, $r21, $r25, $r29, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        at.favre.tools.dconvert.arg.Arguments $r3, $r6, $r8, $r11, $r13, $r16, $r19, $r24, $r28, $r32, $r36;
        java.io.File $r5, $r10, $r15, $r23, $r27, $r31, $r35;
        java.util.Set $r20;
        at.favre.tools.dconvert.converters.WindowsConverter $r30, wc#86;
        at.favre.tools.dconvert.converters.WebConverter $r34, wc#98;
        at.favre.tools.dconvert.WorkerHandler$InternalCallback $r37;

        this := @this: at.favre.tools.dconvert.WorkerHandler$Worker;

        result#2 = null;

        $r0 = class "at/favre/tools/dconvert/converters/postprocessing/IPostProcessor";

        $r1 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r2 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z1 = $r2 instanceof at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r3 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $z2 = $r3.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label7;

        $r4 = new at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor;

        specialinvoke $r4.<at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor: void <init>()>();

        mp = $r4;

        $r5 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r6 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $z3 = $r6.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor>;

        result#2 = virtualinvoke mp.<at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor: at.favre.tools.dconvert.converters.Result process(java.io.File,boolean)>($r5, $z3);

        goto label7;

     label1:
        $r7 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z4 = $r7 instanceof at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label2;

        $r8 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $z5 = $r8.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label7;

        $r9 = new at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor;

        specialinvoke $r9.<at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: void <init>()>();

        pp = $r9;

        $r10 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r11 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $z6 = $r11.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor>;

        result#2 = virtualinvoke pp.<at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: at.favre.tools.dconvert.converters.Result process(java.io.File,boolean)>($r10, $z6);

        goto label7;

     label2:
        $r12 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z7 = $r12 instanceof at.favre.tools.dconvert.converters.postprocessing.WebpProcessor;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label7;

        $r13 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $z8 = $r13.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label7;

        $r14 = new at.favre.tools.dconvert.converters.postprocessing.WebpProcessor;

        specialinvoke $r14.<at.favre.tools.dconvert.converters.postprocessing.WebpProcessor: void <init>()>();

        wp = $r14;

        $r15 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r16 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $z9 = $r16.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor>;

        result#2 = virtualinvoke wp.<at.favre.tools.dconvert.converters.postprocessing.WebpProcessor: at.favre.tools.dconvert.converters.Result process(java.io.File,boolean)>($r15, $z9);

        goto label7;

     label3:
        $r17 = class "at/favre/tools/dconvert/converters/IPlatformConverter";

        $r18 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z10 = virtualinvoke $r17.<java.lang.Class: boolean isInstance(java.lang.Object)>($r18);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label7;

        $r19 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        $r20 = $r19.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r20);

        if $r20 == null goto label7;

        $r21 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z11 = $r21 instanceof at.favre.tools.dconvert.converters.AndroidConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label4;

        $r22 = new at.favre.tools.dconvert.converters.AndroidConverter;

        specialinvoke $r22.<at.favre.tools.dconvert.converters.AndroidConverter: void <init>()>();

        ac = $r22;

        $r23 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r24 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke ac.<at.favre.tools.dconvert.converters.AndroidConverter: at.favre.tools.dconvert.converters.Result convert(java.io.File,at.favre.tools.dconvert.arg.Arguments)>($r23, $r24);

        goto label7;

     label4:
        $r25 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z12 = $r25 instanceof at.favre.tools.dconvert.converters.IOSConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label5;

        $r26 = new at.favre.tools.dconvert.converters.IOSConverter;

        specialinvoke $r26.<at.favre.tools.dconvert.converters.IOSConverter: void <init>()>();

        ic = $r26;

        $r27 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r28 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke ic.<at.favre.tools.dconvert.converters.IOSConverter: at.favre.tools.dconvert.converters.Result convert(java.io.File,at.favre.tools.dconvert.arg.Arguments)>($r27, $r28);

        goto label7;

     label5:
        $r29 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z13 = $r29 instanceof at.favre.tools.dconvert.converters.WindowsConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 == 0 goto label6;

        $r30 = new at.favre.tools.dconvert.converters.WindowsConverter;

        specialinvoke $r30.<at.favre.tools.dconvert.converters.WindowsConverter: void <init>()>();

        wc#86 = $r30;

        $r31 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r32 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke wc#86.<at.favre.tools.dconvert.converters.WindowsConverter: at.favre.tools.dconvert.converters.Result convert(java.io.File,at.favre.tools.dconvert.arg.Arguments)>($r31, $r32);

        goto label7;

     label6:
        $r33 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.lang.Object processor>;

        $z14 = $r33 instanceof at.favre.tools.dconvert.converters.WebConverter;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z14);

        if $z14 == 0 goto label7;

        $r34 = new at.favre.tools.dconvert.converters.WebConverter;

        specialinvoke $r34.<at.favre.tools.dconvert.converters.WebConverter: void <init>()>();

        wc#98 = $r34;

        $r35 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r36 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.arg.Arguments arguments>;

        result#2 = virtualinvoke wc#98.<at.favre.tools.dconvert.converters.WebConverter: at.favre.tools.dconvert.converters.Result convert(java.io.File,at.favre.tools.dconvert.arg.Arguments)>($r35, $r36);

     label7:
        $r37 = this.<at.favre.tools.dconvert.WorkerHandler$Worker: at.favre.tools.dconvert.WorkerHandler$InternalCallback callback>;

        virtualinvoke $r37.<at.favre.tools.dconvert.WorkerHandler$InternalCallback: void onJobFinished(at.favre.tools.dconvert.converters.Result)>(result#2);

        return;
    }


