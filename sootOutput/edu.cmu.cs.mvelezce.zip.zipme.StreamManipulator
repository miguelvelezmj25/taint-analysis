    public void <init>()
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = 0;

        return;
    }

    public final int getAvailableBytes()
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i2 = $i0 - $i1;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i4 = $i3 >> 3;

        $i5 = $i2 + $i4;

        return $i5;
    }

    public void setInput(byte[], int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        byte[] buf;
        int len, end, off#1, $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12;
        java.lang.IllegalStateException $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        byte $b6;
        short $s7;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        len := @parameter2: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end>;

        if $i0 >= $i1 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Old input was not completely processed");

        throw $r0;

     label1:
        end = off#1 + len;

        if 0 > off#1 goto label2;

        if off#1 > end goto label2;

        $i2 = lengthof buf;

        if end <= $i2 goto label3;

     label2:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label3:
        $i3 = len & 1;

        if $i3 == 0 goto label4;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $i5 = off#1;

        off#1 = off#1 + 1;

        $b6 = buf[$i5];

        $s7 = $b6 & 255;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i9 = $s7 << $i8;

        $i10 = $i4 | $i9;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = $i10;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i12 = $i11 + 8;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = $i12;

     label4:
        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: byte[] window> = buf;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = off#1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end> = end;

        return;
    }

    public final boolean needsInput()
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        int $i0, $i1;
        boolean $z0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end>;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void dropBits(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        int n, $i0, $i1, $i2, $i3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        n := @parameter0: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $i1 = $i0 >>> n;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = $i1;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i3 = $i2 - n;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = $i3;

        return;
    }

    public final int peekBits(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        int n, $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        byte[] $r1, $r3;
        byte $b6, $b10;
        short $s7, $s11;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        n := @parameter0: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        if $i0 >= n goto label2;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end>;

        if $i1 != $i2 goto label1;

        return -1;

     label1:
        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: byte[] window>;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i5 = $i4 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = $i5;

        $b6 = $r1[$i4];

        $s7 = $b6 & 255;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: byte[] window>;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i9 = $i8 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = $i9;

        $b10 = $r3[$i8];

        $s11 = $b10 & 255;

        $i12 = $s11 << 8;

        $i13 = $s7 | $i12;

        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i15 = $i13 << $i14;

        $i16 = $i3 | $i15;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = $i16;

        $i17 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i18 = $i17 + 16;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = $i18;

     label2:
        $i19 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $i20 = 1 << n;

        $i21 = $i20 - 1;

        $i22 = $i19 & $i21;

        return $i22;
    }

    public final int getAvailableBits()
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        int $i0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        return $i0;
    }

    public int copyBytes(byte[], int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        byte[] output, $r4, $r6;
        int avail, offset#1, length#2, $i0, $i1, count#15, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i23;
        java.lang.IllegalArgumentException $r0;
        java.lang.IllegalStateException $r1;
        byte $b5, $b21;
        short $s22;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        output := @parameter0: byte[];

        offset#1 := @parameter1: int;

        length#2 := @parameter2: int;

        if length#2 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("length negative");

        throw $r0;

     label1:
        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i1 = $i0 & 7;

        if $i1 == 0 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bit buffer is not aligned!");

        throw $r1;

     label2:
        count#15 = 0;

     label3:
        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        if $i2 <= 0 goto label4;

        if length#2 <= 0 goto label4;

        $i3 = offset#1;

        offset#1 = offset#1 + 1;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $b5 = (byte) $i4;

        output[$i3] = $b5;

        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $i7 = $i6 >>> 8;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = $i7;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i9 = $i8 - 8;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = $i9;

        length#2 = length#2 + -1;

        count#15 = count#15 + 1;

        goto label3;

     label4:
        if length#2 != 0 goto label5;

        return count#15;

     label5:
        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end>;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        avail = $i10 - $i11;

        if length#2 <= avail goto label6;

        length#2 = avail;

     label6:
        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: byte[] window>;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i12, output, offset#1, length#2);

        $i13 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i14 = $i13 + length#2;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = $i14;

        $i15 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i16 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end>;

        $i17 = $i15 - $i16;

        $i18 = $i17 & 1;

        if $i18 == 0 goto label7;

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: byte[] window>;

        $i19 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start>;

        $i20 = $i19 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = $i20;

        $b21 = $r6[$i19];

        $s22 = $b21 & 255;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = $s22;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = 8;

     label7:
        $i23 = count#15 + length#2;

        return $i23;
    }

    public void skipToByteBoundary()
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i2 = $i1 & 7;

        $i3 = $i0 >> $i2;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = $i3;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer>;

        $i5 = $i4 & -8;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = $i5;

        return;
    }

    public void reset()
    {
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int bits_in_buffer> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int buffer> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_end> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int window_start> = 0;

        return;
    }


