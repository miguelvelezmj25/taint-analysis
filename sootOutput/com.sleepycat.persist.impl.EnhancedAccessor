    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r1;
        java.util.Map $r2;
        java.lang.String $r3, $r4;

        $r0 = class "com/sleepycat/persist/impl/EnhancedAccessor";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.persist.impl.EnhancedAccessor: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        <com.sleepycat.persist.impl.EnhancedAccessor: java.util.Map classRegistry> = $r2;

        $r3 = "true";

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("expectEnhanced");

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        <com.sleepycat.persist.impl.EnhancedAccessor: boolean EXPECT_ENHANCED> = $z2;

        return;
    }

    static boolean isEnhanced(java.lang.Class)
    {
        java.lang.Class type;
        boolean enhanced, $z0;
        java.util.Map $r0;
        java.lang.String $r1, $r5, $r8;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;

        type := @parameter0: java.lang.Class;

        $r0 = <com.sleepycat.persist.impl.EnhancedAccessor: java.util.Map classRegistry>;

        $r1 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        enhanced = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(enhanced);

        if enhanced != 0 goto label1;

        $z0 = <com.sleepycat.persist.impl.EnhancedAccessor: boolean EXPECT_ENHANCED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Test was run with expectEnhanced=true but class ");

        $r5 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not enhanced");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        return enhanced;
    }

    void <init>(com.sleepycat.persist.impl.Catalog, java.lang.Class, java.util.List)
    {
        com.sleepycat.persist.impl.EnhancedAccessor this;
        com.sleepycat.persist.impl.Catalog catalog;
        java.lang.Class type;
        java.util.List fieldInfos;
        int nFields, i#9;
        com.sleepycat.persist.impl.Format[] $r0, $r1;
        java.lang.Object $r2;
        com.sleepycat.persist.impl.FieldInfo $r3;
        java.lang.String $r4;
        com.sleepycat.persist.impl.Format $r5;

        this := @this: com.sleepycat.persist.impl.EnhancedAccessor;

        catalog := @parameter0: com.sleepycat.persist.impl.Catalog;

        type := @parameter1: java.lang.Class;

        fieldInfos := @parameter2: java.util.List;

        specialinvoke this.<com.sleepycat.persist.impl.EnhancedAccessor: void <init>(java.lang.Class)>(type);

        nFields = interfaceinvoke fieldInfos.<java.util.List: int size()>();

        $r0 = newarray (com.sleepycat.persist.impl.Format)[nFields];

        this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Format[] compositeKeyFormats> = $r0;

        i#9 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nFields);

        if i#9 >= nFields goto label2;

        $r1 = this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Format[] compositeKeyFormats>;

        $r2 = interfaceinvoke fieldInfos.<java.util.List: java.lang.Object get(int)>(i#9);

        $r3 = (com.sleepycat.persist.impl.FieldInfo) $r2;

        $r4 = virtualinvoke $r3.<com.sleepycat.persist.impl.FieldInfo: java.lang.String getClassName()>();

        $r5 = interfaceinvoke catalog.<com.sleepycat.persist.impl.Catalog: com.sleepycat.persist.impl.Format getFormat(java.lang.String)>($r4);

        $r1[i#9] = $r5;

        i#9 = i#9 + 1;

        goto label1;

     label2:
        return;
    }

    private void <init>(java.lang.Class)
    {
        com.sleepycat.persist.impl.EnhancedAccessor this;
        java.lang.Class type;
        java.util.Map $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.sleepycat.persist.impl.Enhanced $r3, $r4;
        boolean $z0, $z1;
        int $i0;
        java.lang.AssertionError $r5;

        this := @this: com.sleepycat.persist.impl.EnhancedAccessor;

        type := @parameter0: java.lang.Class;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.persist.impl.EnhancedAccessor: java.lang.Class type> = type;

        $r0 = <com.sleepycat.persist.impl.EnhancedAccessor: java.util.Map classRegistry>;

        $r1 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (com.sleepycat.persist.impl.Enhanced) $r2;

        this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Enhanced prototype> = $r3;

        $z0 = <com.sleepycat.persist.impl.EnhancedAccessor: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r4 = this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Enhanced prototype>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 != null goto label1;

        $i0 = virtualinvoke type.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        return;
    }

    public void readCompositeKeyFields(java.lang.Object, com.sleepycat.persist.impl.EntityInput) throws com.sleepycat.persist.impl.RefreshException
    {
        com.sleepycat.persist.impl.EnhancedAccessor this;
        java.lang.Object o;
        com.sleepycat.persist.impl.EntityInput input;
        com.sleepycat.persist.impl.Enhanced $r0;
        com.sleepycat.persist.impl.Format[] $r1;

        this := @this: com.sleepycat.persist.impl.EnhancedAccessor;

        o := @parameter0: java.lang.Object;

        input := @parameter1: com.sleepycat.persist.impl.EntityInput;

        $r0 = (com.sleepycat.persist.impl.Enhanced) o;

        $r1 = this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Format[] compositeKeyFormats>;

        interfaceinvoke $r0.<com.sleepycat.persist.impl.Enhanced: void bdbReadCompositeKeyFields(com.sleepycat.persist.impl.EntityInput,com.sleepycat.persist.impl.Format[])>(input, $r1);

        return;
    }

    public java.lang.Object newInstance()
    {
        com.sleepycat.persist.impl.EnhancedAccessor this;
        com.sleepycat.persist.impl.Enhanced $r0, $r2;
        java.lang.RuntimeException $r1;
        java.lang.Object $r3;

        this := @this: com.sleepycat.persist.impl.EnhancedAccessor;

        $r0 = this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Enhanced prototype>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = staticinvoke <com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState()>();

        throw $r1;

     label1:
        $r2 = this.<com.sleepycat.persist.impl.EnhancedAccessor: com.sleepycat.persist.impl.Enhanced prototype>;

        $r3 = interfaceinvoke $r2.<com.sleepycat.persist.impl.Enhanced: java.lang.Object bdbNewInstance()>();

        return $r3;
    }


