    public static int getStorageSize(com.sleepycat.je.tree.BIN, int)
    {
        com.sleepycat.je.tree.BIN bin;
        int idx, storedKeySize, lastLoggedSize, $i0, $i1, $i2, $i3, $i4, $i5;
        com.sleepycat.je.dbi.DatabaseImpl $r0;
        boolean $z0, $z1;

        bin := @parameter0: com.sleepycat.je.tree.BIN;

        idx := @parameter1: int;

        storedKeySize = virtualinvoke bin.<com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx);

        $r0 = virtualinvoke bin.<com.sleepycat.je.tree.BIN: com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        $z0 = virtualinvoke $r0.<com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>();

        if $z0 == 0 goto label1;

        $i0 = storedKeySize - 1;

        $i1 = $i0 + 12;

        return $i1;

     label1:
        $z1 = virtualinvoke bin.<com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx);

        if $z1 == 0 goto label2;

        $i2 = storedKeySize - 1;

        $i3 = $i2 + 20;

        return $i3;

     label2:
        lastLoggedSize = virtualinvoke bin.<com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx);

        if lastLoggedSize != 0 goto label3;

        return 0;

     label3:
        $i4 = lastLoggedSize + storedKeySize;

        $i5 = $i4 + 14;

        return $i5;
    }


