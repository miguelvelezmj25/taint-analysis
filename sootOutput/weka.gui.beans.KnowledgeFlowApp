    public static void reInitialize()
    {
        staticinvoke <weka.gui.beans.KnowledgeFlowApp: void loadProperties()>();

        staticinvoke <weka.gui.beans.KnowledgeFlowApp: void init()>();

        return;
    }

    public static void disposeSingleton()
    {
        <weka.gui.beans.KnowledgeFlowApp: weka.gui.beans.KnowledgeFlowApp m_knowledgeFlow> = null;

        return;
    }

    static void <clinit>()
    {
        java.util.Vector $r0, $r2;
        weka.core.Memory $r1;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        <weka.gui.beans.KnowledgeFlowApp: java.util.Vector TOOLBARS> = $r0;

        $r1 = new weka.core.Memory;

        specialinvoke $r1.<weka.core.Memory: void <init>(boolean)>(1);

        <weka.gui.beans.KnowledgeFlowApp: weka.core.Memory m_Memory> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        <weka.gui.beans.KnowledgeFlowApp: java.util.Vector s_startupListeners> = $r2;

        return;
    }

    private static void init()
    {
        java.util.TreeMap wrapList, $r6;
        weka.gui.GenericPropertiesCreator creator, $r7;
        java.util.Enumeration en, enm;
        java.lang.String geoKey, beanCompName, toolBarNameAlias, toolBarName, order, rootPackage, wekaAlgs, root, classes, current, standardToolBarNames, tempBarName, toolBarContents, tempBeanName, $r15, $r16, $r21, $r29, $r39, $r42, $r45, $r51, $r53, $r56;
        java.lang.Integer intOrder, key, $r22;
        java.util.Hashtable roots, hpps, $r23;
        weka.gui.HierarchyPropertyParser hpp, $r26;
        java.util.StringTokenizer st, st, st2, $r28, $r44, $r52;
        java.util.Iterator keysetIt;
        java.util.Vector newV, $r5, $r10, newV#45, newV#148, $r34, $r46, $r54;
        weka.core.logging.Logger$Level $r0;
        java.util.List $r1, $r2, $r3, $r4;
        boolean $z0, $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Properties GEOProps#20, $r9, $r11, $r17, $r38, $r43, $r47;
        java.lang.Object $r8, $r24, $r25, $r32, $r33;
        java.lang.StringBuilder $r12, $r13, $r14, $r18, $r19, $r20, $r36, $r37, $r40, $r41, $r48, $r49, $r50;
        int $i0, $i1, $i2, $i3;
        java.util.Set $r31;
        java.lang.Exception $r35, ex#153, $r55, ex#209;

        $r0 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level INFO>;

        staticinvoke <weka.core.logging.Logger: void log(weka.core.logging.Logger$Level,java.lang.String)>($r0, "[KnowledgeFlow] Initializing KF...");

        $r1 = <weka.gui.beans.xml.XMLBeans: java.util.List SUPPRESS_PROPERTY_WARNINGS>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>("visual.iconPath");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        $r2 = <weka.gui.beans.xml.XMLBeans: java.util.List SUPPRESS_PROPERTY_WARNINGS>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("visual.iconPath");

     label01:
        $r3 = <weka.gui.beans.xml.XMLBeans: java.util.List SUPPRESS_PROPERTY_WARNINGS>;

        $z2 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>("visual.animatedIconPath");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label02;

        $r4 = <weka.gui.beans.xml.XMLBeans: java.util.List SUPPRESS_PROPERTY_WARNINGS>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("visual.animatedIconPath");

     label02:
        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        <weka.gui.beans.KnowledgeFlowApp: java.util.Vector TOOLBARS> = $r5;

        $r6 = new java.util.TreeMap;

        specialinvoke $r6.<java.util.TreeMap: void <init>()>();

        wrapList = $r6;

        GEOProps#20 = staticinvoke <weka.gui.GenericPropertiesCreator: java.util.Properties getGlobalOutputProperties()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(GEOProps#20);

        if GEOProps#20 != null goto label04;

        $r7 = new weka.gui.GenericPropertiesCreator;

        specialinvoke $r7.<weka.gui.GenericPropertiesCreator: void <init>()>();

        creator = $r7;

        $z4 = virtualinvoke creator.<weka.gui.GenericPropertiesCreator: boolean useDynamic()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label03;

        virtualinvoke creator.<weka.gui.GenericPropertiesCreator: void execute(boolean)>(0);

        GEOProps#20 = virtualinvoke creator.<weka.gui.GenericPropertiesCreator: java.util.Properties getOutputProperties()>();

        goto label04;

     label03:
        GEOProps#20 = staticinvoke <weka.core.Utils: java.util.Properties readProperties(java.lang.String)>("weka/gui/GenericObjectEditor.props");

     label04:
        en = virtualinvoke GEOProps#20.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label05:
        $z5 = interfaceinvoke en.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label15;

        $r8 = interfaceinvoke en.<java.util.Enumeration: java.lang.Object nextElement()>();

        geoKey = (java.lang.String) $r8;

        $r9 = <weka.gui.beans.BeansProperties: java.util.Properties BEAN_PROPERTIES>;

        beanCompName = virtualinvoke $r9.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(geoKey);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(beanCompName);

        if beanCompName == null goto label14;

        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>()>();

        newV#45 = $r10;

        $r11 = <weka.gui.beans.BeansProperties: java.util.Properties BEAN_PROPERTIES>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(geoKey);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".alias");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        toolBarNameAlias = virtualinvoke $r11.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r15);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(toolBarNameAlias);

        if toolBarNameAlias == null goto label06;

        $r16 = toolBarNameAlias;

        goto label07;

     label06:
        $i0 = virtualinvoke geoKey.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $i2 = virtualinvoke geoKey.<java.lang.String: int length()>();

        $r16 = virtualinvoke geoKey.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

     label07:
        toolBarName = $r16;

        $r17 = <weka.gui.beans.BeansProperties: java.util.Properties BEAN_PROPERTIES>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(geoKey);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".order");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        order = virtualinvoke $r17.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r21);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(order);

        if order == null goto label08;

        $r22 = new java.lang.Integer;

        specialinvoke $r22.<java.lang.Integer: void <init>(java.lang.String)>(order);

        goto label09;

     label08:
        $r22 = new java.lang.Integer;

        specialinvoke $r22.<java.lang.Integer: void <init>(int)>(0);

     label09:
        intOrder = $r22;

        virtualinvoke newV#45.<java.util.Vector: void addElement(java.lang.Object)>(toolBarName);

        virtualinvoke newV#45.<java.util.Vector: void addElement(java.lang.Object)>(beanCompName);

        $i3 = virtualinvoke geoKey.<java.lang.String: int lastIndexOf(int)>(46);

        rootPackage = virtualinvoke geoKey.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        virtualinvoke newV#45.<java.util.Vector: void addElement(java.lang.Object)>(rootPackage);

        wekaAlgs = virtualinvoke GEOProps#20.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(geoKey);

        roots = staticinvoke <weka.gui.GenericObjectEditor: java.util.Hashtable sortClassesByRoot(java.lang.String)>(wekaAlgs);

        $r23 = new java.util.Hashtable;

        specialinvoke $r23.<java.util.Hashtable: void <init>()>();

        hpps = $r23;

        enm = virtualinvoke roots.<java.util.Hashtable: java.util.Enumeration keys()>();

     label10:
        $z6 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label11;

        $r24 = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        root = (java.lang.String) $r24;

        $r25 = virtualinvoke roots.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(root);

        classes = (java.lang.String) $r25;

        $r26 = new weka.gui.HierarchyPropertyParser;

        specialinvoke $r26.<weka.gui.HierarchyPropertyParser: void <init>()>();

        hpp = $r26;

        virtualinvoke hpp.<weka.gui.HierarchyPropertyParser: void build(java.lang.String,java.lang.String)>(classes, ", ");

        virtualinvoke hpps.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(root, hpp);

        goto label10;

     label11:
        virtualinvoke newV#45.<java.util.Vector: void addElement(java.lang.Object)>(hpps);

        $r28 = new java.util.StringTokenizer;

        specialinvoke $r28.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(wekaAlgs, ", ");

        st = $r28;

     label12:
        $z7 = virtualinvoke st.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label13;

        $r29 = virtualinvoke st.<java.util.StringTokenizer: java.lang.String nextToken()>();

        current = virtualinvoke $r29.<java.lang.String: java.lang.String trim()>();

        virtualinvoke newV#45.<java.util.Vector: void addElement(java.lang.Object)>(current);

        goto label12;

     label13:
        virtualinvoke wrapList.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(intOrder, newV#45);

     label14:
        goto label05;

     label15:
        $r31 = virtualinvoke wrapList.<java.util.TreeMap: java.util.Set keySet()>();

        keysetIt = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z8 = interfaceinvoke keysetIt.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label18;

        $r32 = interfaceinvoke keysetIt.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.Integer) $r32;

        $r33 = virtualinvoke wrapList.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(key);

        newV#148 = (java.util.Vector) $r33;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newV#148);

        if newV#148 == null goto label17;

        $r34 = <weka.gui.beans.KnowledgeFlowApp: java.util.Vector TOOLBARS>;

        virtualinvoke $r34.<java.util.Vector: void addElement(java.lang.Object)>(newV#148);

     label17:
        goto label16;

     label18:
        goto label20;

     label19:
        $r35 := @caughtexception;

        ex#153 = $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read a configuration file for the generic objecte editor. An example file is included with the Weka distribution.\nThis file should be named \"GenericObjectEditor.props\" and\nshould be placed either in your user home (which is set\nto \"");

        $r38 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r39 = virtualinvoke $r38.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("user.home");

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")\nor the directory that java was started from\n");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r42, "KnowledgeFlow", 0);

     label20:
        $r43 = <weka.gui.beans.BeansProperties: java.util.Properties BEAN_PROPERTIES>;

        standardToolBarNames = virtualinvoke $r43.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("weka.gui.beans.KnowledgeFlow.standardToolBars");

        $r44 = new java.util.StringTokenizer;

        specialinvoke $r44.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(standardToolBarNames, ", ");

        st = $r44;

     label21:
        $z9 = virtualinvoke st.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label24;

        $r45 = virtualinvoke st.<java.util.StringTokenizer: java.lang.String nextToken()>();

        tempBarName = virtualinvoke $r45.<java.lang.String: java.lang.String trim()>();

        $r46 = new java.util.Vector;

        specialinvoke $r46.<java.util.Vector: void <init>()>();

        newV = $r46;

        virtualinvoke newV.<java.util.Vector: void addElement(java.lang.Object)>(tempBarName);

        virtualinvoke newV.<java.util.Vector: void addElement(java.lang.Object)>("null");

        $r47 = <weka.gui.beans.BeansProperties: java.util.Properties BEAN_PROPERTIES>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weka.gui.beans.KnowledgeFlow.");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tempBarName);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        toolBarContents = virtualinvoke $r47.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r51);

        $r52 = new java.util.StringTokenizer;

        specialinvoke $r52.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(toolBarContents, ", ");

        st2 = $r52;

     label22:
        $z10 = virtualinvoke st2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label23;

        $r53 = virtualinvoke st2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        tempBeanName = virtualinvoke $r53.<java.lang.String: java.lang.String trim()>();

        virtualinvoke newV.<java.util.Vector: void addElement(java.lang.Object)>(tempBeanName);

        goto label22;

     label23:
        $r54 = <weka.gui.beans.KnowledgeFlowApp: java.util.Vector TOOLBARS>;

        virtualinvoke $r54.<java.util.Vector: void addElement(java.lang.Object)>(newV);

        goto label21;

     label24:
        goto label26;

     label25:
        $r55 := @caughtexception;

        ex#209 = $r55;

        $r56 = virtualinvoke ex#209.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r56, "KnowledgeFlow", 0);

     label26:
        return;

        catch java.lang.Exception from label02 to label18 with label19;
        catch java.lang.Exception from label20 to label24 with label25;
    }

    public static synchronized void loadProperties()
    {
        staticinvoke <weka.gui.beans.BeansProperties: void loadProperties()>();

        return;
    }


