    static void <clinit>()
    {
        int $i0, $i1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/txn/LockImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled> = $z1;

        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int LOCKINFO_OVERHEAD>;

        $i1 = 0 - $i0;

        <berkeley.com.sleepycat.je.txn.LockImpl: int REMOVE_LOCKINFO_OVERHEAD> = $i1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.txn.LockImpl)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this, lock;
        berkeley.com.sleepycat.je.txn.LockInfo $r0, $r2;
        java.util.Set $r1;
        java.util.List $r3;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        lock := @parameter0: berkeley.com.sleepycat.je.txn.LockImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = lock.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner>;

        this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner> = $r0;

        $r1 = lock.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet> = $r1;

        $r2 = lock.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter> = $r2;

        $r3 = lock.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList> = $r3;

        return;
    }

    public berkeley.com.sleepycat.je.txn.LockAttemptResult lock(berkeley.com.sleepycat.je.txn.LockType, berkeley.com.sleepycat.je.txn.Locker, boolean, boolean, berkeley.com.sleepycat.je.dbi.MemoryBudget, int)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.LockType requestType, waiterType, $r12, $r19;
        berkeley.com.sleepycat.je.txn.Locker locker, waiterLocker;
        boolean nonBlockingRequest, jumpAheadOfWaiters, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int lockTableIndex, $i0;
        berkeley.com.sleepycat.je.txn.LockInfo newLock, $r1, waiter#32, $r10;
        berkeley.com.sleepycat.je.txn.LockConflict conflict;
        java.lang.AssertionError $r0, $r17;
        berkeley.com.sleepycat.je.txn.LockGrantType grant#20, $r4, $r5, $r6, $r7, $r14, $r15, $r16, $r18;
        java.util.Iterator iter#34;
        java.util.List $r8, $r9;
        java.lang.Object $r11, $r13;
        berkeley.com.sleepycat.je.txn.LockAttemptResult $r20;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        requestType := @parameter0: berkeley.com.sleepycat.je.txn.LockType;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        nonBlockingRequest := @parameter2: boolean;

        jumpAheadOfWaiters := @parameter3: boolean;

        mb := @parameter4: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        lockTableIndex := @parameter5: int;

        $z0 = <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        $z1 = specialinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: boolean validateRequest(berkeley.com.sleepycat.je.txn.Locker)>(locker);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label01;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label01:
        $r1 = new berkeley.com.sleepycat.je.txn.LockInfo;

        specialinvoke $r1.<berkeley.com.sleepycat.je.txn.LockInfo: void <init>(berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType)>(locker, requestType);

        newLock = $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(jumpAheadOfWaiters);

        if jumpAheadOfWaiters != 0 goto label02;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: int nWaiters()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        grant#20 = specialinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockGrantType tryLock(berkeley.com.sleepycat.je.txn.LockInfo,boolean,berkeley.com.sleepycat.je.dbi.MemoryBudget,int)>(newLock, $z2, mb, lockTableIndex);

        $r4 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_NEW>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if grant#20 == $r4 goto label05;

        $r5 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_PROMOTION>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if grant#20 == $r5 goto label05;

        $r6 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_RESTART>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if grant#20 != $r6 goto label17;

     label05:
        $z3 = virtualinvoke requestType.<berkeley.com.sleepycat.je.txn.LockType: boolean getCausesRestart()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label12;

        $r7 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_RESTART>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7);

        if grant#20 == $r7 goto label12;

        waiter#32 = null;

        iter#34 = null;

        $r8 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8);

        if $r8 == null goto label06;

        $r9 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        iter#34 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $r10 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 == null goto label07;

        waiter#32 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        goto label08;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(iter#34);

        if iter#34 == null goto label08;

        $z4 = interfaceinvoke iter#34.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label08;

        $r11 = interfaceinvoke iter#34.<java.util.Iterator: java.lang.Object next()>();

        waiter#32 = (berkeley.com.sleepycat.je.txn.LockInfo) $r11;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(waiter#32);

        if waiter#32 == null goto label12;

        waiterLocker = virtualinvoke waiter#32.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        waiterType = virtualinvoke waiter#32.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.LockType getLockType()>();

        $r12 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType RESTART>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(waiterType);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r12);

        if waiterType == $r12 goto label09;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(waiterLocker);

        if locker == waiterLocker goto label09;

        $z5 = virtualinvoke locker.<berkeley.com.sleepycat.je.txn.Locker: boolean sharesLocksWith(berkeley.com.sleepycat.je.txn.Locker)>(waiterLocker);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label09;

        conflict = virtualinvoke waiterType.<berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockConflict getConflict(berkeley.com.sleepycat.je.txn.LockType)>(requestType);

        $z6 = virtualinvoke conflict.<berkeley.com.sleepycat.je.txn.LockConflict: boolean getRestart()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label09;

        grant#20 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_RESTART>;

        goto label12;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(iter#34);

        if iter#34 == null goto label10;

        $z7 = interfaceinvoke iter#34.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label10;

        $r13 = interfaceinvoke iter#34.<java.util.Iterator: java.lang.Object next()>();

        waiter#32 = (berkeley.com.sleepycat.je.txn.LockInfo) $r13;

        goto label11;

     label10:
        waiter#32 = null;

     label11:
        goto label08;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nonBlockingRequest);

        if nonBlockingRequest == 0 goto label13;

        grant#20 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType DENIED>;

        goto label17;

     label13:
        $r14 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_PROMOTION>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r14);

        if grant#20 != $r14 goto label14;

        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: void addWaiterToHeadOfList(berkeley.com.sleepycat.je.txn.LockInfo,berkeley.com.sleepycat.je.dbi.MemoryBudget,int)>(newLock, mb, lockTableIndex);

        goto label17;

     label14:
        $z8 = <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 != 0 goto label15;

        $r15 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_NEW>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r15);

        if grant#20 == $r15 goto label15;

        $r16 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_RESTART>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r16);

        if grant#20 == $r16 goto label15;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label15:
        $r18 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_RESTART>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(grant#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r18);

        if grant#20 != $r18 goto label16;

        $r19 = <berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockType RESTART>;

        virtualinvoke newLock.<berkeley.com.sleepycat.je.txn.LockInfo: void setLockType(berkeley.com.sleepycat.je.txn.LockType)>($r19);

     label16:
        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: void addWaiterToEndOfList(berkeley.com.sleepycat.je.txn.LockInfo,berkeley.com.sleepycat.je.dbi.MemoryBudget,int)>(newLock, mb, lockTableIndex);

     label17:
        $r20 = new berkeley.com.sleepycat.je.txn.LockAttemptResult;

        specialinvoke $r20.<berkeley.com.sleepycat.je.txn.LockAttemptResult: void <init>(berkeley.com.sleepycat.je.txn.Lock,berkeley.com.sleepycat.je.txn.LockGrantType,boolean)>(this, grant#20, 0);

        return $r20;
    }

    private boolean validateRequest(berkeley.com.sleepycat.je.txn.Locker)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.Locker locker, $r2, $r12;
        java.util.Iterator iter;
        berkeley.com.sleepycat.je.txn.LockInfo o, $r0, $r1;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r3, $r13;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r14, $r15, $r16, $r17;
        java.lang.String $r8, $r18;
        java.util.List $r9, $r10;
        java.lang.Object $r11;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        locker := @parameter0: berkeley.com.sleepycat.je.txn.Locker;

        $r0 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker);

        if $r2 != locker goto label1;

        $z0 = <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locker ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(locker);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already on waiters list.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r3;

     label1:
        $r9 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9);

        if $r9 == null goto label4;

        $r10 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        iter = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (berkeley.com.sleepycat.je.txn.LockInfo) $r11;

        $r12 = virtualinvoke o.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker);

        if $r12 != locker goto label3;

        $z2 = <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label3;

        $r13 = new java.lang.AssertionError;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locker ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(locker);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already on waiters list.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r18);

        throw $r13;

     label3:
        goto label2;

     label4:
        return 1;
    }

    public int nWaiters()
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        int count#2, $i0;
        berkeley.com.sleepycat.je.txn.LockInfo $r0;
        java.util.List $r1, $r2;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        count#2 = 0;

        $r0 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        count#2 = count#2 + 1;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label2;

        $r2 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        count#2 = count#2 + $i0;

     label2:
        return count#2;
    }

    private berkeley.com.sleepycat.je.txn.LockGrantType tryLock(berkeley.com.sleepycat.je.txn.LockInfo, boolean, berkeley.com.sleepycat.je.dbi.MemoryBudget, int)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.LockInfo newLock, lockToUpgrade#15, owner#21, $r3;
        boolean firstWaiterInLine, ownerExists#17, ownerConflicts#19, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int lockTableIndex, $i0;
        berkeley.com.sleepycat.je.txn.Locker locker, ownerLocker;
        berkeley.com.sleepycat.je.txn.LockType requestType, ownerType, upgradeType, $r6;
        berkeley.com.sleepycat.je.txn.LockConflict conflict;
        berkeley.com.sleepycat.je.txn.LockGrantType $r0, $r7, $r8, $r11, $r12, $r13, $r14;
        berkeley.com.sleepycat.je.txn.LockUpgrade upgrade#13;
        java.util.Iterator iter#23;
        java.util.Set $r1, $r2;
        java.lang.Object $r4, $r9;
        java.lang.AssertionError $r5, $r10;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        newLock := @parameter0: berkeley.com.sleepycat.je.txn.LockInfo;

        firstWaiterInLine := @parameter1: boolean;

        mb := @parameter2: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        lockTableIndex := @parameter3: int;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: int nOwners()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label01;

        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: void addOwner(berkeley.com.sleepycat.je.txn.LockInfo,berkeley.com.sleepycat.je.dbi.MemoryBudget,int)>(newLock, mb, lockTableIndex);

        $r0 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType NEW>;

        return $r0;

     label01:
        locker = virtualinvoke newLock.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        requestType = virtualinvoke newLock.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.LockType getLockType()>();

        upgrade#13 = null;

        lockToUpgrade#15 = null;

        ownerExists#17 = 0;

        ownerConflicts#19 = 0;

        owner#21 = null;

        iter#23 = null;

        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label02;

        $r2 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        iter#23 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $r3 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label03;

        owner#21 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner>;

        goto label04;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(iter#23);

        if iter#23 == null goto label04;

        $z0 = interfaceinvoke iter#23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label04;

        $r4 = interfaceinvoke iter#23.<java.util.Iterator: java.lang.Object next()>();

        owner#21 = (berkeley.com.sleepycat.je.txn.LockInfo) $r4;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(owner#21);

        if owner#21 == null goto label13;

        ownerLocker = virtualinvoke owner#21.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        ownerType = virtualinvoke owner#21.<berkeley.com.sleepycat.je.txn.LockInfo: berkeley.com.sleepycat.je.txn.LockType getLockType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(locker);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ownerLocker);

        if locker != ownerLocker goto label07;

        $z1 = <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label05;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(upgrade#13);

        if upgrade#13 == null goto label05;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label05:
        upgrade#13 = virtualinvoke ownerType.<berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockUpgrade getUpgrade(berkeley.com.sleepycat.je.txn.LockType)>(requestType);

        $r6 = virtualinvoke upgrade#13.<berkeley.com.sleepycat.je.txn.LockUpgrade: berkeley.com.sleepycat.je.txn.LockType getUpgrade()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r6 != null goto label06;

        $r7 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType EXISTING>;

        return $r7;

     label06:
        lockToUpgrade#15 = owner#21;

        goto label10;

     label07:
        $z2 = virtualinvoke locker.<berkeley.com.sleepycat.je.txn.Locker: boolean sharesLocksWith(berkeley.com.sleepycat.je.txn.Locker)>(ownerLocker);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label10;

        $z3 = virtualinvoke ownerLocker.<berkeley.com.sleepycat.je.txn.Locker: boolean sharesLocksWith(berkeley.com.sleepycat.je.txn.Locker)>(locker);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label10;

        conflict = virtualinvoke ownerType.<berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockConflict getConflict(berkeley.com.sleepycat.je.txn.LockType)>(requestType);

        $z4 = virtualinvoke conflict.<berkeley.com.sleepycat.je.txn.LockConflict: boolean getRestart()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label08;

        $r8 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_RESTART>;

        return $r8;

     label08:
        $z5 = virtualinvoke conflict.<berkeley.com.sleepycat.je.txn.LockConflict: boolean getAllowed()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label09;

        ownerConflicts#19 = 1;

     label09:
        ownerExists#17 = 1;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(iter#23);

        if iter#23 == null goto label11;

        $z6 = interfaceinvoke iter#23.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label11;

        $r9 = interfaceinvoke iter#23.<java.util.Iterator: java.lang.Object next()>();

        owner#21 = (berkeley.com.sleepycat.je.txn.LockInfo) $r9;

        goto label12;

     label11:
        owner#21 = null;

     label12:
        goto label04;

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(upgrade#13);

        if upgrade#13 == null goto label18;

        upgradeType = virtualinvoke upgrade#13.<berkeley.com.sleepycat.je.txn.LockUpgrade: berkeley.com.sleepycat.je.txn.LockType getUpgrade()>();

        $z7 = <berkeley.com.sleepycat.je.txn.LockImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(upgradeType);

        if upgradeType != null goto label14;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label14:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ownerConflicts#19);

        if ownerConflicts#19 != 0 goto label17;

        virtualinvoke lockToUpgrade#15.<berkeley.com.sleepycat.je.txn.LockInfo: void setLockType(berkeley.com.sleepycat.je.txn.LockType)>(upgradeType);

        $z8 = virtualinvoke upgrade#13.<berkeley.com.sleepycat.je.txn.LockUpgrade: boolean getPromotion()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label15;

        $r11 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType PROMOTION>;

        goto label16;

     label15:
        $r11 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType EXISTING>;

     label16:
        return $r11;

     label17:
        $r12 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_PROMOTION>;

        return $r12;

     label18:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ownerConflicts#19);

        if ownerConflicts#19 != 0 goto label20;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ownerExists#17);

        if ownerExists#17 == 0 goto label19;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(firstWaiterInLine);

        if firstWaiterInLine == 0 goto label20;

     label19:
        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockImpl: void addOwner(berkeley.com.sleepycat.je.txn.LockInfo,berkeley.com.sleepycat.je.dbi.MemoryBudget,int)>(newLock, mb, lockTableIndex);

        $r13 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType NEW>;

        return $r13;

     label20:
        $r14 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType WAIT_NEW>;

        return $r14;
    }

    private void addWaiterToHeadOfList(berkeley.com.sleepycat.je.txn.LockInfo, berkeley.com.sleepycat.je.dbi.MemoryBudget, int)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.LockInfo waiter, $r0, $r4;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int lockTableIndex, $i0;
        java.util.List $r1, $r3;
        java.util.ArrayList $r2;
        long $l1;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        waiter := @parameter0: berkeley.com.sleepycat.je.txn.LockInfo;

        mb := @parameter1: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        lockTableIndex := @parameter2: int;

        $r0 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label2;

        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList> = $r2;

     label1:
        $r3 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        $r4 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, $r4);

     label2:
        this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter> = waiter;

        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int LOCKINFO_OVERHEAD>;

        $l1 = (long) $i0;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateLockMemoryUsage(long,int)>($l1, lockTableIndex);

        return;
    }

    private void addWaiterToEndOfList(berkeley.com.sleepycat.je.txn.LockInfo, berkeley.com.sleepycat.je.dbi.MemoryBudget, int)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.LockInfo waiter, $r1;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int lockTableIndex, $i0;
        java.util.List $r0, $r3, $r4;
        java.util.ArrayList $r2;
        long $l1;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        waiter := @parameter0: berkeley.com.sleepycat.je.txn.LockInfo;

        mb := @parameter1: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        lockTableIndex := @parameter2: int;

        $r0 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label2;

        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label1;

        this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstWaiter> = waiter;

        goto label3;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList> = $r2;

        $r3 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(waiter);

        goto label3;

     label2:
        $r4 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.List waiterList>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(waiter);

     label3:
        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int LOCKINFO_OVERHEAD>;

        $l1 = (long) $i0;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateLockMemoryUsage(long,int)>($l1, lockTableIndex);

        return;
    }

    public int nOwners()
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        int count#2, $i0;
        berkeley.com.sleepycat.je.txn.LockInfo $r0;
        java.util.Set $r1, $r2;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        count#2 = 0;

        $r0 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        count#2 = count#2 + 1;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label2;

        $r2 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        count#2 = count#2 + $i0;

     label2:
        return count#2;
    }

    private void addOwner(berkeley.com.sleepycat.je.txn.LockInfo, berkeley.com.sleepycat.je.dbi.MemoryBudget, int)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.LockInfo newLock, $r0;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int lockTableIndex, $i0;
        java.util.Set $r1, $r3;
        java.util.HashSet $r2;
        long $l1;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        newLock := @parameter0: berkeley.com.sleepycat.je.txn.LockInfo;

        mb := @parameter1: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        lockTableIndex := @parameter2: int;

        $r0 = this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner> = newLock;

        goto label3;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label2;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet> = $r2;

     label2:
        $r3 = this.<berkeley.com.sleepycat.je.txn.LockImpl: java.util.Set ownerSet>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(newLock);

     label3:
        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int LOCKINFO_OVERHEAD>;

        $l1 = (long) $i0;

        virtualinvoke mb.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateLockMemoryUsage(long,int)>($l1, lockTableIndex);

        return;
    }

    void <init>(berkeley.com.sleepycat.je.txn.LockInfo)
    {
        berkeley.com.sleepycat.je.txn.LockImpl this;
        berkeley.com.sleepycat.je.txn.LockInfo firstOwner;

        this := @this: berkeley.com.sleepycat.je.txn.LockImpl;

        firstOwner := @parameter0: berkeley.com.sleepycat.je.txn.LockInfo;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.txn.LockImpl: berkeley.com.sleepycat.je.txn.LockInfo firstOwner> = firstOwner;

        return;
    }


