    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        java.io.OutputStream out;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        out := @parameter0: java.io.OutputStream;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void <init>(java.io.OutputStream,int)>(out, 4096);

        return;
    }

    public void <init>(java.io.OutputStream, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        java.io.OutputStream out;
        int size, mod_time, $i3, $i5, $i7;
        byte[] gzipHeader, $r1;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r0;
        long $l0, $l1;
        byte $b2, $b4, $b6, $b8;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        out := @parameter0: java.io.OutputStream;

        size := @parameter1: int;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.Deflater;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: void <init>(int,boolean)>(-1, 1);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void <init>(java.io.OutputStream,edu.cmu.cs.mvelezce.zip.zipme.Deflater,int)>(out, $r0, size);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l0 / 1000L;

        mod_time = (int) $l1;

        $r1 = newarray (byte)[10];

        $r1[0] = 31;

        $r1[1] = -117;

        $r1[2] = 8;

        $r1[3] = 0;

        $b2 = (byte) mod_time;

        $r1[4] = $b2;

        $i3 = mod_time >> 8;

        $b4 = (byte) $i3;

        $r1[5] = $b4;

        $i5 = mod_time >> 16;

        $b6 = (byte) $i5;

        $r1[6] = $b6;

        $i7 = mod_time >> 24;

        $b8 = (byte) $i7;

        $r1[7] = $b8;

        $r1[8] = 0;

        $r1[9] = -1;

        gzipHeader = $r1;

        virtualinvoke out.<java.io.OutputStream: void write(byte[])>(gzipHeader);

        return;
    }

    public void hook()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook__role__DerivativeCompressGZIPCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook__before__DerivativeCompressGZIPCRC()>();

     label2:
        return;
    }

    public void hook__role__DerivativeCompressGZIPCRC()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc> = $r0;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook__before__DerivativeCompressGZIPCRC()>();

        return;
    }

    public void hook__before__DerivativeCompressGZIPCRC()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        byte[] buf;
        int off, len;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void write(byte[],int,int)>(buf, off, len);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook31(byte[],int,int)>(buf, off, len);

        return;
    }

    public void close() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        java.io.OutputStream $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void finish()>();

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

        return;
    }

    public void finish() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        int totalin, $i1, $i3, $i5;
        byte[] gzipFooter;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r0;
        byte $b0, $b2, $b4, $b6;
        java.io.OutputStream $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void finish()>();

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: edu.cmu.cs.mvelezce.zip.zipme.Deflater def>;

        totalin = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int getTotalIn()>();

        gzipFooter = newarray (byte)[8];

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook2(byte[])>(gzipFooter);

        $b0 = (byte) totalin;

        gzipFooter[4] = $b0;

        $i1 = totalin >> 8;

        $b2 = (byte) $i1;

        gzipFooter[5] = $b2;

        $i3 = totalin >> 16;

        $b4 = (byte) $i3;

        gzipFooter[6] = $b4;

        $i5 = totalin >> 24;

        $b6 = (byte) $i5;

        gzipFooter[7] = $b6;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>(gzipFooter);

        return;
    }

    private void hook2(byte[])
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        byte[] gzipFooter;
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream_hook22 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        gzipFooter := @parameter0: byte[];

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream_hook22;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream_hook22: void <init>(edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream,byte[])>(this, gzipFooter);

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream_hook22: void execute()>();

        return;
    }

    protected void hook31(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        byte[] buf;
        int off, len;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook31__role__DerivativeCompressGZIPCRC(byte[],int,int)>(buf, off, len);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook31__before__DerivativeCompressGZIPCRC(byte[],int,int)>(buf, off, len);

     label2:
        return;
    }

    protected void hook31__role__DerivativeCompressGZIPCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        byte[] buf;
        int off, len;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void update(byte[],int,int)>(buf, off, len);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void hook31__before__DerivativeCompressGZIPCRC(byte[],int,int)>(buf, off, len);

        return;
    }

    protected void hook31__before__DerivativeCompressGZIPCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream this;
        byte[] buf;
        int off, len;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        return;
    }


