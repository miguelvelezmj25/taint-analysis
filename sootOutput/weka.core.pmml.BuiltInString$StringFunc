    static void <clinit>()
    {
        weka.core.pmml.BuiltInString$StringFunc$1 $r0;
        weka.core.pmml.BuiltInString$StringFunc$2 $r1;
        weka.core.pmml.BuiltInString$StringFunc$3 $r2;
        weka.core.pmml.BuiltInString$StringFunc[] $r3;
        weka.core.pmml.BuiltInString$StringFunc $r4, $r5, $r6;

        $r0 = new weka.core.pmml.BuiltInString$StringFunc$1;

        specialinvoke $r0.<weka.core.pmml.BuiltInString$StringFunc$1: void <init>(java.lang.String,int,java.lang.String)>("UPPERCASE", 0, "uppercase");

        <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc UPPERCASE> = $r0;

        $r1 = new weka.core.pmml.BuiltInString$StringFunc$2;

        specialinvoke $r1.<weka.core.pmml.BuiltInString$StringFunc$2: void <init>(java.lang.String,int,java.lang.String)>("SUBSTRING", 1, "substring");

        <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc SUBSTRING> = $r1;

        $r2 = new weka.core.pmml.BuiltInString$StringFunc$3;

        specialinvoke $r2.<weka.core.pmml.BuiltInString$StringFunc$3: void <init>(java.lang.String,int,java.lang.String)>("TRIMBLANKS", 2, "trimBlanks");

        <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc TRIMBLANKS> = $r2;

        $r3 = newarray (weka.core.pmml.BuiltInString$StringFunc)[3];

        $r4 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc UPPERCASE>;

        $r3[0] = $r4;

        $r5 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc SUBSTRING>;

        $r3[1] = $r5;

        $r6 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc TRIMBLANKS>;

        $r3[2] = $r6;

        <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc[] $VALUES> = $r3;

        return;
    }

    void <init>(java.lang.String, int, java.lang.String, weka.core.pmml.BuiltInString$1)
    {
        weka.core.pmml.BuiltInString$StringFunc this;
        java.lang.String x0, x2;
        int x1;
        weka.core.pmml.BuiltInString$1 x3;

        this := @this: weka.core.pmml.BuiltInString$StringFunc;

        x0 := @parameter0: java.lang.String;

        x1 := @parameter1: int;

        x2 := @parameter2: java.lang.String;

        x3 := @parameter3: weka.core.pmml.BuiltInString$1;

        specialinvoke this.<weka.core.pmml.BuiltInString$StringFunc: void <init>(java.lang.String,int,java.lang.String)>(x0, x1, x2);

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        weka.core.pmml.BuiltInString$StringFunc this;
        java.lang.String l1, funcName;
        int l2;

        this := @this: weka.core.pmml.BuiltInString$StringFunc;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        funcName := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<weka.core.pmml.BuiltInString$StringFunc: java.lang.String m_stringVal> = funcName;

        return;
    }

    public java.lang.String toString()
    {
        weka.core.pmml.BuiltInString$StringFunc this;
        java.lang.String $r0;

        this := @this: weka.core.pmml.BuiltInString$StringFunc;

        $r0 = this.<weka.core.pmml.BuiltInString$StringFunc: java.lang.String m_stringVal>;

        return $r0;
    }


