    public static java.util.List multiple(java.util.List)
    {
        java.util.List files;
        java.util.ArrayList inputs, $r0;
        int $i0, i#6, $i1;
        org.unix4j.grep.io.FileInput $r1;
        java.lang.Object $r2;
        java.io.File $r3;

        files := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke files.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        inputs = $r0;

        i#6 = 0;

     label1:
        $i1 = interfaceinvoke files.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if i#6 >= $i1 goto label2;

        $r1 = new org.unix4j.grep.io.FileInput;

        $r2 = interfaceinvoke files.<java.util.List: java.lang.Object get(int)>(i#6);

        $r3 = (java.io.File) $r2;

        specialinvoke $r1.<org.unix4j.grep.io.FileInput: void <init>(java.io.File)>($r3);

        interfaceinvoke inputs.<java.util.List: boolean add(java.lang.Object)>($r1);

        i#6 = i#6 + 1;

        goto label1;

     label2:
        return inputs;
    }

    public static transient java.util.List multiple(java.io.File[])
    {
        java.io.File[] files;
        java.util.ArrayList inputs, $r0;
        int $i0, i#6, $i1;
        org.unix4j.grep.io.FileInput $r1;
        java.io.File $r2;

        files := @parameter0: java.io.File[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof files;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        inputs = $r0;

        i#6 = 0;

     label1:
        $i1 = lengthof files;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if i#6 >= $i1 goto label2;

        $r1 = new org.unix4j.grep.io.FileInput;

        $r2 = files[i#6];

        specialinvoke $r1.<org.unix4j.grep.io.FileInput: void <init>(java.io.File)>($r2);

        interfaceinvoke inputs.<java.util.List: boolean add(java.lang.Object)>($r1);

        i#6 = i#6 + 1;

        goto label1;

     label2:
        return inputs;
    }

    public void <init>(java.io.File)
    {
        org.unix4j.grep.io.FileInput this;
        java.io.File file;
        java.io.FileReader $r0;
        java.lang.String $r1;

        this := @this: org.unix4j.grep.io.FileInput;

        file := @parameter0: java.io.File;

        $r0 = staticinvoke <org.unix4j.grep.io.FileInput: java.io.FileReader createFileReader(java.io.File)>(file);

        specialinvoke this.<org.unix4j.grep.io.ReaderInput: void <init>(java.io.Reader)>($r0);

        $r1 = virtualinvoke file.<java.io.File: java.lang.String toString()>();

        this.<org.unix4j.grep.io.FileInput: java.lang.String fileInfo> = $r1;

        return;
    }

    private static java.io.FileReader createFileReader(java.io.File)
    {
        java.io.File file;
        java.io.FileNotFoundException e, $r1;
        java.io.FileReader $r0;
        java.lang.RuntimeException $r2;

        file := @parameter0: java.io.File;

     label1:
        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.io.File)>(file);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e);

        throw $r2;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }


