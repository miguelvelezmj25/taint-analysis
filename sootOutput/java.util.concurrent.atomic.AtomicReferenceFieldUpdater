    public static java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class, java.lang.Class, java.lang.String)
    {
        java.lang.Class l0, l1, $r1;
        java.lang.String l2;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl $r0;

        l0 := @parameter0: java.lang.Class;

        l1 := @parameter1: java.lang.Class;

        l2 := @parameter2: java.lang.String;

        $r0 = new java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;

        $r1 = staticinvoke <sun.reflect.Reflection: java.lang.Class getCallerClass()>();

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: void <init>(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class)>(l0, l1, "buf", $r1);

        return $r0;
    }

    protected void <init>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater l0;

        l0 := @this: java.util.concurrent.atomic.AtomicReferenceFieldUpdater;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }


