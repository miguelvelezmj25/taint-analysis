    public static int parseDuration(java.lang.String)
    {
        java.lang.String property, $r4;
        long ns, millis;
        byte $b0, $b1, $b2;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i3;

        property := @parameter0: java.lang.String;

        ns = staticinvoke <berkeley.com.sleepycat.je.utilint.PropUtil: long parseDurationNS(java.lang.String)>(property);

        millis = ns / 1000000L;

        $b0 = ns cmp 0L;

        if $b0 <= 0 goto label1;

        $b1 = millis cmp 0L;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        $b2 = millis cmp 2147483647L;

        if $b2 <= 0 goto label2;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration argument may not be greater than Integer.MAX_VALUE milliseconds: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(property);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $i3 = (int) millis;

        return $i3;
    }

    public static long parseDurationNS(java.lang.String)
    {
        java.lang.String property, unitName, $r2, $r4, $r10, $r15, $r23;
        java.util.StringTokenizer tokens, $r0;
        long time, ns#46;
        java.lang.NumberFormatException e, $r5;
        java.util.concurrent.TimeUnit unit, $r16, $r24, $r25;
        java.lang.IllegalArgumentException e, e2, $r3, $r6, $r11, $r17, $r18, $r19;
        berkeley.com.sleepycat.je.utilint.PropUtil$IEEETimeUnit unit;
        java.util.Locale $r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14, $r20, $r21, $r22;
        byte $b0, $b1;

        property := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke property.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, " \t");

        tokens = $r0;

        $z0 = virtualinvoke tokens.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Duration argument is empty");

        throw $r3;

     label01:
        $r4 = virtualinvoke tokens.<java.util.StringTokenizer: java.lang.String nextToken()>();

        time = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

     label02:
        goto label04;

     label03:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration argument does not start with a long integer: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(property);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label04:
        $z1 = virtualinvoke tokens.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label12;

        unitName = virtualinvoke tokens.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke tokens.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label05;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration argument has extra characters after unit: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(property);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label05:
        unit = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(unitName);

        $r16 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        ns#46 = virtualinvoke $r16.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(time, unit);

     label06:
        goto label11;

     label07:
        $r17 := @caughtexception;

     label08:
        unit = staticinvoke <berkeley.com.sleepycat.je.utilint.PropUtil$IEEETimeUnit: berkeley.com.sleepycat.je.utilint.PropUtil$IEEETimeUnit valueOf(java.lang.String)>(unitName);

        ns#46 = virtualinvoke unit.<berkeley.com.sleepycat.je.utilint.PropUtil$IEEETimeUnit: long toNanos(long)>(time);

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration argument has unknown unit name: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(property);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label11:
        goto label13;

     label12:
        $r24 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;

        ns#46 = virtualinvoke $r24.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(time, $r25);

     label13:
        $b0 = time cmp 0L;

        if $b0 <= 0 goto label14;

        $b1 = ns#46 cmp 0L;

        if $b1 != 0 goto label14;

        return 1L;

     label14:
        return ns#46;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
    }


