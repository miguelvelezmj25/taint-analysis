    protected void <init>(org.w3c.dom.Element, weka.core.Instances) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor this;
        org.w3c.dom.Element predictor;
        weka.core.Instances miningSchema;
        weka.core.Attribute temp;
        java.lang.String coeff, $r0, $r1, $r2, $r6, $r8;
        int i#11, $i0, $i1, $i2;
        boolean $z0;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        double $d0;

        this := @this: weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor;

        predictor := @parameter0: org.w3c.dom.Element;

        miningSchema := @parameter1: weka.core.Instances;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: int m_miningSchemaAttIndex> = -1;

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: double m_coefficient> = 1.0;

        $r0 = interfaceinvoke predictor.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: java.lang.String m_name> = $r0;

        i#11 = 0;

     label1:
        $i0 = virtualinvoke miningSchema.<weka.core.Instances: int numAttributes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#11 >= $i0 goto label3;

        temp = virtualinvoke miningSchema.<weka.core.Instances: weka.core.Attribute attribute(int)>(i#11);

        $r1 = virtualinvoke temp.<weka.core.Attribute: java.lang.String name()>();

        $r2 = this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: java.lang.String m_name>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: int m_miningSchemaAttIndex> = i#11;

     label2:
        i#11 = i#11 + 1;

        goto label1;

     label3:
        $i1 = this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: int m_miningSchemaAttIndex>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 != -1 goto label4;

        $r3 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Predictor] unable to find matching attribute for predictor ");

        $r6 = this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: java.lang.String m_name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r8);

        throw $r3;

     label4:
        coeff = interfaceinvoke predictor.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("coefficient");

        $i2 = virtualinvoke coeff.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 <= 0 goto label5;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(coeff);

        this.<weka.classifiers.pmml.consumer.Regression$RegressionTable$Predictor: double m_coefficient> = $d0;

     label5:
        return;
    }


