    public void finish()
    {
        org.unix4j.find.unix.find.FindCommand$1 this;
        org.unix4j.find.util.RelativePathBase base, $r0;
        java.io.FileFilter fileFilter;
        java.util.Iterator l3;
        org.unix4j.find.context.ExecutionContext $r1, $r6;
        java.io.File $r2, path#18, path#23;
        org.unix4j.find.util.RelativePathBase$Settings $r3;
        java.util.List $r4;
        boolean $z0, $z1, keepGoing#39, $z2;
        java.lang.Object $r5;
        org.unix4j.find.processor.LineProcessor $r7, $r14, $r17, $r18;
        org.unix4j.find.line.SimpleLine $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10, $r12;
        org.unix4j.find.unix.find.FindCommand $r11, $r13, $r16;
        org.unix4j.find.unix.find.FindArguments $r15;

        this := @this: org.unix4j.find.unix.find.FindCommand$1;

        $r0 = new org.unix4j.find.util.RelativePathBase;

        $r1 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.context.ExecutionContext val$context>;

        $r2 = interfaceinvoke $r1.<org.unix4j.find.context.ExecutionContext: java.io.File getCurrentDirectory()>();

        $r3 = <org.unix4j.find.util.RelativePathBase: org.unix4j.find.util.RelativePathBase$Settings CHILDREN_WITHOUT_PREFIX>;

        specialinvoke $r0.<org.unix4j.find.util.RelativePathBase: void <init>(java.io.File,org.unix4j.find.util.RelativePathBase$Settings)>($r2, $r3);

        base = $r0;

        fileFilter = specialinvoke this.<org.unix4j.find.unix.find.FindCommand$1: java.io.FileFilter getFileFilterFor(org.unix4j.find.util.RelativePathBase)>(base);

        $r4 = this.<org.unix4j.find.unix.find.FindCommand$1: java.util.List val$paths>;

        l3 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        path#18 = (java.io.File) $r5;

        $r6 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.context.ExecutionContext val$context>;

        path#23 = interfaceinvoke $r6.<org.unix4j.find.context.ExecutionContext: java.io.File getRelativeToCurrentDirectory(java.io.File)>(path#18);

        $z1 = virtualinvoke path#23.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $r7 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.processor.LineProcessor val$output>;

        $r8 = new org.unix4j.find.line.SimpleLine;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = path#23;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("find: `%s\': No such file or directory", $r9);

        $r11 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r12 = staticinvoke <org.unix4j.find.unix.find.FindCommand: java.lang.String access$000(org.unix4j.find.unix.find.FindCommand)>($r11);

        specialinvoke $r8.<org.unix4j.find.line.SimpleLine: void <init>(java.lang.CharSequence,java.lang.CharSequence)>($r10, $r12);

        keepGoing#39 = interfaceinvoke $r7.<org.unix4j.find.processor.LineProcessor: boolean processLine(org.unix4j.find.line.Line)>($r8);

        goto label4;

     label2:
        $z2 = virtualinvoke path#23.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r13 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r14 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.processor.LineProcessor val$output>;

        $r15 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindArguments val$args>;

        keepGoing#39 = staticinvoke <org.unix4j.find.unix.find.FindCommand: boolean access$100(org.unix4j.find.unix.find.FindCommand,java.io.FileFilter,org.unix4j.find.util.RelativePathBase,java.io.File,org.unix4j.find.processor.LineProcessor,org.unix4j.find.unix.find.FindArguments)>($r13, fileFilter, base, path#23, $r14, $r15);

        goto label4;

     label3:
        $r16 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r17 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.processor.LineProcessor val$output>;

        keepGoing#39 = staticinvoke <org.unix4j.find.unix.find.FindCommand: boolean access$200(org.unix4j.find.unix.find.FindCommand,java.io.FileFilter,org.unix4j.find.processor.LineProcessor,org.unix4j.find.util.RelativePathBase,java.io.File)>($r16, fileFilter, $r17, base, path#23);

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keepGoing#39);

        if keepGoing#39 != 0 goto label5;

        goto label6;

     label5:
        goto label1;

     label6:
        $r18 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.processor.LineProcessor val$output>;

        interfaceinvoke $r18.<org.unix4j.find.processor.LineProcessor: void finish()>();

        return;
    }

    private java.io.FileFilter getFileFilterFor(org.unix4j.find.util.RelativePathBase)
    {
        org.unix4j.find.unix.find.FindCommand$1 this;
        org.unix4j.find.util.RelativePathBase base;
        org.unix4j.find.unix.find.CompositeFileFilter compositeFilter, $r4;
        org.unix4j.find.unix.find.FindCommand $r0, $r2, $r5, $r7;
        org.unix4j.find.unix.find.RegexFilter $r1, $r8;
        java.io.FileFilter $r3, $r6, $r9;

        this := @this: org.unix4j.find.unix.find.FindCommand$1;

        base := @parameter0: org.unix4j.find.util.RelativePathBase;

        $r0 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r1 = staticinvoke <org.unix4j.find.unix.find.FindCommand: org.unix4j.find.unix.find.RegexFilter access$300(org.unix4j.find.unix.find.FindCommand)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label1;

        $r2 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r3 = staticinvoke <org.unix4j.find.unix.find.FindCommand: java.io.FileFilter access$400(org.unix4j.find.unix.find.FindCommand)>($r2);

        return $r3;

     label1:
        $r4 = new org.unix4j.find.unix.find.CompositeFileFilter;

        specialinvoke $r4.<org.unix4j.find.unix.find.CompositeFileFilter: void <init>()>();

        compositeFilter = $r4;

        $r5 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r6 = staticinvoke <org.unix4j.find.unix.find.FindCommand: java.io.FileFilter access$400(org.unix4j.find.unix.find.FindCommand)>($r5);

        virtualinvoke compositeFilter.<org.unix4j.find.unix.find.CompositeFileFilter: void add(java.io.FileFilter)>($r6);

        $r7 = this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0>;

        $r8 = staticinvoke <org.unix4j.find.unix.find.FindCommand: org.unix4j.find.unix.find.RegexFilter access$300(org.unix4j.find.unix.find.FindCommand)>($r7);

        $r9 = virtualinvoke $r8.<org.unix4j.find.unix.find.RegexFilter: java.io.FileFilter getRelativePathFilterForBase(org.unix4j.find.util.RelativePathBase)>(base);

        virtualinvoke compositeFilter.<org.unix4j.find.unix.find.CompositeFileFilter: void add(java.io.FileFilter)>($r9);

        return compositeFilter;
    }

    void <init>(org.unix4j.find.unix.find.FindCommand, org.unix4j.find.context.ExecutionContext, java.util.List, org.unix4j.find.processor.LineProcessor, org.unix4j.find.unix.find.FindArguments)
    {
        org.unix4j.find.unix.find.FindCommand$1 this;
        org.unix4j.find.unix.find.FindCommand this$0;
        org.unix4j.find.context.ExecutionContext l2;
        java.util.List l3;
        org.unix4j.find.processor.LineProcessor l4;
        org.unix4j.find.unix.find.FindArguments l5;

        this := @this: org.unix4j.find.unix.find.FindCommand$1;

        this$0 := @parameter0: org.unix4j.find.unix.find.FindCommand;

        l2 := @parameter1: org.unix4j.find.context.ExecutionContext;

        l3 := @parameter2: java.util.List;

        l4 := @parameter3: org.unix4j.find.processor.LineProcessor;

        l5 := @parameter4: org.unix4j.find.unix.find.FindArguments;

        this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindCommand this$0> = this$0;

        this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.context.ExecutionContext val$context> = l2;

        this.<org.unix4j.find.unix.find.FindCommand$1: java.util.List val$paths> = l3;

        this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.processor.LineProcessor val$output> = l4;

        this.<org.unix4j.find.unix.find.FindCommand$1: org.unix4j.find.unix.find.FindArguments val$args> = l5;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


