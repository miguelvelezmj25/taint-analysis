    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.lang.String$CaseInsensitiveComparator $r1;

        $r0 = newarray (java.io.ObjectStreamField)[0];

        <java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        $r1 = new java.lang.String$CaseInsensitiveComparator;

        specialinvoke $r1.<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>(null);

        <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $r1;

        return;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        java.lang.String l0, l1;
        boolean $z0, $z1;
        char[] $r0, $r1, $r2;
        int $i0, $i1, $i2;

        l0 := @this: java.lang.String;

        l1 := @parameter0: java.lang.String;

        if l0 != l1 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        if l1 == null goto label2;

        $r0 = l1.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        $r1 = l0.<java.lang.String: char[] value>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $r2 = l0.<java.lang.String: char[] value>;

        $i2 = lengthof $r2;

        $z1 = virtualinvoke l0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, l1, 0, $i2);

        if $z1 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean regionMatches(boolean, int, java.lang.String, int, int)
    {
        java.lang.String l0, l3;
        boolean l1;
        int l2, l4, l5#1, l7#5, l9#9, $i1, $i7, $i12, $i13, $i14;
        char[] l6, l8, $r0, $r1;
        char l10, l11, l12, l13, $c15, $c16;
        long $l0, $l2, $l3, $l4, $l6, $l8, $l9, $l10;
        byte $b5, $b11;

        l0 := @this: java.lang.String;

        l1 := @parameter0: boolean;

        l2 := @parameter1: int;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: int;

        l5#1 := @parameter4: int;

        l6 = l0.<java.lang.String: char[] value>;

        l7#5 = l2;

        l8 = l3.<java.lang.String: char[] value>;

        l9#9 = l4;

        if l4 < 0 goto label1;

        if l2 < 0 goto label1;

        $l0 = (long) l2;

        $r0 = l0.<java.lang.String: char[] value>;

        $i1 = lengthof $r0;

        $l2 = (long) $i1;

        $l3 = (long) l5#1;

        $l4 = $l2 - $l3;

        $b5 = $l0 cmp $l4;

        if $b5 > 0 goto label1;

        $l6 = (long) l4;

        $r1 = l3.<java.lang.String: char[] value>;

        $i7 = lengthof $r1;

        $l8 = (long) $i7;

        $l9 = (long) l5#1;

        $l10 = $l8 - $l9;

        $b11 = $l6 cmp $l10;

        if $b11 <= 0 goto label2;

     label1:
        return 0;

     label2:
        $i12 = l5#1;

        l5#1 = l5#1 + -1;

        if $i12 <= 0 goto label6;

        $i13 = l7#5;

        l7#5 = l7#5 + 1;

        l10 = l6[$i13];

        $i14 = l9#9;

        l9#9 = l9#9 + 1;

        l11 = l8[$i14];

        if l10 != l11 goto label3;

        goto label2;

     label3:
        if l1 == 0 goto label5;

        l12 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l10);

        l13 = staticinvoke <java.lang.Character: char toUpperCase(char)>(l11);

        if l12 != l13 goto label4;

        goto label2;

     label4:
        $c15 = staticinvoke <java.lang.Character: char toLowerCase(char)>(l12);

        $c16 = staticinvoke <java.lang.Character: char toLowerCase(char)>(l13);

        if $c15 != $c16 goto label5;

        goto label2;

     label5:
        return 0;

     label6:
        return 1;
    }


