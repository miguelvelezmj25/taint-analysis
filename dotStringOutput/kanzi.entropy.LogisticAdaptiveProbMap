digraph <init> {
"this := @this: kanzi.entropy.LogisticAdaptiveProbMap {1535091972}" -> "n := @parameter0: int {295551462}";
"n := @parameter0: int {295551462}" -> "rate := @parameter1: int {328673028}";
"rate := @parameter1: int {328673028}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {794075152}";
"specialinvoke this.<java.lang.Object: void <init>()>() {794075152}" -> "$i0 = n * 33 {1128887490}";
"$i0 = n * 33 {1128887490}" -> "$r0 = newarray (int)[$i0] {1124128831}";
"$r0 = newarray (int)[$i0] {1124128831}" -> "this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> = $r0 {979242049}";
"this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> = $r0 {979242049}" -> "this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> = rate {402976202}";
"this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> = rate {402976202}" -> "j#10 = 0 {1722410355}";
"j#10 = 0 {1722410355}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#10) {1787238321}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#10) {1787238321}" -> "if j#10 > 32 goto i#25 = 1 {1564689878}";
"if j#10 > 32 goto i#25 = 1 {1564689878}" -> "$r1 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1280967562}";
"if j#10 > 32 goto i#25 = 1 {1564689878}" -> "i#25 = 1 {24974818}";
"$r1 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1280967562}" -> "$i1 = j#10 - 16 {1138214562}";
"$i1 = j#10 - 16 {1138214562}" -> "$i2 = $i1 << 7 {1683271581}";
"$i2 = $i1 << 7 {1683271581}" -> "$i3 = staticinvoke <kanzi.Global: int squash(int)>($i2) {380745227}";
"$i3 = staticinvoke <kanzi.Global: int squash(int)>($i2) {380745227}" -> "$i4 = $i3 << 4 {1429281612}";
"$i4 = $i3 << 4 {1429281612}" -> "$r1[j#10] = $i4 {341339696}";
"$r1[j#10] = $i4 {341339696}" -> "j#10 = j#10 + 1 {264409950}";
"j#10 = j#10 + 1 {264409950}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#10)] {284586439}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#10)] {284586439}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#10) {1787238321}";
"i#25 = 1 {24974818}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#25) {496617624}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#25) {496617624}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n) {681140478}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n) {681140478}" -> "if i#25 >= n goto return {51011081}";
"if i#25 >= n goto return {51011081}" -> "$r2 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {2032544950}";
"if i#25 >= n goto return {51011081}" -> "return {1168242687}";
"$r2 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {2032544950}" -> "$r3 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {967947520}";
"$r3 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {967947520}" -> "$i5 = i#25 * 33 {1272716946}";
"$i5 = i#25 * 33 {1272716946}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i5, 33) {397134762}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i5, 33) {397134762}" -> "i#25 = i#25 + 1 {1707516771}";
"i#25 = i#25 + 1 {1707516771}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#25)] {1321540039}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#25)] {1321540039}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#25) {496617624}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n) {681140478}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#25) {496617624}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#10) {1787238321}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph get {
"this := @this: kanzi.entropy.LogisticAdaptiveProbMap {1526738168}" -> "bit := @parameter0: int {250229180}";
"bit := @parameter0: int {250229180}" -> "pr#1 := @parameter1: int {306920472}";
"pr#1 := @parameter1: int {306920472}" -> "ctx := @parameter2: int {784237529}";
"ctx := @parameter2: int {784237529}" -> "$i0 = bit << 16 {2081381348}";
"$i0 = bit << 16 {2081381348}" -> "$i1 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> {1076199014}";
"$i1 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> {1076199014}" -> "$i2 = bit << $i1 {143865749}";
"$i2 = bit << $i1 {143865749}" -> "$i3 = $i0 + $i2 {1553465466}";
"$i3 = $i0 + $i2 {1553465466}" -> "$i4 = bit << 1 {2128204158}";
"$i4 = bit << 1 {2128204158}" -> "g = $i3 - $i4 {1705109321}";
"g = $i3 - $i4 {1705109321}" -> "$r0 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1134795240}";
"$r0 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1134795240}" -> "$i5 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {785742715}";
"$i5 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {785742715}" -> "$i6 = $r0[$i5] {1540913992}";
"$i6 = $r0[$i5] {1540913992}" -> "$r1 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1090792589}";
"$r1 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1090792589}" -> "$i7 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {838081022}";
"$i7 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {838081022}" -> "$i8 = $r1[$i7] {1366567689}";
"$i8 = $r1[$i7] {1366567689}" -> "$i9 = g - $i8 {816705844}";
"$i9 = g - $i8 {816705844}" -> "$i10 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> {354462328}";
"$i10 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> {354462328}" -> "$i11 = $i9 >> $i10 {1711073206}";
"$i11 = $i9 >> $i10 {1711073206}" -> "$i12 = $i6 + $i11 {981962348}";
"$i12 = $i6 + $i11 {981962348}" -> "$r0[$i5] = $i12 {1830640858}";
"$r0[$i5] = $i12 {1830640858}" -> "$r2 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {2143146277}";
"$r2 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {2143146277}" -> "$i13 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {2117315647}";
"$i13 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {2117315647}" -> "$i14 = $i13 + 1 {1621417342}";
"$i14 = $i13 + 1 {1621417342}" -> "$i15 = $r2[$i14] {2104691055}";
"$i15 = $r2[$i14] {2104691055}" -> "$r3 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1358170505}";
"$r3 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {1358170505}" -> "$i16 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {1562342986}";
"$i16 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {1562342986}" -> "$i17 = $i16 + 1 {1116900486}";
"$i17 = $i16 + 1 {1116900486}" -> "$i18 = $r3[$i17] {1679368120}";
"$i18 = $r3[$i17] {1679368120}" -> "$i19 = g - $i18 {1776945539}";
"$i19 = g - $i18 {1776945539}" -> "$i20 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> {96828747}";
"$i20 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int rate> {96828747}" -> "$i21 = $i19 >> $i20 {688739988}";
"$i21 = $i19 >> $i20 {688739988}" -> "$i22 = $i15 + $i21 {278066215}";
"$i22 = $i15 + $i21 {278066215}" -> "$r2[$i14] = $i22 {1785016045}";
"$r2[$i14] = $i22 {1785016045}" -> "$r4 = <kanzi.Global: int[] STRETCH> {1155803599}";
"$r4 = <kanzi.Global: int[] STRETCH> {1155803599}" -> "pr#56 = $r4[pr#1] {1140577687}";
"pr#56 = $r4[pr#1] {1140577687}" -> "$i23 = pr#56 + 2048 {454226403}";
"$i23 = pr#56 + 2048 {454226403}" -> "$i24 = $i23 >> 7 {868812551}";
"$i24 = $i23 >> 7 {868812551}" -> "$i25 = ctx << 5 {1948044133}";
"$i25 = ctx << 5 {1948044133}" -> "$i26 = $i24 + $i25 {253103070}";
"$i26 = $i24 + $i25 {253103070}" -> "$i27 = $i26 + ctx {148105787}";
"$i27 = $i26 + ctx {148105787}" -> "this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> = $i27 {436621223}";
"this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> = $i27 {436621223}" -> "w = pr#56 & 127 {711634358}";
"w = pr#56 & 127 {711634358}" -> "$r5 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {276495909}";
"$r5 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {276495909}" -> "$i28 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {358319370}";
"$i28 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {358319370}" -> "$i29 = $r5[$i28] {1061481863}";
"$i29 = $r5[$i28] {1061481863}" -> "$i30 = 128 - w {1206911300}";
"$i30 = 128 - w {1206911300}" -> "$i31 = $i29 * $i30 {1598088424}";
"$i31 = $i29 * $i30 {1598088424}" -> "$r6 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {971693686}";
"$r6 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int[] data> {971693686}" -> "$i32 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {644402856}";
"$i32 = this.<kanzi.entropy.LogisticAdaptiveProbMap: int index> {644402856}" -> "$i33 = $i32 + 1 {1662765039}";
"$i33 = $i32 + 1 {1662765039}" -> "$i34 = $r6[$i33] {630976464}";
"$i34 = $r6[$i33] {630976464}" -> "$i35 = $i34 * w {610363378}";
"$i35 = $i34 * w {610363378}" -> "$i36 = $i31 + $i35 {427354158}";
"$i36 = $i31 + $i35 {427354158}" -> "$i37 = $i36 >> 11 {355797447}";
"$i37 = $i36 >> 11 {355797447}" -> "return $i37 {985965156}";
}


