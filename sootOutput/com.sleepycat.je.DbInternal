    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        com.sleepycat.je.OperationResult $r1;

        $r0 = class "com/sleepycat/je/DbInternal";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.DbInternal: boolean $assertionsDisabled> = $z1;

        $r1 = new com.sleepycat.je.OperationResult;

        specialinvoke $r1.<com.sleepycat.je.OperationResult: void <init>(long,boolean)>(0L, 0);

        <com.sleepycat.je.DbInternal: com.sleepycat.je.OperationResult DEFAULT_RESULT> = $r1;

        return;
    }

    public static com.sleepycat.je.dbi.EnvironmentImpl getNonNullEnvImpl(com.sleepycat.je.Environment)
    {
        com.sleepycat.je.Environment env;
        com.sleepycat.je.dbi.EnvironmentImpl $r0;

        env := @parameter0: com.sleepycat.je.Environment;

        $r0 = virtualinvoke env.<com.sleepycat.je.Environment: com.sleepycat.je.dbi.EnvironmentImpl getNonNullEnvImpl()>();

        return $r0;
    }

    public static com.sleepycat.je.txn.Txn getTxn(com.sleepycat.je.Transaction)
    {
        com.sleepycat.je.Transaction transaction;
        com.sleepycat.je.txn.Txn $r0;

        transaction := @parameter0: com.sleepycat.je.Transaction;

        $r0 = virtualinvoke transaction.<com.sleepycat.je.Transaction: com.sleepycat.je.txn.Txn getTxn()>();

        return $r0;
    }

    public static java.util.Properties getProps(com.sleepycat.je.EnvironmentMutableConfig)
    {
        com.sleepycat.je.EnvironmentMutableConfig config;
        java.util.Properties $r0;

        config := @parameter0: com.sleepycat.je.EnvironmentMutableConfig;

        $r0 = virtualinvoke config.<com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties getProps()>();

        return $r0;
    }

    public static com.sleepycat.je.ExceptionEvent makeExceptionEvent(java.lang.Exception, java.lang.String)
    {
        java.lang.Exception e;
        java.lang.String n;
        com.sleepycat.je.ExceptionEvent $r0;

        e := @parameter0: java.lang.Exception;

        n := @parameter1: java.lang.String;

        $r0 = new com.sleepycat.je.ExceptionEvent;

        specialinvoke $r0.<com.sleepycat.je.ExceptionEvent: void <init>(java.lang.Exception,java.lang.String)>(e, n);

        return $r0;
    }

    public static void checkImmutablePropsForEquality(com.sleepycat.je.EnvironmentMutableConfig, java.util.Properties) throws java.lang.IllegalArgumentException
    {
        com.sleepycat.je.EnvironmentMutableConfig config;
        java.util.Properties handleConfigProps;

        config := @parameter0: com.sleepycat.je.EnvironmentMutableConfig;

        handleConfigProps := @parameter1: java.util.Properties;

        virtualinvoke config.<com.sleepycat.je.EnvironmentMutableConfig: void checkImmutablePropsForEquality(java.util.Properties)>(handleConfigProps);

        return;
    }

    public static boolean getCreateEP(com.sleepycat.je.EnvironmentConfig)
    {
        com.sleepycat.je.EnvironmentConfig config;
        boolean $z0;

        config := @parameter0: com.sleepycat.je.EnvironmentConfig;

        $z0 = virtualinvoke config.<com.sleepycat.je.EnvironmentConfig: boolean getCreateEP()>();

        return $z0;
    }

    public static boolean getCreateUP(com.sleepycat.je.EnvironmentConfig)
    {
        com.sleepycat.je.EnvironmentConfig config;
        boolean $z0;

        config := @parameter0: com.sleepycat.je.EnvironmentConfig;

        $z0 = virtualinvoke config.<com.sleepycat.je.EnvironmentConfig: boolean getCreateUP()>();

        return $z0;
    }

    public static com.sleepycat.je.dbi.DatabaseImpl getDbImpl(com.sleepycat.je.Database)
    {
        com.sleepycat.je.Database db;
        com.sleepycat.je.dbi.DatabaseImpl $r0;

        db := @parameter0: com.sleepycat.je.Database;

        $r0 = virtualinvoke db.<com.sleepycat.je.Database: com.sleepycat.je.dbi.DatabaseImpl getDbImpl()>();

        return $r0;
    }

    public static com.sleepycat.je.txn.Locker getLocker(com.sleepycat.je.Transaction) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.Transaction txn;
        com.sleepycat.je.txn.Locker $r0;

        txn := @parameter0: com.sleepycat.je.Transaction;

        $r0 = virtualinvoke txn.<com.sleepycat.je.Transaction: com.sleepycat.je.txn.Locker getLocker()>();

        return $r0;
    }

    public static com.sleepycat.je.TransactionConfig getDefaultTxnConfig(com.sleepycat.je.Environment)
    {
        com.sleepycat.je.Environment env;
        com.sleepycat.je.TransactionConfig $r0;

        env := @parameter0: com.sleepycat.je.Environment;

        $r0 = virtualinvoke env.<com.sleepycat.je.Environment: com.sleepycat.je.TransactionConfig getDefaultTxnConfig()>();

        return $r0;
    }

    public static com.sleepycat.je.Environment getEnvironment(com.sleepycat.je.Transaction) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.Transaction txn;
        com.sleepycat.je.Environment $r0;

        txn := @parameter0: com.sleepycat.je.Transaction;

        $r0 = virtualinvoke txn.<com.sleepycat.je.Transaction: com.sleepycat.je.Environment getEnvironment()>();

        return $r0;
    }

    public static void invalidate(com.sleepycat.je.Database)
    {
        com.sleepycat.je.Database db;

        db := @parameter0: com.sleepycat.je.Database;

        virtualinvoke db.<com.sleepycat.je.Database: void invalidate()>();

        return;
    }

    public static com.sleepycat.je.OperationResult makeResult(int, boolean)
    {
        int expiration;
        boolean expirationInHours;
        long $l0;
        com.sleepycat.je.OperationResult $r0;

        expiration := @parameter0: int;

        expirationInHours := @parameter1: boolean;

        $l0 = staticinvoke <com.sleepycat.je.dbi.TTL: long expirationToSystemTime(int,boolean)>(expiration, expirationInHours);

        $r0 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.OperationResult makeResult(long)>($l0);

        return $r0;
    }

    public static com.sleepycat.je.OperationResult makeResult(long)
    {
        long time;
        byte $b0;
        com.sleepycat.je.OperationResult $r0;

        time := @parameter0: long;

        $b0 = time cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label1;

        $r0 = <com.sleepycat.je.DbInternal: com.sleepycat.je.OperationResult DEFAULT_RESULT>;

        goto label2;

     label1:
        $r0 = new com.sleepycat.je.OperationResult;

        specialinvoke $r0.<com.sleepycat.je.OperationResult: void <init>(long,boolean)>(time, 0);

     label2:
        return $r0;
    }

    public static void closeInternalHandle(com.sleepycat.je.Environment)
    {
        com.sleepycat.je.Environment env;

        env := @parameter0: com.sleepycat.je.Environment;

        virtualinvoke env.<com.sleepycat.je.Environment: void closeInternalHandle()>();

        return;
    }

    public static boolean getCheckpointUP(com.sleepycat.je.EnvironmentConfig)
    {
        com.sleepycat.je.EnvironmentConfig config;
        boolean $z0;

        config := @parameter0: com.sleepycat.je.EnvironmentConfig;

        $z0 = virtualinvoke config.<com.sleepycat.je.EnvironmentConfig: boolean getCheckpointUP()>();

        return $z0;
    }

    public static com.sleepycat.je.Cursor makeCursor(com.sleepycat.je.dbi.DatabaseImpl, com.sleepycat.je.txn.Locker, com.sleepycat.je.CursorConfig)
    {
        com.sleepycat.je.dbi.DatabaseImpl databaseImpl;
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.CursorConfig cursorConfig;
        com.sleepycat.je.Cursor cursor, $r0;

        databaseImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        locker := @parameter1: com.sleepycat.je.txn.Locker;

        cursorConfig := @parameter2: com.sleepycat.je.CursorConfig;

        $r0 = new com.sleepycat.je.Cursor;

        specialinvoke $r0.<com.sleepycat.je.Cursor: void <init>(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.CursorConfig,boolean)>(databaseImpl, locker, cursorConfig, 1);

        cursor = $r0;

        virtualinvoke cursor.<com.sleepycat.je.Cursor: void setNonSticky(boolean)>(1);

        return cursor;
    }

    public static com.sleepycat.je.OperationResult makeUpdateResult(int, boolean)
    {
        int expiration;
        boolean expirationInHours;
        com.sleepycat.je.OperationResult $r0;
        long $l0;

        expiration := @parameter0: int;

        expirationInHours := @parameter1: boolean;

        $r0 = new com.sleepycat.je.OperationResult;

        $l0 = staticinvoke <com.sleepycat.je.dbi.TTL: long expirationToSystemTime(int,boolean)>(expiration, expirationInHours);

        specialinvoke $r0.<com.sleepycat.je.OperationResult: void <init>(long,boolean)>($l0, 1);

        return $r0;
    }

    public static void setPreempted(com.sleepycat.je.Database, java.lang.String, java.lang.String)
    {
        com.sleepycat.je.Database db;
        java.lang.String dbName, msg;

        db := @parameter0: com.sleepycat.je.Database;

        dbName := @parameter1: java.lang.String;

        msg := @parameter2: java.lang.String;

        virtualinvoke db.<com.sleepycat.je.Database: void setPreempted(java.lang.String,java.lang.String)>(dbName, msg);

        return;
    }

    public static com.sleepycat.je.ReadOptions getReadOptions(com.sleepycat.je.LockMode)
    {
        com.sleepycat.je.LockMode lockMode#1;
        com.sleepycat.je.ReadOptions $r0;

        lockMode#1 := @parameter0: com.sleepycat.je.LockMode;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lockMode#1);

        if lockMode#1 != null goto label1;

        lockMode#1 = <com.sleepycat.je.LockMode: com.sleepycat.je.LockMode DEFAULT>;

     label1:
        $r0 = virtualinvoke lockMode#1.<com.sleepycat.je.LockMode: com.sleepycat.je.ReadOptions toReadOptions()>();

        return $r0;
    }


