digraph <init> {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {534443690}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1673969969}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1673969969}" -> "$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {65850520}";
"$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {65850520}" -> "$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {1347698262}";
"$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {1347698262}" -> "specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {881996915}";
"specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {881996915}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1891185188}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1891185188}" -> "return {144405186}";
}

digraph scale {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {693450067}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1940477700}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1940477700}" -> "dimensions := @parameter1: java.awt.Dimension {1098122684}";
"dimensions := @parameter1: java.awt.Dimension {1098122684}" -> "algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {2046881165}";
"algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {2046881165}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1158329753}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1158329753}" -> "trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {282040742}";
"trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {282040742}" -> "$i0 = dimensions.<java.awt.Dimension: int width> {1451570795}";
"$i0 = dimensions.<java.awt.Dimension: int width> {1451570795}" -> "$i1 = dimensions.<java.awt.Dimension: int height> {616635110}";
"$i1 = dimensions.<java.awt.Dimension: int height> {616635110}" -> "trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1061674146}";
"trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1061674146}" -> "w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1886299318}";
"w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1886299318}" -> "h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {397467594}";
"h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {397467594}" -> "borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {1406087759}";
"borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {1406087759}" -> "$i2 = w * h {764851278}";
"$i2 = w * h {764851278}" -> "rgbArray#28 = newarray (int)[$i2] {1976801895}";
"rgbArray#28 = newarray (int)[$i2] {1976801895}" -> "virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {1772892575}";
"virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {1772892575}" -> "virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {417984919}";
"virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {417984919}" -> "return borderImage {1755881643}";
}

digraph trim9PBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {589876456}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1293271966}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1293271966}" -> "$r0 = new java.awt.image.BufferedImage {809777741}";
"$r0 = new java.awt.image.BufferedImage {809777741}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1347763059}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1347763059}" -> "$i1 = $i0 - 2 {2131346258}";
"$i1 = $i0 - 2 {2131346258}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1099094914}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1099094914}" -> "$i3 = $i2 - 2 {454809454}";
"$i3 = $i2 - 2 {454809454}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {2138181250}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {2138181250}" -> "trimedImage = $r0 {707616533}";
"trimedImage = $r0 {707616533}" -> "g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1985683175}";
"g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1985683175}" -> "$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {737419591}";
"$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {737419591}" -> "$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {615742314}";
"$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {615742314}" -> "$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {19510761}";
"$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {19510761}" -> "$i7 = $i6 - 1 {1484834502}";
"$i7 = $i6 - 1 {1484834502}" -> "$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1394896639}";
"$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1394896639}" -> "$i9 = $i8 - 1 {415640519}";
"$i9 = $i8 - 1 {415640519}" -> "virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1000299790}";
"virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1000299790}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {443091830}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {443091830}" -> "return trimedImage {1911676716}";
}

digraph generateBordersImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1424902879}" -> "source := @parameter0: java.awt.image.BufferedImage {1225213688}";
"source := @parameter0: java.awt.image.BufferedImage {1225213688}" -> "trimedWidth := @parameter1: int {973485643}";
"trimedWidth := @parameter1: int {973485643}" -> "trimedHeight := @parameter2: int {299024211}";
"trimedHeight := @parameter2: int {299024211}" -> "$r0 = new java.awt.image.BufferedImage {1205177571}";
"$r0 = new java.awt.image.BufferedImage {1205177571}" -> "$i0 = trimedWidth + 2 {899132793}";
"$i0 = trimedWidth + 2 {899132793}" -> "$i1 = trimedHeight + 2 {1935861533}";
"$i1 = trimedHeight + 2 {1935861533}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1616563278}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1616563278}" -> "finalBorder = $r0 {1278342348}";
"finalBorder = $r0 {1278342348}" -> "$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1745789283}";
"$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1745789283}" -> "cutW = $i2 - 2 {1016282831}";
"cutW = $i2 - 2 {1016282831}" -> "$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {1602481263}";
"$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {1602481263}" -> "cutH = $i3 - 2 {1521715265}";
"cutH = $i3 - 2 {1521715265}" -> "$r1 = new java.awt.image.BufferedImage {1529777177}";
"$r1 = new java.awt.image.BufferedImage {1529777177}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {650639411}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {650639411}" -> "leftBorder#23 = $r1 {1542996878}";
"leftBorder#23 = $r1 {1542996878}" -> "$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1008057379}";
"$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1008057379}" -> "virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1037064931}";
"virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1037064931}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {1634979695}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {1634979695}" -> "leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {493234105}";
"leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {493234105}" -> "$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {122436737}";
"$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {122436737}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {795442471}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {795442471}" -> "$r4 = new java.awt.image.BufferedImage {1227351167}";
"$r4 = new java.awt.image.BufferedImage {1227351167}" -> "specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1511903187}";
"specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1511903187}" -> "rightBorder#69 = $r4 {416980255}";
"rightBorder#69 = $r4 {416980255}" -> "$i4 = cutW + 1 {1396901393}";
"$i4 = cutW + 1 {1396901393}" -> "$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {34286387}";
"$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {34286387}" -> "virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1138636077}";
"virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1138636077}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {1019297546}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {1019297546}" -> "rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {871421239}";
"rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {871421239}" -> "$i5 = trimedWidth + 1 {2038692355}";
"$i5 = trimedWidth + 1 {2038692355}" -> "$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1486483954}";
"$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1486483954}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1426340696}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1426340696}" -> "$r7 = new java.awt.image.BufferedImage {1116030571}";
"$r7 = new java.awt.image.BufferedImage {1116030571}" -> "specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1532837536}";
"specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1532837536}" -> "topBorder#119 = $r7 {2120089797}";
"topBorder#119 = $r7 {2120089797}" -> "$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1485486225}";
"$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1485486225}" -> "virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {2083462063}";
"virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {2083462063}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {1029551848}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {1029551848}" -> "topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1824901982}";
"topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1824901982}" -> "$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {693102435}";
"$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {693102435}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {1004871482}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {1004871482}" -> "$r10 = new java.awt.image.BufferedImage {1833407450}";
"$r10 = new java.awt.image.BufferedImage {1833407450}" -> "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1672622985}";
"specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1672622985}" -> "bottomBorder#165 = $r10 {250592777}";
"bottomBorder#165 = $r10 {250592777}" -> "$i6 = cutH + 1 {125663210}";
"$i6 = cutH + 1 {125663210}" -> "$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {467605603}";
"$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {467605603}" -> "virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {334070492}";
"virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {334070492}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {268575146}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {268575146}" -> "bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1171948593}";
"bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1171948593}" -> "$i7 = trimedHeight + 1 {1950209272}";
"$i7 = trimedHeight + 1 {1950209272}" -> "$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {84434305}";
"$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {84434305}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {847772817}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {847772817}" -> "return finalBorder {1272112085}";
}

digraph verifyBorderImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1875415053}" -> "border := @parameter0: java.awt.image.BufferedImage {685489843}";
"border := @parameter0: java.awt.image.BufferedImage {685489843}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1448609739}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1448609739}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {239116994}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {239116994}" -> "$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1748477590}";
"$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1748477590}" -> "rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {775201575}";
"rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {775201575}" -> "i#12 = 0 {455303483}";
"i#12 = 0 {455303483}" -> "$i3 = lengthof rgb {1268321358}";
"$i3 = lengthof rgb {1268321358}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {126241018}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {126241018}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {713793697}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {713793697}" -> "if i#12 >= $i3 goto return {1261672127}";
"if i#12 >= $i3 goto return {1261672127}" -> "$i4 = rgb[i#12] {1331425210}";
"if i#12 >= $i3 goto return {1261672127}" -> "return {1951684927}";
"$i4 = rgb[i#12] {1331425210}" -> "$i5 = -16777216 & $i4 {1173423990}";
"$i5 = -16777216 & $i4 {1173423990}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {724082196}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {724082196}" -> "if $i5 == 0 goto i#12 = i#12 + 1 {1250774238}";
"if $i5 == 0 goto i#12 = i#12 + 1 {1250774238}" -> "$i6 = rgb[i#12] {1599954547}";
"if $i5 == 0 goto i#12 = i#12 + 1 {1250774238}" -> "i#12 = i#12 + 1 {931682912}";
"$i6 = rgb[i#12] {1599954547}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {388452579}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {388452579}" -> "if $i6 == -16777216 goto i#12 = i#12 + 1 {483921945}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {483921945}" -> "$i7 = rgb[i#12] {630915644}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {483921945}" -> "i#12 = i#12 + 1 {931682912}";
"$i7 = rgb[i#12] {630915644}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {181455459}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {181455459}" -> "if $i7 == -65536 goto i#12 = i#12 + 1 {1392742608}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {1392742608}" -> "$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {401604946}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {1392742608}" -> "i#12 = i#12 + 1 {931682912}";
"$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {401604946}" -> "specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1873784218}";
"specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1873784218}" -> "throw $r0 {543503791}";
"i#12 = i#12 + 1 {931682912}" -> "goto [?= $i3 = lengthof rgb] {1720052488}";
"goto [?= $i3 = lengthof rgb] {1720052488}" -> "$i3 = lengthof rgb {1268321358}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {181455459}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {126241018}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {724082196}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {713793697}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {388452579}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph resizeBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1622226888}" -> "border := @parameter0: java.awt.image.BufferedImage {614250521}";
"border := @parameter0: java.awt.image.BufferedImage {614250521}" -> "targetWidth := @parameter1: int {2116477188}";
"targetWidth := @parameter1: int {2116477188}" -> "targetHeight := @parameter2: int {1258215620}";
"targetHeight := @parameter2: int {1258215620}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1604320489}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1604320489}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {197026585}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {197026585}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {742085431}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {742085431}" -> "if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1316732422}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1316732422}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1949866004}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1316732422}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1085995654}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1949866004}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1228085964}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1228085964}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {2093435528}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {2093435528}" -> "if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1738576667}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1738576667}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1085995654}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1738576667}" -> "w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {2080831041}";
"$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1085995654}" -> "endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {544652995}";
"endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {544652995}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {379758153}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {379758153}" -> "return endImage {947826639}";
"w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {2080831041}" -> "h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1192365111}";
"h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1192365111}" -> "data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {1866778638}";
"data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {1866778638}" -> "$i2 = targetWidth * targetHeight {786427839}";
"$i2 = targetWidth * targetHeight {786427839}" -> "newData = newarray (int)[$i2] {1893547348}";
"newData = newarray (int)[$i2] {1893547348}" -> "$i3 = targetWidth - 1 {1800385880}";
"$i3 = targetWidth - 1 {1800385880}" -> "$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {665660413}";
"$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {665660413}" -> "$f0 = (float) $i4 {209651214}";
"$f0 = (float) $i4 {209651214}" -> "$i5 = w - 1 {784109049}";
"$i5 = w - 1 {784109049}" -> "$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {617114701}";
"$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {617114701}" -> "$f1 = (float) $i6 {1101755915}";
"$f1 = (float) $i6 {1101755915}" -> "widthRatio = $f0 / $f1 {185980513}";
"widthRatio = $f0 / $f1 {185980513}" -> "$i7 = targetHeight - 1 {572815135}";
"$i7 = targetHeight - 1 {572815135}" -> "$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {823446772}";
"$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {823446772}" -> "$f2 = (float) $i8 {1273223606}";
"$f2 = (float) $i8 {1273223606}" -> "$i9 = h - 1 {1658689765}";
"$i9 = h - 1 {1658689765}" -> "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {201237212}";
"$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {201237212}" -> "$f3 = (float) $i10 {842014000}";
"$f3 = (float) $i10 {842014000}" -> "heightRatio = $f2 / $f3 {1133407520}";
"heightRatio = $f2 / $f3 {1133407520}" -> "y#60 = 0 {322082533}";
"y#60 = 0 {322082533}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {2098190598}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {2098190598}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1004162853}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1004162853}" -> "if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {515493444}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {515493444}" -> "x#64 = 0 {1413355597}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {515493444}" -> "$r1 = new java.awt.image.BufferedImage {792972343}";
"x#64 = 0 {1413355597}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1124353516}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1124353516}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {902825040}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {902825040}" -> "if x#64 >= w goto y#60 = y#60 + 1 {1208325496}";
"if x#64 >= w goto y#60 = y#60 + 1 {1208325496}" -> "$i11 = y#60 * w {323451451}";
"if x#64 >= w goto y#60 = y#60 + 1 {1208325496}" -> "y#60 = y#60 + 1 {1769847634}";
"$i11 = y#60 * w {323451451}" -> "$i12 = $i11 + x#64 {1744347481}";
"$i12 = $i11 + x#64 {1744347481}" -> "$i13 = data[$i12] {350911412}";
"$i13 = data[$i12] {350911412}" -> "$i14 = -16777216 & $i13 {1020546480}";
"$i14 = -16777216 & $i13 {1020546480}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1161581530}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1161581530}" -> "if $i14 == 0 goto x#64 = x#64 + 1 {1433495666}";
"if $i14 == 0 goto x#64 = x#64 + 1 {1433495666}" -> "$f4 = (float) x#64 {810617703}";
"if $i14 == 0 goto x#64 = x#64 + 1 {1433495666}" -> "x#64 = x#64 + 1 {1418620627}";
"$f4 = (float) x#64 {810617703}" -> "$f5 = $f4 * widthRatio {1889187396}";
"$f5 = $f4 * widthRatio {1889187396}" -> "$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {143417138}";
"$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {143417138}" -> "$i16 = targetWidth - 1 {135269880}";
"$i16 = targetWidth - 1 {135269880}" -> "newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {1637884704}";
"newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {1637884704}" -> "$f6 = (float) y#60 {1987522946}";
"$f6 = (float) y#60 {1987522946}" -> "$f7 = $f6 * heightRatio {2081089579}";
"$f7 = $f6 * heightRatio {2081089579}" -> "$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {702630942}";
"$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {702630942}" -> "$i18 = targetHeight - 1 {1257035698}";
"$i18 = targetHeight - 1 {1257035698}" -> "newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {591480063}";
"newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {591480063}" -> "$i19 = newY * targetWidth {1918708206}";
"$i19 = newY * targetWidth {1918708206}" -> "$i20 = $i19 + newX {1051351333}";
"$i20 = $i19 + newX {1051351333}" -> "$i21 = y#60 * w {1629219960}";
"$i21 = y#60 * w {1629219960}" -> "$i22 = $i21 + x#64 {820779924}";
"$i22 = $i21 + x#64 {820779924}" -> "$i23 = data[$i22] {439286280}";
"$i23 = data[$i22] {439286280}" -> "newData[$i20] = $i23 {619232537}";
"newData[$i20] = $i23 {619232537}" -> "x#64 = x#64 + 1 {1418620627}";
"x#64 = x#64 + 1 {1418620627}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {74383213}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {74383213}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1124353516}";
"y#60 = y#60 + 1 {1769847634}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {136106769}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {136106769}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {2098190598}";
"$r1 = new java.awt.image.BufferedImage {792972343}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {1970394917}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {1970394917}" -> "img = $r1 {1291916970}";
"img = $r1 {1291916970}" -> "virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1639289990}";
"virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1639289990}" -> "return img {1761397474}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1228085964}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {742085431}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1004162853}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {2093435528}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {902825040}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {2098190598}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1161581530}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {1124353516}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {197026585}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph enforceBorderColors {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1808847812}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {439237761}";
"inputImage := @parameter0: java.awt.image.BufferedImage {439237761}" -> "g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1373097362}";
"g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1373097362}" -> "$r0 = new java.awt.Color {1771842535}";
"$r0 = new java.awt.Color {1771842535}" -> "specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {710894717}";
"specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {710894717}" -> "virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {660893396}";
"virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {660893396}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {2114124405}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {2114124405}" -> "$i1 = $i0 - 2 {1075095669}";
"$i1 = $i0 - 2 {1075095669}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {2000305642}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {2000305642}" -> "$i3 = $i2 - 2 {327351010}";
"$i3 = $i2 - 2 {327351010}" -> "virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {417585114}";
"virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {417585114}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {1305078377}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {1305078377}" -> "w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1888761441}";
"w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1888761441}" -> "h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1868794093}";
"h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1868794093}" -> "$i4 = w * h {1112944888}";
"$i4 = w * h {1112944888}" -> "rgb = newarray (int)[$i4] {2036541974}";
"rgb = newarray (int)[$i4] {2036541974}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1469383957}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1469383957}" -> "i#40 = 0 {1922357678}";
"i#40 = 0 {1922357678}" -> "$i5 = lengthof rgb {1470372855}";
"$i5 = lengthof rgb {1470372855}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1600056965}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1600056965}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1041562535}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1041562535}" -> "if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {53076228}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {53076228}" -> "$i6 = rgb[i#40] {948344665}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {53076228}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {424640507}";
"$i6 = rgb[i#40] {948344665}" -> "$i7 = -16777216 & $i6 {500047330}";
"$i7 = -16777216 & $i6 {500047330}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {907291653}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {907291653}" -> "if $i7 == 0 goto i#40 = i#40 + 1 {597596571}";
"if $i7 == 0 goto i#40 = i#40 + 1 {597596571}" -> "rgb[i#40] = -16777216 {980131600}";
"if $i7 == 0 goto i#40 = i#40 + 1 {597596571}" -> "i#40 = i#40 + 1 {547061210}";
"rgb[i#40] = -16777216 {980131600}" -> "i#40 = i#40 + 1 {547061210}";
"i#40 = i#40 + 1 {547061210}" -> "goto [?= $i5 = lengthof rgb] {901802632}";
"goto [?= $i5 = lengthof rgb] {901802632}" -> "$i5 = lengthof rgb {1470372855}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {424640507}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {2108207401}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {2108207401}" -> "$i8 = h - 1 {1620634826}";
"$i8 = h - 1 {1620634826}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1118283498}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1118283498}" -> "$i9 = w - 1 {458239992}";
"$i9 = w - 1 {458239992}" -> "$i10 = h - 1 {1754609918}";
"$i10 = h - 1 {1754609918}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {277953175}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {277953175}" -> "$i11 = w - 1 {810441236}";
"$i11 = w - 1 {810441236}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1344443097}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1344443097}" -> "return {310307891}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {907291653}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1041562535}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1600056965}"[fontcolor="blue", penwidth=3, color="blue"];
}


