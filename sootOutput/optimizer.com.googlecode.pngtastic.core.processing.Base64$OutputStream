    public void <init>(java.io.OutputStream, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream this;
        java.io.OutputStream out;
        int options, $i0, $i1, $i3;
        boolean $z0, $z1, $z2;
        byte $b2;
        byte[] $r3, $r4, $r5;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        nop;

        out := @parameter0: java.io.OutputStream;

        nop;

        options := @parameter1: int;

        nop;

        specialinvoke this.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(out);

        nop;

        $i0 = options & 8;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 == 0 goto label1;

        nop;

        $z0 = 1;

        nop;

        goto label2;

     label1:
        nop;

        $z0 = 0;

     label2:
        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean breakLines> = $z0;

        nop;

        $i1 = options & 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 == 0 goto label3;

        nop;

        $z1 = 1;

        nop;

        goto label4;

     label3:
        nop;

        $z1 = 0;

     label4:
        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode> = $z1;

        nop;

        $z2 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        nop;

        if $z2 == 0 goto label5;

        nop;

        $b2 = 3;

        nop;

        goto label6;

     label5:
        nop;

        $b2 = 4;

     label6:
        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength> = $b2;

        nop;

        $i3 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int bufferLength>;

        nop;

        $r3 = newarray (byte)[$i3];

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer> = $r3;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = 0;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int lineLength> = 0;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean suspendEncoding> = 0;

        nop;

        $r4 = newarray (byte)[4];

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4> = $r4;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int options> = options;

        nop;

        $r5 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.Base64: byte[] access$000(int)>(options);

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] decodabet> = $r5;

        nop;

        return;
    }

    public void close() throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream this;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        nop;

        virtualinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: void flushBase64()>();

        nop;

        specialinvoke this.<java.io.FilterOutputStream: void close()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer> = null;

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out> = null;

        nop;

        return;
    }

    public void flushBase64() throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream this;
        int $i0, $i1, $i2;
        boolean $z0;
        java.io.OutputStream $r0;
        byte[] $r1, $r2, $r3;
        java.io.IOException $r4;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream;

        nop;

        $i0 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 <= 0 goto label2;

        nop;

        $z0 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: boolean encode>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 == 0 goto label1;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: java.io.OutputStream out>;

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] b4>;

        nop;

        $r2 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: byte[] buffer>;

        nop;

        $i1 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position>;

        nop;

        $i2 = this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int options>;

        nop;

        $r3 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.Base64: byte[] access$300(byte[],byte[],int,int)>($r1, $r2, $i1, $i2);

        nop;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[])>($r3);

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.Base64$OutputStream: int position> = 0;

        nop;

        goto label2;

     label1:
        nop;

        $r4 = new java.io.IOException;

        nop;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Base64 input not properly padded.");

        nop;

        throw $r4;

     label2:
        nop;

        return;
    }


