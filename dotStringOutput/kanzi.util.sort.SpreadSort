digraph sort {
"this := @this: kanzi.util.sort.SpreadSort {1982137809}" -> "array := @parameter0: int[] {1162810485}";
"array := @parameter0: int[] {1162810485}" -> "idx := @parameter1: int {712301013}";
"idx := @parameter1: int {712301013}" -> "count := @parameter2: int {2038664284}";
"count := @parameter2: int {2038664284}" -> "$z0 = staticinvoke <kanzi.util.sort.SpreadSort: boolean _sort(int[],int,int)>(array, idx, count) {1269163421}";
"$z0 = staticinvoke <kanzi.util.sort.SpreadSort: boolean _sort(int[],int,int)>(array, idx, count) {1269163421}" -> "return $z0 {1206200753}";
}

digraph _sort {
"array := @parameter0: int[] {1378219878}" -> "idx := @parameter1: int {906240556}";
"idx := @parameter1: int {906240556}" -> "count := @parameter2: int {676202827}";
"count := @parameter2: int {676202827}" -> "if count >= 2 goto minMaxCount = newarray (int)[3] {1941444333}";
"if count >= 2 goto minMaxCount = newarray (int)[3] {1941444333}" -> "return 1 {1243907092}";
"if count >= 2 goto minMaxCount = newarray (int)[3] {1941444333}" -> "minMaxCount = newarray (int)[3] {440601420}";
"minMaxCount = newarray (int)[3] {440601420}" -> "$r0 = new kanzi.SliceIntArray {1840918525}";
"$r0 = new kanzi.SliceIntArray {1840918525}" -> "specialinvoke $r0.<kanzi.SliceIntArray: void <init>(int[],int)>(array, idx) {736608549}";
"specialinvoke $r0.<kanzi.SliceIntArray: void <init>(int[],int)>(array, idx) {736608549}" -> "sia = $r0 {1594773334}";
"sia = $r0 {1594773334}" -> "bins = staticinvoke <kanzi.util.sort.SpreadSort: kanzi.util.sort.SpreadSort$Bin[] spreadSortCore(kanzi.SliceIntArray,int,int[])>(sia, count, minMaxCount) {1425806497}";
"bins = staticinvoke <kanzi.util.sort.SpreadSort: kanzi.util.sort.SpreadSort$Bin[] spreadSortCore(kanzi.SliceIntArray,int,int[])>(sia, count, minMaxCount) {1425806497}" -> "if bins != null goto $i0 = minMaxCount[1] {900587692}";
"if bins != null goto $i0 = minMaxCount[1] {900587692}" -> "return 0 {1677577450}";
"if bins != null goto $i0 = minMaxCount[1] {900587692}" -> "$i0 = minMaxCount[1] {236449245}";
"$i0 = minMaxCount[1] {236449245}" -> "$i1 = minMaxCount[0] {1224713542}";
"$i1 = minMaxCount[0] {1224713542}" -> "$i2 = $i0 - $i1 {2042085505}";
"$i2 = $i0 - $i1 {2042085505}" -> "$i3 = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>($i2) {2103459436}";
"$i3 = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>($i2) {2103459436}" -> "maxCount = staticinvoke <kanzi.util.sort.SpreadSort: int getMaxCount(int,int)>($i3, count) {995588559}";
"maxCount = staticinvoke <kanzi.util.sort.SpreadSort: int getMaxCount(int,int)>($i3, count) {995588559}" -> "staticinvoke <kanzi.util.sort.SpreadSort: void spreadSortBins(kanzi.SliceIntArray,int[],kanzi.util.sort.SpreadSort$Bin[],int)>(sia, minMaxCount, bins, maxCount) {2104746318}";
"staticinvoke <kanzi.util.sort.SpreadSort: void spreadSortBins(kanzi.SliceIntArray,int[],kanzi.util.sort.SpreadSort$Bin[],int)>(sia, minMaxCount, bins, maxCount) {2104746318}" -> "return 1 {710260569}";
}

digraph spreadSortCore {
"sia := @parameter0: kanzi.SliceIntArray {78728658}" -> "count := @parameter1: int {1355320187}";
"count := @parameter1: int {1355320187}" -> "minMaxCount := @parameter2: int[] {1018311950}";
"minMaxCount := @parameter2: int[] {1018311950}" -> "staticinvoke <kanzi.util.sort.SpreadSort: void findExtremes(kanzi.SliceIntArray,int,int[])>(sia, count, minMaxCount) {1422290238}";
"staticinvoke <kanzi.util.sort.SpreadSort: void findExtremes(kanzi.SliceIntArray,int,int[])>(sia, count, minMaxCount) {1422290238}" -> "max = minMaxCount[1] {834070798}";
"max = minMaxCount[1] {834070798}" -> "min = minMaxCount[0] {799269814}";
"min = minMaxCount[0] {799269814}" -> "if max != min goto $i0 = max - min {941894798}";
"if max != min goto $i0 = max - min {941894798}" -> "return null {1063417076}";
"if max != min goto $i0 = max - min {941894798}" -> "$i0 = max - min {705733386}";
"$i0 = max - min {705733386}" -> "logRange = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>($i0) {1467645867}";
"logRange = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>($i0) {1467645867}" -> "$i1 = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>(count) {320591558}";
"$i1 = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>(count) {320591558}" -> "$i2 = logRange - $i1 {387478569}";
"$i2 = logRange - $i1 {387478569}" -> "logDivisor#23 = $i2 + 2 {147777065}";
"logDivisor#23 = $i2 + 2 {147777065}" -> "if logDivisor#23 >= 0 goto $i3 = logRange - logDivisor#23 {583981505}";
"if logDivisor#23 >= 0 goto $i3 = logRange - logDivisor#23 {583981505}" -> "logDivisor#23 = 0 {451923618}";
"if logDivisor#23 >= 0 goto $i3 = logRange - logDivisor#23 {583981505}" -> "$i3 = logRange - logDivisor#23 {942283140}";
"logDivisor#23 = 0 {451923618}" -> "$i3 = logRange - logDivisor#23 {942283140}";
"$i3 = logRange - logDivisor#23 {942283140}" -> "if $i3 <= 11 goto divMin = min >> logDivisor#23 {243571048}";
"if $i3 <= 11 goto divMin = min >> logDivisor#23 {243571048}" -> "logDivisor#23 = logRange - 11 {303645831}";
"if $i3 <= 11 goto divMin = min >> logDivisor#23 {243571048}" -> "divMin = min >> logDivisor#23 {1397874645}";
"logDivisor#23 = logRange - 11 {303645831}" -> "divMin = min >> logDivisor#23 {1397874645}";
"divMin = min >> logDivisor#23 {1397874645}" -> "divMax = max >> logDivisor#23 {1393829396}";
"divMax = max >> logDivisor#23 {1393829396}" -> "$i4 = divMax - divMin {1391883751}";
"$i4 = divMax - divMin {1391883751}" -> "binCount = $i4 + 1 {1191727938}";
"binCount = $i4 + 1 {1191727938}" -> "bins = newarray (kanzi.util.sort.SpreadSort$Bin)[binCount] {1978026798}";
"bins = newarray (kanzi.util.sort.SpreadSort$Bin)[binCount] {1978026798}" -> "i#47 = 0 {1688304367}";
"i#47 = 0 {1688304367}" -> "if i#47 >= binCount goto array = sia.<kanzi.SliceIntArray: int[] array> {2104444905}";
"if i#47 >= binCount goto array = sia.<kanzi.SliceIntArray: int[] array> {2104444905}" -> "$r0 = new kanzi.util.sort.SpreadSort$Bin {483084313}";
"if i#47 >= binCount goto array = sia.<kanzi.SliceIntArray: int[] array> {2104444905}" -> "array = sia.<kanzi.SliceIntArray: int[] array> {2105024757}";
"$r0 = new kanzi.util.sort.SpreadSort$Bin {483084313}" -> "specialinvoke $r0.<kanzi.util.sort.SpreadSort$Bin: void <init>(kanzi.util.sort.SpreadSort$1)>(null) {2025370090}";
"specialinvoke $r0.<kanzi.util.sort.SpreadSort$Bin: void <init>(kanzi.util.sort.SpreadSort$1)>(null) {2025370090}" -> "bins[i#47] = $r0 {667792517}";
"bins[i#47] = $r0 {667792517}" -> "i#47 = i#47 + 1 {1878730621}";
"i#47 = i#47 + 1 {1878730621}" -> "goto [?= (branch)] {163021399}";
"goto [?= (branch)] {163021399}" -> "if i#47 >= binCount goto array = sia.<kanzi.SliceIntArray: int[] array> {2104444905}";
"array = sia.<kanzi.SliceIntArray: int[] array> {2105024757}" -> "count8 = count & -8 {1073214828}";
"count8 = count & -8 {1073214828}" -> "$i5 = sia.<kanzi.SliceIntArray: int index> {1008567528}";
"$i5 = sia.<kanzi.SliceIntArray: int index> {1008567528}" -> "end8 = $i5 + count8 {1970837435}";
"end8 = $i5 + count8 {1970837435}" -> "i#65 = sia.<kanzi.SliceIntArray: int index> {336888271}";
"i#65 = sia.<kanzi.SliceIntArray: int index> {336888271}" -> "if i#65 >= end8 goto i#187 = count8 {478722773}";
"if i#65 >= end8 goto i#187 = count8 {478722773}" -> "$i6 = array[i#65] {1463473847}";
"if i#65 >= end8 goto i#187 = count8 {478722773}" -> "i#187 = count8 {1994825705}";
"$i6 = array[i#65] {1463473847}" -> "$i7 = $i6 >> logDivisor#23 {773165056}";
"$i7 = $i6 >> logDivisor#23 {773165056}" -> "$i8 = $i7 - divMin {1301884445}";
"$i8 = $i7 - divMin {1301884445}" -> "$r1 = bins[$i8] {194333425}";
"$r1 = bins[$i8] {194333425}" -> "$i9 = $r1.<kanzi.util.sort.SpreadSort$Bin: int count> {2077559955}";
"$i9 = $r1.<kanzi.util.sort.SpreadSort$Bin: int count> {2077559955}" -> "$i10 = $i9 + 1 {1583031270}";
"$i10 = $i9 + 1 {1583031270}" -> "$r1.<kanzi.util.sort.SpreadSort$Bin: int count> = $i10 {1160944872}";
"$r1.<kanzi.util.sort.SpreadSort$Bin: int count> = $i10 {1160944872}" -> "$i11 = i#65 + 1 {1840886858}";
"$i11 = i#65 + 1 {1840886858}" -> "$i12 = array[$i11] {2133594334}";
"$i12 = array[$i11] {2133594334}" -> "$i13 = $i12 >> logDivisor#23 {239026083}";
"$i13 = $i12 >> logDivisor#23 {239026083}" -> "$i14 = $i13 - divMin {825335332}";
"$i14 = $i13 - divMin {825335332}" -> "$r2 = bins[$i14] {1156648211}";
"$r2 = bins[$i14] {1156648211}" -> "$i15 = $r2.<kanzi.util.sort.SpreadSort$Bin: int count> {1002892586}";
"$i15 = $r2.<kanzi.util.sort.SpreadSort$Bin: int count> {1002892586}" -> "$i16 = $i15 + 1 {1248761993}";
"$i16 = $i15 + 1 {1248761993}" -> "$r2.<kanzi.util.sort.SpreadSort$Bin: int count> = $i16 {1581182309}";
"$r2.<kanzi.util.sort.SpreadSort$Bin: int count> = $i16 {1581182309}" -> "$i17 = i#65 + 2 {582171086}";
"$i17 = i#65 + 2 {582171086}" -> "$i18 = array[$i17] {2140093317}";
"$i18 = array[$i17] {2140093317}" -> "$i19 = $i18 >> logDivisor#23 {848110255}";
"$i19 = $i18 >> logDivisor#23 {848110255}" -> "$i20 = $i19 - divMin {253641158}";
"$i20 = $i19 - divMin {253641158}" -> "$r3 = bins[$i20] {821759474}";
"$r3 = bins[$i20] {821759474}" -> "$i21 = $r3.<kanzi.util.sort.SpreadSort$Bin: int count> {975295710}";
"$i21 = $r3.<kanzi.util.sort.SpreadSort$Bin: int count> {975295710}" -> "$i22 = $i21 + 1 {800109483}";
"$i22 = $i21 + 1 {800109483}" -> "$r3.<kanzi.util.sort.SpreadSort$Bin: int count> = $i22 {40722268}";
"$r3.<kanzi.util.sort.SpreadSort$Bin: int count> = $i22 {40722268}" -> "$i23 = i#65 + 3 {396460464}";
"$i23 = i#65 + 3 {396460464}" -> "$i24 = array[$i23] {209029446}";
"$i24 = array[$i23] {209029446}" -> "$i25 = $i24 >> logDivisor#23 {501356810}";
"$i25 = $i24 >> logDivisor#23 {501356810}" -> "$i26 = $i25 - divMin {650785074}";
"$i26 = $i25 - divMin {650785074}" -> "$r4 = bins[$i26] {54790550}";
"$r4 = bins[$i26] {54790550}" -> "$i27 = $r4.<kanzi.util.sort.SpreadSort$Bin: int count> {631605753}";
"$i27 = $r4.<kanzi.util.sort.SpreadSort$Bin: int count> {631605753}" -> "$i28 = $i27 + 1 {1908069539}";
"$i28 = $i27 + 1 {1908069539}" -> "$r4.<kanzi.util.sort.SpreadSort$Bin: int count> = $i28 {1687813803}";
"$r4.<kanzi.util.sort.SpreadSort$Bin: int count> = $i28 {1687813803}" -> "$i29 = i#65 + 4 {121295156}";
"$i29 = i#65 + 4 {121295156}" -> "$i30 = array[$i29] {1443162729}";
"$i30 = array[$i29] {1443162729}" -> "$i31 = $i30 >> logDivisor#23 {1133881411}";
"$i31 = $i30 >> logDivisor#23 {1133881411}" -> "$i32 = $i31 - divMin {1666287073}";
"$i32 = $i31 - divMin {1666287073}" -> "$r5 = bins[$i32] {1615994930}";
"$r5 = bins[$i32] {1615994930}" -> "$i33 = $r5.<kanzi.util.sort.SpreadSort$Bin: int count> {665222320}";
"$i33 = $r5.<kanzi.util.sort.SpreadSort$Bin: int count> {665222320}" -> "$i34 = $i33 + 1 {957706668}";
"$i34 = $i33 + 1 {957706668}" -> "$r5.<kanzi.util.sort.SpreadSort$Bin: int count> = $i34 {1844760646}";
"$r5.<kanzi.util.sort.SpreadSort$Bin: int count> = $i34 {1844760646}" -> "$i35 = i#65 + 5 {920267726}";
"$i35 = i#65 + 5 {920267726}" -> "$i36 = array[$i35] {1969424294}";
"$i36 = array[$i35] {1969424294}" -> "$i37 = $i36 >> logDivisor#23 {1389598165}";
"$i37 = $i36 >> logDivisor#23 {1389598165}" -> "$i38 = $i37 - divMin {1484996413}";
"$i38 = $i37 - divMin {1484996413}" -> "$r6 = bins[$i38] {496734255}";
"$r6 = bins[$i38] {496734255}" -> "$i39 = $r6.<kanzi.util.sort.SpreadSort$Bin: int count> {1680828827}";
"$i39 = $r6.<kanzi.util.sort.SpreadSort$Bin: int count> {1680828827}" -> "$i40 = $i39 + 1 {1682914961}";
"$i40 = $i39 + 1 {1682914961}" -> "$r6.<kanzi.util.sort.SpreadSort$Bin: int count> = $i40 {1902764559}";
"$r6.<kanzi.util.sort.SpreadSort$Bin: int count> = $i40 {1902764559}" -> "$i41 = i#65 + 6 {159840226}";
"$i41 = i#65 + 6 {159840226}" -> "$i42 = array[$i41] {1279580476}";
"$i42 = array[$i41] {1279580476}" -> "$i43 = $i42 >> logDivisor#23 {1299077769}";
"$i43 = $i42 >> logDivisor#23 {1299077769}" -> "$i44 = $i43 - divMin {428746585}";
"$i44 = $i43 - divMin {428746585}" -> "$r7 = bins[$i44] {1883719960}";
"$r7 = bins[$i44] {1883719960}" -> "$i45 = $r7.<kanzi.util.sort.SpreadSort$Bin: int count> {1895687127}";
"$i45 = $r7.<kanzi.util.sort.SpreadSort$Bin: int count> {1895687127}" -> "$i46 = $i45 + 1 {1390687211}";
"$i46 = $i45 + 1 {1390687211}" -> "$r7.<kanzi.util.sort.SpreadSort$Bin: int count> = $i46 {167948443}";
"$r7.<kanzi.util.sort.SpreadSort$Bin: int count> = $i46 {167948443}" -> "$i47 = i#65 + 7 {163162041}";
"$i47 = i#65 + 7 {163162041}" -> "$i48 = array[$i47] {1198583425}";
"$i48 = array[$i47] {1198583425}" -> "$i49 = $i48 >> logDivisor#23 {389899434}";
"$i49 = $i48 >> logDivisor#23 {389899434}" -> "$i50 = $i49 - divMin {330921363}";
"$i50 = $i49 - divMin {330921363}" -> "$r8 = bins[$i50] {526635777}";
"$r8 = bins[$i50] {526635777}" -> "$i51 = $r8.<kanzi.util.sort.SpreadSort$Bin: int count> {1546200269}";
"$i51 = $r8.<kanzi.util.sort.SpreadSort$Bin: int count> {1546200269}" -> "$i52 = $i51 + 1 {94304096}";
"$i52 = $i51 + 1 {94304096}" -> "$r8.<kanzi.util.sort.SpreadSort$Bin: int count> = $i52 {1495689156}";
"$r8.<kanzi.util.sort.SpreadSort$Bin: int count> = $i52 {1495689156}" -> "i#65 = i#65 + 8 {1287405409}";
"i#65 = i#65 + 8 {1287405409}" -> "goto [?= (branch)] {1849892023}";
"goto [?= (branch)] {1849892023}" -> "if i#65 >= end8 goto i#187 = count8 {478722773}";
"i#187 = count8 {1994825705}" -> "if i#187 >= count goto $r10 = bins[0] {401466817}";
"if i#187 >= count goto $r10 = bins[0] {401466817}" -> "$i53 = sia.<kanzi.SliceIntArray: int index> {1541408297}";
"if i#187 >= count goto $r10 = bins[0] {401466817}" -> "$r10 = bins[0] {1313405675}";
"$i53 = sia.<kanzi.SliceIntArray: int index> {1541408297}" -> "$i54 = $i53 + i#187 {949589010}";
"$i54 = $i53 + i#187 {949589010}" -> "$i55 = array[$i54] {1113323315}";
"$i55 = array[$i54] {1113323315}" -> "$i56 = $i55 >> logDivisor#23 {1880191217}";
"$i56 = $i55 >> logDivisor#23 {1880191217}" -> "$i57 = $i56 - divMin {421781026}";
"$i57 = $i56 - divMin {421781026}" -> "$r9 = bins[$i57] {190842001}";
"$r9 = bins[$i57] {190842001}" -> "$i58 = $r9.<kanzi.util.sort.SpreadSort$Bin: int count> {371744123}";
"$i58 = $r9.<kanzi.util.sort.SpreadSort$Bin: int count> {371744123}" -> "$i59 = $i58 + 1 {447908208}";
"$i59 = $i58 + 1 {447908208}" -> "$r9.<kanzi.util.sort.SpreadSort$Bin: int count> = $i59 {24871705}";
"$r9.<kanzi.util.sort.SpreadSort$Bin: int count> = $i59 {24871705}" -> "i#187 = i#187 + 1 {1433195976}";
"i#187 = i#187 + 1 {1433195976}" -> "goto [?= (branch)] {779123700}";
"goto [?= (branch)] {779123700}" -> "if i#187 >= count goto $r10 = bins[0] {401466817}";
"$r10 = bins[0] {1313405675}" -> "$i60 = sia.<kanzi.SliceIntArray: int index> {2141452465}";
"$i60 = sia.<kanzi.SliceIntArray: int index> {2141452465}" -> "$r10.<kanzi.util.sort.SpreadSort$Bin: int position> = $i60 {1337648366}";
"$r10.<kanzi.util.sort.SpreadSort$Bin: int position> = $i60 {1337648366}" -> "i#212 = 0 {1911113079}";
"i#212 = 0 {1911113079}" -> "$i61 = binCount - 1 {312312647}";
"$i61 = binCount - 1 {312312647}" -> "if i#212 >= $i61 goto $i69 = binCount - 1 {2046138250}";
"if i#212 >= $i61 goto $i69 = binCount - 1 {2046138250}" -> "$i62 = i#212 + 1 {95441198}";
"if i#212 >= $i61 goto $i69 = binCount - 1 {2046138250}" -> "$i69 = binCount - 1 {93171705}";
"$i62 = i#212 + 1 {95441198}" -> "$r11 = bins[$i62] {887433028}";
"$r11 = bins[$i62] {887433028}" -> "$r12 = bins[i#212] {81532606}";
"$r12 = bins[i#212] {81532606}" -> "$i63 = $r12.<kanzi.util.sort.SpreadSort$Bin: int position> {421453414}";
"$i63 = $r12.<kanzi.util.sort.SpreadSort$Bin: int position> {421453414}" -> "$r13 = bins[i#212] {1153072376}";
"$r13 = bins[i#212] {1153072376}" -> "$i64 = $r13.<kanzi.util.sort.SpreadSort$Bin: int count> {725116903}";
"$i64 = $r13.<kanzi.util.sort.SpreadSort$Bin: int count> {725116903}" -> "$i65 = $i63 + $i64 {413402784}";
"$i65 = $i63 + $i64 {413402784}" -> "$r11.<kanzi.util.sort.SpreadSort$Bin: int position> = $i65 {120703061}";
"$r11.<kanzi.util.sort.SpreadSort$Bin: int position> = $i65 {120703061}" -> "$r14 = bins[i#212] {1077804004}";
"$r14 = bins[i#212] {1077804004}" -> "$r15 = bins[i#212] {1534009772}";
"$r15 = bins[i#212] {1534009772}" -> "$i66 = $r15.<kanzi.util.sort.SpreadSort$Bin: int position> {1948390398}";
"$i66 = $r15.<kanzi.util.sort.SpreadSort$Bin: int position> {1948390398}" -> "$i67 = sia.<kanzi.SliceIntArray: int index> {1419628202}";
"$i67 = sia.<kanzi.SliceIntArray: int index> {1419628202}" -> "$i68 = $i66 - $i67 {1994254292}";
"$i68 = $i66 - $i67 {1994254292}" -> "$r14.<kanzi.util.sort.SpreadSort$Bin: int count> = $i68 {310687506}";
"$r14.<kanzi.util.sort.SpreadSort$Bin: int count> = $i68 {310687506}" -> "i#212 = i#212 + 1 {945597250}";
"i#212 = i#212 + 1 {945597250}" -> "goto [?= $i61 = binCount - 1] {34523773}";
"goto [?= $i61 = binCount - 1] {34523773}" -> "$i61 = binCount - 1 {312312647}";
"$i69 = binCount - 1 {93171705}" -> "$r16 = bins[$i69] {1035254001}";
"$r16 = bins[$i69] {1035254001}" -> "$i70 = binCount - 1 {1306356144}";
"$i70 = binCount - 1 {1306356144}" -> "$r17 = bins[$i70] {2051692903}";
"$r17 = bins[$i70] {2051692903}" -> "$i71 = $r17.<kanzi.util.sort.SpreadSort$Bin: int position> {581513088}";
"$i71 = $r17.<kanzi.util.sort.SpreadSort$Bin: int position> {581513088}" -> "$i72 = sia.<kanzi.SliceIntArray: int index> {1615553052}";
"$i72 = sia.<kanzi.SliceIntArray: int index> {1615553052}" -> "$i73 = $i71 - $i72 {1214422547}";
"$i73 = $i71 - $i72 {1214422547}" -> "$r16.<kanzi.util.sort.SpreadSort$Bin: int count> = $i73 {601648560}";
"$r16.<kanzi.util.sort.SpreadSort$Bin: int count> = $i73 {601648560}" -> "i#256 = 0 {913507118}";
"i#256 = 0 {913507118}" -> "if i#256 >= count goto minMaxCount[0] = min {957662591}";
"if i#256 >= count goto minMaxCount[0] = min {957662591}" -> "$i74 = sia.<kanzi.SliceIntArray: int index> {291815990}";
"if i#256 >= count goto minMaxCount[0] = min {957662591}" -> "minMaxCount[0] = min {1381830432}";
"$i74 = sia.<kanzi.SliceIntArray: int index> {291815990}" -> "idx = $i74 + i#256 {1687714975}";
"idx = $i74 + i#256 {1687714975}" -> "$i75 = array[idx] {1550068943}";
"$i75 = array[idx] {1550068943}" -> "$i76 = $i75 >> logDivisor#23 {1243564161}";
"$i76 = $i75 >> logDivisor#23 {1243564161}" -> "$i77 = $i76 - divMin {839364550}";
"$i77 = $i76 - divMin {839364550}" -> "currBin#272 = bins[$i77] {636463247}";
"currBin#272 = bins[$i77] {636463247}" -> "$i78 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int count> {1044139529}";
"$i78 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int count> {1044139529}" -> "if $i78 <= i#256 goto $i87 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {447378404}";
"if $i78 <= i#256 goto $i87 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {447378404}" -> "$i79 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {742668069}";
"if $i78 <= i#256 goto $i87 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {447378404}" -> "$i87 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {2046009055}";
"$i79 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {742668069}" -> "tmp = array[$i79] {1004293279}";
"tmp = array[$i79] {1004293279}" -> "$i80 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {613648948}";
"$i80 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {613648948}" -> "$i81 = array[idx] {574633826}";
"$i81 = array[idx] {574633826}" -> "array[$i80] = $i81 {440064820}";
"array[$i80] = $i81 {440064820}" -> "array[idx] = tmp {797407905}";
"array[idx] = tmp {797407905}" -> "$i82 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {324296906}";
"$i82 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {324296906}" -> "$i83 = $i82 + 1 {688060982}";
"$i83 = $i82 + 1 {688060982}" -> "currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> = $i83 {2048769816}";
"currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> = $i83 {2048769816}" -> "$i84 = array[idx] {1995703425}";
"$i84 = array[idx] {1995703425}" -> "$i85 = $i84 >> logDivisor#23 {1170502558}";
"$i85 = $i84 >> logDivisor#23 {1170502558}" -> "$i86 = $i85 - divMin {1174902735}";
"$i86 = $i85 - divMin {1174902735}" -> "currBin#272 = bins[$i86] {860958465}";
"currBin#272 = bins[$i86] {860958465}" -> "goto [?= $i78 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int count>] {687881072}";
"goto [?= $i78 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int count>] {687881072}" -> "$i78 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int count> {1044139529}";
"$i87 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {2046009055}" -> "if $i87 != idx goto i#256 = i#256 + 1 {1804855136}";
"if $i87 != idx goto i#256 = i#256 + 1 {1804855136}" -> "$i88 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {23250159}";
"if $i87 != idx goto i#256 = i#256 + 1 {1804855136}" -> "i#256 = i#256 + 1 {72635956}";
"$i88 = currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> {23250159}" -> "$i89 = $i88 + 1 {235571259}";
"$i89 = $i88 + 1 {235571259}" -> "currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> = $i89 {327593239}";
"currBin#272.<kanzi.util.sort.SpreadSort$Bin: int position> = $i89 {327593239}" -> "i#256 = i#256 + 1 {72635956}";
"i#256 = i#256 + 1 {72635956}" -> "goto [?= (branch)] {87103809}";
"goto [?= (branch)] {87103809}" -> "if i#256 >= count goto minMaxCount[0] = min {957662591}";
"minMaxCount[0] = min {1381830432}" -> "minMaxCount[1] = max {154319132}";
"minMaxCount[1] = max {154319132}" -> "minMaxCount[2] = binCount {1377534964}";
"minMaxCount[2] = binCount {1377534964}" -> "if logDivisor#23 != 0 goto return bins {1650972477}";
"if logDivisor#23 != 0 goto return bins {1650972477}" -> "return null {1274809151}";
"if logDivisor#23 != 0 goto return bins {1650972477}" -> "return bins {298492216}";
}

digraph findExtremes {
"sia := @parameter0: kanzi.SliceIntArray {813611241}" -> "count := @parameter1: int {249137819}";
"count := @parameter1: int {249137819}" -> "minMax := @parameter2: int[] {1744329990}";
"minMax := @parameter2: int[] {1744329990}" -> "input = sia.<kanzi.SliceIntArray: int[] array> {1535046419}";
"input = sia.<kanzi.SliceIntArray: int[] array> {1535046419}" -> "$i0 = sia.<kanzi.SliceIntArray: int index> {2128278714}";
"$i0 = sia.<kanzi.SliceIntArray: int index> {2128278714}" -> "end = $i0 + count {2083066626}";
"end = $i0 + count {2083066626}" -> "$i1 = sia.<kanzi.SliceIntArray: int index> {1553917918}";
"$i1 = sia.<kanzi.SliceIntArray: int index> {1553917918}" -> "min#11 = input[$i1] {2117688652}";
"min#11 = input[$i1] {2117688652}" -> "max#13 = min#11 {32742709}";
"max#13 = min#11 {32742709}" -> "i#16 = sia.<kanzi.SliceIntArray: int index> {1078888353}";
"i#16 = sia.<kanzi.SliceIntArray: int index> {1078888353}" -> "if i#16 >= end goto minMax[0] = min#11 {1167621348}";
"if i#16 >= end goto minMax[0] = min#11 {1167621348}" -> "val = input[i#16] {242451785}";
"if i#16 >= end goto minMax[0] = min#11 {1167621348}" -> "minMax[0] = min#11 {1707716407}";
"val = input[i#16] {242451785}" -> "if val <= max#13 goto (branch) {418435228}";
"if val <= max#13 goto (branch) {418435228}" -> "max#13 = val {793621726}";
"if val <= max#13 goto (branch) {418435228}" -> "if val >= min#11 goto i#16 = i#16 + 1 {1951741472}";
"max#13 = val {793621726}" -> "goto [?= i#16 = i#16 + 1] {2017803365}";
"goto [?= i#16 = i#16 + 1] {2017803365}" -> "i#16 = i#16 + 1 {1794852614}";
"if val >= min#11 goto i#16 = i#16 + 1 {1951741472}" -> "min#11 = val {942596305}";
"if val >= min#11 goto i#16 = i#16 + 1 {1951741472}" -> "i#16 = i#16 + 1 {1794852614}";
"min#11 = val {942596305}" -> "i#16 = i#16 + 1 {1794852614}";
"i#16 = i#16 + 1 {1794852614}" -> "goto [?= (branch)] {935499855}";
"goto [?= (branch)] {935499855}" -> "if i#16 >= end goto minMax[0] = min#11 {1167621348}";
"minMax[0] = min#11 {1707716407}" -> "minMax[1] = max#13 {995766448}";
"minMax[1] = max#13 {995766448}" -> "return {450270155}";
}

digraph roughLog2 {
"x#1 := @parameter0: int {863661122}" -> "shift#3 = 0 {624748487}";
"shift#3 = 0 {624748487}" -> "$i0 = x#1 >> 31 {1238237979}";
"$i0 = x#1 >> 31 {1238237979}" -> "$i1 = x#1 + $i0 {1789026201}";
"$i1 = x#1 + $i0 {1789026201}" -> "$i2 = x#1 >> 31 {554702693}";
"$i2 = x#1 >> 31 {554702693}" -> "x#13 = $i1 ^ $i2 {1507446214}";
"x#13 = $i1 ^ $i2 {1507446214}" -> "$i3 = x#13 >> shift#3 {2005552046}";
"$i3 = x#13 >> shift#3 {2005552046}" -> "if $i3 == 0 goto return shift#3 {1613373284}";
"if $i3 == 0 goto return shift#3 {1613373284}" -> "shift#3 = shift#3 + 1 {78491042}";
"if $i3 == 0 goto return shift#3 {1613373284}" -> "return shift#3 {14540580}";
"shift#3 = shift#3 + 1 {78491042}" -> "goto [?= $i3 = x#13 >> shift#3] {365873476}";
"goto [?= $i3 = x#13 >> shift#3] {365873476}" -> "$i3 = x#13 >> shift#3 {2005552046}";
}

digraph getMaxCount {
"logRange := @parameter0: int {751325801}" -> "count := @parameter1: int {590709833}";
"count := @parameter1: int {590709833}" -> "logSize#3 = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>(count) {165096303}";
"logSize#3 = staticinvoke <kanzi.util.sort.SpreadSort: int roughLog2(int)>(count) {165096303}" -> "if logSize#3 <= 11 goto $i0 = 4 * logRange {127528782}";
"if logSize#3 <= 11 goto $i0 = 4 * logRange {127528782}" -> "logSize#3 = 11 {1380275481}";
"if logSize#3 <= 11 goto $i0 = 4 * logRange {127528782}" -> "$i0 = 4 * logRange {815064113}";
"logSize#3 = 11 {1380275481}" -> "$i0 = 4 * logRange {815064113}";
"$i0 = 4 * logRange {815064113}" -> "relativeWidth#12 = $i0 / logSize#3 {1278338871}";
"relativeWidth#12 = $i0 / logSize#3 {1278338871}" -> "if relativeWidth#12 < 4 goto (branch) {645855880}";
"if relativeWidth#12 < 4 goto (branch) {645855880}" -> "relativeWidth#12 = 3 {1675092245}";
"if relativeWidth#12 < 4 goto (branch) {645855880}" -> "if relativeWidth#12 >= 11 goto $i1 = relativeWidth#12 {595926649}";
"relativeWidth#12 = 3 {1675092245}" -> "if relativeWidth#12 >= 11 goto $i1 = relativeWidth#12 {595926649}";
"if relativeWidth#12 >= 11 goto $i1 = relativeWidth#12 {595926649}" -> "$i1 = 11 {2139524181}";
"if relativeWidth#12 >= 11 goto $i1 = relativeWidth#12 {595926649}" -> "$i1 = relativeWidth#12 {1993281180}";
"$i1 = 11 {2139524181}" -> "goto [?= shift = $i1] {275774550}";
"goto [?= shift = $i1] {275774550}" -> "shift = $i1 {916287277}";
"$i1 = relativeWidth#12 {1993281180}" -> "shift = $i1 {916287277}";
"shift = $i1 {916287277}" -> "$i2 = 1 << shift {1066903898}";
"$i2 = 1 << shift {1066903898}" -> "return $i2 {1647201666}";
}

digraph spreadSortBins {
"sia := @parameter0: kanzi.SliceIntArray {115264664}" -> "minMaxCount := @parameter1: int[] {1451804131}";
"minMaxCount := @parameter1: int[] {1451804131}" -> "bins := @parameter2: kanzi.util.sort.SpreadSort$Bin[] {1917456954}";
"bins := @parameter2: kanzi.util.sort.SpreadSort$Bin[] {1917456954}" -> "maxCount := @parameter3: int {368421911}";
"maxCount := @parameter3: int {368421911}" -> "binCount = minMaxCount[2] {491577670}";
"binCount = minMaxCount[2] {491577670}" -> "i#5 = 0 {755217068}";
"i#5 = 0 {755217068}" -> "if i#5 >= binCount goto return {29383587}";
"if i#5 >= binCount goto return {29383587}" -> "$r0 = bins[i#5] {1529095965}";
"if i#5 >= binCount goto return {29383587}" -> "return {1951391212}";
"$r0 = bins[i#5] {1529095965}" -> "$i0 = $r0.<kanzi.util.sort.SpreadSort$Bin: int position> {1480225433}";
"$i0 = $r0.<kanzi.util.sort.SpreadSort$Bin: int position> {1480225433}" -> "$i1 = sia.<kanzi.SliceIntArray: int index> {1543626968}";
"$i1 = sia.<kanzi.SliceIntArray: int index> {1543626968}" -> "$i2 = $i0 - $i1 {644294794}";
"$i2 = $i0 - $i1 {644294794}" -> "$r1 = bins[i#5] {720987334}";
"$r1 = bins[i#5] {720987334}" -> "$i3 = $r1.<kanzi.util.sort.SpreadSort$Bin: int count> {381972732}";
"$i3 = $r1.<kanzi.util.sort.SpreadSort$Bin: int count> {381972732}" -> "n = $i2 - $i3 {84249701}";
"n = $i2 - $i3 {84249701}" -> "if n >= 2 goto (branch) {111869670}";
"if n >= 2 goto (branch) {111869670}" -> "goto [?= i#5 = i#5 + 1] {795159794}";
"if n >= 2 goto (branch) {111869670}" -> "if n >= maxCount goto $r5 = sia.<kanzi.SliceIntArray: int[] array> {1520687132}";
"goto [?= i#5 = i#5 + 1] {795159794}" -> "i#5 = i#5 + 1 {636170358}";
"if n >= maxCount goto $r5 = sia.<kanzi.SliceIntArray: int[] array> {1520687132}" -> "$r2 = sia.<kanzi.SliceIntArray: int[] array> {1416299010}";
"if n >= maxCount goto $r5 = sia.<kanzi.SliceIntArray: int[] array> {1520687132}" -> "$r5 = sia.<kanzi.SliceIntArray: int[] array> {2088800635}";
"$r2 = sia.<kanzi.SliceIntArray: int[] array> {1416299010}" -> "$i4 = sia.<kanzi.SliceIntArray: int index> {1631611012}";
"$i4 = sia.<kanzi.SliceIntArray: int index> {1631611012}" -> "$r3 = bins[i#5] {1958369333}";
"$r3 = bins[i#5] {1958369333}" -> "$i5 = $r3.<kanzi.util.sort.SpreadSort$Bin: int count> {899962651}";
"$i5 = $r3.<kanzi.util.sort.SpreadSort$Bin: int count> {899962651}" -> "$i6 = $i4 + $i5 {1127540954}";
"$i6 = $i4 + $i5 {1127540954}" -> "$r4 = bins[i#5] {75044626}";
"$r4 = bins[i#5] {75044626}" -> "$i7 = $r4.<kanzi.util.sort.SpreadSort$Bin: int position> {1617911167}";
"$i7 = $r4.<kanzi.util.sort.SpreadSort$Bin: int position> {1617911167}" -> "staticinvoke <java.util.Arrays: void sort(int[],int,int)>($r2, $i6, $i7) {760342961}";
"staticinvoke <java.util.Arrays: void sort(int[],int,int)>($r2, $i6, $i7) {760342961}" -> "goto [?= i#5 = i#5 + 1] {705949621}";
"goto [?= i#5 = i#5 + 1] {705949621}" -> "i#5 = i#5 + 1 {636170358}";
"$r5 = sia.<kanzi.SliceIntArray: int[] array> {2088800635}" -> "$i8 = sia.<kanzi.SliceIntArray: int index> {1810219294}";
"$i8 = sia.<kanzi.SliceIntArray: int index> {1810219294}" -> "$r6 = bins[i#5] {704007312}";
"$r6 = bins[i#5] {704007312}" -> "$i9 = $r6.<kanzi.util.sort.SpreadSort$Bin: int count> {1818137985}";
"$i9 = $r6.<kanzi.util.sort.SpreadSort$Bin: int count> {1818137985}" -> "$i10 = $i8 + $i9 {1218184027}";
"$i10 = $i8 + $i9 {1218184027}" -> "staticinvoke <kanzi.util.sort.SpreadSort: boolean _sort(int[],int,int)>($r5, $i10, n) {1292660429}";
"staticinvoke <kanzi.util.sort.SpreadSort: boolean _sort(int[],int,int)>($r5, $i10, n) {1292660429}" -> "i#5 = i#5 + 1 {636170358}";
"i#5 = i#5 + 1 {636170358}" -> "goto [?= (branch)] {427972370}";
"goto [?= (branch)] {427972370}" -> "if i#5 >= binCount goto return {29383587}";
}


