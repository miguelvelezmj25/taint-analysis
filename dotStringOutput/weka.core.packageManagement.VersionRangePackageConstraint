digraph setRangeConstraint {
"this := @this: weka.core.packageManagement.VersionRangePackageConstraint {2067106517}" -> "bound1 := @parameter0: java.lang.String {260665403}";
"bound1 := @parameter0: java.lang.String {260665403}" -> "comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {258379452}";
"comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {258379452}" -> "bound2 := @parameter2: java.lang.String {1609127425}";
"bound2 := @parameter2: java.lang.String {1609127425}" -> "comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {713002505}";
"comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {713002505}" -> "$r0 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1940012411}";
"$r0 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {1940012411}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {475976989}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {475976989}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1019252044}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1019252044}" -> "if comp1 == $r0 goto $r2 = new java.lang.Exception {1666492694}";
"if comp1 == $r0 goto $r2 = new java.lang.Exception {1666492694}" -> "$r1 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {2084481066}";
"if comp1 == $r0 goto $r2 = new java.lang.Exception {1666492694}" -> "$r2 = new java.lang.Exception {1481575934}";
"$r1 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {2084481066}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp2) {131762735}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp2) {131762735}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {1128649768}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {1128649768}" -> "if comp2 != $r1 goto $z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {504695603}";
"if comp2 != $r1 goto $z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {504695603}" -> "$r2 = new java.lang.Exception {1481575934}";
"if comp2 != $r1 goto $z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {504695603}" -> "$z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {635417208}";
"$r2 = new java.lang.Exception {1481575934}" -> "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint (= not allowed)!\") {1054571318}";
"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint (= not allowed)!\") {1054571318}" -> "throw $r2 {553104035}";
"$z0 = virtualinvoke comp1.<weka.core.packageManagement.VersionPackageConstraint$VersionComparison: boolean compatibleWith(weka.core.packageManagement.VersionPackageConstraint$VersionComparison)>(comp2) {635417208}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {145382001}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {145382001}" -> "if $z0 == 0 goto boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {950038218}";
"if $z0 == 0 goto boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {950038218}" -> "$r3 = new java.lang.Exception {1170498196}";
"if $z0 == 0 goto boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {950038218}" -> "boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {562459839}";
"$r3 = new java.lang.Exception {1170498196}" -> "specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint!\") {622518449}";
"specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range constraint!\") {622518449}" -> "throw $r3 {1135404612}";
"boundsComp = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison compare(java.lang.String,java.lang.String)>(bound1, bound2) {562459839}" -> "$r4 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {947307895}";
"$r4 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison EQUAL> {947307895}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {2057471388}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {2057471388}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {1110498665}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {1110498665}" -> "if boundsComp != $r4 goto $r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1467619641}";
"if boundsComp != $r4 goto $r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1467619641}" -> "$r5 = new java.lang.Exception {1170980069}";
"if boundsComp != $r4 goto $r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1467619641}" -> "$r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {831080571}";
"$r5 = new java.lang.Exception {1170980069}" -> "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range - both bounds are equal!\") {1053708825}";
"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] malformed version range - both bounds are equal!\") {1053708825}" -> "throw $r5 {645594545}";
"$r6 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {831080571}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {2123820444}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {2123820444}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6) {272522427}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6) {272522427}" -> "if comp1 == $r6 goto $r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {2098961097}";
"if comp1 == $r6 goto $r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {2098961097}" -> "$r7 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHANOREQUAL> {2133701895}";
"if comp1 == $r6 goto $r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {2098961097}" -> "$r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1121402006}";
"$r7 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHANOREQUAL> {2133701895}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {184758974}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {184758974}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7) {1773825249}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7) {1773825249}" -> "if comp1 != $r7 goto $r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {69005321}";
"if comp1 != $r7 goto $r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {69005321}" -> "$r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1121402006}";
"if comp1 != $r7 goto $r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {69005321}" -> "$r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1790562255}";
"$r8 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison GREATERTHAN> {1121402006}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1371641916}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1371641916}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8) {1806056321}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8) {1806056321}" -> "if boundsComp != $r8 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1354771526}";
"if boundsComp != $r8 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1354771526}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {1792660038}";
"if boundsComp != $r8 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1354771526}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {281877947}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {1792660038}" -> "goto [?= $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN>] {992637255}";
"goto [?= $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN>] {992637255}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {281877947}";
"$r9 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1790562255}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1384780502}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1384780502}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9) {407310496}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9) {407310496}" -> "if boundsComp != $r9 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1322679100}";
"if boundsComp != $r9 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1322679100}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {1068272785}";
"if boundsComp != $r9 goto $r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {1322679100}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {281877947}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> = 1 {1068272785}" -> "$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {281877947}";
"$r10 = <weka.core.packageManagement.VersionPackageConstraint$VersionComparison: weka.core.packageManagement.VersionPackageConstraint$VersionComparison LESSTHAN> {281877947}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {947801896}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {947801896}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10) {1433876635}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10) {1433876635}" -> "if boundsComp != $r10 goto this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {1947911117}";
"if boundsComp != $r10 goto this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {1947911117}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound1 {1707296035}";
"if boundsComp != $r10 goto this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {1947911117}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {1131416570}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound1 {1707296035}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp1 {1614934830}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp1 {1614934830}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound2 {2053551255}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound2 {2053551255}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp2 {724415069}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp2 {724415069}" -> "goto [?= return] {1679845795}";
"goto [?= return] {1679845795}" -> "return {1963242521}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> = bound2 {1131416570}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp2 {1461895767}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> = comp2 {1461895767}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound1 {1611413326}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> = bound1 {1611413326}" -> "this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp1 {1949518742}";
"this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> = comp1 {1949518742}" -> "return {1963242521}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp2) {131762735}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {145382001}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1019252044}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4) {1110498665}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6) {272522427}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1384780502}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10) {1433876635}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {947801896}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {184758974}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {2123820444}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp1) {475976989}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8) {1806056321}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {2057471388}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundsComp) {1371641916}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7) {1773825249}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9) {407310496}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {1128649768}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: weka.core.packageManagement.VersionRangePackageConstraint {882118356}" -> "p := @parameter0: weka.core.packageManagement.Package {1079104418}";
"p := @parameter0: weka.core.packageManagement.Package {1079104418}" -> "specialinvoke this.<weka.core.packageManagement.PackageConstraint: void <init>()>() {1201597766}";
"specialinvoke this.<weka.core.packageManagement.PackageConstraint: void <init>()>() {1201597766}" -> "virtualinvoke this.<weka.core.packageManagement.VersionRangePackageConstraint: void setPackage(weka.core.packageManagement.Package)>(p) {526483539}";
"virtualinvoke this.<weka.core.packageManagement.VersionRangePackageConstraint: void setPackage(weka.core.packageManagement.Package)>(p) {526483539}" -> "return {1908769585}";
}

digraph checkConstraint {
"this := @this: weka.core.packageManagement.VersionRangePackageConstraint {71203821}" -> "target := @parameter0: weka.core.packageManagement.Package {1301917157}";
"target := @parameter0: weka.core.packageManagement.Package {1301917157}" -> "$r0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {98061496}";
"$r0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {98061496}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1220615146}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1220615146}" -> "if $r0 == null goto $r2 = new java.lang.Exception {86916963}";
"if $r0 == null goto $r2 = new java.lang.Exception {86916963}" -> "$r1 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {1163709051}";
"if $r0 == null goto $r2 = new java.lang.Exception {86916963}" -> "$r2 = new java.lang.Exception {1988563428}";
"$r1 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {1163709051}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {382066082}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {382066082}" -> "if $r1 != null goto $r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {36103140}";
"if $r1 != null goto $r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {36103140}" -> "$r2 = new java.lang.Exception {1988563428}";
"if $r1 != null goto $r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {36103140}" -> "$r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1711797983}";
"$r2 = new java.lang.Exception {1988563428}" -> "specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] No constraint has been set!\") {2094579541}";
"specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(\"[VersionRangePackageConstraint] No constraint has been set!\") {2094579541}" -> "throw $r2 {434429903}";
"$r3 = <weka.core.packageManagement.VersionPackageConstraint: java.lang.String VERSION_KEY> {1711797983}" -> "$r4 = virtualinvoke target.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>($r3) {1604112221}";
"$r4 = virtualinvoke target.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>($r3) {1604112221}" -> "targetVersion = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>() {582281764}";
"targetVersion = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>() {582281764}" -> "$r5 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {698787544}";
"$r5 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_lowerConstraint> {698787544}" -> "$r6 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> {1855448573}";
"$r6 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_lowerBound> {1855448573}" -> "$r7 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {1720276278}";
"$r7 = this.<weka.core.packageManagement.VersionRangePackageConstraint: weka.core.packageManagement.VersionPackageConstraint$VersionComparison m_upperConstraint> {1720276278}" -> "$r8 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> {1279267350}";
"$r8 = this.<weka.core.packageManagement.VersionRangePackageConstraint: java.lang.String m_upperBound> {1279267350}" -> "$z0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> {1884542081}";
"$z0 = this.<weka.core.packageManagement.VersionRangePackageConstraint: boolean m_boundOr> {1884542081}" -> "$z1 = staticinvoke <weka.core.packageManagement.VersionRangePackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,boolean)>(targetVersion, $r5, $r6, $r7, $r8, $z0) {1020246079}";
"$z1 = staticinvoke <weka.core.packageManagement.VersionRangePackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String,boolean)>(targetVersion, $r5, $r6, $r7, $r8, $z0) {1020246079}" -> "return $z1 {980920157}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1220615146}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {382066082}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph checkConstraint {
"toCheck := @parameter0: java.lang.String {1714239050}" -> "comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {1212035311}";
"comp1 := @parameter1: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {1212035311}" -> "bound1 := @parameter2: java.lang.String {1005441918}";
"bound1 := @parameter2: java.lang.String {1005441918}" -> "comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {625335936}";
"comp2 := @parameter3: weka.core.packageManagement.VersionPackageConstraint$VersionComparison {625335936}" -> "bound2 := @parameter4: java.lang.String {765480956}";
"bound2 := @parameter4: java.lang.String {765480956}" -> "boundOr := @parameter5: boolean {328159995}";
"boundOr := @parameter5: boolean {328159995}" -> "result1 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp1, bound1) {504758219}";
"result1 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp1, bound1) {504758219}" -> "result2 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp2, bound2) {678990181}";
"result2 = staticinvoke <weka.core.packageManagement.VersionPackageConstraint: boolean checkConstraint(java.lang.String,weka.core.packageManagement.VersionPackageConstraint$VersionComparison,java.lang.String)>(toCheck, comp2, bound2) {678990181}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundOr) {592356890}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundOr) {592356890}" -> "if boundOr == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1264148400}";
"if boundOr == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1264148400}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1526727110}";
"if boundOr == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1264148400}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1670442953}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1526727110}" -> "if result1 != 0 goto $z0 = 1 {1323879375}";
"if result1 != 0 goto $z0 = 1 {1323879375}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {1090219883}";
"if result1 != 0 goto $z0 = 1 {1323879375}" -> "$z0 = 1 {1624881273}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {1090219883}" -> "if result2 == 0 goto $z0 = 0 {2115639194}";
"if result2 == 0 goto $z0 = 0 {2115639194}" -> "$z0 = 1 {1624881273}";
"if result2 == 0 goto $z0 = 0 {2115639194}" -> "$z0 = 0 {1824815219}";
"$z0 = 1 {1624881273}" -> "goto [?= return $z0] {1760014622}";
"goto [?= return $z0] {1760014622}" -> "return $z0 {1120670902}";
"$z0 = 0 {1824815219}" -> "return $z0 {1120670902}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1670442953}" -> "if result1 == 0 goto $z1 = 0 {985744726}";
"if result1 == 0 goto $z1 = 0 {985744726}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {953488687}";
"if result1 == 0 goto $z1 = 0 {985744726}" -> "$z1 = 0 {1803290126}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {953488687}" -> "if result2 == 0 goto $z1 = 0 {1463969342}";
"if result2 == 0 goto $z1 = 0 {1463969342}" -> "$z1 = 1 {1673164390}";
"if result2 == 0 goto $z1 = 0 {1463969342}" -> "$z1 = 0 {1803290126}";
"$z1 = 1 {1673164390}" -> "goto [?= return $z1] {1407284402}";
"goto [?= return $z1] {1407284402}" -> "return $z1 {793509577}";
"$z1 = 0 {1803290126}" -> "return $z1 {793509577}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(boundOr) {592356890}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {953488687}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result2) {1090219883}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1526727110}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result1) {1670442953}"[fontcolor="blue", penwidth=3, color="blue"];
}


