digraph <init> {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1439695376}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {992608726}";
"specialinvoke this.<java.lang.Object: void <init>()>() {992608726}" -> "$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {823952842}";
"$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {823952842}" -> "$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {93755600}";
"$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {93755600}" -> "specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {1202952586}";
"specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {1202952586}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1125331666}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1125331666}" -> "return {404162588}";
}

digraph scale {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1979250617}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1388491115}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1388491115}" -> "dimensions := @parameter1: java.awt.Dimension {331455781}";
"dimensions := @parameter1: java.awt.Dimension {331455781}" -> "algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {425950844}";
"algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {425950844}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1363559124}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1363559124}" -> "trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {969960740}";
"trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {969960740}" -> "$i0 = dimensions.<java.awt.Dimension: int width> {2008976953}";
"$i0 = dimensions.<java.awt.Dimension: int width> {2008976953}" -> "$i1 = dimensions.<java.awt.Dimension: int height> {1479960110}";
"$i1 = dimensions.<java.awt.Dimension: int height> {1479960110}" -> "trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1956465927}";
"trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1956465927}" -> "w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1063817469}";
"w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1063817469}" -> "h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {1993055198}";
"h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {1993055198}" -> "borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {2014315444}";
"borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {2014315444}" -> "$i2 = w * h {537922274}";
"$i2 = w * h {537922274}" -> "rgbArray#28 = newarray (int)[$i2] {1926620987}";
"rgbArray#28 = newarray (int)[$i2] {1926620987}" -> "virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {851830643}";
"virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {851830643}" -> "virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {1344429672}";
"virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {1344429672}" -> "return borderImage {1734681105}";
}

digraph trim9PBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1550011740}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1710095430}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1710095430}" -> "$r0 = new java.awt.image.BufferedImage {1744251306}";
"$r0 = new java.awt.image.BufferedImage {1744251306}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {971226871}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {971226871}" -> "$i1 = $i0 - 2 {1309037220}";
"$i1 = $i0 - 2 {1309037220}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {484898711}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {484898711}" -> "$i3 = $i2 - 2 {988361443}";
"$i3 = $i2 - 2 {988361443}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {767430462}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {767430462}" -> "trimedImage = $r0 {1634299031}";
"trimedImage = $r0 {1634299031}" -> "g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1972900914}";
"g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1972900914}" -> "$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {455104606}";
"$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {455104606}" -> "$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1490527248}";
"$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1490527248}" -> "$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {18321821}";
"$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {18321821}" -> "$i7 = $i6 - 1 {524592620}";
"$i7 = $i6 - 1 {524592620}" -> "$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1055608539}";
"$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1055608539}" -> "$i9 = $i8 - 1 {1450321437}";
"$i9 = $i8 - 1 {1450321437}" -> "virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1195250275}";
"virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {1195250275}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {697896947}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {697896947}" -> "return trimedImage {1878689290}";
}

digraph generateBordersImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1602419275}" -> "source := @parameter0: java.awt.image.BufferedImage {964478522}";
"source := @parameter0: java.awt.image.BufferedImage {964478522}" -> "trimedWidth := @parameter1: int {1540841596}";
"trimedWidth := @parameter1: int {1540841596}" -> "trimedHeight := @parameter2: int {1579546648}";
"trimedHeight := @parameter2: int {1579546648}" -> "$r0 = new java.awt.image.BufferedImage {1370921228}";
"$r0 = new java.awt.image.BufferedImage {1370921228}" -> "$i0 = trimedWidth + 2 {1693286178}";
"$i0 = trimedWidth + 2 {1693286178}" -> "$i1 = trimedHeight + 2 {1389613047}";
"$i1 = trimedHeight + 2 {1389613047}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1191357571}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1191357571}" -> "finalBorder = $r0 {332030770}";
"finalBorder = $r0 {332030770}" -> "$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1257107609}";
"$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1257107609}" -> "cutW = $i2 - 2 {1947073662}";
"cutW = $i2 - 2 {1947073662}" -> "$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {763446914}";
"$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {763446914}" -> "cutH = $i3 - 2 {1658862662}";
"cutH = $i3 - 2 {1658862662}" -> "$r1 = new java.awt.image.BufferedImage {171833122}";
"$r1 = new java.awt.image.BufferedImage {171833122}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1250409097}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1250409097}" -> "leftBorder#23 = $r1 {561656146}";
"leftBorder#23 = $r1 {561656146}" -> "$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {467010152}";
"$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {467010152}" -> "virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1594219826}";
"virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1594219826}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {2132599429}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {2132599429}" -> "leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {128935966}";
"leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {128935966}" -> "$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {114009148}";
"$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {114009148}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {1403675188}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {1403675188}" -> "$r4 = new java.awt.image.BufferedImage {136037945}";
"$r4 = new java.awt.image.BufferedImage {136037945}" -> "specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {57288815}";
"specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {57288815}" -> "rightBorder#69 = $r4 {1488522835}";
"rightBorder#69 = $r4 {1488522835}" -> "$i4 = cutW + 1 {2080223976}";
"$i4 = cutW + 1 {2080223976}" -> "$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {38889602}";
"$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {38889602}" -> "virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1006155932}";
"virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1006155932}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {169119706}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {169119706}" -> "rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1351558102}";
"rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1351558102}" -> "$i5 = trimedWidth + 1 {701822462}";
"$i5 = trimedWidth + 1 {701822462}" -> "$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {714626877}";
"$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {714626877}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1722519251}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1722519251}" -> "$r7 = new java.awt.image.BufferedImage {241306756}";
"$r7 = new java.awt.image.BufferedImage {241306756}" -> "specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1904337149}";
"specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1904337149}" -> "topBorder#119 = $r7 {1974308455}";
"topBorder#119 = $r7 {1974308455}" -> "$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1443144132}";
"$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1443144132}" -> "virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {1974692168}";
"virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {1974692168}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {961149298}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {961149298}" -> "topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {358754522}";
"topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {358754522}" -> "$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {995479965}";
"$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {995479965}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {1162496241}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {1162496241}" -> "$r10 = new java.awt.image.BufferedImage {1342611708}";
"$r10 = new java.awt.image.BufferedImage {1342611708}" -> "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {493302730}";
"specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {493302730}" -> "bottomBorder#165 = $r10 {1548557890}";
"bottomBorder#165 = $r10 {1548557890}" -> "$i6 = cutH + 1 {174119306}";
"$i6 = cutH + 1 {174119306}" -> "$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1956238738}";
"$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1956238738}" -> "virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {1005037204}";
"virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {1005037204}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {720077188}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {720077188}" -> "bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1867855845}";
"bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1867855845}" -> "$i7 = trimedHeight + 1 {323425110}";
"$i7 = trimedHeight + 1 {323425110}" -> "$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {893492900}";
"$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {893492900}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {951373927}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {951373927}" -> "return finalBorder {279671088}";
}

digraph verifyBorderImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {599872422}" -> "border := @parameter0: java.awt.image.BufferedImage {1819865832}";
"border := @parameter0: java.awt.image.BufferedImage {1819865832}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {379255712}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {379255712}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1357574506}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1357574506}" -> "$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {312250504}";
"$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {312250504}" -> "rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {1270843842}";
"rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {1270843842}" -> "i#12 = 0 {119131082}";
"i#12 = 0 {119131082}" -> "$i3 = lengthof rgb {601333964}";
"$i3 = lengthof rgb {601333964}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1618968883}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1618968883}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1726695237}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1726695237}" -> "if i#12 >= $i3 goto return {1784248551}";
"if i#12 >= $i3 goto return {1784248551}" -> "$i4 = rgb[i#12] {1806732018}";
"if i#12 >= $i3 goto return {1784248551}" -> "return {1051549981}";
"$i4 = rgb[i#12] {1806732018}" -> "$i5 = -16777216 & $i4 {1221900947}";
"$i5 = -16777216 & $i4 {1221900947}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {2092505157}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {2092505157}" -> "if $i5 == 0 goto i#12 = i#12 + 1 {519471567}";
"if $i5 == 0 goto i#12 = i#12 + 1 {519471567}" -> "$i6 = rgb[i#12] {742677056}";
"if $i5 == 0 goto i#12 = i#12 + 1 {519471567}" -> "i#12 = i#12 + 1 {338731887}";
"$i6 = rgb[i#12] {742677056}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {389732305}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {389732305}" -> "if $i6 == -16777216 goto i#12 = i#12 + 1 {617803932}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {617803932}" -> "$i7 = rgb[i#12] {347740555}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {617803932}" -> "i#12 = i#12 + 1 {338731887}";
"$i7 = rgb[i#12] {347740555}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1828951157}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1828951157}" -> "if $i7 == -65536 goto i#12 = i#12 + 1 {837184994}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {837184994}" -> "$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {1874977002}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {837184994}" -> "i#12 = i#12 + 1 {338731887}";
"$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {1874977002}" -> "specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1981620731}";
"specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1981620731}" -> "throw $r0 {1956039591}";
"i#12 = i#12 + 1 {338731887}" -> "goto [?= $i3 = lengthof rgb] {564170283}";
"goto [?= $i3 = lengthof rgb] {564170283}" -> "$i3 = lengthof rgb {601333964}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1618968883}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {389732305}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1726695237}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {2092505157}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1828951157}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph resizeBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {247433427}" -> "border := @parameter0: java.awt.image.BufferedImage {211853582}";
"border := @parameter0: java.awt.image.BufferedImage {211853582}" -> "targetWidth := @parameter1: int {2068613402}";
"targetWidth := @parameter1: int {2068613402}" -> "targetHeight := @parameter2: int {1365213637}";
"targetHeight := @parameter2: int {1365213637}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {808704167}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {808704167}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1648180811}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1648180811}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1472335559}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1472335559}" -> "if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1004329235}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1004329235}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1604506273}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1004329235}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {67653432}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1604506273}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {231271744}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {231271744}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {483247115}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {483247115}" -> "if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {48991239}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {48991239}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {67653432}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {48991239}" -> "w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {768656846}";
"$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {67653432}" -> "endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {1728385089}";
"endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {1728385089}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {2129728052}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {2129728052}" -> "return endImage {802981596}";
"w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {768656846}" -> "h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {714764657}";
"h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {714764657}" -> "data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {927453825}";
"data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {927453825}" -> "$i2 = targetWidth * targetHeight {459157748}";
"$i2 = targetWidth * targetHeight {459157748}" -> "newData = newarray (int)[$i2] {885688324}";
"newData = newarray (int)[$i2] {885688324}" -> "$i3 = targetWidth - 1 {854329856}";
"$i3 = targetWidth - 1 {854329856}" -> "$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {1112567111}";
"$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {1112567111}" -> "$f0 = (float) $i4 {1866636833}";
"$f0 = (float) $i4 {1866636833}" -> "$i5 = w - 1 {524653044}";
"$i5 = w - 1 {524653044}" -> "$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {953353412}";
"$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {953353412}" -> "$f1 = (float) $i6 {300775682}";
"$f1 = (float) $i6 {300775682}" -> "widthRatio = $f0 / $f1 {200810361}";
"widthRatio = $f0 / $f1 {200810361}" -> "$i7 = targetHeight - 1 {839243986}";
"$i7 = targetHeight - 1 {839243986}" -> "$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {842177362}";
"$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {842177362}" -> "$f2 = (float) $i8 {1427691360}";
"$f2 = (float) $i8 {1427691360}" -> "$i9 = h - 1 {2114245095}";
"$i9 = h - 1 {2114245095}" -> "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {515005681}";
"$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {515005681}" -> "$f3 = (float) $i10 {389859585}";
"$f3 = (float) $i10 {389859585}" -> "heightRatio = $f2 / $f3 {186575730}";
"heightRatio = $f2 / $f3 {186575730}" -> "y#60 = 0 {1948713007}";
"y#60 = 0 {1948713007}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {603299395}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {603299395}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1067443479}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1067443479}" -> "if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {748339886}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {748339886}" -> "x#64 = 0 {1839255640}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {748339886}" -> "$r1 = new java.awt.image.BufferedImage {1352933183}";
"x#64 = 0 {1839255640}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {57822414}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {57822414}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1110935342}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1110935342}" -> "if x#64 >= w goto y#60 = y#60 + 1 {2078766496}";
"if x#64 >= w goto y#60 = y#60 + 1 {2078766496}" -> "$i11 = y#60 * w {703237968}";
"if x#64 >= w goto y#60 = y#60 + 1 {2078766496}" -> "y#60 = y#60 + 1 {1436720883}";
"$i11 = y#60 * w {703237968}" -> "$i12 = $i11 + x#64 {1754316610}";
"$i12 = $i11 + x#64 {1754316610}" -> "$i13 = data[$i12] {932148884}";
"$i13 = data[$i12] {932148884}" -> "$i14 = -16777216 & $i13 {1247997754}";
"$i14 = -16777216 & $i13 {1247997754}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1295978157}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1295978157}" -> "if $i14 == 0 goto x#64 = x#64 + 1 {1742629220}";
"if $i14 == 0 goto x#64 = x#64 + 1 {1742629220}" -> "$f4 = (float) x#64 {1177443451}";
"if $i14 == 0 goto x#64 = x#64 + 1 {1742629220}" -> "x#64 = x#64 + 1 {871259684}";
"$f4 = (float) x#64 {1177443451}" -> "$f5 = $f4 * widthRatio {258584571}";
"$f5 = $f4 * widthRatio {258584571}" -> "$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {1215611988}";
"$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {1215611988}" -> "$i16 = targetWidth - 1 {1726753596}";
"$i16 = targetWidth - 1 {1726753596}" -> "newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {2126724254}";
"newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {2126724254}" -> "$f6 = (float) y#60 {1369646547}";
"$f6 = (float) y#60 {1369646547}" -> "$f7 = $f6 * heightRatio {1257585617}";
"$f7 = $f6 * heightRatio {1257585617}" -> "$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {958036971}";
"$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {958036971}" -> "$i18 = targetHeight - 1 {294135151}";
"$i18 = targetHeight - 1 {294135151}" -> "newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {121329636}";
"newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {121329636}" -> "$i19 = newY * targetWidth {200052062}";
"$i19 = newY * targetWidth {200052062}" -> "$i20 = $i19 + newX {951140658}";
"$i20 = $i19 + newX {951140658}" -> "$i21 = y#60 * w {2026128240}";
"$i21 = y#60 * w {2026128240}" -> "$i22 = $i21 + x#64 {1477514382}";
"$i22 = $i21 + x#64 {1477514382}" -> "$i23 = data[$i22] {1668988069}";
"$i23 = data[$i22] {1668988069}" -> "newData[$i20] = $i23 {973057145}";
"newData[$i20] = $i23 {973057145}" -> "x#64 = x#64 + 1 {871259684}";
"x#64 = x#64 + 1 {871259684}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {1670089139}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {1670089139}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {57822414}";
"y#60 = y#60 + 1 {1436720883}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {301624410}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {301624410}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {603299395}";
"$r1 = new java.awt.image.BufferedImage {1352933183}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {494328422}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {494328422}" -> "img = $r1 {238476505}";
"img = $r1 {238476505}" -> "virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1452662205}";
"virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1452662205}" -> "return img {1168856175}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {483247115}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {603299395}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {231271744}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {1295978157}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1472335559}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1648180811}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1067443479}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1110935342}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {57822414}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph enforceBorderColors {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1919340048}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1780008838}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1780008838}" -> "g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {442658509}";
"g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {442658509}" -> "$r0 = new java.awt.Color {110786367}";
"$r0 = new java.awt.Color {110786367}" -> "specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {1891349496}";
"specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {1891349496}" -> "virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {2130041605}";
"virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {2130041605}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {183284157}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {183284157}" -> "$i1 = $i0 - 2 {1837297882}";
"$i1 = $i0 - 2 {1837297882}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1580598586}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1580598586}" -> "$i3 = $i2 - 2 {1207198308}";
"$i3 = $i2 - 2 {1207198308}" -> "virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {937688704}";
"virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {937688704}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {922649383}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {922649383}" -> "w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1890167363}";
"w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1890167363}" -> "h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1338194853}";
"h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1338194853}" -> "$i4 = w * h {1901099036}";
"$i4 = w * h {1901099036}" -> "rgb = newarray (int)[$i4] {516599003}";
"rgb = newarray (int)[$i4] {516599003}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {2130110951}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {2130110951}" -> "i#40 = 0 {870878207}";
"i#40 = 0 {870878207}" -> "$i5 = lengthof rgb {1423961099}";
"$i5 = lengthof rgb {1423961099}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {489311122}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {489311122}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1874147744}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1874147744}" -> "if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {597635612}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {597635612}" -> "$i6 = rgb[i#40] {372146824}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {597635612}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1959011314}";
"$i6 = rgb[i#40] {372146824}" -> "$i7 = -16777216 & $i6 {1664332612}";
"$i7 = -16777216 & $i6 {1664332612}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1685167483}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1685167483}" -> "if $i7 == 0 goto i#40 = i#40 + 1 {2118997408}";
"if $i7 == 0 goto i#40 = i#40 + 1 {2118997408}" -> "rgb[i#40] = -16777216 {1626176654}";
"if $i7 == 0 goto i#40 = i#40 + 1 {2118997408}" -> "i#40 = i#40 + 1 {946488916}";
"rgb[i#40] = -16777216 {1626176654}" -> "i#40 = i#40 + 1 {946488916}";
"i#40 = i#40 + 1 {946488916}" -> "goto [?= $i5 = lengthof rgb] {1161437411}";
"goto [?= $i5 = lengthof rgb] {1161437411}" -> "$i5 = lengthof rgb {1423961099}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1959011314}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {947026439}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {947026439}" -> "$i8 = h - 1 {606329120}";
"$i8 = h - 1 {606329120}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {199422355}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {199422355}" -> "$i9 = w - 1 {1269669175}";
"$i9 = w - 1 {1269669175}" -> "$i10 = h - 1 {1539139971}";
"$i10 = h - 1 {1539139971}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {623414808}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {623414808}" -> "$i11 = w - 1 {1286438915}";
"$i11 = w - 1 {1286438915}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {2034526530}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {2034526530}" -> "return {1506362353}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {489311122}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1685167483}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1874147744}"[fontcolor="blue", penwidth=3, color="blue"];
}


