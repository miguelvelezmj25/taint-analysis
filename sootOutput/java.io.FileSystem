    static void <clinit>()
    {
        boolean $z0, $z1, $z2, $z3;

        <java.io.FileSystem: boolean useCanonCaches> = 1;

        <java.io.FileSystem: boolean useCanonPrefixCache> = 1;

        $z0 = <java.io.FileSystem: boolean useCanonCaches>;

        $z1 = staticinvoke <java.io.FileSystem: boolean getBooleanProperty(java.lang.String,boolean)>("sun.io.useCanonCaches", $z0);

        <java.io.FileSystem: boolean useCanonCaches> = $z1;

        $z2 = <java.io.FileSystem: boolean useCanonPrefixCache>;

        $z3 = staticinvoke <java.io.FileSystem: boolean getBooleanProperty(java.lang.String,boolean)>("sun.io.useCanonPrefixCache", $z2);

        <java.io.FileSystem: boolean useCanonPrefixCache> = $z3;

        return;
    }

    private static boolean getBooleanProperty(java.lang.String, boolean)
    {
        java.lang.String l0, l2;
        boolean l1, $z0;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: boolean;

        l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2);

        if l2 != null goto label1;

        return l1;

     label1:
        $z0 = virtualinvoke l2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    void <init>()
    {
        java.io.FileSystem l0;

        l0 := @this: java.io.FileSystem;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }


