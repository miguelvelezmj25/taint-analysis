    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/utilint/StoppableThread";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.utilint.StoppableThread: boolean $assertionsDisabled> = $z1;

        return;
    }

    public static void handleUncaughtException(java.util.logging.Logger, com.sleepycat.je.dbi.EnvironmentImpl, java.lang.Thread, java.lang.Throwable)
    {
        java.util.logging.Logger useLogger;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.lang.Thread t;
        java.lang.Throwable e;
        java.lang.String envName, $r1, $r5, message#19, $r11, $r16;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r0;
        com.sleepycat.je.EnvironmentFailureException l4, $r14, $r15;
        com.sleepycat.je.ExceptionListener exceptionListener;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r12;
        java.util.logging.Level $r13;
        boolean $z0;
        com.sleepycat.je.ExceptionEvent $r17;

        useLogger := @parameter0: java.util.logging.Logger;

        envImpl := @parameter1: com.sleepycat.je.dbi.EnvironmentImpl;

        t := @parameter2: java.lang.Thread;

        e := @parameter3: java.lang.Throwable;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(useLogger);

        if useLogger == null goto label5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(envImpl);

        if envImpl != null goto label1;

        $r1 = "";

        goto label2;

     label1:
        $r1 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String getName()>();

     label2:
        envName = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envName);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke t.<java.lang.Thread: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exited unexpectedly with exception ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);

        message#19 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(e);

        if e == null goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message#19);

        $r11 = staticinvoke <com.sleepycat.je.utilint.LoggerUtils: java.lang.String getStackTrace(java.lang.Throwable)>(e);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        message#19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(envImpl);

        if envImpl == null goto label4;

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void severe(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(useLogger, envImpl, message#19);

        goto label5;

     label4:
        $r13 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke useLogger.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r13, message#19);

     label5:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(envImpl);

        if envImpl != null goto label6;

        return;

     label6:
        $z0 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isValid()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label7;

        $r14 = new com.sleepycat.je.EnvironmentFailureException;

        $r0 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason UNCAUGHT_EXCEPTION>;

        specialinvoke $r14.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>(envImpl, $r0, e);

        l4 = $r14;

     label7:
        exceptionListener = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ExceptionListener getExceptionListener()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(exceptionListener);

        if exceptionListener == null goto label8;

        $r15 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException getInvalidatingException()>();

        $r16 = virtualinvoke t.<java.lang.Thread: java.lang.String getName()>();

        $r17 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.ExceptionEvent makeExceptionEvent(java.lang.Exception,java.lang.String)>($r15, $r16);

        interfaceinvoke exceptionListener.<com.sleepycat.je.ExceptionListener: void exceptionThrown(com.sleepycat.je.ExceptionEvent)>($r17);

     label8:
        return;
    }


