    static void exit(int)
    {
        int l0, $i0;
        java.lang.Throwable l3, l4, $r1, $r3;
        boolean l1#2;
        java.lang.Object $r0, l2#5;
        java.lang.Class l2#21;

        l0 := @parameter0: int;

        l1#2 = 0;

        $r0 = <java.lang.Shutdown: java.lang.Object lock>;

        l2#5 = $r0;

        entermonitor $r0;

     label01:
        if l0 == 0 goto label02;

        <java.lang.Shutdown: boolean runFinalizersOnExit> = 0;

     label02:
        $i0 = <java.lang.Shutdown: int state>;

        tableswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            default: goto label07;
        };

     label03:
        <java.lang.Shutdown: int state> = 1;

        goto label07;

     label04:
        goto label07;

     label05:
        if l0 == 0 goto label06;

        staticinvoke <java.lang.Shutdown: void halt(int)>(l0);

        goto label07;

     label06:
        l1#2 = <java.lang.Shutdown: boolean runFinalizersOnExit>;

     label07:
        exitmonitor l2#5;

     label08:
        goto label12;

     label09:
        $r1 := @caughtexception;

     label10:
        l3 = $r1;

        exitmonitor l2#5;

     label11:
        throw l3;

     label12:
        if l1#2 == 0 goto label13;

        staticinvoke <java.lang.Shutdown: void runAllFinalizers()>();

        staticinvoke <java.lang.Shutdown: void halt(int)>(l0);

     label13:
        l2#21 = class "java/lang/Shutdown";

        entermonitor class "java/lang/Shutdown";

     label14:
        staticinvoke <java.lang.Shutdown: void sequence()>();

        staticinvoke <java.lang.Shutdown: void halt(int)>(l0);

        exitmonitor l2#21;

     label15:
        goto label19;

     label16:
        $r3 := @caughtexception;

     label17:
        l4 = $r3;

        exitmonitor l2#21;

     label18:
        throw l4;

     label19:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    static void <clinit>()
    {
        java.lang.Runnable[] $r0;
        java.lang.Shutdown$Lock $r1, $r2;

        <java.lang.Shutdown: int state> = 0;

        <java.lang.Shutdown: boolean runFinalizersOnExit> = 0;

        $r0 = newarray (java.lang.Runnable)[10];

        <java.lang.Shutdown: java.lang.Runnable[] hooks> = $r0;

        <java.lang.Shutdown: int currentRunningHook> = 0;

        $r1 = new java.lang.Shutdown$Lock;

        specialinvoke $r1.<java.lang.Shutdown$Lock: void <init>(java.lang.Shutdown$1)>(null);

        <java.lang.Shutdown: java.lang.Object lock> = $r1;

        $r2 = new java.lang.Shutdown$Lock;

        specialinvoke $r2.<java.lang.Shutdown$Lock: void <init>(java.lang.Shutdown$1)>(null);

        <java.lang.Shutdown: java.lang.Object haltLock> = $r2;

        return;
    }

    static void halt(int)
    {
        int l0;
        java.lang.Object l1, $r0;
        java.lang.Throwable l2, $r1;

        l0 := @parameter0: int;

        $r0 = <java.lang.Shutdown: java.lang.Object haltLock>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        staticinvoke <java.lang.Shutdown: void halt0(int)>(l0);

        exitmonitor l1;

     label2:
        goto label6;

     label3:
        $r1 := @caughtexception;

     label4:
        l2 = $r1;

        exitmonitor l1;

     label5:
        throw l2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void sequence()
    {
        java.lang.Throwable l2, $r1, l1#9, $r3;
        java.lang.Object $r0, l0#3, $r2, l1#14;
        int $i0;
        boolean l0#17;

        $r0 = <java.lang.Shutdown: java.lang.Object lock>;

        l0#3 = $r0;

        entermonitor $r0;

     label01:
        $i0 = <java.lang.Shutdown: int state>;

        if $i0 == 1 goto label03;

        exitmonitor l0#3;

     label02:
        return;

     label03:
        exitmonitor l0#3;

     label04:
        goto label08;

     label05:
        $r1 := @caughtexception;

     label06:
        l1#9 = $r1;

        exitmonitor l0#3;

     label07:
        throw l1#9;

     label08:
        staticinvoke <java.lang.Shutdown: void runHooks()>();

        $r2 = <java.lang.Shutdown: java.lang.Object lock>;

        l1#14 = $r2;

        entermonitor $r2;

     label09:
        <java.lang.Shutdown: int state> = 2;

        l0#17 = <java.lang.Shutdown: boolean runFinalizersOnExit>;

        exitmonitor l1#14;

     label10:
        goto label14;

     label11:
        $r3 := @caughtexception;

     label12:
        l2 = $r3;

        exitmonitor l1#14;

     label13:
        throw l2;

     label14:
        if l0#17 == 0 goto label15;

        staticinvoke <java.lang.Shutdown: void runAllFinalizers()>();

     label15:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private static void runHooks()
    {
        java.lang.Throwable l3, $r2, $r3, l1#20;
        int l0#2;
        java.lang.Object $r0, l2#7;
        java.lang.Runnable[] $r1;
        java.lang.Runnable l1#12;
        boolean $z0;
        java.lang.ThreadDeath l2#25;

        l0#2 = 0;

     label01:
        if l0#2 >= 10 goto label12;

     label02:
        $r0 = <java.lang.Shutdown: java.lang.Object lock>;

        l2#7 = $r0;

        entermonitor $r0;

     label03:
        <java.lang.Shutdown: int currentRunningHook> = l0#2;

        $r1 = <java.lang.Shutdown: java.lang.Runnable[] hooks>;

        l1#12 = $r1[l0#2];

        exitmonitor l2#7;

     label04:
        goto label08;

     label05:
        $r2 := @caughtexception;

     label06:
        l3 = $r2;

        exitmonitor l2#7;

     label07:
        throw l3;

     label08:
        if l1#12 == null goto label09;

        interfaceinvoke l1#12.<java.lang.Runnable: void run()>();

     label09:
        goto label11;

     label10:
        $r3 := @caughtexception;

        l1#20 = $r3;

        $z0 = l1#20 instanceof java.lang.ThreadDeath;

        if $z0 == 0 goto label11;

        l2#25 = (java.lang.ThreadDeath) l1#20;

        throw l2#25;

     label11:
        l0#2 = l0#2 + 1;

        goto label01;

     label12:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label02 to label09 with label10;
    }


