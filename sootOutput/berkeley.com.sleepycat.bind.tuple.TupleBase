    public static void outputToEntry(berkeley.com.sleepycat.bind.tuple.TupleOutput, berkeley.com.sleepycat.je.DatabaseEntry)
    {
        berkeley.com.sleepycat.bind.tuple.TupleOutput output;
        berkeley.com.sleepycat.je.DatabaseEntry entry;
        byte[] $r0;
        int $i0, $i1;

        output := @parameter0: berkeley.com.sleepycat.bind.tuple.TupleOutput;

        entry := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry;

        $r0 = virtualinvoke output.<berkeley.com.sleepycat.bind.tuple.TupleOutput: byte[] getBufferBytes()>();

        $i0 = 0;

        $i1 = virtualinvoke output.<berkeley.com.sleepycat.bind.tuple.TupleOutput: int getBufferLength()>();

        virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>($r0, 0, $i1);

        return;
    }

    public void <init>()
    {
        berkeley.com.sleepycat.bind.tuple.TupleBase this;

        this := @this: berkeley.com.sleepycat.bind.tuple.TupleBase;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.bind.tuple.TupleBase: int outputBufferSize> = 0;

        return;
    }

    public static berkeley.com.sleepycat.bind.tuple.TupleInput entryToInput(berkeley.com.sleepycat.je.DatabaseEntry)
    {
        berkeley.com.sleepycat.je.DatabaseEntry entry;
        berkeley.com.sleepycat.bind.tuple.TupleInput $r0;
        byte[] $r1;
        int $i0, $i1;

        entry := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry;

        $r0 = new berkeley.com.sleepycat.bind.tuple.TupleInput;

        $r1 = virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i0 = virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $i1 = virtualinvoke entry.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>();

        specialinvoke $r0.<berkeley.com.sleepycat.bind.tuple.TupleInput: void <init>(byte[],int,int)>($r1, $i0, $i1);

        return $r0;
    }


