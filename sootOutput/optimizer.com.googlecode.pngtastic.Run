    public static void main(java.lang.String[]) throws java.lang.InterruptedException
    {
        java.lang.String[] args, files#45, files#48;
        java.util.HashMap options, $r1;
        java.lang.String arg, toDir, fileSuffix, $r2, $r9, $r12, $r14, $r16, $r18, $r20, $r22, logLevel#108, compressor#110;
        int next, last#7, i#9, $i0, $i1, $i2, $i3;
        java.lang.Boolean removeGamma, $r15, $r17, $r19, $r21, $r23;
        java.io.PrintStream $r0, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Object[] $r5;
        java.lang.Object $r8, $r10, $r11, $r13;
        java.lang.Integer compressionLevel#106, iterations#113;
        optimizer.com.googlecode.pngtastic.PngtasticOptimizer $r24;

        args := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Original");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(1500L);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        options = $r1;

        last#7 = 0;

        i#9 = 0;

     label01:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#9 >= $i0 goto label04;

        arg = args[i#9];

        $z0 = virtualinvoke arg.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        next = i#9 + 1;

        $i1 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(next);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if next >= $i1 goto label02;

        $r2 = args[next];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, $r2);

        last#7 = next + 1;

        goto label03;

     label02:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, null);

        last#7 = next;

     label03:
        i#9 = i#9 + 1;

        goto label01;

     label04:
        $i2 = lengthof args;

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#7, $i2);

        files#45 = (java.lang.String[]) $r5;

        files#48 = newarray (java.lang.String)[1];

        files#48[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/pngtastic-optimizer/images/optimizer/car.png";

        $i3 = lengthof files#48;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label05;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("java -cp pngtastic-x.x.jar optimizer.com.googlecode.pngtastic.PngtasticOptimizer [options] file1 [file2 ..]\nOptions:\n  --toDir            the directory where optimized files go (will be created if it doesn\'t exist)\n  --fileSuffix       string appended to the optimized files (file.png can become file.png.optimized.png)\n  --removeGamma      remove gamma correction info if found\n  --compressionLevel the compression level; 0-9 allowed (default is to try them all by brute force)\n  --compressor       path to an alternate compressor (e.g. zopfli)\n  --iterations       number of compression iterations (useful for zopfli)\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label05:
        $r8 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8);

        if $r8 != null goto label06;

        $r9 = ".";

        goto label07;

     label06:
        $r10 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        $r9 = (java.lang.String) $r10;

     label07:
        toDir = $r9;

        $r11 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r11);

        if $r11 != null goto label08;

        $r12 = "";

        goto label09;

     label08:
        $r13 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        $r12 = (java.lang.String) $r13;

     label09:
        fileSuffix = $r12;

        $r14 = args[0];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        $z1 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSOR(boolean)>($z1);

        <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSOR> = $z2;

        $r16 = args[1];

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r16);

        $z3 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionITERATIONS(boolean)>($z3);

        <optimizer.com.googlecode.pngtastic.Run: boolean ITERATIONS> = $z4;

        $r18 = args[2];

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r18);

        $z5 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLOGLEVEL(boolean)>($z5);

        <optimizer.com.googlecode.pngtastic.Run: boolean LOGLEVEL> = $z6;

        $r20 = args[3];

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r20);

        $z7 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSIONLEVEL(boolean)>($z7);

        <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSIONLEVEL> = $z8;

        $r22 = args[4];

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r22);

        $z9 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREMOVEGAMMA(boolean)>($z9);

        <optimizer.com.googlecode.pngtastic.Run: boolean REMOVEGAMMA> = $z10;

        $z11 = <optimizer.com.googlecode.pngtastic.Run: boolean REMOVEGAMMA>;

        removeGamma = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        compressionLevel#106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        logLevel#108 = "none";

        compressor#110 = "none";

        iterations#113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z12 = <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSIONLEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label10;

        compressionLevel#106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

     label10:
        $z13 = <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSOR>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 == 0 goto label11;

        compressor#110 = "zopfli";

     label11:
        $z14 = <optimizer.com.googlecode.pngtastic.Run: boolean ITERATIONS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z14);

        if $z14 == 0 goto label12;

        iterations#113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

     label12:
        $z15 = <optimizer.com.googlecode.pngtastic.Run: boolean LOGLEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        if $z15 == 0 goto label13;

        logLevel#108 = "debug";

     label13:
        $r24 = new optimizer.com.googlecode.pngtastic.PngtasticOptimizer;

        specialinvoke $r24.<optimizer.com.googlecode.pngtastic.PngtasticOptimizer: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>(toDir, files#48, fileSuffix, removeGamma, compressionLevel#106, compressor#110, iterations#113, logLevel#108);

        return;
    }

    public void <init>()
    {
        optimizer.com.googlecode.pngtastic.Run this;

        this := @this: optimizer.com.googlecode.pngtastic.Run;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


