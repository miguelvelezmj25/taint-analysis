    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <java.util.IdentityHashMap: java.lang.Object NULL_KEY> = $r0;

        return;
    }

    public boolean isEmpty()
    {
        java.util.IdentityHashMap l0;
        int $i0;
        boolean $z0;

        l0 := @this: java.util.IdentityHashMap;

        $i0 = l0.<java.util.IdentityHashMap: int size>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.IdentityHashMap l0;
        java.util.Set l1#3;
        java.util.IdentityHashMap$KeySet $r0;

        l0 := @this: java.util.IdentityHashMap;

        l1#3 = l0.<java.util.IdentityHashMap: java.util.Set keySet>;

        if l1#3 != null goto label1;

        $r0 = new java.util.IdentityHashMap$KeySet;

        specialinvoke $r0.<java.util.IdentityHashMap$KeySet: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>(l0, null);

        l1#3 = $r0;

        l0.<java.util.IdentityHashMap: java.util.Set keySet> = l1#3;

     label1:
        return l1#3;
    }

    public void <init>()
    {
        java.util.IdentityHashMap l0;

        l0 := @this: java.util.IdentityHashMap;

        specialinvoke l0.<java.util.AbstractMap: void <init>()>();

        specialinvoke l0.<java.util.IdentityHashMap: void init(int)>(32);

        return;
    }

    private void init(int)
    {
        java.util.IdentityHashMap l0;
        int l1, $i0;
        java.lang.Object[] $r0;

        l0 := @this: java.util.IdentityHashMap;

        l1 := @parameter0: int;

        $i0 = 2 * l1;

        $r0 = newarray (java.lang.Object)[$i0];

        l0.<java.util.IdentityHashMap: java.lang.Object[] table> = $r0;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.IdentityHashMap l0;
        java.lang.Object l1, l2, l6;
        java.lang.Object[] l3;
        int l4, l5#10;

        l0 := @this: java.util.IdentityHashMap;

        l1 := @parameter0: java.lang.Object;

        l2 = staticinvoke <java.util.IdentityHashMap: java.lang.Object maskNull(java.lang.Object)>(l1);

        l3 = l0.<java.util.IdentityHashMap: java.lang.Object[] table>;

        l4 = lengthof l3;

        l5#10 = staticinvoke <java.util.IdentityHashMap: int hash(java.lang.Object,int)>(l2, l4);

     label1:
        l6 = l3[l5#10];

        if l6 != l2 goto label2;

        return 1;

     label2:
        if l6 != null goto label3;

        return 0;

     label3:
        l5#10 = staticinvoke <java.util.IdentityHashMap: int nextKeyIndex(int,int)>(l5#10, l4);

        goto label1;
    }

    private static int nextKeyIndex(int, int)
    {
        int l0, l1, $i0, $i1;

        l0 := @parameter0: int;

        l1 := @parameter1: int;

        $i0 = l0 + 2;

        if $i0 >= l1 goto label1;

        $i1 = l0 + 2;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    private static int hash(java.lang.Object, int)
    {
        java.lang.Object l0;
        int l1, l2, $i0, $i1, $i2, $i3, $i4;

        l0 := @parameter0: java.lang.Object;

        l1 := @parameter1: int;

        l2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(l0);

        $i0 = l2 << 1;

        $i1 = l2 << 8;

        $i2 = $i0 - $i1;

        $i3 = l1 - 1;

        $i4 = $i2 & $i3;

        return $i4;
    }

    private static java.lang.Object maskNull(java.lang.Object)
    {
        java.lang.Object l0, $r0;

        l0 := @parameter0: java.lang.Object;

        if l0 != null goto label1;

        $r0 = <java.util.IdentityHashMap: java.lang.Object NULL_KEY>;

        goto label2;

     label1:
        $r0 = l0;

     label2:
        return $r0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.IdentityHashMap l0;
        java.lang.Object l1, l2, l3, l8, $r0, l7#15;
        java.lang.Object[] l4;
        int l5, l6#10, $i0, $i1, $i2, l7#36, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        l0 := @this: java.util.IdentityHashMap;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.lang.Object;

        l3 = staticinvoke <java.util.IdentityHashMap: java.lang.Object maskNull(java.lang.Object)>(l1);

     label1:
        l4 = l0.<java.util.IdentityHashMap: java.lang.Object[] table>;

        l5 = lengthof l4;

        l6#10 = staticinvoke <java.util.IdentityHashMap: int hash(java.lang.Object,int)>(l3, l5);

     label2:
        $r0 = l4[l6#10];

        l7#15 = $r0;

        if $r0 == null goto label4;

        if l7#15 != l3 goto label3;

        $i0 = l6#10 + 1;

        l8 = l4[$i0];

        $i1 = l6#10 + 1;

        l4[$i1] = l2;

        return l8;

     label3:
        l6#10 = staticinvoke <java.util.IdentityHashMap: int nextKeyIndex(int,int)>(l6#10, l5);

        goto label2;

     label4:
        $i2 = l0.<java.util.IdentityHashMap: int size>;

        l7#36 = $i2 + 1;

        $i3 = l7#36 << 1;

        $i4 = l7#36 + $i3;

        if $i4 <= l5 goto label5;

        $z0 = specialinvoke l0.<java.util.IdentityHashMap: boolean resize(int)>(l5);

        if $z0 == 0 goto label5;

        goto label1;

     label5:
        $i5 = l0.<java.util.IdentityHashMap: int modCount>;

        $i6 = $i5 + 1;

        l0.<java.util.IdentityHashMap: int modCount> = $i6;

        l4[l6#10] = l3;

        $i7 = l6#10 + 1;

        l4[$i7] = l2;

        l0.<java.util.IdentityHashMap: int size> = l7#36;

        return null;
    }

    private boolean resize(int)
    {
        java.util.IdentityHashMap l0;
        int l1, l2, l4, $i0, l6#23, $i1, $i2, l9#46, $i3;
        java.lang.Object[] l3, l5;
        java.lang.Object l7, l8, $r1;
        java.lang.IllegalStateException $r0;

        l0 := @this: java.util.IdentityHashMap;

        l1 := @parameter0: int;

        l2 = l1 * 2;

        l3 = l0.<java.util.IdentityHashMap: java.lang.Object[] table>;

        l4 = lengthof l3;

        if l4 != 1073741824 goto label2;

        $i0 = l0.<java.util.IdentityHashMap: int size>;

        if $i0 != 536870911 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Capacity exhausted.");

        throw $r0;

     label1:
        return 0;

     label2:
        if l4 < l2 goto label3;

        return 0;

     label3:
        l5 = newarray (java.lang.Object)[l2];

        l6#23 = 0;

     label4:
        if l6#23 >= l4 goto label8;

        l7 = l3[l6#23];

        if l7 == null goto label7;

        $i1 = l6#23 + 1;

        l8 = l3[$i1];

        l3[l6#23] = null;

        $i2 = l6#23 + 1;

        l3[$i2] = null;

        l9#46 = staticinvoke <java.util.IdentityHashMap: int hash(java.lang.Object,int)>(l7, l2);

     label5:
        $r1 = l5[l9#46];

        if $r1 == null goto label6;

        l9#46 = staticinvoke <java.util.IdentityHashMap: int nextKeyIndex(int,int)>(l9#46, l2);

        goto label5;

     label6:
        l5[l9#46] = l7;

        $i3 = l9#46 + 1;

        l5[$i3] = l8;

     label7:
        l6#23 = l6#23 + 2;

        goto label4;

     label8:
        l0.<java.util.IdentityHashMap: java.lang.Object[] table> = l5;

        return 1;
    }


