    public static org.unix4j.find.unix.find.TypeFilter valueOf(org.unix4j.find.unix.find.FindArguments)
    {
        org.unix4j.find.unix.find.FindArguments arguments;
        org.unix4j.find.unix.find.TypeFilter typeFilter#2;
        boolean $z0, $z1, $z2, $z3;
        org.unix4j.find.unix.find.TypeFilter$Directory $r0;
        org.unix4j.find.unix.find.TypeFilter$RegularFile $r1;
        org.unix4j.find.unix.find.TypeFilter$Other $r2;
        org.unix4j.find.unix.find.TypeFilter$SymbolicLink $r3;

        arguments := @parameter0: org.unix4j.find.unix.find.FindArguments;

        typeFilter#2 = null;

        $z0 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTypeDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = new org.unix4j.find.unix.find.TypeFilter$Directory;

        specialinvoke $r0.<org.unix4j.find.unix.find.TypeFilter$Directory: void <init>()>();

        typeFilter#2 = $r0;

        goto label4;

     label1:
        $z1 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTypeFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r1 = new org.unix4j.find.unix.find.TypeFilter$RegularFile;

        specialinvoke $r1.<org.unix4j.find.unix.find.TypeFilter$RegularFile: void <init>()>();

        typeFilter#2 = $r1;

        goto label4;

     label2:
        $z2 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTypeOther()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r2 = new org.unix4j.find.unix.find.TypeFilter$Other;

        specialinvoke $r2.<org.unix4j.find.unix.find.TypeFilter$Other: void <init>()>();

        typeFilter#2 = $r2;

        goto label4;

     label3:
        $z3 = virtualinvoke arguments.<org.unix4j.find.unix.find.FindArguments: boolean isTypeSymlink()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label4;

        $r3 = new org.unix4j.find.unix.find.TypeFilter$SymbolicLink;

        specialinvoke $r3.<org.unix4j.find.unix.find.TypeFilter$SymbolicLink: void <init>()>();

        typeFilter#2 = $r3;

     label4:
        return typeFilter#2;
    }

    public void <init>()
    {
        org.unix4j.find.unix.find.TypeFilter this;

        this := @this: org.unix4j.find.unix.find.TypeFilter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


