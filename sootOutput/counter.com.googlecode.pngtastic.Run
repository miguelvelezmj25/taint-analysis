    public static void main(java.lang.String[])
    {
        java.lang.String[] args, files#44, files#47;
        java.util.HashMap options, $r1;
        java.lang.String arg, $r2, $r8, $r10, $r12, $r14, $r16, logLevel#113;
        int next, last#6, i#8, $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.PrintStream $r0, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Object[] $r5;
        java.lang.Boolean $r9, $r11, $r13, $r15, $r17;
        java.lang.Double distThreshold#90, freqThreshold#96;
        java.lang.Integer minAlpha#102, timeout#108;
        counter.com.googlecode.pngtastic.PngtasticColorCounter $r18;
        double $d0, $d1;
        long $l6;

        args := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Original");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        options = $r1;

        last#6 = 0;

        i#8 = 0;

     label01:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#8 >= $i0 goto label04;

        arg = args[i#8];

        $z0 = virtualinvoke arg.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        next = i#8 + 1;

        $i1 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(next);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if next >= $i1 goto label02;

        $r2 = args[next];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, $r2);

        last#6 = next + 1;

        goto label03;

     label02:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, null);

        last#6 = next;

     label03:
        i#8 = i#8 + 1;

        goto label01;

     label04:
        $i2 = lengthof args;

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#6, $i2);

        files#44 = (java.lang.String[]) $r5;

        files#47 = newarray (java.lang.String)[1];

        files#47[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/pngtastic-counter/images/optimizer/lena.png";

        $i3 = lengthof files#47;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label05;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("java -jar pngtastic-x.x.jar com.googlecode.pngtastic.PngtasticColorCounter [options] file1 [file2 ..]\nOptions:\n  --distThreshold    the distance below which two colors are considered similar (0.0 to 1.0)\n  --freqThreshold    the percentage a color must be represented in the overall image (0.0 to 1.0)\n  --minAlpha         the minimum alpha channel value a pixel must have\n  --timeout          the number of milliseconds after which color counting will be aborted\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label05:
        $r8 = args[0];

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFreqThreshold(boolean)>($z1);

        <counter.com.googlecode.pngtastic.Run: boolean FREQTHRESHOLD> = $z2;

        $r10 = args[1];

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        $z3 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDistThreshold(boolean)>($z3);

        <counter.com.googlecode.pngtastic.Run: boolean DISTTHRESHOLD> = $z4;

        $r12 = args[2];

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        $z5 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMinAlpha(boolean)>($z5);

        <counter.com.googlecode.pngtastic.Run: boolean MINALPHA> = $z6;

        $r14 = args[3];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        $z7 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTimeout(boolean)>($z7);

        <counter.com.googlecode.pngtastic.Run: boolean TIMEOUT> = $z8;

        $r16 = args[4];

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r16);

        $z9 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLogLevel(boolean)>($z9);

        <counter.com.googlecode.pngtastic.Run: boolean LOGLEVEL> = $z10;

        $z11 = <counter.com.googlecode.pngtastic.Run: boolean DISTTHRESHOLD>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label06;

        distThreshold#90 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label07;

     label06:
        distThreshold#90 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

     label07:
        $z12 = <counter.com.googlecode.pngtastic.Run: boolean FREQTHRESHOLD>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label08;

        freqThreshold#96 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label09;

     label08:
        freqThreshold#96 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

     label09:
        $z13 = <counter.com.googlecode.pngtastic.Run: boolean MINALPHA>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 == 0 goto label10;

        minAlpha#102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label11;

     label10:
        minAlpha#102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

     label11:
        $z14 = <counter.com.googlecode.pngtastic.Run: boolean TIMEOUT>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z14);

        if $z14 == 0 goto label12;

        timeout#108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label13;

     label12:
        timeout#108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1000000);

     label13:
        $z15 = <counter.com.googlecode.pngtastic.Run: boolean LOGLEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        if $z15 == 0 goto label14;

        logLevel#113 = "debug";

        goto label15;

     label14:
        logLevel#113 = "none";

     label15:
        $r18 = new counter.com.googlecode.pngtastic.PngtasticColorCounter;

        $d0 = virtualinvoke distThreshold#90.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke freqThreshold#96.<java.lang.Double: double doubleValue()>();

        $i4 = virtualinvoke minAlpha#102.<java.lang.Integer: int intValue()>();

        $i5 = virtualinvoke timeout#108.<java.lang.Integer: int intValue()>();

        $l6 = (long) $i5;

        specialinvoke $r18.<counter.com.googlecode.pngtastic.PngtasticColorCounter: void <init>(java.lang.String[],java.lang.String,double,double,int,long)>(files#47, logLevel#113, $d0, $d1, $i4, $l6);

        return;
    }

    public void <init>()
    {
        counter.com.googlecode.pngtastic.Run this;

        this := @this: counter.com.googlecode.pngtastic.Run;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


