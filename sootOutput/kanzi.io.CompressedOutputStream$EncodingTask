    void <init>(kanzi.SliceByteArray, kanzi.SliceByteArray, int, short, short, int, kanzi.OutputBitStream, kanzi.util.hash.XXHash32, java.util.concurrent.atomic.AtomicInteger, kanzi.Listener[], int)
    {
        kanzi.io.CompressedOutputStream$EncodingTask l0;
        kanzi.SliceByteArray l1, l2;
        int l3, l6, l11;
        short l4, l5;
        kanzi.OutputBitStream l7;
        kanzi.util.hash.XXHash32 l8;
        java.util.concurrent.atomic.AtomicInteger l9;
        kanzi.Listener[] l10;

        l0 := @this: kanzi.io.CompressedOutputStream$EncodingTask;

        l1 := @parameter0: kanzi.SliceByteArray;

        l2 := @parameter1: kanzi.SliceByteArray;

        l3 := @parameter2: int;

        l4 := @parameter3: short;

        l5 := @parameter4: short;

        l6 := @parameter5: int;

        l7 := @parameter6: kanzi.OutputBitStream;

        l8 := @parameter7: kanzi.util.hash.XXHash32;

        l9 := @parameter8: java.util.concurrent.atomic.AtomicInteger;

        l10 := @parameter9: kanzi.Listener[];

        l11 := @parameter10: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: kanzi.SliceByteArray data> = l1;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: kanzi.SliceByteArray buffer> = l2;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: int length> = l3;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: short transformType> = l4;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: short entropyType> = l5;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: int blockId> = l6;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: kanzi.OutputBitStream obs> = l7;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: kanzi.util.hash.XXHash32 hasher> = l8;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: java.util.concurrent.atomic.AtomicInteger processedBlockId> = l9;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: kanzi.Listener[] listeners> = l10;

        l0.<kanzi.io.CompressedOutputStream$EncodingTask: int blockSize> = l11;

        return;
    }


