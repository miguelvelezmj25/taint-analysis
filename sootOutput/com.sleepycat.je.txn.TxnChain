    public com.sleepycat.je.txn.TxnChain$RevertInfo pop()
    {
        com.sleepycat.je.txn.TxnChain this;
        java.util.LinkedList $r0;
        java.lang.Object $r1;
        com.sleepycat.je.txn.TxnChain$RevertInfo $r2;

        this := @this: com.sleepycat.je.txn.TxnChain;

        $r0 = this.<com.sleepycat.je.txn.TxnChain: java.util.LinkedList revertList>;

        $r1 = virtualinvoke $r0.<java.util.LinkedList: java.lang.Object remove()>();

        $r2 = (com.sleepycat.je.txn.TxnChain$RevertInfo) $r1;

        return $r2;
    }

    public void <init>(long, long, long, com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.txn.TxnChain this;
        long lastLoggedLsn, txnId, matchpoint;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;

        this := @this: com.sleepycat.je.txn.TxnChain;

        lastLoggedLsn := @parameter0: long;

        txnId := @parameter1: long;

        matchpoint := @parameter2: long;

        envImpl := @parameter3: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<com.sleepycat.je.txn.TxnChain: void <init>(long,long,long,java.util.Map,com.sleepycat.je.dbi.EnvironmentImpl)>(lastLoggedLsn, txnId, matchpoint, null, envImpl);

        return;
    }

    public void <init>(long, long, long, java.util.Map, com.sleepycat.je.dbi.EnvironmentImpl) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.TxnChain this;
        long lastLoggedLsn, txnId, matchpoint, currLsn#17, $l1, $l4, $l5;
        java.util.Map undoDatabases;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        com.sleepycat.je.log.LogManager logManager;
        java.util.TreeMap recordsMap, $r1;
        com.sleepycat.je.log.WholeEntry wholeEntry;
        com.sleepycat.je.log.entry.LNLogEntry currLogrec;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.txn.TxnChain$CompareSlot recId, $r15;
        java.lang.Throwable l18, $r40;
        java.io.FileNotFoundException e, $r41;
        java.util.HashSet $r0;
        java.util.LinkedList $r2, $r26;
        com.sleepycat.je.utilint.VLSN $r3, $r31, $r32, $r34, $r36, $r38;
        byte $b0;
        com.sleepycat.je.log.entry.LogEntry $r4;
        com.sleepycat.je.dbi.DatabaseId $r5, $r8;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11, $r43, $r44, $r45, $r46, $r48;
        java.lang.String $r12, $r47, $r49;
        com.sleepycat.je.EnvironmentFailureException $r13, $r50;
        com.sleepycat.je.txn.Txn $r14, $r39;
        java.lang.Object $r16;
        com.sleepycat.je.txn.TxnChain$RevertInfo ri#62, $r23, ri#112;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z9, $z10;
        byte[] $r18, $r20, $r24, $r25;
        com.sleepycat.je.tree.LN $r22;
        int $i2, $i3, $i6;
        java.util.Set $r29;
        java.lang.Long $r30;
        com.sleepycat.je.log.LogEntryHeader $r33, $r35, $r37;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r42;

        this := @this: com.sleepycat.je.txn.TxnChain;

        lastLoggedLsn := @parameter0: long;

        txnId := @parameter1: long;

        matchpoint := @parameter2: long;

        undoDatabases := @parameter3: java.util.Map;

        envImpl := @parameter4: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        logManager = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        this.<com.sleepycat.je.txn.TxnChain: java.util.Map undoDatabases> = undoDatabases;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        this.<com.sleepycat.je.txn.TxnChain: java.util.Set remainingLockedNodes> = $r0;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        recordsMap = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        this.<com.sleepycat.je.txn.TxnChain: java.util.LinkedList revertList> = $r2;

        currLsn#17 = lastLoggedLsn;

     label01:
        $r3 = <com.sleepycat.je.utilint.VLSN: com.sleepycat.je.utilint.VLSN NULL_VLSN>;

        this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.utilint.VLSN lastValidVLSN> = $r3;

     label02:
        $b0 = currLsn#17 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 == 0 goto label21;

        wholeEntry = virtualinvoke logManager.<com.sleepycat.je.log.LogManager: com.sleepycat.je.log.WholeEntry getLogEntryAllowInvisible(long)>(currLsn#17);

        $r4 = virtualinvoke wholeEntry.<com.sleepycat.je.log.WholeEntry: com.sleepycat.je.log.entry.LogEntry getEntry()>();

        currLogrec = (com.sleepycat.je.log.entry.LNLogEntry) $r4;

        $r5 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        dbImpl = specialinvoke this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.dbi.DatabaseImpl getDatabaseImpl(com.sleepycat.je.dbi.DatabaseId)>($r5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dbImpl);

        if dbImpl != null goto label04;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(undoDatabases);

        if undoDatabases == null goto label03;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB missing during non-recovery rollback, dbId=");

        $r8 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txnId=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(txnId);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(envImpl, $r12);

        throw $r13;

     label03:
        $r14 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.txn.Txn getUserTxn()>();

        currLsn#17 = virtualinvoke $r14.<com.sleepycat.je.txn.Txn: long getLastLsn()>();

        goto label02;

     label04:
        virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: void postFetchInit(com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

     label05:
        $r15 = new com.sleepycat.je.txn.TxnChain$CompareSlot;

        specialinvoke $r15.<com.sleepycat.je.txn.TxnChain$CompareSlot: void <init>(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.log.entry.LNLogEntry)>(dbImpl, currLogrec);

        recId = $r15;

        $r16 = virtualinvoke recordsMap.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(recId);

        ri#62 = (com.sleepycat.je.txn.TxnChain$RevertInfo) $r16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ri#62);

        if ri#62 == null goto label12;

        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: long revertLsn> = currLsn#17;

        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: boolean revertKD> = 0;

        $z0 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: boolean isDeleted()>();

        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: boolean revertPD> = $z0;

        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean allowsKeyUpdates()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label06;

        $r18 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: byte[] getKey()>();

        goto label07;

     label06:
        $r18 = null;

     label07:
        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: byte[] revertKey> = $r18;

        $z2 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: boolean isEmbeddedLN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label08;

        $r20 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: byte[] getData()>();

        goto label09;

     label08:
        $r20 = null;

     label09:
        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: byte[] revertData> = $r20;

        $z3 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: boolean isEmbeddedLN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label10;

        $r22 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.tree.LN getLN()>();

        $l1 = virtualinvoke $r22.<com.sleepycat.je.tree.LN: long getVLSNSequence()>();

        goto label11;

     label10:
        $l1 = -1L;

     label11:
        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: long revertVLSN> = $l1;

        $i2 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: int getExpiration()>();

        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: int revertExpiration> = $i2;

        $z4 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: boolean isExpirationInHours()>();

        ri#62.<com.sleepycat.je.txn.TxnChain$RevertInfo: boolean revertExpirationInHours> = $z4;

     label12:
        $i3 = staticinvoke <com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(currLsn#17, matchpoint);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 0 goto label13;

        $r23 = new com.sleepycat.je.txn.TxnChain$RevertInfo;

        $l4 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: long getAbortLsn()>();

        $z5 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: boolean getAbortKnownDeleted()>();

        $r24 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: byte[] getAbortKey()>();

        $r25 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: byte[] getAbortData()>();

        $l5 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: long getAbortVLSN()>();

        $i6 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: int getAbortExpiration()>();

        $z6 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: boolean isAbortExpirationInHours()>();

        specialinvoke $r23.<com.sleepycat.je.txn.TxnChain$RevertInfo: void <init>(long,boolean,byte[],byte[],long,int,boolean)>($l4, $z5, $r24, $r25, $l5, $i6, $z6);

        ri#112 = $r23;

        $r26 = this.<com.sleepycat.je.txn.TxnChain: java.util.LinkedList revertList>;

        virtualinvoke $r26.<java.util.LinkedList: boolean add(java.lang.Object)>(ri#112);

        virtualinvoke recordsMap.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(recId, ri#112);

        goto label15;

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ri#62);

        if ri#62 == null goto label14;

        virtualinvoke recordsMap.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>(recId);

     label14:
        $r29 = this.<com.sleepycat.je.txn.TxnChain: java.util.Set remainingLockedNodes>;

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(currLsn#17);

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>($r30);

        $r31 = this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.utilint.VLSN lastValidVLSN>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r31);

        if $r31 == null goto label15;

        $r32 = this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.utilint.VLSN lastValidVLSN>;

        $z9 = virtualinvoke $r32.<com.sleepycat.je.utilint.VLSN: boolean isNull()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label15;

        $r33 = virtualinvoke wholeEntry.<com.sleepycat.je.log.WholeEntry: com.sleepycat.je.log.LogEntryHeader getHeader()>();

        $r34 = virtualinvoke $r33.<com.sleepycat.je.log.LogEntryHeader: com.sleepycat.je.utilint.VLSN getVLSN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r34);

        if $r34 == null goto label15;

        $r35 = virtualinvoke wholeEntry.<com.sleepycat.je.log.WholeEntry: com.sleepycat.je.log.LogEntryHeader getHeader()>();

        $r36 = virtualinvoke $r35.<com.sleepycat.je.log.LogEntryHeader: com.sleepycat.je.utilint.VLSN getVLSN()>();

        $z10 = virtualinvoke $r36.<com.sleepycat.je.utilint.VLSN: boolean isNull()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 != 0 goto label15;

        $r37 = virtualinvoke wholeEntry.<com.sleepycat.je.log.WholeEntry: com.sleepycat.je.log.LogEntryHeader getHeader()>();

        $r38 = virtualinvoke $r37.<com.sleepycat.je.log.LogEntryHeader: com.sleepycat.je.utilint.VLSN getVLSN()>();

        this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.utilint.VLSN lastValidVLSN> = $r38;

     label15:
        $r39 = virtualinvoke currLogrec.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.txn.Txn getUserTxn()>();

        currLsn#17 = virtualinvoke $r39.<com.sleepycat.je.txn.Txn: long getLastLsn()>();

     label16:
        specialinvoke this.<com.sleepycat.je.txn.TxnChain: void releaseDatabaseImpl(com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

        goto label20;

     label17:
        $r40 := @caughtexception;

     label18:
        l18 = $r40;

     label19:
        specialinvoke this.<com.sleepycat.je.txn.TxnChain: void releaseDatabaseImpl(com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

        throw l18;

     label20:
        goto label02;

     label21:
        goto label23;

     label22:
        $r41 := @caughtexception;

        e = $r41;

        $r42 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem finding intermediates for txn ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(txnId);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at lsn ");

        $r47 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(currLsn#17);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException promote(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>(envImpl, $r42, $r49, e);

        throw $r50;

     label23:
        return;

        catch java.lang.Throwable from label05 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.io.FileNotFoundException from label01 to label21 with label22;
    }

    private com.sleepycat.je.dbi.DatabaseImpl getDatabaseImpl(com.sleepycat.je.dbi.DatabaseId)
    {
        com.sleepycat.je.txn.TxnChain this;
        com.sleepycat.je.dbi.DatabaseId dbId;
        java.util.Map $r0, $r1;
        java.lang.Object $r2;
        com.sleepycat.je.dbi.DatabaseImpl $r3, $r6;
        com.sleepycat.je.dbi.EnvironmentImpl $r4;
        com.sleepycat.je.dbi.DbTree $r5;

        this := @this: com.sleepycat.je.txn.TxnChain;

        dbId := @parameter0: com.sleepycat.je.dbi.DatabaseId;

        $r0 = this.<com.sleepycat.je.txn.TxnChain: java.util.Map undoDatabases>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.txn.TxnChain: java.util.Map undoDatabases>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(dbId);

        $r3 = (com.sleepycat.je.dbi.DatabaseImpl) $r2;

        return $r3;

     label1:
        $r4 = this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r5 = virtualinvoke $r4.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree getDbTree()>();

        $r6 = virtualinvoke $r5.<com.sleepycat.je.dbi.DbTree: com.sleepycat.je.dbi.DatabaseImpl getDb(com.sleepycat.je.dbi.DatabaseId)>(dbId);

        return $r6;
    }

    private void releaseDatabaseImpl(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.txn.TxnChain this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        java.util.Map $r0;
        com.sleepycat.je.dbi.EnvironmentImpl $r1;
        com.sleepycat.je.dbi.DbTree $r2;

        this := @this: com.sleepycat.je.txn.TxnChain;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $r0 = this.<com.sleepycat.je.txn.TxnChain: java.util.Map undoDatabases>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = this.<com.sleepycat.je.txn.TxnChain: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r2 = virtualinvoke $r1.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree getDbTree()>();

        virtualinvoke $r2.<com.sleepycat.je.dbi.DbTree: void releaseDb(com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

     label1:
        return;
    }


