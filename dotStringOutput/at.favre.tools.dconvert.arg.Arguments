digraph <clinit> {
"$r0 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy ROUND_HALF_UP> {2121246253}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {723135900}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {723135900}" -> "$r1 = new java.util.HashSet {1197582440}";
"$r1 = new java.util.HashSet {1197582440}" -> "$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {340852670}";
"$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {340852670}" -> "$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {83704857}";
"$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {83704857}" -> "$r2[0] = $r3 {1101441519}";
"$r2[0] = $r3 {1101441519}" -> "$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {425881631}";
"$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {425881631}" -> "$r2[1] = $r4 {1837062925}";
"$r2[1] = $r4 {1837062925}" -> "$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {1711756315}";
"$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {1711756315}" -> "specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {105805484}";
"specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {105805484}" -> "<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {203824370}";
"<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {203824370}" -> "$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {454465864}";
"$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {454465864}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {1206759869}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {1206759869}" -> "$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {845370618}";
"$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {845370618}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {236855240}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {236855240}" -> "$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {560794522}";
"$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {560794522}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {187119187}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {187119187}" -> "$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {600536905}";
"$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {600536905}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1565904039}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1565904039}" -> "$r10 = new at.favre.tools.dconvert.arg.Arguments {338505036}";
"$r10 = new at.favre.tools.dconvert.arg.Arguments {338505036}" -> "specialinvoke $r10.<at.favre.tools.dconvert.arg.Arguments: void <init>(java.io.File,java.io.File,float,java.util.Set,at.favre.tools.dconvert.arg.EOutputCompressionMode,at.favre.tools.dconvert.arg.EScaleMode,at.favre.tools.dconvert.arg.EScalingAlgorithm,at.favre.tools.dconvert.arg.EScalingAlgorithm,float,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,at.favre.tools.dconvert.arg.RoundingHandler$Strategy,boolean,boolean)>(null, null, 0.27346F, null, null, null, null, null, 0.9362F, 996254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, 0, 0) {21468609}";
"specialinvoke $r10.<at.favre.tools.dconvert.arg.Arguments: void <init>(java.io.File,java.io.File,float,java.util.Set,at.favre.tools.dconvert.arg.EOutputCompressionMode,at.favre.tools.dconvert.arg.EScaleMode,at.favre.tools.dconvert.arg.EScalingAlgorithm,at.favre.tools.dconvert.arg.EScalingAlgorithm,float,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,at.favre.tools.dconvert.arg.RoundingHandler$Strategy,boolean,boolean)>(null, null, 0.27346F, null, null, null, null, null, 0.9362F, 996254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, 0, 0) {21468609}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.Arguments START_GUI> = $r10 {506800862}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.Arguments START_GUI> = $r10 {506800862}" -> "return {2033668176}";
}

digraph <init> {
"this := @this: at.favre.tools.dconvert.arg.Arguments {62048136}" -> "src := @parameter0: java.io.File {1560618337}";
"src := @parameter0: java.io.File {1560618337}" -> "dst := @parameter1: java.io.File {476555765}";
"dst := @parameter1: java.io.File {476555765}" -> "scale := @parameter2: float {1411974826}";
"scale := @parameter2: float {1411974826}" -> "platform := @parameter3: java.util.Set {431933825}";
"platform := @parameter3: java.util.Set {431933825}" -> "outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1039804892}";
"outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1039804892}" -> "scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {1433205105}";
"scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {1433205105}" -> "downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {1258604322}";
"downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {1258604322}" -> "upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {1296017645}";
"upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {1296017645}" -> "compressionQuality := @parameter8: float {1644637767}";
"compressionQuality := @parameter8: float {1644637767}" -> "threadCount := @parameter9: int {2118221906}";
"threadCount := @parameter9: int {2118221906}" -> "skipExistingFiles := @parameter10: boolean {337841655}";
"skipExistingFiles := @parameter10: boolean {337841655}" -> "skipUpscaling := @parameter11: boolean {1628543786}";
"skipUpscaling := @parameter11: boolean {1628543786}" -> "verboseLog := @parameter12: boolean {1237487330}";
"verboseLog := @parameter12: boolean {1237487330}" -> "includeAndroidLdpiTvdpi := @parameter13: boolean {830625161}";
"includeAndroidLdpiTvdpi := @parameter13: boolean {830625161}" -> "haltOnError := @parameter14: boolean {977727839}";
"haltOnError := @parameter14: boolean {977727839}" -> "createMipMapInsteadOfDrawableDir := @parameter15: boolean {2137373663}";
"createMipMapInsteadOfDrawableDir := @parameter15: boolean {2137373663}" -> "iosCreateImagesetFolders := @parameter16: boolean {1663926920}";
"iosCreateImagesetFolders := @parameter16: boolean {1663926920}" -> "enablePngCrush := @parameter17: boolean {690633980}";
"enablePngCrush := @parameter17: boolean {690633980}" -> "enableMozJpeg := @parameter18: boolean {707569761}";
"enableMozJpeg := @parameter18: boolean {707569761}" -> "postConvertWebp := @parameter19: boolean {929506797}";
"postConvertWebp := @parameter19: boolean {929506797}" -> "enableAntiAliasing := @parameter20: boolean {261539273}";
"enableAntiAliasing := @parameter20: boolean {261539273}" -> "dryRun := @parameter21: boolean {1597334791}";
"dryRun := @parameter21: boolean {1597334791}" -> "keepUnoptimizedFilesPostProcessor := @parameter22: boolean {375528101}";
"keepUnoptimizedFilesPostProcessor := @parameter22: boolean {375528101}" -> "roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {686212633}";
"roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {686212633}" -> "guiAdvancedOptions := @parameter24: boolean {416429057}";
"guiAdvancedOptions := @parameter24: boolean {416429057}" -> "clearDirBeforeConvert := @parameter25: boolean {643536081}";
"clearDirBeforeConvert := @parameter25: boolean {643536081}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {238909983}";
"specialinvoke this.<java.lang.Object: void <init>()>() {238909983}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {1112426825}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {1112426825}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {1411336522}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {1411336522}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {317323029}";
"this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {317323029}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {620809524}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {620809524}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {1219456771}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {1219456771}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {1535495453}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {1535495453}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {376911402}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {376911402}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {404847963}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {404847963}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {1125176056}";
"this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {1125176056}" -> "this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {1626668479}";
"this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {1626668479}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {526846380}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {526846380}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {981466039}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {981466039}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {451712877}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {451712877}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {959409421}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {959409421}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {1370448570}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {1370448570}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {415479482}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {415479482}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {1397666523}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {1397666523}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {1936868673}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {1936868673}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {1961913007}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {1961913007}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {134141536}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {134141536}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {1411640052}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {1411640052}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {160433614}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {160433614}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {1665093665}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {1665093665}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {1210305295}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {1210305295}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {1478141066}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {1478141066}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {1784653775}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {1784653775}" -> "$r0 = new java.util.ArrayList {1381481981}";
"$r0 = new java.util.ArrayList {1381481981}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>()>() {1014646011}";
"specialinvoke $r0.<java.util.ArrayList: void <init>()>() {1014646011}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {1403895516}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {1403895516}" -> "supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {521471457}";
"supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {521471457}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {494117418}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {494117418}" -> "if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1355954940}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1355954940}" -> "$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {543927438}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1355954940}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {2036891243}";
"$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {543927438}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {846001905}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {846001905}" -> "if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {27676425}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {27676425}" -> "l28 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {762596882}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {27676425}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {2036891243}";
"l28 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {762596882}" -> "l29 = lengthof l28 {497615566}";
"l29 = lengthof l28 {497615566}" -> "l30#65 = 0 {1325591971}";
"l30#65 = 0 {1325591971}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30#65) {1827359801}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30#65) {1827359801}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l29) {1413213738}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l29) {1413213738}" -> "if l30#65 >= l29 goto (branch) {1740030460}";
"if l30#65 >= l29 goto (branch) {1740030460}" -> "file = l28[l30#65] {1178530337}";
"if l30#65 >= l29 goto (branch) {1740030460}" -> "goto [?= return] {505331868}";
"file = l28[l30#65] {1178530337}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {1803118548}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {1803118548}" -> "$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {699206186}";
"$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {699206186}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {859785152}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {859785152}" -> "if $z1 == 0 goto l30#65 = l30#65 + 1 {164273932}";
"if $z1 == 0 goto l30#65 = l30#65 + 1 {164273932}" -> "$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {506430753}";
"if $z1 == 0 goto l30#65 = l30#65 + 1 {164273932}" -> "l30#65 = l30#65 + 1 {1038272536}";
"$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {506430753}" -> "interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {838922723}";
"interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {838922723}" -> "l30#65 = l30#65 + 1 {1038272536}";
"l30#65 = l30#65 + 1 {1038272536}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30#65)] {1941588400}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30#65)] {1941588400}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30#65) {1827359801}";
"goto [?= return] {505331868}" -> "return {871904475}";
"$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {2036891243}" -> "$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {295324666}";
"$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {295324666}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1275885458}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1275885458}" -> "if $z3 == 0 goto return {1570435661}";
"if $z3 == 0 goto return {1570435661}" -> "$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1299701551}";
"if $z3 == 0 goto return {1570435661}" -> "return {871904475}";
"$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1299701551}" -> "interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {757024405}";
"interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {757024405}" -> "return {871904475}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {846001905}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30#65) {1827359801}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1275885458}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l29) {1413213738}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {494117418}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {859785152}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getSupportedFileTypes {
"$r0 = new java.util.HashSet {236675258}" -> "specialinvoke $r0.<java.util.HashSet: void <init>()>() {608124126}";
"specialinvoke $r0.<java.util.HashSet: void <init>()>() {608124126}" -> "set = $r0 {1574721669}";
"set = $r0 {1574721669}" -> "l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {1602714944}";
"l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {1602714944}" -> "l2 = lengthof l1 {2041570288}";
"l2 = lengthof l1 {2041570288}" -> "l3#7 = 0 {2030478972}";
"l3#7 = 0 {2030478972}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {252774927}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {252774927}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {267623221}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {267623221}" -> "if l3#7 >= l2 goto return set {344244985}";
"if l3#7 >= l2 goto return set {344244985}" -> "imageType = l1[l3#7] {1094849096}";
"if l3#7 >= l2 goto return set {344244985}" -> "return set {1578607243}";
"imageType = l1[l3#7] {1094849096}" -> "$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {330175136}";
"$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {330175136}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {80801281}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {80801281}" -> "if $z0 == 0 goto l3#7 = l3#7 + 1 {1707984295}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {1707984295}" -> "$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {1386460496}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {1707984295}" -> "l3#7 = l3#7 + 1 {764192874}";
"$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {1386460496}" -> "$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {1497932382}";
"$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {1497932382}" -> "interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {2024228944}";
"interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {2024228944}" -> "l3#7 = l3#7 + 1 {764192874}";
"l3#7 = l3#7 + 1 {764192874}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {835368407}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {835368407}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {252774927}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {252774927}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {80801281}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {267623221}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getImageType {
"srcFile := @parameter0: java.io.File {712801516}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {1904819043}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {1904819043}" -> "l2 = extension {1772170972}";
"l2 = extension {1772170972}" -> "l3#5 = -1 {1686012628}";
"l3#5 = -1 {1686012628}" -> "$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {261905258}";
"$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {261905258}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1653908757}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1653908757}" -> "lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {717441742}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {1176334204}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {1124651187}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {710080669}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {81555156}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {1525025434}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {504213841}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {1743929923}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {289156934}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {348049529}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {1124651187}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1089846999}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1089846999}" -> "if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1933444738}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1933444738}" -> "l3#5 = 0 {1275339494}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1933444738}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 0 {1275339494}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1225588381}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1225588381}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {1743929923}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {660626983}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {660626983}" -> "if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1227141174}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1227141174}" -> "l3#5 = 1 {1148072470}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1227141174}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 1 {1148072470}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {838566018}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {838566018}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {710080669}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {128559836}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {128559836}" -> "if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1195414213}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1195414213}" -> "l3#5 = 2 {1490534148}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1195414213}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 2 {1490534148}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1711026835}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1711026835}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {1525025434}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1075759903}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1075759903}" -> "if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1586152447}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1586152447}" -> "l3#5 = 3 {1753489805}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1586152447}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 3 {1753489805}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {39605469}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {39605469}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {504213841}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1697264733}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1697264733}" -> "if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2123883761}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2123883761}" -> "l3#5 = 4 {1328158877}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2123883761}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 4 {1328158877}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1012838160}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1012838160}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {289156934}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {118360017}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {118360017}" -> "if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1481847902}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1481847902}" -> "l3#5 = 5 {964134287}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1481847902}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 5 {964134287}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1229048824}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1229048824}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {81555156}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {1415892075}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {1415892075}" -> "if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1124432828}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1124432828}" -> "l3#5 = 6 {1394129238}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1124432828}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 6 {1394129238}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {878036783}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {878036783}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {1176334204}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {991873812}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {991873812}" -> "if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1558950959}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1558950959}" -> "l3#5 = 7 {836706153}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1558950959}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 7 {836706153}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {471130273}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {471130273}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {717441742}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {673252743}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {673252743}" -> "if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {292136671}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {292136671}" -> "l3#5 = 8 {1710141728}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {292136671}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"l3#5 = 8 {1710141728}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}" -> "tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {254999735}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {303082011}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {1125397249}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {1659774806}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {109176006}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {681479919}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {1069202698}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {164104529}" -> "$r7 = new java.lang.IllegalArgumentException {376526219}";
"$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {254999735}" -> "return $r0 {533019584}";
"$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {303082011}" -> "return $r1 {1541122953}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {1125397249}" -> "return $r2 {1966676888}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {1659774806}" -> "return $r3 {1693409121}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {109176006}" -> "return $r4 {1004128853}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {681479919}" -> "return $r5 {915724490}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {1069202698}" -> "return $r6 {1254380490}";
"$r7 = new java.lang.IllegalArgumentException {376526219}" -> "$r8 = new java.lang.StringBuilder {70870654}";
"$r8 = new java.lang.StringBuilder {70870654}" -> "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {924238753}";
"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {924238753}" -> "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {633717632}";
"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {633717632}" -> "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {1759819382}";
"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {1759819382}" -> "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {30060480}";
"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {30060480}" -> "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1451047351}";
"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1451047351}" -> "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {428648844}";
"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {428648844}" -> "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {1298969042}";
"specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {1298969042}" -> "throw $r7 {1844846951}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {991873812}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {128559836}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1089846999}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1075759903}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {118360017}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {1415892075}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1653908757}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1697264733}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1616417382}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {660626983}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {673252743}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getOutCompressionForType {
"type := @parameter0: at.favre.tools.dconvert.arg.EOutputCompressionMode {2011148813}" -> "imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {442752521}";
"imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {442752521}" -> "$r0 = new java.util.ArrayList {1111654274}";
"$r0 = new java.util.ArrayList {1111654274}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {1337400808}";
"specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {1337400808}" -> "list = $r0 {1792586558}";
"list = $r0 {1792586558}" -> "$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {560217098}";
"$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {560217098}" -> "$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {427351386}";
"$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {427351386}" -> "$i1 = $r1[$i0] {907463688}";
"$i1 = $r1[$i0] {907463688}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1492594466}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1492594466}" -> "tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {1719086632}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {439787201}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {402933153}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {721314249}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {389722065}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {542323213}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {907162284}" -> "$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {270104042}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {1719086632}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {713777081}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {713777081}" -> "goto [?= return list] {767911894}";
"goto [?= return list] {767911894}" -> "return list {1676588923}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {439787201}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {1199912947}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {1199912947}" -> "goto [?= return list] {1207364742}";
"goto [?= return list] {1207364742}" -> "return list {1676588923}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {402933153}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {2040877751}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {2040877751}" -> "goto [?= return list] {1526632378}";
"goto [?= return list] {1526632378}" -> "return list {1676588923}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {721314249}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {2095685960}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {2095685960}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {2055182571}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {2055182571}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {208625659}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {208625659}" -> "goto [?= return list] {723194560}";
"goto [?= return list] {723194560}" -> "return list {1676588923}";
"$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {389722065}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {1656474410}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {1656474410}" -> "goto [?= return list] {1698865595}";
"goto [?= return list] {1698865595}" -> "return list {1676588923}";
"$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {542323213}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {827854112}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {827854112}" -> "goto [?= return list] {1044256960}";
"goto [?= return list] {1044256960}" -> "return list {1676588923}";
"$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {270104042}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {657826}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {657826}" -> "return list {1676588923}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1492594466}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph round {
"this := @this: at.favre.tools.dconvert.arg.Arguments {1389866375}" -> "raw := @parameter0: double {235176909}";
"raw := @parameter0: double {235176909}" -> "$r0 = new at.favre.tools.dconvert.arg.RoundingHandler {1351772655}";
"$r0 = new at.favre.tools.dconvert.arg.RoundingHandler {1351772655}" -> "$r1 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {865994223}";
"$r1 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {865994223}" -> "specialinvoke $r0.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r1) {1558096058}";
"specialinvoke $r0.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r1) {1558096058}" -> "$l0 = virtualinvoke $r0.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {1763745412}";
"$l0 = virtualinvoke $r0.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {1763745412}" -> "$d0 = (double) $l0 {718425906}";
"$d0 = (double) $l0 {718425906}" -> "return $d0 {56670634}";
}


