    public final boolean hasNext()
    {
        java.util.LinkedHashMap$LinkedHashIterator l0;
        java.util.LinkedHashMap$Entry $r0;
        boolean $z0;

        l0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        $r0 = l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry next>;

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final java.util.LinkedHashMap$Entry nextNode()
    {
        java.util.LinkedHashMap$LinkedHashIterator l0;
        java.util.LinkedHashMap$Entry l1, $r3;
        java.util.LinkedHashMap $r0;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r1;
        java.util.NoSuchElementException $r2;

        l0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        l1 = l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry next>;

        $r0 = l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $i0 = $r0.<java.util.LinkedHashMap: int modCount>;

        $i1 = l0.<java.util.LinkedHashMap$LinkedHashIterator: int expectedModCount>;

        if $i0 == $i1 goto label1;

        $r1 = new java.util.ConcurrentModificationException;

        specialinvoke $r1.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r1;

     label1:
        if l1 != null goto label2;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label2:
        l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry current> = l1;

        $r3 = l1.<java.util.LinkedHashMap$Entry: java.util.LinkedHashMap$Entry after>;

        l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry next> = $r3;

        return l1;
    }

    void <init>(java.util.LinkedHashMap)
    {
        java.util.LinkedHashMap$LinkedHashIterator l0;
        java.util.LinkedHashMap l1;
        java.util.LinkedHashMap$Entry $r0;
        int $i0;

        l0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        l1 := @parameter0: java.util.LinkedHashMap;

        l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0> = l1;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $r0 = l1.<java.util.LinkedHashMap: java.util.LinkedHashMap$Entry head>;

        l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry next> = $r0;

        $i0 = l1.<java.util.LinkedHashMap: int modCount>;

        l0.<java.util.LinkedHashMap$LinkedHashIterator: int expectedModCount> = $i0;

        l0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry current> = null;

        return;
    }


