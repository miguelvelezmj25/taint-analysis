    void <init>()
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        byte[] $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = newarray (byte)[32768];

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window> = $r0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled> = 0;

        return;
    }

    public int getAvailable()
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        int $i0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        return $i0;
    }

    public void repeat(int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        int dist, border, len#1, $i0, $i1, $i2, $i3, rep_start#20, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.IllegalStateException $r1;
        byte[] $r2, $r3, $r5, $r7;
        byte $b12;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        len#1 := @parameter0: int;

        dist := @parameter1: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i1 = $i0 + len#1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled> = $i1;

        if $i1 <= 32768 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Window full");

        throw $r1;

     label1:
        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i3 = $i2 - dist;

        rep_start#20 = $i3 & 32767;

        border = 32768 - len#1;

        if rep_start#20 > border goto label3;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        if $i4 >= border goto label3;

        if len#1 > dist goto label2;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, rep_start#20, $r3, $i5, len#1);

        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i7 = $i6 + len#1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i7;

        goto label4;

     label2:
        $i8 = len#1;

        len#1 = len#1 + -1;

        if $i8 <= 0 goto label4;

        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i10 = $i9 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i10;

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i11 = rep_start#20;

        rep_start#20 = rep_start#20 + 1;

        $b12 = $r7[$i11];

        $r5[$i9] = $b12;

        goto label2;

     label3:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: void slowRepeat(int,int,int)>(rep_start#20, len#1, dist);

     label4:
        return;
    }

    private void slowRepeat(int, int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        int dist, rep_start#1, len#2, $i0, $i1, $i2, rep_start#16, $i4, $i5;
        byte[] $r0, $r2;
        byte $b3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        rep_start#1 := @parameter0: int;

        len#2 := @parameter1: int;

        dist := @parameter2: int;

     label1:
        $i0 = len#2;

        len#2 = len#2 + -1;

        if $i0 <= 0 goto label2;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i2 = $i1 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i2;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        rep_start#16 = rep_start#1 + 1;

        $b3 = $r2[rep_start#1];

        $r0[$i1] = $b3;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i5 = $i4 & 32767;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i5;

        rep_start#1 = rep_start#16 & 32767;

        goto label1;

     label2:
        return;
    }

    public void write(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        int abyte, $i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.IllegalStateException $r1;
        byte[] $r2;
        byte $b4;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        abyte := @parameter0: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i1 = $i0 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled> = $i1;

        if $i0 != 32768 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Window full");

        throw $r1;

     label1:
        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i3 = $i2 + 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i3;

        $b4 = (byte) abyte;

        $r2[$i2] = $b4;

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i6 = $i5 & 32767;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i6;

        return;
    }

    public int getFreeSpace()
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        int $i0, $i1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i1 = 32768 - $i0;

        return $i1;
    }

    public int copyStored(edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator input;
        int tailLen, len#1, $i0, $i1, $i2, $i3, len#11, $i4, $i5, copied#25, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        byte[] $r0, $r1, $r2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        input := @parameter0: edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator;

        len#1 := @parameter1: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i1 = 32768 - $i0;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(len#1, $i1);

        $i3 = virtualinvoke input.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int getAvailableBytes()>();

        len#11 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        tailLen = 32768 - $i4;

        if len#11 <= tailLen goto label1;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        copied#25 = virtualinvoke input.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int copyBytes(byte[],int,int)>($r0, $i5, tailLen);

        if copied#25 != tailLen goto label2;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i6 = len#11 - tailLen;

        $i7 = virtualinvoke input.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int copyBytes(byte[],int,int)>($r1, 0, $i6);

        copied#25 = copied#25 + $i7;

        goto label2;

     label1:
        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        copied#25 = virtualinvoke input.<edu.cmu.cs.mvelezce.zip.zipme.StreamManipulator: int copyBytes(byte[],int,int)>($r2, $i8, len#11);

     label2:
        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i10 = $i9 + copied#25;

        $i11 = $i10 & 32767;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = $i11;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i13 = $i12 + copied#25;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled> = $i13;

        return copied#25;
    }

    public int copyOutput(byte[], int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;
        byte[] output, $r0, $r1;
        int copied, tailLen, offset#1, len#2, copy_end#5, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IllegalStateException $r3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        output := @parameter0: byte[];

        offset#1 := @parameter1: int;

        len#2 := @parameter2: int;

        copy_end#5 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        if len#2 <= $i0 goto label1;

        len#2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        goto label2;

     label1:
        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end>;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i3 = $i1 - $i2;

        $i4 = $i3 + len#2;

        copy_end#5 = $i4 & 32767;

     label2:
        copied = len#2;

        tailLen = len#2 - copy_end#5;

        if tailLen <= 0 goto label3;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i5 = 32768 - tailLen;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i5, output, offset#1, tailLen);

        offset#1 = offset#1 + tailLen;

        len#2 = copy_end#5;

     label3:
        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: byte[] window>;

        $i6 = copy_end#5 - len#2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i6, output, offset#1, len#2);

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        $i8 = $i7 - copied;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled> = $i8;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled>;

        if $i9 >= 0 goto label4;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label4:
        return copied;
    }

    public void reset()
    {
        edu.cmu.cs.mvelezce.zip.zipme.OutputWindow this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.OutputWindow;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_end> = 0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.OutputWindow: int window_filled> = 0;

        return;
    }


