    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.JEVersion $r1;
        java.util.TimeZone $r2, $r5;
        java.text.SimpleDateFormat $r3, $r4;

        $r0 = class "berkeley/com/sleepycat/je/dbi/TTL";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.dbi.TTL: boolean $assertionsDisabled> = $z1;

        $r1 = new berkeley.com.sleepycat.je.JEVersion;

        specialinvoke $r1.<berkeley.com.sleepycat.je.JEVersion: void <init>(java.lang.String)>("6.5.0");

        <berkeley.com.sleepycat.je.dbi.TTL: berkeley.com.sleepycat.je.JEVersion MIN_JE_VERSION> = $r1;

        <berkeley.com.sleepycat.je.dbi.TTL: berkeley.com.sleepycat.je.JEVersion TEST_MIN_JE_VERSION> = null;

        <berkeley.com.sleepycat.je.dbi.TTL: berkeley.com.sleepycat.je.utilint.TestHook timeTestHook> = null;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        <berkeley.com.sleepycat.je.dbi.TTL: java.util.TimeZone UTC> = $r2;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd.HH");

        <berkeley.com.sleepycat.je.dbi.TTL: java.text.SimpleDateFormat TIME_FORMAT> = $r3;

        $r4 = <berkeley.com.sleepycat.je.dbi.TTL: java.text.SimpleDateFormat TIME_FORMAT>;

        $r5 = <berkeley.com.sleepycat.je.dbi.TTL: java.util.TimeZone UTC>;

        virtualinvoke $r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

        return;
    }

    public static long expirationToSystemTime(int, boolean)
    {
        int expiration;
        boolean hours, $z0;
        java.lang.AssertionError $r0;
        long $l0, $l1, $l2;

        expiration := @parameter0: int;

        hours := @parameter1: boolean;

        $z0 = <berkeley.com.sleepycat.je.dbi.TTL: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if expiration >= 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        if expiration != 0 goto label2;

        return 0L;

     label2:
        $l0 = (long) expiration;

        if hours == 0 goto label3;

        $l1 = 3600000L;

        goto label4;

     label3:
        $l1 = 86400000L;

     label4:
        $l2 = $l0 * $l1;

        return $l2;
    }

    public static java.lang.String formatExpiration(int, boolean)
    {
        int expiration;
        boolean hours;
        long $l0;
        java.lang.String $r0;

        expiration := @parameter0: int;

        hours := @parameter1: boolean;

        $l0 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long expirationToSystemTime(int,boolean)>(expiration, hours);

        $r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: java.lang.String formatExpirationTime(long)>($l0);

        return $r0;
    }

    public static java.lang.String formatExpirationTime(long)
    {
        long time;
        java.util.Date date, $r0;
        java.text.SimpleDateFormat l3, $r1, $r2;
        java.lang.Throwable l4, $r4;
        java.lang.String $r3;

        time := @parameter0: long;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(time);

        date = $r0;

        $r1 = <berkeley.com.sleepycat.je.dbi.TTL: java.text.SimpleDateFormat TIME_FORMAT>;

        l3 = $r1;

        entermonitor $r1;

     label1:
        $r2 = <berkeley.com.sleepycat.je.dbi.TTL: java.text.SimpleDateFormat TIME_FORMAT>;

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(date);

        exitmonitor l3;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        l4 = $r4;

        exitmonitor l3;

     label5:
        throw l4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static int ttlToExpiration(int, java.util.concurrent.TimeUnit)
    {
        int ttl, currentTime#23, $i8;
        java.util.concurrent.TimeUnit ttlUnits, $r5, $r6;
        java.lang.IllegalArgumentException $r0, $r7;
        java.lang.StringBuilder $r1, $r2, $r3, $r8, $r9, $r10;
        java.lang.String $r4, $r11;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7;

        ttl := @parameter0: int;

        ttlUnits := @parameter1: java.util.concurrent.TimeUnit;

        if ttl >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal ttl value: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(ttl);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        if ttl != 0 goto label2;

        return 0;

     label2:
        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        if ttlUnits != $r5 goto label3;

        $l0 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long currentSystemTime()>();

        $l1 = $l0 + 86400000L;

        $l2 = $l1 - 1L;

        $l3 = $l2 / 86400000L;

        currentTime#23 = (int) $l3;

        goto label5;

     label3:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        if ttlUnits != $r6 goto label4;

        $l4 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long currentSystemTime()>();

        $l5 = $l4 + 3600000L;

        $l6 = $l5 - 1L;

        $l7 = $l6 / 3600000L;

        currentTime#23 = (int) $l7;

        goto label5;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ttlUnits not allowed: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ttlUnits);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label5:
        $i8 = currentTime#23 + ttl;

        return $i8;
    }

    public static long currentSystemTime()
    {
        berkeley.com.sleepycat.je.utilint.TestHook $r0, $r1;
        java.lang.Object $r2;
        java.lang.Long $r3;
        long $l0, $l1;

        $r0 = <berkeley.com.sleepycat.je.dbi.TTL: berkeley.com.sleepycat.je.utilint.TestHook timeTestHook>;

        if $r0 == null goto label1;

        $r1 = <berkeley.com.sleepycat.je.dbi.TTL: berkeley.com.sleepycat.je.utilint.TestHook timeTestHook>;

        $r2 = interfaceinvoke $r1.<berkeley.com.sleepycat.je.utilint.TestHook: java.lang.Object getHookValue()>();

        $r3 = (java.lang.Long) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;

     label1:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l1;
    }

    public static boolean expiresWithin(long, long)
    {
        long expirationTime, withinMs, $l1, $l2;
        byte $b0, $b3;
        boolean $z0;

        expirationTime := @parameter0: long;

        withinMs := @parameter1: long;

        $b0 = expirationTime cmp 0L;

        if $b0 == 0 goto label1;

        $l1 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long currentSystemTime()>();

        $l2 = $l1 + withinMs;

        $b3 = $l2 cmp expirationTime;

        if $b3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean expiresWithin(int, boolean, long)
    {
        int expiration;
        boolean hours, $z0;
        long withinMs, $l0, $l1, $l2;
        byte $b3;

        expiration := @parameter0: int;

        hours := @parameter1: boolean;

        withinMs := @parameter2: long;

        if expiration == 0 goto label1;

        $l0 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long currentSystemTime()>();

        $l1 = $l0 + withinMs;

        $l2 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long expirationToSystemTime(int,boolean)>(expiration, hours);

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isExpired(int, boolean)
    {
        int expiration;
        boolean hours, $z0;
        long $l0, $l1;
        byte $b2;

        expiration := @parameter0: int;

        hours := @parameter1: boolean;

        if expiration == 0 goto label1;

        $l0 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long currentSystemTime()>();

        $l1 = staticinvoke <berkeley.com.sleepycat.je.dbi.TTL: long expirationToSystemTime(int,boolean)>(expiration, hours);

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int systemTimeToExpiration(long, boolean)
    {
        long systemMs, $l0, $l1, $l2, $l3, $l4;
        boolean hours;
        int $i5;

        systemMs := @parameter0: long;

        hours := @parameter1: boolean;

        if hours == 0 goto label1;

        $l0 = systemMs + 3600000L;

        $l1 = $l0 - 1L;

        $l2 = $l1 / 3600000L;

        goto label2;

     label1:
        $l3 = systemMs + 86400000L;

        $l4 = $l3 - 1L;

        $l2 = $l4 / 86400000L;

     label2:
        $i5 = (int) $l2;

        return $i5;
    }

    public static boolean isSystemTimeInHours(long)
    {
        long systemMs, hours, $l0, $l1, $l2;
        byte $b3;
        boolean $z0;

        systemMs := @parameter0: long;

        $l0 = systemMs + 3600000L;

        $l1 = $l0 - 1L;

        hours = $l1 / 3600000L;

        $l2 = hours % 24L;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }


