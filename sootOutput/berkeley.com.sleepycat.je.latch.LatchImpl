    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/latch/LatchImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.latch.LatchImpl: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.latch.LatchContext)
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        berkeley.com.sleepycat.je.latch.LatchContext context;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        context := @parameter0: berkeley.com.sleepycat.je.latch.LatchContext;

        specialinvoke this.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context> = context;

        return;
    }

    public void release()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.latch.LatchContext $r0, $r8;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r7;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean isHeldByCurrentThread()>();

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r1 = interfaceinvoke $r0.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch not held: ");

        $r4 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: java.lang.String debugString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r1, $r6);

        throw $r7;

     label1:
        $z1 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z1 == 0 goto label2;

        $r8 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackRelease(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r8);

     label2:
        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z2 == 0 goto label3;

        this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = null;

     label3:
        virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: void unlock()>();

        return;
    }

    public java.lang.String debugString()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        berkeley.com.sleepycat.je.latch.LatchContext $r0;
        berkeley.com.sleepycat.je.latch.OwnerInfo $r1;
        java.lang.String $r2;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r1 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo>;

        $r2 = staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: java.lang.String debugString(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext,berkeley.com.sleepycat.je.latch.OwnerInfo)>(this, $r0, $r1);

        return $r2;
    }

    public java.lang.Thread getExclusiveOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        java.lang.Thread $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: java.lang.Thread getOwner()>();

        return $r0;
    }

    public void acquireExclusive()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        java.lang.InterruptedException e, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        berkeley.com.sleepycat.je.latch.LatchContext $r0, $r8, $r10, $r14, $r16, $r18;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1, $r15;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r7, $r11;
        int $i0;
        long $l1;
        java.util.concurrent.TimeUnit $r9;
        berkeley.com.sleepycat.je.ThreadInterruptedException $r13;
        berkeley.com.sleepycat.je.latch.OwnerInfo $r17;
        java.lang.AssertionError $r19;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean isHeldByCurrentThread()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r1 = interfaceinvoke $r0.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch already held: ");

        $r4 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: java.lang.String debugString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r1, $r6);

        throw $r7;

     label1:
        $r8 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $i0 = interfaceinvoke $r8.<berkeley.com.sleepycat.je.latch.LatchContext: int getLatchTimeoutMs()>();

        $l1 = (long) $i0;

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z1 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean tryLock(long,java.util.concurrent.TimeUnit)>($l1, $r9);

        if $z1 != 0 goto label2;

        $r10 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r11 = staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: berkeley.com.sleepycat.je.EnvironmentFailureException handleTimeout(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r10);

        throw $r11;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        e = $r12;

        $r13 = new berkeley.com.sleepycat.je.ThreadInterruptedException;

        $r14 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r15 = interfaceinvoke $r14.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        specialinvoke $r13.<berkeley.com.sleepycat.je.ThreadInterruptedException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Throwable)>($r15, e);

        throw $r13;

     label4:
        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z2 == 0 goto label5;

        $r16 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackAcquire(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r16);

     label5:
        $z3 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z3 == 0 goto label6;

        $r17 = new berkeley.com.sleepycat.je.latch.OwnerInfo;

        $r18 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        specialinvoke $r17.<berkeley.com.sleepycat.je.latch.OwnerInfo: void <init>(berkeley.com.sleepycat.je.latch.LatchContext)>($r18);

        this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = $r17;

     label6:
        $z4 = <berkeley.com.sleepycat.je.latch.LatchImpl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label7;

        $z5 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean maybeForceYield()>();

        if $z5 != 0 goto label7;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label7:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public boolean isExclusiveOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean isHeldByCurrentThread()>();

        return $z0;
    }

    public void releaseIfOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.latch.LatchContext $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean isHeldByCurrentThread()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z1 == 0 goto label2;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackRelease(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r0);

     label2:
        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z2 == 0 goto label3;

        this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = null;

     label3:
        virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: void unlock()>();

        return;
    }

    public void clearStats()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $r0 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState()>();

        throw $r0;
    }

    public berkeley.com.sleepycat.je.utilint.StatGroup getStats()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $r0 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState()>();

        throw $r0;
    }

    public void acquireShared()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: void acquireExclusive()>();

        return;
    }

    public boolean isOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean isHeldByCurrentThread()>();

        return $z0;
    }

    public boolean acquireExclusiveNoWait()
    {
        berkeley.com.sleepycat.je.latch.LatchImpl this;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        berkeley.com.sleepycat.je.latch.LatchContext $r0, $r8, $r10;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r7;
        berkeley.com.sleepycat.je.latch.OwnerInfo $r9;
        java.lang.AssertionError $r11;

        this := @this: berkeley.com.sleepycat.je.latch.LatchImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean isHeldByCurrentThread()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r1 = interfaceinvoke $r0.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch already held: ");

        $r4 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: java.lang.String debugString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r1, $r6);

        throw $r7;

     label1:
        $z1 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchImpl: boolean tryLock()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z2 == 0 goto label3;

        $r8 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackAcquire(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r8);

     label3:
        $z3 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z3 == 0 goto label4;

        $r9 = new berkeley.com.sleepycat.je.latch.OwnerInfo;

        $r10 = this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        specialinvoke $r9.<berkeley.com.sleepycat.je.latch.OwnerInfo: void <init>(berkeley.com.sleepycat.je.latch.LatchContext)>($r10);

        this.<berkeley.com.sleepycat.je.latch.LatchImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = $r9;

     label4:
        $z4 = <berkeley.com.sleepycat.je.latch.LatchImpl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label5;

        $z5 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean maybeForceYield()>();

        if $z5 != 0 goto label5;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label5:
        return 1;
    }


