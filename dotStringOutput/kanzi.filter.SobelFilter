digraph <init> {
"this := @this: kanzi.filter.SobelFilter {87126393}" -> "width := @parameter0: int {1751800473}";
"width := @parameter0: int {1751800473}" -> "height := @parameter1: int {1382382998}";
"height := @parameter1: int {1382382998}" -> "stride := @parameter2: int {1143605934}";
"stride := @parameter2: int {1143605934}" -> "direction := @parameter3: int {1785871961}";
"direction := @parameter3: int {1785871961}" -> "channels := @parameter4: int {1903425081}";
"channels := @parameter4: int {1903425081}" -> "filterType := @parameter5: int {180988308}";
"filterType := @parameter5: int {180988308}" -> "processBoundaries := @parameter6: boolean {1176873994}";
"processBoundaries := @parameter6: boolean {1176873994}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {83470262}";
"specialinvoke this.<java.lang.Object: void <init>()>() {83470262}" -> "if height >= 8 goto (branch) {1972259264}";
"if height >= 8 goto (branch) {1972259264}" -> "$r0 = new java.lang.IllegalArgumentException {578293832}";
"if height >= 8 goto (branch) {1972259264}" -> "if width >= 8 goto (branch) {696303086}";
"$r0 = new java.lang.IllegalArgumentException {578293832}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The height must be at least 8\") {1300783574}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The height must be at least 8\") {1300783574}" -> "throw $r0 {470833989}";
"if width >= 8 goto (branch) {696303086}" -> "$r1 = new java.lang.IllegalArgumentException {936641000}";
"if width >= 8 goto (branch) {696303086}" -> "if stride >= 8 goto $i0 = direction & 3 {30466843}";
"$r1 = new java.lang.IllegalArgumentException {936641000}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The width must be at least 8\") {1883672038}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The width must be at least 8\") {1883672038}" -> "throw $r1 {1737099591}";
"if stride >= 8 goto $i0 = direction & 3 {30466843}" -> "$r2 = new java.lang.IllegalArgumentException {916918871}";
"if stride >= 8 goto $i0 = direction & 3 {30466843}" -> "$i0 = direction & 3 {1253021721}";
"$r2 = new java.lang.IllegalArgumentException {916918871}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The stride must be at least 8\") {1345410855}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The stride must be at least 8\") {1345410855}" -> "throw $r2 {1586152156}";
"$i0 = direction & 3 {1253021721}" -> "if $i0 != 0 goto $i1 = direction & -4 {1119563698}";
"if $i0 != 0 goto $i1 = direction & -4 {1119563698}" -> "$r3 = new java.lang.IllegalArgumentException {30381411}";
"if $i0 != 0 goto $i1 = direction & -4 {1119563698}" -> "$i1 = direction & -4 {950931396}";
"$r3 = new java.lang.IllegalArgumentException {30381411}" -> "specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid direction parameter (must be VERTICAL or HORIZONTAL or both)\") {1470582662}";
"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid direction parameter (must be VERTICAL or HORIZONTAL or both)\") {1470582662}" -> "throw $r3 {708754588}";
"$i1 = direction & -4 {950931396}" -> "if $i1 == 0 goto (branch) {1739296273}";
"if $i1 == 0 goto (branch) {1739296273}" -> "$r4 = new java.lang.IllegalArgumentException {318059644}";
"if $i1 == 0 goto (branch) {1739296273}" -> "if filterType == 1 goto (branch) {2063399614}";
"$r4 = new java.lang.IllegalArgumentException {318059644}" -> "specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid direction parameter (must be VERTICAL or HORIZONTAL or both)\") {1896466562}";
"specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid direction parameter (must be VERTICAL or HORIZONTAL or both)\") {1896466562}" -> "throw $r4 {1256477707}";
"if filterType == 1 goto (branch) {2063399614}" -> "if filterType == 0 goto (branch) {1281912249}";
"if filterType == 1 goto (branch) {2063399614}" -> "if channels == 3 goto this.<kanzi.filter.SobelFilter: int height> = height {422796728}";
"if filterType == 0 goto (branch) {1281912249}" -> "$r5 = new java.lang.IllegalArgumentException {2053807918}";
"if filterType == 0 goto (branch) {1281912249}" -> "if channels == 3 goto this.<kanzi.filter.SobelFilter: int height> = height {422796728}";
"$r5 = new java.lang.IllegalArgumentException {2053807918}" -> "specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid filter type parameter (must be IMAGE or COST)\") {2147267413}";
"specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid filter type parameter (must be IMAGE or COST)\") {2147267413}" -> "throw $r5 {1363267691}";
"if channels == 3 goto this.<kanzi.filter.SobelFilter: int height> = height {422796728}" -> "if channels == 0 goto this.<kanzi.filter.SobelFilter: int height> = height {426666590}";
"if channels == 3 goto this.<kanzi.filter.SobelFilter: int height> = height {422796728}" -> "this.<kanzi.filter.SobelFilter: int height> = height {1680552806}";
"if channels == 0 goto this.<kanzi.filter.SobelFilter: int height> = height {426666590}" -> "if channels == 1 goto this.<kanzi.filter.SobelFilter: int height> = height {1446627579}";
"if channels == 0 goto this.<kanzi.filter.SobelFilter: int height> = height {426666590}" -> "this.<kanzi.filter.SobelFilter: int height> = height {1680552806}";
"if channels == 1 goto this.<kanzi.filter.SobelFilter: int height> = height {1446627579}" -> "if channels == 2 goto this.<kanzi.filter.SobelFilter: int height> = height {1428291355}";
"if channels == 1 goto this.<kanzi.filter.SobelFilter: int height> = height {1446627579}" -> "this.<kanzi.filter.SobelFilter: int height> = height {1680552806}";
"if channels == 2 goto this.<kanzi.filter.SobelFilter: int height> = height {1428291355}" -> "$r6 = new java.lang.IllegalArgumentException {1296538452}";
"if channels == 2 goto this.<kanzi.filter.SobelFilter: int height> = height {1428291355}" -> "this.<kanzi.filter.SobelFilter: int height> = height {1680552806}";
"$r6 = new java.lang.IllegalArgumentException {1296538452}" -> "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid input channel parameter (must be RGB or R or G or B)\") {424092489}";
"specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Invalid input channel parameter (must be RGB or R or G or B)\") {424092489}" -> "throw $r6 {1756075534}";
"this.<kanzi.filter.SobelFilter: int height> = height {1680552806}" -> "this.<kanzi.filter.SobelFilter: int width> = width {2140074357}";
"this.<kanzi.filter.SobelFilter: int width> = width {2140074357}" -> "this.<kanzi.filter.SobelFilter: int stride> = stride {714367815}";
"this.<kanzi.filter.SobelFilter: int stride> = stride {714367815}" -> "this.<kanzi.filter.SobelFilter: int direction> = direction {1085275120}";
"this.<kanzi.filter.SobelFilter: int direction> = direction {1085275120}" -> "this.<kanzi.filter.SobelFilter: int filterType> = filterType {806024687}";
"this.<kanzi.filter.SobelFilter: int filterType> = filterType {806024687}" -> "this.<kanzi.filter.SobelFilter: int channels> = channels {2106267226}";
"this.<kanzi.filter.SobelFilter: int channels> = channels {2106267226}" -> "this.<kanzi.filter.SobelFilter: boolean processBoundaries> = processBoundaries {762199418}";
"this.<kanzi.filter.SobelFilter: boolean processBoundaries> = processBoundaries {762199418}" -> "return {141739851}";
}

digraph apply {
"this := @this: kanzi.filter.SobelFilter {358640079}" -> "input := @parameter0: kanzi.SliceIntArray {609041265}";
"input := @parameter0: kanzi.SliceIntArray {609041265}" -> "output := @parameter1: kanzi.SliceIntArray {1264565519}";
"output := @parameter1: kanzi.SliceIntArray {1264565519}" -> "$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(input) {213946305}";
"$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(input) {213946305}" -> "if $z0 == 0 goto return 0 {985791635}";
"if $z0 == 0 goto return 0 {985791635}" -> "$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(output) {780163788}";
"if $z0 == 0 goto return 0 {985791635}" -> "return 0 {375619504}";
"$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(output) {780163788}" -> "if $z1 != 0 goto src = input.<kanzi.SliceIntArray: int[] array> {641099354}";
"if $z1 != 0 goto src = input.<kanzi.SliceIntArray: int[] array> {641099354}" -> "return 0 {375619504}";
"if $z1 != 0 goto src = input.<kanzi.SliceIntArray: int[] array> {641099354}" -> "src = input.<kanzi.SliceIntArray: int[] array> {268089}";
"src = input.<kanzi.SliceIntArray: int[] array> {268089}" -> "dst = output.<kanzi.SliceIntArray: int[] array> {237171377}";
"dst = output.<kanzi.SliceIntArray: int[] array> {237171377}" -> "srcStart#12 = input.<kanzi.SliceIntArray: int index> {916631875}";
"srcStart#12 = input.<kanzi.SliceIntArray: int index> {916631875}" -> "dstStart#15 = output.<kanzi.SliceIntArray: int index> {996141761}";
"dstStart#15 = output.<kanzi.SliceIntArray: int index> {996141761}" -> "$i0 = this.<kanzi.filter.SobelFilter: int direction> {1101136938}";
"$i0 = this.<kanzi.filter.SobelFilter: int direction> {1101136938}" -> "$i1 = $i0 & 2 {1625690742}";
"$i1 = $i0 & 2 {1625690742}" -> "if $i1 == 0 goto $z2 = 0 {825547028}";
"if $i1 == 0 goto $z2 = 0 {825547028}" -> "$z2 = 1 {686787836}";
"if $i1 == 0 goto $z2 = 0 {825547028}" -> "$z2 = 0 {1247052979}";
"$z2 = 1 {686787836}" -> "goto [?= isVertical = $z2] {452018233}";
"goto [?= isVertical = $z2] {452018233}" -> "isVertical = $z2 {157542323}";
"$z2 = 0 {1247052979}" -> "isVertical = $z2 {157542323}";
"isVertical = $z2 {157542323}" -> "$i2 = this.<kanzi.filter.SobelFilter: int direction> {1998385329}";
"$i2 = this.<kanzi.filter.SobelFilter: int direction> {1998385329}" -> "$i3 = $i2 & 1 {1141544682}";
"$i3 = $i2 & 1 {1141544682}" -> "if $i3 == 0 goto $z3 = 0 {1098711723}";
"if $i3 == 0 goto $z3 = 0 {1098711723}" -> "$z3 = 1 {1375005517}";
"if $i3 == 0 goto $z3 = 0 {1098711723}" -> "$z3 = 0 {112720959}";
"$z3 = 1 {1375005517}" -> "goto [?= isHorizontal = $z3] {370836944}";
"goto [?= isHorizontal = $z3] {370836944}" -> "isHorizontal = $z3 {1496249912}";
"$z3 = 0 {112720959}" -> "isHorizontal = $z3 {1496249912}";
"isHorizontal = $z3 {1496249912}" -> "$i4 = this.<kanzi.filter.SobelFilter: int channels> {574066056}";
"$i4 = this.<kanzi.filter.SobelFilter: int channels> {574066056}" -> "if $i4 != 3 goto $z4 = 0 {362360755}";
"if $i4 != 3 goto $z4 = 0 {362360755}" -> "$z4 = 1 {1215962948}";
"if $i4 != 3 goto $z4 = 0 {362360755}" -> "$z4 = 0 {703003968}";
"$z4 = 1 {1215962948}" -> "goto [?= isPacked = $z4] {1455390734}";
"goto [?= isPacked = $z4] {1455390734}" -> "isPacked = $z4 {1841695416}";
"$z4 = 0 {703003968}" -> "isPacked = $z4 {1841695416}";
"isPacked = $z4 {1841695416}" -> "$i5 = this.<kanzi.filter.SobelFilter: int channels> {1505866153}";
"$i5 = this.<kanzi.filter.SobelFilter: int channels> {1505866153}" -> "if $i5 != 0 goto $i7 = this.<kanzi.filter.SobelFilter: int channels> {1497678994}";
"if $i5 != 0 goto $i7 = this.<kanzi.filter.SobelFilter: int channels> {1497678994}" -> "$b6 = 16 {67798728}";
"if $i5 != 0 goto $i7 = this.<kanzi.filter.SobelFilter: int channels> {1497678994}" -> "$i7 = this.<kanzi.filter.SobelFilter: int channels> {1917071626}";
"$b6 = 16 {67798728}" -> "goto [?= shiftChannel = $b6] {1505999391}";
"goto [?= shiftChannel = $b6] {1505999391}" -> "shiftChannel = $b6 {997842561}";
"$i7 = this.<kanzi.filter.SobelFilter: int channels> {1917071626}" -> "if $i7 != 1 goto $b6 = 0 {1719636052}";
"if $i7 != 1 goto $b6 = 0 {1719636052}" -> "$b6 = 8 {861063248}";
"if $i7 != 1 goto $b6 = 0 {1719636052}" -> "$b6 = 0 {69945505}";
"$b6 = 8 {861063248}" -> "goto [?= shiftChannel = $b6] {1615684433}";
"goto [?= shiftChannel = $b6] {1615684433}" -> "shiftChannel = $b6 {997842561}";
"$b6 = 0 {69945505}" -> "shiftChannel = $b6 {997842561}";
"shiftChannel = $b6 {997842561}" -> "$i8 = this.<kanzi.filter.SobelFilter: int filterType> {1855282593}";
"$i8 = this.<kanzi.filter.SobelFilter: int filterType> {1855282593}" -> "if $i8 != 1 goto $s9 = -1 {1643211360}";
"if $i8 != 1 goto $s9 = -1 {1643211360}" -> "$s9 = 255 {2061876447}";
"if $i8 != 1 goto $s9 = -1 {1643211360}" -> "$s9 = -1 {1670422153}";
"$s9 = 255 {2061876447}" -> "goto [?= mask = $s9] {1046060663}";
"goto [?= mask = $s9] {1046060663}" -> "mask = $s9 {1586236497}";
"$s9 = -1 {1670422153}" -> "mask = $s9 {1586236497}";
"mask = $s9 {1586236497}" -> "h = this.<kanzi.filter.SobelFilter: int height> {1052967562}";
"h = this.<kanzi.filter.SobelFilter: int height> {1052967562}" -> "w = this.<kanzi.filter.SobelFilter: int width> {2042590780}";
"w = this.<kanzi.filter.SobelFilter: int width> {2042590780}" -> "st = this.<kanzi.filter.SobelFilter: int stride> {216102049}";
"st = this.<kanzi.filter.SobelFilter: int stride> {216102049}" -> "y#49 = h - 2 {447554503}";
"y#49 = h - 2 {447554503}" -> "if y#49 <= 0 goto firstLine = output.<kanzi.SliceIntArray: int index> {1834484040}";
"if y#49 <= 0 goto firstLine = output.<kanzi.SliceIntArray: int index> {1834484040}" -> "srcLine = srcStart#12 + st {1983235543}";
"if y#49 <= 0 goto firstLine = output.<kanzi.SliceIntArray: int index> {1834484040}" -> "firstLine = output.<kanzi.SliceIntArray: int index> {1144768671}";
"srcLine = srcStart#12 + st {1983235543}" -> "endLine = srcLine + st {1604866631}";
"endLine = srcLine + st {1604866631}" -> "dstLine = dstStart#15 + st {822702621}";
"dstLine = dstStart#15 + st {822702621}" -> "pixel00 = src[srcStart#12] {827734481}";
"pixel00 = src[srcStart#12] {827734481}" -> "$i10 = srcStart#12 + 1 {1148802712}";
"$i10 = srcStart#12 + 1 {1148802712}" -> "pixel01 = src[$i10] {175053832}";
"pixel01 = src[$i10] {175053832}" -> "pixel10 = src[srcLine] {2064009626}";
"pixel10 = src[srcLine] {2064009626}" -> "$i11 = srcLine + 1 {1826763138}";
"$i11 = srcLine + 1 {1826763138}" -> "pixel11 = src[$i11] {20703827}";
"pixel11 = src[$i11] {20703827}" -> "pixel20 = src[endLine] {1988716009}";
"pixel20 = src[endLine] {1988716009}" -> "$i12 = endLine + 1 {1218875154}";
"$i12 = endLine + 1 {1218875154}" -> "pixel21 = src[$i12] {36969385}";
"pixel21 = src[$i12] {36969385}" -> "if isPacked != 1 goto $i55 = pixel00 >> shiftChannel {2115682916}";
"if isPacked != 1 goto $i55 = pixel00 >> shiftChannel {2115682916}" -> "$i13 = pixel00 >> 16 {677638414}";
"if isPacked != 1 goto $i55 = pixel00 >> shiftChannel {2115682916}" -> "$i55 = pixel00 >> shiftChannel {1004672211}";
"$i13 = pixel00 >> 16 {677638414}" -> "$i14 = $i13 & 255 {1467906910}";
"$i14 = $i13 & 255 {1467906910}" -> "$i15 = pixel00 >> 7 {658301982}";
"$i15 = pixel00 >> 7 {658301982}" -> "$i16 = $i15 & 510 {1942806043}";
"$i16 = $i15 & 510 {1942806043}" -> "$i17 = $i14 + $i16 {1465910142}";
"$i17 = $i14 + $i16 {1465910142}" -> "$i18 = pixel00 & 255 {1731550642}";
"$i18 = pixel00 & 255 {1731550642}" -> "$i19 = $i17 + $i18 {806996441}";
"$i19 = $i17 + $i18 {806996441}" -> "val00#103 = $i19 >> 2 {1705027224}";
"val00#103 = $i19 >> 2 {1705027224}" -> "$i20 = pixel01 >> 16 {909228003}";
"$i20 = pixel01 >> 16 {909228003}" -> "$i21 = $i20 & 255 {1694482276}";
"$i21 = $i20 & 255 {1694482276}" -> "$i22 = pixel01 >> 7 {1867767710}";
"$i22 = pixel01 >> 7 {1867767710}" -> "$i23 = $i22 & 510 {1407570091}";
"$i23 = $i22 & 510 {1407570091}" -> "$i24 = $i21 + $i23 {1682661098}";
"$i24 = $i21 + $i23 {1682661098}" -> "$i25 = pixel01 & 255 {1812892111}";
"$i25 = pixel01 & 255 {1812892111}" -> "$i26 = $i24 + $i25 {1376528042}";
"$i26 = $i24 + $i25 {1376528042}" -> "val01#121 = $i26 >> 2 {1222706025}";
"val01#121 = $i26 >> 2 {1222706025}" -> "$i27 = pixel10 >> 16 {1595646089}";
"$i27 = pixel10 >> 16 {1595646089}" -> "$i28 = $i27 & 255 {1047905327}";
"$i28 = $i27 & 255 {1047905327}" -> "$i29 = pixel10 >> 7 {797679579}";
"$i29 = pixel10 >> 7 {797679579}" -> "$i30 = $i29 & 510 {387580210}";
"$i30 = $i29 & 510 {387580210}" -> "$i31 = $i28 + $i30 {1379824404}";
"$i31 = $i28 + $i30 {1379824404}" -> "$i32 = pixel10 & 255 {586293740}";
"$i32 = pixel10 & 255 {586293740}" -> "$i33 = $i31 + $i32 {66404469}";
"$i33 = $i31 + $i32 {66404469}" -> "val10#139 = $i33 >> 2 {719848364}";
"val10#139 = $i33 >> 2 {719848364}" -> "$i34 = pixel11 >> 16 {210393620}";
"$i34 = pixel11 >> 16 {210393620}" -> "$i35 = $i34 & 255 {387325711}";
"$i35 = $i34 & 255 {387325711}" -> "$i36 = pixel11 >> 7 {1396662387}";
"$i36 = pixel11 >> 7 {1396662387}" -> "$i37 = $i36 & 510 {1351767057}";
"$i37 = $i36 & 510 {1351767057}" -> "$i38 = $i35 + $i37 {256602607}";
"$i38 = $i35 + $i37 {256602607}" -> "$i39 = pixel11 & 255 {646032474}";
"$i39 = pixel11 & 255 {646032474}" -> "$i40 = $i38 + $i39 {1913742700}";
"$i40 = $i38 + $i39 {1913742700}" -> "val11#157 = $i40 >> 2 {341109568}";
"val11#157 = $i40 >> 2 {341109568}" -> "$i41 = pixel20 >> 16 {1429311745}";
"$i41 = pixel20 >> 16 {1429311745}" -> "$i42 = $i41 & 255 {279394778}";
"$i42 = $i41 & 255 {279394778}" -> "$i43 = pixel20 >> 7 {1161887}";
"$i43 = pixel20 >> 7 {1161887}" -> "$i44 = $i43 & 510 {912233734}";
"$i44 = $i43 & 510 {912233734}" -> "$i45 = $i42 + $i44 {1907487413}";
"$i45 = $i42 + $i44 {1907487413}" -> "$i46 = pixel20 & 255 {383836941}";
"$i46 = pixel20 & 255 {383836941}" -> "$i47 = $i45 + $i46 {1748668222}";
"$i47 = $i45 + $i46 {1748668222}" -> "val20#175 = $i47 >> 2 {1132814916}";
"val20#175 = $i47 >> 2 {1132814916}" -> "$i48 = pixel21 >> 16 {865571563}";
"$i48 = pixel21 >> 16 {865571563}" -> "$i49 = $i48 & 255 {69803433}";
"$i49 = $i48 & 255 {69803433}" -> "$i50 = pixel21 >> 7 {2011121582}";
"$i50 = pixel21 >> 7 {2011121582}" -> "$i51 = $i50 & 510 {821815562}";
"$i51 = $i50 & 510 {821815562}" -> "$i52 = $i49 + $i51 {1243156654}";
"$i52 = $i49 + $i51 {1243156654}" -> "$i53 = pixel21 & 255 {759022668}";
"$i53 = pixel21 & 255 {759022668}" -> "$i54 = $i52 + $i53 {790834469}";
"$i54 = $i52 + $i53 {790834469}" -> "val21#193 = $i54 >> 2 {1744809183}";
"val21#193 = $i54 >> 2 {1744809183}" -> "goto [?= x#225 = 2] {131494112}";
"goto [?= x#225 = 2] {131494112}" -> "x#225 = 2 {853567591}";
"$i55 = pixel00 >> shiftChannel {1004672211}" -> "val00#103 = $i55 & 255 {1541268003}";
"val00#103 = $i55 & 255 {1541268003}" -> "$i56 = pixel01 >> shiftChannel {1921509664}";
"$i56 = pixel01 >> shiftChannel {1921509664}" -> "val01#121 = $i56 & 255 {1929162811}";
"val01#121 = $i56 & 255 {1929162811}" -> "$i57 = pixel10 >> shiftChannel {63322310}";
"$i57 = pixel10 >> shiftChannel {63322310}" -> "val10#139 = $i57 & 255 {2070875464}";
"val10#139 = $i57 & 255 {2070875464}" -> "$i58 = pixel11 >> shiftChannel {74412685}";
"$i58 = pixel11 >> shiftChannel {74412685}" -> "val11#157 = $i58 & 255 {1180853028}";
"val11#157 = $i58 & 255 {1180853028}" -> "$i59 = pixel20 >> shiftChannel {1190167181}";
"$i59 = pixel20 >> shiftChannel {1190167181}" -> "val20#175 = $i59 & 255 {1622884684}";
"val20#175 = $i59 & 255 {1622884684}" -> "$i60 = pixel21 >> shiftChannel {1833023866}";
"$i60 = pixel21 >> shiftChannel {1833023866}" -> "val21#193 = $i60 & 255 {2063904290}";
"val21#193 = $i60 & 255 {2063904290}" -> "x#225 = 2 {853567591}";
"x#225 = 2 {853567591}" -> "if x#225 >= w goto $z5 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {661225931}";
"if x#225 >= w goto $z5 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {661225931}" -> "$i61 = srcStart#12 + x#225 {972993246}";
"if x#225 >= w goto $z5 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {661225931}" -> "$z5 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {1547151281}";
"$i61 = srcStart#12 + x#225 {972993246}" -> "pixel02 = src[$i61] {1978442931}";
"pixel02 = src[$i61] {1978442931}" -> "$i62 = srcLine + x#225 {1842850979}";
"$i62 = srcLine + x#225 {1842850979}" -> "pixel12 = src[$i62] {304358900}";
"pixel12 = src[$i62] {304358900}" -> "$i63 = endLine + x#225 {1178669789}";
"$i63 = endLine + x#225 {1178669789}" -> "pixel22 = src[$i63] {835284817}";
"pixel22 = src[$i63] {835284817}" -> "if isPacked != 1 goto $i85 = pixel02 >> shiftChannel {1143226754}";
"if isPacked != 1 goto $i85 = pixel02 >> shiftChannel {1143226754}" -> "$i64 = pixel02 >> 16 {1548940523}";
"if isPacked != 1 goto $i85 = pixel02 >> shiftChannel {1143226754}" -> "$i85 = pixel02 >> shiftChannel {555892817}";
"$i64 = pixel02 >> 16 {1548940523}" -> "$i65 = $i64 & 255 {1825217756}";
"$i65 = $i64 & 255 {1825217756}" -> "$i66 = pixel02 >> 7 {672176251}";
"$i66 = pixel02 >> 7 {672176251}" -> "$i67 = $i66 & 510 {1653646889}";
"$i67 = $i66 & 510 {1653646889}" -> "$i68 = $i65 + $i67 {703865945}";
"$i68 = $i65 + $i67 {703865945}" -> "$i69 = pixel02 & 255 {1410401420}";
"$i69 = pixel02 & 255 {1410401420}" -> "$i70 = $i68 + $i69 {1548694715}";
"$i70 = $i68 + $i69 {1548694715}" -> "val02#262 = $i70 >> 2 {1948210043}";
"val02#262 = $i70 >> 2 {1948210043}" -> "$i71 = pixel12 >> 16 {364526855}";
"$i71 = pixel12 >> 16 {364526855}" -> "$i72 = $i71 & 255 {595435520}";
"$i72 = $i71 & 255 {595435520}" -> "$i73 = pixel12 >> 7 {887029611}";
"$i73 = pixel12 >> 7 {887029611}" -> "$i74 = $i73 & 510 {292730348}";
"$i74 = $i73 & 510 {292730348}" -> "$i75 = $i72 + $i74 {215959367}";
"$i75 = $i72 + $i74 {215959367}" -> "$i76 = pixel12 & 255 {1488758182}";
"$i76 = pixel12 & 255 {1488758182}" -> "$i77 = $i75 + $i76 {783234185}";
"$i77 = $i75 + $i76 {783234185}" -> "val12#280 = $i77 >> 2 {887354928}";
"val12#280 = $i77 >> 2 {887354928}" -> "$i78 = pixel22 >> 16 {2100189094}";
"$i78 = pixel22 >> 16 {2100189094}" -> "$i79 = $i78 & 255 {1913606476}";
"$i79 = $i78 & 255 {1913606476}" -> "$i80 = pixel22 >> 7 {1794384455}";
"$i80 = pixel22 >> 7 {1794384455}" -> "$i81 = $i80 & 510 {1870074569}";
"$i81 = $i80 & 510 {1870074569}" -> "$i82 = $i79 + $i81 {170091855}";
"$i82 = $i79 + $i81 {170091855}" -> "$i83 = pixel22 & 255 {942948299}";
"$i83 = pixel22 & 255 {942948299}" -> "$i84 = $i82 + $i83 {690764959}";
"$i84 = $i82 + $i83 {690764959}" -> "val22#298 = $i84 >> 2 {909273842}";
"val22#298 = $i84 >> 2 {909273842}" -> "goto [?= (branch)] {4139677}";
"goto [?= (branch)] {4139677}" -> "if isHorizontal != 1 goto $i108 = val00#103 + val01#121 {710521110}";
"$i85 = pixel02 >> shiftChannel {555892817}" -> "val02#262 = $i85 & 255 {373337472}";
"val02#262 = $i85 & 255 {373337472}" -> "$i86 = pixel12 >> shiftChannel {207150483}";
"$i86 = pixel12 >> shiftChannel {207150483}" -> "val12#280 = $i86 & 255 {1997067770}";
"val12#280 = $i86 & 255 {1997067770}" -> "$i87 = pixel22 >> shiftChannel {394347179}";
"$i87 = pixel22 >> shiftChannel {394347179}" -> "val22#298 = $i87 & 255 {1545971667}";
"val22#298 = $i87 & 255 {1545971667}" -> "if isHorizontal != 1 goto $i108 = val00#103 + val01#121 {710521110}";
"if isHorizontal != 1 goto $i108 = val00#103 + val01#121 {710521110}" -> "$i88 = neg val00#103 {2066264611}";
"if isHorizontal != 1 goto $i108 = val00#103 + val01#121 {710521110}" -> "$i108 = val00#103 + val01#121 {1063061093}";
"$i88 = neg val00#103 {2066264611}" -> "$i89 = $i88 + val02#262 {2073779763}";
"$i89 = $i88 + val02#262 {2073779763}" -> "$i90 = $i89 - val10#139 {40725501}";
"$i90 = $i89 - val10#139 {40725501}" -> "$i91 = $i90 - val10#139 {1393986746}";
"$i91 = $i90 - val10#139 {1393986746}" -> "$i92 = $i91 + val12#280 {1429672693}";
"$i92 = $i91 + val12#280 {1429672693}" -> "$i93 = $i92 + val12#280 {697667071}";
"$i93 = $i92 + val12#280 {697667071}" -> "$i94 = $i93 - val20#175 {499991552}";
"$i94 = $i93 - val20#175 {499991552}" -> "val#332 = $i94 + val22#298 {1589932734}";
"val#332 = $i94 + val22#298 {1589932734}" -> "$i95 = val#332 >> 31 {87754516}";
"$i95 = val#332 >> 31 {87754516}" -> "$i96 = val#332 + $i95 {1324360838}";
"$i96 = val#332 + $i95 {1324360838}" -> "$i97 = val#332 >> 31 {2003732323}";
"$i97 = val#332 >> 31 {2003732323}" -> "val#342 = $i96 ^ $i97 {395569628}";
"val#342 = $i96 ^ $i97 {395569628}" -> "if isVertical != 1 goto $i117 = dstLine + x#225 {767895325}";
"if isVertical != 1 goto $i117 = dstLine + x#225 {767895325}" -> "$i98 = val00#103 + val01#121 {270062971}";
"if isVertical != 1 goto $i117 = dstLine + x#225 {767895325}" -> "$i117 = dstLine + x#225 {1002708213}";
"$i98 = val00#103 + val01#121 {270062971}" -> "$i99 = $i98 + val01#121 {912306736}";
"$i99 = $i98 + val01#121 {912306736}" -> "$i100 = $i99 + val02#262 {1849877085}";
"$i100 = $i99 + val02#262 {1849877085}" -> "$i101 = $i100 - val20#175 {1180125994}";
"$i101 = $i100 - val20#175 {1180125994}" -> "$i102 = $i101 - val21#193 {1023593646}";
"$i102 = $i101 - val21#193 {1023593646}" -> "$i103 = $i102 - val21#193 {411579772}";
"$i103 = $i102 - val21#193 {411579772}" -> "valV#360 = $i103 - val22#298 {1205275526}";
"valV#360 = $i103 - val22#298 {1205275526}" -> "$i104 = valV#360 >> 31 {72441411}";
"$i104 = valV#360 >> 31 {72441411}" -> "$i105 = valV#360 + $i104 {1187834314}";
"$i105 = valV#360 + $i104 {1187834314}" -> "$i106 = valV#360 >> 31 {1657558225}";
"$i106 = valV#360 >> 31 {1657558225}" -> "valV#370 = $i105 ^ $i106 {514935621}";
"valV#370 = $i105 ^ $i106 {514935621}" -> "$i107 = val#342 + valV#370 {1198643959}";
"$i107 = val#342 + valV#370 {1198643959}" -> "val#342 = $i107 >> 1 {117371400}";
"val#342 = $i107 >> 1 {117371400}" -> "goto [?= $i117 = dstLine + x#225] {1326523970}";
"goto [?= $i117 = dstLine + x#225] {1326523970}" -> "$i117 = dstLine + x#225 {1002708213}";
"$i108 = val00#103 + val01#121 {1063061093}" -> "$i109 = $i108 + val01#121 {1842536394}";
"$i109 = $i108 + val01#121 {1842536394}" -> "$i110 = $i109 + val02#262 {1651090941}";
"$i110 = $i109 + val02#262 {1651090941}" -> "$i111 = $i110 - val20#175 {538495666}";
"$i111 = $i110 - val20#175 {538495666}" -> "$i112 = $i111 - val21#193 {1032559682}";
"$i112 = $i111 - val21#193 {1032559682}" -> "$i113 = $i112 - val21#193 {2069579433}";
"$i113 = $i112 - val21#193 {2069579433}" -> "val#391 = $i113 - val22#298 {56809251}";
"val#391 = $i113 - val22#298 {56809251}" -> "$i114 = val#391 >> 31 {295595940}";
"$i114 = val#391 >> 31 {295595940}" -> "$i115 = val#391 + $i114 {1581484168}";
"$i115 = val#391 + $i114 {1581484168}" -> "$i116 = val#391 >> 31 {454188306}";
"$i116 = val#391 >> 31 {454188306}" -> "val#342 = $i115 ^ $i116 {2001090871}";
"val#342 = $i115 ^ $i116 {2001090871}" -> "$i117 = dstLine + x#225 {1002708213}";
"$i117 = dstLine + x#225 {1002708213}" -> "$i118 = $i117 - 1 {721963716}";
"$i118 = $i117 - 1 {721963716}" -> "if val#342 <= 255 goto $i120 = val#342 << 16 {434441536}";
"if val#342 <= 255 goto $i120 = val#342 << 16 {434441536}" -> "$i119 = mask {1591673814}";
"if val#342 <= 255 goto $i120 = val#342 << 16 {434441536}" -> "$i120 = val#342 << 16 {852243499}";
"$i119 = mask {1591673814}" -> "goto [?= dst[$i118] = $i119] {1183205721}";
"goto [?= dst[$i118] = $i119] {1183205721}" -> "dst[$i118] = $i119 {1677859200}";
"$i120 = val#342 << 16 {852243499}" -> "$i121 = -16777216 | $i120 {19232185}";
"$i121 = -16777216 | $i120 {19232185}" -> "$i122 = val#342 << 8 {1682692699}";
"$i122 = val#342 << 8 {1682692699}" -> "$i123 = $i121 | $i122 {1315562454}";
"$i123 = $i121 | $i122 {1315562454}" -> "$i124 = $i123 | val#342 {1630213628}";
"$i124 = $i123 | val#342 {1630213628}" -> "$i119 = $i124 & mask {1518251380}";
"$i119 = $i124 & mask {1518251380}" -> "dst[$i118] = $i119 {1677859200}";
"dst[$i118] = $i119 {1677859200}" -> "val00#103 = val01#121 {1119678908}";
"val00#103 = val01#121 {1119678908}" -> "val01#121 = val02#262 {431762347}";
"val01#121 = val02#262 {431762347}" -> "val10#139 = val11#157 {437337316}";
"val10#139 = val11#157 {437337316}" -> "val11#157 = val12#280 {945344133}";
"val11#157 = val12#280 {945344133}" -> "val20#175 = val21#193 {1014115822}";
"val20#175 = val21#193 {1014115822}" -> "val21#193 = val22#298 {134836705}";
"val21#193 = val22#298 {134836705}" -> "x#225 = x#225 + 1 {429396598}";
"x#225 = x#225 + 1 {429396598}" -> "goto [?= (branch)] {883442166}";
"goto [?= (branch)] {883442166}" -> "if x#225 >= w goto $z5 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {661225931}";
"$z5 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {1547151281}" -> "if $z5 != 1 goto srcStart#12 = srcLine {1932809032}";
"if $z5 != 1 goto srcStart#12 = srcLine {1932809032}" -> "$i125 = dstLine + 1 {1541910035}";
"if $z5 != 1 goto srcStart#12 = srcLine {1932809032}" -> "srcStart#12 = srcLine {780695189}";
"$i125 = dstLine + 1 {1541910035}" -> "$i126 = dst[$i125] {652282620}";
"$i126 = dst[$i125] {652282620}" -> "dst[dstLine] = $i126 {2011983296}";
"dst[dstLine] = $i126 {2011983296}" -> "$i127 = dstLine + w {385641375}";
"$i127 = dstLine + w {385641375}" -> "$i128 = $i127 - 1 {2108019653}";
"$i128 = $i127 - 1 {2108019653}" -> "$i129 = dstLine + w {1531843010}";
"$i129 = dstLine + w {1531843010}" -> "$i130 = $i129 - 2 {133432918}";
"$i130 = $i129 - 2 {133432918}" -> "$i131 = dst[$i130] {963323728}";
"$i131 = dst[$i130] {963323728}" -> "dst[$i128] = $i131 {302051774}";
"dst[$i128] = $i131 {302051774}" -> "srcStart#12 = srcLine {780695189}";
"srcStart#12 = srcLine {780695189}" -> "dstStart#15 = dstLine {1537282251}";
"dstStart#15 = dstLine {1537282251}" -> "y#49 = y#49 + -1 {439586736}";
"y#49 = y#49 + -1 {439586736}" -> "goto [?= (branch)] {2011328189}";
"goto [?= (branch)] {2011328189}" -> "if y#49 <= 0 goto firstLine = output.<kanzi.SliceIntArray: int index> {1834484040}";
"firstLine = output.<kanzi.SliceIntArray: int index> {1144768671}" -> "$i132 = output.<kanzi.SliceIntArray: int index> {884352614}";
"$i132 = output.<kanzi.SliceIntArray: int index> {884352614}" -> "$i133 = h - 1 {1209055717}";
"$i133 = h - 1 {1209055717}" -> "$i134 = st * $i133 {924656239}";
"$i134 = st * $i133 {924656239}" -> "lastLine = $i132 + $i134 {2042455160}";
"lastLine = $i132 + $i134 {2042455160}" -> "$z6 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {237186398}";
"$z6 = this.<kanzi.filter.SobelFilter: boolean processBoundaries> {237186398}" -> "if $z6 != 1 goto return 1 {1361654223}";
"if $z6 != 1 goto return 1 {1361654223}" -> "$i135 = firstLine + st {2068128546}";
"if $z6 != 1 goto return 1 {1361654223}" -> "return 1 {1105786189}";
"$i135 = firstLine + st {2068128546}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dst, $i135, dst, firstLine, w) {2131509093}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dst, $i135, dst, firstLine, w) {2131509093}" -> "$i136 = lastLine - st {646136895}";
"$i136 = lastLine - st {646136895}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dst, $i136, dst, lastLine, w) {541692184}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(dst, $i136, dst, lastLine, w) {541692184}" -> "return 1 {1105786189}";
}


