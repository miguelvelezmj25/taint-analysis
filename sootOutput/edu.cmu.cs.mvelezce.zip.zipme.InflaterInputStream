    public void <init>(java.io.InputStream, edu.cmu.cs.mvelezce.zip.zipme.Inflater, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream this;
        java.io.InputStream in;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater inf;
        int size;
        byte[] $r0, $r4;
        java.lang.NullPointerException $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream;

        in := @parameter0: java.io.InputStream;

        inf := @parameter1: edu.cmu.cs.mvelezce.zip.zipme.Inflater;

        size := @parameter2: int;

        specialinvoke this.<java.io.InputStream: void <init>()>();

        $r0 = newarray (byte)[1];

        this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: byte[] onebytebuffer> = $r0;

        this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: java.io.InputStream in> = in;

        if in != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("in may not be null");

        throw $r1;

     label1:
        if inf != null goto label2;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("inf may not be null");

        throw $r2;

     label2:
        if size >= 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size may not be negative");

        throw $r3;

     label3:
        this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf> = inf;

        $r4 = newarray (byte)[size];

        this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: byte[] buf> = $r4;

        return;
    }

    public synchronized void close() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream this;
        java.io.InputStream $r0, $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: java.io.InputStream in>;

        if $r0 == null goto label1;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label1:
        this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: java.io.InputStream in> = null;

        return;
    }

    public int read(byte[]) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream this;
        byte[] buf;
        int $i0, $i1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream;

        buf := @parameter0: byte[];

        $i0 = lengthof buf;

        $i1 = virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int read(byte[],int,int)>(buf, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream this;
        byte[] b;
        int off, len, count#15;
        edu.cmu.cs.mvelezce.zip.zipme.DataFormatException dfe, $r3;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r0, $r2, $r6, $r7, $r8;
        java.io.IOException $r1;
        boolean count#9, $z0, $z1, $z2, $z3;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r4;
        java.lang.String $r5;
        java.lang.Error $r9;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        if $r0 != null goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r1;

     label1:
        if len != 0 goto label2;

        return 0;

     label2:
        count#9 = 0;

     label3:
        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        count#15 = virtualinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int inflate(byte[],int,int)>(b, off, len);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        dfe = $r3;

        $r4 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        $r5 = virtualinvoke dfe.<edu.cmu.cs.mvelezce.zip.zipme.DataFormatException: java.lang.String getMessage()>();

        specialinvoke $r4.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label6:
        if count#15 <= 0 goto label7;

        return count#15;

     label7:
        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $z0 = virtualinvoke $r6.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: boolean needsDictionary()>();

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $z1 = virtualinvoke $r7.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: boolean finished()>();

        $z2 = $z0 | $z1;

        if $z2 == 0 goto label8;

        return -1;

     label8:
        $r8 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $z3 = virtualinvoke $r8.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: boolean needsInput()>();

        if $z3 == 0 goto label9;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void fill()>();

        goto label3;

     label9:
        $r9 = new java.lang.Error;

        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>("Don\'t know what to do");

        throw $r9;

        catch edu.cmu.cs.mvelezce.zip.zipme.DataFormatException from label3 to label4 with label5;
    }

    protected void fill() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream this;
        java.io.InputStream $r0, $r2;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r1, $r5;
        byte[] $r3, $r4, $r7;
        int $i0, $i1, $i2, $i3;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r6;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: java.io.InputStream in>;

        if $r0 != null goto label1;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("InflaterInputStream is closed");

        throw $r1;

     label1:
        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: java.io.InputStream in>;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: byte[] buf>;

        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: byte[] buf>;

        $i0 = lengthof $r4;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r3, 0, $i0);

        this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int len> = $i1;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int len>;

        if $i2 >= 0 goto label2;

        $r5 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Deflated stream ends early.");

        throw $r5;

     label2:
        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: byte[] buf>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int len>;

        virtualinvoke $r6.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: void setInput(byte[],int,int)>($r7, 0, $i3);

        return;
    }

    public void <init>(java.io.InputStream, edu.cmu.cs.mvelezce.zip.zipme.Inflater)
    {
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream this;
        java.io.InputStream in;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater inf;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream;

        in := @parameter0: java.io.InputStream;

        inf := @parameter1: edu.cmu.cs.mvelezce.zip.zipme.Inflater;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void <init>(java.io.InputStream,edu.cmu.cs.mvelezce.zip.zipme.Inflater,int)>(in, inf, 4096);

        return;
    }


