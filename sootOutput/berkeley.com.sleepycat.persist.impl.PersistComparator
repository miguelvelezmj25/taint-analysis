    public void <init>(berkeley.com.sleepycat.persist.impl.PersistKeyBinding)
    {
        berkeley.com.sleepycat.persist.impl.PersistComparator this;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding;
        berkeley.com.sleepycat.persist.impl.CompositeKeyFormat format;
        java.util.Iterator l3;
        berkeley.com.sleepycat.persist.impl.FieldInfo field;
        berkeley.com.sleepycat.persist.impl.Format fieldFormat, $r0;
        berkeley.com.sleepycat.persist.impl.EnumFormat enumFormat;
        java.lang.String $r1, $r10;
        berkeley.com.sleepycat.persist.model.ClassMetadata $r2;
        java.util.List $r3, $r5;
        java.lang.String[] $r4, $r11;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.util.Map $r7, $r9;
        java.util.HashMap $r8;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistComparator;

        binding := @parameter0: berkeley.com.sleepycat.persist.impl.PersistKeyBinding;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistComparator: berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding> = binding;

        $r0 = binding.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: berkeley.com.sleepycat.persist.impl.Format keyFormat>;

        format = (berkeley.com.sleepycat.persist.impl.CompositeKeyFormat) $r0;

        $r1 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.CompositeKeyFormat: java.lang.String getClassName()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.lang.String keyClassName> = $r1;

        $r2 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.CompositeKeyFormat: berkeley.com.sleepycat.persist.model.ClassMetadata getClassMetadata()>();

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.persist.model.ClassMetadata: java.util.List getCompositeKeyFields()>();

        $r4 = staticinvoke <berkeley.com.sleepycat.persist.impl.CompositeKeyFormat: java.lang.String[] getFieldNameArray(java.util.List)>($r3);

        this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.lang.String[] comositeFieldOrder> = $r4;

        $r5 = virtualinvoke format.<berkeley.com.sleepycat.persist.impl.CompositeKeyFormat: java.util.List getFieldInfo()>();

        l3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        field = (berkeley.com.sleepycat.persist.impl.FieldInfo) $r6;

        fieldFormat = virtualinvoke field.<berkeley.com.sleepycat.persist.impl.FieldInfo: berkeley.com.sleepycat.persist.impl.Format getType()>();

        $z1 = virtualinvoke fieldFormat.<berkeley.com.sleepycat.persist.impl.Format: boolean isEnum()>();

        if $z1 == 0 goto label3;

        enumFormat = (berkeley.com.sleepycat.persist.impl.EnumFormat) fieldFormat;

        $r7 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.util.Map fieldFormatData>;

        if $r7 != null goto label2;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.util.Map fieldFormatData> = $r8;

     label2:
        $r9 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.util.Map fieldFormatData>;

        $r10 = virtualinvoke enumFormat.<berkeley.com.sleepycat.persist.impl.EnumFormat: java.lang.String getClassName()>();

        $r11 = virtualinvoke enumFormat.<berkeley.com.sleepycat.persist.impl.EnumFormat: java.lang.String[] getFormatData()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

     label3:
        goto label1;

     label4:
        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        berkeley.com.sleepycat.persist.impl.PersistComparator this;
        java.lang.Object l1, l2;
        byte[] $r0, $r1;
        int $i0;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistComparator;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.lang.Object;

        $r0 = (byte[]) l1;

        $r1 = (byte[]) l2;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.persist.impl.PersistComparator: int compare(byte[],byte[])>($r0, $r1);

        return $i0;
    }

    public int compare(byte[], byte[])
    {
        berkeley.com.sleepycat.persist.impl.PersistComparator this;
        byte[] b1, b2;
        java.lang.Comparable k1, k2;
        berkeley.com.sleepycat.persist.impl.RefreshException e, $r6;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding $r0, $r2, $r4;
        java.lang.RuntimeException $r1, $r7;
        int $i0, $i1, $i2;
        java.lang.Object $r3, $r5;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistComparator;

        b1 := @parameter0: byte[];

        b2 := @parameter1: byte[];

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedState(java.lang.String)>("Not initialized");

        throw $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding>;

        $i0 = lengthof b1;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: java.lang.Object bytesToObject(byte[],int,int)>(b1, 0, $i0);

        k1 = (java.lang.Comparable) $r3;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding>;

        $i1 = lengthof b2;

        $r5 = virtualinvoke $r4.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: java.lang.Object bytesToObject(byte[],int,int)>(b2, 0, $i1);

        k2 = (java.lang.Comparable) $r5;

        $i2 = interfaceinvoke k1.<java.lang.Comparable: int compareTo(java.lang.Object)>(k2);

     label2:
        return $i2;

     label3:
        $r6 := @caughtexception;

        e = $r6;

        $r7 = staticinvoke <berkeley.com.sleepycat.compat.DbCompat: java.lang.RuntimeException unexpectedException(java.lang.Exception)>(e);

        throw $r7;

        catch berkeley.com.sleepycat.persist.impl.RefreshException from label1 to label2 with label3;
    }

    public void initialize(java.lang.ClassLoader)
    {
        berkeley.com.sleepycat.persist.impl.PersistComparator this;
        java.lang.ClassLoader loader;
        java.util.HashMap enumFormats, $r2;
        java.util.Map$Entry entry;
        java.lang.String fldClassName, $r15;
        java.lang.String[] enumNames, $r19;
        java.lang.Class fldClass, keyClass;
        java.lang.ClassNotFoundException e, e, $r9, $r16;
        berkeley.com.sleepycat.persist.impl.Format fldFormat;
        java.util.Map $r0, $r4;
        berkeley.com.sleepycat.persist.impl.ComparatorCatalog $r1, catalog#7, $r3;
        java.util.Set $r5;
        java.util.Iterator l4#18, l4#47;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r8, $r14;
        java.lang.IllegalStateException $r10, $r17;
        berkeley.com.sleepycat.persist.impl.EnumFormat $r11;
        java.util.Collection $r13;
        berkeley.com.sleepycat.persist.impl.PersistKeyBinding $r18;

        this := @this: berkeley.com.sleepycat.persist.impl.PersistComparator;

        loader := @parameter0: java.lang.ClassLoader;

        $r0 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.util.Map fieldFormatData>;

        if $r0 != null goto label01;

        $r1 = new berkeley.com.sleepycat.persist.impl.ComparatorCatalog;

        specialinvoke $r1.<berkeley.com.sleepycat.persist.impl.ComparatorCatalog: void <init>(java.lang.ClassLoader,java.util.Map)>(loader, null);

        catalog#7 = $r1;

        goto label09;

     label01:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        enumFormats = $r2;

        $r3 = new berkeley.com.sleepycat.persist.impl.ComparatorCatalog;

        specialinvoke $r3.<berkeley.com.sleepycat.persist.impl.ComparatorCatalog: void <init>(java.lang.ClassLoader,java.util.Map)>(loader, enumFormats);

        catalog#7 = $r3;

        $r4 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.util.Map fieldFormatData>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        l4#18 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke l4#18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r6 = interfaceinvoke l4#18.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        fldClassName = (java.lang.String) $r7;

        $r8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        enumNames = (java.lang.String[]) $r8;

     label03:
        fldClass = interfaceinvoke catalog#7.<berkeley.com.sleepycat.persist.impl.Catalog: java.lang.Class resolveClass(java.lang.String)>(fldClassName);

     label04:
        goto label06;

     label05:
        $r9 := @caughtexception;

        e = $r9;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(e);

        throw $r10;

     label06:
        $r11 = new berkeley.com.sleepycat.persist.impl.EnumFormat;

        specialinvoke $r11.<berkeley.com.sleepycat.persist.impl.EnumFormat: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class,java.lang.String[])>(catalog#7, fldClass, enumNames);

        interfaceinvoke enumFormats.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fldClassName, $r11);

        goto label02;

     label07:
        $r13 = interfaceinvoke enumFormats.<java.util.Map: java.util.Collection values()>();

        l4#47 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke l4#47.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r14 = interfaceinvoke l4#47.<java.util.Iterator: java.lang.Object next()>();

        fldFormat = (berkeley.com.sleepycat.persist.impl.Format) $r14;

        virtualinvoke fldFormat.<berkeley.com.sleepycat.persist.impl.Format: void initializeIfNeeded(berkeley.com.sleepycat.persist.impl.Catalog,berkeley.com.sleepycat.persist.model.EntityModel)>(catalog#7, null);

        goto label08;

     label09:
        $r15 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.lang.String keyClassName>;

        keyClass = interfaceinvoke catalog#7.<berkeley.com.sleepycat.persist.impl.Catalog: java.lang.Class resolveClass(java.lang.String)>($r15);

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;

        e = $r16;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(e);

        throw $r17;

     label12:
        $r18 = new berkeley.com.sleepycat.persist.impl.PersistKeyBinding;

        $r19 = this.<berkeley.com.sleepycat.persist.impl.PersistComparator: java.lang.String[] comositeFieldOrder>;

        specialinvoke $r18.<berkeley.com.sleepycat.persist.impl.PersistKeyBinding: void <init>(berkeley.com.sleepycat.persist.impl.Catalog,java.lang.Class,java.lang.String[])>(catalog#7, keyClass, $r19);

        this.<berkeley.com.sleepycat.persist.impl.PersistComparator: berkeley.com.sleepycat.persist.impl.PersistKeyBinding binding> = $r18;

        return;

        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
        catch java.lang.ClassNotFoundException from label09 to label10 with label11;
    }


