    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "java/util/zip/CRC32";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.util.zip.CRC32: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void update(byte[])
    {
        java.util.zip.CRC32 l0;
        byte[] l1;
        int $i0, $i1, $i2;

        l0 := @this: java.util.zip.CRC32;

        l1 := @parameter0: byte[];

        $i0 = l0.<java.util.zip.CRC32: int crc>;

        $i1 = lengthof l1;

        $i2 = staticinvoke <java.util.zip.CRC32: int updateBytes(int,byte[],int,int)>($i0, l1, 0, $i1);

        l0.<java.util.zip.CRC32: int crc> = $i2;

        return;
    }

    public long getValue()
    {
        java.util.zip.CRC32 l0;
        int $i0;
        long $l1, $l2;

        l0 := @this: java.util.zip.CRC32;

        $i0 = l0.<java.util.zip.CRC32: int crc>;

        $l1 = (long) $i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    public void <init>()
    {
        java.util.zip.CRC32 l0;

        l0 := @this: java.util.zip.CRC32;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }


