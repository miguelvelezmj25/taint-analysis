    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.log.LogEntryType $r1;
        byte $b0;

        $r0 = class "berkeley/com/sleepycat/je/utilint/LogVerifier";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled> = $z1;

        $r1 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        $b0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.LogEntryType: byte getTypeNum()>();

        <berkeley.com.sleepycat.je.utilint.LogVerifier: byte FILE_HEADER_TYPE_NUM> = $b0;

        return;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, java.lang.String)
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.lang.String fileName;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        fileName := @parameter1: java.lang.String;

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,long)>(envImpl, fileName, -1L);

        return;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, java.lang.String, long)
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.lang.String fileName;
        long fileNum, $l1;
        byte $b0;
        berkeley.com.sleepycat.je.log.FileManager $r1;
        java.lang.Long $r2;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r3;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r4;
        int $i2, $i3;
        java.nio.ByteBuffer $r5;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        fileName := @parameter1: java.lang.String;

        fileNum := @parameter2: long;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.lang.String fileName> = fileName;

        $b0 = fileNum cmp 0L;

        if $b0 < 0 goto label1;

        $l1 = fileNum;

        goto label2;

     label1:
        $r1 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.FileManager: java.lang.Long getNumFromName(java.lang.String)>(fileName);

        $l1 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

     label2:
        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long fileNum> = $l1;

        $r3 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State INIT>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r3;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart> = 0L;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long prevEntryStart> = 0L;

        $r4 = new berkeley.com.sleepycat.je.log.ChecksumValidator;

        specialinvoke $r4.<berkeley.com.sleepycat.je.log.ChecksumValidator: void <init>()>();

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator> = $r4;

        $i2 = staticinvoke <berkeley.com.sleepycat.je.log.FileHeader: int entrySize()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(22, $i2);

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i3);

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf> = $r5;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int logVersion> = -1;

        return;
    }

    public void verify(byte[], int, int) throws berkeley.com.sleepycat.je.util.LogVerificationException
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        byte[] buf;
        int off, len, endOffset, remaining, curOffset#5, $i0, $i1;
        int[] $r0;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r1;
        berkeley.com.sleepycat.je.util.LogVerificationException $r2;
        boolean $z0;
        java.lang.AssertionError $r3;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        endOffset = off + len;

        curOffset#5 = off;

     label01:
        if curOffset#5 >= endOffset goto label10;

        remaining = endOffset - curOffset#5;

        $r0 = <berkeley.com.sleepycat.je.utilint.LogVerifier$1: int[] $SwitchMap$berkeley$com$sleepycat$je$utilint$LogVerifier$State>;

        $r1 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state>;

        $i0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.utilint.LogVerifier$State: int ordinal()>();

        $i1 = $r0[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label02:
        specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: void processInit()>();

        goto label09;

     label03:
        curOffset#5 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int processFixedHeader(byte[],int,int)>(buf, curOffset#5, remaining);

        goto label09;

     label04:
        curOffset#5 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int processVariableHeader(byte[],int,int)>(buf, curOffset#5, remaining);

        goto label09;

     label05:
        curOffset#5 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int processFileHeaderItem(byte[],int,int)>(buf, curOffset#5, remaining);

        goto label09;

     label06:
        curOffset#5 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int processItem(byte[],int,int)>(buf, curOffset#5, remaining);

        goto label09;

     label07:
        $r2 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String)>("May not read after LogVerificationException is thrown");

        throw $r2;

     label08:
        $z0 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label09;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label09:
        goto label01;

     label10:
        return;
    }

    private void processInit()
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r0;
        java.nio.ByteBuffer $r1;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r3;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.log.ChecksumValidator: void reset()>();

        $r1 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header> = null;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int itemPosition> = 0;

        $r3 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State FIXED_HEADER>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r3;

        return;
    }

    private int processFixedHeader(byte[], int, int) throws berkeley.com.sleepycat.je.util.LogVerificationException
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        byte[] buf, $r16, $r36;
        int curOffset, remaining, processSize, $i0, $i1, $i2, $i3, $i4, $i15;
        byte maxSize, $b10, $b13, $b14;
        berkeley.com.sleepycat.je.log.ChecksumException e, $r12;
        boolean $z0, $z1, $z2, $z3;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r10, $r21, $r24, $r32, $r37, $r41;
        java.lang.AssertionError $r1, $r6;
        java.nio.ByteBuffer $r2, $r3, $r5, $r7, $r8, $r11, $r15, $r33, $r35, $r38, $r42;
        long $l5, $l6, $l7, $l8, $l9, $l11, $l12;
        java.lang.StringBuilder $r13, $r14, $r18, $r22, $r23, $r26, $r27, $r29;
        java.lang.String $r17, $r19, $r25, $r28, $r30;
        berkeley.com.sleepycat.je.util.LogVerificationException $r20, $r31;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r34;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r40, $r44, $r45;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        buf := @parameter0: byte[];

        curOffset := @parameter1: int;

        remaining := @parameter2: int;

        $z0 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        if $r0 == null goto label01;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label01:
        maxSize = 14;

        $r2 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $i1 = 14 - $i0;

        processSize = staticinvoke <java.lang.Math: int min(int,int)>(remaining, $i1);

        $r3 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(buf, curOffset, processSize);

        $z1 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r5 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i2 = virtualinvoke $r5.<java.nio.ByteBuffer: int position()>();

        if $i2 <= 14 goto label02;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label02:
        $r7 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i3 = virtualinvoke $r7.<java.nio.ByteBuffer: int position()>();

        if $i3 != 14 goto label11;

        $r8 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

     label03:
        $r10 = new berkeley.com.sleepycat.je.log.LogEntryHeader;

        $r11 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i4 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int logVersion>;

        $l5 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long fileNum>;

        $l6 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        $l7 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>($l5, $l6);

        specialinvoke $r10.<berkeley.com.sleepycat.je.log.LogEntryHeader: void <init>(java.nio.ByteBuffer,int,long)>($r11, $i4, $l7);

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header> = $r10;

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

        e = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid header bytes=");

        $r15 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $r16 = virtualinvoke $r15.<java.nio.ByteBuffer: byte[] array()>();

        $r17 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String,java.lang.Throwable)>($r19, e);

        throw $r20;

     label06:
        $r21 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $l8 = virtualinvoke $r21.<berkeley.com.sleepycat.je.log.LogEntryHeader: long getPrevOffset()>();

        $l9 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long prevEntryStart>;

        $b10 = $l8 cmp $l9;

        if $b10 == 0 goto label07;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Header prevOffset=0x");

        $r24 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $l11 = virtualinvoke $r24.<berkeley.com.sleepycat.je.log.LogEntryHeader: long getPrevOffset()>();

        $r25 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l11);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but prevEntryStart=0x");

        $l12 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long prevEntryStart>;

        $r28 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l12);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String)>($r30);

        throw $r31;

     label07:
        $r32 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $z2 = virtualinvoke $r32.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isInvisible()>();

        if $z2 == 0 goto label08;

        $r33 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogEntryHeader: void turnOffInvisible(java.nio.ByteBuffer,int)>($r33, 0);

     label08:
        $r34 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        $r35 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $r36 = virtualinvoke $r35.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r34.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(byte[],int,int)>($r36, 4, 10);

        $r37 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $z3 = virtualinvoke $r37.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isVariableLength()>();

        if $z3 == 0 goto label09;

        $r38 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r38.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r40 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State VARIABLE_HEADER>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r40;

        goto label11;

     label09:
        $r41 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $b13 = virtualinvoke $r41.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        $b14 = <berkeley.com.sleepycat.je.utilint.LogVerifier: byte FILE_HEADER_TYPE_NUM>;

        if $b13 != $b14 goto label10;

        $r42 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r42.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r44 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State FILE_HEADER_ITEM>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r44;

        goto label11;

     label10:
        $r45 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State ITEM>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r45;

     label11:
        $i15 = curOffset + processSize;

        return $i15;

        catch berkeley.com.sleepycat.je.log.ChecksumException from label03 to label04 with label05;
    }

    private int processVariableHeader(byte[], int, int)
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        byte[] buf, $r17;
        int curOffset, remaining, maxSize, processSize, $i0, $i1, $i2, $i3, $i6;
        boolean $z0, $z1, $z2, $z3;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r2, $r4, $r13, $r18;
        java.lang.AssertionError $r1, $r3, $r9;
        java.nio.ByteBuffer $r5, $r6, $r8, $r10, $r11, $r14, $r16, $r19;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r15;
        byte $b4, $b5;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r21, $r22;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        buf := @parameter0: byte[];

        curOffset := @parameter1: int;

        remaining := @parameter2: int;

        $z0 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        if $r0 != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $z1 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r2 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $z2 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isVariableLength()>();

        if $z2 != 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r4 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        maxSize = virtualinvoke $r4.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getVariablePortionSize()>();

        $r5 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i0 = virtualinvoke $r5.<java.nio.ByteBuffer: int position()>();

        $i1 = maxSize - $i0;

        processSize = staticinvoke <java.lang.Math: int min(int,int)>(remaining, $i1);

        $r6 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(buf, curOffset, processSize);

        $z3 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z3 != 0 goto label3;

        $r8 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i2 = virtualinvoke $r8.<java.nio.ByteBuffer: int position()>();

        if $i2 <= maxSize goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        $r10 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i3 = virtualinvoke $r10.<java.nio.ByteBuffer: int position()>();

        if $i3 != maxSize goto label5;

        $r11 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r13 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $r14 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r13.<berkeley.com.sleepycat.je.log.LogEntryHeader: void readVariablePortion(java.nio.ByteBuffer)>($r14);

        $r15 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        $r16 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $r17 = virtualinvoke $r16.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r15.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(byte[],int,int)>($r17, 0, maxSize);

        $r18 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $b4 = virtualinvoke $r18.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        $b5 = <berkeley.com.sleepycat.je.utilint.LogVerifier: byte FILE_HEADER_TYPE_NUM>;

        if $b4 != $b5 goto label4;

        $r19 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r21 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State FILE_HEADER_ITEM>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r21;

        goto label5;

     label4:
        $r22 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State ITEM>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r22;

     label5:
        $i6 = curOffset + processSize;

        return $i6;
    }

    private int processFileHeaderItem(byte[], int, int) throws berkeley.com.sleepycat.je.util.LogVerificationException
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        byte[] buf, $r11;
        int curOffset, remaining, maxSize, processSize, $i0, $i1, $i2, $i3, $i4, $i8, $i11, $i12, $i15;
        berkeley.com.sleepycat.je.log.ChecksumException e, $r14;
        berkeley.com.sleepycat.je.log.entry.LogEntry fileHeaderEntry;
        berkeley.com.sleepycat.je.log.FileHeader fileHeaderItem;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r13, $r20, $r24;
        java.lang.AssertionError $r1, $r2, $r7;
        java.nio.ByteBuffer $r3, $r4, $r6, $r8, $r10, $r16, $r21;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r9, $r12;
        long $l5, $l6, $l7, $l9, $l10, $l13, $l14;
        berkeley.com.sleepycat.je.util.LogVerificationException $r15;
        berkeley.com.sleepycat.je.log.LogEntryType $r18;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r19;
        java.lang.Object $r22;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r25;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        buf := @parameter0: byte[];

        curOffset := @parameter1: int;

        remaining := @parameter2: int;

        $z0 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        if $r0 != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $z1 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int logVersion>;

        if $i0 == -1 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        maxSize = staticinvoke <berkeley.com.sleepycat.je.log.FileHeader: int entrySize()>();

        $r3 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i2 = maxSize - $i1;

        processSize = staticinvoke <java.lang.Math: int min(int,int)>(remaining, $i2);

        $r4 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(buf, curOffset, processSize);

        $z2 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r6 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i3 = virtualinvoke $r6.<java.nio.ByteBuffer: int position()>();

        if $i3 <= maxSize goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        $r8 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $i4 = virtualinvoke $r8.<java.nio.ByteBuffer: int position()>();

        if $i4 != maxSize goto label8;

        $r9 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        $r10 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        $r11 = virtualinvoke $r10.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r9.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(byte[],int,int)>($r11, 0, maxSize);

     label4:
        $r12 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        $r13 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $l5 = virtualinvoke $r13.<berkeley.com.sleepycat.je.log.LogEntryHeader: long getChecksum()>();

        $l6 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long fileNum>;

        $l7 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        virtualinvoke $r12.<berkeley.com.sleepycat.je.log.ChecksumValidator: void validate(long,long,long)>($l5, $l6, $l7);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        e = $r14;

        $r15 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.Throwable)>(e);

        throw $r15;

     label7:
        $r16 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r18 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        fileHeaderEntry = virtualinvoke $r18.<berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.entry.LogEntry getNewLogEntry()>();

        $r19 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r20 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $r21 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.nio.ByteBuffer headerBuf>;

        interfaceinvoke fileHeaderEntry.<berkeley.com.sleepycat.je.log.entry.LogEntry: void readEntry(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.log.LogEntryHeader,java.nio.ByteBuffer)>($r19, $r20, $r21);

        $r22 = interfaceinvoke fileHeaderEntry.<berkeley.com.sleepycat.je.log.entry.LogEntry: java.lang.Object getMainItem()>();

        fileHeaderItem = (berkeley.com.sleepycat.je.log.FileHeader) $r22;

        $i8 = virtualinvoke fileHeaderItem.<berkeley.com.sleepycat.je.log.FileHeader: int getLogVersion()>();

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int logVersion> = $i8;

        $l9 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long prevEntryStart> = $l9;

        $l10 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        $r24 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $i11 = virtualinvoke $r24.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $i12 = $i11 + maxSize;

        $l13 = (long) $i12;

        $l14 = $l10 + $l13;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart> = $l14;

        $r25 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State INIT>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r25;

     label8:
        $i15 = curOffset + processSize;

        return $i15;

        catch berkeley.com.sleepycat.je.log.ChecksumException from label4 to label5 with label6;
    }

    private int processItem(byte[], int, int) throws berkeley.com.sleepycat.je.util.LogVerificationException
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        byte[] buf;
        int curOffset, remaining, maxSize, processSize, $i0, $i1, $i2, $i3, $i4, $i5, $i11, $i12, $i15;
        berkeley.com.sleepycat.je.log.ChecksumException e, $r8;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r2, $r7, $r11;
        java.lang.AssertionError $r1, $r5;
        berkeley.com.sleepycat.je.log.ChecksumValidator $r3, $r6;
        long $l6, $l7, $l8, $l9, $l10, $l13, $l14;
        berkeley.com.sleepycat.je.util.LogVerificationException $r9;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r12;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        buf := @parameter0: byte[];

        curOffset := @parameter1: int;

        remaining := @parameter2: int;

        $z0 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        if $r0 != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        maxSize = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int itemPosition>;

        $i1 = maxSize - $i0;

        processSize = staticinvoke <java.lang.Math: int min(int,int)>(remaining, $i1);

        $r3 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        virtualinvoke $r3.<berkeley.com.sleepycat.je.log.ChecksumValidator: void update(byte[],int,int)>(buf, curOffset, processSize);

        $i2 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int itemPosition>;

        $i3 = $i2 + processSize;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int itemPosition> = $i3;

        $z1 = <berkeley.com.sleepycat.je.utilint.LogVerifier: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i4 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int itemPosition>;

        if $i4 <= maxSize goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $i5 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: int itemPosition>;

        if $i5 != maxSize goto label7;

     label3:
        $r6 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.ChecksumValidator validator>;

        $r7 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $l6 = virtualinvoke $r7.<berkeley.com.sleepycat.je.log.LogEntryHeader: long getChecksum()>();

        $l7 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long fileNum>;

        $l8 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        virtualinvoke $r6.<berkeley.com.sleepycat.je.log.ChecksumValidator: void validate(long,long,long)>($l6, $l7, $l8);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        e = $r8;

        $r9 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.Throwable)>(e);

        throw $r9;

     label6:
        $l9 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long prevEntryStart> = $l9;

        $l10 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        $r11 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $i11 = virtualinvoke $r11.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $i12 = $i11 + maxSize;

        $l13 = (long) $i12;

        $l14 = $l10 + $l13;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart> = $l14;

        $r12 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State INIT>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r12;

     label7:
        $i15 = curOffset + processSize;

        return $i15;

        catch berkeley.com.sleepycat.je.log.ChecksumException from label3 to label4 with label5;
    }

    private berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String)
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        java.lang.String reason;
        berkeley.com.sleepycat.je.util.LogVerificationException $r0;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        reason := @parameter0: java.lang.String;

        $r0 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String,java.lang.Throwable)>(reason, null);

        return $r0;
    }

    private berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String, java.lang.Throwable)
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        java.lang.String reason, logEntrySize#13, $r7, $r10, $r13, $r22;
        java.lang.Throwable cause;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r0, $r18;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r1, $r2, $r3;
        int $i0, $i1, $i2;
        berkeley.com.sleepycat.je.util.LogVerificationException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r19, $r20, $r21;
        long $l3, $l4;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        reason := @parameter0: java.lang.String;

        cause := @parameter1: java.lang.Throwable;

        $r0 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State INVALID>;

        this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state> = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $i0 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $r3 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.log.LogEntryHeader header>;

        $i1 = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i2 = $i0 + $i1;

        logEntrySize#13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        goto label2;

     label1:
        logEntrySize#13 = "unknown";

     label2:
        $r4 = new berkeley.com.sleepycat.je.util.LogVerificationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Log is invalid, fileName: ");

        $r7 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: java.lang.String fileName>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileNumber: 0x");

        $l3 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long fileNum>;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" logEntryOffset: 0x");

        $l4 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long entryStart>;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" logEntrySize: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(logEntrySize#13);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" verifyState: ");

        $r18 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reason);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<berkeley.com.sleepycat.je.util.LogVerificationException: void <init>(java.lang.String,java.lang.Throwable)>($r22, cause);

        return $r4;
    }

    private berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.Throwable)
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        java.lang.Throwable cause;
        java.lang.String $r0;
        berkeley.com.sleepycat.je.util.LogVerificationException $r1;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        cause := @parameter0: java.lang.Throwable;

        $r0 = virtualinvoke cause.<java.lang.Throwable: java.lang.String toString()>();

        $r1 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String,java.lang.Throwable)>($r0, cause);

        return $r1;
    }

    public void verifyAtEof() throws berkeley.com.sleepycat.je.util.LogVerificationException
    {
        berkeley.com.sleepycat.je.utilint.LogVerifier this;
        berkeley.com.sleepycat.je.utilint.LogVerifier$State $r0, $r1;
        long $l0, $l1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2;
        berkeley.com.sleepycat.je.log.FileManager $r3;
        java.lang.Long $r4;
        byte $b2;
        berkeley.com.sleepycat.je.util.LogVerificationException $r5;

        this := @this: berkeley.com.sleepycat.je.utilint.LogVerifier;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.utilint.LogVerifier$State state>;

        $r1 = <berkeley.com.sleepycat.je.utilint.LogVerifier$State: berkeley.com.sleepycat.je.utilint.LogVerifier$State INIT>;

        if $r0 != $r1 goto label1;

        return;

     label1:
        $l0 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: long fileNum>;

        $r2 = this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        $r4 = virtualinvoke $r3.<berkeley.com.sleepycat.je.log.FileManager: java.lang.Long getLastFileNum()>();

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        return;

     label2:
        $r5 = specialinvoke this.<berkeley.com.sleepycat.je.utilint.LogVerifier: berkeley.com.sleepycat.je.util.LogVerificationException newVerifyException(java.lang.String)>("Entry is incomplete");

        throw $r5;
    }


