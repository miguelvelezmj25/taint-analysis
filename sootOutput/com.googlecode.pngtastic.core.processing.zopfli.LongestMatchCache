    void <init>(int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int maxBlockSize, $i0, $i1;
        char[] $r0, $r1, $r2;
        byte[] $r3;

        this := @this: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        maxBlockSize := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = newarray (char)[maxBlockSize];

        this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length> = $r0;

        $r1 = newarray (char)[maxBlockSize];

        this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist> = $r1;

        $i0 = 8 * maxBlockSize;

        $r2 = newarray (char)[$i0];

        this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos> = $r2;

        $i1 = 8 * maxBlockSize;

        $r3 = newarray (byte)[$i1];

        this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen> = $r3;

        return;
    }

    void init(int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int blockSize, n, i#1, j#2, l#3, i#4, j#5, l#6;
        char[] subLenPos, length, charZeroes, charOnes, $r0;
        byte[] subLenLen, byteZeroes;

        this := @this: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        blockSize := @parameter0: int;

        $r0 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Cookie: void fill0(char[],int)>($r0, blockSize);

        n = blockSize << 3;

        subLenPos = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        subLenLen = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        length = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length>;

        charZeroes = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] charZeroes>;

        byteZeroes = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: byte[] byteZeroes>;

        charOnes = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] charOnes>;

        i#1 = 0;

     label1:
        if i#1 >= n goto label3;

        j#2 = i#1 + 65536;

        if j#2 <= n goto label2;

        j#2 = n;

     label2:
        l#3 = j#2 - i#1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(byteZeroes, 0, subLenLen, i#1, l#3);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(charZeroes, 0, subLenPos, i#1, l#3);

        i#1 = j#2;

        goto label1;

     label3:
        i#4 = 0;

     label4:
        if i#4 >= blockSize goto label6;

        j#5 = i#4 + 65536;

        if j#5 <= blockSize goto label5;

        j#5 = blockSize;

     label5:
        l#6 = j#5 - i#4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(charOnes, 0, length, i#4, l#6);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(charZeroes, 0, subLenPos, i#4, l#6);

        i#4 = j#5;

        goto label4;

     label6:
        return;
    }

    int maxCachedSubLen(int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        char[] $r0;
        char $c0;
        int $i1, $i2, $i5, pos#1, pos#2;
        byte[] $r1;
        byte $b3;
        short $s4;

        this := @this: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        pos#1 := @parameter0: int;

        pos#2 = pos#1 * 8;

        $r0 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        $c0 = $r0[pos#2];

        if $c0 != 0 goto label1;

        return 0;

     label1:
        $r1 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        $i1 = pos#2 + 8;

        $i2 = $i1 - 1;

        $b3 = $r1[$i2];

        $s4 = $b3 & 255;

        $i5 = $s4 + 3;

        return $i5;
    }

    void cacheToSubLen(int, int, char[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int pos, len, maxLength, last, cLen, prevLength#1, j#2, i#3;
        char[] output, $r1;
        char dist;
        byte[] $r0;
        byte $b0;
        short $s1;

        this := @this: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        pos := @parameter0: int;

        len := @parameter1: int;

        output := @parameter2: char[];

        if len >= 3 goto label1;

        return;

     label1:
        maxLength = virtualinvoke this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(pos);

        prevLength#1 = 0;

        j#2 = 8 * pos;

        last = j#2 + 8;

     label2:
        if j#2 >= last goto label6;

        $r0 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        $b0 = $r0[j#2];

        $s1 = $b0 & 255;

        cLen = $s1 + 3;

        $r1 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        dist = $r1[j#2];

        i#3 = prevLength#1;

     label3:
        if i#3 > cLen goto label4;

        output[i#3] = dist;

        i#3 = i#3 + 1;

        goto label3;

     label4:
        if cLen != maxLength goto label5;

        goto label6;

     label5:
        prevLength#1 = cLen + 1;

        j#2 = j#2 + 1;

        goto label2;

     label6:
        return;
    }

    void subLenToCache(char[], int, int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        char[] input, $r1;
        int pos, len, last, $i0, $i1, $i4, $i6, bestLength#1, j#2, i#3;
        byte $b2, $b5;
        byte[] $r0, $r2;
        char $c3, $c7, $c8;

        this := @this: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        input := @parameter0: char[];

        pos := @parameter1: int;

        len := @parameter2: int;

        if len >= 3 goto label1;

        return;

     label1:
        bestLength#1 = 0;

        j#2 = pos * 8;

        $i0 = j#2 + 8;

        last = $i0 - 1;

        i#3 = 3;

     label2:
        if i#3 > len goto label5;

        if i#3 == len goto label3;

        $c8 = input[i#3];

        $i6 = i#3 + 1;

        $c7 = input[$i6];

        if $c8 == $c7 goto label4;

     label3:
        $r1 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        $c3 = input[i#3];

        $r1[j#2] = $c3;

        $r2 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        $i4 = i#3 - 3;

        $b5 = (byte) $i4;

        $r2[j#2] = $b5;

        bestLength#1 = i#3;

        j#2 = j#2 + 1;

        if j#2 <= last goto label4;

        goto label5;

     label4:
        i#3 = i#3 + 1;

        goto label2;

     label5:
        if j#2 > last goto label6;

        $r0 = this.<com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        $i1 = bestLength#1 - 3;

        $b2 = (byte) $i1;

        $r0[last] = $b2;

     label6:
        return;
    }


