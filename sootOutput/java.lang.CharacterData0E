    static void <clinit>()
    {
        char[] l0, $r3, $r5, $r8;
        int l3, $i0, l1#23, l2#25, l1#30, $i2, $i4;
        java.lang.Class $r0;
        boolean $z0, $z1, $z2;
        java.lang.CharacterData0E $r1;
        java.lang.String $r2, $r4, $r7, $r9;
        int[] $r6, $r11;
        java.lang.AssertionError $r10;
        char $c1, $c3;

        $r0 = class "java/lang/CharacterData0E";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.lang.CharacterData0E: boolean $assertionsDisabled> = $z1;

        $r1 = new java.lang.CharacterData0E;

        specialinvoke $r1.<java.lang.CharacterData0E: void <init>()>();

        <java.lang.CharacterData0E: java.lang.CharacterData instance> = $r1;

        $r2 = "\u0000\u0010\u0010\u

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <java.lang.CharacterData0E: char[] X> = $r3;

        $r4 = "\u0000\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0004\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0006\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        <java.lang.CharacterData0E: char[] Y> = $r5;

        $r6 = newarray (int)[8];

        <java.lang.CharacterData0E: int[] A> = $r6;

        $r7 = "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000";

        $r8 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();

        <java.lang.CharacterData0E: char[] B> = $r8;

        $r9 = "\u7800\u0000\u4800\u1010\u7800\u0000\u7800\u0000\u4800\u1010\u4800\u1010\u4000\u3006\u4000\u3006";

        l0 = virtualinvoke $r9.<java.lang.String: char[] toCharArray()>();

        $z2 = <java.lang.CharacterData0E: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label3;

        $i0 = lengthof l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 16 goto label3;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        l1#23 = 0;

        l2#25 = 0;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1#23);

        if l1#23 >= 16 goto label5;

        l1#30 = l1#23 + 1;

        $c1 = l0[l1#23];

        l3 = $c1 << 16;

        $r11 = <java.lang.CharacterData0E: int[] A>;

        $i2 = l2#25;

        l2#25 = l2#25 + 1;

        l1#23 = l1#30 + 1;

        $c3 = l0[l1#30];

        $i4 = l3 | $c3;

        $r11[$i2] = $i4;

        goto label4;

     label5:
        return;
    }

    private void <init>()
    {
        java.lang.CharacterData0E l0;

        l0 := @this: java.lang.CharacterData0E;

        specialinvoke l0.<java.lang.CharacterData: void <init>()>();

        return;
    }

    int toUpperCase(int)
    {
        java.lang.CharacterData0E l0;
        int l1, l3, l4, l2#2, $i0, $i1;

        l0 := @this: java.lang.CharacterData0E;

        l1 := @parameter0: int;

        l2#2 = l1;

        l3 = virtualinvoke l0.<java.lang.CharacterData0E: int getProperties(int)>(l1);

        $i0 = l3 & 65536;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label1;

        $i1 = l3 << 5;

        l4 = $i1 >> 23;

        l2#2 = l1 - l4;

     label1:
        return l2#2;
    }

    int getProperties(int)
    {
        java.lang.CharacterData0E l0;
        int l1, l3;
        char l2, $c0, $c1, $c2, $c3, $c4, $c5, $c6, $c7;
        int[] $r0;
        char[] $r1, $r2;

        l0 := @this: java.lang.CharacterData0E;

        l1 := @parameter0: int;

        l2 = (char) l1;

        $r0 = <java.lang.CharacterData0E: int[] A>;

        $r1 = <java.lang.CharacterData0E: char[] Y>;

        $r2 = <java.lang.CharacterData0E: char[] X>;

        $c0 = l2 >> 5;

        $c1 = $r2[$c0];

        $c2 = l2 >> 1;

        $c3 = $c2 & 15;

        $c4 = $c1 | $c3;

        $c5 = $r1[$c4];

        $c6 = l2 & 1;

        $c7 = $c5 | $c6;

        l3 = $r0[$c7];

        return l3;
    }

    int toLowerCase(int)
    {
        java.lang.CharacterData0E l0;
        int l1, l3, l4, l2#2, $i0, $i1;

        l0 := @this: java.lang.CharacterData0E;

        l1 := @parameter0: int;

        l2#2 = l1;

        l3 = virtualinvoke l0.<java.lang.CharacterData0E: int getProperties(int)>(l1);

        $i0 = l3 & 131072;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label1;

        $i1 = l3 << 5;

        l4 = $i1 >> 23;

        l2#2 = l1 + l4;

     label1:
        return l2#2;
    }


