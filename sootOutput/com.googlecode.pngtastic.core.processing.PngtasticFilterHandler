    public void <init>(com.googlecode.pngtastic.core.Logger)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        com.googlecode.pngtastic.core.Logger log;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        log := @parameter0: com.googlecode.pngtastic.core.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: com.googlecode.pngtastic.core.Logger log> = log;

        return;
    }

    public void deFilter(byte[], byte[], int) throws com.googlecode.pngtastic.core.PngException
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int sampleBitCount, result, $i2, $i3, $i4, $i5, $i6, previous#27, x#29, a#31, $i7, $i8, $i11, x#47, $i13, $i16, $i18, $i19, $i20, previous#69, x#71, a#73, $i21, $i22, $i29, $i30, $i31, $i33, $i34, $i35, previous#105, x#107, xp#109, $i36, $i38;
        com.googlecode.pngtastic.core.PngFilterType filterType, previousFilterType;
        byte $b0, $b1, $b9, $b10, $b12, $b14, $b15, $b17, $b23, $b25, $b27, $b32, $b37, $b39, $b40, $b41;
        int[] $r0;
        short $s26, $s28;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        sampleBitCount := @parameter2: int;

        $b0 = line[0];

        filterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b0);

        line[0] = 0;

        $b1 = previousLine[0];

        previousFilterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b1);

        previousLine[0] = 0;

        $r0 = <com.googlecode.pngtastic.core.processing.PngtasticFilterHandler$1: int[] $SwitchMap$com$googlecode$pngtastic$core$PngFilterType>;

        $i2 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: int ordinal()>();

        $i3 = $r0[$i2];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        tableswitch($i3)
        {
            case 2: goto label01;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label14;
            default: goto label17;
        };

     label01:
        $i4 = sampleBitCount / 8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        $i6 = $i5 - 1;

        previous#27 = neg $i6;

        x#29 = 1;

        a#31 = previous#27;

     label02:
        $i7 = lengthof line;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#29);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        if x#29 >= $i7 goto label05;

        $i8 = x#29;

        $b9 = line[x#29];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a#31);

        if a#31 >= 0 goto label03;

        $b10 = 0;

        goto label04;

     label03:
        $b10 = line[a#31];

     label04:
        $i11 = $b9 + $b10;

        $b12 = (byte) $i11;

        line[$i8] = $b12;

        x#29 = x#29 + 1;

        a#31 = a#31 + 1;

        goto label02;

     label05:
        goto label17;

     label06:
        x#47 = 1;

     label07:
        $i13 = lengthof line;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#47);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        if x#47 >= $i13 goto label08;

        $b14 = line[x#47];

        $b15 = previousLine[x#47];

        $i16 = $b14 + $b15;

        $b17 = (byte) $i16;

        line[x#47] = $b17;

        x#47 = x#47 + 1;

        goto label07;

     label08:
        goto label17;

     label09:
        $i18 = sampleBitCount / 8;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i18);

        $i20 = $i19 - 1;

        previous#69 = neg $i20;

        x#71 = 1;

        a#73 = previous#69;

     label10:
        $i21 = lengthof line;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i21);

        if x#71 >= $i21 goto label13;

        $i22 = x#71;

        $b23 = line[x#71];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a#73);

        if a#73 >= 0 goto label11;

        $b25 = 0;

        goto label12;

     label11:
        $b25 = line[a#73];

     label12:
        $s26 = 255 & $b25;

        $b27 = previousLine[x#71];

        $s28 = 255 & $b27;

        $i29 = $s26 + $s28;

        $i30 = $i29 / 2;

        $i31 = $b23 + $i30;

        $b32 = (byte) $i31;

        line[$i22] = $b32;

        x#71 = x#71 + 1;

        a#73 = a#73 + 1;

        goto label10;

     label13:
        goto label17;

     label14:
        $i33 = sampleBitCount / 8;

        $i34 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i33);

        $i35 = $i34 - 1;

        previous#105 = neg $i35;

        x#107 = 1;

        xp#109 = previous#105;

     label15:
        $i36 = lengthof line;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#107);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i36);

        if x#107 >= $i36 goto label16;

        result = specialinvoke this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: int paethPredictor(byte[],byte[],int,int)>(line, previousLine, x#107, xp#109);

        $b37 = line[x#107];

        $i38 = $b37 + result;

        $b39 = (byte) $i38;

        line[x#107] = $b39;

        x#107 = x#107 + 1;

        xp#109 = xp#109 + 1;

        goto label15;

     label16:
        goto label17;

     label17:
        $b40 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        line[0] = $b40;

        $b41 = virtualinvoke previousFilterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        previousLine[0] = $b41;

        return;
    }

    private int paethPredictor(byte[], byte[], int, int)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int x, xp, p, pa, pb, pc, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        short a, b, c, $s12;
        byte $b1, $b2, $b4;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        x := @parameter2: int;

        xp := @parameter3: int;

        if xp >= 0 goto label01;

        $b1 = 0;

        goto label02;

     label01:
        $b1 = line[xp];

     label02:
        a = 255 & $b1;

        $b2 = previousLine[x];

        b = 255 & $b2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(xp);

        if xp >= 0 goto label03;

        $b4 = 0;

        goto label04;

     label03:
        $b4 = previousLine[xp];

     label04:
        c = 255 & $b4;

        $i5 = a + b;

        p = $i5 - c;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a);

        if p < a goto label05;

        $i6 = p - a;

        goto label06;

     label05:
        $i7 = p - a;

        $i6 = neg $i7;

     label06:
        pa = $i6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b);

        if p < b goto label07;

        $i8 = p - b;

        goto label08;

     label07:
        $i9 = p - b;

        $i8 = neg $i9;

     label08:
        pb = $i8;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(p);

        if p < c goto label09;

        $i10 = p - c;

        goto label10;

     label09:
        $i11 = p - c;

        $i10 = neg $i11;

     label10:
        pc = $i10;

        if pa > pb goto label11;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pa);

        if pa > pc goto label11;

        return a;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pc);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pb);

        if pb > pc goto label12;

        $s12 = b;

        goto label13;

     label12:
        $s12 = c;

     label13:
        return $s12;
    }


