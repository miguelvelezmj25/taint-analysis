    public void <init>(java.util.List, java.lang.String)
    {
        weka.core.NominalAttributeInfo this;
        java.util.List attributeValues;
        java.lang.String attributeName, $r4, $r17;
        java.lang.Exception ex, $r7;
        java.util.ArrayList $r0, $r2, $r18;
        java.util.Hashtable $r1, $r3, $r9, $r19;
        int $i0, $i1, i#20, $i2, $i3;
        java.lang.Object store#27, $r6;
        weka.core.SerializedObject $r5;
        java.io.PrintStream $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.Integer $r20;

        this := @this: weka.core.NominalAttributeInfo;

        attributeValues := @parameter0: java.util.List;

        attributeName := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(attributeValues);

        if attributeValues != null goto label1;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        this.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable> = $r1;

        goto label8;

     label1:
        $r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke attributeValues.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        this.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values> = $r2;

        $r3 = new java.util.Hashtable;

        $i1 = interfaceinvoke attributeValues.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.Hashtable: void <init>(int)>($i1);

        this.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable> = $r3;

        i#20 = 0;

     label2:
        $i2 = interfaceinvoke attributeValues.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if i#20 >= $i2 goto label8;

        store#27 = interfaceinvoke attributeValues.<java.util.List: java.lang.Object get(int)>(i#20);

        $r4 = (java.lang.String) store#27;

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 200 goto label6;

     label3:
        $r5 = new weka.core.SerializedObject;

        $r6 = interfaceinvoke attributeValues.<java.util.List: java.lang.Object get(int)>(i#20);

        specialinvoke $r5.<weka.core.SerializedObject: void <init>(java.lang.Object,boolean)>($r6, 1);

        store#27 = $r5;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        ex = $r7;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Couldn\'t compress nominal attribute value - storing uncompressed.");

     label6:
        $r9 = this.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable>;

        $z0 = virtualinvoke $r9.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(store#27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label7;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A nominal attribute (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attributeName);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") cannot have duplicate labels (");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(store#27);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label7:
        $r18 = this.<weka.core.NominalAttributeInfo: java.util.ArrayList m_Values>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(store#27);

        $r19 = this.<weka.core.NominalAttributeInfo: java.util.Hashtable m_Hashtable>;

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(i#20);

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(store#27, $r20);

        i#20 = i#20 + 1;

        goto label2;

     label8:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }


