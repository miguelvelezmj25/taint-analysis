    static void <clinit>()
    {
        at.favre.tools.dconvert.arg.EScalingAlgorithm$Type $r0, $r1, $r3, $r4;
        at.favre.tools.dconvert.arg.EScalingAlgorithm$Type[] $r2;

        $r0 = new at.favre.tools.dconvert.arg.EScalingAlgorithm$Type;

        specialinvoke $r0.<at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: void <init>(java.lang.String,int)>("UPSCALING", 0);

        <at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: at.favre.tools.dconvert.arg.EScalingAlgorithm$Type UPSCALING> = $r0;

        $r1 = new at.favre.tools.dconvert.arg.EScalingAlgorithm$Type;

        specialinvoke $r1.<at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: void <init>(java.lang.String,int)>("DOWNSCALING", 1);

        <at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: at.favre.tools.dconvert.arg.EScalingAlgorithm$Type DOWNSCALING> = $r1;

        $r2 = newarray (at.favre.tools.dconvert.arg.EScalingAlgorithm$Type)[2];

        $r3 = <at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: at.favre.tools.dconvert.arg.EScalingAlgorithm$Type UPSCALING>;

        $r2[0] = $r3;

        $r4 = <at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: at.favre.tools.dconvert.arg.EScalingAlgorithm$Type DOWNSCALING>;

        $r2[1] = $r4;

        <at.favre.tools.dconvert.arg.EScalingAlgorithm$Type: at.favre.tools.dconvert.arg.EScalingAlgorithm$Type[] $VALUES> = $r2;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        at.favre.tools.dconvert.arg.EScalingAlgorithm$Type this;
        java.lang.String l1;
        int l2;

        this := @this: at.favre.tools.dconvert.arg.EScalingAlgorithm$Type;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }


