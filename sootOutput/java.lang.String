    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.lang.String$CaseInsensitiveComparator $r1;

        $r0 = newarray (java.io.ObjectStreamField)[0];

        <java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        $r1 = new java.lang.String$CaseInsensitiveComparator;

        specialinvoke $r1.<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>(null);

        <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $r1;

        return;
    }

    public static java.lang.String valueOf(char)
    {
        char l0;
        char[] l1, $r0;
        java.lang.String $r1;

        l0 := @parameter0: char;

        $r0 = newarray (char)[1];

        $r0[0] = l0;

        l1 = $r0;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],boolean)>(l1, 1);

        return $r1;
    }

    void <init>(char[], boolean)
    {
        java.lang.String l0;
        char[] l1;
        boolean l2;

        l0 := @this: java.lang.String;

        l1 := @parameter0: char[];

        l2 := @parameter1: boolean;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.String: char[] value> = l1;

        return;
    }

    public static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String l0, $r2;
        java.lang.Object[] l1;
        java.util.Formatter $r0, $r1;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.lang.Object[];

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(l0, l1);

        $r2 = virtualinvoke $r1.<java.util.Formatter: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.String l0;

        l0 := @this: java.lang.String;

        return l0;
    }

    public int length()
    {
        java.lang.String l0;
        char[] $r0;
        int $i0;

        l0 := @this: java.lang.String;

        $r0 = l0.<java.lang.String: char[] value>;

        $i0 = lengthof $r0;

        return $i0;
    }


