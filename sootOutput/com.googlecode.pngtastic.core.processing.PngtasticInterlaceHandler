    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3;

        $r0 = newarray (int)[7];

        $r0[0] = 8;

        $r0[1] = 8;

        $r0[2] = 4;

        $r0[3] = 4;

        $r0[4] = 2;

        $r0[5] = 2;

        $r0[6] = 1;

        <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = 0;

        $r1[1] = 4;

        $r1[2] = 0;

        $r1[3] = 2;

        $r1[4] = 0;

        $r1[5] = 1;

        $r1[6] = 0;

        <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnOffset> = $r1;

        $r2 = newarray (int)[7];

        $r2[0] = 8;

        $r2[1] = 8;

        $r2[2] = 8;

        $r2[3] = 4;

        $r2[4] = 4;

        $r2[5] = 2;

        $r2[6] = 2;

        <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency> = $r2;

        $r3 = newarray (int)[7];

        $r3[0] = 0;

        $r3[1] = 0;

        $r3[2] = 4;

        $r3[3] = 0;

        $r3[4] = 2;

        $r3[5] = 0;

        $r3[6] = 1;

        <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowOffset> = $r3;

        return;
    }

    public void <init>(com.googlecode.pngtastic.core.Logger, com.googlecode.pngtastic.core.processing.PngFilterHandler)
    {
        com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler this;
        com.googlecode.pngtastic.core.Logger log;
        com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler;

        log := @parameter0: com.googlecode.pngtastic.core.Logger;

        pngFilterHandler := @parameter1: com.googlecode.pngtastic.core.processing.PngFilterHandler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: com.googlecode.pngtastic.core.Logger log> = log;

        this.<com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler> = pngFilterHandler;

        return;
    }

    public java.util.List deInterlace(int, int, int, com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream)
    {
        com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler this;
        int width, height, sampleBitCount, sampleSize, subImageRows, subImageColumns, rowLength, cf, co, rf, ro, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, subImageOffset#1, pass#2, offset#4, i#5, e#7, sample#8, b#13, pass#14;
        com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.util.ArrayList results, $r2;
        byte[][] rows;
        byte[] row, $r4, $r16, $r19, previousRow#3;
        java.lang.Object[] $r0, $r21;
        com.googlecode.pngtastic.core.Logger $r1, $r22;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Double $r3, $r11;
        int[] $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        com.googlecode.pngtastic.core.processing.PngFilterHandler $r17;
        java.lang.Object $r18;
        byte $b32;
        com.googlecode.pngtastic.core.PngException $r20, e#6;
        java.lang.String $r23;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler;

        width := @parameter0: int;

        height := @parameter1: int;

        sampleBitCount := @parameter2: int;

        inflatedImageData := @parameter3: com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        $r1 = this.<com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: com.googlecode.pngtastic.core.Logger log>;

        $r0 = newarray (java.lang.Object)[0];

        virtualinvoke $r1.<com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Deinterlacing", $r0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        results = $r2;

        $i0 = sampleBitCount / 8;

        sampleSize = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        $i1 = width * sampleBitCount;

        $d0 = (double) $i1;

        $d1 = $d0 / 8.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $i2 = virtualinvoke $r3.<java.lang.Double: int intValue()>();

        $i3 = $i2 + 1;

        rows = newmultiarray (byte)[height][$i3];

        subImageOffset#1 = 0;

        pass#2 = 0;

     label01:
        if pass#2 >= 7 goto label12;

        $r5 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowOffset>;

        $i5 = $r5[pass#2];

        $i8 = height - $i5;

        $r6 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency>;

        $i6 = $r6[pass#2];

        $i7 = $i6 - 1;

        $i10 = $i8 + $i7;

        $r7 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency>;

        $i9 = $r7[pass#2];

        subImageRows = $i10 / $i9;

        $r8 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnOffset>;

        $i11 = $r8[pass#2];

        $i14 = width - $i11;

        $r9 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency>;

        $i12 = $r9[pass#2];

        $i13 = $i12 - 1;

        $i16 = $i14 + $i13;

        $r10 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency>;

        $i15 = $r10[pass#2];

        subImageColumns = $i16 / $i15;

        $i17 = subImageColumns * sampleBitCount;

        $d3 = (double) $i17;

        $d4 = $d3 / 8.0;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $i18 = virtualinvoke $r11.<java.lang.Double: int intValue()>();

        rowLength = $i18 + 1;

        $r12 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency>;

        $i19 = $r12[pass#2];

        cf = $i19 * sampleSize;

        $r13 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnOffset>;

        $i20 = $r13[pass#2];

        co = $i20 * sampleSize;

        $r14 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency>;

        rf = $r14[pass#2];

        $r15 = <com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowOffset>;

        ro = $r15[pass#2];

        previousRow#3 = newarray (byte)[rowLength];

        offset#4 = 0;

        i#5 = 0;

     label02:
        if i#5 >= subImageRows goto label11;

        $i21 = i#5 * rowLength;

        offset#4 = subImageOffset#1 + $i21;

        row = newarray (byte)[rowLength];

        $r16 = virtualinvoke inflatedImageData.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: byte[] get()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, offset#4, row, 0, rowLength);

     label03:
        $r17 = this.<com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler>;

        interfaceinvoke $r17.<com.googlecode.pngtastic.core.processing.PngFilterHandler: void deFilter(byte[],byte[],int)>(row, previousRow#3, sampleBitCount);

     label04:
        goto label06;

     label05:
        $r20 := @caughtexception;

        e#6 = $r20;

        $r22 = this.<com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: com.googlecode.pngtastic.core.Logger log>;

        $r21 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke e#6.<com.googlecode.pngtastic.core.PngException: java.lang.String getMessage()>();

        $r21[0] = $r23;

        virtualinvoke $r22.<com.googlecode.pngtastic.core.Logger: void error(java.lang.String,java.lang.Object[])>("Error: %s", $r21);

     label06:
        $i22 = lengthof row;

        $i23 = $i22 - 1;

        e#7 = $i23 / sampleSize;

        sample#8 = 0;

     label07:
        if sample#8 >= e#7 goto label10;

        b#13 = 0;

     label08:
        if b#13 >= sampleSize goto label09;

        $i24 = i#5 * rf;

        $i25 = $i24 + ro;

        $r19 = rows[$i25];

        $i26 = sample#8 * cf;

        $i27 = $i26 + co;

        $i28 = $i27 + b#13;

        $i33 = $i28 + 1;

        $i29 = sample#8 * sampleSize;

        $i30 = $i29 + b#13;

        $i31 = $i30 + 1;

        $b32 = row[$i31];

        $r19[$i33] = $b32;

        b#13 = b#13 + 1;

        goto label08;

     label09:
        sample#8 = sample#8 + 1;

        goto label07;

     label10:
        $r18 = virtualinvoke row.<java.lang.Object: java.lang.Object clone()>();

        previousRow#3 = (byte[]) $r18;

        i#5 = i#5 + 1;

        goto label02;

     label11:
        subImageOffset#1 = offset#4 + rowLength;

        pass#2 = pass#2 + 1;

        goto label01;

     label12:
        pass#14 = 0;

     label13:
        $i4 = lengthof rows;

        if pass#14 >= $i4 goto label14;

        $r4 = rows[pass#14];

        interfaceinvoke results.<java.util.List: boolean add(java.lang.Object)>($r4);

        pass#14 = pass#14 + 1;

        goto label13;

     label14:
        return results;

        catch com.googlecode.pngtastic.core.PngException from label03 to label04 with label05;
    }


