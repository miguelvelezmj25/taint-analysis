digraph readLong {
"buf := @parameter0: byte[] {518631720}" -> "off#1 := @parameter1: int {63644565}";
"off#1 := @parameter1: int {63644565}" -> "off#4 = off#1 + 1 {1401406270}";
"off#4 = off#1 + 1 {1401406270}" -> "b1 = buf[off#1] {950323722}";
"b1 = buf[off#1] {950323722}" -> "if b1 >= -119 goto (branch) {449038959}";
"if b1 >= -119 goto (branch) {449038959}" -> "negative#9 = 1 {569258089}";
"if b1 >= -119 goto (branch) {449038959}" -> "if b1 <= 119 goto $l1 = (long) b1 {1202325002}";
"negative#9 = 1 {569258089}" -> "$b0 = neg b1 {1814501662}";
"$b0 = neg b1 {1814501662}" -> "byteLen#14 = $b0 - 119 {1931616070}";
"byteLen#14 = $b0 - 119 {1931616070}" -> "goto [?= off#25 = off#4 + 1] {232227003}";
"goto [?= off#25 = off#4 + 1] {232227003}" -> "off#25 = off#4 + 1 {1982437083}";
"if b1 <= 119 goto $l1 = (long) b1 {1202325002}" -> "negative#9 = 0 {1366425568}";
"if b1 <= 119 goto $l1 = (long) b1 {1202325002}" -> "$l1 = (long) b1 {1880102535}";
"negative#9 = 0 {1366425568}" -> "byteLen#14 = b1 - 119 {157982335}";
"byteLen#14 = b1 - 119 {157982335}" -> "goto [?= off#25 = off#4 + 1] {1390931894}";
"goto [?= off#25 = off#4 + 1] {1390931894}" -> "off#25 = off#4 + 1 {1982437083}";
"$l1 = (long) b1 {1880102535}" -> "return $l1 {760539036}";
"off#25 = off#4 + 1 {1982437083}" -> "$b2 = buf[off#4] {2085353349}";
"$b2 = buf[off#4] {2085353349}" -> "$l3 = (long) $b2 {630172188}";
"$l3 = (long) $b2 {630172188}" -> "value#30 = $l3 & 255L {199274031}";
"value#30 = $l3 & 255L {199274031}" -> "if byteLen#14 <= 1 goto (branch) {2053247848}";
"if byteLen#14 <= 1 goto (branch) {2053247848}" -> "off#36 = off#25 + 1 {1991931182}";
"if byteLen#14 <= 1 goto (branch) {2053247848}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#36 = off#25 + 1 {1991931182}" -> "$b4 = buf[off#25] {986407497}";
"$b4 = buf[off#25] {986407497}" -> "$l5 = (long) $b4 {518683315}";
"$l5 = (long) $b4 {518683315}" -> "$l6 = $l5 & 255L {158508472}";
"$l6 = $l5 & 255L {158508472}" -> "$l7 = $l6 << 8 {1810975589}";
"$l7 = $l6 << 8 {1810975589}" -> "value#30 = value#30 | $l7 {1302112740}";
"value#30 = value#30 | $l7 {1302112740}" -> "if byteLen#14 <= 2 goto (branch) {1189373173}";
"if byteLen#14 <= 2 goto (branch) {1189373173}" -> "off#49 = off#36 + 1 {881837725}";
"if byteLen#14 <= 2 goto (branch) {1189373173}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#49 = off#36 + 1 {881837725}" -> "$b8 = buf[off#36] {599096158}";
"$b8 = buf[off#36] {599096158}" -> "$l9 = (long) $b8 {1437329574}";
"$l9 = (long) $b8 {1437329574}" -> "$l10 = $l9 & 255L {7372986}";
"$l10 = $l9 & 255L {7372986}" -> "$l11 = $l10 << 16 {49500957}";
"$l11 = $l10 << 16 {49500957}" -> "value#30 = value#30 | $l11 {1143195966}";
"value#30 = value#30 | $l11 {1143195966}" -> "if byteLen#14 <= 3 goto (branch) {947137109}";
"if byteLen#14 <= 3 goto (branch) {947137109}" -> "off#62 = off#49 + 1 {2105312120}";
"if byteLen#14 <= 3 goto (branch) {947137109}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#62 = off#49 + 1 {2105312120}" -> "$b12 = buf[off#49] {1015751701}";
"$b12 = buf[off#49] {1015751701}" -> "$l13 = (long) $b12 {2019898284}";
"$l13 = (long) $b12 {2019898284}" -> "$l14 = $l13 & 255L {477925791}";
"$l14 = $l13 & 255L {477925791}" -> "$l15 = $l14 << 24 {672858448}";
"$l15 = $l14 << 24 {672858448}" -> "value#30 = value#30 | $l15 {1084859808}";
"value#30 = value#30 | $l15 {1084859808}" -> "if byteLen#14 <= 4 goto (branch) {1844449509}";
"if byteLen#14 <= 4 goto (branch) {1844449509}" -> "off#75 = off#62 + 1 {1901392078}";
"if byteLen#14 <= 4 goto (branch) {1844449509}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#75 = off#62 + 1 {1901392078}" -> "$b16 = buf[off#62] {1483127142}";
"$b16 = buf[off#62] {1483127142}" -> "$l17 = (long) $b16 {1486790983}";
"$l17 = (long) $b16 {1486790983}" -> "$l18 = $l17 & 255L {1733900487}";
"$l18 = $l17 & 255L {1733900487}" -> "$l19 = $l18 << 32 {656411742}";
"$l19 = $l18 << 32 {656411742}" -> "value#30 = value#30 | $l19 {1400097819}";
"value#30 = value#30 | $l19 {1400097819}" -> "if byteLen#14 <= 5 goto (branch) {1493513960}";
"if byteLen#14 <= 5 goto (branch) {1493513960}" -> "off#88 = off#75 + 1 {1846703336}";
"if byteLen#14 <= 5 goto (branch) {1493513960}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#88 = off#75 + 1 {1846703336}" -> "$b20 = buf[off#75] {592606959}";
"$b20 = buf[off#75] {592606959}" -> "$l21 = (long) $b20 {697638372}";
"$l21 = (long) $b20 {697638372}" -> "$l22 = $l21 & 255L {1326125373}";
"$l22 = $l21 & 255L {1326125373}" -> "$l23 = $l22 << 40 {2116397839}";
"$l23 = $l22 << 40 {2116397839}" -> "value#30 = value#30 | $l23 {1206451559}";
"value#30 = value#30 | $l23 {1206451559}" -> "if byteLen#14 <= 6 goto (branch) {539883973}";
"if byteLen#14 <= 6 goto (branch) {539883973}" -> "off#101 = off#88 + 1 {1236494265}";
"if byteLen#14 <= 6 goto (branch) {539883973}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#101 = off#88 + 1 {1236494265}" -> "$b24 = buf[off#88] {404205782}";
"$b24 = buf[off#88] {404205782}" -> "$l25 = (long) $b24 {2116512218}";
"$l25 = (long) $b24 {2116512218}" -> "$l26 = $l25 & 255L {1345570446}";
"$l26 = $l25 & 255L {1345570446}" -> "$l27 = $l26 << 48 {816546701}";
"$l27 = $l26 << 48 {816546701}" -> "value#30 = value#30 | $l27 {55485210}";
"value#30 = value#30 | $l27 {55485210}" -> "if byteLen#14 <= 7 goto (branch) {1436115700}";
"if byteLen#14 <= 7 goto (branch) {1436115700}" -> "off#114 = off#101 + 1 {199982906}";
"if byteLen#14 <= 7 goto (branch) {1436115700}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"off#114 = off#101 + 1 {199982906}" -> "$b28 = buf[off#101] {1657963348}";
"$b28 = buf[off#101] {1657963348}" -> "$l29 = (long) $b28 {2096833198}";
"$l29 = (long) $b28 {2096833198}" -> "$l30 = $l29 & 255L {1619220918}";
"$l30 = $l29 & 255L {1619220918}" -> "$l31 = $l30 << 56 {863375610}";
"$l31 = $l30 << 56 {863375610}" -> "value#30 = value#30 | $l31 {1991072473}";
"value#30 = value#30 | $l31 {1991072473}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}";
"if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}" -> "$l32 = neg value#30 {1362249103}";
"if negative#9 == 0 goto $l33 = value#30 + 119L {250583410}" -> "$l33 = value#30 + 119L {593115792}";
"$l32 = neg value#30 {1362249103}" -> "$l33 = $l32 - 119L {1138153336}";
"$l33 = $l32 - 119L {1138153336}" -> "goto [?= return $l33] {600335401}";
"goto [?= return $l33] {600335401}" -> "return $l33 {1137966078}";
"$l33 = value#30 + 119L {593115792}" -> "return $l33 {1137966078}";
}

digraph getReadLongLength {
"buf := @parameter0: byte[] {1260054954}" -> "off := @parameter1: int {648251228}";
"off := @parameter1: int {648251228}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, off) {350457219}";
"$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, off) {350457219}" -> "return $i0 {210839994}";
}

digraph getReadIntLength {
"buf := @parameter0: byte[] {160183565}" -> "off := @parameter1: int {1753570274}";
"off := @parameter1: int {1753570274}" -> "b1 = buf[off] {1175225314}";
"b1 = buf[off] {1175225314}" -> "if b1 >= -119 goto (branch) {522581430}";
"if b1 >= -119 goto (branch) {522581430}" -> "$b0 = neg b1 {1962102927}";
"if b1 >= -119 goto (branch) {522581430}" -> "if b1 <= 119 goto return 1 {266087601}";
"$b0 = neg b1 {1962102927}" -> "$i1 = $b0 - 119 {766609257}";
"$i1 = $b0 - 119 {766609257}" -> "$i2 = $i1 + 1 {1561559124}";
"$i2 = $i1 + 1 {1561559124}" -> "return $i2 {176446156}";
"if b1 <= 119 goto return 1 {266087601}" -> "$i3 = b1 - 119 {1521047321}";
"if b1 <= 119 goto return 1 {266087601}" -> "return 1 {1507531688}";
"$i3 = b1 - 119 {1521047321}" -> "$i4 = $i3 + 1 {559970783}";
"$i4 = $i3 + 1 {559970783}" -> "return $i4 {266889982}";
}

digraph readInt {
"buf := @parameter0: byte[] {1247024732}" -> "off#1 := @parameter1: int {1613987005}";
"off#1 := @parameter1: int {1613987005}" -> "off#4 = off#1 + 1 {1200121359}";
"off#4 = off#1 + 1 {1200121359}" -> "b1 = buf[off#1] {1797622670}";
"b1 = buf[off#1] {1797622670}" -> "if b1 >= -119 goto (branch) {1943625340}";
"if b1 >= -119 goto (branch) {1943625340}" -> "negative#9 = 1 {1719898710}";
"if b1 >= -119 goto (branch) {1943625340}" -> "if b1 <= 119 goto return b1 {718478884}";
"negative#9 = 1 {1719898710}" -> "$b0 = neg b1 {1433315222}";
"$b0 = neg b1 {1433315222}" -> "byteLen#14 = $b0 - 119 {1003072829}";
"byteLen#14 = $b0 - 119 {1003072829}" -> "goto [?= off#24 = off#4 + 1] {1823429767}";
"goto [?= off#24 = off#4 + 1] {1823429767}" -> "off#24 = off#4 + 1 {1256380669}";
"if b1 <= 119 goto return b1 {718478884}" -> "negative#9 = 0 {100324249}";
"if b1 <= 119 goto return b1 {718478884}" -> "return b1 {408185114}";
"negative#9 = 0 {100324249}" -> "byteLen#14 = b1 - 119 {1481263134}";
"byteLen#14 = b1 - 119 {1481263134}" -> "goto [?= off#24 = off#4 + 1] {2020040445}";
"goto [?= off#24 = off#4 + 1] {2020040445}" -> "off#24 = off#4 + 1 {1256380669}";
"off#24 = off#4 + 1 {1256380669}" -> "$b1 = buf[off#4] {1900377090}";
"$b1 = buf[off#4] {1900377090}" -> "value#28 = $b1 & 255 {606217103}";
"value#28 = $b1 & 255 {606217103}" -> "if byteLen#14 <= 1 goto (branch) {1912412068}";
"if byteLen#14 <= 1 goto (branch) {1912412068}" -> "off#34 = off#24 + 1 {506550401}";
"if byteLen#14 <= 1 goto (branch) {1912412068}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {719656137}";
"off#34 = off#24 + 1 {506550401}" -> "$b2 = buf[off#24] {1838714076}";
"$b2 = buf[off#24] {1838714076}" -> "$s3 = $b2 & 255 {1063253263}";
"$s3 = $b2 & 255 {1063253263}" -> "$i4 = $s3 << 8 {40489186}";
"$i4 = $s3 << 8 {40489186}" -> "value#28 = value#28 | $i4 {1753514583}";
"value#28 = value#28 | $i4 {1753514583}" -> "if byteLen#14 <= 2 goto (branch) {1242724381}";
"if byteLen#14 <= 2 goto (branch) {1242724381}" -> "off#46 = off#34 + 1 {41720424}";
"if byteLen#14 <= 2 goto (branch) {1242724381}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {719656137}";
"off#46 = off#34 + 1 {41720424}" -> "$b5 = buf[off#34] {1109227096}";
"$b5 = buf[off#34] {1109227096}" -> "$s6 = $b5 & 255 {115151204}";
"$s6 = $b5 & 255 {115151204}" -> "$i7 = $s6 << 16 {1225941489}";
"$i7 = $s6 << 16 {1225941489}" -> "value#28 = value#28 | $i7 {1542275007}";
"value#28 = value#28 | $i7 {1542275007}" -> "if byteLen#14 <= 3 goto (branch) {1566939789}";
"if byteLen#14 <= 3 goto (branch) {1566939789}" -> "off#58 = off#46 + 1 {2065522127}";
"if byteLen#14 <= 3 goto (branch) {1566939789}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {719656137}";
"off#58 = off#46 + 1 {2065522127}" -> "$b8 = buf[off#46] {775764347}";
"$b8 = buf[off#46] {775764347}" -> "$s9 = $b8 & 255 {1452258428}";
"$s9 = $b8 & 255 {1452258428}" -> "$i10 = $s9 << 24 {6059824}";
"$i10 = $s9 << 24 {6059824}" -> "value#28 = value#28 | $i10 {1700822169}";
"value#28 = value#28 | $i10 {1700822169}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {719656137}";
"if negative#9 == 0 goto $i12 = value#28 + 119 {719656137}" -> "$i11 = neg value#28 {989676451}";
"if negative#9 == 0 goto $i12 = value#28 + 119 {719656137}" -> "$i12 = value#28 + 119 {350483709}";
"$i11 = neg value#28 {989676451}" -> "$i12 = $i11 - 119 {1769460530}";
"$i12 = $i11 - 119 {1769460530}" -> "goto [?= return $i12] {1317994897}";
"goto [?= return $i12] {1317994897}" -> "return $i12 {576121977}";
"$i12 = value#28 + 119 {350483709}" -> "return $i12 {576121977}";
}

digraph readReverseInt {
"buf := @parameter0: byte[] {811340414}" -> "off#1 := @parameter1: int {256095413}";
"off#1 := @parameter1: int {256095413}" -> "b1 = buf[off#1] {550974331}";
"b1 = buf[off#1] {550974331}" -> "if b1 >= -119 goto (branch) {310224553}";
"if b1 >= -119 goto (branch) {310224553}" -> "negative#8 = 1 {48041035}";
"if b1 >= -119 goto (branch) {310224553}" -> "if b1 <= 119 goto return b1 {622153413}";
"negative#8 = 1 {48041035}" -> "$b0 = neg b1 {907162943}";
"$b0 = neg b1 {907162943}" -> "byteLen#13 = $b0 - 119 {619748036}";
"byteLen#13 = $b0 - 119 {619748036}" -> "goto [?= off#22 = off#1 + -1] {685198713}";
"goto [?= off#22 = off#1 + -1] {685198713}" -> "off#22 = off#1 + -1 {838815466}";
"if b1 <= 119 goto return b1 {622153413}" -> "negative#8 = 0 {500041353}";
"if b1 <= 119 goto return b1 {622153413}" -> "return b1 {242255624}";
"negative#8 = 0 {500041353}" -> "byteLen#13 = b1 - 119 {149302452}";
"byteLen#13 = b1 - 119 {149302452}" -> "goto [?= off#22 = off#1 + -1] {979868319}";
"goto [?= off#22 = off#1 + -1] {979868319}" -> "off#22 = off#1 + -1 {838815466}";
"off#22 = off#1 + -1 {838815466}" -> "$b1 = buf[off#22] {769895182}";
"$b1 = buf[off#22] {769895182}" -> "value#27 = $b1 & 255 {465768504}";
"value#27 = $b1 & 255 {465768504}" -> "if byteLen#13 <= 1 goto (branch) {614642153}";
"if byteLen#13 <= 1 goto (branch) {614642153}" -> "off#32 = off#22 + -1 {1537700800}";
"if byteLen#13 <= 1 goto (branch) {614642153}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {966153170}";
"off#32 = off#22 + -1 {1537700800}" -> "$b2 = buf[off#32] {1416182112}";
"$b2 = buf[off#32] {1416182112}" -> "$s3 = $b2 & 255 {64564720}";
"$s3 = $b2 & 255 {64564720}" -> "$i4 = $s3 << 8 {489704067}";
"$i4 = $s3 << 8 {489704067}" -> "value#27 = value#27 | $i4 {1619076336}";
"value#27 = value#27 | $i4 {1619076336}" -> "if byteLen#13 <= 2 goto (branch) {1114379716}";
"if byteLen#13 <= 2 goto (branch) {1114379716}" -> "off#44 = off#32 + -1 {1840645236}";
"if byteLen#13 <= 2 goto (branch) {1114379716}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {966153170}";
"off#44 = off#32 + -1 {1840645236}" -> "$b5 = buf[off#44] {2092490227}";
"$b5 = buf[off#44] {2092490227}" -> "$s6 = $b5 & 255 {1536189641}";
"$s6 = $b5 & 255 {1536189641}" -> "$i7 = $s6 << 16 {421672993}";
"$i7 = $s6 << 16 {421672993}" -> "value#27 = value#27 | $i7 {100534725}";
"value#27 = value#27 | $i7 {100534725}" -> "if byteLen#13 <= 3 goto (branch) {251322716}";
"if byteLen#13 <= 3 goto (branch) {251322716}" -> "off#56 = off#44 + -1 {767922886}";
"if byteLen#13 <= 3 goto (branch) {251322716}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {966153170}";
"off#56 = off#44 + -1 {767922886}" -> "$b8 = buf[off#56] {1951958416}";
"$b8 = buf[off#56] {1951958416}" -> "$s9 = $b8 & 255 {463080648}";
"$s9 = $b8 & 255 {463080648}" -> "$i10 = $s9 << 24 {1008000249}";
"$i10 = $s9 << 24 {1008000249}" -> "value#27 = value#27 | $i10 {717328098}";
"value#27 = value#27 | $i10 {717328098}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {966153170}";
"if negative#8 == 0 goto $i12 = value#27 + 119 {966153170}" -> "$i11 = neg value#27 {1337095938}";
"if negative#8 == 0 goto $i12 = value#27 + 119 {966153170}" -> "$i12 = value#27 + 119 {684765715}";
"$i11 = neg value#27 {1337095938}" -> "$i12 = $i11 - 119 {437414455}";
"$i12 = $i11 - 119 {437414455}" -> "goto [?= return $i12] {1641663421}";
"goto [?= return $i12] {1641663421}" -> "return $i12 {125501591}";
"$i12 = value#27 + 119 {684765715}" -> "return $i12 {125501591}";
}

digraph writeReverseInt {
"buf := @parameter0: byte[] {941271164}" -> "off#1 := @parameter1: int {1544254646}";
"off#1 := @parameter1: int {1544254646}" -> "value#2 := @parameter2: int {1997853349}";
"value#2 := @parameter2: int {1997853349}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(value#2) {460804254}";
"$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(value#2) {460804254}" -> "nextOff = off#1 + $i0 {1054630341}";
"nextOff = off#1 + $i0 {1054630341}" -> "if value#2 >= -119 goto (branch) {1366363936}";
"if value#2 >= -119 goto (branch) {1366363936}" -> "negative#10 = 1 {1659484934}";
"if value#2 >= -119 goto (branch) {1366363936}" -> "if value#2 <= 119 goto $b2 = (byte) value#2 {1841948425}";
"negative#10 = 1 {1659484934}" -> "$i1 = neg value#2 {1128964895}";
"$i1 = neg value#2 {1128964895}" -> "value#15 = $i1 - 119 {1209286073}";
"value#15 = $i1 - 119 {1209286073}" -> "goto [?= byte1Off = nextOff - 1] {1582312959}";
"goto [?= byte1Off = nextOff - 1] {1582312959}" -> "byte1Off = nextOff - 1 {367598053}";
"if value#2 <= 119 goto $b2 = (byte) value#2 {1841948425}" -> "negative#10 = 0 {1010606149}";
"if value#2 <= 119 goto $b2 = (byte) value#2 {1841948425}" -> "$b2 = (byte) value#2 {2079604455}";
"negative#10 = 0 {1010606149}" -> "value#15 = value#2 - 119 {1981005586}";
"value#15 = value#2 - 119 {1981005586}" -> "goto [?= byte1Off = nextOff - 1] {4792004}";
"goto [?= byte1Off = nextOff - 1] {4792004}" -> "byte1Off = nextOff - 1 {367598053}";
"$b2 = (byte) value#2 {2079604455}" -> "buf[off#1] = $b2 {1033221698}";
"buf[off#1] = $b2 {1033221698}" -> "$i3 = off#1 + 1 {325736826}";
"$i3 = off#1 + 1 {325736826}" -> "return $i3 {56478451}";
"byte1Off = nextOff - 1 {367598053}" -> "off#33 = byte1Off {1426334828}";
"off#33 = byte1Off {1426334828}" -> "off#35 = off#33 + -1 {374352656}";
"off#35 = off#33 + -1 {374352656}" -> "$b4 = (byte) value#15 {1121372275}";
"$b4 = (byte) value#15 {1121372275}" -> "buf[off#35] = $b4 {1430872978}";
"buf[off#35] = $b4 {1430872978}" -> "$i5 = value#15 & -256 {1311341948}";
"$i5 = value#15 & -256 {1311341948}" -> "if $i5 != 0 goto off#48 = off#35 + -1 {1357042392}";
"if $i5 != 0 goto off#48 = off#35 + -1 {1357042392}" -> "if negative#10 == 0 goto $b7 = 120 {653313003}";
"if $i5 != 0 goto off#48 = off#35 + -1 {1357042392}" -> "off#48 = off#35 + -1 {120921153}";
"if negative#10 == 0 goto $b7 = 120 {653313003}" -> "$b7 = -120 {1783048731}";
"if negative#10 == 0 goto $b7 = 120 {653313003}" -> "$b7 = 120 {1436886482}";
"$b7 = -120 {1783048731}" -> "goto [?= buf[byte1Off] = $b7] {551242513}";
"goto [?= buf[byte1Off] = $b7] {551242513}" -> "buf[byte1Off] = $b7 {1978293014}";
"$b7 = 120 {1436886482}" -> "buf[byte1Off] = $b7 {1978293014}";
"buf[byte1Off] = $b7 {1978293014}" -> "return nextOff {1549268037}";
"off#48 = off#35 + -1 {120921153}" -> "$i8 = value#15 >>> 8 {988000192}";
"$i8 = value#15 >>> 8 {988000192}" -> "$b9 = (byte) $i8 {1827927490}";
"$b9 = (byte) $i8 {1827927490}" -> "buf[off#48] = $b9 {1103479418}";
"buf[off#48] = $b9 {1103479418}" -> "$i10 = value#15 & -65536 {1375544477}";
"$i10 = value#15 & -65536 {1375544477}" -> "if $i10 != 0 goto off#63 = off#48 + -1 {1053096650}";
"if $i10 != 0 goto off#63 = off#48 + -1 {1053096650}" -> "if negative#10 == 0 goto $b12 = 121 {1777653641}";
"if $i10 != 0 goto off#63 = off#48 + -1 {1053096650}" -> "off#63 = off#48 + -1 {1214706029}";
"if negative#10 == 0 goto $b12 = 121 {1777653641}" -> "$b12 = -121 {955100562}";
"if negative#10 == 0 goto $b12 = 121 {1777653641}" -> "$b12 = 121 {140424485}";
"$b12 = -121 {955100562}" -> "goto [?= buf[byte1Off] = $b12] {52757622}";
"goto [?= buf[byte1Off] = $b12] {52757622}" -> "buf[byte1Off] = $b12 {1197040440}";
"$b12 = 121 {140424485}" -> "buf[byte1Off] = $b12 {1197040440}";
"buf[byte1Off] = $b12 {1197040440}" -> "return nextOff {966813679}";
"off#63 = off#48 + -1 {1214706029}" -> "$i13 = value#15 >>> 16 {1702294103}";
"$i13 = value#15 >>> 16 {1702294103}" -> "$b14 = (byte) $i13 {918594170}";
"$b14 = (byte) $i13 {918594170}" -> "buf[off#63] = $b14 {1945518202}";
"buf[off#63] = $b14 {1945518202}" -> "$i15 = value#15 & -16777216 {752188885}";
"$i15 = value#15 & -16777216 {752188885}" -> "if $i15 != 0 goto off#78 = off#63 + -1 {1835077029}";
"if $i15 != 0 goto off#78 = off#63 + -1 {1835077029}" -> "if negative#10 == 0 goto $b17 = 122 {1758987490}";
"if $i15 != 0 goto off#78 = off#63 + -1 {1835077029}" -> "off#78 = off#63 + -1 {1191857660}";
"if negative#10 == 0 goto $b17 = 122 {1758987490}" -> "$b17 = -122 {1407824905}";
"if negative#10 == 0 goto $b17 = 122 {1758987490}" -> "$b17 = 122 {860821793}";
"$b17 = -122 {1407824905}" -> "goto [?= buf[byte1Off] = $b17] {932992026}";
"goto [?= buf[byte1Off] = $b17] {932992026}" -> "buf[byte1Off] = $b17 {463008958}";
"$b17 = 122 {860821793}" -> "buf[byte1Off] = $b17 {463008958}";
"buf[byte1Off] = $b17 {463008958}" -> "return nextOff {1344727567}";
"off#78 = off#63 + -1 {1191857660}" -> "$i18 = value#15 >>> 24 {173594616}";
"$i18 = value#15 >>> 24 {173594616}" -> "$b19 = (byte) $i18 {1859781045}";
"$b19 = (byte) $i18 {1859781045}" -> "buf[off#78] = $b19 {1648194899}";
"buf[off#78] = $b19 {1648194899}" -> "if negative#10 == 0 goto $b21 = 123 {1190439681}";
"if negative#10 == 0 goto $b21 = 123 {1190439681}" -> "$b21 = -123 {962235652}";
"if negative#10 == 0 goto $b21 = 123 {1190439681}" -> "$b21 = 123 {1279785021}";
"$b21 = -123 {962235652}" -> "goto [?= buf[byte1Off] = $b21] {1442222729}";
"goto [?= buf[byte1Off] = $b21] {1442222729}" -> "buf[byte1Off] = $b21 {797507095}";
"$b21 = 123 {1279785021}" -> "buf[byte1Off] = $b21 {797507095}";
"buf[byte1Off] = $b21 {797507095}" -> "return nextOff {601150534}";
}

digraph getWriteIntLength {
"value#1 := @parameter0: int {87958667}" -> "if value#1 >= -119 goto (branch) {1081306569}";
"if value#1 >= -119 goto (branch) {1081306569}" -> "$i0 = neg value#1 {2045652595}";
"if value#1 >= -119 goto (branch) {1081306569}" -> "if value#1 <= 119 goto return 1 {2024176466}";
"$i0 = neg value#1 {2045652595}" -> "value#8 = $i0 - 119 {2071152371}";
"value#8 = $i0 - 119 {2071152371}" -> "goto [?= $i1 = value#8 & -256] {1944482392}";
"goto [?= $i1 = value#8 & -256] {1944482392}" -> "$i1 = value#8 & -256 {1706695092}";
"if value#1 <= 119 goto return 1 {2024176466}" -> "value#8 = value#1 - 119 {523874918}";
"if value#1 <= 119 goto return 1 {2024176466}" -> "return 1 {213277990}";
"value#8 = value#1 - 119 {523874918}" -> "goto [?= $i1 = value#8 & -256] {848553215}";
"goto [?= $i1 = value#8 & -256] {848553215}" -> "$i1 = value#8 & -256 {1706695092}";
"$i1 = value#8 & -256 {1706695092}" -> "if $i1 != 0 goto $i2 = value#8 & -65536 {1541089096}";
"if $i1 != 0 goto $i2 = value#8 & -65536 {1541089096}" -> "return 2 {1002131897}";
"if $i1 != 0 goto $i2 = value#8 & -65536 {1541089096}" -> "$i2 = value#8 & -65536 {713239839}";
"$i2 = value#8 & -65536 {713239839}" -> "if $i2 != 0 goto $i3 = value#8 & -16777216 {1263834991}";
"if $i2 != 0 goto $i3 = value#8 & -16777216 {1263834991}" -> "return 3 {1427559495}";
"if $i2 != 0 goto $i3 = value#8 & -16777216 {1263834991}" -> "$i3 = value#8 & -16777216 {1302978456}";
"$i3 = value#8 & -16777216 {1302978456}" -> "if $i3 != 0 goto return 5 {780050054}";
"if $i3 != 0 goto return 5 {780050054}" -> "return 4 {1106492080}";
"if $i3 != 0 goto return 5 {780050054}" -> "return 5 {418759781}";
}

digraph getWriteLongLength {
"value#1 := @parameter0: long {483121411}" -> "$b0 = value#1 cmp -119L {1622094757}";
"$b0 = value#1 cmp -119L {1622094757}" -> "if $b0 >= 0 goto $b2 = value#1 cmp 119L {170096135}";
"if $b0 >= 0 goto $b2 = value#1 cmp 119L {170096135}" -> "$l1 = neg value#1 {1182104274}";
"if $b0 >= 0 goto $b2 = value#1 cmp 119L {170096135}" -> "$b2 = value#1 cmp 119L {493532333}";
"$l1 = neg value#1 {1182104274}" -> "value#9 = $l1 - 119L {968813404}";
"value#9 = $l1 - 119L {968813404}" -> "goto [?= $l3 = value#9 & -256L] {1416672595}";
"goto [?= $l3 = value#9 & -256L] {1416672595}" -> "$l3 = value#9 & -256L {817720747}";
"$b2 = value#1 cmp 119L {493532333}" -> "if $b2 <= 0 goto return 1 {1289830526}";
"if $b2 <= 0 goto return 1 {1289830526}" -> "value#9 = value#1 - 119L {490091580}";
"if $b2 <= 0 goto return 1 {1289830526}" -> "return 1 {1820891113}";
"value#9 = value#1 - 119L {490091580}" -> "goto [?= $l3 = value#9 & -256L] {485951098}";
"goto [?= $l3 = value#9 & -256L] {485951098}" -> "$l3 = value#9 & -256L {817720747}";
"$l3 = value#9 & -256L {817720747}" -> "$b4 = $l3 cmp 0L {1183032919}";
"$b4 = $l3 cmp 0L {1183032919}" -> "if $b4 != 0 goto $l5 = value#9 & -65536L {1010001710}";
"if $b4 != 0 goto $l5 = value#9 & -65536L {1010001710}" -> "return 2 {1804268680}";
"if $b4 != 0 goto $l5 = value#9 & -65536L {1010001710}" -> "$l5 = value#9 & -65536L {880802687}";
"$l5 = value#9 & -65536L {880802687}" -> "$b6 = $l5 cmp 0L {982148519}";
"$b6 = $l5 cmp 0L {982148519}" -> "if $b6 != 0 goto $l7 = value#9 & -16777216L {1205220886}";
"if $b6 != 0 goto $l7 = value#9 & -16777216L {1205220886}" -> "return 3 {1862884556}";
"if $b6 != 0 goto $l7 = value#9 & -16777216L {1205220886}" -> "$l7 = value#9 & -16777216L {811743516}";
"$l7 = value#9 & -16777216L {811743516}" -> "$b8 = $l7 cmp 0L {772465809}";
"$b8 = $l7 cmp 0L {772465809}" -> "if $b8 != 0 goto $l9 = value#9 & -4294967296L {1691044348}";
"if $b8 != 0 goto $l9 = value#9 & -4294967296L {1691044348}" -> "return 4 {392011012}";
"if $b8 != 0 goto $l9 = value#9 & -4294967296L {1691044348}" -> "$l9 = value#9 & -4294967296L {335655942}";
"$l9 = value#9 & -4294967296L {335655942}" -> "$b10 = $l9 cmp 0L {1469385865}";
"$b10 = $l9 cmp 0L {1469385865}" -> "if $b10 != 0 goto $l11 = value#9 & -1099511627776L {2004784}";
"if $b10 != 0 goto $l11 = value#9 & -1099511627776L {2004784}" -> "return 5 {185256444}";
"if $b10 != 0 goto $l11 = value#9 & -1099511627776L {2004784}" -> "$l11 = value#9 & -1099511627776L {751360630}";
"$l11 = value#9 & -1099511627776L {751360630}" -> "$b12 = $l11 cmp 0L {652848813}";
"$b12 = $l11 cmp 0L {652848813}" -> "if $b12 != 0 goto $l13 = value#9 & -281474976710656L {413108716}";
"if $b12 != 0 goto $l13 = value#9 & -281474976710656L {413108716}" -> "return 6 {114515943}";
"if $b12 != 0 goto $l13 = value#9 & -281474976710656L {413108716}" -> "$l13 = value#9 & -281474976710656L {203711189}";
"$l13 = value#9 & -281474976710656L {203711189}" -> "$b14 = $l13 cmp 0L {1565983008}";
"$b14 = $l13 cmp 0L {1565983008}" -> "if $b14 != 0 goto $l15 = value#9 & -72057594037927936L {1430265076}";
"if $b14 != 0 goto $l15 = value#9 & -72057594037927936L {1430265076}" -> "return 7 {1262392185}";
"if $b14 != 0 goto $l15 = value#9 & -72057594037927936L {1430265076}" -> "$l15 = value#9 & -72057594037927936L {1850543484}";
"$l15 = value#9 & -72057594037927936L {1850543484}" -> "$b16 = $l15 cmp 0L {1367045567}";
"$b16 = $l15 cmp 0L {1367045567}" -> "if $b16 != 0 goto return 9 {336869060}";
"if $b16 != 0 goto return 9 {336869060}" -> "return 8 {2088343616}";
"if $b16 != 0 goto return 9 {336869060}" -> "return 9 {1135769339}";
}

digraph writeInt {
"buf := @parameter0: byte[] {1209932681}" -> "offset#1 := @parameter1: int {1276296488}";
"offset#1 := @parameter1: int {1276296488}" -> "value#2 := @parameter2: int {123677928}";
"value#2 := @parameter2: int {123677928}" -> "byte1Off = offset#1 {1915524663}";
"byte1Off = offset#1 {1915524663}" -> "if value#2 >= -119 goto (branch) {1997812363}";
"if value#2 >= -119 goto (branch) {1997812363}" -> "negative#7 = 1 {586565436}";
"if value#2 >= -119 goto (branch) {1997812363}" -> "if value#2 <= 119 goto offset#21 = offset#1 + 1 {1022133386}";
"negative#7 = 1 {586565436}" -> "$i0 = neg value#2 {1681870725}";
"$i0 = neg value#2 {1681870725}" -> "value#12 = $i0 - 119 {1999191332}";
"value#12 = $i0 - 119 {1999191332}" -> "goto [?= offset#25 = offset#1 + 1] {1777604387}";
"goto [?= offset#25 = offset#1 + 1] {1777604387}" -> "offset#25 = offset#1 + 1 {748575334}";
"if value#2 <= 119 goto offset#21 = offset#1 + 1 {1022133386}" -> "negative#7 = 0 {1589321760}";
"if value#2 <= 119 goto offset#21 = offset#1 + 1 {1022133386}" -> "offset#21 = offset#1 + 1 {298714762}";
"negative#7 = 0 {1589321760}" -> "value#12 = value#2 - 119 {579421711}";
"value#12 = value#2 - 119 {579421711}" -> "goto [?= offset#25 = offset#1 + 1] {1496974598}";
"goto [?= offset#25 = offset#1 + 1] {1496974598}" -> "offset#25 = offset#1 + 1 {748575334}";
"offset#21 = offset#1 + 1 {298714762}" -> "$b1 = (byte) value#2 {205553285}";
"$b1 = (byte) value#2 {205553285}" -> "buf[offset#1] = $b1 {1843119057}";
"buf[offset#1] = $b1 {1843119057}" -> "return offset#21 {598060225}";
"offset#25 = offset#1 + 1 {748575334}" -> "offset#28 = offset#25 + 1 {1415956247}";
"offset#28 = offset#25 + 1 {1415956247}" -> "$b2 = (byte) value#12 {1397534991}";
"$b2 = (byte) value#12 {1397534991}" -> "buf[offset#25] = $b2 {1277352258}";
"buf[offset#25] = $b2 {1277352258}" -> "$i3 = value#12 & -256 {1038649358}";
"$i3 = value#12 & -256 {1038649358}" -> "if $i3 != 0 goto offset#41 = offset#28 + 1 {1733996088}";
"if $i3 != 0 goto offset#41 = offset#28 + 1 {1733996088}" -> "if negative#7 == 0 goto $b5 = 120 {1786500808}";
"if $i3 != 0 goto offset#41 = offset#28 + 1 {1733996088}" -> "offset#41 = offset#28 + 1 {37990425}";
"if negative#7 == 0 goto $b5 = 120 {1786500808}" -> "$b5 = -120 {222844848}";
"if negative#7 == 0 goto $b5 = 120 {1786500808}" -> "$b5 = 120 {2127356745}";
"$b5 = -120 {222844848}" -> "goto [?= buf[byte1Off] = $b5] {849758999}";
"goto [?= buf[byte1Off] = $b5] {849758999}" -> "buf[byte1Off] = $b5 {1245034446}";
"$b5 = 120 {2127356745}" -> "buf[byte1Off] = $b5 {1245034446}";
"buf[byte1Off] = $b5 {1245034446}" -> "return offset#28 {99713450}";
"offset#41 = offset#28 + 1 {37990425}" -> "$i6 = value#12 >>> 8 {301958488}";
"$i6 = value#12 >>> 8 {301958488}" -> "$b7 = (byte) $i6 {773821840}";
"$b7 = (byte) $i6 {773821840}" -> "buf[offset#28] = $b7 {1787880076}";
"buf[offset#28] = $b7 {1787880076}" -> "$i8 = value#12 & -65536 {1115873099}";
"$i8 = value#12 & -65536 {1115873099}" -> "if $i8 != 0 goto offset#56 = offset#41 + 1 {803983637}";
"if $i8 != 0 goto offset#56 = offset#41 + 1 {803983637}" -> "if negative#7 == 0 goto $b10 = 121 {599375986}";
"if $i8 != 0 goto offset#56 = offset#41 + 1 {803983637}" -> "offset#56 = offset#41 + 1 {1850008900}";
"if negative#7 == 0 goto $b10 = 121 {599375986}" -> "$b10 = -121 {558374901}";
"if negative#7 == 0 goto $b10 = 121 {599375986}" -> "$b10 = 121 {313480078}";
"$b10 = -121 {558374901}" -> "goto [?= buf[byte1Off] = $b10] {504033564}";
"goto [?= buf[byte1Off] = $b10] {504033564}" -> "buf[byte1Off] = $b10 {2138618873}";
"$b10 = 121 {313480078}" -> "buf[byte1Off] = $b10 {2138618873}";
"buf[byte1Off] = $b10 {2138618873}" -> "return offset#41 {1466246284}";
"offset#56 = offset#41 + 1 {1850008900}" -> "$i11 = value#12 >>> 16 {1151981906}";
"$i11 = value#12 >>> 16 {1151981906}" -> "$b12 = (byte) $i11 {219048518}";
"$b12 = (byte) $i11 {219048518}" -> "buf[offset#41] = $b12 {1120937854}";
"buf[offset#41] = $b12 {1120937854}" -> "$i13 = value#12 & -16777216 {56430687}";
"$i13 = value#12 & -16777216 {56430687}" -> "if $i13 != 0 goto offset#71 = offset#56 + 1 {1081420957}";
"if $i13 != 0 goto offset#71 = offset#56 + 1 {1081420957}" -> "if negative#7 == 0 goto $b15 = 122 {28633431}";
"if $i13 != 0 goto offset#71 = offset#56 + 1 {1081420957}" -> "offset#71 = offset#56 + 1 {1873562308}";
"if negative#7 == 0 goto $b15 = 122 {28633431}" -> "$b15 = -122 {1777147813}";
"if negative#7 == 0 goto $b15 = 122 {28633431}" -> "$b15 = 122 {590215787}";
"$b15 = -122 {1777147813}" -> "goto [?= buf[byte1Off] = $b15] {710980265}";
"goto [?= buf[byte1Off] = $b15] {710980265}" -> "buf[byte1Off] = $b15 {99963144}";
"$b15 = 122 {590215787}" -> "buf[byte1Off] = $b15 {99963144}";
"buf[byte1Off] = $b15 {99963144}" -> "return offset#56 {733903339}";
"offset#71 = offset#56 + 1 {1873562308}" -> "$i16 = value#12 >>> 24 {200073842}";
"$i16 = value#12 >>> 24 {200073842}" -> "$b17 = (byte) $i16 {102462369}";
"$b17 = (byte) $i16 {102462369}" -> "buf[offset#56] = $b17 {423528022}";
"buf[offset#56] = $b17 {423528022}" -> "if negative#7 == 0 goto $b19 = 123 {477972635}";
"if negative#7 == 0 goto $b19 = 123 {477972635}" -> "$b19 = -123 {2084897429}";
"if negative#7 == 0 goto $b19 = 123 {477972635}" -> "$b19 = 123 {2120151345}";
"$b19 = -123 {2084897429}" -> "goto [?= buf[byte1Off] = $b19] {1823914579}";
"goto [?= buf[byte1Off] = $b19] {1823914579}" -> "buf[byte1Off] = $b19 {135350257}";
"$b19 = 123 {2120151345}" -> "buf[byte1Off] = $b19 {135350257}";
"buf[byte1Off] = $b19 {135350257}" -> "return offset#71 {86630447}";
}

digraph writeLong {
"buf := @parameter0: byte[] {261927946}" -> "offset#1 := @parameter1: int {276346118}";
"offset#1 := @parameter1: int {276346118}" -> "value#2 := @parameter2: long {26923612}";
"value#2 := @parameter2: long {26923612}" -> "byte1Off = offset#1 {1295705276}";
"byte1Off = offset#1 {1295705276}" -> "$b0 = value#2 cmp -119L {479231184}";
"$b0 = value#2 cmp -119L {479231184}" -> "if $b0 >= 0 goto $b2 = value#2 cmp 119L {1198135377}";
"if $b0 >= 0 goto $b2 = value#2 cmp 119L {1198135377}" -> "negative#8 = 1 {91535316}";
"if $b0 >= 0 goto $b2 = value#2 cmp 119L {1198135377}" -> "$b2 = value#2 cmp 119L {1602044206}";
"negative#8 = 1 {91535316}" -> "$l1 = neg value#2 {1620815928}";
"$l1 = neg value#2 {1620815928}" -> "value#13 = $l1 - 119L {2098367060}";
"value#13 = $l1 - 119L {2098367060}" -> "goto [?= offset#28 = offset#1 + 1] {1077280702}";
"goto [?= offset#28 = offset#1 + 1] {1077280702}" -> "offset#28 = offset#1 + 1 {662516281}";
"$b2 = value#2 cmp 119L {1602044206}" -> "if $b2 <= 0 goto offset#23 = offset#1 + 1 {819629424}";
"if $b2 <= 0 goto offset#23 = offset#1 + 1 {819629424}" -> "negative#8 = 0 {1923498743}";
"if $b2 <= 0 goto offset#23 = offset#1 + 1 {819629424}" -> "offset#23 = offset#1 + 1 {60757229}";
"negative#8 = 0 {1923498743}" -> "value#13 = value#2 - 119L {1245360189}";
"value#13 = value#2 - 119L {1245360189}" -> "goto [?= offset#28 = offset#1 + 1] {904915519}";
"goto [?= offset#28 = offset#1 + 1] {904915519}" -> "offset#28 = offset#1 + 1 {662516281}";
"offset#23 = offset#1 + 1 {60757229}" -> "$i3 = (int) value#2 {1061120164}";
"$i3 = (int) value#2 {1061120164}" -> "$b4 = (byte) $i3 {735003255}";
"$b4 = (byte) $i3 {735003255}" -> "buf[offset#1] = $b4 {1342968735}";
"buf[offset#1] = $b4 {1342968735}" -> "return offset#23 {1987054202}";
"offset#28 = offset#1 + 1 {662516281}" -> "offset#31 = offset#28 + 1 {577978996}";
"offset#31 = offset#28 + 1 {577978996}" -> "$i5 = (int) value#13 {287088780}";
"$i5 = (int) value#13 {287088780}" -> "$b6 = (byte) $i5 {1892794334}";
"$b6 = (byte) $i5 {1892794334}" -> "buf[offset#28] = $b6 {1216951122}";
"buf[offset#28] = $b6 {1216951122}" -> "$l7 = value#13 & -256L {663179874}";
"$l7 = value#13 & -256L {663179874}" -> "$b8 = $l7 cmp 0L {1206685431}";
"$b8 = $l7 cmp 0L {1206685431}" -> "if $b8 != 0 goto offset#47 = offset#31 + 1 {881295186}";
"if $b8 != 0 goto offset#47 = offset#31 + 1 {881295186}" -> "if negative#8 == 0 goto $b10 = 120 {208357701}";
"if $b8 != 0 goto offset#47 = offset#31 + 1 {881295186}" -> "offset#47 = offset#31 + 1 {2042553130}";
"if negative#8 == 0 goto $b10 = 120 {208357701}" -> "$b10 = -120 {1422038549}";
"if negative#8 == 0 goto $b10 = 120 {208357701}" -> "$b10 = 120 {844293282}";
"$b10 = -120 {1422038549}" -> "goto [?= buf[byte1Off] = $b10] {2136653249}";
"goto [?= buf[byte1Off] = $b10] {2136653249}" -> "buf[byte1Off] = $b10 {1688576716}";
"$b10 = 120 {844293282}" -> "buf[byte1Off] = $b10 {1688576716}";
"buf[byte1Off] = $b10 {1688576716}" -> "return offset#31 {235534213}";
"offset#47 = offset#31 + 1 {2042553130}" -> "$l11 = value#13 >>> 8 {740334902}";
"$l11 = value#13 >>> 8 {740334902}" -> "$i12 = (int) $l11 {1077206603}";
"$i12 = (int) $l11 {1077206603}" -> "$b13 = (byte) $i12 {1145367979}";
"$b13 = (byte) $i12 {1145367979}" -> "buf[offset#31] = $b13 {709688864}";
"buf[offset#31] = $b13 {709688864}" -> "$l14 = value#13 & -65536L {130535285}";
"$l14 = value#13 & -65536L {130535285}" -> "$b15 = $l14 cmp 0L {537615592}";
"$b15 = $l14 cmp 0L {537615592}" -> "if $b15 != 0 goto offset#65 = offset#47 + 1 {787985676}";
"if $b15 != 0 goto offset#65 = offset#47 + 1 {787985676}" -> "if negative#8 == 0 goto $b17 = 121 {134991110}";
"if $b15 != 0 goto offset#65 = offset#47 + 1 {787985676}" -> "offset#65 = offset#47 + 1 {1520328734}";
"if negative#8 == 0 goto $b17 = 121 {134991110}" -> "$b17 = -121 {212044732}";
"if negative#8 == 0 goto $b17 = 121 {134991110}" -> "$b17 = 121 {1092512497}";
"$b17 = -121 {212044732}" -> "goto [?= buf[byte1Off] = $b17] {1616738465}";
"goto [?= buf[byte1Off] = $b17] {1616738465}" -> "buf[byte1Off] = $b17 {397147177}";
"$b17 = 121 {1092512497}" -> "buf[byte1Off] = $b17 {397147177}";
"buf[byte1Off] = $b17 {397147177}" -> "return offset#47 {215384882}";
"offset#65 = offset#47 + 1 {1520328734}" -> "$l18 = value#13 >>> 16 {1040108795}";
"$l18 = value#13 >>> 16 {1040108795}" -> "$i19 = (int) $l18 {348771786}";
"$i19 = (int) $l18 {348771786}" -> "$b20 = (byte) $i19 {993317608}";
"$b20 = (byte) $i19 {993317608}" -> "buf[offset#47] = $b20 {2079963799}";
"buf[offset#47] = $b20 {2079963799}" -> "$l21 = value#13 & -16777216L {1999171701}";
"$l21 = value#13 & -16777216L {1999171701}" -> "$b22 = $l21 cmp 0L {682730036}";
"$b22 = $l21 cmp 0L {682730036}" -> "if $b22 != 0 goto offset#83 = offset#65 + 1 {1947858907}";
"if $b22 != 0 goto offset#83 = offset#65 + 1 {1947858907}" -> "if negative#8 == 0 goto $b24 = 122 {100626027}";
"if $b22 != 0 goto offset#83 = offset#65 + 1 {1947858907}" -> "offset#83 = offset#65 + 1 {2122135763}";
"if negative#8 == 0 goto $b24 = 122 {100626027}" -> "$b24 = -122 {1366986003}";
"if negative#8 == 0 goto $b24 = 122 {100626027}" -> "$b24 = 122 {1509815953}";
"$b24 = -122 {1366986003}" -> "goto [?= buf[byte1Off] = $b24] {2025191853}";
"goto [?= buf[byte1Off] = $b24] {2025191853}" -> "buf[byte1Off] = $b24 {663705587}";
"$b24 = 122 {1509815953}" -> "buf[byte1Off] = $b24 {663705587}";
"buf[byte1Off] = $b24 {663705587}" -> "return offset#65 {1974974827}";
"offset#83 = offset#65 + 1 {2122135763}" -> "$l25 = value#13 >>> 24 {70038261}";
"$l25 = value#13 >>> 24 {70038261}" -> "$i26 = (int) $l25 {327198979}";
"$i26 = (int) $l25 {327198979}" -> "$b27 = (byte) $i26 {1759952111}";
"$b27 = (byte) $i26 {1759952111}" -> "buf[offset#65] = $b27 {1656787091}";
"buf[offset#65] = $b27 {1656787091}" -> "$l28 = value#13 & -4294967296L {1217954662}";
"$l28 = value#13 & -4294967296L {1217954662}" -> "$b29 = $l28 cmp 0L {2090544384}";
"$b29 = $l28 cmp 0L {2090544384}" -> "if $b29 != 0 goto offset#101 = offset#83 + 1 {1263484298}";
"if $b29 != 0 goto offset#101 = offset#83 + 1 {1263484298}" -> "if negative#8 == 0 goto $b31 = 123 {686961654}";
"if $b29 != 0 goto offset#101 = offset#83 + 1 {1263484298}" -> "offset#101 = offset#83 + 1 {2072589733}";
"if negative#8 == 0 goto $b31 = 123 {686961654}" -> "$b31 = -123 {1867805562}";
"if negative#8 == 0 goto $b31 = 123 {686961654}" -> "$b31 = 123 {2086631651}";
"$b31 = -123 {1867805562}" -> "goto [?= buf[byte1Off] = $b31] {2034982913}";
"goto [?= buf[byte1Off] = $b31] {2034982913}" -> "buf[byte1Off] = $b31 {1166772509}";
"$b31 = 123 {2086631651}" -> "buf[byte1Off] = $b31 {1166772509}";
"buf[byte1Off] = $b31 {1166772509}" -> "return offset#83 {736223021}";
"offset#101 = offset#83 + 1 {2072589733}" -> "$l32 = value#13 >>> 32 {312333348}";
"$l32 = value#13 >>> 32 {312333348}" -> "$i33 = (int) $l32 {546041807}";
"$i33 = (int) $l32 {546041807}" -> "$b34 = (byte) $i33 {1517260917}";
"$b34 = (byte) $i33 {1517260917}" -> "buf[offset#83] = $b34 {1464089028}";
"buf[offset#83] = $b34 {1464089028}" -> "$l35 = value#13 & -1099511627776L {1925468696}";
"$l35 = value#13 & -1099511627776L {1925468696}" -> "$b36 = $l35 cmp 0L {141496317}";
"$b36 = $l35 cmp 0L {141496317}" -> "if $b36 != 0 goto offset#119 = offset#101 + 1 {673667592}";
"if $b36 != 0 goto offset#119 = offset#101 + 1 {673667592}" -> "if negative#8 == 0 goto $b38 = 124 {1478521132}";
"if $b36 != 0 goto offset#119 = offset#101 + 1 {673667592}" -> "offset#119 = offset#101 + 1 {1657301987}";
"if negative#8 == 0 goto $b38 = 124 {1478521132}" -> "$b38 = -124 {1017887767}";
"if negative#8 == 0 goto $b38 = 124 {1478521132}" -> "$b38 = 124 {1270799610}";
"$b38 = -124 {1017887767}" -> "goto [?= buf[byte1Off] = $b38] {758514191}";
"goto [?= buf[byte1Off] = $b38] {758514191}" -> "buf[byte1Off] = $b38 {281836976}";
"$b38 = 124 {1270799610}" -> "buf[byte1Off] = $b38 {281836976}";
"buf[byte1Off] = $b38 {281836976}" -> "return offset#101 {1826448115}";
"offset#119 = offset#101 + 1 {1657301987}" -> "$l39 = value#13 >>> 40 {8496081}";
"$l39 = value#13 >>> 40 {8496081}" -> "$i40 = (int) $l39 {557270865}";
"$i40 = (int) $l39 {557270865}" -> "$b41 = (byte) $i40 {1858122763}";
"$b41 = (byte) $i40 {1858122763}" -> "buf[offset#101] = $b41 {338227152}";
"buf[offset#101] = $b41 {338227152}" -> "$l42 = value#13 & -281474976710656L {1772553380}";
"$l42 = value#13 & -281474976710656L {1772553380}" -> "$b43 = $l42 cmp 0L {1897816565}";
"$b43 = $l42 cmp 0L {1897816565}" -> "if $b43 != 0 goto offset#137 = offset#119 + 1 {387201912}";
"if $b43 != 0 goto offset#137 = offset#119 + 1 {387201912}" -> "if negative#8 == 0 goto $b45 = 125 {1503989848}";
"if $b43 != 0 goto offset#137 = offset#119 + 1 {387201912}" -> "offset#137 = offset#119 + 1 {1375402508}";
"if negative#8 == 0 goto $b45 = 125 {1503989848}" -> "$b45 = -125 {601914169}";
"if negative#8 == 0 goto $b45 = 125 {1503989848}" -> "$b45 = 125 {1069759238}";
"$b45 = -125 {601914169}" -> "goto [?= buf[byte1Off] = $b45] {836276532}";
"goto [?= buf[byte1Off] = $b45] {836276532}" -> "buf[byte1Off] = $b45 {1310051190}";
"$b45 = 125 {1069759238}" -> "buf[byte1Off] = $b45 {1310051190}";
"buf[byte1Off] = $b45 {1310051190}" -> "return offset#119 {464008682}";
"offset#137 = offset#119 + 1 {1375402508}" -> "$l46 = value#13 >>> 48 {437121359}";
"$l46 = value#13 >>> 48 {437121359}" -> "$i47 = (int) $l46 {480330392}";
"$i47 = (int) $l46 {480330392}" -> "$b48 = (byte) $i47 {732172738}";
"$b48 = (byte) $i47 {732172738}" -> "buf[offset#119] = $b48 {538596798}";
"buf[offset#119] = $b48 {538596798}" -> "$l49 = value#13 & -72057594037927936L {1214923110}";
"$l49 = value#13 & -72057594037927936L {1214923110}" -> "$b50 = $l49 cmp 0L {766204361}";
"$b50 = $l49 cmp 0L {766204361}" -> "if $b50 != 0 goto offset#155 = offset#137 + 1 {896402210}";
"if $b50 != 0 goto offset#155 = offset#137 + 1 {896402210}" -> "if negative#8 == 0 goto $b52 = 126 {1569269979}";
"if $b50 != 0 goto offset#155 = offset#137 + 1 {896402210}" -> "offset#155 = offset#137 + 1 {169075901}";
"if negative#8 == 0 goto $b52 = 126 {1569269979}" -> "$b52 = -126 {1521995559}";
"if negative#8 == 0 goto $b52 = 126 {1569269979}" -> "$b52 = 126 {1049100764}";
"$b52 = -126 {1521995559}" -> "goto [?= buf[byte1Off] = $b52] {2089708823}";
"goto [?= buf[byte1Off] = $b52] {2089708823}" -> "buf[byte1Off] = $b52 {710093094}";
"$b52 = 126 {1049100764}" -> "buf[byte1Off] = $b52 {710093094}";
"buf[byte1Off] = $b52 {710093094}" -> "return offset#137 {1099972529}";
"offset#155 = offset#137 + 1 {169075901}" -> "$l53 = value#13 >>> 56 {826977165}";
"$l53 = value#13 >>> 56 {826977165}" -> "$i54 = (int) $l53 {619284245}";
"$i54 = (int) $l53 {619284245}" -> "$b55 = (byte) $i54 {529741190}";
"$b55 = (byte) $i54 {529741190}" -> "buf[offset#137] = $b55 {1604333231}";
"buf[offset#137] = $b55 {1604333231}" -> "if negative#8 == 0 goto $b57 = 127 {198815976}";
"if negative#8 == 0 goto $b57 = 127 {198815976}" -> "$b57 = -127 {656882654}";
"if negative#8 == 0 goto $b57 = 127 {198815976}" -> "$b57 = 127 {1758872709}";
"$b57 = -127 {656882654}" -> "goto [?= buf[byte1Off] = $b57] {747450190}";
"goto [?= buf[byte1Off] = $b57] {747450190}" -> "buf[byte1Off] = $b57 {776923015}";
"$b57 = 127 {1758872709}" -> "buf[byte1Off] = $b57 {776923015}";
"buf[byte1Off] = $b57 {776923015}" -> "return offset#155 {1973124703}";
}

digraph writeSortedLong {
"buf := @parameter0: byte[] {1162916610}" -> "offset#1 := @parameter1: int {437244797}";
"offset#1 := @parameter1: int {437244797}" -> "value#2 := @parameter2: long {1786887280}";
"value#2 := @parameter2: long {1786887280}" -> "byte1Off = offset#1 {2141188705}";
"byte1Off = offset#1 {2141188705}" -> "offset#4 = offset#1 + 1 {2031554645}";
"offset#4 = offset#1 + 1 {2031554645}" -> "$b0 = value#2 cmp -119L {303728675}";
"$b0 = value#2 cmp -119L {303728675}" -> "if $b0 >= 0 goto $b49 = value#2 cmp 120L {1802287540}";
"if $b0 >= 0 goto $b49 = value#2 cmp 120L {1802287540}" -> "value#11 = value#2 + 119L {1146279261}";
"if $b0 >= 0 goto $b49 = value#2 cmp 120L {1802287540}" -> "$b49 = value#2 cmp 120L {553980831}";
"value#11 = value#2 + 119L {1146279261}" -> "$l1 = value#11 | 72057594037927935L {1849345000}";
"$l1 = value#11 | 72057594037927935L {1849345000}" -> "$b2 = $l1 cmp -1L {186334215}";
"$b2 = $l1 cmp -1L {186334215}" -> "if $b2 == 0 goto $l7 = value#11 | 281474976710655L {1560152513}";
"if $b2 == 0 goto $l7 = value#11 | 281474976710655L {1560152513}" -> "$i3 = offset#4 {171730324}";
"if $b2 == 0 goto $l7 = value#11 | 281474976710655L {1560152513}" -> "$l7 = value#11 | 281474976710655L {1217039369}";
"$i3 = offset#4 {171730324}" -> "offset#4 = offset#4 + 1 {648070419}";
"offset#4 = offset#4 + 1 {648070419}" -> "$l4 = value#11 >> 56 {1655159057}";
"$l4 = value#11 >> 56 {1655159057}" -> "$i5 = (int) $l4 {1631600212}";
"$i5 = (int) $l4 {1631600212}" -> "$b6 = (byte) $i5 {2139740641}";
"$b6 = (byte) $i5 {2139740641}" -> "buf[$i3] = $b6 {1176468746}";
"buf[$i3] = $b6 {1176468746}" -> "$l7 = value#11 | 281474976710655L {1217039369}";
"$l7 = value#11 | 281474976710655L {1217039369}" -> "$b8 = $l7 cmp -1L {357585421}";
"$b8 = $l7 cmp -1L {357585421}" -> "if $b8 == 0 goto $l13 = value#11 | 1099511627775L {68958485}";
"if $b8 == 0 goto $l13 = value#11 | 1099511627775L {68958485}" -> "$i9 = offset#4 {1873054430}";
"if $b8 == 0 goto $l13 = value#11 | 1099511627775L {68958485}" -> "$l13 = value#11 | 1099511627775L {1776266416}";
"$i9 = offset#4 {1873054430}" -> "offset#4 = offset#4 + 1 {2020834589}";
"offset#4 = offset#4 + 1 {2020834589}" -> "$l10 = value#11 >> 48 {518240676}";
"$l10 = value#11 >> 48 {518240676}" -> "$i11 = (int) $l10 {2107356400}";
"$i11 = (int) $l10 {2107356400}" -> "$b12 = (byte) $i11 {1911151195}";
"$b12 = (byte) $i11 {1911151195}" -> "buf[$i9] = $b12 {1978282158}";
"buf[$i9] = $b12 {1978282158}" -> "$l13 = value#11 | 1099511627775L {1776266416}";
"$l13 = value#11 | 1099511627775L {1776266416}" -> "$b14 = $l13 cmp -1L {131100672}";
"$b14 = $l13 cmp -1L {131100672}" -> "if $b14 == 0 goto $l19 = value#11 | 4294967295L {226024919}";
"if $b14 == 0 goto $l19 = value#11 | 4294967295L {226024919}" -> "$i15 = offset#4 {1893210125}";
"if $b14 == 0 goto $l19 = value#11 | 4294967295L {226024919}" -> "$l19 = value#11 | 4294967295L {359097830}";
"$i15 = offset#4 {1893210125}" -> "offset#4 = offset#4 + 1 {1955346022}";
"offset#4 = offset#4 + 1 {1955346022}" -> "$l16 = value#11 >> 40 {617864643}";
"$l16 = value#11 >> 40 {617864643}" -> "$i17 = (int) $l16 {838463545}";
"$i17 = (int) $l16 {838463545}" -> "$b18 = (byte) $i17 {4394656}";
"$b18 = (byte) $i17 {4394656}" -> "buf[$i15] = $b18 {1229517734}";
"buf[$i15] = $b18 {1229517734}" -> "$l19 = value#11 | 4294967295L {359097830}";
"$l19 = value#11 | 4294967295L {359097830}" -> "$b20 = $l19 cmp -1L {275571611}";
"$b20 = $l19 cmp -1L {275571611}" -> "if $b20 == 0 goto $l25 = value#11 | 16777215L {1468373811}";
"if $b20 == 0 goto $l25 = value#11 | 16777215L {1468373811}" -> "$i21 = offset#4 {28229482}";
"if $b20 == 0 goto $l25 = value#11 | 16777215L {1468373811}" -> "$l25 = value#11 | 16777215L {782835590}";
"$i21 = offset#4 {28229482}" -> "offset#4 = offset#4 + 1 {1982461183}";
"offset#4 = offset#4 + 1 {1982461183}" -> "$l22 = value#11 >> 32 {483008335}";
"$l22 = value#11 >> 32 {483008335}" -> "$i23 = (int) $l22 {637378085}";
"$i23 = (int) $l22 {637378085}" -> "$b24 = (byte) $i23 {1571015029}";
"$b24 = (byte) $i23 {1571015029}" -> "buf[$i21] = $b24 {1748729606}";
"buf[$i21] = $b24 {1748729606}" -> "$l25 = value#11 | 16777215L {782835590}";
"$l25 = value#11 | 16777215L {782835590}" -> "$b26 = $l25 cmp -1L {11175653}";
"$b26 = $l25 cmp -1L {11175653}" -> "if $b26 == 0 goto $l31 = value#11 | 65535L {2030585545}";
"if $b26 == 0 goto $l31 = value#11 | 65535L {2030585545}" -> "$i27 = offset#4 {1308827642}";
"if $b26 == 0 goto $l31 = value#11 | 65535L {2030585545}" -> "$l31 = value#11 | 65535L {1969245824}";
"$i27 = offset#4 {1308827642}" -> "offset#4 = offset#4 + 1 {441070961}";
"offset#4 = offset#4 + 1 {441070961}" -> "$l28 = value#11 >> 24 {830617452}";
"$l28 = value#11 >> 24 {830617452}" -> "$i29 = (int) $l28 {2049469840}";
"$i29 = (int) $l28 {2049469840}" -> "$b30 = (byte) $i29 {587818196}";
"$b30 = (byte) $i29 {587818196}" -> "buf[$i27] = $b30 {79914337}";
"buf[$i27] = $b30 {79914337}" -> "$l31 = value#11 | 65535L {1969245824}";
"$l31 = value#11 | 65535L {1969245824}" -> "$b32 = $l31 cmp -1L {518477739}";
"$b32 = $l31 cmp -1L {518477739}" -> "if $b32 == 0 goto $l37 = value#11 | 255L {1045513429}";
"if $b32 == 0 goto $l37 = value#11 | 255L {1045513429}" -> "$i33 = offset#4 {500755218}";
"if $b32 == 0 goto $l37 = value#11 | 255L {1045513429}" -> "$l37 = value#11 | 255L {1166926504}";
"$i33 = offset#4 {500755218}" -> "offset#4 = offset#4 + 1 {967224589}";
"offset#4 = offset#4 + 1 {967224589}" -> "$l34 = value#11 >> 16 {244988941}";
"$l34 = value#11 >> 16 {244988941}" -> "$i35 = (int) $l34 {47724054}";
"$i35 = (int) $l34 {47724054}" -> "$b36 = (byte) $i35 {647064172}";
"$b36 = (byte) $i35 {647064172}" -> "buf[$i33] = $b36 {1961688319}";
"buf[$i33] = $b36 {1961688319}" -> "$l37 = value#11 | 255L {1166926504}";
"$l37 = value#11 | 255L {1166926504}" -> "$b38 = $l37 cmp -1L {861455119}";
"$b38 = $l37 cmp -1L {861455119}" -> "if $b38 == 0 goto $i43 = offset#4 {1249754769}";
"if $b38 == 0 goto $i43 = offset#4 {1249754769}" -> "$i39 = offset#4 {428625626}";
"if $b38 == 0 goto $i43 = offset#4 {1249754769}" -> "$i43 = offset#4 {238927215}";
"$i39 = offset#4 {428625626}" -> "offset#4 = offset#4 + 1 {1824106079}";
"offset#4 = offset#4 + 1 {1824106079}" -> "$l40 = value#11 >> 8 {749432661}";
"$l40 = value#11 >> 8 {749432661}" -> "$i41 = (int) $l40 {218214337}";
"$i41 = (int) $l40 {218214337}" -> "$b42 = (byte) $i41 {2118579826}";
"$b42 = (byte) $i41 {2118579826}" -> "buf[$i39] = $b42 {2045013375}";
"buf[$i39] = $b42 {2045013375}" -> "$i43 = offset#4 {238927215}";
"$i43 = offset#4 {238927215}" -> "offset#4 = offset#4 + 1 {1191264188}";
"offset#4 = offset#4 + 1 {1191264188}" -> "$i44 = (int) value#11 {11351585}";
"$i44 = (int) value#11 {11351585}" -> "$b45 = (byte) $i44 {1662530974}";
"$b45 = (byte) $i44 {1662530974}" -> "buf[$i43] = $b45 {766118558}";
"buf[$i43] = $b45 {766118558}" -> "$i46 = offset#4 - byte1Off {1523381626}";
"$i46 = offset#4 - byte1Off {1523381626}" -> "valueLen#106 = $i46 - 1 {1520545086}";
"valueLen#106 = $i46 - 1 {1520545086}" -> "$i47 = 8 - valueLen#106 {533618541}";
"$i47 = 8 - valueLen#106 {533618541}" -> "$b48 = (byte) $i47 {1708144290}";
"$b48 = (byte) $i47 {1708144290}" -> "buf[byte1Off] = $b48 {880882520}";
"buf[byte1Off] = $b48 {880882520}" -> "goto [?= return offset#4] {360359109}";
"goto [?= return offset#4] {360359109}" -> "return offset#4 {675421498}";
"$b49 = value#2 cmp 120L {553980831}" -> "if $b49 <= 0 goto $l98 = value#2 + 127L {1629083638}";
"if $b49 <= 0 goto $l98 = value#2 + 127L {1629083638}" -> "value#119 = value#2 - 121L {697029056}";
"if $b49 <= 0 goto $l98 = value#2 + 127L {1629083638}" -> "$l98 = value#2 + 127L {1084809613}";
"value#119 = value#2 - 121L {697029056}" -> "$l50 = value#119 & -72057594037927936L {271576451}";
"$l50 = value#119 & -72057594037927936L {271576451}" -> "$b51 = $l50 cmp 0L {883754425}";
"$b51 = $l50 cmp 0L {883754425}" -> "if $b51 == 0 goto $l56 = value#119 & -281474976710656L {1299266922}";
"if $b51 == 0 goto $l56 = value#119 & -281474976710656L {1299266922}" -> "$i52 = offset#4 {743605485}";
"if $b51 == 0 goto $l56 = value#119 & -281474976710656L {1299266922}" -> "$l56 = value#119 & -281474976710656L {2137947994}";
"$i52 = offset#4 {743605485}" -> "offset#4 = offset#4 + 1 {1888406547}";
"offset#4 = offset#4 + 1 {1888406547}" -> "$l53 = value#119 >> 56 {1109094244}";
"$l53 = value#119 >> 56 {1109094244}" -> "$i54 = (int) $l53 {1156828512}";
"$i54 = (int) $l53 {1156828512}" -> "$b55 = (byte) $i54 {1908289766}";
"$b55 = (byte) $i54 {1908289766}" -> "buf[$i52] = $b55 {1013719279}";
"buf[$i52] = $b55 {1013719279}" -> "$l56 = value#119 & -281474976710656L {2137947994}";
"$l56 = value#119 & -281474976710656L {2137947994}" -> "$b57 = $l56 cmp 0L {788713538}";
"$b57 = $l56 cmp 0L {788713538}" -> "if $b57 == 0 goto $l62 = value#119 & -1099511627776L {1784328589}";
"if $b57 == 0 goto $l62 = value#119 & -1099511627776L {1784328589}" -> "$i58 = offset#4 {107088040}";
"if $b57 == 0 goto $l62 = value#119 & -1099511627776L {1784328589}" -> "$l62 = value#119 & -1099511627776L {160580499}";
"$i58 = offset#4 {107088040}" -> "offset#4 = offset#4 + 1 {1062951142}";
"offset#4 = offset#4 + 1 {1062951142}" -> "$l59 = value#119 >> 48 {1686787540}";
"$l59 = value#119 >> 48 {1686787540}" -> "$i60 = (int) $l59 {32746955}";
"$i60 = (int) $l59 {32746955}" -> "$b61 = (byte) $i60 {324080948}";
"$b61 = (byte) $i60 {324080948}" -> "buf[$i58] = $b61 {945992593}";
"buf[$i58] = $b61 {945992593}" -> "$l62 = value#119 & -1099511627776L {160580499}";
"$l62 = value#119 & -1099511627776L {160580499}" -> "$b63 = $l62 cmp 0L {697392058}";
"$b63 = $l62 cmp 0L {697392058}" -> "if $b63 == 0 goto $l68 = value#119 & -4294967296L {865640872}";
"if $b63 == 0 goto $l68 = value#119 & -4294967296L {865640872}" -> "$i64 = offset#4 {6078806}";
"if $b63 == 0 goto $l68 = value#119 & -4294967296L {865640872}" -> "$l68 = value#119 & -4294967296L {211888649}";
"$i64 = offset#4 {6078806}" -> "offset#4 = offset#4 + 1 {598935148}";
"offset#4 = offset#4 + 1 {598935148}" -> "$l65 = value#119 >> 40 {1950235238}";
"$l65 = value#119 >> 40 {1950235238}" -> "$i66 = (int) $l65 {1334166251}";
"$i66 = (int) $l65 {1334166251}" -> "$b67 = (byte) $i66 {431048630}";
"$b67 = (byte) $i66 {431048630}" -> "buf[$i64] = $b67 {2074459407}";
"buf[$i64] = $b67 {2074459407}" -> "$l68 = value#119 & -4294967296L {211888649}";
"$l68 = value#119 & -4294967296L {211888649}" -> "$b69 = $l68 cmp 0L {1321935098}";
"$b69 = $l68 cmp 0L {1321935098}" -> "if $b69 == 0 goto $l74 = value#119 & -16777216L {596486310}";
"if $b69 == 0 goto $l74 = value#119 & -16777216L {596486310}" -> "$i70 = offset#4 {693502015}";
"if $b69 == 0 goto $l74 = value#119 & -16777216L {596486310}" -> "$l74 = value#119 & -16777216L {86873035}";
"$i70 = offset#4 {693502015}" -> "offset#4 = offset#4 + 1 {1049438495}";
"offset#4 = offset#4 + 1 {1049438495}" -> "$l71 = value#119 >> 32 {112068521}";
"$l71 = value#119 >> 32 {112068521}" -> "$i72 = (int) $l71 {1371280306}";
"$i72 = (int) $l71 {1371280306}" -> "$b73 = (byte) $i72 {2053839771}";
"$b73 = (byte) $i72 {2053839771}" -> "buf[$i70] = $b73 {1624081279}";
"buf[$i70] = $b73 {1624081279}" -> "$l74 = value#119 & -16777216L {86873035}";
"$l74 = value#119 & -16777216L {86873035}" -> "$b75 = $l74 cmp 0L {1570199687}";
"$b75 = $l74 cmp 0L {1570199687}" -> "if $b75 == 0 goto $l80 = value#119 & -65536L {1028956946}";
"if $b75 == 0 goto $l80 = value#119 & -65536L {1028956946}" -> "$i76 = offset#4 {1681538093}";
"if $b75 == 0 goto $l80 = value#119 & -65536L {1028956946}" -> "$l80 = value#119 & -65536L {723626732}";
"$i76 = offset#4 {1681538093}" -> "offset#4 = offset#4 + 1 {59638605}";
"offset#4 = offset#4 + 1 {59638605}" -> "$l77 = value#119 >> 24 {209555593}";
"$l77 = value#119 >> 24 {209555593}" -> "$i78 = (int) $l77 {2132442656}";
"$i78 = (int) $l77 {2132442656}" -> "$b79 = (byte) $i78 {938004314}";
"$b79 = (byte) $i78 {938004314}" -> "buf[$i76] = $b79 {379356413}";
"buf[$i76] = $b79 {379356413}" -> "$l80 = value#119 & -65536L {723626732}";
"$l80 = value#119 & -65536L {723626732}" -> "$b81 = $l80 cmp 0L {34406932}";
"$b81 = $l80 cmp 0L {34406932}" -> "if $b81 == 0 goto $l86 = value#119 & -256L {1231258496}";
"if $b81 == 0 goto $l86 = value#119 & -256L {1231258496}" -> "$i82 = offset#4 {1963008965}";
"if $b81 == 0 goto $l86 = value#119 & -256L {1231258496}" -> "$l86 = value#119 & -256L {1853549241}";
"$i82 = offset#4 {1963008965}" -> "offset#4 = offset#4 + 1 {536249043}";
"offset#4 = offset#4 + 1 {536249043}" -> "$l83 = value#119 >> 16 {1078892226}";
"$l83 = value#119 >> 16 {1078892226}" -> "$i84 = (int) $l83 {1795515394}";
"$i84 = (int) $l83 {1795515394}" -> "$b85 = (byte) $i84 {1117339969}";
"$b85 = (byte) $i84 {1117339969}" -> "buf[$i82] = $b85 {306714070}";
"buf[$i82] = $b85 {306714070}" -> "$l86 = value#119 & -256L {1853549241}";
"$l86 = value#119 & -256L {1853549241}" -> "$b87 = $l86 cmp 0L {964778230}";
"$b87 = $l86 cmp 0L {964778230}" -> "if $b87 == 0 goto $i92 = offset#4 {1449924975}";
"if $b87 == 0 goto $i92 = offset#4 {1449924975}" -> "$i88 = offset#4 {652042575}";
"if $b87 == 0 goto $i92 = offset#4 {1449924975}" -> "$i92 = offset#4 {1941433411}";
"$i88 = offset#4 {652042575}" -> "offset#4 = offset#4 + 1 {354999178}";
"offset#4 = offset#4 + 1 {354999178}" -> "$l89 = value#119 >> 8 {1368857454}";
"$l89 = value#119 >> 8 {1368857454}" -> "$i90 = (int) $l89 {36732509}";
"$i90 = (int) $l89 {36732509}" -> "$b91 = (byte) $i90 {1771813165}";
"$b91 = (byte) $i90 {1771813165}" -> "buf[$i88] = $b91 {458330793}";
"buf[$i88] = $b91 {458330793}" -> "$i92 = offset#4 {1941433411}";
"$i92 = offset#4 {1941433411}" -> "offset#4 = offset#4 + 1 {1204904393}";
"offset#4 = offset#4 + 1 {1204904393}" -> "$i93 = (int) value#119 {127346960}";
"$i93 = (int) value#119 {127346960}" -> "$b94 = (byte) $i93 {1267599445}";
"$b94 = (byte) $i93 {1267599445}" -> "buf[$i92] = $b94 {127788996}";
"buf[$i92] = $b94 {127788996}" -> "$i95 = offset#4 - byte1Off {1097901440}";
"$i95 = offset#4 - byte1Off {1097901440}" -> "valueLen#214 = $i95 - 1 {480121188}";
"valueLen#214 = $i95 - 1 {480121188}" -> "$i96 = 247 + valueLen#214 {378439469}";
"$i96 = 247 + valueLen#214 {378439469}" -> "$b97 = (byte) $i96 {69561205}";
"$b97 = (byte) $i96 {69561205}" -> "buf[byte1Off] = $b97 {354298962}";
"buf[byte1Off] = $b97 {354298962}" -> "goto [?= return offset#4] {558786929}";
"goto [?= return offset#4] {558786929}" -> "return offset#4 {675421498}";
"$l98 = value#2 + 127L {1084809613}" -> "$i99 = (int) $l98 {2027444671}";
"$i99 = (int) $l98 {2027444671}" -> "$b100 = (byte) $i99 {1660510353}";
"$b100 = (byte) $i99 {1660510353}" -> "buf[byte1Off] = $b100 {365855956}";
"buf[byte1Off] = $b100 {365855956}" -> "return offset#4 {675421498}";
}

digraph readSortedLong {
"buf := @parameter0: byte[] {1773771372}" -> "off#1 := @parameter1: int {1011923168}";
"off#1 := @parameter1: int {1011923168}" -> "off#4 = off#1 + 1 {2092343021}";
"off#4 = off#1 + 1 {2092343021}" -> "$b0 = buf[off#1] {1338058536}";
"$b0 = buf[off#1] {1338058536}" -> "b1 = $b0 & 255 {155575943}";
"b1 = $b0 & 255 {155575943}" -> "if b1 >= 8 goto (branch) {1372983833}";
"if b1 >= 8 goto (branch) {1372983833}" -> "byteLen#13 = 8 - b1 {365882874}";
"if b1 >= 8 goto (branch) {1372983833}" -> "if b1 <= 247 goto $i1 = b1 - 127 {1750316563}";
"byteLen#13 = 8 - b1 {365882874}" -> "negative#15 = 1 {1573076109}";
"negative#15 = 1 {1573076109}" -> "goto [?= (branch)] {1065401330}";
"goto [?= (branch)] {1065401330}" -> "if negative#15 == 0 goto value#28 = 0L {1740494656}";
"if b1 <= 247 goto $i1 = b1 - 127 {1750316563}" -> "byteLen#13 = b1 - 247 {1980016062}";
"if b1 <= 247 goto $i1 = b1 - 127 {1750316563}" -> "$i1 = b1 - 127 {519111610}";
"byteLen#13 = b1 - 247 {1980016062}" -> "negative#15 = 0 {1822508679}";
"negative#15 = 0 {1822508679}" -> "goto [?= (branch)] {2095345154}";
"goto [?= (branch)] {2095345154}" -> "if negative#15 == 0 goto value#28 = 0L {1740494656}";
"$i1 = b1 - 127 {519111610}" -> "$l2 = (long) $i1 {1094384152}";
"$l2 = (long) $i1 {1094384152}" -> "return $l2 {512762623}";
"if negative#15 == 0 goto value#28 = 0L {1740494656}" -> "value#28 = -1L {543218876}";
"if negative#15 == 0 goto value#28 = 0L {1740494656}" -> "value#28 = 0L {1949543485}";
"value#28 = -1L {543218876}" -> "goto [?= (branch)] {703469607}";
"goto [?= (branch)] {703469607}" -> "if byteLen#13 <= 7 goto (branch) {250630141}";
"value#28 = 0L {1949543485}" -> "if byteLen#13 <= 7 goto (branch) {250630141}";
"if byteLen#13 <= 7 goto (branch) {250630141}" -> "$l3 = value#28 << 8 {50174692}";
"if byteLen#13 <= 7 goto (branch) {250630141}" -> "if byteLen#13 <= 6 goto (branch) {919802176}";
"$l3 = value#28 << 8 {50174692}" -> "$i4 = off#4 {1942157212}";
"$i4 = off#4 {1942157212}" -> "off#4 = off#4 + 1 {495348154}";
"off#4 = off#4 + 1 {495348154}" -> "$b5 = buf[$i4] {1784916896}";
"$b5 = buf[$i4] {1784916896}" -> "$s6 = $b5 & 255 {1670288664}";
"$s6 = $b5 & 255 {1670288664}" -> "$l7 = (long) $s6 {1298918250}";
"$l7 = (long) $s6 {1298918250}" -> "value#28 = $l3 | $l7 {443933453}";
"value#28 = $l3 | $l7 {443933453}" -> "if byteLen#13 <= 6 goto (branch) {919802176}";
"if byteLen#13 <= 6 goto (branch) {919802176}" -> "$l8 = value#28 << 8 {92067609}";
"if byteLen#13 <= 6 goto (branch) {919802176}" -> "if byteLen#13 <= 5 goto (branch) {6885048}";
"$l8 = value#28 << 8 {92067609}" -> "$i9 = off#4 {2002032795}";
"$i9 = off#4 {2002032795}" -> "off#4 = off#4 + 1 {729989823}";
"off#4 = off#4 + 1 {729989823}" -> "$b10 = buf[$i9] {1218776265}";
"$b10 = buf[$i9] {1218776265}" -> "$s11 = $b10 & 255 {1818591650}";
"$s11 = $b10 & 255 {1818591650}" -> "$l12 = (long) $s11 {1364144555}";
"$l12 = (long) $s11 {1364144555}" -> "value#28 = $l8 | $l12 {1014208017}";
"value#28 = $l8 | $l12 {1014208017}" -> "if byteLen#13 <= 5 goto (branch) {6885048}";
"if byteLen#13 <= 5 goto (branch) {6885048}" -> "$l13 = value#28 << 8 {1564472168}";
"if byteLen#13 <= 5 goto (branch) {6885048}" -> "if byteLen#13 <= 4 goto (branch) {1631594556}";
"$l13 = value#28 << 8 {1564472168}" -> "$i14 = off#4 {1670003885}";
"$i14 = off#4 {1670003885}" -> "off#4 = off#4 + 1 {2116858474}";
"off#4 = off#4 + 1 {2116858474}" -> "$b15 = buf[$i14] {1546300020}";
"$b15 = buf[$i14] {1546300020}" -> "$s16 = $b15 & 255 {579195992}";
"$s16 = $b15 & 255 {579195992}" -> "$l17 = (long) $s16 {958504320}";
"$l17 = (long) $s16 {958504320}" -> "value#28 = $l13 | $l17 {1731426263}";
"value#28 = $l13 | $l17 {1731426263}" -> "if byteLen#13 <= 4 goto (branch) {1631594556}";
"if byteLen#13 <= 4 goto (branch) {1631594556}" -> "$l18 = value#28 << 8 {1784008049}";
"if byteLen#13 <= 4 goto (branch) {1631594556}" -> "if byteLen#13 <= 3 goto (branch) {1094544937}";
"$l18 = value#28 << 8 {1784008049}" -> "$i19 = off#4 {472092547}";
"$i19 = off#4 {472092547}" -> "off#4 = off#4 + 1 {884709958}";
"off#4 = off#4 + 1 {884709958}" -> "$b20 = buf[$i19] {1883367397}";
"$b20 = buf[$i19] {1883367397}" -> "$s21 = $b20 & 255 {1515073813}";
"$s21 = $b20 & 255 {1515073813}" -> "$l22 = (long) $s21 {852486576}";
"$l22 = (long) $s21 {852486576}" -> "value#28 = $l18 | $l22 {412626515}";
"value#28 = $l18 | $l22 {412626515}" -> "if byteLen#13 <= 3 goto (branch) {1094544937}";
"if byteLen#13 <= 3 goto (branch) {1094544937}" -> "$l23 = value#28 << 8 {706666118}";
"if byteLen#13 <= 3 goto (branch) {1094544937}" -> "if byteLen#13 <= 2 goto (branch) {910730285}";
"$l23 = value#28 << 8 {706666118}" -> "$i24 = off#4 {1774721628}";
"$i24 = off#4 {1774721628}" -> "off#4 = off#4 + 1 {1129728937}";
"off#4 = off#4 + 1 {1129728937}" -> "$b25 = buf[$i24] {534796203}";
"$b25 = buf[$i24] {534796203}" -> "$s26 = $b25 & 255 {1935714448}";
"$s26 = $b25 & 255 {1935714448}" -> "$l27 = (long) $s26 {35307094}";
"$l27 = (long) $s26 {35307094}" -> "value#28 = $l23 | $l27 {1607603205}";
"value#28 = $l23 | $l27 {1607603205}" -> "if byteLen#13 <= 2 goto (branch) {910730285}";
"if byteLen#13 <= 2 goto (branch) {910730285}" -> "$l28 = value#28 << 8 {1366916768}";
"if byteLen#13 <= 2 goto (branch) {910730285}" -> "if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1222628873}";
"$l28 = value#28 << 8 {1366916768}" -> "$i29 = off#4 {1948664571}";
"$i29 = off#4 {1948664571}" -> "off#4 = off#4 + 1 {311604298}";
"off#4 = off#4 + 1 {311604298}" -> "$b30 = buf[$i29] {142886086}";
"$b30 = buf[$i29] {142886086}" -> "$s31 = $b30 & 255 {1923559922}";
"$s31 = $b30 & 255 {1923559922}" -> "$l32 = (long) $s31 {1964047112}";
"$l32 = (long) $s31 {1964047112}" -> "value#28 = $l28 | $l32 {1863900342}";
"value#28 = $l28 | $l32 {1863900342}" -> "if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1222628873}";
"if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1222628873}" -> "$l33 = value#28 << 8 {1084835115}";
"if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1222628873}" -> "$l38 = value#28 << 8 {924323706}";
"$l33 = value#28 << 8 {1084835115}" -> "$i34 = off#4 {1295405473}";
"$i34 = off#4 {1295405473}" -> "off#4 = off#4 + 1 {572207913}";
"off#4 = off#4 + 1 {572207913}" -> "$b35 = buf[$i34] {672246364}";
"$b35 = buf[$i34] {672246364}" -> "$s36 = $b35 & 255 {607365013}";
"$s36 = $b35 & 255 {607365013}" -> "$l37 = (long) $s36 {1598708289}";
"$l37 = (long) $s36 {1598708289}" -> "value#28 = $l33 | $l37 {457836094}";
"value#28 = $l33 | $l37 {457836094}" -> "$l38 = value#28 << 8 {924323706}";
"$l38 = value#28 << 8 {924323706}" -> "off#119 = off#4 + 1 {1609352689}";
"off#119 = off#4 + 1 {1609352689}" -> "$b39 = buf[off#4] {687366825}";
"$b39 = buf[off#4] {687366825}" -> "$s40 = $b39 & 255 {1873701890}";
"$s40 = $b39 & 255 {1873701890}" -> "$l41 = (long) $s40 {1456795467}";
"$l41 = (long) $s40 {1456795467}" -> "value#125 = $l38 | $l41 {2060507514}";
"value#125 = $l38 | $l41 {2060507514}" -> "if negative#15 == 0 goto value#130 = value#125 + 121L {400388450}";
"if negative#15 == 0 goto value#130 = value#125 + 121L {400388450}" -> "value#130 = value#125 - 119L {1311443791}";
"if negative#15 == 0 goto value#130 = value#125 + 121L {400388450}" -> "value#130 = value#125 + 121L {1508800959}";
"value#130 = value#125 - 119L {1311443791}" -> "goto [?= return value#130] {1830970344}";
"goto [?= return value#130] {1830970344}" -> "return value#130 {909891615}";
"value#130 = value#125 + 121L {1508800959}" -> "return value#130 {909891615}";
}

digraph getReadSortedLongLength {
"buf := @parameter0: byte[] {1736544550}" -> "off := @parameter1: int {9138447}";
"off := @parameter1: int {9138447}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadSortedIntLength(byte[],int)>(buf, off) {1277894671}";
"$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadSortedIntLength(byte[],int)>(buf, off) {1277894671}" -> "return $i0 {1478463371}";
}

digraph getReadSortedIntLength {
"buf := @parameter0: byte[] {2002919016}" -> "off := @parameter1: int {1770196668}";
"off := @parameter1: int {1770196668}" -> "$b0 = buf[off] {1437248549}";
"$b0 = buf[off] {1437248549}" -> "b1 = $b0 & 255 {355309528}";
"b1 = $b0 & 255 {355309528}" -> "if b1 >= 8 goto (branch) {1750171590}";
"if b1 >= 8 goto (branch) {1750171590}" -> "$i1 = 9 - b1 {1009356465}";
"if b1 >= 8 goto (branch) {1750171590}" -> "if b1 <= 247 goto return 1 {163015522}";
"$i1 = 9 - b1 {1009356465}" -> "return $i1 {1600485821}";
"if b1 <= 247 goto return 1 {163015522}" -> "$i2 = 1 + b1 {1220512554}";
"if b1 <= 247 goto return 1 {163015522}" -> "return 1 {1761403271}";
"$i2 = 1 + b1 {1220512554}" -> "$i3 = $i2 - 247 {1563847059}";
"$i3 = $i2 - 247 {1563847059}" -> "return $i3 {781465581}";
}

digraph readSortedInt {
"buf := @parameter0: byte[] {1115538462}" -> "off#1 := @parameter1: int {124420407}";
"off#1 := @parameter1: int {124420407}" -> "off#4 = off#1 + 1 {1261968913}";
"off#4 = off#1 + 1 {1261968913}" -> "$b0 = buf[off#1] {1613633821}";
"$b0 = buf[off#1] {1613633821}" -> "b1 = $b0 & 255 {717110949}";
"b1 = $b0 & 255 {717110949}" -> "if b1 >= 8 goto (branch) {1187545272}";
"if b1 >= 8 goto (branch) {1187545272}" -> "byteLen#13 = 8 - b1 {230129752}";
"if b1 >= 8 goto (branch) {1187545272}" -> "if b1 <= 247 goto $i1 = b1 - 127 {821232960}";
"byteLen#13 = 8 - b1 {230129752}" -> "negative#15 = 1 {1454699093}";
"negative#15 = 1 {1454699093}" -> "goto [?= (branch)] {1739595163}";
"goto [?= (branch)] {1739595163}" -> "if negative#15 == 0 goto value#27 = 0 {1184979318}";
"if b1 <= 247 goto $i1 = b1 - 127 {821232960}" -> "byteLen#13 = b1 - 247 {311440526}";
"if b1 <= 247 goto $i1 = b1 - 127 {821232960}" -> "$i1 = b1 - 127 {700542641}";
"byteLen#13 = b1 - 247 {311440526}" -> "negative#15 = 0 {1050310855}";
"negative#15 = 0 {1050310855}" -> "goto [?= (branch)] {196228436}";
"goto [?= (branch)] {196228436}" -> "if negative#15 == 0 goto value#27 = 0 {1184979318}";
"$i1 = b1 - 127 {700542641}" -> "return $i1 {860087880}";
"if negative#15 == 0 goto value#27 = 0 {1184979318}" -> "value#27 = -1 {1401193066}";
"if negative#15 == 0 goto value#27 = 0 {1184979318}" -> "value#27 = 0 {1575357944}";
"value#27 = -1 {1401193066}" -> "goto [?= (branch)] {522324869}";
"goto [?= (branch)] {522324869}" -> "if byteLen#13 <= 3 goto (branch) {1443619832}";
"value#27 = 0 {1575357944}" -> "if byteLen#13 <= 3 goto (branch) {1443619832}";
"if byteLen#13 <= 3 goto (branch) {1443619832}" -> "$i2 = value#27 << 8 {1054634130}";
"if byteLen#13 <= 3 goto (branch) {1443619832}" -> "if byteLen#13 <= 2 goto (branch) {555035265}";
"$i2 = value#27 << 8 {1054634130}" -> "$i3 = off#4 {649628997}";
"$i3 = off#4 {649628997}" -> "off#4 = off#4 + 1 {2075996640}";
"off#4 = off#4 + 1 {2075996640}" -> "$b4 = buf[$i3] {1178975173}";
"$b4 = buf[$i3] {1178975173}" -> "$s5 = $b4 & 255 {1365603320}";
"$s5 = $b4 & 255 {1365603320}" -> "value#27 = $i2 | $s5 {682977835}";
"value#27 = $i2 | $s5 {682977835}" -> "if byteLen#13 <= 2 goto (branch) {555035265}";
"if byteLen#13 <= 2 goto (branch) {555035265}" -> "$i6 = value#27 << 8 {1525899435}";
"if byteLen#13 <= 2 goto (branch) {555035265}" -> "if byteLen#13 <= 1 goto $i14 = value#27 << 8 {520321276}";
"$i6 = value#27 << 8 {1525899435}" -> "$i7 = off#4 {1731726723}";
"$i7 = off#4 {1731726723}" -> "off#4 = off#4 + 1 {52536663}";
"off#4 = off#4 + 1 {52536663}" -> "$b8 = buf[$i7] {1108765600}";
"$b8 = buf[$i7] {1108765600}" -> "$s9 = $b8 & 255 {1730116247}";
"$s9 = $b8 & 255 {1730116247}" -> "value#27 = $i6 | $s9 {404770262}";
"value#27 = $i6 | $s9 {404770262}" -> "if byteLen#13 <= 1 goto $i14 = value#27 << 8 {520321276}";
"if byteLen#13 <= 1 goto $i14 = value#27 << 8 {520321276}" -> "$i10 = value#27 << 8 {559392975}";
"if byteLen#13 <= 1 goto $i14 = value#27 << 8 {520321276}" -> "$i14 = value#27 << 8 {1082596345}";
"$i10 = value#27 << 8 {559392975}" -> "$i11 = off#4 {507155060}";
"$i11 = off#4 {507155060}" -> "off#4 = off#4 + 1 {1251083610}";
"off#4 = off#4 + 1 {1251083610}" -> "$b12 = buf[$i11] {1444928791}";
"$b12 = buf[$i11] {1444928791}" -> "$s13 = $b12 & 255 {108379769}";
"$s13 = $b12 & 255 {108379769}" -> "value#27 = $i10 | $s13 {1959283416}";
"value#27 = $i10 | $s13 {1959283416}" -> "$i14 = value#27 << 8 {1082596345}";
"$i14 = value#27 << 8 {1082596345}" -> "off#67 = off#4 + 1 {844066201}";
"off#67 = off#4 + 1 {844066201}" -> "$b15 = buf[off#4] {1248846074}";
"$b15 = buf[off#4] {1248846074}" -> "$s16 = $b15 & 255 {2064199777}";
"$s16 = $b15 & 255 {2064199777}" -> "value#72 = $i14 | $s16 {121563066}";
"value#72 = $i14 | $s16 {121563066}" -> "if negative#15 == 0 goto value#74 = value#72 + 121 {1745790781}";
"if negative#15 == 0 goto value#74 = value#72 + 121 {1745790781}" -> "value#74 = value#72 + -119 {1200310617}";
"if negative#15 == 0 goto value#74 = value#72 + 121 {1745790781}" -> "value#74 = value#72 + 121 {1574255206}";
"value#74 = value#72 + -119 {1200310617}" -> "goto [?= return value#74] {930637093}";
"goto [?= return value#74] {930637093}" -> "return value#74 {1562579321}";
"value#74 = value#72 + 121 {1574255206}" -> "return value#74 {1562579321}";
}


