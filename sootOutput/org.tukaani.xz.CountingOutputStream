    public void <init>(java.io.OutputStream)
    {
        org.tukaani.xz.CountingOutputStream this;
        java.io.OutputStream out;

        this := @this: org.tukaani.xz.CountingOutputStream;

        out := @parameter0: java.io.OutputStream;

        specialinvoke this.<org.tukaani.xz.FinishableOutputStream: void <init>()>();

        this.<org.tukaani.xz.CountingOutputStream: long size> = 0L;

        this.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out> = out;

        return;
    }

    public long getSize()
    {
        org.tukaani.xz.CountingOutputStream this;
        long $l0;

        this := @this: org.tukaani.xz.CountingOutputStream;

        $l0 = this.<org.tukaani.xz.CountingOutputStream: long size>;

        return $l0;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.tukaani.xz.CountingOutputStream this;
        byte[] b;
        int off, len;
        java.io.OutputStream $r0;
        long $l0, $l2, $l3, $l4;
        byte $b1;

        this := @this: org.tukaani.xz.CountingOutputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $r0 = this.<org.tukaani.xz.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>(b, off, len);

        $l0 = this.<org.tukaani.xz.CountingOutputStream: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        $l2 = this.<org.tukaani.xz.CountingOutputStream: long size>;

        $l3 = (long) len;

        $l4 = $l2 + $l3;

        this.<org.tukaani.xz.CountingOutputStream: long size> = $l4;

     label1:
        return;
    }


