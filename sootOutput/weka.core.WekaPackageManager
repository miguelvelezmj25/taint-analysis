    static void <clinit>()
    {
        java.io.File $r0, $r9, $r11, $r18, $r20, $r28, $r30;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r10, $r13, $r15, $r16, $r19, $r22, $r24, $r26, $r29, $r32, $r34, $r36;
        java.lang.String $r2, $r4, $r6, $r8, $r12, $r14, $r17, $r21, $r23, $r25, $r27, $r31, $r33, $r35, $r37;
        weka.core.packageManagement.PackageManager $r38;
        weka.core.WekaPackageClassLoaderManager $r39;

        <weka.core.WekaPackageManager: java.lang.String WEKAFILES_DIR_NAME> = "wekafiles";

        $r0 = new java.io.File;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = <weka.core.WekaPackageManager: java.lang.String WEKAFILES_DIR_NAME>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r8);

        <weka.core.WekaPackageManager: java.io.File WEKA_HOME> = $r0;

        $r9 = new java.io.File;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r12 = virtualinvoke $r11.<java.io.File: java.lang.String toString()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = <java.io.File: java.lang.String separator>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("packages");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r17);

        <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR> = $r9;

        <weka.core.WekaPackageManager: java.lang.String PROPERTIES_DIR_NAME> = "props";

        $r18 = new java.io.File;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r21 = virtualinvoke $r20.<java.io.File: java.lang.String toString()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = <java.io.File: java.lang.String separator>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = <weka.core.WekaPackageManager: java.lang.String PROPERTIES_DIR_NAME>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r27);

        <weka.core.WekaPackageManager: java.io.File PROPERTIES_DIR> = $r18;

        <weka.core.WekaPackageManager: java.lang.String NATIVE_LIBS_DIR_NAME> = "native";

        $r28 = new java.io.File;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r31 = virtualinvoke $r30.<java.io.File: java.lang.String toString()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = <java.io.File: java.lang.String separator>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = <weka.core.WekaPackageManager: java.lang.String NATIVE_LIBS_DIR_NAME>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>($r37);

        <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR> = $r28;

        $r38 = staticinvoke <weka.core.packageManagement.PackageManager: weka.core.packageManagement.PackageManager create()>();

        <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER> = $r38;

        <weka.core.WekaPackageManager: boolean INITIAL_CACHE_BUILD_NEEDED> = 0;

        <weka.core.WekaPackageManager: java.lang.String PACKAGE_LIST_FILENAME> = "packageListWithVersion.txt";

        <weka.core.WekaPackageManager: java.lang.String PRIMARY_REPOSITORY> = "http://weka.sourceforge.net/packageMetaData";

        <weka.core.WekaPackageManager: boolean USER_SET_REPO> = 0;

        <weka.core.WekaPackageManager: java.lang.String PACKAGE_MANAGER_PROPS_FILE_NAME> = "PackageManager.props";

        <weka.core.WekaPackageManager: boolean m_loadPackages> = 1;

        <weka.core.WekaPackageManager: boolean m_initialPackageLoadingInProcess> = 0;

        staticinvoke <weka.core.WekaPackageManager: boolean establishWekaHome()>();

        $r39 = staticinvoke <weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageClassLoaderManager getWekaPackageClassLoaderManager()>();

        virtualinvoke $r39.<weka.core.WekaPackageClassLoaderManager: void injectMTJCoreClasses()>();

        return;
    }

    public static synchronized void loadPackages(boolean)
    {
        boolean verbose;

        verbose := @parameter0: boolean;

        staticinvoke <weka.core.WekaPackageManager: void loadPackages(boolean,boolean,boolean)>(verbose, 0, 1);

        return;
    }

    protected static boolean establishWekaHome()
    {
        java.lang.Exception ex, e, $r3, $r116;
        weka.core.Environment env;
        java.lang.String wh, repURL, pluginManagerDisableList, s, $r9, $r12, $r16, $r18, $r20, $r24, $r26, $r28, $r30, nativePath#59, $r32, $r35, $r38, nativePath#74, $r47, $r50, $r57, $r60, $r67, $r70, repURL#134, $r77, $r79, $r82, $r89, $r97, $r101, $r103, $r106, $r109, tempCacheString#209, tempCacheString#214, tempCacheString#219, tempCacheString#229, $r119, $r121, $r123, $r125, $r129, $r132, $r136, $r139, offline#290, loadPackages#298, $r143, $r145, $r147, $r149, offline#341, loadPackages#351, $r156;
        java.io.File repPropsFile, cacheDir, packagesList, generalProps, $r5, $r6, $r13, $r21, $r29, $r31, $r37, $r41, $r42, $r46, $r51, $r52, $r56, $r61, $r62, $r66, $r72, $r74, $r76, $r98, $r100, $r117, $r140, $r142;
        java.util.Properties repProps, gProps, $r83, $r150;
        java.net.URI tempURI, $r114;
        java.util.ArrayList disable, $r155;
        java.lang.String[] parts, l14;
        int l15, $i0, $i1, $i2, $i3, $i4, l16#375;
        boolean $z0, $z1, ok#79, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z20, $z21;
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        java.io.InputStream $r2;
        weka.core.logging.Logger$Level $r4, $r85, $r133;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r14, $r15, $r17, $r19, $r22, $r23, $r25, $r27, $r33, $r34, $r36, $r39, $r44, $r45, $r48, $r49, $r54, $r55, $r58, $r59, $r64, $r65, $r68, $r69, $r75, $r78, $r80, $r81, $r86, $r87, $r88, $r99, $r102, $r104, $r105, $r107, $r108, $r110, $r111, $r112, $r113, $r118, $r120, $r122, $r124, $r127, $r128, $r130, $r131, $r134, $r135, $r137, $r138, $r141, $r144, $r146, $r148;
        java.io.PrintStream $r43, $r53, $r63, $r126;
        weka.core.packageManagement.PackageManager $r71, $r91, $r95, $r96, $r153, $r159, $r161;
        java.util.Set $r73;
        java.io.FileInputStream $r84, $r151;
        java.net.URL $r90, $r92, $r115, $r152, $r154, $r160, $r162;
        java.net.MalformedURLException $r93, ex#180;
        java.io.IOException $r94, ex#183, $r158, e#390;
        java.io.FileNotFoundException $r157, e#387;

        $z0 = <weka.core.WekaPackageManager: boolean m_wekaHomeEstablished>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r0 = class "weka/core/WekaPackageManager";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("weka/PluginManager.props");

        staticinvoke <weka.core.PluginManager: void addFromProperties(java.io.InputStream,boolean)>($r2, 1);

     label02:
        goto label04;

     label03:
        $r3 := @caughtexception;

        ex = $r3;

        $r4 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level WARNING>;

        staticinvoke <weka.core.WekaPackageManager: void log(weka.core.logging.Logger$Level,java.lang.String)>($r4, "[WekaPackageManager] unable to read weka/PluginManager.props");

     label04:
        env = staticinvoke <weka.core.Environment: weka.core.Environment getSystemWide()>();

        wh = virtualinvoke env.<weka.core.Environment: java.lang.String getVariableValue(java.lang.String)>("WEKA_HOME");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(wh);

        if wh == null goto label05;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(wh);

        <weka.core.WekaPackageManager: java.io.File WEKA_HOME> = $r5;

        $r6 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(wh);

        $r9 = <java.io.File: java.lang.String separator>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("packages");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r12);

        <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR> = $r6;

        $r13 = new java.io.File;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(wh);

        $r16 = <java.io.File: java.lang.String separator>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = <weka.core.WekaPackageManager: java.lang.String PROPERTIES_DIR_NAME>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r20);

        <weka.core.WekaPackageManager: java.io.File PROPERTIES_DIR> = $r13;

        $r21 = new java.io.File;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(wh);

        $r24 = <java.io.File: java.lang.String separator>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = <weka.core.WekaPackageManager: java.lang.String NATIVE_LIBS_DIR_NAME>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r28);

        <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR> = $r21;

        goto label06;

     label05:
        $r29 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r30 = virtualinvoke $r29.<java.io.File: java.lang.String toString()>();

        virtualinvoke env.<weka.core.Environment: void addVariableSystemWide(java.lang.String,java.lang.String)>("WEKA_HOME", $r30);

     label06:
        nativePath#59 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("java.library.path", "");

        $r31 = <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR>;

        $r32 = virtualinvoke $r31.<java.io.File: java.lang.String toString()>();

        $z1 = virtualinvoke nativePath#59.<java.lang.String: boolean contains(java.lang.CharSequence)>($r32);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label07;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nativePath#59);

        $r35 = <java.io.File: java.lang.String pathSeparator>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR>;

        $r38 = virtualinvoke $r37.<java.io.File: java.lang.String toString()>();

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        nativePath#74 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.library.path", nativePath#74);

     label07:
        ok#79 = 1;

        $r41 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $z2 = virtualinvoke $r41.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label08;

        $r42 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $z3 = virtualinvoke $r42.<java.io.File: boolean mkdir()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label08;

        $r43 = <java.lang.System: java.io.PrintStream err>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create WEKA_HOME (");

        $r46 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r47 = virtualinvoke $r46.<java.io.File: java.lang.String getAbsolutePath()>();

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r50);

        ok#79 = 0;

     label08:
        $r51 = <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR>;

        $z4 = virtualinvoke $r51.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label09;

        $r52 = <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR>;

        $z5 = virtualinvoke $r52.<java.io.File: boolean mkdir()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label09;

        $r53 = <java.lang.System: java.io.PrintStream err>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create packages directory (");

        $r56 = <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR>;

        $r57 = virtualinvoke $r56.<java.io.File: java.lang.String getAbsolutePath()>();

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r60);

        ok#79 = 0;

     label09:
        $r61 = <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR>;

        $z6 = virtualinvoke $r61.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label10;

        $r62 = <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR>;

        $z7 = virtualinvoke $r62.<java.io.File: boolean mkdir()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label10;

        $r63 = <java.lang.System: java.io.PrintStream err>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create native libs directory (");

        $r66 = <weka.core.WekaPackageManager: java.io.File NATIVE_LIBS_DIR>;

        $r67 = virtualinvoke $r66.<java.io.File: java.lang.String getAbsolutePath()>();

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r70);

     label10:
        <weka.core.WekaPackageManager: boolean m_wekaHomeEstablished> = ok#79;

        $r71 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r72 = <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR>;

        virtualinvoke $r71.<weka.core.packageManagement.PackageManager: void setPackageHome(java.io.File)>($r72);

        $r73 = staticinvoke <weka.core.WekaPackageManager: java.util.Set getDoNotLoadList()>();

        <weka.core.WekaPackageManager: java.util.Set m_doNotLoadList> = $r73;

     label11:
        repURL#134 = virtualinvoke env.<weka.core.Environment: java.lang.String getVariableValue(java.lang.String)>("weka.core.wekaPackageRepositoryURL");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(repURL#134);

        if repURL#134 == null goto label12;

        $i0 = virtualinvoke repURL#134.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label13;

     label12:
        $r74 = new java.io.File;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = <weka.core.WekaPackageManager: java.io.File PROPERTIES_DIR>;

        $r77 = virtualinvoke $r76.<java.io.File: java.lang.String toString()>();

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = <java.io.File: java.lang.String separator>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PackageRepository.props");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.io.File: void <init>(java.lang.String)>($r82);

        repPropsFile = $r74;

        $z8 = virtualinvoke repPropsFile.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label13;

        $r83 = new java.util.Properties;

        specialinvoke $r83.<java.util.Properties: void <init>()>();

        repProps = $r83;

        $r84 = new java.io.FileInputStream;

        specialinvoke $r84.<java.io.FileInputStream: void <init>(java.io.File)>(repPropsFile);

        virtualinvoke repProps.<java.util.Properties: void load(java.io.InputStream)>($r84);

        repURL#134 = virtualinvoke repProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("weka.core.wekaPackageRepositoryURL");

     label13:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(repURL#134);

        if repURL#134 == null goto label14;

        $i1 = virtualinvoke repURL#134.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 != 0 goto label15;

     label14:
        repURL#134 = <weka.core.WekaPackageManager: java.lang.String PRIMARY_REPOSITORY>;

        goto label16;

     label15:
        $r85 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level INFO>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] weka.core.WekaPackageRepositoryURL = ");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(repURL#134);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.core.WekaPackageManager: void log(weka.core.logging.Logger$Level,java.lang.String)>($r85, $r89);

        <weka.core.WekaPackageManager: boolean USER_SET_REPO> = 1;

     label16:
        $r90 = new java.net.URL;

        specialinvoke $r90.<java.net.URL: void <init>(java.lang.String)>(repURL#134);

        <weka.core.WekaPackageManager: java.net.URL REP_URL> = $r90;

        $r91 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r92 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r91.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r92);

     label17:
        goto label20;

     label18:
        $r93 := @caughtexception;

        ex#180 = $r93;

        virtualinvoke ex#180.<java.net.MalformedURLException: void printStackTrace()>();

        goto label20;

     label19:
        $r94 := @caughtexception;

        ex#183 = $r94;

        virtualinvoke ex#183.<java.io.IOException: void printStackTrace()>();

     label20:
        $r95 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        virtualinvoke $r95.<weka.core.packageManagement.PackageManager: void setBaseSystemName(java.lang.String)>("weka");

        $r96 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r97 = <weka.core.Version: java.lang.String VERSION>;

        virtualinvoke $r96.<weka.core.packageManagement.PackageManager: void setBaseSystemVersion(java.lang.Object)>($r97);

        $r98 = new java.io.File;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r100 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r101 = virtualinvoke $r100.<java.io.File: java.lang.String toString()>();

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r103 = <java.io.File: java.lang.String separator>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repCache");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r98.<java.io.File: void <init>(java.lang.String)>($r106);

        cacheDir = $r98;

     label21:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r109 = virtualinvoke cacheDir.<java.io.File: java.lang.String toString()>();

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        tempCacheString#209 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        tempCacheString#214 = virtualinvoke tempCacheString#209.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

        tempCacheString#219 = virtualinvoke tempCacheString#214.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        $z9 = virtualinvoke tempCacheString#219.<java.lang.String: boolean startsWith(java.lang.String)>("file://");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label22;

        $z10 = virtualinvoke tempCacheString#219.<java.lang.String: boolean startsWith(java.lang.String)>("file:///");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 != 0 goto label22;

        tempCacheString#229 = virtualinvoke tempCacheString#219.<java.lang.String: java.lang.String substring(int)>(7);

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:///");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tempCacheString#229);

        tempCacheString#219 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        $r114 = new java.net.URI;

        specialinvoke $r114.<java.net.URI: void <init>(java.lang.String)>(tempCacheString#219);

        tempURI = $r114;

        $r115 = virtualinvoke tempURI.<java.net.URI: java.net.URL toURL()>();

        <weka.core.WekaPackageManager: java.net.URL CACHE_URL> = $r115;

     label23:
        goto label25;

     label24:
        $r116 := @caughtexception;

        e = $r116;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label25:
        $r117 = new java.io.File;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke cacheDir.<java.io.File: java.lang.String getAbsolutePath()>();

        $r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

        $r121 = <java.io.File: java.lang.String separator>;

        $r122 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        $r123 = <weka.core.WekaPackageManager: java.lang.String PACKAGE_LIST_FILENAME>;

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r117.<java.io.File: void <init>(java.lang.String)>($r125);

        packagesList = $r117;

        $z11 = virtualinvoke cacheDir.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 != 0 goto label27;

        $z12 = virtualinvoke cacheDir.<java.io.File: boolean mkdir()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 != 0 goto label26;

        $r126 = <java.lang.System: java.io.PrintStream err>;

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create repository cache directory (");

        $r129 = virtualinvoke cacheDir.<java.io.File: java.lang.String getAbsolutePath()>();

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r126.<java.io.PrintStream: void println(java.lang.String)>($r132);

        $r133 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level WARNING>;

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create repository cache directory (");

        $r136 = virtualinvoke cacheDir.<java.io.File: java.lang.String getAbsolutePath()>();

        $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r136);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.core.WekaPackageManager: void log(weka.core.logging.Logger$Level,java.lang.String)>($r133, $r139);

        <weka.core.WekaPackageManager: java.net.URL CACHE_URL> = null;

        goto label27;

     label26:
        <weka.core.WekaPackageManager: boolean INITIAL_CACHE_BUILD_NEEDED> = 1;

     label27:
        $z13 = virtualinvoke packagesList.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 != 0 goto label28;

        <weka.core.WekaPackageManager: boolean INITIAL_CACHE_BUILD_NEEDED> = 1;

     label28:
        offline#290 = virtualinvoke env.<weka.core.Environment: java.lang.String getVariableValue(java.lang.String)>("weka.packageManager.offline");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offline#290);

        if offline#290 == null goto label29;

        $z14 = virtualinvoke offline#290.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        <weka.core.WekaPackageManager: boolean m_offline> = $z14;

     label29:
        loadPackages#298 = virtualinvoke env.<weka.core.Environment: java.lang.String getVariableValue(java.lang.String)>("weka.packageManager.loadPackages");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(loadPackages#298);

        if loadPackages#298 != null goto label30;

        loadPackages#298 = virtualinvoke env.<weka.core.Environment: java.lang.String getVariableValue(java.lang.String)>("weka.core.loadPackages");

     label30:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(loadPackages#298);

        if loadPackages#298 == null goto label31;

        $z15 = virtualinvoke loadPackages#298.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        <weka.core.WekaPackageManager: boolean m_loadPackages> = $z15;

     label31:
        $r140 = new java.io.File;

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r142 = <weka.core.WekaPackageManager: java.io.File PROPERTIES_DIR>;

        $r143 = virtualinvoke $r142.<java.io.File: java.lang.String toString()>();

        $r144 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143);

        $r145 = <java.io.File: java.lang.String separator>;

        $r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r145);

        $r147 = <weka.core.WekaPackageManager: java.lang.String PACKAGE_MANAGER_PROPS_FILE_NAME>;

        $r148 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147);

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r140.<java.io.File: void <init>(java.lang.String)>($r149);

        generalProps = $r140;

        $z16 = virtualinvoke generalProps.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z16);

        if $z16 == 0 goto label42;

        $r150 = new java.util.Properties;

        specialinvoke $r150.<java.util.Properties: void <init>()>();

        gProps = $r150;

     label32:
        $r151 = new java.io.FileInputStream;

        specialinvoke $r151.<java.io.FileInputStream: void <init>(java.io.File)>(generalProps);

        virtualinvoke gProps.<java.util.Properties: void load(java.io.InputStream)>($r151);

        repURL = virtualinvoke gProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("weka.core.wekaPackageRepositoryURL");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(repURL);

        if repURL == null goto label33;

        $i2 = virtualinvoke repURL.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 <= 0 goto label33;

        $r152 = new java.net.URL;

        specialinvoke $r152.<java.net.URL: void <init>(java.lang.String)>(repURL);

        <weka.core.WekaPackageManager: java.net.URL REP_URL> = $r152;

        $r153 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r154 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r153.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r154);

     label33:
        offline#341 = virtualinvoke gProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("weka.packageManager.offline");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offline#341);

        if offline#341 == null goto label34;

        $i3 = virtualinvoke offline#341.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 0 goto label34;

        $z17 = virtualinvoke offline#341.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        <weka.core.WekaPackageManager: boolean m_offline> = $z17;

     label34:
        loadPackages#351 = virtualinvoke gProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("weka.packageManager.loadPackages");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(loadPackages#351);

        if loadPackages#351 != null goto label35;

        loadPackages#351 = virtualinvoke env.<weka.core.Environment: java.lang.String getVariableValue(java.lang.String)>("weka.core.loadPackages");

     label35:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(loadPackages#351);

        if loadPackages#351 == null goto label36;

        $z18 = virtualinvoke loadPackages#351.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        <weka.core.WekaPackageManager: boolean m_loadPackages> = $z18;

     label36:
        pluginManagerDisableList = virtualinvoke gProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("weka.pluginManager.disable");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pluginManagerDisableList);

        if pluginManagerDisableList == null goto label39;

        $i4 = virtualinvoke pluginManagerDisableList.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 <= 0 goto label39;

        $r155 = new java.util.ArrayList;

        specialinvoke $r155.<java.util.ArrayList: void <init>()>();

        disable = $r155;

        parts = virtualinvoke pluginManagerDisableList.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        l14 = parts;

        l15 = lengthof l14;

        l16#375 = 0;

     label37:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l16#375);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l15);

        if l16#375 >= l15 goto label38;

        s = l14[l16#375];

        $r156 = virtualinvoke s.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke disable.<java.util.List: boolean add(java.lang.Object)>($r156);

        l16#375 = l16#375 + 1;

        goto label37;

     label38:
        staticinvoke <weka.core.PluginManager: void addToDisabledList(java.util.List)>(disable);

     label39:
        goto label42;

     label40:
        $r157 := @caughtexception;

        e#387 = $r157;

        virtualinvoke e#387.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label42;

     label41:
        $r158 := @caughtexception;

        e#390 = $r158;

        virtualinvoke e#390.<java.io.IOException: void printStackTrace()>();

     label42:
        $z20 = <weka.core.WekaPackageManager: boolean INITIAL_CACHE_BUILD_NEEDED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20);

        if $z20 == 0 goto label43;

        $z21 = <weka.core.WekaPackageManager: boolean m_offline>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z21);

        if $z21 == 0 goto label43;

        <weka.core.WekaPackageManager: boolean m_noPackageMetaDataAvailable> = 1;

     label43:
        $r159 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r160 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r159.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r160);

        $r161 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r162 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r161.<weka.core.packageManagement.PackageManager: boolean setProxyAuthentication(java.net.URL)>($r162);

        return ok#79;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.net.MalformedURLException from label11 to label17 with label18;
        catch java.io.IOException from label11 to label17 with label19;
        catch java.lang.Exception from label21 to label23 with label24;
        catch java.io.FileNotFoundException from label32 to label39 with label40;
        catch java.io.IOException from label32 to label39 with label41;
    }

    public static synchronized void loadPackages(boolean, boolean, boolean)
    {
        boolean verbose, avoidTriggeringFullClassDiscovery, refreshGOEProperties, load, $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList goePropsFiles, $r1;
        java.io.File[] contents, l6#21, l6#78;
        java.util.HashMap injectDependencies, $r6;
        weka.core.packageManagement.Package toLoad;
        java.io.PrintStream $r0, $r4, $r9, $r18, $r30, $r38;
        java.util.Iterator l4;
        java.io.File f, $r2, content#32, content#89;
        int $i0, l7#24, l8#26, l7#81, l8#83;
        java.io.PrintStream[] $r3, $r8;
        java.lang.String $r7, $r12, $r14, $r21, $r24, $r27, $r33, $r36;
        java.lang.StringBuilder $r10, $r11, $r13, $r19, $r20, $r22, $r23, $r31, $r32, $r34, $r35;
        weka.core.WekaPackageClassLoaderManager $r15, $r25, $r26;
        java.lang.Exception $r17, ex#62, $r29, ex#101;
        weka.core.WekaPackageLibIsolatingClassLoader $r28;
        java.lang.Object $r37;

        verbose := @parameter0: boolean;

        avoidTriggeringFullClassDiscovery := @parameter1: boolean;

        refreshGOEProperties := @parameter2: boolean;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        goePropsFiles = $r1;

        $z0 = <weka.core.WekaPackageManager: boolean m_loadPackages>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = <weka.core.WekaPackageManager: boolean m_packagesLoaded>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        return;

     label02:
        <weka.core.WekaPackageManager: boolean m_packagesLoaded> = 1;

        <weka.core.WekaPackageManager: boolean m_initialPackageLoadingInProcess> = 1;

        $z2 = staticinvoke <weka.core.WekaPackageManager: boolean establishWekaHome()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label16;

        $r2 = <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR>;

        contents = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof contents;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label03;

        $r3 = newarray (java.io.PrintStream)[1];

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3[0] = $r4;

        staticinvoke <weka.core.WekaPackageManager: java.lang.Exception establishCacheIfNeeded(java.io.PrintStream[])>($r3);

     label03:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        injectDependencies = $r6;

        l6#21 = contents;

        l7#24 = lengthof l6#21;

        l8#26 = 0;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#26);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#24);

        if l8#26 >= l7#24 goto label10;

        content#32 = l6#21[l8#26];

        $z3 = virtualinvoke content#32.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label09;

     label05:
        $r7 = virtualinvoke content#32.<java.io.File: java.lang.String getName()>();

        toLoad = staticinvoke <weka.core.WekaPackageManager: weka.core.packageManagement.Package getInstalledPackageInfo(java.lang.String)>($r7);

        staticinvoke <weka.core.WekaPackageManager: void checkForInjectDependencies(weka.core.packageManagement.Package,java.util.Map)>(toLoad, injectDependencies);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(toLoad);

        if toLoad == null goto label07;

        $r8 = newarray (java.io.PrintStream)[1];

        $r0 = <java.lang.System: java.io.PrintStream err>;

        $r8[0] = $r0;

        load = staticinvoke <weka.core.WekaPackageManager: boolean loadCheck(weka.core.packageManagement.Package,java.io.File,java.io.PrintStream[])>(toLoad, content#32, $r8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(load);

        if load == 0 goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(verbose);

        if verbose == 0 goto label06;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] loading package ");

        $r12 = virtualinvoke content#32.<java.io.File: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label06:
        $r15 = staticinvoke <weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageClassLoaderManager getWekaPackageClassLoaderManager()>();

        virtualinvoke $r15.<weka.core.WekaPackageClassLoaderManager: java.lang.ClassLoader addPackageToClassLoader(java.io.File)>(content#32);

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        ex#62 = $r17;

        virtualinvoke ex#62.<java.lang.Exception: void printStackTrace()>();

        $r18 = <java.lang.System: java.io.PrintStream err>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Problem loading package ");

        $r21 = virtualinvoke content#32.<java.io.File: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" skipping...");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label09:
        l8#26 = l8#26 + 1;

        goto label04;

     label10:
        staticinvoke <weka.core.WekaPackageManager: void injectPackageDependencies(java.util.Map)>(injectDependencies);

        $r25 = staticinvoke <weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageClassLoaderManager getWekaPackageClassLoaderManager()>();

        virtualinvoke $r25.<weka.core.WekaPackageClassLoaderManager: void performIntegrityCheck()>();

        l6#78 = contents;

        l7#81 = lengthof l6#78;

        l8#83 = 0;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#83);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#81);

        if l8#83 >= l7#81 goto label16;

        content#89 = l6#78[l8#83];

     label12:
        $z4 = virtualinvoke content#89.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label13;

        $r26 = staticinvoke <weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageClassLoaderManager getWekaPackageClassLoaderManager()>();

        $r27 = virtualinvoke content#89.<java.io.File: java.lang.String getName()>();

        $r28 = virtualinvoke $r26.<weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageLibIsolatingClassLoader getPackageClassLoader(java.lang.String)>($r27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r28);

        if $r28 == null goto label13;

        staticinvoke <weka.core.WekaPackageManager: void processPackageDirectory(java.io.File,boolean,java.util.List,boolean)>(content#89, verbose, goePropsFiles, avoidTriggeringFullClassDiscovery);

     label13:
        goto label15;

     label14:
        $r29 := @caughtexception;

        ex#101 = $r29;

        virtualinvoke ex#101.<java.lang.Exception: void printStackTrace()>();

        $r30 = <java.lang.System: java.io.PrintStream err>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Problem loading package ");

        $r33 = virtualinvoke content#89.<java.io.File: java.lang.String getName()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" skipping...");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r36);

     label15:
        l8#83 = l8#83 + 1;

        goto label11;

     label16:
        <weka.core.WekaPackageManager: boolean m_initialPackageLoadingInProcess> = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avoidTriggeringFullClassDiscovery);

        if avoidTriggeringFullClassDiscovery != 0 goto label18;

        l4 = interfaceinvoke goePropsFiles.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z5 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label18;

        $r37 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        f = (java.io.File) $r37;

        staticinvoke <weka.core.WekaPackageManager: void processGenericPropertiesCreatorProps(java.io.File)>(f);

        goto label17;

     label18:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(refreshGOEProperties);

        if refreshGOEProperties == 0 goto label20;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(verbose);

        if verbose == 0 goto label19;

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("Refreshing GOE props...");

     label19:
        staticinvoke <weka.core.WekaPackageManager: void refreshGOEProperties()>();

     label20:
        return;

        catch java.lang.Exception from label05 to label07 with label08;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    protected static void log(weka.core.logging.Logger$Level, java.lang.String)
    {
        weka.core.logging.Logger$Level level;
        java.lang.String message, linefeed, m, $r3, $r5, $r8, $r14;
        java.io.File logFile, $r0, $r2;
        java.io.BufferedWriter writer, $r9;
        java.text.SimpleDateFormat format, $r11;
        java.lang.Exception l2, $r21;
        java.lang.StringBuilder $r1, $r4, $r6, $r7, $r12, $r15, $r16, $r17, $r18, $r19, $r20;
        java.io.FileWriter $r10;
        java.util.Date $r13;

        level := @parameter0: weka.core.logging.Logger$Level;

        message := @parameter1: java.lang.String;

     label1:
        $r0 = new java.io.File;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weka.log");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r8);

        logFile = $r0;

        $r9 = new java.io.BufferedWriter;

        $r10 = new java.io.FileWriter;

        specialinvoke $r10.<java.io.FileWriter: void <init>(java.io.File,boolean)>(logFile, 1);

        specialinvoke $r9.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r10);

        writer = $r9;

        $r11 = new java.text.SimpleDateFormat;

        specialinvoke $r11.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        format = $r11;

        linefeed = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = new java.util.Date;

        specialinvoke $r13.<java.util.Date: void <init>()>();

        $r14 = virtualinvoke format.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(level);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(linefeed);

        m = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke writer.<java.io.BufferedWriter: void write(java.lang.String)>(m);

        virtualinvoke writer.<java.io.BufferedWriter: void flush()>();

        virtualinvoke writer.<java.io.BufferedWriter: void close()>();

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        l2 = $r21;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static java.util.Set getDoNotLoadList()
    {
        java.io.File doNotLoadList, $r4, tmp$1936871169;
        java.io.FileNotFoundException l3, $r15;
        java.lang.Throwable l4, $r33;
        java.io.IOException ex, $r14, ex#32, $r16, ex#38, $r17, e#41, $r24, ex#54, $r32, ex#70, $r34;
        java.lang.Object doNotLoad#3, $r13;
        java.lang.String $r5, $r7, $r10, $r21, $r23, $r29, $r31;
        java.lang.StringBuilder $r6, $r8, $r9, $r20, $r22, $r28, $r30, tmp$710613421, tmp$356139180, tmp$1004064692;
        boolean $z0, $z1;
        java.io.ObjectInputStream ois#21, tmp$773456471;
        java.io.PrintStream $r18, $r26;
        java.lang.ClassNotFoundException $r25, e#57;
        java.util.HashSet tmp$837344587;
        java.io.FileInputStream tmp$550737333;
        java.io.BufferedInputStream tmp$2068261443;
        java.util.Set tmp$1991226008;

        tmp$837344587 = new java.util.HashSet;

        specialinvoke tmp$837344587.<java.util.HashSet: void <init>()>();

        doNotLoad#3 = tmp$837344587;

        tmp$1936871169 = new java.io.File;

        tmp$710613421 = new java.lang.StringBuilder;

        specialinvoke tmp$710613421.<java.lang.StringBuilder: void <init>()>();

        $r4 = <weka.core.WekaPackageManager: java.io.File PACKAGES_DIR>;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String toString()>();

        $r6 = virtualinvoke tmp$710613421.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = <java.io.File: java.lang.String separator>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doNotLoad.ser");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1936871169.<java.io.File: void <init>(java.lang.String)>($r10);

        doNotLoadList = tmp$1936871169;

        $z0 = virtualinvoke doNotLoadList.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label29;

        $z1 = virtualinvoke doNotLoadList.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label29;

        ois#21 = null;

     label01:
        tmp$773456471 = new java.io.ObjectInputStream;

        tmp$2068261443 = new java.io.BufferedInputStream;

        tmp$550737333 = new java.io.FileInputStream;

        specialinvoke tmp$550737333.<java.io.FileInputStream: void <init>(java.io.File)>(doNotLoadList);

        specialinvoke tmp$2068261443.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(tmp$550737333);

        specialinvoke tmp$773456471.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(tmp$2068261443);

        ois#21 = tmp$773456471;

        $r13 = virtualinvoke ois#21.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        doNotLoad#3 = (java.util.Set) $r13;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ois#21);

        if ois#21 == null goto label29;

     label03:
        virtualinvoke ois#21.<java.io.ObjectInputStream: void close()>();

     label04:
        goto label29;

     label05:
        $r14 := @caughtexception;

        ex#32 = $r14;

        virtualinvoke ex#32.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label06:
        $r15 := @caughtexception;

        l3 = $r15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ois#21);

        if ois#21 == null goto label29;

     label07:
        virtualinvoke ois#21.<java.io.ObjectInputStream: void close()>();

     label08:
        goto label29;

     label09:
        $r16 := @caughtexception;

        ex#38 = $r16;

        virtualinvoke ex#38.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label10:
        $r17 := @caughtexception;

     label11:
        e#41 = $r17;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        tmp$356139180 = new java.lang.StringBuilder;

        specialinvoke tmp$356139180.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke tmp$356139180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occurred while reading the doNotLoad list: ");

        $r21 = virtualinvoke e#41.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ois#21);

        if ois#21 == null goto label29;

     label13:
        virtualinvoke ois#21.<java.io.ObjectInputStream: void close()>();

     label14:
        goto label29;

     label15:
        $r24 := @caughtexception;

        ex#54 = $r24;

        virtualinvoke ex#54.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label16:
        $r25 := @caughtexception;

     label17:
        e#57 = $r25;

        $r26 = <java.lang.System: java.io.PrintStream err>;

        tmp$1004064692 = new java.lang.StringBuilder;

        specialinvoke tmp$1004064692.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke tmp$1004064692.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occurred while reading the doNotLoad list: ");

        $r29 = virtualinvoke e#57.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label18:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ois#21);

        if ois#21 == null goto label29;

     label19:
        virtualinvoke ois#21.<java.io.ObjectInputStream: void close()>();

     label20:
        goto label29;

     label21:
        $r32 := @caughtexception;

        ex#70 = $r32;

        virtualinvoke ex#70.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label22:
        $r33 := @caughtexception;

     label23:
        l4 = $r33;

     label24:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ois#21);

        if ois#21 == null goto label28;

     label25:
        virtualinvoke ois#21.<java.io.ObjectInputStream: void close()>();

     label26:
        goto label28;

     label27:
        $r34 := @caughtexception;

        ex = $r34;

        virtualinvoke ex.<java.io.IOException: void printStackTrace()>();

     label28:
        throw l4;

     label29:
        tmp$1991226008 = (java.util.Set) doNotLoad#3;

        return tmp$1991226008;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.ClassNotFoundException from label01 to label02 with label16;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public static void refreshGOEProperties()
    {
        staticinvoke <weka.core.ClassDiscovery: void clearClassCache()>();

        staticinvoke <weka.gui.GenericPropertiesCreator: void regenerateGlobalOutputProperties()>();

        staticinvoke <weka.gui.GenericObjectEditor: void determineClasses()>();

        staticinvoke <weka.core.converters.ConverterUtils: void initialize()>();

        staticinvoke <weka.gui.beans.KnowledgeFlowApp: void disposeSingleton()>();

        staticinvoke <weka.gui.beans.KnowledgeFlowApp: void reInitialize()>();

        return;
    }

    protected static void processGenericPropertiesCreatorProps(java.io.File)
    {
        java.io.File propsFile;
        java.util.Properties expProps, GPCInputProps, $r0;
        java.util.Set keys;
        java.util.Iterator keysI;
        java.lang.String key, existingVal, newVal#31, newVal#44, newVal#52;
        java.io.BufferedInputStream $r1, bi#6;
        java.io.FileInputStream $r2;
        boolean $z0;
        java.lang.Object $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.Exception $r8;

        propsFile := @parameter0: java.io.File;

     label1:
        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        expProps = $r0;

        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(propsFile);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

        bi#6 = $r1;

        virtualinvoke expProps.<java.util.Properties: void load(java.io.InputStream)>(bi#6);

        virtualinvoke bi#6.<java.io.BufferedInputStream: void close()>();

        GPCInputProps = staticinvoke <weka.gui.GenericPropertiesCreator: java.util.Properties getGlobalInputProperties()>();

        keys = virtualinvoke expProps.<java.util.Properties: java.util.Set keySet()>();

        keysI = interfaceinvoke keys.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke keysI.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke keysI.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $r3;

        existingVal = virtualinvoke GPCInputProps.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>(key, "");

        $i0 = virtualinvoke existingVal.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label4;

        newVal#31 = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        $i1 = virtualinvoke existingVal.<java.lang.String: int indexOf(java.lang.String)>(newVal#31);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 >= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existingVal);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newVal#31);

        newVal#44 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke GPCInputProps.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, newVal#44);

     label3:
        goto label5;

     label4:
        newVal#52 = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        virtualinvoke GPCInputProps.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, newVal#52);

     label5:
        goto label2;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    protected static void processPackageDirectory(java.io.File, boolean, java.util.List, boolean) throws java.lang.Exception
    {
        java.io.File directory, content;
        boolean verbose, avoidTriggeringFullClassDiscovery, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10;
        java.util.List goePropsFiles;
        java.io.File[] contents, l5;
        int l6, l7#8;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5;

        directory := @parameter0: java.io.File;

        verbose := @parameter1: boolean;

        goePropsFiles := @parameter2: java.util.List;

        avoidTriggeringFullClassDiscovery := @parameter3: boolean;

        contents = virtualinvoke directory.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(contents);

        if contents == null goto label8;

        l5 = contents;

        l6 = lengthof l5;

        l7#8 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l7#8 >= l6 goto label8;

        content = l5[l7#8];

        $z0 = virtualinvoke content.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke content.<java.io.File: java.lang.String getPath()>();

        $z1 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("Beans.props");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        staticinvoke <weka.gui.beans.BeansProperties: void addToPluginBeanProps(java.io.File)>(content);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avoidTriggeringFullClassDiscovery);

        if avoidTriggeringFullClassDiscovery != 0 goto label7;

        staticinvoke <weka.gui.beans.KnowledgeFlowApp: void disposeSingleton()>();

        goto label7;

     label2:
        $z2 = virtualinvoke content.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r1 = virtualinvoke content.<java.io.File: java.lang.String getPath()>();

        $z3 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("Explorer.props");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avoidTriggeringFullClassDiscovery);

        if avoidTriggeringFullClassDiscovery != 0 goto label3;

        staticinvoke <weka.core.WekaPackageManager: void processExplorerProps(java.io.File)>(content);

        goto label7;

     label3:
        $z4 = virtualinvoke content.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label4;

        $r2 = virtualinvoke content.<java.io.File: java.lang.String getPath()>();

        $z5 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("GUIEditors.props");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avoidTriggeringFullClassDiscovery);

        if avoidTriggeringFullClassDiscovery != 0 goto label4;

        staticinvoke <weka.core.WekaPackageManager: void processGUIEditorsProps(java.io.File,boolean)>(content, verbose);

        goto label7;

     label4:
        $z6 = virtualinvoke content.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label6;

        $r3 = virtualinvoke content.<java.io.File: java.lang.String getPath()>();

        $z7 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("GenericPropertiesCreator.props");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avoidTriggeringFullClassDiscovery);

        if avoidTriggeringFullClassDiscovery != 0 goto label6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(goePropsFiles);

        if goePropsFiles == null goto label5;

        interfaceinvoke goePropsFiles.<java.util.List: boolean add(java.lang.Object)>(content);

        goto label7;

     label5:
        staticinvoke <weka.core.WekaPackageManager: void processGenericPropertiesCreatorProps(java.io.File)>(content);

        goto label7;

     label6:
        $z9 = virtualinvoke content.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label7;

        $r4 = virtualinvoke content.<java.io.File: java.lang.String getPath()>();

        $z10 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("PluginManager.props");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label7;

        $r5 = virtualinvoke directory.<java.io.File: java.lang.String getName()>();

        staticinvoke <weka.core.WekaPackageManager: void processPluginManagerProps(java.lang.String,java.io.File)>($r5, content);

     label7:
        l7#8 = l7#8 + 1;

        goto label1;

     label8:
        return;
    }

    protected static void injectPackageDependencies(java.util.Map)
    {
        java.util.Map injectDependencies;
        java.util.Iterator l1, l6;
        java.util.Map$Entry e;
        java.lang.String source, targetPackage, $r14;
        java.util.List targets;
        weka.core.WekaPackageLibIsolatingClassLoader sourceLoader, $r7;
        java.util.Set $r0;
        boolean $z0, $z1;
        java.lang.Object $r1, $r2, $r3, $r5;
        weka.core.WekaPackageClassLoaderManager $r4, $r6;
        java.io.PrintStream $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;

        injectDependencies := @parameter0: java.util.Map;

        $r0 = interfaceinvoke injectDependencies.<java.util.Map: java.util.Set entrySet()>();

        l1 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label5;

        $r1 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        e = (java.util.Map$Entry) $r1;

        $r2 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>();

        source = (java.lang.String) $r2;

        $r3 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>();

        targets = (java.util.List) $r3;

        $r4 = staticinvoke <weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageClassLoaderManager getWekaPackageClassLoaderManager()>();

        sourceLoader = virtualinvoke $r4.<weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageLibIsolatingClassLoader getPackageClassLoader(java.lang.String)>(source);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sourceLoader);

        if sourceLoader == null goto label4;

        l6 = interfaceinvoke targets.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        targetPackage = (java.lang.String) $r5;

        $r6 = staticinvoke <weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageClassLoaderManager getWekaPackageClassLoaderManager()>();

        $r7 = virtualinvoke $r6.<weka.core.WekaPackageClassLoaderManager: weka.core.WekaPackageLibIsolatingClassLoader getPackageClassLoader(java.lang.String)>(targetPackage);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7);

        if $r7 == null goto label3;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Added a dependency between ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(source);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(targetPackage);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r14);

        virtualinvoke sourceLoader.<weka.core.WekaPackageLibIsolatingClassLoader: void addPackageDependency(java.lang.String)>(targetPackage);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        return;
    }

    public static transient boolean loadCheck(weka.core.packageManagement.Package, java.io.File, java.io.PrintStream[])
    {
        weka.core.packageManagement.Package toLoad, repoP, prec, installedD, $r53, $r55, $r66, $r75;
        java.io.File packageRoot;
        java.io.PrintStream[] progress, l4, l6#58, l7#96, l5#146, l6#176, l8#236, l9#274;
        java.io.PrintStream p, p, p, p, p, p#69, p#187;
        java.lang.Object precludes, $r7, $r12, disabled#47, $r28, $r48, $r51;
        java.util.List installed, preclusions, missing, depends;
        weka.core.packageManagement.Dependency d, d;
        boolean load#3, $z0, $z2, $z4, $z5, load#143, $z6, $z7, $z9, $z10, $z11, $z13;
        java.lang.Exception $r0, ex#5, $r21, ex#83, $r33, ex#136, $r50, ex#212, tmp$2057671572;
        int l5#12, l6#14, l7#61, l8#63, $i0, l8#99, l9#101, l6#149, l7#151, $i1, l7#179, l8#181, l9#239, l10#241, l10#277, l11#279;
        java.lang.StringBuilder $r2, $r4, $r5, $r9, $r16, $r18, $r19, $r23, $r25, $r26, $r30, $r31, $r37, $r39, $r40, $r43, $r45, $r46, $r57, $r59, $r60, $r62, $r63, $r70, $r72, $r73, $r77, $r78, $r80, $r81, tmp$1074488666, tmp$260013718, tmp$339066550, tmp$1456619128, tmp$420464455, tmp$402002000, tmp$1613616157, tmp$295072177;
        java.lang.String $r3, $r8, $r10, $r11, $r13, $r14, $r17, $r20, $r24, $r27, $r32, $r35, $r38, $r41, $r44, $r47, $r58, $r64, $r67, $r71, $r76, $r82;
        weka.core.packageManagement.PackageManager $r6;
        java.util.Iterator l11#120, l10#201, l6#219;
        java.util.Set $r34;
        weka.core.packageManagement.PackageConstraint $r49, $r52, $r54, $r61, $r65, $r68, $r74, $r79;
        java.lang.Throwable $r83, ex#310;

        toLoad := @parameter0: weka.core.packageManagement.Package;

        packageRoot := @parameter1: java.io.File;

        progress := @parameter2: java.io.PrintStream[];

     label01:
        load#3 = virtualinvoke toLoad.<weka.core.packageManagement.Package: boolean isCompatibleBaseSystem()>();

     label02:
        goto label04;

     label03:
        $r0 := @caughtexception;

        ex#5 = $r0;

        virtualinvoke ex#5.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(load#3);

        if load#3 != 0 goto label07;

        l4 = progress;

        l5#12 = lengthof l4;

        l6#14 = 0;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#12);

        if l6#14 >= l5#12 goto label06;

        p = l4[l6#14];

        tmp$1074488666 = new java.lang.StringBuilder;

        specialinvoke tmp$1074488666.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke tmp$1074488666.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Skipping package ");

        $r3 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it is not compatible with Weka ");

        $r6 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r7 = virtualinvoke $r6.<weka.core.packageManagement.PackageManager: java.lang.Object getBaseSystemVersion()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>($r10);

        l6#14 = l6#14 + 1;

        goto label05;

     label06:
        return 0;

     label07:
        $r11 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r12 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>("Version");

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        repoP = staticinvoke <weka.core.WekaPackageManager: weka.core.packageManagement.Package getRepositoryPackageInfo(java.lang.String,java.lang.String)>($r11, $r13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(repoP);

        if repoP == null goto label11;

        disabled#47 = virtualinvoke repoP.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>("Disabled");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(disabled#47);

        if disabled#47 != null goto label08;

        disabled#47 = virtualinvoke repoP.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>("Disable");

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(disabled#47);

        if disabled#47 == null goto label11;

        $r14 = virtualinvoke disabled#47.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label11;

        l6#58 = progress;

        l7#61 = lengthof l6#58;

        l8#63 = 0;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#63);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#61);

        if l8#63 >= l7#61 goto label10;

        p#69 = l6#58[l8#63];

        tmp$260013718 = new java.lang.StringBuilder;

        specialinvoke tmp$260013718.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke tmp$260013718.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Skipping package ");

        $r17 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it has been marked as disabled at the repository");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p#69.<java.io.PrintStream: void println(java.lang.String)>($r20);

        l8#63 = l8#63 + 1;

        goto label09;

     label10:
        return 0;

     label11:
        goto label13;

     label12:
        $r21 := @caughtexception;

        ex#83 = $r21;

        return 1;

     label13:
        precludes = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>("Precludes");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(precludes);

        if precludes == null goto label21;

     label14:
        installed = staticinvoke <weka.core.WekaPackageManager: java.util.List getInstalledPackages()>();

        preclusions = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.util.List getPrecludedPackages(java.util.List)>(installed);

        $i0 = interfaceinvoke preclusions.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label19;

        l7#96 = progress;

        l8#99 = lengthof l7#96;

        l9#101 = 0;

     label15:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9#101);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#99);

        if l9#101 >= l8#99 goto label18;

        p = l7#96[l9#101];

        tmp$339066550 = new java.lang.StringBuilder;

        specialinvoke tmp$339066550.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke tmp$339066550.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Skipping package ");

        $r24 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it precludes one or more packages that are already installed: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>($r27);

        l11#120 = interfaceinvoke preclusions.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke l11#120.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label17;

        $r28 = interfaceinvoke l11#120.<java.util.Iterator: java.lang.Object next()>();

        prec = (weka.core.packageManagement.Package) $r28;

        tmp$1456619128 = new java.lang.StringBuilder;

        specialinvoke tmp$1456619128.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke tmp$1456619128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(prec);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>($r32);

        goto label16;

     label17:
        l9#101 = l9#101 + 1;

        goto label15;

     label18:
        return 0;

     label19:
        goto label21;

     label20:
        $r33 := @caughtexception;

        ex#136 = $r33;

        virtualinvoke ex#136.<java.lang.Exception: void printStackTrace()>();

     label21:
        $r34 = <weka.core.WekaPackageManager: java.util.Set m_doNotLoadList>;

        $r35 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $z4 = interfaceinvoke $r34.<java.util.Set: boolean contains(java.lang.Object)>($r35);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label22;

        $z5 = 1;

        goto label23;

     label22:
        $z5 = 0;

     label23:
        load#143 = $z5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(load#143);

        if load#143 != 0 goto label26;

        l5#146 = progress;

        l6#149 = lengthof l5#146;

        l7#151 = 0;

     label24:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#151);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#149);

        if l7#151 >= l6#149 goto label25;

        p = l5#146[l7#151];

        tmp$420464455 = new java.lang.StringBuilder;

        specialinvoke tmp$420464455.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke tmp$420464455.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Skipping package ");

        $r38 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it is has been marked as do not load");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>($r41);

        l7#151 = l7#151 + 1;

        goto label24;

     label25:
        return 0;

     label26:
        $z6 = <weka.core.WekaPackageManager: boolean m_offline>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label27;

        return 1;

     label27:
        missing = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.util.List getMissingDependencies()>();

        $i1 = interfaceinvoke missing.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label32;

        l6#176 = progress;

        l7#179 = lengthof l6#176;

        l8#181 = 0;

     label28:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#181);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#179);

        if l8#181 >= l7#179 goto label31;

        p#187 = l6#176[l8#181];

        tmp$402002000 = new java.lang.StringBuilder;

        specialinvoke tmp$402002000.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke tmp$402002000.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] ");

        $r44 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t be loaded because the following packages are missing:");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p#187.<java.io.PrintStream: void println(java.lang.String)>($r47);

        l10#201 = interfaceinvoke missing.<java.util.List: java.util.Iterator iterator()>();

     label29:
        $z7 = interfaceinvoke l10#201.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label30;

        $r48 = interfaceinvoke l10#201.<java.util.Iterator: java.lang.Object next()>();

        d = (weka.core.packageManagement.Dependency) $r48;

        $r49 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        virtualinvoke p#187.<java.io.PrintStream: void println(java.lang.Object)>($r49);

        goto label29;

     label30:
        l8#181 = l8#181 + 1;

        goto label28;

     label31:
        return 0;

     label32:
        goto label34;

     label33:
        $r50 := @caughtexception;

        ex#212 = $r50;

        virtualinvoke ex#212.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label34:
        depends = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.util.List getDependencies()>();

        l6#219 = interfaceinvoke depends.<java.util.List: java.util.Iterator iterator()>();

     label35:
        $z9 = interfaceinvoke l6#219.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label42;

        $r51 = interfaceinvoke l6#219.<java.util.Iterator: java.lang.Object next()>();

        d = (weka.core.packageManagement.Dependency) $r51;

        $r52 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $r53 = virtualinvoke $r52.<weka.core.packageManagement.PackageConstraint: weka.core.packageManagement.Package getPackage()>();

        $z10 = virtualinvoke $r53.<weka.core.packageManagement.Package: boolean isInstalled()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label41;

        $r54 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $r55 = virtualinvoke $r54.<weka.core.packageManagement.PackageConstraint: weka.core.packageManagement.Package getPackage()>();

        $z11 = staticinvoke <weka.core.WekaPackageManager: boolean loadCheck(weka.core.packageManagement.Package,java.io.File,java.io.PrintStream[])>($r55, packageRoot, progress);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 != 0 goto label38;

        l8#236 = progress;

        l9#239 = lengthof l8#236;

        l10#241 = 0;

     label36:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l10#241);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9#239);

        if l10#241 >= l9#239 goto label37;

        p = l8#236[l10#241];

        tmp$1613616157 = new java.lang.StringBuilder;

        specialinvoke tmp$1613616157.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke tmp$1613616157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Can\'t load ");

        $r58 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because ");

        $r61 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t be loaded.");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>($r64);

        l10#241 = l10#241 + 1;

        goto label36;

     label37:
        return 0;

     label38:
        $r65 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $r66 = virtualinvoke $r65.<weka.core.packageManagement.PackageConstraint: weka.core.packageManagement.Package getPackage()>();

        $r67 = virtualinvoke $r66.<weka.core.packageManagement.Package: java.lang.String getName()>();

        installedD = staticinvoke <weka.core.WekaPackageManager: weka.core.packageManagement.Package getInstalledPackageInfo(java.lang.String)>($r67);

        $r68 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $z13 = virtualinvoke $r68.<weka.core.packageManagement.PackageConstraint: boolean checkConstraint(weka.core.packageManagement.Package)>(installedD);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 != 0 goto label41;

        l9#274 = progress;

        l10#277 = lengthof l9#274;

        l11#279 = 0;

     label39:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l11#279);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l10#277);

        if l11#279 >= l10#277 goto label40;

        p = l9#274[l11#279];

        tmp$295072177 = new java.lang.StringBuilder;

        specialinvoke tmp$295072177.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke tmp$295072177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Can\'t load ");

        $r71 = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because the installed ");

        $r74 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $r75 = virtualinvoke $r74.<weka.core.packageManagement.PackageConstraint: weka.core.packageManagement.Package getPackage()>();

        $r76 = virtualinvoke $r75.<weka.core.packageManagement.Package: java.lang.String getName()>();

        $r77 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not compatible (requires: ");

        $r79 = virtualinvoke d.<weka.core.packageManagement.Dependency: weka.core.packageManagement.PackageConstraint getTarget()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>($r82);

        l11#279 = l11#279 + 1;

        goto label39;

     label40:
        return 0;

     label41:
        goto label35;

     label42:
        goto label44;

     label43:
        $r83 := @caughtexception;

        ex#310 = $r83;

        tmp$2057671572 = (java.lang.Exception) ex#310;

        virtualinvoke tmp$2057671572.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label44:
        return 1;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label07 to label10 with label12;
        catch java.lang.Exception from label14 to label18 with label20;
        catch java.lang.Exception from label27 to label31 with label33;
        catch java.lang.Exception from label34 to label37 with label43;
        catch java.lang.Exception from label38 to label40 with label43;
        catch java.lang.Exception from label41 to label42 with label43;
    }

    protected static void checkForInjectDependencies(weka.core.packageManagement.Package, java.util.Map)
    {
        weka.core.packageManagement.Package toLoad;
        java.util.Map injectDeps;
        java.lang.Object injectList, $r3, depList#37;
        java.lang.String[] deps, l4, sourceAndTarget;
        int l5, l6#13, $i0;
        java.lang.String dep, depender, dependee, $r0, $r1, $r2;
        java.util.ArrayList tmp$301740060;
        java.util.List tmp$406620922;

        toLoad := @parameter0: weka.core.packageManagement.Package;

        injectDeps := @parameter1: java.util.Map;

        injectList = virtualinvoke toLoad.<weka.core.packageManagement.Package: java.lang.Object getPackageMetaDataElement(java.lang.Object)>("InjectDependencies");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(injectList);

        if injectList == null goto label4;

        $r0 = virtualinvoke injectList.<java.lang.Object: java.lang.String toString()>();

        deps = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        l4 = deps;

        l5 = lengthof l4;

        l6#13 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5);

        if l6#13 >= l5 goto label4;

        dep = l4[l6#13];

        sourceAndTarget = virtualinvoke dep.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i0 = lengthof sourceAndTarget;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 2 goto label3;

        $r1 = sourceAndTarget[0];

        depender = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r2 = sourceAndTarget[1];

        dependee = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r3 = interfaceinvoke injectDeps.<java.util.Map: java.lang.Object get(java.lang.Object)>(depender);

        depList#37 = (java.util.List) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(depList#37);

        if depList#37 != null goto label2;

        tmp$301740060 = new java.util.ArrayList;

        specialinvoke tmp$301740060.<java.util.ArrayList: void <init>()>();

        depList#37 = tmp$301740060;

        interfaceinvoke injectDeps.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(depender, depList#37);

     label2:
        tmp$406620922 = (java.util.List) depList#37;

        interfaceinvoke tmp$406620922.<java.util.List: boolean add(java.lang.Object)>(dependee);

     label3:
        l6#13 = l6#13 + 1;

        goto label1;

     label4:
        return;
    }

    public static weka.core.packageManagement.Package getInstalledPackageInfo(java.lang.String) throws java.lang.Exception
    {
        java.lang.String packageName;
        weka.core.packageManagement.PackageManager $r0;
        weka.core.packageManagement.Package $r1;

        packageName := @parameter0: java.lang.String;

        staticinvoke <weka.core.WekaPackageManager: void useCacheOrOnlineRepository()>();

        $r0 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r1 = virtualinvoke $r0.<weka.core.packageManagement.PackageManager: weka.core.packageManagement.Package getInstalledPackageInfo(java.lang.String)>(packageName);

        return $r1;
    }

    public static transient java.lang.Exception establishCacheIfNeeded(java.io.PrintStream[])
    {
        java.io.PrintStream[] progress, l2#8, l2#27;
        java.net.MalformedURLException ex, $r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r0;
        java.lang.Object problem#5;
        int l3#11, l4#13, l3#30, l4#32;
        java.io.PrintStream p#19, p#38;
        java.lang.Exception tmp$853839504;

        progress := @parameter0: java.io.PrintStream[];

        $z0 = <weka.core.WekaPackageManager: boolean m_offline>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r0 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label02;

        staticinvoke <weka.core.WekaPackageManager: void establishMirror()>();

     label02:
        problem#5 = null;

        $z1 = <weka.core.WekaPackageManager: boolean INITIAL_CACHE_BUILD_NEEDED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label05;

        l2#8 = progress;

        l3#11 = lengthof l2#8;

        l4#13 = 0;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#11);

        if l4#13 >= l3#11 goto label04;

        p#19 = l2#8[l4#13];

        virtualinvoke p#19.<java.io.PrintStream: void println(java.lang.String)>("Caching repository metadata, please wait...");

        l4#13 = l4#13 + 1;

        goto label03;

     label04:
        problem#5 = staticinvoke <weka.core.WekaPackageManager: java.lang.Exception refreshCache(java.io.PrintStream[])>(progress);

        <weka.core.WekaPackageManager: boolean INITIAL_CACHE_BUILD_NEEDED> = 0;

        goto label10;

     label05:
        $z2 = staticinvoke <weka.core.WekaPackageManager: boolean checkForForcedCacheRefresh()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label08;

        l2#27 = progress;

        l3#30 = lengthof l2#27;

        l4#32 = 0;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#32);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#30);

        if l4#32 >= l3#30 goto label07;

        p#38 = l2#27[l4#32];

        virtualinvoke p#38.<java.io.PrintStream: void println(java.lang.String)>("Forced repository metadata refresh, please wait...");

        l4#32 = l4#32 + 1;

        goto label06;

     label07:
        problem#5 = staticinvoke <weka.core.WekaPackageManager: java.lang.Exception refreshCache(java.io.PrintStream[])>(progress);

     label08:
        goto label10;

     label09:
        $r1 := @caughtexception;

        ex = $r1;

        problem#5 = ex;

     label10:
        tmp$853839504 = (java.lang.Exception) problem#5;

        return tmp$853839504;

        catch java.net.MalformedURLException from label05 to label08 with label09;
    }

    protected static void processPluginManagerProps(java.lang.String, java.io.File)
    {
        java.lang.String packageName;
        java.io.File propsFile;
        java.lang.Exception ex, $r0;

        packageName := @parameter0: java.lang.String;

        propsFile := @parameter1: java.io.File;

     label1:
        staticinvoke <weka.core.PluginManager: void addFromProperties(java.lang.String,java.io.File)>(packageName, propsFile);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        ex = $r0;

        virtualinvoke ex.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void processGUIEditorsProps(java.io.File, boolean)
    {
        java.io.File propsFile;
        boolean verbose, $z0;
        java.util.Properties editorProps, $r0;
        java.util.Enumeration enm;
        java.lang.String name, value, $r10;
        java.io.BufferedInputStream $r1, bi#6;
        java.io.FileInputStream $r2;
        java.lang.Object $r3;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.Exception $r11;

        propsFile := @parameter0: java.io.File;

        verbose := @parameter1: boolean;

        staticinvoke <weka.gui.GenericObjectEditor: void registerEditors()>();

     label1:
        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        editorProps = $r0;

        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(propsFile);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

        bi#6 = $r1;

        virtualinvoke editorProps.<java.util.Properties: void load(java.io.InputStream)>(bi#6);

        virtualinvoke bi#6.<java.io.BufferedInputStream: void close()>();

        enm = virtualinvoke editorProps.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label2:
        $z0 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        name = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        value = virtualinvoke editorProps.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>(name, "");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(verbose);

        if verbose == 0 goto label3;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registering ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label3:
        staticinvoke <weka.gui.GenericObjectEditor: void registerEditor(java.lang.String,java.lang.String)>(name, value);

        goto label2;

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected static void processExplorerProps(java.io.File)
    {
        java.io.File propsFile;
        java.util.Properties expProps, $r0;
        java.util.Set keys;
        java.util.Iterator keysI;
        java.lang.String key, existingVal, replacePolicy, newVal, $r7, newVal#47, newVal#53, newVal#66, newVal#72, newVal#85;
        java.io.BufferedInputStream $r1, bi#6;
        java.io.FileInputStream $r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.Exception $r16;

        propsFile := @parameter0: java.io.File;

     label01:
        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        expProps = $r0;

        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(propsFile);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

        bi#6 = $r1;

        virtualinvoke expProps.<java.util.Properties: void load(java.io.InputStream)>(bi#6);

        virtualinvoke bi#6.<java.io.BufferedInputStream: void close()>();

        keys = virtualinvoke expProps.<java.util.Properties: java.util.Set keySet()>();

        keysI = interfaceinvoke keys.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke keysI.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label09;

        $r3 = interfaceinvoke keysI.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $r3;

        $z1 = virtualinvoke key.<java.lang.String: boolean endsWith(java.lang.String)>("Policy");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label08;

        existingVal = staticinvoke <weka.gui.explorer.ExplorerDefaults: java.lang.String get(java.lang.String,java.lang.String)>(key, "");

        $i0 = virtualinvoke existingVal.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label07;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Policy");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        replacePolicy = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(replacePolicy);

        if replacePolicy == null goto label05;

        $i1 = virtualinvoke replacePolicy.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label05;

        $z2 = virtualinvoke replacePolicy.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("replace");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label03;

        newVal#47 = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        staticinvoke <weka.gui.explorer.ExplorerDefaults: void set(java.lang.String,java.lang.String)>(key, newVal#47);

        goto label06;

     label03:
        newVal#53 = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        $i2 = virtualinvoke existingVal.<java.lang.String: int indexOf(java.lang.String)>(newVal#53);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 >= 0 goto label04;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existingVal);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newVal#53);

        newVal#66 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.gui.explorer.ExplorerDefaults: void set(java.lang.String,java.lang.String)>(key, newVal#66);

     label04:
        goto label06;

     label05:
        newVal#72 = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        $i3 = virtualinvoke existingVal.<java.lang.String: int indexOf(java.lang.String)>(newVal#72);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 >= 0 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existingVal);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newVal#72);

        newVal#85 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.gui.explorer.ExplorerDefaults: void set(java.lang.String,java.lang.String)>(key, newVal#85);

     label06:
        goto label08;

     label07:
        newVal = virtualinvoke expProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        staticinvoke <weka.gui.explorer.ExplorerDefaults: void set(java.lang.String,java.lang.String)>(key, newVal);

     label08:
        goto label02;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

     label11:
        return;

        catch java.lang.Exception from label01 to label09 with label10;
    }

    public static java.util.List getInstalledPackages() throws java.lang.Exception
    {
        weka.core.packageManagement.PackageManager $r0;
        java.util.List $r1;

        staticinvoke <weka.core.WekaPackageManager: void useCacheOrOnlineRepository()>();

        $r0 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r1 = virtualinvoke $r0.<weka.core.packageManagement.PackageManager: java.util.List getInstalledPackages()>();

        return $r1;
    }

    public static weka.core.packageManagement.Package getRepositoryPackageInfo(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String packageName, version;
        weka.core.packageManagement.PackageManager $r0;
        weka.core.packageManagement.Package $r1;

        packageName := @parameter0: java.lang.String;

        version := @parameter1: java.lang.String;

        staticinvoke <weka.core.WekaPackageManager: void useCacheOrOnlineRepository()>();

        $r0 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r1 = virtualinvoke $r0.<weka.core.packageManagement.PackageManager: weka.core.packageManagement.Package getRepositoryPackageInfo(java.lang.String,java.lang.Object)>(packageName, version);

        return $r1;
    }

    private static void useCacheOrOnlineRepository()
    {
        java.lang.String $r0;
        java.net.URL $r1, $r3, $r4, $r6;
        weka.core.packageManagement.PackageManager $r2, $r5;

        $r0 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        staticinvoke <weka.core.WekaPackageManager: void establishMirror()>();

     label1:
        $r1 = <weka.core.WekaPackageManager: java.net.URL CACHE_URL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label2;

        $r2 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r3 = <weka.core.WekaPackageManager: java.net.URL CACHE_URL>;

        virtualinvoke $r2.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r3);

        goto label3;

     label2:
        $r4 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 == null goto label3;

        $r5 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r6 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r5.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r6);

     label3:
        return;
    }

    public static transient java.lang.Exception refreshCache(java.io.PrintStream[])
    {
        java.io.PrintStream[] progress, l3, $r22;
        java.lang.String cacheDir, $r5, $r7, $r15, $r19;
        int l4, amountRead, l5#20;
        java.io.PrintStream p, $r23;
        byte[] zip, buff;
        java.util.zip.ZipInputStream zis, $r11;
        java.util.zip.ZipEntry ze, $r13;
        java.io.BufferedOutputStream bo, $r16;
        java.lang.Exception e, e1, $r20, $r24;
        java.net.URL $r0, $r2;
        weka.core.packageManagement.PackageManager $r1, $r10;
        java.lang.StringBuilder $r3, $r6, $r8, $r9;
        java.io.File $r4, $r14, $r18, $r21;
        java.io.ByteArrayInputStream $r12;
        boolean $z0;
        java.io.FileOutputStream $r17;

        progress := @parameter0: java.io.PrintStream[];

        $r0 = <weka.core.WekaPackageManager: java.net.URL CACHE_URL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label01;

        return null;

     label01:
        $r1 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r2 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r1.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = <java.io.File: java.lang.String separator>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repCache");

        cacheDir = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        l3 = progress;

        l4 = lengthof l3;

        l5#20 = 0;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4);

        if l5#20 >= l4 goto label04;

        p = l3[l5#20];

        virtualinvoke p.<java.io.PrintStream: void println(java.lang.String)>("Refresh in progress. Please wait...");

        l5#20 = l5#20 + 1;

        goto label03;

     label04:
        $r10 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        zip = virtualinvoke $r10.<weka.core.packageManagement.PackageManager: byte[] getRepositoryPackageMetaDataOnlyAsZip(java.io.PrintStream[])>(progress);

        staticinvoke <weka.core.WekaPackageManager: void cleanRepCacheDir()>();

        $r11 = new java.util.zip.ZipInputStream;

        $r12 = new java.io.ByteArrayInputStream;

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>(zip);

        specialinvoke $r11.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r12);

        zis = $r11;

        buff = newarray (byte)[1024];

     label05:
        $r13 = virtualinvoke zis.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        ze = $r13;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r13);

        if $r13 == null goto label10;

        $z0 = virtualinvoke ze.<java.util.zip.ZipEntry: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label06;

        $r14 = new java.io.File;

        $r15 = virtualinvoke ze.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String,java.lang.String)>(cacheDir, $r15);

        virtualinvoke $r14.<java.io.File: boolean mkdir()>();

        goto label05;

     label06:
        $r16 = new java.io.BufferedOutputStream;

        $r17 = new java.io.FileOutputStream;

        $r18 = new java.io.File;

        $r19 = virtualinvoke ze.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>(cacheDir, $r19);

        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r18);

        specialinvoke $r16.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r17);

        bo = $r16;

     label07:
        amountRead = virtualinvoke zis.<java.util.zip.ZipInputStream: int read(byte[])>(buff);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(amountRead);

        if amountRead != -1 goto label08;

        goto label09;

     label08:
        virtualinvoke bo.<java.io.BufferedOutputStream: void write(byte[],int,int)>(buff, 0, amountRead);

        goto label07;

     label09:
        virtualinvoke bo.<java.io.BufferedOutputStream: void close()>();

        goto label05;

     label10:
        goto label16;

     label11:
        $r20 := @caughtexception;

        e = $r20;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

        <weka.core.WekaPackageManager: java.net.URL CACHE_URL> = null;

     label12:
        $r21 = new java.io.File;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(cacheDir);

        $r22 = newarray (java.io.PrintStream)[1];

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22[0] = $r23;

        staticinvoke <weka.core.packageManagement.DefaultPackageManager: void deleteDir(java.io.File,java.io.PrintStream[])>($r21, $r22);

     label13:
        goto label15;

     label14:
        $r24 := @caughtexception;

        e1 = $r24;

        virtualinvoke e1.<java.lang.Exception: void printStackTrace()>();

     label15:
        return e;

     label16:
        return null;

        catch java.lang.Exception from label02 to label10 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    protected static boolean checkForForcedCacheRefresh() throws java.net.MalformedURLException
    {
        int refreshCountServer, refreshCountLocal;
        boolean $z0;

        refreshCountServer = staticinvoke <weka.core.WekaPackageManager: int getForcedRefreshCount(boolean)>(0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(refreshCountServer);

        if refreshCountServer <= 0 goto label3;

        refreshCountLocal = staticinvoke <weka.core.WekaPackageManager: int getForcedRefreshCount(boolean)>(1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(refreshCountServer);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(refreshCountLocal);

        if refreshCountServer <= refreshCountLocal goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    protected static void establishMirror()
    {
        java.net.URL connURL, $r0, $r18;
        java.io.BufferedReader bi, $r4;
        java.lang.Exception ex, $r20;
        boolean $z0, $z1, $z2, $z3;
        weka.core.packageManagement.PackageManager $r1, $r2;
        java.net.Proxy $r3;
        java.net.URLConnection conn#15;
        java.io.InputStreamReader $r5;
        java.io.InputStream $r6;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r15, $r17, $r19, $r24, $r27;
        int $i0;
        weka.core.logging.Logger$Level $r12, $r21;
        java.lang.StringBuilder $r13, $r14, $r16, $r22, $r23, $r25, $r26;

        $z0 = <weka.core.WekaPackageManager: boolean m_offline>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>("http://www.cs.waikato.ac.nz/ml/weka/packageMetaDataMirror.txt");

        connURL = $r0;

        $r1 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $z1 = virtualinvoke $r1.<weka.core.packageManagement.PackageManager: boolean setProxyAuthentication(java.net.URL)>(connURL);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r2 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r3 = virtualinvoke $r2.<weka.core.packageManagement.PackageManager: java.net.Proxy getProxy()>();

        conn#15 = virtualinvoke connURL.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r3);

        goto label3;

     label2:
        conn#15 = virtualinvoke connURL.<java.net.URL: java.net.URLConnection openConnection()>();

     label3:
        virtualinvoke conn#15.<java.net.URLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke conn#15.<java.net.URLConnection: void setReadTimeout(int)>(10000);

        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        $r6 = virtualinvoke conn#15.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        bi = $r4;

        $r7 = virtualinvoke bi.<java.io.BufferedReader: java.lang.String readLine()>();

        <weka.core.WekaPackageManager: java.lang.String REP_MIRROR> = $r7;

        virtualinvoke bi.<java.io.BufferedReader: void close()>();

        $r8 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8);

        if $r8 == null goto label4;

        $r9 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label4;

        $r10 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        $r11 = <weka.core.WekaPackageManager: java.lang.String PRIMARY_REPOSITORY>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label4;

        $z3 = <weka.core.WekaPackageManager: boolean USER_SET_REPO>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label4;

        $r12 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level INFO>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] Package manager using repository mirror: ");

        $r15 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.core.WekaPackageManager: void log(weka.core.logging.Logger$Level,java.lang.String)>($r12, $r17);

        $r18 = new java.net.URL;

        $r19 = <weka.core.WekaPackageManager: java.lang.String REP_MIRROR>;

        specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r19);

        <weka.core.WekaPackageManager: java.net.URL REP_URL> = $r18;

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        ex = $r20;

        $r21 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level WARNING>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WekaPackageManager] The repository meta data mirror file seems to be unavailable (");

        $r24 = virtualinvoke ex.<java.lang.Exception: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <weka.core.WekaPackageManager: void log(weka.core.logging.Logger$Level,java.lang.String)>($r21, $r27);

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected static void cleanRepCacheDir()
    {
        java.lang.String cacheDir, $r2, $r4;
        java.io.File cacheDirF, f, pf, $r1, $r7;
        java.io.File[] contents, l3, packageMetaDirContents, l8;
        int l4, l9, l5#22, l10#37;
        java.lang.StringBuilder $r0, $r3, $r5, $r6;
        boolean $z0, $z1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <weka.core.WekaPackageManager: java.io.File WEKA_HOME>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repCache");

        cacheDir = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(cacheDir);

        cacheDirF = $r7;

        $z0 = virtualinvoke cacheDirF.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        contents = virtualinvoke cacheDirF.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(contents);

        if contents == null goto label4;

        l3 = contents;

        l4 = lengthof l3;

        l5#22 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5#22);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4);

        if l5#22 >= l4 goto label4;

        f = l3[l5#22];

        $z1 = virtualinvoke f.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        packageMetaDirContents = virtualinvoke f.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(packageMetaDirContents);

        if packageMetaDirContents == null goto label3;

        l8 = packageMetaDirContents;

        l9 = lengthof l8;

        l10#37 = 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l10#37);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9);

        if l10#37 >= l9 goto label3;

        pf = l8[l10#37];

        virtualinvoke pf.<java.io.File: boolean delete()>();

        l10#37 = l10#37 + 1;

        goto label2;

     label3:
        virtualinvoke f.<java.io.File: boolean delete()>();

        l5#22 = l5#22 + 1;

        goto label1;

     label4:
        return;
    }

    protected static int getForcedRefreshCount(boolean) throws java.net.MalformedURLException
    {
        boolean local, $z0;
        java.lang.String refreshCountS, countS, $r5;
        java.net.URL connURL, $r1, $r4, $r9;
        java.io.BufferedReader bi, $r13;
        weka.core.packageManagement.PackageManager $r0, $r3, $r10, $r11;
        java.lang.StringBuilder $r2, $r6, $r7, $r8;
        int refreshCount#16, $i0;
        java.net.Proxy $r12;
        java.net.URLConnection conn#29;
        java.io.InputStreamReader $r14;
        java.io.InputStream $r15;
        java.lang.NumberFormatException $r16;
        java.io.IOException $r17;

        local := @parameter0: boolean;

        staticinvoke <weka.core.WekaPackageManager: void useCacheOrOnlineRepository()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(local);

        if local != 0 goto label01;

        $r0 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r1 = <weka.core.WekaPackageManager: java.net.URL REP_URL>;

        virtualinvoke $r0.<weka.core.packageManagement.PackageManager: void setPackageRepositoryURL(java.net.URL)>($r1);

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r4 = virtualinvoke $r3.<weka.core.packageManagement.PackageManager: java.net.URL getPackageRepositoryURL()>();

        $r5 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forcedRefreshCount.txt");

        refreshCountS = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        refreshCount#16 = -1;

        $r9 = new java.net.URL;

        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>(refreshCountS);

        connURL = $r9;

     label02:
        $r10 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $z0 = virtualinvoke $r10.<weka.core.packageManagement.PackageManager: boolean setProxyAuthentication(java.net.URL)>(connURL);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        $r11 = <weka.core.WekaPackageManager: weka.core.packageManagement.PackageManager PACKAGE_MANAGER>;

        $r12 = virtualinvoke $r11.<weka.core.packageManagement.PackageManager: java.net.Proxy getProxy()>();

        conn#29 = virtualinvoke connURL.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r12);

        goto label04;

     label03:
        conn#29 = virtualinvoke connURL.<java.net.URL: java.net.URLConnection openConnection()>();

     label04:
        virtualinvoke conn#29.<java.net.URLConnection: void setConnectTimeout(int)>(30000);

        $r13 = new java.io.BufferedReader;

        $r14 = new java.io.InputStreamReader;

        $r15 = virtualinvoke conn#29.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r15);

        specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);

        bi = $r13;

        countS = virtualinvoke bi.<java.io.BufferedReader: java.lang.String readLine()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(countS);

        if countS == null goto label08;

        $i0 = virtualinvoke countS.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label08;

     label05:
        refreshCount#16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(countS);

     label06:
        goto label08;

     label07:
        $r16 := @caughtexception;

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

     label10:
        return refreshCount#16;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.io.IOException from label02 to label08 with label09;
    }


