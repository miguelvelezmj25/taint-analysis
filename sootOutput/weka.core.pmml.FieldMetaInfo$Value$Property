    static void <clinit>()
    {
        weka.core.pmml.FieldMetaInfo$Value$Property $r0, $r1, $r2, $r4, $r5, $r6;
        weka.core.pmml.FieldMetaInfo$Value$Property[] $r3;

        $r0 = new weka.core.pmml.FieldMetaInfo$Value$Property;

        specialinvoke $r0.<weka.core.pmml.FieldMetaInfo$Value$Property: void <init>(java.lang.String,int,java.lang.String)>("VALID", 0, "valid");

        <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property VALID> = $r0;

        $r1 = new weka.core.pmml.FieldMetaInfo$Value$Property;

        specialinvoke $r1.<weka.core.pmml.FieldMetaInfo$Value$Property: void <init>(java.lang.String,int,java.lang.String)>("INVALID", 1, "invalid");

        <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property INVALID> = $r1;

        $r2 = new weka.core.pmml.FieldMetaInfo$Value$Property;

        specialinvoke $r2.<weka.core.pmml.FieldMetaInfo$Value$Property: void <init>(java.lang.String,int,java.lang.String)>("MISSING", 2, "missing");

        <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property MISSING> = $r2;

        $r3 = newarray (weka.core.pmml.FieldMetaInfo$Value$Property)[3];

        $r4 = <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property VALID>;

        $r3[0] = $r4;

        $r5 = <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property INVALID>;

        $r3[1] = $r5;

        $r6 = <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property MISSING>;

        $r3[2] = $r6;

        <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property[] $VALUES> = $r3;

        return;
    }

    public static weka.core.pmml.FieldMetaInfo$Value$Property[] values()
    {
        weka.core.pmml.FieldMetaInfo$Value$Property[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <weka.core.pmml.FieldMetaInfo$Value$Property: weka.core.pmml.FieldMetaInfo$Value$Property[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (weka.core.pmml.FieldMetaInfo$Value$Property[]) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        weka.core.pmml.FieldMetaInfo$Value$Property this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.core.pmml.FieldMetaInfo$Value$Property;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<weka.core.pmml.FieldMetaInfo$Value$Property: java.lang.String m_stringVal> = name;

        return;
    }

    public java.lang.String toString()
    {
        weka.core.pmml.FieldMetaInfo$Value$Property this;
        java.lang.String $r0;

        this := @this: weka.core.pmml.FieldMetaInfo$Value$Property;

        $r0 = this.<weka.core.pmml.FieldMetaInfo$Value$Property: java.lang.String m_stringVal>;

        return $r0;
    }


