    public void flush() throws java.io.IOException
    {
        java.io.DataOutputStream l0;
        java.io.OutputStream $r0;

        l0 := @this: java.io.DataOutputStream;

        $r0 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void flush()>();

        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        java.io.DataOutputStream l0;
        byte[] l1;
        int l2, l3;
        java.io.OutputStream $r0;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $r0 = l0.<java.io.DataOutputStream: java.io.OutputStream out>;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>(l1, l2, l3);

        specialinvoke l0.<java.io.DataOutputStream: void incCount(int)>(l3);

        return;
    }

    private void incCount(int)
    {
        java.io.DataOutputStream l0;
        int l1, $i0, l2#5;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: int;

        $i0 = l0.<java.io.DataOutputStream: int written>;

        l2#5 = $i0 + l1;

        if l2#5 >= 0 goto label1;

        l2#5 = 2147483647;

     label1:
        l0.<java.io.DataOutputStream: int written> = l2#5;

        return;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.DataOutputStream l0;
        java.io.OutputStream l1;
        byte[] $r0;

        l0 := @this: java.io.DataOutputStream;

        l1 := @parameter0: java.io.OutputStream;

        specialinvoke l0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(l1);

        l0.<java.io.DataOutputStream: byte[] bytearr> = null;

        $r0 = newarray (byte)[8];

        l0.<java.io.DataOutputStream: byte[] writeBuffer> = $r0;

        return;
    }


