    public static java.lang.String pad(java.lang.String, java.lang.String, int, boolean)
    {
        java.lang.String source, padChar, $r5;
        int length, i#5, i#18;
        boolean leftPad;
        java.lang.StringBuffer temp, $r0;

        source := @parameter0: java.lang.String;

        padChar := @parameter1: java.lang.String;

        length := @parameter2: int;

        leftPad := @parameter3: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        temp = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(leftPad);

        if leftPad == 0 goto label3;

        i#5 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length);

        if i#5 >= length goto label2;

        virtualinvoke temp.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(padChar);

        i#5 = i#5 + 1;

        goto label1;

     label2:
        virtualinvoke temp.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(source);

        goto label5;

     label3:
        virtualinvoke temp.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(source);

        i#18 = 0;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#18);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length);

        if i#18 >= length goto label5;

        virtualinvoke temp.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(padChar);

        i#18 = i#18 + 1;

        goto label4;

     label5:
        $r5 = virtualinvoke temp.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }


