digraph getDensityBuckets {
"densities := @parameter0: java.util.List {2014532610}" -> "srcDimension := @parameter1: java.awt.Dimension {1438218330}";
"srcDimension := @parameter1: java.awt.Dimension {1438218330}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {391866401}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {391866401}" -> "scale := @parameter3: float {1512823322}";
"scale := @parameter3: float {1512823322}" -> "isNinePatch := @parameter4: boolean {936935688}";
"isNinePatch := @parameter4: boolean {936935688}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {2026607639}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {2026607639}" -> "if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {200614152}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {200614152}" -> "$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {562465062}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {200614152}" -> "$b0 = scale cmpl 0.0F {1300727391}";
"$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {562465062}" -> "$d1 = $d0 - 2.0 {1147395477}";
"$d1 = $d0 - 2.0 {1147395477}" -> "$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {488298830}";
"$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {488298830}" -> "$d3 = $d2 - 2.0 {346979276}";
"$d3 = $d2 - 2.0 {346979276}" -> "virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {1597309118}";
"virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {1597309118}" -> "$b0 = scale cmpl 0.0F {1300727391}";
"$b0 = scale cmpl 0.0F {1300727391}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {345014361}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {345014361}" -> "if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {977293217}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {977293217}" -> "$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {328785982}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {977293217}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {58362755}";
"$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {328785982}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {260081985}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {260081985}" -> "if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1650211180}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1650211180}" -> "$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {2085942931}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1650211180}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {58362755}";
"$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {2085942931}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1661473966}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1661473966}" -> "if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {681144375}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {681144375}" -> "$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {1002098406}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {681144375}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {58362755}";
"$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {1002098406}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1938473166}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1938473166}" -> "if $z1 == 0 goto return null {1619089260}";
"if $z1 == 0 goto return null {1619089260}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {58362755}";
"if $z1 == 0 goto return null {1619089260}" -> "return null {629550290}";
"$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {58362755}" -> "$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {675894891}";
"$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {675894891}" -> "$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {1108954681}";
"$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {1108954681}" -> "$i2 = $r1[$i1] {359195498}";
"$i2 = $r1[$i1] {359195498}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1332190926}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1332190926}" -> "tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {467794692}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {467794692}" -> "$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {955702923}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {467794692}" -> "$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {729762524}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {467794692}" -> "$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {311314962}";
"$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {955702923}" -> "return $r3 {1513578873}";
"$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {729762524}" -> "return $r4 {775973967}";
"$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {311314962}" -> "return $r5 {1897786765}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {260081985}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1332190926}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1938473166}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {345014361}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1661473966}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {2026607639}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getDensityBucketsWithFactorScale {
"densities := @parameter0: java.util.List {2060724045}" -> "srcDimension := @parameter1: java.awt.Dimension {1689639584}";
"srcDimension := @parameter1: java.awt.Dimension {1689639584}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {767481010}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {767481010}" -> "scale := @parameter3: float {475799020}";
"scale := @parameter3: float {475799020}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {161384526}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {161384526}" -> "$d0 = (double) $i0 {1968261100}";
"$d0 = (double) $i0 {1968261100}" -> "$d1 = (double) scale {1369945679}";
"$d1 = (double) scale {1369945679}" -> "baseWidth = $d0 / $d1 {1198538026}";
"baseWidth = $d0 / $d1 {1198538026}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {847971809}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {847971809}" -> "$d2 = (double) $i1 {1191743922}";
"$d2 = (double) $i1 {1191743922}" -> "$d3 = (double) scale {1699266749}";
"$d3 = (double) scale {1699266749}" -> "baseHeight = $d2 / $d3 {906298338}";
"baseHeight = $d2 / $d3 {906298338}" -> "$r0 = new java.util.TreeMap {367751351}";
"$r0 = new java.util.TreeMap {367751351}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1014287172}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1014287172}" -> "bucketMap = $r0 {738639470}";
"bucketMap = $r0 {738639470}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {140898971}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {140898971}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {1715510592}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {1715510592}" -> "predicate = $r1 {508220733}";
"predicate = $r1 {508220733}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {1072791553}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {1072791553}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {1367388498}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {1367388498}" -> "consumer = $r2 {1949643335}";
"consumer = $r2 {1949643335}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {961537032}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {961537032}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1359875042}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1359875042}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1950568945}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1950568945}" -> "return bucketMap {2086136890}";
}

digraph getDensityBucketsHeightDpScale {
"densities := @parameter0: java.util.List {1141300622}" -> "srcDimension := @parameter1: java.awt.Dimension {1373781243}";
"srcDimension := @parameter1: java.awt.Dimension {1373781243}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1272188241}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1272188241}" -> "scale := @parameter3: float {2020355275}";
"scale := @parameter3: float {2020355275}" -> "$i0 = srcDimension.<java.awt.Dimension: int height> {216015728}";
"$i0 = srcDimension.<java.awt.Dimension: int height> {216015728}" -> "$f0 = (float) $i0 {1697960093}";
"$f0 = (float) $i0 {1697960093}" -> "scaleFactor = scale / $f0 {1788354372}";
"scaleFactor = scale / $f0 {1788354372}" -> "$i1 = srcDimension.<java.awt.Dimension: int width> {1204023526}";
"$i1 = srcDimension.<java.awt.Dimension: int width> {1204023526}" -> "$f1 = (float) $i1 {1261616644}";
"$f1 = (float) $i1 {1261616644}" -> "$f2 = scaleFactor * $f1 {1460529266}";
"$f2 = scaleFactor * $f1 {1460529266}" -> "$d0 = (double) $f2 {601997366}";
"$d0 = (double) $f2 {601997366}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {2071810156}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {2071810156}" -> "baseWidth = (int) $d1 {811250379}";
"baseWidth = (int) $d1 {811250379}" -> "$d2 = (double) scale {677355026}";
"$d2 = (double) scale {677355026}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1299623224}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1299623224}" -> "baseHeight = (int) $d3 {904024236}";
"baseHeight = (int) $d3 {904024236}" -> "$r0 = new java.util.TreeMap {1292186693}";
"$r0 = new java.util.TreeMap {1292186693}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1251352405}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1251352405}" -> "bucketMap = $r0 {160819048}";
"bucketMap = $r0 {160819048}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {97345827}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {97345827}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {752253014}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {752253014}" -> "predicate = $r1 {1500593300}";
"predicate = $r1 {1500593300}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {503161611}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {503161611}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {2074772987}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {2074772987}" -> "consumer = $r2 {2070323672}";
"consumer = $r2 {2070323672}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1460840459}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1460840459}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {72227200}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {72227200}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {2099267217}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {2099267217}" -> "return bucketMap {58705552}";
}

digraph getDensityBucketsWithDpScale {
"densities := @parameter0: java.util.List {959999530}" -> "srcDimension := @parameter1: java.awt.Dimension {1128598777}";
"srcDimension := @parameter1: java.awt.Dimension {1128598777}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1313357403}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1313357403}" -> "scale := @parameter3: float {1436514270}";
"scale := @parameter3: float {1436514270}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {183635091}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {183635091}" -> "$f0 = (float) $i0 {904775944}";
"$f0 = (float) $i0 {904775944}" -> "scaleFactor = scale / $f0 {2083626520}";
"scaleFactor = scale / $f0 {2083626520}" -> "$d0 = (double) scale {2052896677}";
"$d0 = (double) scale {2052896677}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {183318440}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {183318440}" -> "baseWidth = (int) $d1 {1367872443}";
"baseWidth = (int) $d1 {1367872443}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {1733519050}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {1733519050}" -> "$f1 = (float) $i1 {1652688792}";
"$f1 = (float) $i1 {1652688792}" -> "$f2 = scaleFactor * $f1 {1357904316}";
"$f2 = scaleFactor * $f1 {1357904316}" -> "$d2 = (double) $f2 {1432311478}";
"$d2 = (double) $f2 {1432311478}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {700846049}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {700846049}" -> "baseHeight = (int) $d3 {1539457410}";
"baseHeight = (int) $d3 {1539457410}" -> "$r0 = new java.util.TreeMap {1122165788}";
"$r0 = new java.util.TreeMap {1122165788}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {78610123}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {78610123}" -> "bucketMap = $r0 {406797856}";
"bucketMap = $r0 {406797856}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate {924847283}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate {924847283}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {1909894476}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {1909894476}" -> "predicate = $r1 {236816940}";
"predicate = $r1 {236816940}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer {1176206350}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer {1176206350}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1416695731}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1416695731}" -> "consumer = $r2 {1461257134}";
"consumer = $r2 {1461257134}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1971420619}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1971420619}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1049191256}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1049191256}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1718696437}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1718696437}" -> "return bucketMap {582033461}";
}


