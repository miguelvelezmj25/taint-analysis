    public static void main(java.lang.String[])
    {
        java.lang.String[] rawArgs;
        java.io.File src, dst, tmp$2143559864, tmp$1334675172;
        boolean scaleIsHeightdp, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, createMipMapInsteadOfDrawableDir, enablePNGCrush, enableMozJPEG, postConvertWEBP, enableAntiAliasing, dryRun, keepUnoptimizedFilesPostProcessor, iosCreateImageSetFolder, clearDirBeforeConvert, help, version, guiAdvancedOptions, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        at.favre.tools.dconvert.arg.Arguments args, tmp$825496893;
        java.util.ResourceBundle strings;
        org.apache.commons.cli.Options options;
        at.favre.tools.dconvert.DConvert dc, tmp$1177903557;
        at.favre.tools.dconvert.MyHandlerCallback hc, tmp$879292014;
        java.lang.String $r2, $r5, $r8, $r11, $r25, $r27, $r34;
        java.lang.StringBuilder $r3, $r4, $r9, $r10, $r22, $r26, $r30, $r32, $r33, tmp$77029509, tmp$238612663, tmp$1600061360, tmp$878493504;
        java.lang.Boolean $r12, $r13;
        byte scale#30;
        at.favre.tools.dconvert.arg.EPlatform[] $r15;
        at.favre.tools.dconvert.arg.EPlatform $r16;
        java.util.List $r17, $r31;
        java.lang.Object platforms#39;
        at.favre.tools.dconvert.arg.EOutputCompressionMode compressionMode#41;
        at.favre.tools.dconvert.arg.EScaleMode scaleMode#43;
        at.favre.tools.dconvert.arg.EScalingAlgorithm downScaling#46, upScaling#48;
        float compressionQuality#50, $f0;
        at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingStrategy#64;
        java.util.Locale $r19;
        java.io.PrintStream $r20, $r28;
        java.lang.Class $r23;
        java.lang.Package $r24;
        int $i0;
        java.util.HashSet tmp$379056819;
        java.util.Set tmp$1489099273;

        rawArgs := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        tmp$2143559864 = new java.io.File;

        tmp$77029509 = new java.lang.StringBuilder;

        specialinvoke tmp$77029509.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r3 = virtualinvoke tmp$77029509.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/density/files/person.jpg");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$2143559864.<java.io.File: void <init>(java.lang.String)>($r5);

        src = tmp$2143559864;

        tmp$1334675172 = new java.io.File;

        tmp$238612663 = new java.lang.StringBuilder;

        specialinvoke tmp$238612663.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r9 = virtualinvoke tmp$238612663.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/density/output");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1334675172.<java.io.File: void <init>(java.lang.String)>($r11);

        dst = tmp$1334675172;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALE(boolean)>($z0);

        <at.favre.tools.dconvert.Run: boolean SCALE> = $z1;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z2 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPLATFORM(boolean)>($z2);

        <at.favre.tools.dconvert.Run: boolean PLATFORM> = $z3;

        scale#30 = 1;

        tmp$379056819 = new java.util.HashSet;

        $r15 = newarray (at.favre.tools.dconvert.arg.EPlatform)[1];

        $r16 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID>;

        $r15[0] = $r16;

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        specialinvoke tmp$379056819.<java.util.HashSet: void <init>(java.util.Collection)>($r17);

        platforms#39 = tmp$379056819;

        compressionMode#41 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG>;

        scaleMode#43 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR>;

        scaleIsHeightdp = <at.favre.tools.dconvert.Run: boolean SCALEISHEIGHTDP>;

        downScaling#46 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        upScaling#48 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        compressionQuality#50 = 0.9F;

        skipExistingFiles = <at.favre.tools.dconvert.Run: boolean SKIPEXISTINGFILES>;

        skipUpScaling = <at.favre.tools.dconvert.Run: boolean SKIPUPSCALING>;

        verboseLog = <at.favre.tools.dconvert.Run: boolean VERBOSELOG>;

        includeAndroiddpiTvdpi = <at.favre.tools.dconvert.Run: boolean INCLUDEANDROIDLDPITVDPI>;

        haltOnError = <at.favre.tools.dconvert.Run: boolean HALTONERROR>;

        createMipMapInsteadOfDrawableDir = <at.favre.tools.dconvert.Run: boolean CREATEMIPMAPINSTEADOFDRAWABLEDIR>;

        enablePNGCrush = <at.favre.tools.dconvert.Run: boolean ENABLEPNGCRUSH>;

        enableMozJPEG = <at.favre.tools.dconvert.Run: boolean ENABLEMOZJPEG>;

        postConvertWEBP = <at.favre.tools.dconvert.Run: boolean POSTCONVERTWEBP>;

        enableAntiAliasing = <at.favre.tools.dconvert.Run: boolean ENABLEANTIALIASING>;

        dryRun = <at.favre.tools.dconvert.Run: boolean DRYRUN>;

        keepUnoptimizedFilesPostProcessor = <at.favre.tools.dconvert.Run: boolean KEEPUNOPTIMIZEDFILESPOSTPROCESSOR>;

        roundingStrategy#64 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy FLOOR>;

        iosCreateImageSetFolder = <at.favre.tools.dconvert.Run: boolean IOSCREATEIMAGESETFOLDERS>;

        clearDirBeforeConvert = <at.favre.tools.dconvert.Run: boolean CLEARDIRBEFORECONVERT>;

        help = <at.favre.tools.dconvert.Run: boolean HELP>;

        version = <at.favre.tools.dconvert.Run: boolean VERSION>;

        guiAdvancedOptions = <at.favre.tools.dconvert.Run: boolean GUIADVANCEDOPTIONS>;

        $z4 = <at.favre.tools.dconvert.Run: boolean SCALE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label01;

        scale#30 = 5;

     label01:
        $z5 = <at.favre.tools.dconvert.Run: boolean PLATFORM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label02;

        platforms#39 = staticinvoke <at.favre.tools.dconvert.arg.EPlatform: java.util.Set getAll()>();

     label02:
        $z6 = <at.favre.tools.dconvert.Run: boolean OUTPUTCOMPRESSIONGMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label03;

        compressionMode#41 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG_AND_PNG>;

     label03:
        $z7 = <at.favre.tools.dconvert.Run: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label04;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scaleIsHeightdp);

        if scaleIsHeightdp == 0 goto label04;

        scaleMode#43 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_HEIGHT>;

        goto label05;

     label04:
        $z8 = <at.favre.tools.dconvert.Run: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label05;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(scaleIsHeightdp);

        if scaleIsHeightdp != 0 goto label05;

        scaleMode#43 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_WIDTH>;

     label05:
        $z9 = <at.favre.tools.dconvert.Run: boolean DOWNSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label06;

        downScaling#46 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR_PROGRESSIVE>;

     label06:
        $z10 = <at.favre.tools.dconvert.Run: boolean UPSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label07;

        upScaling#48 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR>;

     label07:
        $z11 = <at.favre.tools.dconvert.Run: boolean COMPRESSQUALITY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label08;

        compressionQuality#50 = 0.1F;

     label08:
        $z12 = <at.favre.tools.dconvert.Run: boolean ROUNDINGHANDLER>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label09;

        roundingStrategy#64 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy CEIL>;

     label09:
        tmp$825496893 = new at.favre.tools.dconvert.arg.Arguments;

        $f0 = (float) scale#30;

        tmp$1489099273 = (java.util.Set) platforms#39;

        specialinvoke tmp$825496893.<at.favre.tools.dconvert.arg.Arguments: void <init>(java.io.File,java.io.File,float,java.util.Set,at.favre.tools.dconvert.arg.EOutputCompressionMode,at.favre.tools.dconvert.arg.EScaleMode,at.favre.tools.dconvert.arg.EScalingAlgorithm,at.favre.tools.dconvert.arg.EScalingAlgorithm,float,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,at.favre.tools.dconvert.arg.RoundingHandler$Strategy,boolean,boolean)>(src, dst, $f0, tmp$1489099273, compressionMode#41, scaleMode#43, downScaling#46, upScaling#48, compressionQuality#50, 1, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, createMipMapInsteadOfDrawableDir, iosCreateImageSetFolder, enablePNGCrush, enableMozJPEG, postConvertWEBP, enableAntiAliasing, dryRun, keepUnoptimizedFilesPostProcessor, roundingStrategy#64, guiAdvancedOptions, clearDirBeforeConvert);

        args = tmp$825496893;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(help);

        if help == 0 goto label10;

        $r19 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        strings = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("bundles.strings", $r19);

        options = staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: org.apache.commons.cli.Options setupOptions(java.util.ResourceBundle)>(strings);

        staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: void printHelp(org.apache.commons.cli.Options)>(options);

        return;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(version);

        if version == 0 goto label11;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        tmp$1600061360 = new java.lang.StringBuilder;

        specialinvoke tmp$1600061360.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke tmp$1600061360.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version: ");

        $r23 = class "at/favre/tools/dconvert/ui/CLIInterpreter";

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.Package getPackage()>();

        $r25 = virtualinvoke $r24.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r27);

        return;

     label11:
        $r28 = <java.lang.System: java.io.PrintStream out>;

        tmp$878493504 = new java.lang.StringBuilder;

        specialinvoke tmp$878493504.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke tmp$878493504.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start converting ");

        $r31 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess>;

        $i0 = interfaceinvoke $r31.<java.util.List: int size()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r34);

        tmp$1177903557 = new at.favre.tools.dconvert.DConvert;

        specialinvoke tmp$1177903557.<at.favre.tools.dconvert.DConvert: void <init>()>();

        dc = tmp$1177903557;

        tmp$879292014 = new at.favre.tools.dconvert.MyHandlerCallback;

        specialinvoke tmp$879292014.<at.favre.tools.dconvert.MyHandlerCallback: void <init>(at.favre.tools.dconvert.arg.Arguments)>(args);

        hc = tmp$879292014;

        virtualinvoke dc.<at.favre.tools.dconvert.DConvert: void execute(at.favre.tools.dconvert.arg.Arguments,boolean,at.favre.tools.dconvert.DConvert$HandlerCallback)>(args, 1, hc);

        return;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.Run this;

        this := @this: at.favre.tools.dconvert.Run;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


