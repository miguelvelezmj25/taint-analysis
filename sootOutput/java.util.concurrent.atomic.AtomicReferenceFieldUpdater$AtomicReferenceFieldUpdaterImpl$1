    void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl, java.lang.Class, java.lang.String)
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 l0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl l1;
        java.lang.Class l2;
        java.lang.String l3;

        l0 := @this: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1;

        l1 := @parameter0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;

        l2 := @parameter1: java.lang.Class;

        l3 := @parameter2: java.lang.String;

        l0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl this$0> = l1;

        l0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.Class val$tclass> = l2;

        l0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.String val$fieldName> = l3;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 l0;
        java.lang.reflect.Field $r0;

        l0 := @this: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1;

        $r0 = virtualinvoke l0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.reflect.Field run()>();

        return $r0;
    }

    public java.lang.reflect.Field run() throws java.lang.NoSuchFieldException
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 l0;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.reflect.Field $r2;

        l0 := @this: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1;

        $r0 = l0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.Class val$tclass>;

        $r1 = l0.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.String val$fieldName>;

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r1);

        return $r2;
    }


