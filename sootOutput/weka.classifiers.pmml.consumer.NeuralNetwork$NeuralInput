    protected void <init>(org.w3c.dom.Element, weka.core.pmml.MiningSchema) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput this;
        org.w3c.dom.Element input, dF;
        weka.core.pmml.MiningSchema miningSchema;
        org.w3c.dom.NodeList fL;
        weka.core.Instances allFields;
        java.util.ArrayList fieldDefs, $r3;
        java.lang.String $r0;
        int $i0, i#26, $i1;
        java.lang.Exception $r1;
        org.w3c.dom.Node $r2;
        weka.core.Attribute $r4;
        weka.core.pmml.DerivedFieldMetaInfo $r5;
        weka.core.pmml.TransformationDictionary $r6;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput;

        input := @parameter0: org.w3c.dom.Element;

        miningSchema := @parameter1: weka.core.pmml.MiningSchema;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput: java.lang.String m_ID> = null;

        $r0 = interfaceinvoke input.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        this.<weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput: java.lang.String m_ID> = $r0;

        fL = interfaceinvoke input.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("DerivedField");

        $i0 = interfaceinvoke fL.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 1 goto label1;

        $r1 = new java.lang.Exception;

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>("[NeuralInput] expecting just one derived field!");

        throw $r1;

     label1:
        $r2 = interfaceinvoke fL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        dF = (org.w3c.dom.Element) $r2;

        allFields = virtualinvoke miningSchema.<weka.core.pmml.MiningSchema: weka.core.Instances getFieldsAsInstances()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        fieldDefs = $r3;

        i#26 = 0;

     label2:
        $i1 = virtualinvoke allFields.<weka.core.Instances: int numAttributes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#26);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if i#26 >= $i1 goto label3;

        $r4 = virtualinvoke allFields.<weka.core.Instances: weka.core.Attribute attribute(int)>(i#26);

        virtualinvoke fieldDefs.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i#26 = i#26 + 1;

        goto label2;

     label3:
        $r5 = new weka.core.pmml.DerivedFieldMetaInfo;

        $r6 = virtualinvoke miningSchema.<weka.core.pmml.MiningSchema: weka.core.pmml.TransformationDictionary getTransformationDictionary()>();

        specialinvoke $r5.<weka.core.pmml.DerivedFieldMetaInfo: void <init>(org.w3c.dom.Element,java.util.ArrayList,weka.core.pmml.TransformationDictionary)>(dF, fieldDefs, $r6);

        this.<weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput: weka.core.pmml.DerivedFieldMetaInfo m_field> = $r5;

        return;
    }

    static java.lang.String access$100(weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput)
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput x0;
        java.lang.String $r0;

        x0 := @parameter0: weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput;

        $r0 = specialinvoke x0.<weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput: java.lang.String getID()>();

        return $r0;
    }

    private java.lang.String getID()
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput this;
        java.lang.String $r0;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput;

        $r0 = this.<weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput: java.lang.String m_ID>;

        return $r0;
    }

    protected double getValue(double[]) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput this;
        double[] incoming;
        weka.core.pmml.DerivedFieldMetaInfo $r0;
        double $d0;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput;

        incoming := @parameter0: double[];

        $r0 = this.<weka.classifiers.pmml.consumer.NeuralNetwork$NeuralInput: weka.core.pmml.DerivedFieldMetaInfo m_field>;

        $d0 = virtualinvoke $r0.<weka.core.pmml.DerivedFieldMetaInfo: double getDerivedValue(double[])>(incoming);

        return $d0;
    }


