    public void <init>(org.unix4j.sort.context.ExecutionContext, org.unix4j.sort.processor.LineProcessor, org.unix4j.sort.unix.sort.SortArguments)
    {
        org.unix4j.sort.unix.sort.SortProcessor this;
        org.unix4j.sort.context.ExecutionContext context;
        org.unix4j.sort.processor.LineProcessor output;
        org.unix4j.sort.unix.sort.SortArguments arguments;
        java.util.ArrayList $r0;

        this := @this: org.unix4j.sort.unix.sort.SortProcessor;

        context := @parameter0: org.unix4j.sort.context.ExecutionContext;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        arguments := @parameter2: org.unix4j.sort.unix.sort.SortArguments;

        specialinvoke this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: void <init>(org.unix4j.sort.context.ExecutionContext,org.unix4j.sort.processor.LineProcessor,org.unix4j.sort.unix.sort.SortArguments)>(context, output, arguments);

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.ArrayList lineBuffer> = $r0;

        return;
    }

    public void finish()
    {
        org.unix4j.sort.unix.sort.SortProcessor this;
        org.unix4j.sort.processor.LineProcessor output;
        int size, i#11;
        org.unix4j.sort.line.Line line;
        java.util.ArrayList $r0, $r2, $r3;
        java.util.Comparator $r1;
        java.lang.Object $r4;
        boolean $z0;

        this := @this: org.unix4j.sort.unix.sort.SortProcessor;

        output = virtualinvoke this.<org.unix4j.sort.unix.sort.SortProcessor: org.unix4j.sort.processor.LineProcessor getOutput()>();

        $r0 = this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.ArrayList lineBuffer>;

        $r1 = virtualinvoke this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.Comparator getComparator()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r1);

        $r2 = this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.ArrayList lineBuffer>;

        size = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i#11 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        if i#11 >= size goto label3;

        $r3 = this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.ArrayList lineBuffer>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i#11, null);

        line = (org.unix4j.sort.line.Line) $r4;

        $z0 = interfaceinvoke output.<org.unix4j.sort.processor.LineProcessor: boolean processLine(org.unix4j.sort.line.Line)>(line);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        i#11 = i#11 + 1;

        goto label1;

     label3:
        this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.ArrayList lineBuffer> = null;

        interfaceinvoke output.<org.unix4j.sort.processor.LineProcessor: void finish()>();

        return;
    }

    public boolean processLine(org.unix4j.sort.line.Line)
    {
        org.unix4j.sort.unix.sort.SortProcessor this;
        org.unix4j.sort.line.Line line;
        java.util.ArrayList $r0;

        this := @this: org.unix4j.sort.unix.sort.SortProcessor;

        line := @parameter0: org.unix4j.sort.line.Line;

        $r0 = this.<org.unix4j.sort.unix.sort.SortProcessor: java.util.ArrayList lineBuffer>;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(line);

        return 1;
    }


