    void <init>(int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int maxBlockSize, $i0, $i1;
        char[] $r0, $r1, $r2;
        byte[] $r3;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        maxBlockSize := @parameter0: int;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        $r0 = newarray (char)[maxBlockSize];

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length> = $r0;

        nop;

        $r1 = newarray (char)[maxBlockSize];

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist> = $r1;

        nop;

        $i0 = 8 * maxBlockSize;

        nop;

        $r2 = newarray (char)[$i0];

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos> = $r2;

        nop;

        $i1 = 8 * maxBlockSize;

        nop;

        $r3 = newarray (byte)[$i1];

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen> = $r3;

        nop;

        return;
    }

    void init(int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int blockSize, n, i#17, j#23, l#30, i#43, j#49, l#56;
        char[] subLenPos, length, charZeroes, charOnes, $r0;
        byte[] subLenLen, byteZeroes;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        blockSize := @parameter0: int;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] dist>;

        nop;

        staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: void fill0(char[],int)>($r0, blockSize);

        nop;

        n = blockSize << 3;

        nop;

        subLenPos = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        nop;

        subLenLen = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        nop;

        length = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] length>;

        nop;

        charZeroes = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] charZeroes>;

        nop;

        byteZeroes = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: byte[] byteZeroes>;

        nop;

        charOnes = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] charOnes>;

        nop;

        i#17 = 0;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#17);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if i#17 >= n goto label3;

        nop;

        j#23 = i#17 + 65536;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#23);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n);

        nop;

        if j#23 <= n goto label2;

        nop;

        j#23 = n;

     label2:
        nop;

        l#30 = j#23 - i#17;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(byteZeroes, 0, subLenLen, i#17, l#30);

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(charZeroes, 0, subLenPos, i#17, l#30);

        nop;

        i#17 = j#23;

        nop;

        goto label1;

     label3:
        nop;

        i#43 = 0;

     label4:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#43);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(blockSize);

        nop;

        if i#43 >= blockSize goto label6;

        nop;

        j#49 = i#43 + 65536;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#49);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(blockSize);

        nop;

        if j#49 <= blockSize goto label5;

        nop;

        j#49 = blockSize;

     label5:
        nop;

        l#56 = j#49 - i#43;

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(charOnes, 0, length, i#43, l#56);

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(charZeroes, 0, subLenPos, i#43, l#56);

        nop;

        i#43 = j#49;

        nop;

        goto label4;

     label6:
        nop;

        return;
    }

    int maxCachedSubLen(int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int pos#1, pos#5, $i1, $i2, $i5;
        char[] $r0;
        char $c0;
        byte[] $r1;
        byte $b3;
        short $s4;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        pos#1 := @parameter0: int;

        nop;

        pos#5 = pos#1 * 8;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        nop;

        $c0 = $r0[pos#5];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c0);

        nop;

        if $c0 != 0 goto label1;

        nop;

        return 0;

     label1:
        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        nop;

        $i1 = pos#5 + 8;

        nop;

        $i2 = $i1 - 1;

        nop;

        $b3 = $r1[$i2];

        nop;

        $s4 = $b3 & 255;

        nop;

        $i5 = $s4 + 3;

        nop;

        return $i5;
    }

    void cacheToSubLen(int, int, char[])
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        int pos, len, maxLength, last, cLen, prevLength#7, j#11, i#30;
        char[] output, $r1;
        char dist;
        byte[] $r0;
        byte $b0;
        short $s1;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        pos := @parameter0: int;

        nop;

        len := @parameter1: int;

        nop;

        output := @parameter2: char[];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        nop;

        if len >= 3 goto label1;

        nop;

        return;

     label1:
        nop;

        maxLength = virtualinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: int maxCachedSubLen(int)>(pos);

        nop;

        prevLength#7 = 0;

        nop;

        j#11 = 8 * pos;

        nop;

        last = j#11 + 8;

     label2:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#11);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(last);

        nop;

        if j#11 >= last goto label6;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        nop;

        $b0 = $r0[j#11];

        nop;

        $s1 = $b0 & 255;

        nop;

        cLen = $s1 + 3;

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        nop;

        dist = $r1[j#11];

        nop;

        i#30 = prevLength#7;

     label3:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#30);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cLen);

        nop;

        if i#30 > cLen goto label4;

        nop;

        output[i#30] = dist;

        nop;

        i#30 = i#30 + 1;

        nop;

        goto label3;

     label4:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cLen);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(maxLength);

        nop;

        if cLen != maxLength goto label5;

        nop;

        goto label6;

     label5:
        nop;

        prevLength#7 = cLen + 1;

        nop;

        j#11 = j#11 + 1;

        nop;

        goto label2;

     label6:
        nop;

        return;
    }

    void subLenToCache(char[], int, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache this;
        char[] input, $r0;
        int pos, len, last, bestLength#4, j#8, $i0, i#15, $i2, $i5, $i7;
        char $c1, $c3, $c4;
        byte[] $r1, $r2;
        byte $b6, $b8;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        nop;

        input := @parameter0: char[];

        nop;

        pos := @parameter1: int;

        nop;

        len := @parameter2: int;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        nop;

        if len >= 3 goto label1;

        nop;

        return;

     label1:
        nop;

        bestLength#4 = 0;

        nop;

        j#8 = pos * 8;

        nop;

        $i0 = j#8 + 8;

        nop;

        last = $i0 - 1;

        nop;

        i#15 = 3;

     label2:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#15);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        nop;

        if i#15 > len goto label5;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#15);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        nop;

        if i#15 == len goto label3;

        nop;

        $c1 = input[i#15];

        nop;

        $i2 = i#15 + 1;

        nop;

        $c3 = input[$i2];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c1);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c3);

        nop;

        if $c1 == $c3 goto label4;

     label3:
        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: char[] subLenPos>;

        nop;

        $c4 = input[i#15];

        nop;

        $r0[j#8] = $c4;

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        nop;

        $i5 = i#15 - 3;

        nop;

        $b6 = (byte) $i5;

        nop;

        $r1[j#8] = $b6;

        nop;

        bestLength#4 = i#15;

        nop;

        j#8 = j#8 + 1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#8);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(last);

        nop;

        if j#8 <= last goto label4;

        nop;

        goto label5;

     label4:
        nop;

        i#15 = i#15 + 1;

        nop;

        goto label2;

     label5:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#8);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(last);

        nop;

        if j#8 > last goto label6;

        nop;

        $r2 = this.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache: byte[] subLenLen>;

        nop;

        $i7 = bestLength#4 - 3;

        nop;

        $b8 = (byte) $i7;

        nop;

        $r2[last] = $b8;

     label6:
        nop;

        return;
    }


