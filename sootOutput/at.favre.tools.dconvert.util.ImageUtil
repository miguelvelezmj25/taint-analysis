    public static at.favre.tools.dconvert.util.LoadedImage loadImage(java.io.File) throws java.lang.Exception
    {
        java.io.File input;
        javax.imageio.stream.ImageInputStream stream;
        at.favre.tools.dconvert.util.LoadedImage image, $r5;
        java.lang.IllegalArgumentException $r0;
        boolean $z0;
        javax.imageio.IIOException $r1, $r2;
        at.favre.tools.dconvert.arg.ImageType $r3;
        java.awt.image.BufferedImage $r4, $r6;
        javax.imageio.metadata.IIOMetadata $r7;
        com.twelvemonkeys.imageio.metadata.CompoundDirectory $r8;

        input := @parameter0: java.io.File;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(input);

        if input != null goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("input == null!");

        throw $r0;

     label1:
        $z0 = virtualinvoke input.<java.io.File: boolean canRead()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r1 = new javax.imageio.IIOException;

        specialinvoke $r1.<javax.imageio.IIOException: void <init>(java.lang.String)>("Can\'t read input file!");

        throw $r1;

     label2:
        stream = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(input);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stream);

        if stream != null goto label3;

        $r2 = new javax.imageio.IIOException;

        specialinvoke $r2.<javax.imageio.IIOException: void <init>(java.lang.String)>("Can\'t create an ImageInputStream!");

        throw $r2;

     label3:
        $r3 = staticinvoke <at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.ImageType getImageType(java.io.File)>(input);

        image = staticinvoke <at.favre.tools.dconvert.util.ImageUtil: at.favre.tools.dconvert.util.LoadedImage read(javax.imageio.stream.ImageInputStream,at.favre.tools.dconvert.arg.ImageType)>(stream, $r3);

        $r4 = virtualinvoke image.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 != null goto label4;

        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

     label4:
        $r5 = new at.favre.tools.dconvert.util.LoadedImage;

        $r6 = virtualinvoke image.<at.favre.tools.dconvert.util.LoadedImage: java.awt.image.BufferedImage getImage()>();

        $r7 = virtualinvoke image.<at.favre.tools.dconvert.util.LoadedImage: javax.imageio.metadata.IIOMetadata getMetadata()>();

        $r8 = staticinvoke <at.favre.tools.dconvert.util.ImageUtil: com.twelvemonkeys.imageio.metadata.CompoundDirectory readExif(java.io.File)>(input);

        specialinvoke $r5.<at.favre.tools.dconvert.util.LoadedImage: void <init>(java.io.File,java.awt.image.BufferedImage,javax.imageio.metadata.IIOMetadata,com.twelvemonkeys.imageio.metadata.CompoundDirectory)>(input, $r6, $r7, $r8);

        return $r5;
    }

    private static com.twelvemonkeys.imageio.metadata.CompoundDirectory readExif(java.io.File) throws java.io.IOException
    {
        java.io.File input;
        javax.imageio.stream.ImageInputStream stream, exifStream;
        java.util.List exifSegment;
        java.io.InputStream exifData;
        java.lang.Throwable l9, l10, l11, l12, e, l2#7, l6#23, $r6, l8#34, $r7, l8#42, $r8, l7#48, $r9, $r10, $r11, l3#64, $r12, l3#69, $r13, $r14, $r15;
        at.favre.tools.dconvert.arg.ImageType $r0, $r1;
        boolean $z0;
        java.lang.Object $r2;
        com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegment $r3;
        com.twelvemonkeys.imageio.metadata.Directory $r5;
        com.twelvemonkeys.imageio.metadata.CompoundDirectory l7#29;
        java.io.PrintStream $r16;
        com.twelvemonkeys.imageio.metadata.exif.EXIFReader tmp$176559172;
        java.lang.Exception tmp$1316058153;

        input := @parameter0: java.io.File;

        $r0 = staticinvoke <at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.ImageType getImageType(java.io.File)>(input);

        $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r0 != $r1 goto label40;

     label01:
        stream = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(input);

        l2#7 = null;

     label02:
        exifSegment = staticinvoke <com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegmentUtil: java.util.List readSegments(javax.imageio.stream.ImageInputStream,int,java.lang.String)>(stream, 65505, "Exif");

        $z0 = interfaceinvoke exifSegment.<java.util.List: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label24;

        $r2 = interfaceinvoke exifSegment.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegment) $r2;

        exifData = virtualinvoke $r3.<com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegment: java.io.InputStream data()>();

        virtualinvoke exifData.<java.io.InputStream: int read()>();

        exifStream = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(exifData);

        l6#23 = null;

     label03:
        tmp$176559172 = new com.twelvemonkeys.imageio.metadata.exif.EXIFReader;

        specialinvoke tmp$176559172.<com.twelvemonkeys.imageio.metadata.exif.EXIFReader: void <init>()>();

        $r5 = virtualinvoke tmp$176559172.<com.twelvemonkeys.imageio.metadata.exif.EXIFReader: com.twelvemonkeys.imageio.metadata.Directory read(javax.imageio.stream.ImageInputStream)>(exifStream);

        l7#29 = (com.twelvemonkeys.imageio.metadata.CompoundDirectory) $r5;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(exifStream);

        if exifStream == null goto label09;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#23);

        if l6#23 == null goto label08;

     label05:
        interfaceinvoke exifStream.<javax.imageio.stream.ImageInputStream: void close()>();

     label06:
        goto label09;

     label07:
        $r6 := @caughtexception;

        l8#34 = $r6;

        virtualinvoke l6#23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l8#34);

        goto label09;

     label08:
        interfaceinvoke exifStream.<javax.imageio.stream.ImageInputStream: void close()>();

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stream);

        if stream == null goto label14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2#7);

        if l2#7 == null goto label13;

     label10:
        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

     label11:
        goto label14;

     label12:
        $r7 := @caughtexception;

        l8#42 = $r7;

        virtualinvoke l2#7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l8#42);

        goto label14;

     label13:
        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

     label14:
        return l7#29;

     label15:
        $r8 := @caughtexception;

     label16:
        l7#48 = $r8;

        l6#23 = l7#48;

        throw l7#48;

     label17:
        $r9 := @caughtexception;

        l9 = $r9;

     label18:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(exifStream);

        if exifStream == null goto label23;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#23);

        if l6#23 == null goto label22;

     label19:
        interfaceinvoke exifStream.<javax.imageio.stream.ImageInputStream: void close()>();

     label20:
        goto label23;

     label21:
        $r10 := @caughtexception;

        l10 = $r10;

        virtualinvoke l6#23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l10);

        goto label23;

     label22:
        interfaceinvoke exifStream.<javax.imageio.stream.ImageInputStream: void close()>();

     label23:
        throw l9;

     label24:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stream);

        if stream == null goto label38;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2#7);

        if l2#7 == null goto label28;

     label25:
        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

     label26:
        goto label38;

     label27:
        $r11 := @caughtexception;

        l3#64 = $r11;

        virtualinvoke l2#7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l3#64);

        goto label38;

     label28:
        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

        goto label38;

     label29:
        $r12 := @caughtexception;

     label30:
        l3#69 = $r12;

        l2#7 = l3#69;

        throw l3#69;

     label31:
        $r13 := @caughtexception;

        l11 = $r13;

     label32:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stream);

        if stream == null goto label37;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2#7);

        if l2#7 == null goto label36;

     label33:
        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

     label34:
        goto label37;

     label35:
        $r14 := @caughtexception;

        l12 = $r14;

        virtualinvoke l2#7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l12);

        goto label37;

     label36:
        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

     label37:
        throw l11;

     label38:
        goto label40;

     label39:
        $r15 := @caughtexception;

        e = $r15;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("could not read exif");

        tmp$1316058153 = (java.lang.Exception) e;

        virtualinvoke tmp$1316058153.<java.lang.Exception: void printStackTrace()>();

        return null;

     label40:
        return null;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label18 with label17;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label02 to label09 with label29;
        catch java.lang.Throwable from label16 to label24 with label29;
        catch java.lang.Throwable from label02 to label09 with label31;
        catch java.lang.Throwable from label16 to label24 with label31;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label30 to label32 with label31;
        catch java.lang.Exception from label01 to label14 with label39;
        catch java.lang.Exception from label16 to label38 with label39;
    }

    private static at.favre.tools.dconvert.util.LoadedImage read(javax.imageio.stream.ImageInputStream, at.favre.tools.dconvert.arg.ImageType) throws java.io.IOException
    {
        javax.imageio.stream.ImageInputStream stream;
        at.favre.tools.dconvert.arg.ImageType imageType;
        java.util.Iterator iter;
        javax.imageio.ImageReader reader;
        javax.imageio.ImageReadParam param;
        javax.imageio.metadata.IIOMetadata metadata;
        java.awt.image.BufferedImage bi;
        java.lang.Throwable l7, $r2;
        java.lang.IllegalArgumentException $r0;
        boolean $z0;
        java.lang.Object $r1;
        at.favre.tools.dconvert.util.LoadedImage $r3;

        stream := @parameter0: javax.imageio.stream.ImageInputStream;

        imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stream);

        if stream != null goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("stream == null!");

        throw $r0;

     label1:
        iter = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageReaders(java.lang.Object)>(stream);

        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        reader = (javax.imageio.ImageReader) $r1;

        param = virtualinvoke reader.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>();

        virtualinvoke reader.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(stream, 1, 1);

     label3:
        metadata = virtualinvoke reader.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0);

        bi = virtualinvoke reader.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, param);

     label4:
        virtualinvoke reader.<javax.imageio.ImageReader: void dispose()>();

        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

        goto label8;

     label5:
        $r2 := @caughtexception;

     label6:
        l7 = $r2;

     label7:
        virtualinvoke reader.<javax.imageio.ImageReader: void dispose()>();

        interfaceinvoke stream.<javax.imageio.stream.ImageInputStream: void close()>();

        throw l7;

     label8:
        $r3 = new at.favre.tools.dconvert.util.LoadedImage;

        specialinvoke $r3.<at.favre.tools.dconvert.util.LoadedImage: void <init>(java.io.File,java.awt.image.BufferedImage,javax.imageio.metadata.IIOMetadata,com.twelvemonkeys.imageio.metadata.CompoundDirectory)>(null, bi, metadata, null);

        return $r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }


