    protected void <init>(java.lang.String)
    {
        com.googlecode.pngtastic.core.PngProcessor this;
        java.lang.String logLevel;
        com.googlecode.pngtastic.core.Logger $r0, $r2, $r5, $r7;
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler $r1;
        com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler $r3;
        com.googlecode.pngtastic.core.processing.PngFilterHandler $r4;
        com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler $r6;

        this := @this: com.googlecode.pngtastic.core.PngProcessor;

        logLevel := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new com.googlecode.pngtastic.core.Logger;

        specialinvoke $r0.<com.googlecode.pngtastic.core.Logger: void <init>(java.lang.String)>(logLevel);

        this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.Logger log> = $r0;

        $r1 = new com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        $r2 = this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.Logger log>;

        specialinvoke $r1.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: void <init>(com.googlecode.pngtastic.core.Logger)>($r2);

        this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler> = $r1;

        $r3 = new com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler;

        $r5 = this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.Logger log>;

        $r4 = this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler>;

        specialinvoke $r3.<com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: void <init>(com.googlecode.pngtastic.core.Logger,com.googlecode.pngtastic.core.processing.PngFilterHandler)>($r5, $r4);

        this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.processing.PngInterlaceHandler pngInterlaceHandler> = $r3;

        $r6 = new com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler;

        $r7 = this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.Logger log>;

        specialinvoke $r6.<com.googlecode.pngtastic.core.processing.PngtasticCompressionHandler: void <init>(com.googlecode.pngtastic.core.Logger)>($r7);

        this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.processing.PngCompressionHandler pngCompressionHandler> = $r6;

        return;
    }

    protected com.googlecode.pngtastic.core.PngChunk processHeadChunks(com.googlecode.pngtastic.core.PngImage, boolean, java.util.Iterator) throws java.io.IOException
    {
        com.googlecode.pngtastic.core.PngProcessor this;
        com.googlecode.pngtastic.core.PngImage result;
        boolean removeGamma, $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator itChunks;
        com.googlecode.pngtastic.core.PngChunk newChunk, $r3, chunk#1;
        java.lang.Object $r0, $r6;
        java.lang.String $r1, $r2, $r8, $r9, $r10, $r11;
        byte[] $r4, $r5, $r7;

        this := @this: com.googlecode.pngtastic.core.PngProcessor;

        result := @parameter0: com.googlecode.pngtastic.core.PngImage;

        removeGamma := @parameter1: boolean;

        itChunks := @parameter2: java.util.Iterator;

        chunk#1 = null;

     label1:
        $z4 = interfaceinvoke itChunks.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r0 = interfaceinvoke itChunks.<java.util.Iterator: java.lang.Object next()>();

        chunk#1 = (com.googlecode.pngtastic.core.PngChunk) $r0;

        $r1 = "IDAT";

        $r2 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        goto label5;

     label2:
        if result == null goto label1;

        $z1 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: boolean isRequired()>();

        if $z1 == 0 goto label1;

        if removeGamma == 0 goto label3;

        $r10 = "GAMA";

        $r11 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z3 == 0 goto label3;

        goto label1;

     label3:
        $r3 = new com.googlecode.pngtastic.core.PngChunk;

        $r4 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: byte[] getType()>();

        $r5 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: byte[] getData()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (byte[]) $r6;

        specialinvoke $r3.<com.googlecode.pngtastic.core.PngChunk: void <init>(byte[],byte[])>($r4, $r7);

        newChunk = $r3;

        $r8 = "IHDR";

        $r9 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

        virtualinvoke newChunk.<com.googlecode.pngtastic.core.PngChunk: void setInterlace(byte)>(0);

     label4:
        virtualinvoke result.<com.googlecode.pngtastic.core.PngImage: void addChunk(com.googlecode.pngtastic.core.PngChunk)>(newChunk);

        goto label1;

     label5:
        return chunk#1;
    }

    protected com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream getInflatedImageData(com.googlecode.pngtastic.core.PngChunk, java.util.Iterator) throws java.io.IOException
    {
        com.googlecode.pngtastic.core.PngProcessor this;
        java.util.Iterator itChunks;
        com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream imageBytes, $r0, l6#7;
        java.io.DataOutputStream imageData, $r1;
        java.lang.Throwable l7, l8, l9, $r6, $r7, $r8, $r9, l5#3, l6#11;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        byte[] $r4;
        java.lang.Object $r5;
        com.googlecode.pngtastic.core.PngChunk chunk#1, $r10;
        int $i0;

        this := @this: com.googlecode.pngtastic.core.PngProcessor;

        chunk#1 := @parameter0: com.googlecode.pngtastic.core.PngChunk;

        itChunks := @parameter1: java.util.Iterator;

        $r0 = new com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        if chunk#1 != null goto label01;

        $i0 = 0;

        goto label02;

     label01:
        $i0 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: int getLength()>();

     label02:
        specialinvoke $r0.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void <init>(int)>($i0);

        imageBytes = $r0;

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(imageBytes);

        imageData = $r1;

        l5#3 = null;

     label03:
        if chunk#1 == null goto label06;

        $r2 = "IDAT";

        $r3 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label06;

        $r4 = virtualinvoke chunk#1.<com.googlecode.pngtastic.core.PngChunk: byte[] getData()>();

        virtualinvoke imageData.<java.io.DataOutputStream: void write(byte[])>($r4);

        $z1 = interfaceinvoke itChunks.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r5 = interfaceinvoke itChunks.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.googlecode.pngtastic.core.PngChunk) $r5;

        goto label05;

     label04:
        $r10 = null;

     label05:
        chunk#1 = $r10;

        goto label03;

     label06:
        l6#7 = virtualinvoke this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflate(com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream)>(imageBytes);

     label07:
        if imageData == null goto label12;

        if l5#3 == null goto label11;

     label08:
        virtualinvoke imageData.<java.io.DataOutputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        l7 = $r7;

        virtualinvoke l5#3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l7);

        goto label12;

     label11:
        virtualinvoke imageData.<java.io.DataOutputStream: void close()>();

     label12:
        return l6#7;

     label13:
        $r6 := @caughtexception;

        l6#11 = $r6;

        l5#3 = l6#11;

        throw l6#11;

     label14:
        $r8 := @caughtexception;

        l8 = $r8;

     label15:
        if imageData == null goto label20;

        if l5#3 == null goto label19;

     label16:
        virtualinvoke imageData.<java.io.DataOutputStream: void close()>();

     label17:
        goto label20;

     label18:
        $r9 := @caughtexception;

        l9 = $r9;

        virtualinvoke l5#3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l9);

        goto label20;

     label19:
        virtualinvoke imageData.<java.io.DataOutputStream: void close()>();

     label20:
        throw l8;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label03 to label07 with label13;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label13 to label15 with label14;
    }

    protected java.util.List getScanlines(com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, int, int, long)
    {
        com.googlecode.pngtastic.core.PngProcessor this;
        com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        int sampleBitCount, rowLength, offset, $i0, $i1, i#2;
        long height, $l2;
        java.util.ArrayList rows, $r0;
        byte[] row, $r1, previousRow#1;
        com.googlecode.pngtastic.core.PngException e, $r4;
        byte $b3;
        com.googlecode.pngtastic.core.processing.PngFilterHandler $r2;
        java.lang.Object $r3;
        java.lang.Object[] $r5;
        com.googlecode.pngtastic.core.Logger $r6;
        java.lang.String $r7;

        this := @this: com.googlecode.pngtastic.core.PngProcessor;

        inflatedImageData := @parameter0: com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        sampleBitCount := @parameter1: int;

        rowLength := @parameter2: int;

        height := @parameter3: long;

        $r0 = new java.util.ArrayList;

        $i0 = (int) height;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);

        rows = $r0;

        previousRow#1 = newarray (byte)[rowLength];

        i#2 = 0;

     label1:
        $l2 = (long) i#2;

        $b3 = $l2 cmp height;

        if $b3 >= 0 goto label6;

        offset = i#2 * rowLength;

        row = newarray (byte)[rowLength];

        $r1 = virtualinvoke inflatedImageData.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: byte[] get()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, offset, row, 0, rowLength);

     label2:
        $r2 = this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler>;

        interfaceinvoke $r2.<com.googlecode.pngtastic.core.processing.PngFilterHandler: void deFilter(byte[],byte[],int)>(row, previousRow#1, sampleBitCount);

        interfaceinvoke rows.<java.util.List: boolean add(java.lang.Object)>(row);

        $r3 = virtualinvoke row.<java.lang.Object: java.lang.Object clone()>();

        previousRow#1 = (byte[]) $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        e = $r4;

        $r6 = this.<com.googlecode.pngtastic.core.PngProcessor: com.googlecode.pngtastic.core.Logger log>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke e.<com.googlecode.pngtastic.core.PngException: java.lang.String getMessage()>();

        $r5[0] = $r7;

        virtualinvoke $r6.<com.googlecode.pngtastic.core.Logger: void error(java.lang.String,java.lang.Object[])>("Error: %s", $r5);

     label5:
        i#2 = i#2 + 1;

        goto label1;

     label6:
        return rows;

        catch com.googlecode.pngtastic.core.PngException from label2 to label3 with label4;
    }

    public com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflate(com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream) throws java.io.IOException
    {
        com.googlecode.pngtastic.core.PngProcessor this;
        com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream bytes, inflatedOut, l8, $r0;
        byte[] block, $r3;
        java.lang.Throwable l10, l11, l12, l13, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, l3#1, l5#3, l9#5, l9#9, readLength#13, inflater#17;
        java.util.zip.InflaterInputStream $r1, inflater#2;
        java.io.ByteArrayInputStream $r2;
        int $i0, $i1, readLength#4;

        this := @this: com.googlecode.pngtastic.core.PngProcessor;

        bytes := @parameter0: com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        $r0 = new com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        specialinvoke $r0.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void <init>()>();

        inflatedOut = $r0;

        l3#1 = null;

     label01:
        $r1 = new java.util.zip.InflaterInputStream;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke bytes.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: byte[] get()>();

        $i0 = virtualinvoke bytes.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: int len()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r3, 0, $i0);

        specialinvoke $r1.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r2);

        inflater#2 = $r1;

        l5#3 = null;

     label02:
        block = newarray (byte)[8192];

     label03:
        $i1 = virtualinvoke inflater#2.<java.util.zip.InflaterInputStream: int read(byte[])>(block);

        readLength#4 = $i1;

        if $i1 == -1 goto label04;

        virtualinvoke inflatedOut.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void write(byte[],int,int)>(block, 0, readLength#4);

        goto label03;

     label04:
        l8 = inflatedOut;

     label05:
        if inflater#2 == null goto label10;

        if l5#3 == null goto label09;

     label06:
        virtualinvoke inflater#2.<java.util.zip.InflaterInputStream: void close()>();

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        l9#5 = $r10;

        virtualinvoke l5#3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l9#5);

        goto label10;

     label09:
        virtualinvoke inflater#2.<java.util.zip.InflaterInputStream: void close()>();

     label10:
        if inflatedOut == null goto label15;

        if l3#1 == null goto label14;

     label11:
        virtualinvoke inflatedOut.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r9 := @caughtexception;

        l9#9 = $r9;

        virtualinvoke l3#1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l9#9);

        goto label15;

     label14:
        virtualinvoke inflatedOut.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void close()>();

     label15:
        return l8;

     label16:
        $r4 := @caughtexception;

        readLength#13 = $r4;

        l5#3 = readLength#13;

        throw readLength#13;

     label17:
        $r7 := @caughtexception;

        l10 = $r7;

     label18:
        if inflater#2 == null goto label23;

        if l5#3 == null goto label22;

     label19:
        virtualinvoke inflater#2.<java.util.zip.InflaterInputStream: void close()>();

     label20:
        goto label23;

     label21:
        $r5 := @caughtexception;

        l11 = $r5;

        virtualinvoke l5#3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l11);

        goto label23;

     label22:
        virtualinvoke inflater#2.<java.util.zip.InflaterInputStream: void close()>();

     label23:
        throw l10;

     label24:
        $r8 := @caughtexception;

        inflater#17 = $r8;

        l3#1 = inflater#17;

        throw inflater#17;

     label25:
        $r6 := @caughtexception;

        l12 = $r6;

     label26:
        if inflatedOut == null goto label31;

        if l3#1 == null goto label30;

     label27:
        virtualinvoke inflatedOut.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void close()>();

     label28:
        goto label31;

     label29:
        $r11 := @caughtexception;

        l13 = $r11;

        virtualinvoke l3#1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l13);

        goto label31;

     label30:
        virtualinvoke inflatedOut.<com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: void close()>();

     label31:
        throw l12;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label02 to label05 with label16;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label18 with label17;
        catch java.lang.Throwable from label01 to label10 with label24;
        catch java.lang.Throwable from label16 to label24 with label24;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label16 to label26 with label25;
    }


