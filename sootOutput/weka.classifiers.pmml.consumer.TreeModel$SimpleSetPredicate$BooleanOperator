    static void <clinit>()
    {
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator$1 $r0;
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator$2 $r1;
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator[] $r2;
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator $r3, $r4;

        $r0 = new weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator$1;

        specialinvoke $r0.<weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator$1: void <init>(java.lang.String,int,java.lang.String)>("IS_IN", 0, "isIn");

        <weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator IS_IN> = $r0;

        $r1 = new weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator$2;

        specialinvoke $r1.<weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator$2: void <init>(java.lang.String,int,java.lang.String)>("IS_NOT_IN", 1, "isNotIn");

        <weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator IS_NOT_IN> = $r1;

        $r2 = newarray (weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator)[2];

        $r3 = <weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator IS_IN>;

        $r2[0] = $r3;

        $r4 = <weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator IS_NOT_IN>;

        $r2[1] = $r4;

        <weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator[] $VALUES> = $r2;

        return;
    }

    void <init>(java.lang.String, int, java.lang.String, weka.classifiers.pmml.consumer.TreeModel$1)
    {
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator this;
        java.lang.String x0, x2;
        int x1;
        weka.classifiers.pmml.consumer.TreeModel$1 x3;

        this := @this: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator;

        x0 := @parameter0: java.lang.String;

        x1 := @parameter1: int;

        x2 := @parameter2: java.lang.String;

        x3 := @parameter3: weka.classifiers.pmml.consumer.TreeModel$1;

        specialinvoke this.<weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: void <init>(java.lang.String,int,java.lang.String)>(x0, x1, x2);

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate$BooleanOperator: java.lang.String m_stringVal> = name;

        return;
    }


