    public void <init>(int, boolean, int, int, java.lang.String, java.lang.String, boolean, int, java.util.Map, java.util.concurrent.ExecutorService)
    {
        kanzi.app.BlockCompressor this;
        int verbose, level, block, jobs, $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean force, checksum, $z0, $z1, $z2, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z14, $z15, $z16, $z17;
        java.lang.String entropy, transform, tranformAndCodec, k, $r4, $r6, strTransf#35, strCodec#39, $r8, $r12, $r26;
        java.util.Map map;
        java.util.concurrent.ExecutorService threadPool, $r15, $r17;
        java.lang.Boolean bForce, bChecksum;
        java.lang.String[] tokens;
        java.lang.Integer iBlockSize;
        kanzi.io.ByteFunctionFactory bff, $r10;
        kanzi.io.InfoPrinter$Type $r0;
        java.io.PrintStream $r1;
        java.util.Iterator l17;
        java.lang.Object $r3, $r5, $r21;
        short $s3;
        java.util.ArrayList $r18;
        kanzi.io.InfoPrinter $r19;
        java.util.Set $r20;
        java.lang.StringBuilder $r22, $r23, $r24, $r25;

        this := @this: kanzi.app.BlockCompressor;

        verbose := @parameter0: int;

        force := @parameter1: boolean;

        level := @parameter2: int;

        block := @parameter3: int;

        entropy := @parameter4: java.lang.String;

        transform := @parameter5: java.lang.String;

        checksum := @parameter6: boolean;

        jobs := @parameter7: int;

        map := @parameter8: java.util.Map;

        threadPool := @parameter9: java.util.concurrent.ExecutorService;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<kanzi.app.BlockCompressor: int level> = level;

        this.<kanzi.app.BlockCompressor: int verbosity> = verbose;

        bForce = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(force);

        if bForce != null goto label01;

        $z0 = 0;

        goto label02;

     label01:
        $z0 = virtualinvoke bForce.<java.lang.Boolean: boolean booleanValue()>();

     label02:
        this.<kanzi.app.BlockCompressor: boolean overwrite> = $z0;

        $r3 = interfaceinvoke map.<java.util.Map: java.lang.Object remove(java.lang.Object)>("inputName");

        $r4 = (java.lang.String) $r3;

        this.<kanzi.app.BlockCompressor: java.lang.String inputName> = $r4;

        $r5 = interfaceinvoke map.<java.util.Map: java.lang.Object remove(java.lang.Object)>("outputName");

        $r6 = (java.lang.String) $r5;

        this.<kanzi.app.BlockCompressor: java.lang.String outputName> = $r6;

        $i0 = this.<kanzi.app.BlockCompressor: int level>;

        if $i0 < 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z2 == 0 goto label05;

        $i1 = this.<kanzi.app.BlockCompressor: int level>;

        tranformAndCodec = staticinvoke <kanzi.app.BlockCompressor: java.lang.String getTransformAndCodec(int)>($i1);

        tokens = virtualinvoke tranformAndCodec.<java.lang.String: java.lang.String[] split(java.lang.String)>("&");

        strTransf#35 = tokens[0];

        strCodec#39 = tokens[1];

        goto label06;

     label05:
        strTransf#35 = transform;

        strCodec#39 = entropy;

     label06:
        if strCodec#39 != null goto label07;

        $r8 = "HUFFMAN";

        goto label08;

     label07:
        $r8 = strCodec#39;

     label08:
        this.<kanzi.app.BlockCompressor: java.lang.String codec> = $r8;

        iBlockSize = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(block);

        if iBlockSize != null goto label09;

        $i2 = 1048576;

        goto label10;

     label09:
        $i2 = virtualinvoke iBlockSize.<java.lang.Integer: int intValue()>();

     label10:
        this.<kanzi.app.BlockCompressor: int blockSize> = $i2;

        $r10 = new kanzi.io.ByteFunctionFactory;

        specialinvoke $r10.<kanzi.io.ByteFunctionFactory: void <init>()>();

        bff = $r10;

        if strTransf#35 != null goto label11;

        $r12 = "BWT+MTFT+ZRLT";

        goto label12;

     label11:
        $s3 = virtualinvoke bff.<kanzi.io.ByteFunctionFactory: short getType(java.lang.String)>(strTransf#35);

        $r12 = virtualinvoke bff.<kanzi.io.ByteFunctionFactory: java.lang.String getName(short)>($s3);

     label12:
        this.<kanzi.app.BlockCompressor: java.lang.String transform> = $r12;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(checksum);

        bChecksum = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(checksum);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(checksum);

        $z5 = virtualinvoke bChecksum.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if bChecksum != null goto label13;

        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label15;

        $z9 = 0;

        goto label16;

     label15:
        $z9 = virtualinvoke bChecksum.<java.lang.Boolean: boolean booleanValue()>();

     label16:
        this.<kanzi.app.BlockCompressor: boolean checksum> = $z9;

        this.<kanzi.app.BlockCompressor: int jobs> = jobs;

        $i4 = this.<kanzi.app.BlockCompressor: int jobs>;

        if $i4 != 1 goto label17;

        $r15 = null;

        goto label19;

     label17:
        if threadPool != null goto label18;

        $r15 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        goto label19;

     label18:
        $r15 = threadPool;

     label19:
        this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool> = $r15;

        if threadPool != null goto label20;

        $r17 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        if $r17 == null goto label20;

        $z10 = 1;

        goto label21;

     label20:
        $z10 = 0;

     label21:
        this.<kanzi.app.BlockCompressor: boolean ownPool> = $z10;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(10);

        this.<kanzi.app.BlockCompressor: java.util.List listeners> = $r18;

        $i5 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i5 <= 2 goto label22;

        $z11 = 1;

        goto label23;

     label22:
        $z11 = 0;

     label23:
        $z12 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z11);

        if $z12 == 0 goto label24;

        $r19 = new kanzi.io.InfoPrinter;

        $i6 = this.<kanzi.app.BlockCompressor: int verbosity>;

        $r0 = <kanzi.io.InfoPrinter$Type: kanzi.io.InfoPrinter$Type ENCODING>;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r19.<kanzi.io.InfoPrinter: void <init>(int,kanzi.io.InfoPrinter$Type,java.io.PrintStream)>($i6, $r0, $r1);

        virtualinvoke this.<kanzi.app.BlockCompressor: boolean addListener(kanzi.Listener)>($r19);

     label24:
        $i7 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i7 <= 0 goto label25;

        $i8 = interfaceinvoke map.<java.util.Map: int size()>();

        if $i8 <= 0 goto label25;

        $z14 = 1;

        goto label26;

     label25:
        $z14 = 0;

     label26:
        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label30;

        $r20 = interfaceinvoke map.<java.util.Map: java.util.Set keySet()>();

        l17 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z16 = interfaceinvoke l17.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label30;

        $r21 = interfaceinvoke l17.<java.util.Iterator: java.lang.Object next()>();

        k = (java.lang.String) $r21;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring invalid option [");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(k);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $i9 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i9 <= 0 goto label28;

        $z17 = 1;

        goto label29;

     label28:
        $z17 = 0;

     label29:
        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r26, $z17);

        goto label27;

     label30:
        return;
    }

    private static void printOut(java.lang.String, boolean)
    {
        java.lang.String msg;
        boolean print, $z0, $z1;
        java.io.PrintStream $r0;

        msg := @parameter0: java.lang.String;

        print := @parameter1: boolean;

        if print != 1 goto label1;

        if msg == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(msg);

     label3:
        return;
    }

    private static java.lang.String getTransformAndCodec(int)
    {
        int level;

        level := @parameter0: int;

        tableswitch(level)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        return "NONE&NONE";

     label2:
        return "TEXT+LZ4&HUFFMAN";

     label3:
        return "BWT+RANK+ZRLT&RANGE";

     label4:
        return "BWT+RANK+ZRLT&FPAQ";

     label5:
        return "BWT&CM";

     label6:
        return "RLT+TEXT&TPAQ";

     label7:
        return "Unknown&Unknown";
    }

    public final boolean addListener(kanzi.Listener)
    {
        kanzi.app.BlockCompressor this;
        kanzi.Listener bl;
        java.util.List $r0;
        boolean $z0;

        this := @this: kanzi.app.BlockCompressor;

        bl := @parameter0: kanzi.Listener;

        if bl == null goto label1;

        $r0 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(bl);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Integer call()
    {
        kanzi.app.BlockCompressor this;
        java.lang.String etransform, ecodec, $r3, $r6, $r9, $r12, $r17, $r21, $r25, $r29, $r30, $r31, $r32, $r37, $r38, $r39, $r40, $r45, $r49, $r54, $r56, $r57, $r59, $r61, $r67, $r71, $r78, $r79, $r88, $r90, $r96, $r99, $r101, $r104, $r106, $r111, $r114, $r116, $r133, $r136, $r138, $r145, $r150, $r161, $r165, $r170, $r176, $r178, $r188, $r192;
        java.io.File output, tmp$55254623;
        java.nio.file.Path path1, path2, $r69, $r73;
        java.util.Iterator l3;
        kanzi.Listener bl;
        kanzi.SliceByteArray sa, tmp$637763170;
        kanzi.Event evt, evt, tmp$576655325, tmp$1961275943;
        kanzi.Listener[] array, array, $r125, $r200;
        long before, after, delta, $l15, $l17, $l18, $l19, $l22, $l23, $l24, $l25, $l28;
        int len, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, read#287, $i11, $i12, $i13, $i14, $i16, $i20, $i26, $i27, $i29;
        java.io.IOException l8, l12, $r139, l10#344, $r142, $r146, l10#373, $r151, l10#388, $r153;
        java.lang.Throwable l11, $r92, e#235, $r147, e#376, $r152;
        float f, $f0, $f1;
        boolean $z0, printFlag#5, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z24, $z25, printFlag#283, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r14, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28, $r34, $r35, $r36, $r42, $r43, $r44, $r47, $r48, $r51, $r52, $r53, $r55, $r87, $r89, $r95, $r97, $r98, $r100, $r110, $r112, $r113, $r115, $r132, $r134, $r135, $r158, $r159, $r160, $r163, $r164, $r167, $r169, $r173, $r177, $r180, $r181, $r182, $r184, $r185, $r186, $r187, $r190, $r191, tmp$1497613705, tmp$568672790, tmp$1621195622, tmp$1827352606, tmp$1827957828, tmp$388589737, tmp$1976880117, tmp$892786000, tmp$881097041, tmp$1785153230, tmp$1916276120, tmp$1001872599, tmp$551294133, tmp$2053703341, tmp$1947475609, tmp$633323215, tmp$568273737, tmp$1651716079, tmp$393605518, tmp$1139934981;
        java.lang.Object os#139, $r82, $r105;
        java.io.PrintStream $r62, $r64, $r74, $r85, $r93, $r108, $r130, $r137, $r144, $r148, $r149, $r154;
        java.lang.Integer $r63, $r65, $r75, $r91, $r102, $r117, l9#340, l9#369, l9#384, $r155, $r202;
        java.nio.file.FileSystem $r66, $r70;
        java.lang.String[] $r68, $r72;
        java.util.concurrent.ExecutorService $r80;
        java.util.List $r81, $r120, $r123, $r124, $r194, $r198, $r199;
        kanzi.io.CompressedOutputStream $r83, $r140, $r168, $r171, $r183, $r197, tmp$48932204;
        java.lang.Exception $r84, e#222, $r107, e#262, $r129, e#323, tmp$115228322, tmp$1369987136;
        byte[] $r119, $r128, $r141;
        kanzi.Event$Type $r122, $r196;
        java.lang.Object[] $r126, $r174, $r201;
        java.io.InputStream $r127, tmp$819579847;
        kanzi.io.IOException $r143, e#362;
        java.lang.Float $r175;
        byte $b21;
        kanzi.io.NullOutputStream tmp$2122850761;
        java.io.FileOutputStream tmp$1507601794;
        java.io.FileInputStream tmp$1206167076;
        java.io.OutputStream tmp$1199415795, tmp$465004464, tmp$1942184435, tmp$1690860294, tmp$585100078, tmp$1805893423;

        this := @this: kanzi.app.BlockCompressor;

        $i0 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i0 <= 2 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        printFlag#5 = $z0;

        $i1 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i1 < 1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("Kanzi 1.1 (C) 2017,  Frederic Langlet", $z1);

        tmp$1497613705 = new java.lang.StringBuilder;

        specialinvoke tmp$1497613705.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke tmp$1497613705.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input file name set to \'");

        $r3 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r6, printFlag#5);

        tmp$568672790 = new java.lang.StringBuilder;

        specialinvoke tmp$568672790.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke tmp$568672790.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output file name set to \'");

        $r9 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r12, printFlag#5);

        tmp$1621195622 = new java.lang.StringBuilder;

        specialinvoke tmp$1621195622.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke tmp$1621195622.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block size set to ");

        $i2 = this.<kanzi.app.BlockCompressor: int blockSize>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r17, printFlag#5);

        tmp$1827352606 = new java.lang.StringBuilder;

        specialinvoke tmp$1827352606.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke tmp$1827352606.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verbosity set to ");

        $i3 = this.<kanzi.app.BlockCompressor: int verbosity>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r21, printFlag#5);

        tmp$1827957828 = new java.lang.StringBuilder;

        specialinvoke tmp$1827957828.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke tmp$1827957828.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Overwrite set to ");

        $z2 = this.<kanzi.app.BlockCompressor: boolean overwrite>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r25, printFlag#5);

        tmp$388589737 = new java.lang.StringBuilder;

        specialinvoke tmp$388589737.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke tmp$388589737.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checksum set to ");

        $z3 = this.<kanzi.app.BlockCompressor: boolean checksum>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r29, printFlag#5);

        $i4 = this.<kanzi.app.BlockCompressor: int level>;

        if $i4 >= 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label11;

        $r30 = "NONE";

        $r31 = this.<kanzi.app.BlockCompressor: java.lang.String transform>;

        $z6 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z6 == 0 goto label07;

        $r32 = "no";

        goto label08;

     label07:
        $r32 = this.<kanzi.app.BlockCompressor: java.lang.String transform>;

     label08:
        etransform = $r32;

        tmp$1976880117 = new java.lang.StringBuilder;

        specialinvoke tmp$1976880117.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke tmp$1976880117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(etransform);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transform (stage 1)");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r37, printFlag#5);

        $r38 = "NONE";

        $r39 = this.<kanzi.app.BlockCompressor: java.lang.String codec>;

        $z7 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z7 == 0 goto label09;

        $r40 = "no";

        goto label10;

     label09:
        $r40 = this.<kanzi.app.BlockCompressor: java.lang.String codec>;

     label10:
        ecodec = $r40;

        tmp$892786000 = new java.lang.StringBuilder;

        specialinvoke tmp$892786000.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke tmp$892786000.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ecodec);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entropy codec (stage 2)");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r45, printFlag#5);

        goto label12;

     label11:
        tmp$881097041 = new java.lang.StringBuilder;

        specialinvoke tmp$881097041.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke tmp$881097041.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compression level set to ");

        $i5 = this.<kanzi.app.BlockCompressor: int level>;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r49, printFlag#5);

     label12:
        tmp$1785153230 = new java.lang.StringBuilder;

        specialinvoke tmp$1785153230.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke tmp$1785153230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        $i6 = this.<kanzi.app.BlockCompressor: int jobs>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" job");

        $i7 = this.<kanzi.app.BlockCompressor: int jobs>;

        if $i7 <= 1 goto label13;

        $r54 = "s";

        goto label14;

     label13:
        $r54 = "";

     label14:
        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r56, printFlag#5);

     label15:
        $r57 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        $z8 = virtualinvoke $r57.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NONE");

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label16;

        tmp$2122850761 = new kanzi.io.NullOutputStream;

        specialinvoke tmp$2122850761.<kanzi.io.NullOutputStream: void <init>()>();

        os#139 = tmp$2122850761;

        goto label26;

     label16:
        $r59 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        $z10 = virtualinvoke $r59.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STDOUT");

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label17;

        os#139 = <java.lang.System: java.io.PrintStream out>;

        goto label26;

     label17:
        tmp$55254623 = new java.io.File;

        $r61 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        specialinvoke tmp$55254623.<java.io.File: void <init>(java.lang.String)>($r61);

        output = tmp$55254623;

        $z12 = virtualinvoke output.<java.io.File: boolean exists()>();

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label25;

        $z14 = virtualinvoke output.<java.io.File: boolean isDirectory()>();

        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label19;

        $r62 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("The output file is a directory");

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-6);

     label18:
        return $r63;

     label19:
        $z16 = this.<kanzi.app.BlockCompressor: boolean overwrite>;

        if $z16 != 0 goto label20;

        $z17 = 1;

        goto label21;

     label20:
        $z17 = 0;

     label21:
        $z18 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z17);

        if $z18 == 0 goto label23;

        $r64 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("The output file exists and the \'overwrite\' command line option has not been provided");

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7);

     label22:
        return $r65;

     label23:
        $r66 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        $r67 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        $r68 = newarray (java.lang.String)[0];

        $r69 = virtualinvoke $r66.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r67, $r68);

        path1 = interfaceinvoke $r69.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        $r70 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        $r71 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        $r72 = newarray (java.lang.String)[0];

        $r73 = virtualinvoke $r70.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r71, $r72);

        path2 = interfaceinvoke $r73.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        $z19 = interfaceinvoke path1.<java.nio.file.Path: boolean equals(java.lang.Object)>(path2);

        $z20 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z20 == 0 goto label25;

        $r74 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>("The input and output files must be different");

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

     label24:
        return $r75;

     label25:
        tmp$1507601794 = new java.io.FileOutputStream;

        specialinvoke tmp$1507601794.<java.io.FileOutputStream: void <init>(java.io.File)>(output);

        os#139 = tmp$1507601794;

     label26:
        tmp$48932204 = new kanzi.io.CompressedOutputStream;

        $r78 = this.<kanzi.app.BlockCompressor: java.lang.String codec>;

        $r79 = this.<kanzi.app.BlockCompressor: java.lang.String transform>;

        $i8 = this.<kanzi.app.BlockCompressor: int blockSize>;

        $z21 = this.<kanzi.app.BlockCompressor: boolean checksum>;

        $r80 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        $i9 = this.<kanzi.app.BlockCompressor: int jobs>;

        tmp$1199415795 = (java.io.OutputStream) os#139;

        specialinvoke tmp$48932204.<kanzi.io.CompressedOutputStream: void <init>(java.lang.String,java.lang.String,java.io.OutputStream,int,boolean,java.util.concurrent.ExecutorService,int)>($r78, $r79, tmp$1199415795, $i8, $z21, $r80, $i9);

        this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos> = tmp$48932204;

        $r81 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        l3 = interfaceinvoke $r81.<java.util.List: java.util.Iterator iterator()>();

     label27:
        $z22 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label28;

        $r82 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        bl = (kanzi.Listener) $r82;

        $r83 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        virtualinvoke $r83.<kanzi.io.CompressedOutputStream: boolean addListener(kanzi.Listener)>(bl);

        goto label27;

     label28:
        goto label31;

     label29:
        $r84 := @caughtexception;

        e#222 = $r84;

        $r85 = <java.lang.System: java.io.PrintStream err>;

        tmp$1916276120 = new java.lang.StringBuilder;

        specialinvoke tmp$1916276120.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke tmp$1916276120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create compressed stream: ");

        $r88 = virtualinvoke e#222.<java.lang.Exception: java.lang.String getMessage()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r90);

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-4);

     label30:
        return $r91;

     label31:
        goto label33;

     label32:
        $r92 := @caughtexception;

        e#235 = $r92;

        $r93 = <java.lang.System: java.io.PrintStream err>;

        tmp$1001872599 = new java.lang.StringBuilder;

        specialinvoke tmp$1001872599.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke tmp$1001872599.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open output file \'");

        $r96 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for writing: ");

        tmp$115228322 = (java.lang.Exception) e#235;

        $r99 = virtualinvoke tmp$115228322.<java.lang.Exception: java.lang.String getMessage()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r101);

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

        return $r102;

     label33:
        $r104 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        $z24 = virtualinvoke $r104.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STDIN");

        if $z24 == 0 goto label34;

        $r105 = <java.lang.System: java.io.InputStream in>;

        goto label35;

     label34:
        tmp$1206167076 = new java.io.FileInputStream;

        $r105 = tmp$1206167076;

        $r106 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        specialinvoke tmp$1206167076.<java.io.FileInputStream: void <init>(java.lang.String)>($r106);

     label35:
        tmp$819579847 = (java.io.InputStream) $r105;

        this.<kanzi.app.BlockCompressor: java.io.InputStream is> = tmp$819579847;

     label36:
        goto label38;

     label37:
        $r107 := @caughtexception;

        e#262 = $r107;

        $r108 = <java.lang.System: java.io.PrintStream err>;

        tmp$551294133 = new java.lang.StringBuilder;

        specialinvoke tmp$551294133.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke tmp$551294133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open input file \'");

        $r111 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r114 = virtualinvoke e#262.<java.lang.Exception: java.lang.String getMessage()>();

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>($r116);

        $r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        return $r117;

     label38:
        $i10 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i10 <= 1 goto label39;

        $z25 = 1;

        goto label40;

     label39:
        $z25 = 0;

     label40:
        printFlag#283 = $z25;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("Encoding ...", printFlag#283);

        read#287 = 0;

        tmp$637763170 = new kanzi.SliceByteArray;

        $r119 = newarray (byte)[32768];

        specialinvoke tmp$637763170.<kanzi.SliceByteArray: void <init>(byte[],int)>($r119, 0);

        sa = tmp$637763170;

        $r120 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $i11 = interfaceinvoke $r120.<java.util.List: int size()>();

        if $i11 <= 0 goto label41;

        $z26 = 1;

        goto label42;

     label41:
        $z26 = 0;

     label42:
        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z26);

        if $z27 == 0 goto label43;

        tmp$576655325 = new kanzi.Event;

        $r122 = <kanzi.Event$Type: kanzi.Event$Type COMPRESSION_START>;

        specialinvoke tmp$576655325.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r122, -1, 0L);

        evt = tmp$576655325;

        $r123 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $r124 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $i12 = interfaceinvoke $r124.<java.util.List: int size()>();

        $r125 = newarray (kanzi.Listener)[$i12];

        $r126 = interfaceinvoke $r123.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r125);

        array = (kanzi.Listener[]) $r126;

        staticinvoke <kanzi.app.BlockCompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label43:
        before = staticinvoke <java.lang.System: long nanoTime()>();

     label44:
        $r127 = this.<kanzi.app.BlockCompressor: java.io.InputStream is>;

        $r128 = sa.<kanzi.SliceByteArray: byte[] array>;

        $i13 = sa.<kanzi.SliceByteArray: int length>;

        len = virtualinvoke $r127.<java.io.InputStream: int read(byte[],int,int)>($r128, 0, $i13);

     label45:
        goto label52;

     label46:
        $r129 := @caughtexception;

        e#323 = $r129;

        $r130 = <java.lang.System: java.io.PrintStream err>;

        tmp$2053703341 = new java.lang.StringBuilder;

        specialinvoke tmp$2053703341.<java.lang.StringBuilder: void <init>()>();

        $r132 = virtualinvoke tmp$2053703341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read block from file \'");

        $r133 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        $r134 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r130.<java.io.PrintStream: void print(java.lang.String)>($r136);

        $r137 = <java.lang.System: java.io.PrintStream err>;

        $r138 = virtualinvoke e#323.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r137.<java.io.PrintStream: void println(java.lang.String)>($r138);

        l9#340 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-11);

     label47:
        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label48:
        tmp$465004464 = (java.io.OutputStream) os#139;

        virtualinvoke tmp$465004464.<java.io.OutputStream: void close()>();

     label49:
        goto label51;

     label50:
        $r139 := @caughtexception;

        l10#344 = $r139;

     label51:
        return l9#340;

     label52:
        if len > 0 goto label53;

        $z28 = 1;

        goto label54;

     label53:
        $z28 = 0;

     label54:
        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        if $z29 == 0 goto label55;

        goto label56;

     label55:
        read#287 = read#287 + len;

        $r140 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        $r141 = sa.<kanzi.SliceByteArray: byte[] array>;

        virtualinvoke $r140.<kanzi.io.CompressedOutputStream: void write(byte[],int,int)>($r141, 0, len);

        goto label44;

     label56:
        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label57:
        tmp$1942184435 = (java.io.OutputStream) os#139;

        virtualinvoke tmp$1942184435.<java.io.OutputStream: void close()>();

     label58:
        goto label81;

     label59:
        $r142 := @caughtexception;

        l8 = $r142;

        goto label81;

     label60:
        $r143 := @caughtexception;

     label61:
        e#362 = $r143;

        $r144 = <java.lang.System: java.io.PrintStream err>;

        $r145 = virtualinvoke e#362.<kanzi.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r144.<java.io.PrintStream: void println(java.lang.String)>($r145);

        $i14 = virtualinvoke e#362.<kanzi.io.IOException: int getErrorCode()>();

        l9#369 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

     label62:
        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label63:
        tmp$1690860294 = (java.io.OutputStream) os#139;

        virtualinvoke tmp$1690860294.<java.io.OutputStream: void close()>();

     label64:
        goto label66;

     label65:
        $r146 := @caughtexception;

        l10#373 = $r146;

     label66:
        return l9#369;

     label67:
        $r147 := @caughtexception;

     label68:
        e#376 = $r147;

        $r148 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r148.<java.io.PrintStream: void println(java.lang.String)>("An unexpected condition happened. Exiting ...");

        $r149 = <java.lang.System: java.io.PrintStream err>;

        tmp$1369987136 = (java.lang.Exception) e#376;

        $r150 = virtualinvoke tmp$1369987136.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r149.<java.io.PrintStream: void println(java.lang.String)>($r150);

        l9#384 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-127);

     label69:
        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label70:
        tmp$585100078 = (java.io.OutputStream) os#139;

        virtualinvoke tmp$585100078.<java.io.OutputStream: void close()>();

     label71:
        goto label73;

     label72:
        $r151 := @caughtexception;

        l10#388 = $r151;

     label73:
        return l9#384;

     label74:
        $r152 := @caughtexception;

     label75:
        l11 = $r152;

     label76:
        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label77:
        tmp$1805893423 = (java.io.OutputStream) os#139;

        virtualinvoke tmp$1805893423.<java.io.OutputStream: void close()>();

     label78:
        goto label80;

     label79:
        $r153 := @caughtexception;

        l12 = $r153;

     label80:
        throw l11;

     label81:
        if read#287 != 0 goto label82;

        $z30 = 1;

        goto label83;

     label82:
        $z30 = 0;

     label83:
        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z30);

        if $z31 == 0 goto label84;

        $r154 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r154.<java.io.PrintStream: void println(java.lang.String)>("Empty input file ... nothing to do");

        $r155 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-128);

        return $r155;

     label84:
        after = staticinvoke <java.lang.System: long nanoTime()>();

        $l15 = after - before;

        delta = $l15 / 1000000L;

        $i16 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i16 < 1 goto label85;

        $z32 = 1;

        goto label86;

     label85:
        $z32 = 0;

     label86:
        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("", $z32);

        tmp$1947475609 = new java.lang.StringBuilder;

        specialinvoke tmp$1947475609.<java.lang.StringBuilder: void <init>()>();

        $r158 = virtualinvoke tmp$1947475609.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding:          ");

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delta);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r161, printFlag#283);

        tmp$633323215 = new java.lang.StringBuilder;

        specialinvoke tmp$633323215.<java.lang.StringBuilder: void <init>()>();

        $r163 = virtualinvoke tmp$633323215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input size:        ");

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(read#287);

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r165, printFlag#283);

        tmp$568273737 = new java.lang.StringBuilder;

        specialinvoke tmp$568273737.<java.lang.StringBuilder: void <init>()>();

        $r167 = virtualinvoke tmp$568273737.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output size:       ");

        $r168 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        $l17 = virtualinvoke $r168.<kanzi.io.CompressedOutputStream: long getWritten()>();

        $r169 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r170, printFlag#283);

        $r171 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        $l18 = virtualinvoke $r171.<kanzi.io.CompressedOutputStream: long getWritten()>();

        $f0 = (float) $l18;

        $f1 = (float) read#287;

        f = $f0 / $f1;

        tmp$1651716079 = new java.lang.StringBuilder;

        specialinvoke tmp$1651716079.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke tmp$1651716079.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ratio:             ");

        $r174 = newarray (java.lang.Object)[1];

        $r175 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f);

        $r174[0] = $r175;

        $r176 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$.6f", $r174);

        $r177 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r176);

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r178, printFlag#283);

        tmp$393605518 = new java.lang.StringBuilder;

        specialinvoke tmp$393605518.<java.lang.StringBuilder: void <init>()>();

        $r180 = virtualinvoke tmp$393605518.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding: ");

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(read#287);

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r183 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        $l19 = virtualinvoke $r183.<kanzi.io.CompressedOutputStream: long getWritten()>();

        $r184 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes in ");

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delta);

        $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.String toString()>();

        $i20 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i20 != 1 goto label87;

        $z33 = 1;

        goto label88;

     label87:
        $z33 = 0;

     label88:
        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r188, $z33);

        $b21 = delta cmp 0L;

        if $b21 <= 0 goto label89;

        $z34 = 1;

        goto label90;

     label89:
        $z34 = 0;

     label90:
        $z35 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z34);

        if $z35 == 0 goto label91;

        tmp$1139934981 = new java.lang.StringBuilder;

        specialinvoke tmp$1139934981.<java.lang.StringBuilder: void <init>()>();

        $r190 = virtualinvoke tmp$1139934981.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throughput (KB/s): ");

        $l22 = (long) read#287;

        $l23 = $l22 * 1000L;

        $l24 = $l23 >> 10;

        $l25 = $l24 / delta;

        $r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r192, printFlag#283);

     label91:
        $i26 = this.<kanzi.app.BlockCompressor: int verbosity>;

        if $i26 < 1 goto label92;

        $z36 = 1;

        goto label93;

     label92:
        $z36 = 0;

     label93:
        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("", $z36);

        $r194 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $i27 = interfaceinvoke $r194.<java.util.List: int size()>();

        if $i27 <= 0 goto label94;

        $z37 = 1;

        goto label95;

     label94:
        $z37 = 0;

     label95:
        $z38 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z37);

        if $z38 == 0 goto label96;

        tmp$1961275943 = new kanzi.Event;

        $r196 = <kanzi.Event$Type: kanzi.Event$Type COMPRESSION_END>;

        $r197 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        $l28 = virtualinvoke $r197.<kanzi.io.CompressedOutputStream: long getWritten()>();

        specialinvoke tmp$1961275943.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r196, -1, $l28);

        evt = tmp$1961275943;

        $r198 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $r199 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        $i29 = interfaceinvoke $r199.<java.util.List: int size()>();

        $r200 = newarray (kanzi.Listener)[$i29];

        $r201 = interfaceinvoke $r198.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r200);

        array = (kanzi.Listener[]) $r201;

        staticinvoke <kanzi.app.BlockCompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label96:
        $r202 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r202;

        catch java.lang.Exception from label26 to label28 with label29;
        catch java.lang.Exception from label15 to label18 with label32;
        catch java.lang.Exception from label19 to label22 with label32;
        catch java.lang.Exception from label23 to label24 with label32;
        catch java.lang.Exception from label25 to label30 with label32;
        catch java.lang.Exception from label33 to label36 with label37;
        catch java.lang.Exception from label44 to label45 with label46;
        catch java.io.IOException from label48 to label49 with label50;
        catch java.io.IOException from label57 to label58 with label59;
        catch kanzi.io.IOException from label44 to label47 with label60;
        catch kanzi.io.IOException from label52 to label56 with label60;
        catch java.io.IOException from label63 to label64 with label65;
        catch java.lang.Exception from label44 to label47 with label67;
        catch java.lang.Exception from label52 to label56 with label67;
        catch java.io.IOException from label70 to label71 with label72;
        catch java.lang.Throwable from label44 to label47 with label74;
        catch java.lang.Throwable from label52 to label56 with label74;
        catch java.lang.Throwable from label61 to label62 with label74;
        catch java.lang.Throwable from label68 to label69 with label74;
        catch java.io.IOException from label77 to label78 with label79;
        catch java.lang.Throwable from label75 to label76 with label74;
    }

    public void dispose()
    {
        kanzi.app.BlockCompressor this;
        java.io.IOException l1, ioe, $r2, $r5;
        java.io.InputStream $r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        kanzi.io.CompressedOutputStream $r3, $r4;
        java.io.PrintStream $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        java.util.concurrent.ExecutorService $r12, $r13;

        this := @this: kanzi.app.BlockCompressor;

     label01:
        $r0 = this.<kanzi.app.BlockCompressor: java.io.InputStream is>;

        if $r0 == null goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label04;

        $r1 = this.<kanzi.app.BlockCompressor: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r2 := @caughtexception;

        l1 = $r2;

     label06:
        $r3 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        if $r3 == null goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label09;

        $r4 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        virtualinvoke $r4.<kanzi.io.CompressedOutputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r5 := @caughtexception;

        ioe = $r5;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compression failure: ");

        $r9 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

        staticinvoke <java.lang.System: void exit(int)>(-12);

     label11:
        $r12 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        if $r12 == null goto label12;

        $z4 = this.<kanzi.app.BlockCompressor: boolean ownPool>;

        if $z4 != 1 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z6 == 0 goto label14;

        $r13 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        interfaceinvoke $r13.<java.util.concurrent.ExecutorService: void shutdown()>();

     label14:
        return;

        catch java.io.IOException from label01 to label04 with label05;
        catch java.io.IOException from label06 to label09 with label10;
    }

    static void notifyListeners(kanzi.Listener[], kanzi.Event)
    {
        kanzi.Listener[] listeners, l2;
        kanzi.Event evt;
        int l3, l4#5;
        kanzi.Listener bl;
        java.lang.Exception l6, $r0;

        listeners := @parameter0: kanzi.Listener[];

        evt := @parameter1: kanzi.Event;

        l2 = listeners;

        l3 = lengthof l2;

        l4#5 = 0;

     label1:
        if l4#5 >= l3 goto label6;

        bl = l2[l4#5];

     label2:
        interfaceinvoke bl.<kanzi.Listener: void processEvent(kanzi.Event)>(evt);

     label3:
        goto label5;

     label4:
        $r0 := @caughtexception;

        l6 = $r0;

     label5:
        l4#5 = l4#5 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }


