    static void <clinit>()
    {
        java.lang.Boolean $r0, $r1;
        java.lang.Class $r2;

        $r0 = new java.lang.Boolean;

        specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(1);

        <java.lang.Boolean: java.lang.Boolean TRUE> = $r0;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(0);

        <java.lang.Boolean: java.lang.Boolean FALSE> = $r1;

        $r2 = staticinvoke <java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>("boolean");

        <java.lang.Boolean: java.lang.Class TYPE> = $r2;

        return;
    }

    public void <init>(boolean)
    {
        java.lang.Boolean l0;
        boolean l1;

        l0 := @this: java.lang.Boolean;

        l1 := @parameter0: boolean;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.Boolean: boolean value> = l1;

        return;
    }

    public static java.lang.Boolean valueOf(boolean)
    {
        boolean l0;
        java.lang.Boolean $r0;

        l0 := @parameter0: boolean;

        if l0 == 0 goto label1;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return $r0;
    }

    public static boolean getBoolean(java.lang.String)
    {
        java.lang.String l0, $r0;
        java.lang.Throwable l2, $r1;
        boolean l1#2;

        l0 := @parameter0: java.lang.String;

        l1#2 = 0;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0);

        l1#2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        l2 = $r1;

     label4:
        return l1#2;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public static boolean parseBoolean(java.lang.String)
    {
        java.lang.String l0;
        boolean $z0, $z1;

        l0 := @parameter0: java.lang.String;

        if l0 == null goto label1;

        $z0 = virtualinvoke l0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static java.lang.Boolean valueOf(java.lang.String)
    {
        java.lang.String l0;
        boolean $z0;
        java.lang.Boolean $r0;

        l0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(l0);

        if $z0 == 0 goto label1;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return $r0;
    }

    public boolean booleanValue()
    {
        java.lang.Boolean l0;
        boolean $z0;

        l0 := @this: java.lang.Boolean;

        $z0 = l0.<java.lang.Boolean: boolean value>;

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.Boolean l0;
        boolean $z0;
        java.lang.String $r0;

        l0 := @this: java.lang.Boolean;

        $z0 = l0.<java.lang.Boolean: boolean value>;

        if $z0 == 0 goto label1;

        $r0 = "true";

        goto label2;

     label1:
        $r0 = "false";

     label2:
        return $r0;
    }

    public static java.lang.String toString(boolean)
    {
        boolean l0;
        java.lang.String $r0;

        l0 := @parameter0: boolean;

        if l0 == 0 goto label1;

        $r0 = "true";

        goto label2;

     label1:
        $r0 = "false";

     label2:
        return $r0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.Boolean l0, $r0;
        java.lang.Object l1;
        int $i0;

        l0 := @this: java.lang.Boolean;

        l1 := @parameter0: java.lang.Object;

        $r0 = (java.lang.Boolean) l1;

        $i0 = virtualinvoke l0.<java.lang.Boolean: int compareTo(java.lang.Boolean)>($r0);

        return $i0;
    }

    public int compareTo(java.lang.Boolean)
    {
        java.lang.Boolean l0, l1;
        boolean $z0, $z1;
        int $i0;

        l0 := @this: java.lang.Boolean;

        l1 := @parameter0: java.lang.Boolean;

        $z0 = l0.<java.lang.Boolean: boolean value>;

        $z1 = l1.<java.lang.Boolean: boolean value>;

        $i0 = staticinvoke <java.lang.Boolean: int compare(boolean,boolean)>($z0, $z1);

        return $i0;
    }

    public static int compare(boolean, boolean)
    {
        boolean l0, l1;
        byte $b0;

        l0 := @parameter0: boolean;

        l1 := @parameter1: boolean;

        if l0 != l1 goto label1;

        $b0 = 0;

        goto label3;

     label1:
        if l0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = -1;

     label3:
        return $b0;
    }


