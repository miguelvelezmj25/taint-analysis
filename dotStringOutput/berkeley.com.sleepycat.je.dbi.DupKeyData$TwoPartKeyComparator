digraph <init> {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {891054937}" -> "btreeComparator := @parameter0: java.util.Comparator {1376953888}";
"btreeComparator := @parameter0: java.util.Comparator {1376953888}" -> "dupComparator := @parameter1: java.util.Comparator {1341813225}";
"dupComparator := @parameter1: java.util.Comparator {1341813225}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1759253802}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1759253802}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {520183640}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {520183640}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {368047434}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {368047434}" -> "return {8487728}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {266477469}" -> "l1 := @parameter0: java.lang.Object {678647747}";
"l1 := @parameter0: java.lang.Object {678647747}" -> "l2 := @parameter1: java.lang.Object {1206245993}";
"l2 := @parameter1: java.lang.Object {1206245993}" -> "$r0 = (byte[]) l1 {1098507000}";
"$r0 = (byte[]) l1 {1098507000}" -> "$r1 = (byte[]) l2 {941872585}";
"$r1 = (byte[]) l2 {941872585}" -> "$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {910396951}";
"$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {910396951}" -> "return $i0 {996893103}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {2139113589}" -> "twoPartKey1 := @parameter0: byte[] {542923059}";
"twoPartKey1 := @parameter0: byte[] {542923059}" -> "twoPartKey2 := @parameter1: byte[] {518135483}";
"twoPartKey2 := @parameter1: byte[] {518135483}" -> "$i0 = lengthof twoPartKey1 {1857560083}";
"$i0 = lengthof twoPartKey1 {1857560083}" -> "$i1 = $i0 - 1 {1037309625}";
"$i1 = $i0 - 1 {1037309625}" -> "origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {385921803}";
"origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {385921803}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1401318043}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1401318043}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {257063629}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {257063629}" -> "$i2 = lengthof twoPartKey1 {2000317854}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {257063629}" -> "$i3 = origKeySize1 {610478983}";
"$i2 = lengthof twoPartKey1 {2000317854}" -> "$i3 = $i2 - 1 {1574098379}";
"$i3 = $i2 - 1 {1574098379}" -> "goto [?= keySize1 = $i3] {9560214}";
"goto [?= keySize1 = $i3] {9560214}" -> "keySize1 = $i3 {2094295103}";
"$i3 = origKeySize1 {610478983}" -> "keySize1 = $i3 {2094295103}";
"keySize1 = $i3 {2094295103}" -> "$i4 = lengthof twoPartKey2 {1710793205}";
"$i4 = lengthof twoPartKey2 {1710793205}" -> "$i5 = $i4 - 1 {1021958250}";
"$i5 = $i4 - 1 {1021958250}" -> "origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {419887114}";
"origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {419887114}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {99814458}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {99814458}" -> "if origKeySize2 != -1 goto $i7 = origKeySize2 {1962406606}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {1962406606}" -> "$i6 = lengthof twoPartKey2 {1125552224}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {1962406606}" -> "$i7 = origKeySize2 {2031114372}";
"$i6 = lengthof twoPartKey2 {1125552224}" -> "$i7 = $i6 - 1 {677167937}";
"$i7 = $i6 - 1 {677167937}" -> "goto [?= keySize2 = $i7] {242375866}";
"goto [?= keySize2 = $i7] {242375866}" -> "keySize2 = $i7 {1700785793}";
"$i7 = origKeySize2 {2031114372}" -> "keySize2 = $i7 {1700785793}";
"keySize2 = $i7 {1700785793}" -> "$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {50023114}";
"$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {50023114}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1314303871}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1314303871}" -> "if $r0 != null goto key1 = newarray (byte)[keySize1] {302993562}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {302993562}" -> "keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {885611463}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {302993562}" -> "key1 = newarray (byte)[keySize1] {535712158}";
"keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {885611463}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34)] {1740867480}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34)] {1740867480}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1629820953}";
"key1 = newarray (byte)[keySize1] {535712158}" -> "key2 = newarray (byte)[keySize2] {1138932727}";
"key2 = newarray (byte)[keySize2] {1138932727}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {1976824256}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {1976824256}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {242091095}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {242091095}" -> "$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1500964950}";
"$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1500964950}" -> "keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1899333353}";
"keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1899333353}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1629820953}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1629820953}" -> "if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {405181058}";
"if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {405181058}" -> "return keyCmp#34 {633261086}";
"if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {405181058}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1309228557}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1309228557}" -> "if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {463848298}";
"if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {463848298}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1289693517}";
"if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {463848298}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2066346944}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1289693517}" -> "if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {363595782}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {363595782}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2066346944}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {363595782}" -> "$i9 = lengthof twoPartKey1 {1503192632}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2066346944}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {101353713}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {101353713}" -> "if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1427376363}";
"if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1427376363}" -> "return 0 {956905563}";
"if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1427376363}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {923359998}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {923359998}" -> "if origKeySize1 != -1 goto $b8 = 1 {354056324}";
"if origKeySize1 != -1 goto $b8 = 1 {354056324}" -> "$b8 = -1 {1705071004}";
"if origKeySize1 != -1 goto $b8 = 1 {354056324}" -> "$b8 = 1 {552721293}";
"$b8 = -1 {1705071004}" -> "goto [?= return $b8] {780802207}";
"goto [?= return $b8] {780802207}" -> "return $b8 {1726564687}";
"$b8 = 1 {552721293}" -> "return $b8 {1726564687}";
"$i9 = lengthof twoPartKey1 {1503192632}" -> "$i10 = $i9 - 1 {572929609}";
"$i10 = $i9 - 1 {572929609}" -> "keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1588815708}";
"keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1588815708}" -> "$i11 = lengthof twoPartKey2 {1876397754}";
"$i11 = lengthof twoPartKey2 {1876397754}" -> "$i12 = $i11 - 1 {1140029211}";
"$i12 = $i11 - 1 {1140029211}" -> "keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {1296397916}";
"keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {1296397916}" -> "$i13 = lengthof twoPartKey1 {1421004288}";
"$i13 = lengthof twoPartKey1 {1421004288}" -> "$i14 = $i13 - keySize1 {795206795}";
"$i14 = $i13 - keySize1 {795206795}" -> "dataSize1 = $i14 - keySizeLen1 {569600184}";
"dataSize1 = $i14 - keySizeLen1 {569600184}" -> "$i15 = lengthof twoPartKey2 {1675181116}";
"$i15 = lengthof twoPartKey2 {1675181116}" -> "$i16 = $i15 - keySize2 {1818186493}";
"$i16 = $i15 - keySize2 {1818186493}" -> "dataSize2 = $i16 - keySizeLen2 {1815593564}";
"dataSize2 = $i16 - keySizeLen2 {1815593564}" -> "$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1369655887}";
"$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1369655887}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1757513033}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1757513033}" -> "if $r2 != null goto data1 = newarray (byte)[dataSize1] {1711758386}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {1711758386}" -> "dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {450584574}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {1711758386}" -> "data1 = newarray (byte)[dataSize1] {935738067}";
"dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {450584574}" -> "goto [?= return dataCmp#99] {1194230183}";
"goto [?= return dataCmp#99] {1194230183}" -> "return dataCmp#99 {391349510}";
"data1 = newarray (byte)[dataSize1] {935738067}" -> "data2 = newarray (byte)[dataSize2] {1880977939}";
"data2 = newarray (byte)[dataSize2] {1880977939}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {883788498}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {883788498}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {103594856}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {103594856}" -> "$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1099159513}";
"$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1099159513}" -> "dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1419442805}";
"dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1419442805}" -> "return dataCmp#99 {391349510}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1757513033}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1629820953}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1309228557}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {101353713}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {923359998}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1314303871}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {99814458}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1289693517}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1401318043}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2066346944}"[fontcolor="blue", penwidth=3, color="blue"];
}


