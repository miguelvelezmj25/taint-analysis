    static void <clinit>()
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>("double");

        <java.lang.Double: java.lang.Class TYPE> = $r0;

        return;
    }

    public static java.lang.Double valueOf(double)
    {
        double l0;
        java.lang.Double $r0;

        l0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(l0);

        return $r0;
    }

    public int intValue()
    {
        java.lang.Double l0;
        double $d0;
        int $i0;

        l0 := @this: java.lang.Double;

        $d0 = l0.<java.lang.Double: double value>;

        $i0 = (int) $d0;

        return $i0;
    }

    public void <init>(double)
    {
        java.lang.Double l0;
        double l1;

        l0 := @this: java.lang.Double;

        l1 := @parameter0: double;

        specialinvoke l0.<java.lang.Number: void <init>()>();

        l0.<java.lang.Double: double value> = l1;

        return;
    }

    public static boolean isInfinite(double)
    {
        double l0;
        byte $b0, $b1;
        boolean $z0;

        l0 := @parameter0: double;

        $b0 = l0 cmpl #Infinity;

        if $b0 == 0 goto label1;

        $b1 = l0 cmpl #-Infinity;

        if $b1 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isNaN(double)
    {
        double l0;
        byte $b0;
        boolean $z0;

        l0 := @parameter0: double;

        $b0 = l0 cmpl l0;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int compare(double, double)
    {
        double l0, l2;
        long l4, l6;
        byte $b0, $b1, $b2, $b3, $b4;

        l0 := @parameter0: double;

        l2 := @parameter1: double;

        $b0 = l0 cmpg l2;

        if $b0 >= 0 goto label1;

        return -1;

     label1:
        $b1 = l0 cmpl l2;

        if $b1 <= 0 goto label2;

        return 1;

     label2:
        l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(l0);

        l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(l2);

        $b2 = l4 cmp l6;

        if $b2 != 0 goto label3;

        $b3 = 0;

        goto label5;

     label3:
        $b4 = l4 cmp l6;

        if $b4 >= 0 goto label4;

        $b3 = -1;

        goto label5;

     label4:
        $b3 = 1;

     label5:
        return $b3;
    }

    public static long doubleToLongBits(double)
    {
        double l0;
        long l2#3, $l0, $l2;
        byte $b1, $b3;

        l0 := @parameter0: double;

        l2#3 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(l0);

        $l0 = l2#3 & 9218868437227405312L;

        $b1 = $l0 cmp 9218868437227405312L;

        if $b1 != 0 goto label1;

        $l2 = l2#3 & 4503599627370495L;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        l2#3 = 9221120237041090560L;

     label1:
        return l2#3;
    }

    public static java.lang.String toHexString(double)
    {
        java.lang.StringBuilder l2, $r1;
        boolean l3, $z0, $z1, $z2;
        long l4, $l3, $l4;
        java.lang.String l6, $r0, $r6, $r8, $r10, $r15;
        double l0#1, $d0, l0#22;
        byte $b0, $b1, $b2;
        int $i5;

        l0#1 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isFinite(double)>(l0#1);

        if $z0 != 0 goto label01;

        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(l0#1);

        return $r0;

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(24);

        l2 = $r1;

        $d0 = staticinvoke <java.lang.Math: double copySign(double,double)>(1.0, l0#1);

        $b0 = $d0 cmpl -1.0;

        if $b0 != 0 goto label02;

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

     label02:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        l0#22 = staticinvoke <java.lang.Math: double abs(double)>(l0#1);

        $b1 = l0#22 cmpl 0.0;

        if $b1 != 0 goto label03;

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.0p0");

        goto label12;

     label03:
        $b2 = l0#22 cmpg 2.2250738585072014E-308;

        if $b2 >= 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        l3 = $z1;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(l0#22);

        $l4 = $l3 & 4503599627370495L;

        l4 = $l4 | 1152921504606846976L;

        if l3 == 0 goto label06;

        $r6 = "0.";

        goto label07;

     label06:
        $r6 = "1.";

     label07:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l4);

        l6 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(3, 16);

        $z2 = virtualinvoke l6.<java.lang.String: boolean equals(java.lang.Object)>("0000000000000");

        if $z2 == 0 goto label08;

        $r10 = "0";

        goto label09;

     label08:
        $r10 = virtualinvoke l6.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("0{1,12}$", "");

     label09:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(112);

        if l3 == 0 goto label10;

        $i5 = -1022;

        goto label11;

     label10:
        $i5 = staticinvoke <java.lang.Math: int getExponent(double)>(l0#22);

     label11:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label12:
        $r15 = virtualinvoke l2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public static boolean isFinite(double)
    {
        double l0, $d0;
        byte $b0;
        boolean $z0;

        l0 := @parameter0: double;

        $d0 = staticinvoke <java.lang.Math: double abs(double)>(l0);

        $b0 = $d0 cmpg 1.7976931348623157E308;

        if $b0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String toString(double)
    {
        double l0;
        java.lang.String $r0;

        l0 := @parameter0: double;

        $r0 = staticinvoke <sun.misc.FloatingDecimal: java.lang.String toJavaFormatString(double)>(l0);

        return $r0;
    }


