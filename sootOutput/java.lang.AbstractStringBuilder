    public java.lang.AbstractStringBuilder append(java.lang.String)
    {
        java.lang.AbstractStringBuilder l0, $r0;
        java.lang.String l1;
        int l2, $i0, $i1, $i2, $i3, $i4;
        char[] $r1;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: java.lang.String;

        if l1 != null goto label1;

        $r0 = specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>();

        return $r0;

     label1:
        l2 = virtualinvoke l1.<java.lang.String: int length()>();

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i1 = $i0 + l2;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i1);

        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = l0.<java.lang.AbstractStringBuilder: int count>;

        virtualinvoke l1.<java.lang.String: void getChars(int,int,char[],int)>(0, l2, $r1, $i2);

        $i3 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i4 = $i3 + l2;

        l0.<java.lang.AbstractStringBuilder: int count> = $i4;

        return l0;
    }

    public java.lang.AbstractStringBuilder append(int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, l2, l3, $i0, $i1, $i2, $i3;
        char[] $r1;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        if l1 != -2147483648 goto label1;

        virtualinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>("-2147483648");

        return l0;

     label1:
        if l1 >= 0 goto label2;

        $i0 = neg l1;

        $i1 = staticinvoke <java.lang.Integer: int stringSize(int)>($i0);

        $i2 = $i1 + 1;

        goto label3;

     label2:
        $i2 = staticinvoke <java.lang.Integer: int stringSize(int)>(l1);

     label3:
        l2 = $i2;

        $i3 = l0.<java.lang.AbstractStringBuilder: int count>;

        l3 = $i3 + l2;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>(l3);

        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        staticinvoke <java.lang.Integer: void getChars(int,int,char[])>(l1, l3, $r1);

        l0.<java.lang.AbstractStringBuilder: int count> = l3;

        return l0;
    }

    private void ensureCapacityInternal(int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, $i0, $i1, $i2;
        char[] $r0, $r1, $r2;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        $r0 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i0 = lengthof $r0;

        $i1 = l1 - $i0;

        if $i1 <= 0 goto label1;

        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = specialinvoke l0.<java.lang.AbstractStringBuilder: int newCapacity(int)>(l1);

        $r2 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r1, $i2);

        l0.<java.lang.AbstractStringBuilder: char[] value> = $r2;

     label1:
        return;
    }

    private int newCapacity(int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, $i0, $i1, l2#8, $i2, $i3, $i4;
        char[] $r0;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        $r0 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i0 = lengthof $r0;

        $i1 = $i0 << 1;

        l2#8 = $i1 + 2;

        $i2 = l2#8 - l1;

        if $i2 >= 0 goto label1;

        l2#8 = l1;

     label1:
        if l2#8 <= 0 goto label2;

        $i3 = 2147483639 - l2#8;

        if $i3 >= 0 goto label3;

     label2:
        $i4 = specialinvoke l0.<java.lang.AbstractStringBuilder: int hugeCapacity(int)>(l1);

        goto label4;

     label3:
        $i4 = l2#8;

     label4:
        return $i4;
    }

    private int hugeCapacity(int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, $i0, $i1;
        java.lang.OutOfMemoryError $r0;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        $i0 = 2147483647 - l1;

        if $i0 >= 0 goto label1;

        $r0 = new java.lang.OutOfMemoryError;

        specialinvoke $r0.<java.lang.OutOfMemoryError: void <init>()>();

        throw $r0;

     label1:
        if l1 <= 2147483639 goto label2;

        $i1 = l1;

        goto label3;

     label2:
        $i1 = 2147483639;

     label3:
        return $i1;
    }

    private java.lang.AbstractStringBuilder appendNull()
    {
        java.lang.AbstractStringBuilder l0;
        char[] l2;
        int l1#3, $i0, l1#12, l1#16, l1#20, l1#24;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1#3 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i0 = l1#3 + 4;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i0);

        l2 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        l1#12 = l1#3 + 1;

        l2[l1#3] = 110;

        l1#16 = l1#12 + 1;

        l2[l1#12] = 117;

        l1#20 = l1#16 + 1;

        l2[l1#16] = 108;

        l1#24 = l1#20 + 1;

        l2[l1#20] = 108;

        l0.<java.lang.AbstractStringBuilder: int count> = l1#24;

        return l0;
    }

    void <init>(int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1;
        char[] $r0;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $r0 = newarray (char)[l1];

        l0.<java.lang.AbstractStringBuilder: char[] value> = $r0;

        return;
    }

    public java.lang.AbstractStringBuilder append(char)
    {
        java.lang.AbstractStringBuilder l0;
        char l1;
        int $i0, $i1, $i2, $i3;
        char[] $r0;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: char;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i1 = $i0 + 1;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i1);

        $r0 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i3 = $i2 + 1;

        l0.<java.lang.AbstractStringBuilder: int count> = $i3;

        $r0[$i2] = l1;

        return l0;
    }

    public java.lang.AbstractStringBuilder append(float)
    {
        java.lang.AbstractStringBuilder l0;
        float l1;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: float;

        staticinvoke <sun.misc.FloatingDecimal: void appendTo(float,java.lang.Appendable)>(0.75F, l0);

        return l0;
    }

    public java.lang.AbstractStringBuilder append(long)
    {
        java.lang.AbstractStringBuilder l0;
        long l1, $l2;
        int l3, l4, $i3, $i4, $i5;
        byte $b0, $b1;
        char[] $r1;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: long;

        $b0 = l1 cmp -9223372036854775808L;

        if $b0 != 0 goto label1;

        virtualinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>("-9223372036854775808");

        return l0;

     label1:
        $b1 = l1 cmp 0L;

        if $b1 >= 0 goto label2;

        $l2 = neg l1;

        $i3 = staticinvoke <java.lang.Long: int stringSize(long)>($l2);

        $i4 = $i3 + 1;

        goto label3;

     label2:
        $i4 = staticinvoke <java.lang.Long: int stringSize(long)>(l1);

     label3:
        l3 = $i4;

        $i5 = l0.<java.lang.AbstractStringBuilder: int count>;

        l4 = $i5 + l3;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>(l4);

        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        staticinvoke <java.lang.Long: void getChars(long,int,char[])>(l1, l4, $r1);

        l0.<java.lang.AbstractStringBuilder: int count> = l4;

        return l0;
    }

    public java.lang.AbstractStringBuilder append(char[], int, int)
    {
        java.lang.AbstractStringBuilder l0;
        char[] l1, $r0;
        int l2, l3, $i0, $i1, $i2, $i3, $i4;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        if l3 <= 0 goto label1;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i1 = $i0 + l3;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i1);

     label1:
        $r0 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = l0.<java.lang.AbstractStringBuilder: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l1, l2, $r0, $i2, l3);

        $i3 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i4 = $i3 + l3;

        l0.<java.lang.AbstractStringBuilder: int count> = $i4;

        return l0;
    }

    public java.lang.AbstractStringBuilder append(char[])
    {
        java.lang.AbstractStringBuilder l0;
        char[] l1, $r0;
        int l2, $i0, $i1, $i2, $i3, $i4;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: char[];

        l2 = lengthof l1;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i1 = $i0 + l2;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i1);

        $r0 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = l0.<java.lang.AbstractStringBuilder: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(l1, 0, $r0, $i2, l2);

        $i3 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i4 = $i3 + l2;

        l0.<java.lang.AbstractStringBuilder: int count> = $i4;

        return l0;
    }

    public java.lang.AbstractStringBuilder append(java.lang.CharSequence)
    {
        java.lang.AbstractStringBuilder l0, $r0, $r2, $r3, $r4, $r5;
        java.lang.CharSequence l1;
        boolean $z0, $z1;
        java.lang.String $r1;
        int $i0;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: java.lang.CharSequence;

        if l1 != null goto label1;

        $r0 = specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>();

        return $r0;

     label1:
        $z0 = l1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r1 = (java.lang.String) l1;

        $r2 = virtualinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>($r1);

        return $r2;

     label2:
        $z1 = l1 instanceof java.lang.AbstractStringBuilder;

        if $z1 == 0 goto label3;

        $r3 = (java.lang.AbstractStringBuilder) l1;

        $r4 = virtualinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.AbstractStringBuilder)>($r3);

        return $r4;

     label3:
        $i0 = interfaceinvoke l1.<java.lang.CharSequence: int length()>();

        $r5 = virtualinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.CharSequence,int,int)>(l1, 0, $i0);

        return $r5;
    }

    java.lang.AbstractStringBuilder append(java.lang.AbstractStringBuilder)
    {
        java.lang.AbstractStringBuilder l0, l1, $r0;
        int l2, $i0, $i1, $i2, $i3, $i4;
        char[] $r1;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: java.lang.AbstractStringBuilder;

        if l1 != null goto label1;

        $r0 = specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>();

        return $r0;

     label1:
        l2 = virtualinvoke l1.<java.lang.AbstractStringBuilder: int length()>();

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i1 = $i0 + l2;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i1);

        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = l0.<java.lang.AbstractStringBuilder: int count>;

        virtualinvoke l1.<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)>(0, l2, $r1, $i2);

        $i3 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i4 = $i3 + l2;

        l0.<java.lang.AbstractStringBuilder: int count> = $i4;

        return l0;
    }

    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)
    {
        java.lang.AbstractStringBuilder l0;
        int l2, l3, l4, $i0, $i1, $i2, $i3, l5#37, l6#40, $i5, $i6;
        java.lang.Object l1#1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, tmp$1816870646;
        java.lang.String $r8;
        char[] $r9;
        char $c4;
        java.lang.IndexOutOfBoundsException tmp$1310396819;
        java.lang.CharSequence tmp$803507820, tmp$2115587718, tmp$1316364453;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1#1 := @parameter0: java.lang.CharSequence;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        if l1#1 != null goto label1;

        l1#1 = "null";

     label1:
        if 0 > l3 goto label2;

        tmp$803507820 = (java.lang.CharSequence) l1#1;

        $i0 = interfaceinvoke tmp$803507820.<java.lang.CharSequence: int length()>();

        if l3 <= $i0 goto label3;

     label2:
        tmp$1310396819 = new java.lang.IndexOutOfBoundsException;

        tmp$1816870646 = new java.lang.StringBuilder;

        specialinvoke tmp$1816870646.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke tmp$1816870646.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", end ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", s.length() ");

        tmp$2115587718 = (java.lang.CharSequence) l1#1;

        $i1 = interfaceinvoke tmp$2115587718.<java.lang.CharSequence: int length()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$1310396819.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw tmp$1310396819;

     label3:
        l4 = l3 - 0;

        $i2 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i3 = $i2 + l4;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i3);

        l5#37 = 0;

        l6#40 = l0.<java.lang.AbstractStringBuilder: int count>;

     label4:
        if l5#37 >= l3 goto label5;

        $r9 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        tmp$1316364453 = (java.lang.CharSequence) l1#1;

        $c4 = interfaceinvoke tmp$1316364453.<java.lang.CharSequence: char charAt(int)>(l5#37);

        $r9[l6#40] = $c4;

        l5#37 = l5#37 + 1;

        l6#40 = l6#40 + 1;

        goto label4;

     label5:
        $i5 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i6 = $i5 + l4;

        l0.<java.lang.AbstractStringBuilder: int count> = $i6;

        return l0;
    }

    public java.lang.AbstractStringBuilder insert(int, char)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char l2;
        char[] $r0, $r1, $r2;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        l2 := @parameter1: char;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i1 = $i0 + 1;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>($i1);

        $r0 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i2 = l1 + 1;

        $i3 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i4 = $i3 - l1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, l1, $r1, $i2, $i4);

        $r2 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $r2[l1] = l2;

        $i5 = l0.<java.lang.AbstractStringBuilder: int count>;

        $i6 = $i5 + 1;

        l0.<java.lang.AbstractStringBuilder: int count> = $i6;

        return l0;
    }

    public int length()
    {
        java.lang.AbstractStringBuilder l0;
        int $i0;

        l0 := @this: java.lang.AbstractStringBuilder;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        return $i0;
    }

    public char charAt(int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, $i0;
        java.lang.StringIndexOutOfBoundsException $r0;
        char[] $r1;
        char $c1;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        if l1 < 0 goto label1;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        if l1 < $i0 goto label2;

     label1:
        $r0 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1);

        throw $r0;

     label2:
        $r1 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $c1 = $r1[l1];

        return $c1;
    }

    public void getChars(int, int, char[], int)
    {
        java.lang.AbstractStringBuilder l0;
        int l1, l2, l4, $i0, $i1;
        char[] l3, $r3;
        java.lang.StringIndexOutOfBoundsException $r0, $r1, $r2;

        l0 := @this: java.lang.AbstractStringBuilder;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: char[];

        l4 := @parameter3: int;

        goto label1;

     label1:
        if l2 < 0 goto label2;

        $i0 = l0.<java.lang.AbstractStringBuilder: int count>;

        if l2 <= $i0 goto label3;

     label2:
        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2);

        throw $r1;

     label3:
        if 0 <= l2 goto label4;

        $r2 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>("srcBegin > srcEnd");

        throw $r2;

     label4:
        $r3 = l0.<java.lang.AbstractStringBuilder: char[] value>;

        $i1 = l2 - 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, l3, l4, $i1);

        return;
    }


