    public edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0, $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r0 = virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry__role__DerivativeExtractCRC()>();

        return $r0;

     label1:
        $r1 = virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry__before__DerivativeExtractCRC()>();

        return $r1;
    }

    public edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry__role__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;
        boolean $z0, $z1;
        java.io.IOException $r1;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        if $r0 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Stream closed.");

        throw $r1;

     label3:
        $r2 = virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry__before__DerivativeExtractCRC()>();

        return $r2;
    }

    public edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry__before__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        int header, dostime, crc, nameLen, extraLen, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i20, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        byte[] buffer, extra, $r16, $r17, $r19;
        java.lang.String name, $r4, $r6, $r8;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        long $l0, $l2, $l15, $l16, $l18, $l19, $l21, $l22;
        byte $b1, $b3;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r5;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r18;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        if $r0 == null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void closeEntry()>();

     label03:
        header = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        $l0 = (long) header;

        $b1 = $l0 cmp 33639248L;

        if $b1 != 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void close()>();

        return null;

     label06:
        $l2 = (long) header;

        $b3 = $l2 cmp 67324752L;

        if $b3 == 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label09;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong Local header signature: ");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(header);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label09:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        $i5 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int flags> = $i5;

        $i6 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method> = $i6;

        dostime = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        crc = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        $i7 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize> = $i7;

        $i8 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size> = $i8;

        nameLen = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        extraLen = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method>;

        if $i9 != 0 goto label10;

        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size>;

        if $i10 == $i11 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label12;

        $r7 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r7.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Stored, but compressed != uncompressed");

        throw $r7;

     label12:
        buffer = newarray (byte)[nameLen];

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void readFully(byte[])>(buffer);

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>(buffer);

        name = $r8;

        $r9 = virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry createZipEntry(java.lang.String)>(name);

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry> = $r9;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: boolean entryAtEOF> = 0;

        $r10 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method>;

        virtualinvoke $r10.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setMethod(int)>($i12);

        $i13 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int flags>;

        $i14 = $i13 & 8;

        if $i14 != 0 goto label13;

        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label15;

        $r11 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $l15 = (long) crc;

        $l16 = $l15 & 4294967295L;

        virtualinvoke $r11.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCrc(long)>($l16);

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $i17 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size>;

        $l18 = (long) $i17;

        $l19 = $l18 & 4294967295L;

        virtualinvoke $r12.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setSize(long)>($l19);

        $r13 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $i20 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $l21 = (long) $i20;

        $l22 = $l21 & 4294967295L;

        virtualinvoke $r13.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCompressedSize(long)>($l22);

     label15:
        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        virtualinvoke $r14.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setDOSTime(int)>(dostime);

        if extraLen <= 0 goto label16;

        $z10 = 1;

        goto label17;

     label16:
        $z10 = 0;

     label17:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label18;

        extra = newarray (byte)[extraLen];

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void readFully(byte[])>(extra);

        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        virtualinvoke $r15.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setExtra(byte[])>(extra);

     label18:
        $i23 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method>;

        if $i23 != 8 goto label19;

        $i24 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        if $i24 <= 0 goto label19;

        $z12 = 1;

        goto label20;

     label19:
        $z12 = 0;

     label20:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label21;

        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $i25 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int len>;

        $i26 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i27 = $i25 - $i26;

        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $i28 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, $i27, $r17, 0, $i28);

        $i29 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int len> = $i29;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = 0;

        $r18 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $i30 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int len>;

        virtualinvoke $r18.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: void setInput(byte[],int,int)>($r19, 0, $i30);

     label21:
        $r20 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        return $r20;
    }

    public void closeEntry() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void closeEntry__role__DerivativeExtractCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void closeEntry__before__DerivativeExtractCRC()>();

     label2:
        return;
    }

    private int readLeInt() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        int $i0, $i1, $i2, $i3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $i0 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        $i1 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeShort()>();

        $i2 = $i1 << 16;

        $i3 = $i0 | $i2;

        return $i3;
    }

    public void close() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void close()>();

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook40()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry> = null;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: boolean entryAtEOF> = 1;

        return;
    }

    private int readLeShort() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        int $i0, $i1, $i2, $i3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $i0 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeByte()>();

        $i1 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeByte()>();

        $i2 = $i1 << 8;

        $i3 = $i0 | $i2;

        return $i3;
    }

    private void readFully(byte[]) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] out;
        int count, off#2, len#5;
        boolean $z0, $z1;
        java.io.EOFException $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        out := @parameter0: byte[];

        off#2 = 0;

        len#5 = lengthof out;

     label1:
        if len#5 <= 0 goto label5;

        count = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readBuf(byte[],int,int)>(out, off#2, len#5);

        if count != -1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label4;

        $r0 = new java.io.EOFException;

        specialinvoke $r0.<java.io.EOFException: void <init>()>();

        throw $r0;

     label4:
        off#2 = off#2 + count;

        len#5 = len#5 - count;

        goto label1;

     label5:
        return;
    }

    protected edu.cmu.cs.mvelezce.zip.zipme.ZipEntry createZipEntry(java.lang.String)
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        java.lang.String name;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        name := @parameter0: java.lang.String;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.ZipEntry;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void <init>(java.lang.String)>(name);

        return $r0;
    }

    private int readBuf(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] out, $r0;
        int offset, length#1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        out := @parameter0: byte[];

        offset := @parameter1: int;

        length#1 := @parameter2: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label5;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void fillBuf()>();

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        if $i1 > 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label5;

        return -1;

     label5:
        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        if length#1 <= $i2 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label8;

        length#1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

     label8:
        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int len>;

        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i5 = $i3 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i5, out, offset, length#1);

        $i6 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i7 = $i6 - length#1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = $i7;

        return length#1;
    }

    private void fillBuf() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        java.io.InputStream $r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: java.io.InputStream in>;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $i0 = lengthof $r2;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i0);

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int len> = $i1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = $i1;

        return;
    }

    private int readLeByte() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r0;
        byte[] $r1;
        byte $b6;
        short $s7;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label5;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void fillBuf()>();

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        if $i1 > 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label5;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("EOF in header");

        throw $r0;

     label5:
        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: byte[] buf>;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int len>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i4 = $i3 - 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = $i4;

        $i5 = $i2 - $i3;

        $b6 = $r1[$i5];

        $s7 = $b6 & 255;

        return $s7;
    }

    protected void hook40() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook40__role__DerivativeExtractCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook40__before__DerivativeExtractCRC()>();

     label2:
        return;
    }

    protected void hook40__role__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc> = null;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook40__before__DerivativeExtractCRC()>();

        return;
    }

    protected void hook40__before__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        return;
    }

    public void closeEntry__role__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;
        boolean $z0, $z1;
        java.io.IOException $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        if $r0 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Stream closed.");

        throw $r1;

     label3:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void closeEntry__before__DerivativeExtractCRC()>();

        return;
    }

    public void closeEntry__before__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] tmp;
        long skipped, $l19, $l20, $l23, $l24;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i22, $i25, $i26;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r2, $r3, $r9;
        java.io.InputStream $r6;
        byte $b21;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r7;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        if $r0 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        return;

     label03:
        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method>;

        if $i0 != 8 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label11;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int flags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label10;

        tmp = newarray (byte)[2048];

     label08:
        $i3 = virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int read(byte[])>(tmp);

        if $i3 <= 0 goto label09;

        goto label08;

     label09:
        return;

     label10:
        $i4 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i5 = virtualinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getTotalIn()>();

        $i6 = $i4 - $i5;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize> = $i6;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i7 = virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getRemaining()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = $i7;

     label11:
        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if $i8 <= $i9 goto label12;

        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if $i10 < 0 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label14;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $i13 = $i11 - $i12;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = $i13;

        goto label19;

     label14:
        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $i15 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail>;

        $i16 = $i14 - $i15;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize> = $i16;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = 0;

     label15:
        $i17 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if $i17 == 0 goto label19;

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: java.io.InputStream in>;

        $i18 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $l19 = (long) $i18;

        $l20 = $l19 & 4294967295L;

        skipped = virtualinvoke $r6.<java.io.InputStream: long skip(long)>($l20);

        $b21 = skipped cmp 0L;

        if $b21 > 0 goto label16;

        $z8 = 1;

        goto label17;

     label16:
        $z8 = 0;

     label17:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label18;

        $r7 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r7.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("zip archive ends early.");

        throw $r7;

     label18:
        $i22 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $l23 = (long) $i22;

        $l24 = $l23 - skipped;

        $i25 = (int) $l24;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize> = $i25;

        goto label15;

     label19:
        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size> = 0;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook36()>();

        $i26 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method>;

        if $i26 != 8 goto label20;

        $z10 = 1;

        goto label21;

     label20:
        $z10 = 0;

     label21:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label22;

        $r9 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        virtualinvoke $r9.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: void reset()>();

     label22:
        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry> = null;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: boolean entryAtEOF> = 1;

        return;
    }

    protected void hook36() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook36__role__DerivativeExtractCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook36__before__DerivativeExtractCRC()>();

     label2:
        return;
    }

    protected void hook36__role__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void reset()>();

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook36__before__DerivativeExtractCRC()>();

        return;
    }

    protected void hook36__before__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        return;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] b;
        int off, len#1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0, $z1, $z2, $z3, finished#13, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r1, $r3, $r4, $r5, $r13, $r16, $r19;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r2, $r6, $r22;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r17;
        java.lang.String $r18;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len#1 := @parameter2: int;

        if len#1 != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        return 0;

     label03:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook38()>();

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        if $r0 != null goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        return -1;

     label06:
        finished#13 = 0;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int method>;

        lookupswitch($i0)
        {
            case 0: goto label20;
            case 8: goto label07;
            default: goto label32;
        };

     label07:
        len#1 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int read(byte[],int,int)>(b, off, len#1);

        if len#1 >= 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label32;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $z6 = virtualinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: boolean finished()>();

        if $z6 != 0 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label12;

        $r2 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Inflater not finished!?");

        throw $r2;

     label12:
        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i1 = virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getRemaining()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int avail> = $i1;

        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int flags>;

        $i3 = $i2 & 8;

        if $i3 == 0 goto label13;

        $z9 = 1;

        goto label14;

     label13:
        $z9 = 0;

     label14:
        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z9);

        if $z10 == 0 goto label15;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void readDataDescr()>();

     label15:
        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i4 = virtualinvoke $r4.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getTotalIn()>();

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if $i4 != $i5 goto label16;

        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i6 = virtualinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getTotalOut()>();

        $i7 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size>;

        if $i6 == $i7 goto label17;

     label16:
        $z11 = 1;

        goto label18;

     label17:
        $z11 = 0;

     label18:
        $z12 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z11);

        if $z12 == 0 goto label19;

        $r6 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size mismatch: ");

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <-> ");

        $r13 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i10 = virtualinvoke $r13.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getTotalIn()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i11 = virtualinvoke $r16.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getTotalOut()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>($r18);

        throw $r6;

     label19:
        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        virtualinvoke $r19.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: void reset()>();

        finished#13 = 1;

        goto label32;

     label20:
        $i12 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if len#1 <= $i12 goto label21;

        $i13 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if $i13 < 0 goto label21;

        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        $z14 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z13);

        if $z14 == 0 goto label23;

        len#1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

     label23:
        len#1 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readBuf(byte[],int,int)>(b, off, len#1);

        if len#1 <= 0 goto label24;

        $z15 = 1;

        goto label25;

     label24:
        $z15 = 0;

     label25:
        $z16 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z15);

        if $z16 == 0 goto label26;

        $i14 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $i15 = $i14 - len#1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize> = $i15;

        $i16 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size>;

        $i17 = $i16 - len#1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size> = $i17;

     label26:
        $i18 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        if $i18 != 0 goto label27;

        $z17 = 1;

        goto label28;

     label27:
        $z17 = 0;

     label28:
        $z18 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z17);

        if $z18 == 0 goto label29;

        finished#13 = 1;

        goto label32;

     label29:
        if len#1 >= 0 goto label30;

        $z19 = 1;

        goto label31;

     label30:
        $z19 = 0;

     label31:
        $z20 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z20 == 0 goto label32;

        $r22 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r22.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("EOF in stored block");

        throw $r22;

     label32:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook37(byte[],int,int)>(b, off, len#1);

        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>(finished#13);

        if $z21 == 0 goto label33;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook39()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry> = null;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: boolean entryAtEOF> = 1;

     label33:
        return len#1;
    }

    protected void hook38() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook38__role__DerivativeExtractCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook38__before__DerivativeExtractCRC()>();

     label2:
        return;
    }

    private void readDataDescr() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        int $i0, $i3, $i6, $i7, $i8, $i11;
        long $l1, $l4, $l5, $l9, $l10, $l12, $l13;
        byte $b2;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r0;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r1, $r2, $r3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $i0 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        $l1 = (long) $i0;

        $b2 = $l1 cmp 134695760L;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Data descriptor signature not found");

        throw $r0;

     label3:
        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $i3 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        $l4 = (long) $i3;

        $l5 = $l4 & 4294967295L;

        virtualinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCrc(long)>($l5);

        $i6 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize> = $i6;

        $i7 = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int readLeInt()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size> = $i7;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int size>;

        $l9 = (long) $i8;

        $l10 = $l9 & 4294967295L;

        virtualinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setSize(long)>($l10);

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: int csize>;

        $l12 = (long) $i11;

        $l13 = $l12 & 4294967295L;

        virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCompressedSize(long)>($l13);

        return;
    }

    protected void hook37(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] b;
        int off, len;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook37__role__DerivativeExtractCRC(byte[],int,int)>(b, off, len);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook37__before__DerivativeExtractCRC(byte[],int,int)>(b, off, len);

     label2:
        return;
    }

    protected void hook39() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook39__role__DerivativeExtractCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook39__before__DerivativeExtractCRC()>();

     label2:
        return;
    }

    protected void hook39__role__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0, $r3;
        long $l0, $l1, $l2;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r1;
        byte $b3;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        $l0 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        $l1 = $l0 & 4294967295L;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry>;

        $l2 = virtualinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r2 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("CRC mismatch");

        throw $r2;

     label3:
        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void reset()>();

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook39__before__DerivativeExtractCRC()>();

        return;
    }

    protected void hook39__before__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        return;
    }

    protected void hook37__role__DerivativeExtractCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] b;
        int off, len;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        if len <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void update(byte[],int,int)>(b, off, len);

     label3:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook37__before__DerivativeExtractCRC(byte[],int,int)>(b, off, len);

        return;
    }

    protected void hook37__before__DerivativeExtractCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        byte[] b;
        int off, len;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        return;
    }

    protected void hook38__role__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;
        boolean $z0, $z1;
        java.io.IOException $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        if $r0 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Stream closed.");

        throw $r1;

     label3:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void hook38__before__DerivativeExtractCRC()>();

        return;
    }

    protected void hook38__before__DerivativeExtractCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream this;
        java.io.InputStream in;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r0;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        in := @parameter0: java.io.InputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.Inflater;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: void <init>(boolean)>(1);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void <init>(java.io.InputStream,edu.cmu.cs.mvelezce.zip.zipme.Inflater)>(in, $r0);

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry> = null;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc> = $r1;

        return;
    }


