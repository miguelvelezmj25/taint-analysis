    public static int findEndTrimWhitespace(java.lang.CharSequence)
    {
        java.lang.CharSequence s;
        int i#3, $i0;
        char $c1;
        boolean $z0;

        s := @parameter0: java.lang.CharSequence;

        i#3 = interfaceinvoke s.<java.lang.CharSequence: int length()>();

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#3);

        if i#3 <= 0 goto label3;

        $i0 = i#3 - 1;

        $c1 = interfaceinvoke s.<java.lang.CharSequence: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        return i#3;

     label2:
        i#3 = i#3 + -1;

        goto label1;

     label3:
        return 0;
    }

    public static int findStartTrimWhitespace(java.lang.CharSequence)
    {
        java.lang.CharSequence s;
        int $i0;

        s := @parameter0: java.lang.CharSequence;

        $i0 = staticinvoke <org.unix4j.sort.util.StringUtil: int findStartTrimWhitespace(java.lang.CharSequence,int)>(s, 0);

        return $i0;
    }

    public static int findStartTrimWhitespace(java.lang.CharSequence, int)
    {
        java.lang.CharSequence s;
        int start, len, i#4;
        char $c0;
        boolean $z0;

        s := @parameter0: java.lang.CharSequence;

        start := @parameter1: int;

        len = interfaceinvoke s.<java.lang.CharSequence: int length()>();

        i#4 = start;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if i#4 >= len goto label3;

        $c0 = interfaceinvoke s.<java.lang.CharSequence: char charAt(int)>(i#4);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        return i#4;

     label2:
        i#4 = i#4 + 1;

        goto label1;

     label3:
        return len;
    }


