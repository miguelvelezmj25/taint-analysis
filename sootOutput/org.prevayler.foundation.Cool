    public static void wait(java.lang.Object)
    {
        java.lang.Object object;
        java.lang.InterruptedException e, $r0;

        nop;

        object := @parameter0: java.lang.Object;

     label1:
        nop;

        virtualinvoke object.<java.lang.Object: void wait()>();

     label2:
        nop;

        goto label4;

     label3:
        nop;

        $r0 := @caughtexception;

        nop;

        e = $r0;

        nop;

        staticinvoke <org.prevayler.foundation.Cool: void unexpected(java.lang.Exception)>(e);

     label4:
        nop;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static void unexpected(java.lang.Exception)
    {
        java.lang.Exception e;
        java.lang.RuntimeException $r0;

        nop;

        e := @parameter0: java.lang.Exception;

        nop;

        $r0 = new java.lang.RuntimeException;

        nop;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected Exception was thrown.", e);

        nop;

        throw $r0;
    }

    public static void startDaemon(java.lang.Runnable)
    {
        java.lang.Runnable runnable;
        java.lang.Thread daemon, $r0;

        nop;

        runnable := @parameter0: java.lang.Runnable;

        nop;

        $r0 = new java.lang.Thread;

        nop;

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>(runnable);

        nop;

        daemon = $r0;

        nop;

        virtualinvoke daemon.<java.lang.Thread: void setDaemon(boolean)>(1);

        nop;

        virtualinvoke daemon.<java.lang.Thread: void start()>();

        nop;

        return;
    }


