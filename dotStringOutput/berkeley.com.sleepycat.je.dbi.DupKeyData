digraph <clinit> {
"$r0 = class \"berkeley/com/sleepycat/je/dbi/DupKeyData\" {1980556711}" -> "$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {1265711128}";
"$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {1265711128}" -> "if $z0 != 0 goto $z1 = 0 {25250836}";
"if $z0 != 0 goto $z1 = 0 {25250836}" -> "$z1 = 1 {1932438105}";
"if $z0 != 0 goto $z1 = 0 {25250836}" -> "$z1 = 0 {544021989}";
"$z1 = 1 {1932438105}" -> "goto [?= <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1] {1646155846}";
"goto [?= <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1] {1646155846}" -> "<berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {730268688}";
"$z1 = 0 {544021989}" -> "<berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {730268688}";
"<berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {730268688}" -> "return {771559259}";
}

digraph replaceData {
"twoPartKey := @parameter0: byte[] {723504037}" -> "newData := @parameter1: byte[] {1328890727}";
"newData := @parameter1: byte[] {1328890727}" -> "$i0 = lengthof twoPartKey {1584116967}";
"$i0 = lengthof twoPartKey {1584116967}" -> "$i1 = $i0 - 1 {24280127}";
"$i1 = $i0 - 1 {24280127}" -> "origKeySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {509337939}";
"origKeySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {509337939}" -> "if origKeySize != -1 goto $i3 = origKeySize {1348090724}";
"if origKeySize != -1 goto $i3 = origKeySize {1348090724}" -> "$i2 = lengthof twoPartKey {1256330674}";
"if origKeySize != -1 goto $i3 = origKeySize {1348090724}" -> "$i3 = origKeySize {1307936662}";
"$i2 = lengthof twoPartKey {1256330674}" -> "$i3 = $i2 - 1 {1445065965}";
"$i3 = $i2 - 1 {1445065965}" -> "goto [?= keySize = $i3] {400580445}";
"goto [?= keySize = $i3] {400580445}" -> "keySize = $i3 {1223966926}";
"$i3 = origKeySize {1307936662}" -> "keySize = $i3 {1223966926}";
"keySize = $i3 {1223966926}" -> "$i4 = lengthof newData {1081564311}";
"$i4 = lengthof newData {1081564311}" -> "$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(twoPartKey, 0, keySize, newData, 0, $i4) {1291894321}";
"$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(twoPartKey, 0, keySize, newData, 0, $i4) {1291894321}" -> "return $r0 {919582226}";
}

digraph combine {
"key := @parameter0: byte[] {1687004130}" -> "keyOff := @parameter1: int {815777514}";
"keyOff := @parameter1: int {815777514}" -> "keySize := @parameter2: int {465725794}";
"keySize := @parameter2: int {465725794}" -> "data := @parameter3: byte[] {904304363}";
"data := @parameter3: byte[] {904304363}" -> "dataOff := @parameter4: int {1698004360}";
"dataOff := @parameter4: int {1698004360}" -> "dataSize := @parameter5: int {446975389}";
"dataSize := @parameter5: int {446975389}" -> "keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(keySize) {221245077}";
"keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(keySize) {221245077}" -> "$i0 = keySizeLen + keySize {541303529}";
"$i0 = keySizeLen + keySize {541303529}" -> "$i1 = $i0 + dataSize {1208732544}";
"$i1 = $i0 + dataSize {1208732544}" -> "buf = newarray (byte)[$i1] {880992847}";
"buf = newarray (byte)[$i1] {880992847}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, keyOff, buf, 0, keySize) {776517698}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, keyOff, buf, 0, keySize) {776517698}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, dataOff, buf, keySize, dataSize) {814263201}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, dataOff, buf, keySize, dataSize) {814263201}" -> "$i2 = keySize + dataSize {1074037354}";
"$i2 = keySize + dataSize {1074037354}" -> "nextOff = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int writeReverseInt(byte[],int,int)>(buf, $i2, keySize) {858867745}";
"nextOff = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int writeReverseInt(byte[],int,int)>(buf, $i2, keySize) {858867745}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {615616242}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {615616242}" -> "if $z0 != 0 goto return buf {1887385424}";
"if $z0 != 0 goto return buf {1887385424}" -> "$i3 = lengthof buf {585248789}";
"if $z0 != 0 goto return buf {1887385424}" -> "return buf {1004580428}";
"$i3 = lengthof buf {585248789}" -> "if nextOff == $i3 goto return buf {724457134}";
"if nextOff == $i3 goto return buf {724457134}" -> "$r0 = new java.lang.AssertionError {915094701}";
"if nextOff == $i3 goto return buf {724457134}" -> "return buf {1004580428}";
"$r0 = new java.lang.AssertionError {915094701}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1752572676}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1752572676}" -> "throw $r0 {825525122}";
}

digraph getKeyLength {
"buf := @parameter0: byte[] {1779621762}" -> "off := @parameter1: int {1519201224}";
"off := @parameter1: int {1519201224}" -> "len := @parameter2: int {324886313}";
"len := @parameter2: int {324886313}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {206242212}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {206242212}" -> "if $z0 != 0 goto $i2 = off + len {403490859}";
"if $z0 != 0 goto $i2 = off + len {403490859}" -> "$i0 = lengthof buf {57612002}";
"if $z0 != 0 goto $i2 = off + len {403490859}" -> "$i2 = off + len {870773350}";
"$i0 = lengthof buf {57612002}" -> "$i1 = off + len {81755904}";
"$i1 = off + len {81755904}" -> "if $i0 >= $i1 goto $i2 = off + len {1484739987}";
"if $i0 >= $i1 goto $i2 = off + len {1484739987}" -> "$r0 = new java.lang.AssertionError {879954949}";
"if $i0 >= $i1 goto $i2 = off + len {1484739987}" -> "$i2 = off + len {870773350}";
"$r0 = new java.lang.AssertionError {879954949}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1112884760}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1112884760}" -> "throw $r0 {1621377036}";
"$i2 = off + len {870773350}" -> "$i3 = $i2 - 1 {1368255203}";
"$i3 = $i2 - 1 {1368255203}" -> "keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {535442991}";
"keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {535442991}" -> "$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {562957763}";
"$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {562957763}" -> "if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1722672873}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1722672873}" -> "if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {936126650}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1722672873}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1220100078}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {936126650}" -> "$r1 = new java.lang.AssertionError {1054808580}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {936126650}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1220100078}";
"$r1 = new java.lang.AssertionError {1054808580}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {1479504201}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {1479504201}" -> "throw $r1 {250616590}";
"$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1220100078}" -> "if $z2 != 0 goto return keyLen {571828954}";
"if $z2 != 0 goto return keyLen {571828954}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {255173039}";
"if $z2 != 0 goto return keyLen {571828954}" -> "return keyLen {1189805818}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {255173039}" -> "if keyLen <= len goto return keyLen {421685227}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {255173039}" -> "$r2 = new java.lang.AssertionError {993559993}";
"if keyLen <= len goto return keyLen {421685227}" -> "$r2 = new java.lang.AssertionError {993559993}";
"if keyLen <= len goto return keyLen {421685227}" -> "return keyLen {1189805818}";
"$r2 = new java.lang.AssertionError {993559993}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1701417467}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1701417467}" -> "throw $r2 {1870573442}";
}

digraph getKey {
"buf := @parameter0: byte[] {487525918}" -> "off := @parameter1: int {330033034}";
"off := @parameter1: int {330033034}" -> "len := @parameter2: int {478542508}";
"len := @parameter2: int {478542508}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {883027284}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {883027284}" -> "if $z0 != 0 goto $i2 = off + len {916413347}";
"if $z0 != 0 goto $i2 = off + len {916413347}" -> "$i0 = lengthof buf {725323005}";
"if $z0 != 0 goto $i2 = off + len {916413347}" -> "$i2 = off + len {1563932433}";
"$i0 = lengthof buf {725323005}" -> "$i1 = off + len {37122283}";
"$i1 = off + len {37122283}" -> "if $i0 >= $i1 goto $i2 = off + len {1994656267}";
"if $i0 >= $i1 goto $i2 = off + len {1994656267}" -> "$r0 = new java.lang.AssertionError {1553774762}";
"if $i0 >= $i1 goto $i2 = off + len {1994656267}" -> "$i2 = off + len {1563932433}";
"$r0 = new java.lang.AssertionError {1553774762}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1771620390}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1771620390}" -> "throw $r0 {1064969036}";
"$i2 = off + len {1563932433}" -> "$i3 = $i2 - 1 {1862245343}";
"$i3 = $i2 - 1 {1862245343}" -> "keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {2058907783}";
"keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {2058907783}" -> "$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1753955692}";
"$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1753955692}" -> "if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {777179424}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {777179424}" -> "if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2109603464}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {777179424}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2012458724}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2109603464}" -> "$r1 = new java.lang.AssertionError {1163852750}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2109603464}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2012458724}";
"$r1 = new java.lang.AssertionError {1163852750}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {1461338316}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {1461338316}" -> "throw $r1 {1170320665}";
"$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2012458724}" -> "if $z2 != 0 goto key = newarray (byte)[keyLen] {1655629881}";
"if $z2 != 0 goto key = newarray (byte)[keyLen] {1655629881}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {794171402}";
"if $z2 != 0 goto key = newarray (byte)[keyLen] {1655629881}" -> "key = newarray (byte)[keyLen] {388276998}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {794171402}" -> "if keyLen <= len goto key = newarray (byte)[keyLen] {166228340}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {794171402}" -> "$r2 = new java.lang.AssertionError {383893003}";
"if keyLen <= len goto key = newarray (byte)[keyLen] {166228340}" -> "$r2 = new java.lang.AssertionError {383893003}";
"if keyLen <= len goto key = newarray (byte)[keyLen] {166228340}" -> "key = newarray (byte)[keyLen] {388276998}";
"$r2 = new java.lang.AssertionError {383893003}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1441128098}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1441128098}" -> "throw $r2 {525104827}";
"key = newarray (byte)[keyLen] {388276998}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, key, 0, keyLen) {674321217}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, key, 0, keyLen) {674321217}" -> "return key {366987528}";
}

digraph split {
"twoPartKey := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry {810307120}" -> "paramKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {699383206}";
"paramKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {699383206}" -> "paramData := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {1281019843}";
"paramData := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {1281019843}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1853164416}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1853164416}" -> "if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1493740354}";
"if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1493740354}" -> "$i0 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1743707293}";
"if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1493740354}" -> "$r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {2116628101}";
"$i0 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1743707293}" -> "if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {562160363}";
"if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {562160363}" -> "$r0 = new java.lang.AssertionError {1028595490}";
"if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {562160363}" -> "$r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {2116628101}";
"$r0 = new java.lang.AssertionError {1028595490}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1940967116}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1940967116}" -> "throw $r0 {910391703}";
"$r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {2116628101}" -> "$i1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {649598487}";
"$i1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {649598487}" -> "staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: void split(byte[],int,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r1, $i1, paramKey, paramData) {1766182654}";
"staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: void split(byte[],int,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r1, $i1, paramKey, paramData) {1766182654}" -> "return {946118050}";
}

digraph split {
"twoPartKey := @parameter0: byte[] {638687252}" -> "twoPartKeySize := @parameter1: int {1503273393}";
"twoPartKeySize := @parameter1: int {1503273393}" -> "paramKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {236358459}";
"paramKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {236358459}" -> "paramData := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry {1360600984}";
"paramData := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry {1360600984}" -> "$i0 = twoPartKeySize - 1 {57091106}";
"$i0 = twoPartKeySize - 1 {57091106}" -> "keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i0) {1858724287}";
"keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i0) {1858724287}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1412800112}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1412800112}" -> "if $z0 != 0 goto (branch) {26485126}";
"if $z0 != 0 goto (branch) {26485126}" -> "if keySize != -1 goto (branch) {1922566237}";
"if $z0 != 0 goto (branch) {26485126}" -> "if paramKey == null goto (branch) {849939660}";
"if keySize != -1 goto (branch) {1922566237}" -> "$r0 = new java.lang.AssertionError {1377869721}";
"if keySize != -1 goto (branch) {1922566237}" -> "if paramKey == null goto (branch) {849939660}";
"$r0 = new java.lang.AssertionError {1377869721}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1569460760}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1569460760}" -> "throw $r0 {1868837652}";
"if paramKey == null goto (branch) {849939660}" -> "keyBuf = newarray (byte)[keySize] {1996767799}";
"if paramKey == null goto (branch) {849939660}" -> "if paramData == null goto return {1653362993}";
"keyBuf = newarray (byte)[keySize] {1996767799}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, 0, keyBuf, 0, keySize) {1145925179}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, 0, keyBuf, 0, keySize) {1145925179}" -> "if keySize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {665723694}";
"if keySize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {665723694}" -> "$z1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {1369259537}";
"if keySize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {665723694}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1099072001}";
"$z1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {1369259537}" -> "if $z1 == 0 goto virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {619294499}";
"if $z1 == 0 goto virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {619294499}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1099072001}";
"if $z1 == 0 goto virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {619294499}" -> "virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {255413408}";
"staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1099072001}" -> "goto [?= (branch)] {687582629}";
"goto [?= (branch)] {687582629}" -> "if paramData == null goto return {1653362993}";
"virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {255413408}" -> "if paramData == null goto return {1653362993}";
"if paramData == null goto return {1653362993}" -> "$i1 = twoPartKeySize - 1 {1191756824}";
"if paramData == null goto return {1653362993}" -> "return {1915735182}";
"$i1 = twoPartKeySize - 1 {1191756824}" -> "keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey, $i1) {1710097790}";
"keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey, $i1) {1710097790}" -> "$i2 = twoPartKeySize - keySize {467279868}";
"$i2 = twoPartKeySize - keySize {467279868}" -> "dataSize = $i2 - keySizeLen {101961804}";
"dataSize = $i2 - keySizeLen {101961804}" -> "dataBuf = newarray (byte)[dataSize] {1128249459}";
"dataBuf = newarray (byte)[dataSize] {1128249459}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, keySize, dataBuf, 0, dataSize) {1316687637}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, keySize, dataBuf, 0, dataSize) {1316687637}" -> "if dataSize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1715747327}";
"if dataSize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1715747327}" -> "$z2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {987097205}";
"if dataSize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1715747327}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {741459761}";
"$z2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {987097205}" -> "if $z2 == 0 goto virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1356496795}";
"if $z2 == 0 goto virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1356496795}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {741459761}";
"if $z2 == 0 goto virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1356496795}" -> "virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1297571053}";
"staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {741459761}" -> "goto [?= return] {789857163}";
"goto [?= return] {789857163}" -> "return {1915735182}";
"virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1297571053}" -> "return {1915735182}";
}

digraph removeData {
"twoPartKey := @parameter0: byte[] {1567437445}" -> "$i0 = lengthof twoPartKey {1694087005}";
"$i0 = lengthof twoPartKey {1694087005}" -> "$i1 = $i0 - 1 {132673391}";
"$i1 = $i0 - 1 {132673391}" -> "keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {1974063738}";
"keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {1974063738}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {830359735}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {830359735}" -> "if $z0 != 0 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {207434747}";
"if $z0 != 0 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {207434747}" -> "if keySize != -1 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1365291805}";
"if $z0 != 0 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {207434747}" -> "$r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1526523165}";
"if keySize != -1 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1365291805}" -> "$r0 = new java.lang.AssertionError {877101089}";
"if keySize != -1 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1365291805}" -> "$r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1526523165}";
"$r0 = new java.lang.AssertionError {877101089}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {111055479}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {111055479}" -> "throw $r0 {1387405794}";
"$r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1526523165}" -> "$r2 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] makePrefixKey(byte[],int,int)>(twoPartKey, 0, keySize) {215348107}";
"$r2 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] makePrefixKey(byte[],int,int)>(twoPartKey, 0, keySize) {215348107}" -> "specialinvoke $r1.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r2) {1120093346}";
"specialinvoke $r1.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r2) {1120093346}" -> "return $r1 {266558326}";
}

digraph makePrefixKey {
"key := @parameter0: byte[] {295944157}" -> "keyOff := @parameter1: int {2098801072}";
"keyOff := @parameter1: int {2098801072}" -> "keySize := @parameter2: int {1392615918}";
"keySize := @parameter2: int {1392615918}" -> "$i0 = keySize + 1 {1827400918}";
"$i0 = keySize + 1 {1827400918}" -> "buf = newarray (byte)[$i0] {1453426494}";
"buf = newarray (byte)[$i0] {1453426494}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, 0, buf, 0, keySize) {55236850}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, 0, buf, 0, keySize) {55236850}" -> "buf[keySize] = -1 {899570104}";
"buf[keySize] = -1 {899570104}" -> "return buf {1686124424}";
}

digraph compareMainKey {
"keyBytes1 := @parameter0: byte[] {1590150644}" -> "keyBytes2 := @parameter1: byte[] {840998671}";
"keyBytes2 := @parameter1: byte[] {840998671}" -> "btreeComparator := @parameter2: java.util.Comparator {1597149399}";
"btreeComparator := @parameter2: java.util.Comparator {1597149399}" -> "$i0 = lengthof keyBytes2 {244905125}";
"$i0 = lengthof keyBytes2 {244905125}" -> "$i1 = $i0 - 1 {702708807}";
"$i1 = $i0 - 1 {702708807}" -> "origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes2, $i1) {1689733844}";
"origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes2, $i1) {1689733844}" -> "if origKeySize2 != -1 goto $i3 = origKeySize2 {847873287}";
"if origKeySize2 != -1 goto $i3 = origKeySize2 {847873287}" -> "$i2 = lengthof keyBytes2 {1512014005}";
"if origKeySize2 != -1 goto $i3 = origKeySize2 {847873287}" -> "$i3 = origKeySize2 {706098850}";
"$i2 = lengthof keyBytes2 {1512014005}" -> "$i3 = $i2 - 1 {1409757834}";
"$i3 = $i2 - 1 {1409757834}" -> "goto [?= keySize2 = $i3] {212473258}";
"goto [?= keySize2 = $i3] {212473258}" -> "keySize2 = $i3 {738241071}";
"$i3 = origKeySize2 {706098850}" -> "keySize2 = $i3 {738241071}";
"keySize2 = $i3 {738241071}" -> "$i4 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(keyBytes1, keyBytes2, 0, keySize2, btreeComparator) {1134585346}";
"$i4 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(keyBytes1, keyBytes2, 0, keySize2, btreeComparator) {1134585346}" -> "return $i4 {596528042}";
}

digraph compareMainKey {
"keyBytes1 := @parameter0: byte[] {1706182366}" -> "keyBytes2 := @parameter1: byte[] {992691211}";
"keyBytes2 := @parameter1: byte[] {992691211}" -> "keyOff2 := @parameter2: int {1848905114}";
"keyOff2 := @parameter2: int {1848905114}" -> "keySize2 := @parameter3: int {65872670}";
"keySize2 := @parameter3: int {65872670}" -> "btreeComparator := @parameter4: java.util.Comparator {1836773375}";
"btreeComparator := @parameter4: java.util.Comparator {1836773375}" -> "$i0 = lengthof keyBytes1 {852846013}";
"$i0 = lengthof keyBytes1 {852846013}" -> "$i1 = $i0 - 1 {2011480979}";
"$i1 = $i0 - 1 {2011480979}" -> "origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes1, $i1) {1178123695}";
"origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes1, $i1) {1178123695}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {627099638}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {627099638}" -> "$i2 = lengthof keyBytes1 {965571904}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {627099638}" -> "$i3 = origKeySize1 {608737832}";
"$i2 = lengthof keyBytes1 {965571904}" -> "$i3 = $i2 - 1 {1711421033}";
"$i3 = $i2 - 1 {1711421033}" -> "goto [?= keySize1 = $i3] {1992148682}";
"goto [?= keySize1 = $i3] {1992148682}" -> "keySize1 = $i3 {1727504889}";
"$i3 = origKeySize1 {608737832}" -> "keySize1 = $i3 {1727504889}";
"keySize1 = $i3 {1727504889}" -> "if btreeComparator != null goto key1 = newarray (byte)[keySize1] {513666133}";
"if btreeComparator != null goto key1 = newarray (byte)[keySize1] {513666133}" -> "keyCmp#20 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(keyBytes1, 0, keySize1, keyBytes2, keyOff2, keySize2) {1070376527}";
"if btreeComparator != null goto key1 = newarray (byte)[keySize1] {513666133}" -> "key1 = newarray (byte)[keySize1] {1968448687}";
"keyCmp#20 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(keyBytes1, 0, keySize1, keyBytes2, keyOff2, keySize2) {1070376527}" -> "goto [?= return keyCmp#20] {1781711110}";
"goto [?= return keyCmp#20] {1781711110}" -> "return keyCmp#20 {772650497}";
"key1 = newarray (byte)[keySize1] {1968448687}" -> "key2 = newarray (byte)[keySize2] {156366645}";
"key2 = newarray (byte)[keySize2] {156366645}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes1, 0, key1, 0, keySize1) {18869805}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes1, 0, key1, 0, keySize1) {18869805}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes2, keyOff2, key2, 0, keySize2) {1772080481}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes2, keyOff2, key2, 0, keySize2) {1772080481}" -> "keyCmp#20 = interfaceinvoke btreeComparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1396759912}";
"keyCmp#20 = interfaceinvoke btreeComparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1396759912}" -> "return keyCmp#20 {772650497}";
}

digraph combine {
"paramKey := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry {1586944826}" -> "paramData := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {1099325479}";
"paramData := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {1099325479}" -> "$r0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1589607948}";
"$r0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1589607948}" -> "$i0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {2128471291}";
"$i0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {2128471291}" -> "$i1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {981414768}";
"$i1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {981414768}" -> "$r1 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1657381934}";
"$r1 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1657381934}" -> "$i2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1103477846}";
"$i2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1103477846}" -> "$i3 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {533938086}";
"$i3 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {533938086}" -> "buf = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) {262692195}";
"buf = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) {262692195}" -> "$r2 = new berkeley.com.sleepycat.je.DatabaseEntry {159411519}";
"$r2 = new berkeley.com.sleepycat.je.DatabaseEntry {159411519}" -> "specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>(buf) {1504271784}";
"specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>(buf) {1504271784}" -> "return $r2 {1405758007}";
}

digraph combine {
"key := @parameter0: byte[] {1617711505}" -> "data := @parameter1: byte[] {1362819352}";
"data := @parameter1: byte[] {1362819352}" -> "$i0 = lengthof key {830699838}";
"$i0 = lengthof key {830699838}" -> "$i1 = lengthof data {518913934}";
"$i1 = lengthof data {518913934}" -> "$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(key, 0, $i0, data, 0, $i1) {1769884653}";
"$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(key, 0, $i0, data, 0, $i1) {1769884653}" -> "return $r0 {331786791}";
}

digraph getData {
"buf := @parameter0: byte[] {895240145}" -> "off := @parameter1: int {429140004}";
"off := @parameter1: int {429140004}" -> "len := @parameter2: int {851507514}";
"len := @parameter2: int {851507514}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1006205191}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1006205191}" -> "if $z0 != 0 goto $i2 = off + len {1946666858}";
"if $z0 != 0 goto $i2 = off + len {1946666858}" -> "$i0 = lengthof buf {1730915323}";
"if $z0 != 0 goto $i2 = off + len {1946666858}" -> "$i2 = off + len {1419925001}";
"$i0 = lengthof buf {1730915323}" -> "$i1 = off + len {950630333}";
"$i1 = off + len {950630333}" -> "if $i0 >= $i1 goto $i2 = off + len {117026910}";
"if $i0 >= $i1 goto $i2 = off + len {117026910}" -> "$r0 = new java.lang.AssertionError {1895362458}";
"if $i0 >= $i1 goto $i2 = off + len {117026910}" -> "$i2 = off + len {1419925001}";
"$r0 = new java.lang.AssertionError {1895362458}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1063629413}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1063629413}" -> "throw $r0 {1960156823}";
"$i2 = off + len {1419925001}" -> "$i3 = $i2 - 1 {1095477503}";
"$i3 = $i2 - 1 {1095477503}" -> "keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {727765954}";
"keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {727765954}" -> "$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {930126337}";
"$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {930126337}" -> "if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {419958808}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {419958808}" -> "if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1333088511}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {419958808}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1911639783}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1333088511}" -> "$r1 = new java.lang.AssertionError {371462617}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1333088511}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1911639783}";
"$r1 = new java.lang.AssertionError {371462617}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {586836738}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {586836738}" -> "throw $r1 {1198339338}";
"$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1911639783}" -> "if $z2 != 0 goto $i4 = off + len {2027006899}";
"if $z2 != 0 goto $i4 = off + len {2027006899}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {661245071}";
"if $z2 != 0 goto $i4 = off + len {2027006899}" -> "$i4 = off + len {1454281478}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {661245071}" -> "if keyLen <= len goto $i4 = off + len {865802481}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {661245071}" -> "$r2 = new java.lang.AssertionError {1518315449}";
"if keyLen <= len goto $i4 = off + len {865802481}" -> "$r2 = new java.lang.AssertionError {1518315449}";
"if keyLen <= len goto $i4 = off + len {865802481}" -> "$i4 = off + len {1454281478}";
"$r2 = new java.lang.AssertionError {1518315449}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1654572458}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1654572458}" -> "throw $r2 {153687448}";
"$i4 = off + len {1454281478}" -> "$i5 = $i4 - 1 {1970825714}";
"$i5 = $i4 - 1 {1970825714}" -> "keyLenSize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, $i5) {1014521747}";
"keyLenSize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, $i5) {1014521747}" -> "$i6 = len - keyLen {208859176}";
"$i6 = len - keyLen {208859176}" -> "dataLen = $i6 - keyLenSize {554606165}";
"dataLen = $i6 - keyLenSize {554606165}" -> "$z3 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {371632036}";
"$z3 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {371632036}" -> "if $z3 != 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {410215921}";
"if $z3 != 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {410215921}" -> "if dataLen > 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1097092678}";
"if $z3 != 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {410215921}" -> "$z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2130480489}";
"if dataLen > 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1097092678}" -> "$r3 = new java.lang.AssertionError {1650252361}";
"if dataLen > 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1097092678}" -> "$z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2130480489}";
"$r3 = new java.lang.AssertionError {1650252361}" -> "specialinvoke $r3.<java.lang.AssertionError: void <init>()>() {428078564}";
"specialinvoke $r3.<java.lang.AssertionError: void <init>()>() {428078564}" -> "throw $r3 {2062982892}";
"$z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {2130480489}" -> "if $z4 != 0 goto data = newarray (byte)[dataLen] {79511103}";
"if $z4 != 0 goto data = newarray (byte)[dataLen] {79511103}" -> "$i7 = keyLen + dataLen {1456825342}";
"if $z4 != 0 goto data = newarray (byte)[dataLen] {79511103}" -> "data = newarray (byte)[dataLen] {1886956627}";
"$i7 = keyLen + dataLen {1456825342}" -> "if $i7 <= len goto data = newarray (byte)[dataLen] {132370469}";
"if $i7 <= len goto data = newarray (byte)[dataLen] {132370469}" -> "$r4 = new java.lang.AssertionError {183549680}";
"if $i7 <= len goto data = newarray (byte)[dataLen] {132370469}" -> "data = newarray (byte)[dataLen] {1886956627}";
"$r4 = new java.lang.AssertionError {183549680}" -> "specialinvoke $r4.<java.lang.AssertionError: void <init>()>() {1806768621}";
"specialinvoke $r4.<java.lang.AssertionError: void <init>()>() {1806768621}" -> "throw $r4 {1925881414}";
"data = newarray (byte)[dataLen] {1886956627}" -> "$i8 = off + keyLen {644639498}";
"$i8 = off + keyLen {644639498}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, $i8, data, 0, dataLen) {1748591197}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, $i8, data, 0, dataLen) {1748591197}" -> "return data {634831831}";
}


