    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/log/CleanerFileReader";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.log.CleanerFileReader: boolean $assertionsDisabled> = $z1;

        return;
    }

    public boolean isLN()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isIN()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isBINDelta()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isOldBINDelta()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDbTree()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFileHeader()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sleepycat.je.log.FileHeader getFileHeader()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.log.entry.LogEntry $r0;
        java.lang.Object $r1;
        com.sleepycat.je.log.FileHeader $r2, $r3;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = interfaceinvoke $r0.<com.sleepycat.je.log.entry.LogEntry: java.lang.Object getMainItem()>();

        $r2 = (com.sleepycat.je.log.FileHeader) $r1;

        $r3 = (com.sleepycat.je.log.FileHeader) $r2;

        return $r3;
    }

    public com.sleepycat.je.dbi.DatabaseId getDatabaseId()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte $b0, $b1, $b2, $b3;
        com.sleepycat.je.log.entry.LogEntry $r0, $r3, $r6;
        com.sleepycat.je.log.entry.LNLogEntry $r1;
        com.sleepycat.je.dbi.DatabaseId $r2, $r5, $r8;
        com.sleepycat.je.log.entry.INLogEntry $r4;
        com.sleepycat.je.log.entry.OldBINDeltaLogEntry $r7;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $b0 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (com.sleepycat.je.log.entry.LNLogEntry) $r0;

        $r2 = virtualinvoke $r1.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        return $r2;

     label1:
        $b1 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 1 goto label2;

        $b2 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 != 2 goto label3;

     label2:
        $r3 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r4 = (com.sleepycat.je.log.entry.INLogEntry) $r3;

        $r5 = virtualinvoke $r4.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        return $r5;

     label3:
        $b3 = this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 != 3 goto label4;

        $r6 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r7 = (com.sleepycat.je.log.entry.OldBINDeltaLogEntry) $r6;

        $r8 = virtualinvoke $r7.<com.sleepycat.je.log.entry.OldBINDeltaLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        return $r8;

     label4:
        return null;
    }

    public com.sleepycat.je.log.entry.LNLogEntry getLNLogEntry()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.log.entry.LogEntry $r0;
        com.sleepycat.je.log.entry.LNLogEntry $r1;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (com.sleepycat.je.log.entry.LNLogEntry) $r0;

        return $r1;
    }

    public void countObsolete()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.log.LogEntryType type, $r7, $r8;
        int size, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        com.sleepycat.je.log.LogEntryHeader $r0;
        byte $b0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sleepycat.je.cleaner.FileSummary $r1, $r2, $r3, $r4;
        com.sleepycat.je.cleaner.INSummary $r5, $r6, $r9, $r10;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $b0 = virtualinvoke $r0.<com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        type = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType findType(byte)>($b0);

        $z0 = staticinvoke <com.sleepycat.je.cleaner.BaseUtilizationTracker: boolean trackObsoleteInfo(com.sleepycat.je.log.LogEntryType)>(type);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        size = virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: int getLastEntrySize()>();

        $z1 = staticinvoke <com.sleepycat.je.cleaner.BaseUtilizationTracker: boolean isLNType(com.sleepycat.je.log.LogEntryType)>(type);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r1 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i1 = $r1.<com.sleepycat.je.cleaner.FileSummary: int obsoleteLNCount>;

        $i2 = $i1 + 1;

        $r1.<com.sleepycat.je.cleaner.FileSummary: int obsoleteLNCount> = $i2;

        $r2 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i3 = $r2.<com.sleepycat.je.cleaner.FileSummary: int obsoleteLNSize>;

        $i4 = $i3 + size;

        $r2.<com.sleepycat.je.cleaner.FileSummary: int obsoleteLNSize> = $i4;

        $r3 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i5 = $r3.<com.sleepycat.je.cleaner.FileSummary: int obsoleteLNSizeCounted>;

        $i6 = $i5 + 1;

        $r3.<com.sleepycat.je.cleaner.FileSummary: int obsoleteLNSizeCounted> = $i6;

        goto label5;

     label2:
        $r4 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i7 = $r4.<com.sleepycat.je.cleaner.FileSummary: int obsoleteINCount>;

        $i8 = $i7 + 1;

        $r4.<com.sleepycat.je.cleaner.FileSummary: int obsoleteINCount> = $i8;

        $z2 = virtualinvoke type.<com.sleepycat.je.log.LogEntryType: boolean isINType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        $r5 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i9 = $r5.<com.sleepycat.je.cleaner.INSummary: int obsoleteINCount>;

        $i10 = $i9 + 1;

        $r5.<com.sleepycat.je.cleaner.INSummary: int obsoleteINCount> = $i10;

        $r6 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i11 = $r6.<com.sleepycat.je.cleaner.INSummary: int obsoleteINSize>;

        $i12 = $i11 + size;

        $r6.<com.sleepycat.je.cleaner.INSummary: int obsoleteINSize> = $i12;

     label3:
        $r7 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        $z3 = virtualinvoke type.<com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label4;

        $r8 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        $z4 = virtualinvoke type.<com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label5;

     label4:
        $r9 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i13 = $r9.<com.sleepycat.je.cleaner.INSummary: int obsoleteBINDeltaCount>;

        $i14 = $i13 + 1;

        $r9.<com.sleepycat.je.cleaner.INSummary: int obsoleteBINDeltaCount> = $i14;

        $r10 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i15 = $r10.<com.sleepycat.je.cleaner.INSummary: int obsoleteBINDeltaSize>;

        $i16 = $i15 + size;

        $r10.<com.sleepycat.je.cleaner.INSummary: int obsoleteBINDeltaSize> = $i16;

     label5:
        return;
    }

    public void countExpired()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.cleaner.ExpirationTracker $r0, $r1;
        com.sleepycat.je.log.entry.LogEntry $r2;
        int $i0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.ExpirationTracker expTracker>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.ExpirationTracker expTracker>;

        $r2 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $i0 = virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: int getLastEntrySize()>();

        virtualinvoke $r1.<com.sleepycat.je.cleaner.ExpirationTracker: void track(com.sleepycat.je.log.entry.LogEntry,int)>($r2, $i0);

     label1:
        return;
    }

    public com.sleepycat.je.tree.IN getIN(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.log.entry.LogEntry $r0;
        com.sleepycat.je.log.entry.INLogEntry $r1;
        com.sleepycat.je.tree.IN $r2;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (com.sleepycat.je.log.entry.INLogEntry) $r0;

        $r2 = virtualinvoke $r1.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN getIN(com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

        return $r2;
    }

    public com.sleepycat.je.tree.OldBINDelta getOldBINDelta()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.log.entry.LogEntry $r0;
        com.sleepycat.je.log.entry.OldBINDeltaLogEntry $r1;
        com.sleepycat.je.log.Loggable $r2;
        com.sleepycat.je.tree.OldBINDelta $r3;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (com.sleepycat.je.log.entry.OldBINDeltaLogEntry) $r0;

        $r2 = virtualinvoke $r1.<com.sleepycat.je.log.entry.OldBINDeltaLogEntry: com.sleepycat.je.log.Loggable getMainItem()>();

        $r3 = (com.sleepycat.je.tree.OldBINDelta) $r2;

        return $r3;
    }

    public com.sleepycat.je.tree.BIN getBINDelta()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.log.entry.LogEntry $r0;
        com.sleepycat.je.log.entry.BINDeltaLogEntry $r1;
        com.sleepycat.je.tree.IN $r2;
        com.sleepycat.je.tree.BIN $r3;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (com.sleepycat.je.log.entry.BINDeltaLogEntry) $r0;

        $r2 = virtualinvoke $r1.<com.sleepycat.je.log.entry.BINDeltaLogEntry: com.sleepycat.je.tree.IN getMainItem()>();

        $r3 = (com.sleepycat.je.tree.BIN) $r2;

        return $r3;
    }

    public com.sleepycat.je.utilint.VLSN getFirstVLSN()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.utilint.VLSN $r0, $r1;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN firstVLSN>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN firstVLSN>;

        goto label2;

     label1:
        $r1 = <com.sleepycat.je.utilint.VLSN: com.sleepycat.je.utilint.VLSN NULL_VLSN>;

     label2:
        return $r1;
    }

    public com.sleepycat.je.utilint.VLSN getLastVLSN()
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.utilint.VLSN $r0;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN lastVLSN>;

        return $r0;
    }

    public void <init>(com.sleepycat.je.dbi.EnvironmentImpl, int, long, java.lang.Long, com.sleepycat.je.cleaner.FileSummary, com.sleepycat.je.cleaner.INSummary, com.sleepycat.je.cleaner.ExpirationTracker)
    {
        com.sleepycat.je.log.CleanerFileReader this;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        int readBufferSize;
        long startLsn;
        java.lang.Long fileNum;
        com.sleepycat.je.cleaner.FileSummary fileSummary;
        com.sleepycat.je.cleaner.INSummary inSummary;
        com.sleepycat.je.cleaner.ExpirationTracker expTracker;
        java.util.Iterator l9;
        com.sleepycat.je.log.LogEntryType entryType, $r4, $r5, $r6, $r7;
        com.sleepycat.je.utilint.VLSN $r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        readBufferSize := @parameter1: int;

        startLsn := @parameter2: long;

        fileNum := @parameter3: java.lang.Long;

        fileSummary := @parameter4: com.sleepycat.je.cleaner.FileSummary;

        inSummary := @parameter5: com.sleepycat.je.cleaner.INSummary;

        expTracker := @parameter6: com.sleepycat.je.cleaner.ExpirationTracker;

        specialinvoke this.<com.sleepycat.je.log.FileReader: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,int,boolean,long,java.lang.Long,long,long)>(env, readBufferSize, 1, startLsn, fileNum, -1L, -1L);

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN firstVLSN> = null;

        $r0 = <com.sleepycat.je.utilint.VLSN: com.sleepycat.je.utilint.VLSN NULL_VLSN>;

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN lastVLSN> = $r0;

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary> = fileSummary;

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary> = inSummary;

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.ExpirationTracker expTracker> = expTracker;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        this.<com.sleepycat.je.log.CleanerFileReader: java.util.Map targetEntryMap> = $r1;

        $r2 = staticinvoke <com.sleepycat.je.log.LogEntryType: java.util.Set getAllTypes()>();

        l9 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        entryType = (com.sleepycat.je.log.LogEntryType) $r3;

        $z1 = virtualinvoke entryType.<com.sleepycat.je.log.LogEntryType: boolean isLNType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        specialinvoke this.<com.sleepycat.je.log.CleanerFileReader: void addTargetType(byte,com.sleepycat.je.log.LogEntryType)>(0, entryType);

     label2:
        $z2 = virtualinvoke entryType.<com.sleepycat.je.log.LogEntryType: boolean isINType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        specialinvoke this.<com.sleepycat.je.log.CleanerFileReader: void addTargetType(byte,com.sleepycat.je.log.LogEntryType)>(1, entryType);

     label3:
        goto label1;

     label4:
        $r4 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        specialinvoke this.<com.sleepycat.je.log.CleanerFileReader: void addTargetType(byte,com.sleepycat.je.log.LogEntryType)>(2, $r4);

        $r5 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        specialinvoke this.<com.sleepycat.je.log.CleanerFileReader: void addTargetType(byte,com.sleepycat.je.log.LogEntryType)>(3, $r5);

        $r6 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DBTREE>;

        specialinvoke this.<com.sleepycat.je.log.CleanerFileReader: void addTargetType(byte,com.sleepycat.je.log.LogEntryType)>(4, $r6);

        $r7 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        specialinvoke this.<com.sleepycat.je.log.CleanerFileReader: void addTargetType(byte,com.sleepycat.je.log.LogEntryType)>(5, $r7);

        return;
    }

    private void addTargetType(byte, com.sleepycat.je.log.LogEntryType) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.CleanerFileReader this;
        byte category;
        com.sleepycat.je.log.LogEntryType entryType;
        com.sleepycat.je.log.CleanerFileReader$EntryInfo $r0;
        java.util.Map $r1;
        com.sleepycat.je.log.entry.LogEntry $r2;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        category := @parameter0: byte;

        entryType := @parameter1: com.sleepycat.je.log.LogEntryType;

        $r1 = this.<com.sleepycat.je.log.CleanerFileReader: java.util.Map targetEntryMap>;

        $r0 = new com.sleepycat.je.log.CleanerFileReader$EntryInfo;

        $r2 = virtualinvoke entryType.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.entry.LogEntry getNewLogEntry()>();

        specialinvoke $r0.<com.sleepycat.je.log.CleanerFileReader$EntryInfo: void <init>(com.sleepycat.je.log.entry.LogEntry,byte)>($r2, category);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(entryType, $r0);

        return;
    }

    protected boolean processEntry(java.nio.ByteBuffer) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.CleanerFileReader this;
        java.nio.ByteBuffer entryBuffer;
        com.sleepycat.je.log.LogEntryType type, $r2, $r11, $r12;
        int size, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        com.sleepycat.je.utilint.VLSN vlsn, $r18, $r19, $r23;
        com.sleepycat.je.log.CleanerFileReader$EntryInfo info;
        com.sleepycat.je.log.LogEntryHeader $r0, $r1, $r15, $r16, $r17, $r33;
        byte $b0, $b1, $b2, $b24;
        com.sleepycat.je.cleaner.FileSummary $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.sleepycat.je.cleaner.INSummary $r9, $r10, $r13, $r14;
        java.lang.AssertionError $r20;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r26;
        java.lang.String $r27;
        java.util.Map $r28;
        java.lang.Object $r29;
        com.sleepycat.je.log.entry.LogEntry $r30, $r31;
        com.sleepycat.je.dbi.EnvironmentImpl $r32;

        this := @this: com.sleepycat.je.log.CleanerFileReader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        $r0 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $b0 = virtualinvoke $r0.<com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        type = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType findType(byte)>($b0);

        size = virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: int getLastEntrySize()>();

        $r1 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $b1 = virtualinvoke $r1.<com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        $r2 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        $b2 = virtualinvoke $r2.<com.sleepycat.je.log.LogEntryType: byte getTypeNum()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b1 == $b2 goto label4;

        $r3 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i3 = $r3.<com.sleepycat.je.cleaner.FileSummary: int totalCount>;

        $i4 = $i3 + 1;

        $r3.<com.sleepycat.je.cleaner.FileSummary: int totalCount> = $i4;

        $r4 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i5 = $r4.<com.sleepycat.je.cleaner.FileSummary: int totalSize>;

        $i6 = $i5 + size;

        $r4.<com.sleepycat.je.cleaner.FileSummary: int totalSize> = $i6;

        $z0 = staticinvoke <com.sleepycat.je.cleaner.BaseUtilizationTracker: boolean trackObsoleteInfo(com.sleepycat.je.log.LogEntryType)>(type);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        $z1 = staticinvoke <com.sleepycat.je.cleaner.BaseUtilizationTracker: boolean isLNType(com.sleepycat.je.log.LogEntryType)>(type);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r5 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i7 = $r5.<com.sleepycat.je.cleaner.FileSummary: int totalLNCount>;

        $i8 = $i7 + 1;

        $r5.<com.sleepycat.je.cleaner.FileSummary: int totalLNCount> = $i8;

        $r6 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i9 = $r6.<com.sleepycat.je.cleaner.FileSummary: int totalLNSize>;

        $i10 = $i9 + size;

        $r6.<com.sleepycat.je.cleaner.FileSummary: int totalLNSize> = $i10;

        goto label4;

     label1:
        $r7 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i11 = $r7.<com.sleepycat.je.cleaner.FileSummary: int totalINCount>;

        $i12 = $i11 + 1;

        $r7.<com.sleepycat.je.cleaner.FileSummary: int totalINCount> = $i12;

        $r8 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.FileSummary fileSummary>;

        $i13 = $r8.<com.sleepycat.je.cleaner.FileSummary: int totalINSize>;

        $i14 = $i13 + size;

        $r8.<com.sleepycat.je.cleaner.FileSummary: int totalINSize> = $i14;

        $z2 = virtualinvoke type.<com.sleepycat.je.log.LogEntryType: boolean isINType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label2;

        $r9 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i15 = $r9.<com.sleepycat.je.cleaner.INSummary: int totalINCount>;

        $i16 = $i15 + 1;

        $r9.<com.sleepycat.je.cleaner.INSummary: int totalINCount> = $i16;

        $r10 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i17 = $r10.<com.sleepycat.je.cleaner.INSummary: int totalINSize>;

        $i18 = $i17 + size;

        $r10.<com.sleepycat.je.cleaner.INSummary: int totalINSize> = $i18;

     label2:
        $r11 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        $z3 = virtualinvoke type.<com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label3;

        $r12 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        $z4 = virtualinvoke type.<com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label4;

     label3:
        $r13 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i19 = $r13.<com.sleepycat.je.cleaner.INSummary: int totalBINDeltaCount>;

        $i20 = $i19 + 1;

        $r13.<com.sleepycat.je.cleaner.INSummary: int totalBINDeltaCount> = $i20;

        $r14 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.cleaner.INSummary inSummary>;

        $i21 = $r14.<com.sleepycat.je.cleaner.INSummary: int totalBINDeltaSize>;

        $i22 = $i21 + size;

        $r14.<com.sleepycat.je.cleaner.INSummary: int totalBINDeltaSize> = $i22;

     label4:
        $r15 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z5 = virtualinvoke $r15.<com.sleepycat.je.log.LogEntryHeader: boolean isInvisible()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label5;

        virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: void skipEntry(java.nio.ByteBuffer)>(entryBuffer);

        virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: void countObsolete()>();

        return 0;

     label5:
        $r16 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z6 = virtualinvoke $r16.<com.sleepycat.je.log.LogEntryHeader: boolean getReplicated()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label8;

        $r17 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        vlsn = virtualinvoke $r17.<com.sleepycat.je.log.LogEntryHeader: com.sleepycat.je.utilint.VLSN getVLSN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(vlsn);

        if vlsn == null goto label8;

        $r18 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN firstVLSN>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r18);

        if $r18 != null goto label6;

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN firstVLSN> = vlsn;

     label6:
        $z7 = <com.sleepycat.je.log.CleanerFileReader: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label7;

        $r19 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN lastVLSN>;

        $i23 = virtualinvoke vlsn.<com.sleepycat.je.utilint.VLSN: int compareTo(com.sleepycat.je.utilint.VLSN)>($r19);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i23);

        if $i23 > 0 goto label7;

        $r20 = new java.lang.AssertionError;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vlsns out of order, last=");

        $r23 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN lastVLSN>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(vlsn);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>($r27);

        throw $r20;

     label7:
        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.utilint.VLSN lastVLSN> = vlsn;

     label8:
        $r28 = this.<com.sleepycat.je.log.CleanerFileReader: java.util.Map targetEntryMap>;

        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(type);

        info = (com.sleepycat.je.log.CleanerFileReader$EntryInfo) $r29;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(info);

        if info != null goto label9;

        virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: void skipEntry(java.nio.ByteBuffer)>(entryBuffer);

        virtualinvoke this.<com.sleepycat.je.log.CleanerFileReader: void countObsolete()>();

        return 0;

     label9:
        $b24 = info.<com.sleepycat.je.log.CleanerFileReader$EntryInfo: byte targetCategory>;

        this.<com.sleepycat.je.log.CleanerFileReader: byte targetCategory> = $b24;

        $r30 = info.<com.sleepycat.je.log.CleanerFileReader$EntryInfo: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry> = $r30;

        $r31 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r32 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r33 = this.<com.sleepycat.je.log.CleanerFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        interfaceinvoke $r31.<com.sleepycat.je.log.entry.LogEntry: void readEntry(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.log.LogEntryHeader,java.nio.ByteBuffer)>($r32, $r33, entryBuffer);

        return 1;
    }


