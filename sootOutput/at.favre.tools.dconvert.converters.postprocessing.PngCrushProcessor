    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[12];

        $r0[0] = "-rem";

        $r0[1] = "alla";

        $r0[2] = "-rem";

        $r0[3] = "text";

        $r0[4] = "-rem";

        $r0[5] = "gAMA";

        $r0[6] = "-rem";

        $r0[7] = "cHRM";

        $r0[8] = "-rem";

        $r0[9] = "iCCP";

        $r0[10] = "-rem";

        $r0[11] = "sRGB";

        <at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: java.lang.String[] DEFAULT_ARGS> = $r0;

        return;
    }

    public at.favre.tools.dconvert.converters.Result synchronizedProcess(java.io.File, boolean)
    {
        at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor this;
        java.io.File rawFile;
        boolean keepOriginal;
        java.lang.String[] args, $r0, $r1, $r3;
        java.lang.Exception e, $r7;
        java.lang.Object[] $r2, $r4;
        at.favre.tools.dconvert.arg.ImageType $r5;
        at.favre.tools.dconvert.converters.Result $r6, $r8;
        java.lang.StringBuilder $r9, $r10, $r13;
        java.lang.Class $r11;
        java.lang.String $r12, $r14;
        java.util.List $r15;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor;

        rawFile := @parameter0: java.io.File;

        keepOriginal := @parameter1: boolean;

     label1:
        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "pngcrush";

        $r1 = this.<at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: java.lang.String[] additionalArgs>;

        $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.Object[] concat(java.lang.Object[],java.lang.Object[])>($r0, $r1);

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "%%sourceFilePath%%";

        $r3[1] = "%%outFilePath%%";

        $r4 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.Object[] concat(java.lang.Object[],java.lang.Object[])>($r2, $r3);

        args = (java.lang.String[]) $r4;

        $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;

        $r6 = staticinvoke <at.favre.tools.dconvert.util.PostProcessorUtil: at.favre.tools.dconvert.converters.Result runImageOptimizer(java.io.File,at.favre.tools.dconvert.arg.ImageType,java.lang.String[],boolean)>(rawFile, $r5, args, keepOriginal);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        e = $r7;

        $r8 = new at.favre.tools.dconvert.converters.Result;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not execute post processor ");

        $r11 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(rawFile);

        specialinvoke $r8.<at.favre.tools.dconvert.converters.Result: void <init>(java.lang.String,java.lang.Exception,java.util.List)>($r14, e, $r15);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor this;
        java.lang.String[] $r0;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor;

        $r0 = <at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: java.lang.String[] DEFAULT_ARGS>;

        specialinvoke this.<at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: void <init>(java.lang.String[])>($r0);

        return;
    }

    public void <init>(java.lang.String[])
    {
        at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor this;
        java.lang.String[] additionalArgs;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor;

        additionalArgs := @parameter0: java.lang.String[];

        specialinvoke this.<at.favre.tools.dconvert.converters.postprocessing.APostProcessor: void <init>()>();

        this.<at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor: java.lang.String[] additionalArgs> = additionalArgs;

        return;
    }

    public boolean isSupported()
    {
        at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor this;
        java.lang.String[] $r0;
        boolean $z0;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.PngCrushProcessor;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "pngcrush";

        $r0[1] = "-h";

        $z0 = staticinvoke <at.favre.tools.dconvert.util.PostProcessorUtil: boolean canRunCmd(java.lang.String[])>($r0);

        return $z0;
    }


