digraph dispose {
"this := @this: kanzi.entropy.ANSRangeDecoder {1364434896}" -> "return {2081878169}";
}

digraph <init> {
"this := @this: kanzi.entropy.ANSRangeDecoder {486251471}" -> "bs := @parameter0: kanzi.InputBitStream {824894635}";
"bs := @parameter0: kanzi.InputBitStream {824894635}" -> "order := @parameter1: int {1662031853}";
"order := @parameter1: int {1662031853}" -> "$i0 = order & 1 {434168292}";
"$i0 = order & 1 {434168292}" -> "$i1 = 8 * $i0 {516784625}";
"$i1 = 8 * $i0 {516784625}" -> "$i2 = 32768 << $i1 {1874485658}";
"$i2 = 32768 << $i1 {1874485658}" -> "specialinvoke this.<kanzi.entropy.ANSRangeDecoder: void <init>(kanzi.InputBitStream,int,int)>(bs, order, $i2) {1877632297}";
"specialinvoke this.<kanzi.entropy.ANSRangeDecoder: void <init>(kanzi.InputBitStream,int,int)>(bs, order, $i2) {1877632297}" -> "return {1906005745}";
}

digraph <init> {
"this := @this: kanzi.entropy.ANSRangeDecoder {81350004}" -> "bs := @parameter0: kanzi.InputBitStream {1052906858}";
"bs := @parameter0: kanzi.InputBitStream {1052906858}" -> "order := @parameter1: int {1794529686}";
"order := @parameter1: int {1794529686}" -> "chunkSize := @parameter2: int {1661686194}";
"chunkSize := @parameter2: int {1661686194}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1640022204}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1640022204}" -> "if bs != null goto (branch) {1183688078}";
"if bs != null goto (branch) {1183688078}" -> "$r0 = new java.lang.NullPointerException {383729507}";
"if bs != null goto (branch) {1183688078}" -> "if order == 0 goto (branch) {584049988}";
"$r0 = new java.lang.NullPointerException {383729507}" -> "specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"Invalid null bitstream parameter\") {245064026}";
"specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>(\"Invalid null bitstream parameter\") {245064026}" -> "throw $r0 {358058747}";
"if order == 0 goto (branch) {584049988}" -> "if order == 1 goto (branch) {1521523050}";
"if order == 0 goto (branch) {584049988}" -> "if chunkSize == 0 goto (branch) {461416519}";
"if order == 1 goto (branch) {1521523050}" -> "$r1 = new java.lang.IllegalArgumentException {118006461}";
"if order == 1 goto (branch) {1521523050}" -> "if chunkSize == 0 goto (branch) {461416519}";
"$r1 = new java.lang.IllegalArgumentException {118006461}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The order must be 0 or 1\") {973463147}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The order must be 0 or 1\") {973463147}" -> "throw $r1 {2027593436}";
"if chunkSize == 0 goto (branch) {461416519}" -> "if chunkSize >= 1024 goto (branch) {2002774118}";
"if chunkSize == 0 goto (branch) {461416519}" -> "if chunkSize <= 1073741824 goto this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> = bs {1430124833}";
"if chunkSize >= 1024 goto (branch) {2002774118}" -> "$r2 = new java.lang.IllegalArgumentException {1761846362}";
"if chunkSize >= 1024 goto (branch) {2002774118}" -> "if chunkSize <= 1073741824 goto this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> = bs {1430124833}";
"$r2 = new java.lang.IllegalArgumentException {1761846362}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The chunk size must be at least 1024\") {1336132315}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The chunk size must be at least 1024\") {1336132315}" -> "throw $r2 {1006013953}";
"if chunkSize <= 1073741824 goto this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> = bs {1430124833}" -> "$r3 = new java.lang.IllegalArgumentException {1521808129}";
"if chunkSize <= 1073741824 goto this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> = bs {1430124833}" -> "this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> = bs {1894150299}";
"$r3 = new java.lang.IllegalArgumentException {1521808129}" -> "specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The chunk size must be at most 2^30\") {2039220520}";
"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"The chunk size must be at most 2^30\") {2039220520}" -> "throw $r3 {73257443}";
"this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> = bs {1894150299}" -> "this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> = chunkSize {1648180216}";
"this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> = chunkSize {1648180216}" -> "this.<kanzi.entropy.ANSRangeDecoder: int order> = order {750295528}";
"this.<kanzi.entropy.ANSRangeDecoder: int order> = order {750295528}" -> "$i0 = 255 * order {421634507}";
"$i0 = 255 * order {421634507}" -> "dim = $i0 + 1 {277415898}";
"dim = $i0 + 1 {277415898}" -> "$r4 = newmultiarray (int)[dim][256] {2041988137}";
"$r4 = newmultiarray (int)[dim][256] {2041988137}" -> "this.<kanzi.entropy.ANSRangeDecoder: int[][] alphabet> = $r4 {1836936591}";
"this.<kanzi.entropy.ANSRangeDecoder: int[][] alphabet> = $r4 {1836936591}" -> "$r5 = newmultiarray (int)[dim][256] {1789011752}";
"$r5 = newmultiarray (int)[dim][256] {1789011752}" -> "this.<kanzi.entropy.ANSRangeDecoder: int[][] freqs> = $r5 {1614677397}";
"this.<kanzi.entropy.ANSRangeDecoder: int[][] freqs> = $r5 {1614677397}" -> "$r6 = newmultiarray (byte)[dim][256] {617724248}";
"$r6 = newmultiarray (byte)[dim][256] {617724248}" -> "this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> = $r6 {998878395}";
"this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> = $r6 {998878395}" -> "$r7 = newmultiarray (kanzi.entropy.ANSRangeDecoder$Symbol)[dim][256] {403745150}";
"$r7 = newmultiarray (kanzi.entropy.ANSRangeDecoder$Symbol)[dim][256] {403745150}" -> "this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> = $r7 {1908861543}";
"this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> = $r7 {1908861543}" -> "i#51 = 0 {1457414046}";
"i#51 = 0 {1457414046}" -> "if i#51 >= dim goto return {495779136}";
"if i#51 >= dim goto return {495779136}" -> "$r8 = this.<kanzi.entropy.ANSRangeDecoder: int[][] alphabet> {1097362563}";
"if i#51 >= dim goto return {495779136}" -> "return {92486166}";
"$r8 = this.<kanzi.entropy.ANSRangeDecoder: int[][] alphabet> {1097362563}" -> "$r9 = newarray (int)[256] {534223223}";
"$r9 = newarray (int)[256] {534223223}" -> "$r8[i#51] = $r9 {492434042}";
"$r8[i#51] = $r9 {492434042}" -> "$r10 = this.<kanzi.entropy.ANSRangeDecoder: int[][] freqs> {59337339}";
"$r10 = this.<kanzi.entropy.ANSRangeDecoder: int[][] freqs> {59337339}" -> "$r11 = newarray (int)[256] {572383665}";
"$r11 = newarray (int)[256] {572383665}" -> "$r10[i#51] = $r11 {1787792699}";
"$r10[i#51] = $r11 {1787792699}" -> "$r12 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {2145417658}";
"$r12 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {2145417658}" -> "$r13 = newarray (byte)[0] {1433485468}";
"$r13 = newarray (byte)[0] {1433485468}" -> "$r12[i#51] = $r13 {690019873}";
"$r12[i#51] = $r13 {690019873}" -> "$r14 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {980083110}";
"$r14 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {980083110}" -> "$r15 = newarray (kanzi.entropy.ANSRangeDecoder$Symbol)[256] {1653007614}";
"$r15 = newarray (kanzi.entropy.ANSRangeDecoder$Symbol)[256] {1653007614}" -> "$r14[i#51] = $r15 {260853465}";
"$r14[i#51] = $r15 {260853465}" -> "i#51 = i#51 + 1 {1798703732}";
"i#51 = i#51 + 1 {1798703732}" -> "goto [?= (branch)] {1358403042}";
"goto [?= (branch)] {1358403042}" -> "if i#51 >= dim goto return {495779136}";
}

digraph decode {
"this := @this: kanzi.entropy.ANSRangeDecoder {302950454}" -> "block := @parameter0: byte[] {14696613}";
"block := @parameter0: byte[] {14696613}" -> "blkptr := @parameter1: int {1910991677}";
"blkptr := @parameter1: int {1910991677}" -> "len := @parameter2: int {271170069}";
"len := @parameter2: int {271170069}" -> "if block == null goto return -1 {1451922536}";
"if block == null goto return -1 {1451922536}" -> "$i0 = blkptr + len {1644709997}";
"if block == null goto return -1 {1451922536}" -> "return -1 {1336239181}";
"$i0 = blkptr + len {1644709997}" -> "$i1 = lengthof block {1350090196}";
"$i1 = lengthof block {1350090196}" -> "if $i0 > $i1 goto return -1 {761842591}";
"if $i0 > $i1 goto return -1 {761842591}" -> "if blkptr < 0 goto return -1 {157560114}";
"if $i0 > $i1 goto return -1 {761842591}" -> "return -1 {1336239181}";
"if blkptr < 0 goto return -1 {157560114}" -> "if len >= 0 goto (branch) {2008589287}";
"if blkptr < 0 goto return -1 {157560114}" -> "return -1 {1336239181}";
"if len >= 0 goto (branch) {2008589287}" -> "return -1 {1336239181}";
"if len >= 0 goto (branch) {2008589287}" -> "if len != 0 goto end = blkptr + len {1548262086}";
"if len != 0 goto end = blkptr + len {1548262086}" -> "return 0 {1502287065}";
"if len != 0 goto end = blkptr + len {1548262086}" -> "end = blkptr + len {285492403}";
"end = blkptr + len {285492403}" -> "$i2 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1747435282}";
"$i2 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1747435282}" -> "if $i2 != 0 goto $i3 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1977309617}";
"if $i2 != 0 goto $i3 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1977309617}" -> "$i3 = len {1179236965}";
"if $i2 != 0 goto $i3 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1977309617}" -> "$i3 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1034180590}";
"$i3 = len {1179236965}" -> "goto [?= sz = $i3] {1201109522}";
"goto [?= sz = $i3] {1201109522}" -> "sz = $i3 {1250882451}";
"$i3 = this.<kanzi.entropy.ANSRangeDecoder: int chunkSize> {1034180590}" -> "sz = $i3 {1250882451}";
"sz = $i3 {1250882451}" -> "startChunk#20 = blkptr {932406465}";
"startChunk#20 = blkptr {932406465}" -> "$i4 = this.<kanzi.entropy.ANSRangeDecoder: int order> {877939214}";
"$i4 = this.<kanzi.entropy.ANSRangeDecoder: int order> {877939214}" -> "$i5 = 255 * $i4 {416126249}";
"$i5 = 255 * $i4 {416126249}" -> "endk = $i5 + 1 {1989926769}";
"endk = $i5 + 1 {1989926769}" -> "k#28 = 0 {709404300}";
"k#28 = 0 {709404300}" -> "if k#28 >= endk goto (branch) {2089180204}";
"if k#28 >= endk goto (branch) {2089180204}" -> "$r0 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {355746027}";
"if k#28 >= endk goto (branch) {2089180204}" -> "if startChunk#20 >= end goto return len {985854921}";
"$r0 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {355746027}" -> "syms = $r0[k#28] {1056598954}";
"syms = $r0[k#28] {1056598954}" -> "i#36 = 0 {1106941977}";
"i#36 = 0 {1106941977}" -> "if i#36 >= 256 goto k#28 = k#28 + 1 {511217039}";
"if i#36 >= 256 goto k#28 = k#28 + 1 {511217039}" -> "$r1 = new kanzi.entropy.ANSRangeDecoder$Symbol {403678138}";
"if i#36 >= 256 goto k#28 = k#28 + 1 {511217039}" -> "k#28 = k#28 + 1 {966382221}";
"$r1 = new kanzi.entropy.ANSRangeDecoder$Symbol {403678138}" -> "specialinvoke $r1.<kanzi.entropy.ANSRangeDecoder$Symbol: void <init>()>() {869005075}";
"specialinvoke $r1.<kanzi.entropy.ANSRangeDecoder$Symbol: void <init>()>() {869005075}" -> "syms[i#36] = $r1 {1446805667}";
"syms[i#36] = $r1 {1446805667}" -> "i#36 = i#36 + 1 {434603489}";
"i#36 = i#36 + 1 {434603489}" -> "goto [?= (branch)] {1426506833}";
"goto [?= (branch)] {1426506833}" -> "if i#36 >= 256 goto k#28 = k#28 + 1 {511217039}";
"k#28 = k#28 + 1 {966382221}" -> "goto [?= (branch)] {185754757}";
"goto [?= (branch)] {185754757}" -> "if k#28 >= endk goto (branch) {2089180204}";
"if startChunk#20 >= end goto return len {985854921}" -> "$r2 = this.<kanzi.entropy.ANSRangeDecoder: int[][] freqs> {2048770050}";
"if startChunk#20 >= end goto return len {985854921}" -> "return len {219988713}";
"$r2 = this.<kanzi.entropy.ANSRangeDecoder: int[][] freqs> {2048770050}" -> "$i6 = virtualinvoke this.<kanzi.entropy.ANSRangeDecoder: int decodeHeader(int[][])>($r2) {1466710067}";
"$i6 = virtualinvoke this.<kanzi.entropy.ANSRangeDecoder: int decodeHeader(int[][])>($r2) {1466710067}" -> "if $i6 != 0 goto $i8 = startChunk#20 + sz {297038536}";
"if $i6 != 0 goto $i8 = startChunk#20 + sz {297038536}" -> "$i7 = startChunk#20 - blkptr {1180439793}";
"if $i6 != 0 goto $i8 = startChunk#20 + sz {297038536}" -> "$i8 = startChunk#20 + sz {138962528}";
"$i7 = startChunk#20 - blkptr {1180439793}" -> "return $i7 {1959533760}";
"$i8 = startChunk#20 + sz {138962528}" -> "if $i8 >= end goto $i9 = end {2007361806}";
"if $i8 >= end goto $i9 = end {2007361806}" -> "$i9 = startChunk#20 + sz {351649525}";
"if $i8 >= end goto $i9 = end {2007361806}" -> "$i9 = end {954365901}";
"$i9 = startChunk#20 + sz {351649525}" -> "goto [?= endChunk = $i9] {1279314172}";
"goto [?= endChunk = $i9] {1279314172}" -> "endChunk = $i9 {1041844456}";
"$i9 = end {954365901}" -> "endChunk = $i9 {1041844456}";
"endChunk = $i9 {1041844456}" -> "virtualinvoke this.<kanzi.entropy.ANSRangeDecoder: void decodeChunk(byte[],int,int)>(block, startChunk#20, endChunk) {1767756826}";
"virtualinvoke this.<kanzi.entropy.ANSRangeDecoder: void decodeChunk(byte[],int,int)>(block, startChunk#20, endChunk) {1767756826}" -> "startChunk#20 = endChunk {2144230262}";
"startChunk#20 = endChunk {2144230262}" -> "goto [?= (branch)] {153382913}";
"goto [?= (branch)] {153382913}" -> "if startChunk#20 >= end goto return len {985854921}";
}

digraph decodeHeader {
"this := @this: kanzi.entropy.ANSRangeDecoder {1583091335}" -> "frequencies := @parameter0: int[][] {1688296088}";
"frequencies := @parameter0: int[][] {1688296088}" -> "res#2 = 0 {72165574}";
"res#2 = 0 {72165574}" -> "$i0 = this.<kanzi.entropy.ANSRangeDecoder: int order> {998724034}";
"$i0 = this.<kanzi.entropy.ANSRangeDecoder: int order> {998724034}" -> "$i1 = 255 * $i0 {87759820}";
"$i1 = 255 * $i0 {87759820}" -> "dim = $i1 + 1 {1882715939}";
"dim = $i1 + 1 {1882715939}" -> "$r0 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {1856255465}";
"$r0 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {1856255465}" -> "$l2 = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(3) {1675485459}";
"$l2 = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(3) {1675485459}" -> "$l3 = 8L + $l2 {739875836}";
"$l3 = 8L + $l2 {739875836}" -> "$i4 = (int) $l3 {809036384}";
"$i4 = (int) $l3 {809036384}" -> "this.<kanzi.entropy.ANSRangeDecoder: int logRange> = $i4 {399625773}";
"this.<kanzi.entropy.ANSRangeDecoder: int logRange> = $i4 {399625773}" -> "$i5 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {204619940}";
"$i5 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {204619940}" -> "scale = 1 << $i5 {1083118427}";
"scale = 1 << $i5 {1083118427}" -> "k#22 = 0 {708549586}";
"k#22 = 0 {708549586}" -> "if k#22 >= dim goto return res#2 {276694336}";
"if k#22 >= dim goto return res#2 {276694336}" -> "f = frequencies[k#22] {271052048}";
"if k#22 >= dim goto return res#2 {276694336}" -> "return res#2 {850393817}";
"f = frequencies[k#22] {271052048}" -> "$r1 = this.<kanzi.entropy.ANSRangeDecoder: int[][] alphabet> {702746874}";
"$r1 = this.<kanzi.entropy.ANSRangeDecoder: int[][] alphabet> {702746874}" -> "alphabet_ = $r1[k#22] {653286166}";
"alphabet_ = $r1[k#22] {653286166}" -> "$r2 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {149227608}";
"$r2 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {149227608}" -> "alphabetSize = staticinvoke <kanzi.entropy.EntropyUtils: int decodeAlphabet(kanzi.InputBitStream,int[])>($r2, alphabet_) {1484405655}";
"alphabetSize = staticinvoke <kanzi.entropy.EntropyUtils: int decodeAlphabet(kanzi.InputBitStream,int[])>($r2, alphabet_) {1484405655}" -> "if alphabetSize != 0 goto $i6 = lengthof f {438023608}";
"if alphabetSize != 0 goto $i6 = lengthof f {438023608}" -> "goto [?= k#22 = k#22 + 1] {137103592}";
"if alphabetSize != 0 goto $i6 = lengthof f {438023608}" -> "$i6 = lengthof f {149716721}";
"goto [?= k#22 = k#22 + 1] {137103592}" -> "k#22 = k#22 + 1 {113687680}";
"$i6 = lengthof f {149716721}" -> "if alphabetSize == $i6 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1617906764}";
"if alphabetSize == $i6 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1617906764}" -> "$i7 = lengthof f {1510619229}";
"if alphabetSize == $i6 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1617906764}" -> "$r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1089367997}";
"$i7 = lengthof f {1510619229}" -> "i#44 = $i7 - 1 {1180261627}";
"i#44 = $i7 - 1 {1180261627}" -> "if i#44 < 0 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1700213382}";
"if i#44 < 0 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1700213382}" -> "f[i#44] = 0 {851219516}";
"if i#44 < 0 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1700213382}" -> "$r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1089367997}";
"f[i#44] = 0 {851219516}" -> "i#44 = i#44 + -1 {878797797}";
"i#44 = i#44 + -1 {878797797}" -> "goto [?= (branch)] {61179776}";
"goto [?= (branch)] {61179776}" -> "if i#44 < 0 goto $r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1700213382}";
"$r3 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1089367997}" -> "$r4 = $r3[k#22] {1352221692}";
"$r4 = $r3[k#22] {1352221692}" -> "$i8 = lengthof $r4 {1856225618}";
"$i8 = lengthof $r4 {1856225618}" -> "if $i8 >= scale goto (branch) {1488539184}";
"if $i8 >= scale goto (branch) {1488539184}" -> "$r5 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {847020079}";
"if $i8 >= scale goto (branch) {1488539184}" -> "if alphabetSize <= 64 goto $b9 = 8 {1942813930}";
"$r5 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {847020079}" -> "$r6 = newarray (byte)[scale] {183302793}";
"$r6 = newarray (byte)[scale] {183302793}" -> "$r5[k#22] = $r6 {1556577795}";
"$r5[k#22] = $r6 {1556577795}" -> "if alphabetSize <= 64 goto $b9 = 8 {1942813930}";
"if alphabetSize <= 64 goto $b9 = 8 {1942813930}" -> "$b9 = 16 {345809910}";
"if alphabetSize <= 64 goto $b9 = 8 {1942813930}" -> "$b9 = 8 {460885469}";
"$b9 = 16 {345809910}" -> "goto [?= chkSize = $b9] {1318895721}";
"goto [?= chkSize = $b9] {1318895721}" -> "chkSize = $b9 {2117441785}";
"$b9 = 8 {460885469}" -> "chkSize = $b9 {2117441785}";
"chkSize = $b9 {2117441785}" -> "sum#64 = 0 {1047812546}";
"sum#64 = 0 {1047812546}" -> "llr#66 = 3 {2026000316}";
"llr#66 = 3 {2026000316}" -> "$i10 = 1 << llr#66 {362445885}";
"$i10 = 1 << llr#66 {362445885}" -> "$i11 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {1047746448}";
"$i11 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {1047746448}" -> "if $i10 > $i11 goto i#73 = 1 {1667646150}";
"if $i10 > $i11 goto i#73 = 1 {1667646150}" -> "llr#66 = llr#66 + 1 {626761987}";
"if $i10 > $i11 goto i#73 = 1 {1667646150}" -> "i#73 = 1 {746976994}";
"llr#66 = llr#66 + 1 {626761987}" -> "goto [?= $i10 = 1 << llr#66] {560203939}";
"goto [?= $i10 = 1 << llr#66] {560203939}" -> "$i10 = 1 << llr#66 {362445885}";
"i#73 = 1 {746976994}" -> "if i#73 >= alphabetSize goto (branch) {1951258308}";
"if i#73 >= alphabetSize goto (branch) {1951258308}" -> "$r7 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {766714287}";
"if i#73 >= alphabetSize goto (branch) {1951258308}" -> "if scale > sum#64 goto $i23 = alphabet_[0] {1486169361}";
"$r7 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {766714287}" -> "$l12 = interfaceinvoke $r7.<kanzi.InputBitStream: long readBits(int)>(llr#66) {551253452}";
"$l12 = interfaceinvoke $r7.<kanzi.InputBitStream: long readBits(int)>(llr#66) {551253452}" -> "$l13 = 1L + $l12 {937255785}";
"$l13 = 1L + $l12 {937255785}" -> "logMax = (int) $l13 {1583647792}";
"logMax = (int) $l13 {1583647792}" -> "$i14 = 1 << logMax {1331686155}";
"$i14 = 1 << logMax {1331686155}" -> "if $i14 <= scale goto $i15 = i#73 + chkSize {1157258332}";
"if $i14 <= scale goto $i15 = i#73 + chkSize {1157258332}" -> "$r8 = new kanzi.BitStreamException {1427084496}";
"if $i14 <= scale goto $i15 = i#73 + chkSize {1157258332}" -> "$i15 = i#73 + chkSize {2128300289}";
"$r8 = new kanzi.BitStreamException {1427084496}" -> "$r9 = new java.lang.StringBuilder {1467237289}";
"$r9 = new java.lang.StringBuilder {1467237289}" -> "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() {1752844380}";
"specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() {1752844380}" -> "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid bitstream: incorrect frequency size \") {959197900}";
"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid bitstream: incorrect frequency size \") {959197900}" -> "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(logMax) {363848346}";
"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(logMax) {363848346}" -> "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in ANS range decoder\") {58521011}";
"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in ANS range decoder\") {58521011}" -> "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1193921528}";
"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1193921528}" -> "specialinvoke $r8.<kanzi.BitStreamException: void <init>(java.lang.String,int)>($r13, 3) {109024562}";
"specialinvoke $r8.<kanzi.BitStreamException: void <init>(java.lang.String,int)>($r13, 3) {109024562}" -> "throw $r8 {1657415971}";
"$i15 = i#73 + chkSize {2128300289}" -> "if $i15 >= alphabetSize goto $i16 = alphabetSize {215719164}";
"if $i15 >= alphabetSize goto $i16 = alphabetSize {215719164}" -> "$i16 = i#73 + chkSize {36264623}";
"if $i15 >= alphabetSize goto $i16 = alphabetSize {215719164}" -> "$i16 = alphabetSize {1830003946}";
"$i16 = i#73 + chkSize {36264623}" -> "goto [?= endj = $i16] {1388649066}";
"goto [?= endj = $i16] {1388649066}" -> "endj = $i16 {8048456}";
"$i16 = alphabetSize {1830003946}" -> "endj = $i16 {8048456}";
"endj = $i16 {8048456}" -> "j#107 = i#73 {845331781}";
"j#107 = i#73 {845331781}" -> "if j#107 >= endj goto i#73 = i#73 + chkSize {844938485}";
"if j#107 >= endj goto i#73 = i#73 + chkSize {844938485}" -> "$r14 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {1352987482}";
"if j#107 >= endj goto i#73 = i#73 + chkSize {844938485}" -> "i#73 = i#73 + chkSize {2077473255}";
"$r14 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {1352987482}" -> "$l17 = interfaceinvoke $r14.<kanzi.InputBitStream: long readBits(int)>(logMax) {291369939}";
"$l17 = interfaceinvoke $r14.<kanzi.InputBitStream: long readBits(int)>(logMax) {291369939}" -> "freq = (int) $l17 {571379665}";
"freq = (int) $l17 {571379665}" -> "if freq <= 0 goto $r15 = new kanzi.BitStreamException {715796745}";
"if freq <= 0 goto $r15 = new kanzi.BitStreamException {715796745}" -> "if freq < scale goto $i19 = alphabet_[j#107] {1895722022}";
"if freq <= 0 goto $r15 = new kanzi.BitStreamException {715796745}" -> "$r15 = new kanzi.BitStreamException {195508553}";
"if freq < scale goto $i19 = alphabet_[j#107] {1895722022}" -> "$r15 = new kanzi.BitStreamException {195508553}";
"if freq < scale goto $i19 = alphabet_[j#107] {1895722022}" -> "$i19 = alphabet_[j#107] {1541242399}";
"$r15 = new kanzi.BitStreamException {195508553}" -> "$r16 = new java.lang.StringBuilder {1857626663}";
"$r16 = new java.lang.StringBuilder {1857626663}" -> "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() {1610280198}";
"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() {1610280198}" -> "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid bitstream: incorrect frequency \") {2031701640}";
"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid bitstream: incorrect frequency \") {2031701640}" -> "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(freq) {855696437}";
"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(freq) {855696437}" -> "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for symbol \'\") {1763342371}";
"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for symbol \'\") {1763342371}" -> "$i18 = alphabet_[j#107] {1227235239}";
"$i18 = alphabet_[j#107] {1227235239}" -> "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18) {1942470080}";
"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18) {1942470080}" -> "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' in ANS range decoder\") {1814127425}";
"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' in ANS range decoder\") {1814127425}" -> "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() {352551493}";
"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() {352551493}" -> "specialinvoke $r15.<kanzi.BitStreamException: void <init>(java.lang.String,int)>($r22, 3) {1269939958}";
"specialinvoke $r15.<kanzi.BitStreamException: void <init>(java.lang.String,int)>($r22, 3) {1269939958}" -> "throw $r15 {745400234}";
"$i19 = alphabet_[j#107] {1541242399}" -> "f[$i19] = freq {2084983691}";
"f[$i19] = freq {2084983691}" -> "sum#64 = sum#64 + freq {1886863558}";
"sum#64 = sum#64 + freq {1886863558}" -> "j#107 = j#107 + 1 {1148271698}";
"j#107 = j#107 + 1 {1148271698}" -> "goto [?= (branch)] {763090440}";
"goto [?= (branch)] {763090440}" -> "if j#107 >= endj goto i#73 = i#73 + chkSize {844938485}";
"i#73 = i#73 + chkSize {2077473255}" -> "goto [?= (branch)] {45588988}";
"goto [?= (branch)] {45588988}" -> "if i#73 >= alphabetSize goto (branch) {1951258308}";
"if scale > sum#64 goto $i23 = alphabet_[0] {1486169361}" -> "$r23 = new kanzi.BitStreamException {1729284030}";
"if scale > sum#64 goto $i23 = alphabet_[0] {1486169361}" -> "$i23 = alphabet_[0] {99517674}";
"$r23 = new kanzi.BitStreamException {1729284030}" -> "$r24 = new java.lang.StringBuilder {145684933}";
"$r24 = new java.lang.StringBuilder {145684933}" -> "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() {138215369}";
"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() {138215369}" -> "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid bitstream: incorrect frequency \") {1082404147}";
"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid bitstream: incorrect frequency \") {1082404147}" -> "$i20 = alphabet_[0] {823383927}";
"$i20 = alphabet_[0] {823383927}" -> "$i21 = f[$i20] {1205872841}";
"$i21 = f[$i20] {1205872841}" -> "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21) {1632872324}";
"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21) {1632872324}" -> "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for symbol \'\") {1804514676}";
"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for symbol \'\") {1804514676}" -> "$i22 = alphabet_[0] {1588381010}";
"$i22 = alphabet_[0] {1588381010}" -> "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22) {1083703014}";
"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22) {1083703014}" -> "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' in ANS range decoder\") {596252301}";
"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\' in ANS range decoder\") {596252301}" -> "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() {456446459}";
"$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() {456446459}" -> "specialinvoke $r23.<kanzi.BitStreamException: void <init>(java.lang.String,int)>($r30, 3) {1835690917}";
"specialinvoke $r23.<kanzi.BitStreamException: void <init>(java.lang.String,int)>($r30, 3) {1835690917}" -> "throw $r23 {514270971}";
"$i23 = alphabet_[0] {99517674}" -> "$i24 = scale - sum#64 {1595490846}";
"$i24 = scale - sum#64 {1595490846}" -> "f[$i23] = $i24 {782320835}";
"f[$i23] = $i24 {782320835}" -> "sum#178 = 0 {1825071}";
"sum#178 = 0 {1825071}" -> "$r31 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {824490943}";
"$r31 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {824490943}" -> "symb = $r31[k#22] {218381789}";
"symb = $r31[k#22] {218381789}" -> "$r32 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {817923853}";
"$r32 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {817923853}" -> "freq2sym = $r32[k#22] {432585266}";
"freq2sym = $r32[k#22] {432585266}" -> "i#188 = 0 {213988852}";
"i#188 = 0 {213988852}" -> "$i25 = lengthof f {566811239}";
"$i25 = lengthof f {566811239}" -> "if i#188 >= $i25 goto res#2 = res#2 + alphabetSize {614675775}";
"if i#188 >= $i25 goto res#2 = res#2 + alphabetSize {614675775}" -> "$i26 = f[i#188] {1231248298}";
"if i#188 >= $i25 goto res#2 = res#2 + alphabetSize {614675775}" -> "res#2 = res#2 + alphabetSize {1786794923}";
"$i26 = f[i#188] {1231248298}" -> "if $i26 != 0 goto $i27 = f[i#188] {1960084852}";
"if $i26 != 0 goto $i27 = f[i#188] {1960084852}" -> "goto [?= i#188 = i#188 + 1] {1161975279}";
"if $i26 != 0 goto $i27 = f[i#188] {1960084852}" -> "$i27 = f[i#188] {359911265}";
"goto [?= i#188 = i#188 + 1] {1161975279}" -> "i#188 = i#188 + 1 {1744154556}";
"$i27 = f[i#188] {359911265}" -> "j#200 = $i27 - 1 {2082592650}";
"j#200 = $i27 - 1 {2082592650}" -> "if j#200 < 0 goto $r33 = symb[i#188] {2106150196}";
"if j#200 < 0 goto $r33 = symb[i#188] {2106150196}" -> "$i28 = sum#178 + j#200 {592331691}";
"if j#200 < 0 goto $r33 = symb[i#188] {2106150196}" -> "$r33 = symb[i#188] {2002898323}";
"$i28 = sum#178 + j#200 {592331691}" -> "$b29 = (byte) i#188 {704285010}";
"$b29 = (byte) i#188 {704285010}" -> "freq2sym[$i28] = $b29 {2002429512}";
"freq2sym[$i28] = $b29 {2002429512}" -> "j#200 = j#200 + -1 {643358739}";
"j#200 = j#200 + -1 {643358739}" -> "goto [?= (branch)] {1231017839}";
"goto [?= (branch)] {1231017839}" -> "if j#200 < 0 goto $r33 = symb[i#188] {2106150196}";
"$r33 = symb[i#188] {2002898323}" -> "$i30 = f[i#188] {1329275269}";
"$i30 = f[i#188] {1329275269}" -> "$i31 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {93602714}";
"$i31 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {93602714}" -> "virtualinvoke $r33.<kanzi.entropy.ANSRangeDecoder$Symbol: void reset(int,int,int)>(sum#178, $i30, $i31) {1223315213}";
"virtualinvoke $r33.<kanzi.entropy.ANSRangeDecoder$Symbol: void reset(int,int,int)>(sum#178, $i30, $i31) {1223315213}" -> "$i32 = f[i#188] {1037527929}";
"$i32 = f[i#188] {1037527929}" -> "sum#178 = sum#178 + $i32 {1042724954}";
"sum#178 = sum#178 + $i32 {1042724954}" -> "i#188 = i#188 + 1 {1744154556}";
"i#188 = i#188 + 1 {1744154556}" -> "goto [?= $i25 = lengthof f] {1644141720}";
"goto [?= $i25 = lengthof f] {1644141720}" -> "$i25 = lengthof f {566811239}";
"res#2 = res#2 + alphabetSize {1786794923}" -> "k#22 = k#22 + 1 {113687680}";
"k#22 = k#22 + 1 {113687680}" -> "goto [?= (branch)] {500126822}";
"goto [?= (branch)] {500126822}" -> "if k#22 >= dim goto return res#2 {276694336}";
}

digraph decodeChunk {
"this := @this: kanzi.entropy.ANSRangeDecoder {921394529}" -> "block := @parameter0: byte[] {882846336}";
"block := @parameter0: byte[] {882846336}" -> "start := @parameter1: int {1914267129}";
"start := @parameter1: int {1914267129}" -> "end := @parameter2: int {1771136275}";
"end := @parameter2: int {1771136275}" -> "$r0 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {2144005151}";
"$r0 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {2144005151}" -> "$l0 = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(32) {1482638346}";
"$l0 = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(32) {1482638346}" -> "st#6 = (int) $l0 {905067378}";
"st#6 = (int) $l0 {905067378}" -> "$i1 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {1296767807}";
"$i1 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {1296767807}" -> "$i2 = 1 << $i1 {1766228047}";
"$i2 = 1 << $i1 {1766228047}" -> "mask = $i2 - 1 {1844194402}";
"mask = $i2 - 1 {1844194402}" -> "$i3 = this.<kanzi.entropy.ANSRangeDecoder: int order> {1233555855}";
"$i3 = this.<kanzi.entropy.ANSRangeDecoder: int order> {1233555855}" -> "if $i3 != 0 goto prv#66 = 0 {1440285994}";
"if $i3 != 0 goto prv#66 = 0 {1440285994}" -> "$r1 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {2087928168}";
"if $i3 != 0 goto prv#66 = 0 {1440285994}" -> "prv#66 = 0 {1138638264}";
"$r1 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {2087928168}" -> "freq2sym = $r1[0] {1992792107}";
"freq2sym = $r1[0] {1992792107}" -> "$r2 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {108004912}";
"$r2 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {108004912}" -> "symb = $r2[0] {502944530}";
"symb = $r2[0] {502944530}" -> "i#24 = start {1182793999}";
"i#24 = start {1182793999}" -> "if i#24 >= end goto (branch) {2107354016}";
"if i#24 >= end goto (branch) {2107354016}" -> "$i4 = st#6 & mask {770067501}";
"if i#24 >= end goto (branch) {2107354016}" -> "goto [?= return] {314202432}";
"$i4 = st#6 & mask {770067501}" -> "cur = freq2sym[$i4] {104678536}";
"cur = freq2sym[$i4] {104678536}" -> "block[i#24] = cur {1333815368}";
"block[i#24] = cur {1333815368}" -> "$s5 = cur & 255 {800292175}";
"$s5 = cur & 255 {800292175}" -> "sym = symb[$s5] {297462385}";
"sym = symb[$s5] {297462385}" -> "$i6 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int freq> {637234598}";
"$i6 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int freq> {637234598}" -> "$i7 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {1934369706}";
"$i7 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {1934369706}" -> "$i8 = st#6 >>> $i7 {220522040}";
"$i8 = st#6 >>> $i7 {220522040}" -> "$i9 = $i6 * $i8 {1081660683}";
"$i9 = $i6 * $i8 {1081660683}" -> "$i10 = st#6 & mask {255342624}";
"$i10 = st#6 & mask {255342624}" -> "$i11 = $i9 + $i10 {166622273}";
"$i11 = $i9 + $i10 {166622273}" -> "$i12 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int cumFreq> {42416285}";
"$i12 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int cumFreq> {42416285}" -> "st#6 = $i11 - $i12 {914800750}";
"st#6 = $i11 - $i12 {914800750}" -> "if st#6 >= 8388608 goto i#24 = i#24 + 1 {1422184247}";
"if st#6 >= 8388608 goto i#24 = i#24 + 1 {1422184247}" -> "$i13 = st#6 << 8 {737725618}";
"if st#6 >= 8388608 goto i#24 = i#24 + 1 {1422184247}" -> "i#24 = i#24 + 1 {2011823211}";
"$i13 = st#6 << 8 {737725618}" -> "$r3 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {45003426}";
"$r3 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {45003426}" -> "$l14 = interfaceinvoke $r3.<kanzi.InputBitStream: long readBits(int)>(8) {1227305740}";
"$l14 = interfaceinvoke $r3.<kanzi.InputBitStream: long readBits(int)>(8) {1227305740}" -> "$i15 = (int) $l14 {686652110}";
"$i15 = (int) $l14 {686652110}" -> "st#6 = $i13 | $i15 {1155411945}";
"st#6 = $i13 | $i15 {1155411945}" -> "goto [?= (branch)] {873585453}";
"goto [?= (branch)] {873585453}" -> "if st#6 >= 8388608 goto i#24 = i#24 + 1 {1422184247}";
"i#24 = i#24 + 1 {2011823211}" -> "goto [?= (branch)] {657361707}";
"goto [?= (branch)] {657361707}" -> "if i#24 >= end goto (branch) {2107354016}";
"goto [?= return] {314202432}" -> "return {255624683}";
"prv#66 = 0 {1138638264}" -> "i#68 = start {783247027}";
"i#68 = start {783247027}" -> "if i#68 >= end goto return {1483466260}";
"if i#68 >= end goto return {1483466260}" -> "$r4 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1686829686}";
"if i#68 >= end goto return {1483466260}" -> "return {255624683}";
"$r4 = this.<kanzi.entropy.ANSRangeDecoder: byte[][] f2s> {1686829686}" -> "$r5 = $r4[prv#66] {655525350}";
"$r5 = $r4[prv#66] {655525350}" -> "$i16 = st#6 & mask {1774193777}";
"$i16 = st#6 & mask {1774193777}" -> "$b17 = $r5[$i16] {1515100442}";
"$b17 = $r5[$i16] {1515100442}" -> "cur = $b17 & 255 {2117248969}";
"cur = $b17 & 255 {2117248969}" -> "$b18 = (byte) cur {887444703}";
"$b18 = (byte) cur {887444703}" -> "block[i#68] = $b18 {1715399685}";
"block[i#68] = $b18 {1715399685}" -> "$r6 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {203469598}";
"$r6 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.entropy.ANSRangeDecoder$Symbol[][] symbols> {203469598}" -> "$r7 = $r6[prv#66] {53663095}";
"$r7 = $r6[prv#66] {53663095}" -> "sym = $r7[cur] {1678220978}";
"sym = $r7[cur] {1678220978}" -> "$i19 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int freq> {1651156661}";
"$i19 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int freq> {1651156661}" -> "$i20 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {729744490}";
"$i20 = this.<kanzi.entropy.ANSRangeDecoder: int logRange> {729744490}" -> "$i21 = st#6 >>> $i20 {479674558}";
"$i21 = st#6 >>> $i20 {479674558}" -> "$i22 = $i19 * $i21 {763569952}";
"$i22 = $i19 * $i21 {763569952}" -> "$i23 = st#6 & mask {1722031105}";
"$i23 = st#6 & mask {1722031105}" -> "$i24 = $i22 + $i23 {1378524626}";
"$i24 = $i22 + $i23 {1378524626}" -> "$i25 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int cumFreq> {2036121519}";
"$i25 = sym.<kanzi.entropy.ANSRangeDecoder$Symbol: int cumFreq> {2036121519}" -> "st#6 = $i24 - $i25 {966540981}";
"st#6 = $i24 - $i25 {966540981}" -> "if st#6 >= 8388608 goto prv#66 = cur {1072660085}";
"if st#6 >= 8388608 goto prv#66 = cur {1072660085}" -> "$i26 = st#6 << 8 {281842972}";
"if st#6 >= 8388608 goto prv#66 = cur {1072660085}" -> "prv#66 = cur {899714297}";
"$i26 = st#6 << 8 {281842972}" -> "$r8 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {1198318145}";
"$r8 = this.<kanzi.entropy.ANSRangeDecoder: kanzi.InputBitStream bitstream> {1198318145}" -> "$l27 = interfaceinvoke $r8.<kanzi.InputBitStream: long readBits(int)>(8) {1135833619}";
"$l27 = interfaceinvoke $r8.<kanzi.InputBitStream: long readBits(int)>(8) {1135833619}" -> "$i28 = (int) $l27 {893189806}";
"$i28 = (int) $l27 {893189806}" -> "st#6 = $i26 | $i28 {960590997}";
"st#6 = $i26 | $i28 {960590997}" -> "goto [?= (branch)] {1631234628}";
"goto [?= (branch)] {1631234628}" -> "if st#6 >= 8388608 goto prv#66 = cur {1072660085}";
"prv#66 = cur {899714297}" -> "i#68 = i#68 + 1 {133669636}";
"i#68 = i#68 + 1 {133669636}" -> "goto [?= (branch)] {866861364}";
"goto [?= (branch)] {866861364}" -> "if i#68 >= end goto return {1483466260}";
}


