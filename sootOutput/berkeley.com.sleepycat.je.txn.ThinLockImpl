    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/txn/ThinLockImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.txn.ThinLockImpl: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.txn.ThinLockImpl)
    {
        berkeley.com.sleepycat.je.txn.ThinLockImpl this, tl;
        berkeley.com.sleepycat.je.txn.Locker $r0;
        berkeley.com.sleepycat.je.txn.LockType $r1;

        this := @this: berkeley.com.sleepycat.je.txn.ThinLockImpl;

        tl := @parameter0: berkeley.com.sleepycat.je.txn.ThinLockImpl;

        $r0 = virtualinvoke tl.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.Locker getLocker()>();

        $r1 = virtualinvoke tl.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.LockType getLockType()>();

        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockInfo: void <init>(berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType)>($r0, $r1);

        return;
    }

    public void <init>()
    {
        berkeley.com.sleepycat.je.txn.ThinLockImpl this;

        this := @this: berkeley.com.sleepycat.je.txn.ThinLockImpl;

        specialinvoke this.<berkeley.com.sleepycat.je.txn.LockInfo: void <init>(berkeley.com.sleepycat.je.txn.Locker,berkeley.com.sleepycat.je.txn.LockType)>(null, null);

        return;
    }

    public berkeley.com.sleepycat.je.txn.LockAttemptResult lock(berkeley.com.sleepycat.je.txn.LockType, berkeley.com.sleepycat.je.txn.Locker, boolean, boolean, berkeley.com.sleepycat.je.dbi.MemoryBudget, int) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.txn.ThinLockImpl this;
        berkeley.com.sleepycat.je.txn.LockType requestType, upgradeType, $r6, $r7;
        berkeley.com.sleepycat.je.txn.Locker locker, $r0, $r1, $r5;
        boolean nonBlockingRequest, jumpAheadOfWaiters, $z0, $z1;
        berkeley.com.sleepycat.je.dbi.MemoryBudget mb;
        int lockTableIndex;
        berkeley.com.sleepycat.je.txn.LockImpl newLock, $r2;
        berkeley.com.sleepycat.je.txn.LockUpgrade upgrade;
        berkeley.com.sleepycat.je.txn.LockInfo $r3;
        berkeley.com.sleepycat.je.txn.LockAttemptResult $r4, $r10;
        berkeley.com.sleepycat.je.txn.LockGrantType grant#26, $r9;
        java.lang.AssertionError $r8;

        this := @this: berkeley.com.sleepycat.je.txn.ThinLockImpl;

        requestType := @parameter0: berkeley.com.sleepycat.je.txn.LockType;

        locker := @parameter1: berkeley.com.sleepycat.je.txn.Locker;

        nonBlockingRequest := @parameter2: boolean;

        jumpAheadOfWaiters := @parameter3: boolean;

        mb := @parameter4: berkeley.com.sleepycat.je.dbi.MemoryBudget;

        lockTableIndex := @parameter5: int;

        $r0 = this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.Locker locker>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.Locker locker>;

        if $r1 == locker goto label1;

        $r2 = new berkeley.com.sleepycat.je.txn.LockImpl;

        $r3 = new berkeley.com.sleepycat.je.txn.LockInfo;

        specialinvoke $r3.<berkeley.com.sleepycat.je.txn.LockInfo: void <init>(berkeley.com.sleepycat.je.txn.LockInfo)>(this);

        specialinvoke $r2.<berkeley.com.sleepycat.je.txn.LockImpl: void <init>(berkeley.com.sleepycat.je.txn.LockInfo)>($r3);

        newLock = $r2;

        $r4 = interfaceinvoke newLock.<berkeley.com.sleepycat.je.txn.Lock: berkeley.com.sleepycat.je.txn.LockAttemptResult lock(berkeley.com.sleepycat.je.txn.LockType,berkeley.com.sleepycat.je.txn.Locker,boolean,boolean,berkeley.com.sleepycat.je.dbi.MemoryBudget,int)>(requestType, locker, nonBlockingRequest, jumpAheadOfWaiters, mb, lockTableIndex);

        return $r4;

     label1:
        $r5 = this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.Locker locker>;

        if $r5 != null goto label2;

        this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.Locker locker> = locker;

        this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.LockType lockType> = requestType;

        grant#26 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType NEW>;

        goto label7;

     label2:
        $r6 = this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.LockType lockType>;

        upgrade = virtualinvoke $r6.<berkeley.com.sleepycat.je.txn.LockType: berkeley.com.sleepycat.je.txn.LockUpgrade getUpgrade(berkeley.com.sleepycat.je.txn.LockType)>(requestType);

        $r7 = virtualinvoke upgrade.<berkeley.com.sleepycat.je.txn.LockUpgrade: berkeley.com.sleepycat.je.txn.LockType getUpgrade()>();

        if $r7 != null goto label3;

        grant#26 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType EXISTING>;

        goto label7;

     label3:
        upgradeType = virtualinvoke upgrade.<berkeley.com.sleepycat.je.txn.LockUpgrade: berkeley.com.sleepycat.je.txn.LockType getUpgrade()>();

        $z0 = <berkeley.com.sleepycat.je.txn.ThinLockImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if upgradeType != null goto label4;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        this.<berkeley.com.sleepycat.je.txn.ThinLockImpl: berkeley.com.sleepycat.je.txn.LockType lockType> = upgradeType;

        $z1 = virtualinvoke upgrade.<berkeley.com.sleepycat.je.txn.LockUpgrade: boolean getPromotion()>();

        if $z1 == 0 goto label5;

        $r9 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType PROMOTION>;

        goto label6;

     label5:
        $r9 = <berkeley.com.sleepycat.je.txn.LockGrantType: berkeley.com.sleepycat.je.txn.LockGrantType EXISTING>;

     label6:
        grant#26 = $r9;

     label7:
        $r10 = new berkeley.com.sleepycat.je.txn.LockAttemptResult;

        specialinvoke $r10.<berkeley.com.sleepycat.je.txn.LockAttemptResult: void <init>(berkeley.com.sleepycat.je.txn.Lock,berkeley.com.sleepycat.je.txn.LockGrantType,boolean)>(this, grant#26, 0);

        return $r10;
    }


