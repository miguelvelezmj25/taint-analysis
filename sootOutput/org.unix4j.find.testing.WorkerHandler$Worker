    public void <init>(org.unix4j.find.testing.WorkerHandler, java.io.File, java.lang.Object, org.unix4j.find.testing.Arguments, org.unix4j.find.testing.WorkerHandler$InternalCallback)
    {
        org.unix4j.find.testing.WorkerHandler$Worker this;
        org.unix4j.find.testing.WorkerHandler l1;
        java.io.File unprocessedFile;
        java.lang.Object processors;
        org.unix4j.find.testing.Arguments arguments;
        org.unix4j.find.testing.WorkerHandler$InternalCallback callback;

        this := @this: org.unix4j.find.testing.WorkerHandler$Worker;

        l1 := @parameter0: org.unix4j.find.testing.WorkerHandler;

        unprocessedFile := @parameter1: java.io.File;

        processors := @parameter2: java.lang.Object;

        arguments := @parameter3: org.unix4j.find.testing.Arguments;

        callback := @parameter4: org.unix4j.find.testing.WorkerHandler$InternalCallback;

        this.<org.unix4j.find.testing.WorkerHandler$Worker: org.unix4j.find.testing.WorkerHandler this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.unix4j.find.testing.WorkerHandler$Worker: java.io.File unprocessedFile> = unprocessedFile;

        this.<org.unix4j.find.testing.WorkerHandler$Worker: org.unix4j.find.testing.Arguments arguments> = arguments;

        this.<org.unix4j.find.testing.WorkerHandler$Worker: java.lang.Object processor> = processors;

        this.<org.unix4j.find.testing.WorkerHandler$Worker: org.unix4j.find.testing.WorkerHandler$InternalCallback callback> = callback;

        return;
    }

    public void run()
    {
        org.unix4j.find.testing.WorkerHandler$Worker this;
        org.unix4j.find.testing.Result result#2;
        java.lang.Class $r0, $r6;
        java.lang.Object $r1, $r2, $r7, $r8;
        boolean $z0, $z1, $z2;
        org.unix4j.find.testing.IPostProcessor $r3;
        java.io.File $r4, $r10;
        org.unix4j.find.testing.Arguments $r5, $r11;
        org.unix4j.find.testing.IPlatformConverter $r9;
        org.unix4j.find.testing.WorkerHandler$InternalCallback $r12;

        this := @this: org.unix4j.find.testing.WorkerHandler$Worker;

        result#2 = null;

        $r0 = class "org/unix4j/find/testing/IPostProcessor";

        $r1 = this.<org.unix4j.find.testing.WorkerHandler$Worker: java.lang.Object processor>;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r2 = this.<org.unix4j.find.testing.WorkerHandler$Worker: java.lang.Object processor>;

        $r3 = (org.unix4j.find.testing.IPostProcessor) $r2;

        $r4 = this.<org.unix4j.find.testing.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r5 = this.<org.unix4j.find.testing.WorkerHandler$Worker: org.unix4j.find.testing.Arguments arguments>;

        $z1 = $r5.<org.unix4j.find.testing.Arguments: boolean keepUnoptimizedFilesPostProcessor>;

        result#2 = interfaceinvoke $r3.<org.unix4j.find.testing.IPostProcessor: org.unix4j.find.testing.Result process(java.io.File,boolean)>($r4, $z1);

        goto label2;

     label1:
        $r6 = class "org/unix4j/find/testing/IPlatformConverter";

        $r7 = this.<org.unix4j.find.testing.WorkerHandler$Worker: java.lang.Object processor>;

        $z2 = virtualinvoke $r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label2;

        $r8 = this.<org.unix4j.find.testing.WorkerHandler$Worker: java.lang.Object processor>;

        $r9 = (org.unix4j.find.testing.IPlatformConverter) $r8;

        $r10 = this.<org.unix4j.find.testing.WorkerHandler$Worker: java.io.File unprocessedFile>;

        $r11 = this.<org.unix4j.find.testing.WorkerHandler$Worker: org.unix4j.find.testing.Arguments arguments>;

        result#2 = interfaceinvoke $r9.<org.unix4j.find.testing.IPlatformConverter: org.unix4j.find.testing.Result convert(java.io.File,org.unix4j.find.testing.Arguments)>($r10, $r11);

     label2:
        $r12 = this.<org.unix4j.find.testing.WorkerHandler$Worker: org.unix4j.find.testing.WorkerHandler$InternalCallback callback>;

        virtualinvoke $r12.<org.unix4j.find.testing.WorkerHandler$InternalCallback: void onJobFinished(org.unix4j.find.testing.Result)>(result#2);

        return;
    }


