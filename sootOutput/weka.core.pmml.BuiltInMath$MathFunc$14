    void <init>(java.lang.String, int, java.lang.String)
    {
        weka.core.pmml.BuiltInMath$MathFunc$14 this;
        java.lang.String l1, funcName;
        int l2;

        this := @this: weka.core.pmml.BuiltInMath$MathFunc$14;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        funcName := @parameter2: java.lang.String;

        specialinvoke this.<weka.core.pmml.BuiltInMath$MathFunc: void <init>(java.lang.String,int,java.lang.String,weka.core.pmml.BuiltInMath$1)>(l1, l2, funcName, null);

        return;
    }

    boolean legalNumParams(int)
    {
        weka.core.pmml.BuiltInMath$MathFunc$14 this;
        int num;
        boolean $z0;

        this := @this: weka.core.pmml.BuiltInMath$MathFunc$14;

        num := @parameter0: int;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(num);

        if num != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    double eval(double[])
    {
        weka.core.pmml.BuiltInMath$MathFunc$14 this;
        double[] args;
        double $d0, $d1;
        long $l0;

        this := @this: weka.core.pmml.BuiltInMath$MathFunc$14;

        args := @parameter0: double[];

        $d0 = args[0];

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $d1 = (double) $l0;

        return $d1;
    }


