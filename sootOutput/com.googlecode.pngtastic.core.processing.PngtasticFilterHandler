    public void <init>(com.googlecode.pngtastic.core.Logger)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        com.googlecode.pngtastic.core.Logger log;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        log := @parameter0: com.googlecode.pngtastic.core.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: com.googlecode.pngtastic.core.Logger log> = log;

        return;
    }

    public void deFilter(byte[], byte[], int) throws com.googlecode.pngtastic.core.PngException
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int sampleBitCount, result, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i21, $i25, $i26, $i28, $i31, $i32, $i35, previous#1, x#2, a#3, $i37, previous#11, previous#12, x#13, a#14, previous#16, x#17, a#18;
        com.googlecode.pngtastic.core.PngFilterType filterType, previousFilterType;
        byte $b0, $b1, $b7, $b9, $b15, $b17, $b22, $b27, $b29, $b33, $b34, $b36, $b38, $b39, $b40, $b41;
        int[] $r0;
        short $s23, $s24;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        sampleBitCount := @parameter2: int;

        $b0 = line[0];

        filterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b0);

        line[0] = 0;

        $b1 = previousLine[0];

        previousFilterType = staticinvoke <com.googlecode.pngtastic.core.PngFilterType: com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b1);

        previousLine[0] = 0;

        $r0 = <com.googlecode.pngtastic.core.processing.PngtasticFilterHandler$1: int[] $SwitchMap$com$googlecode$pngtastic$core$PngFilterType>;

        $i2 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: int ordinal()>();

        $i3 = $r0[$i2];

        tableswitch($i3)
        {
            case 2: goto label01;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label14;
            default: goto label17;
        };

     label01:
        $i4 = sampleBitCount / 8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        $i6 = $i5 - 1;

        previous#1 = neg $i6;

        x#2 = 1;

        a#3 = previous#1;

     label02:
        $i37 = lengthof line;

        if x#2 >= $i37 goto label05;

        $i10 = x#2;

        $b7 = line[x#2];

        if a#3 >= 0 goto label03;

        $b38 = 0;

        goto label04;

     label03:
        $b38 = line[a#3];

     label04:
        $i8 = $b7 + $b38;

        $b9 = (byte) $i8;

        line[$i10] = $b9;

        x#2 = x#2 + 1;

        a#3 = a#3 + 1;

        goto label02;

     label05:
        goto label17;

     label06:
        previous#11 = 1;

     label07:
        $i32 = lengthof line;

        if previous#11 >= $i32 goto label08;

        $b34 = line[previous#11];

        $b33 = previousLine[previous#11];

        $i35 = $b34 + $b33;

        $b36 = (byte) $i35;

        line[previous#11] = $b36;

        previous#11 = previous#11 + 1;

        goto label07;

     label08:
        goto label17;

     label09:
        $i18 = sampleBitCount / 8;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i18);

        $i20 = $i19 - 1;

        previous#12 = neg $i20;

        x#13 = 1;

        a#14 = previous#12;

     label10:
        $i21 = lengthof line;

        if x#13 >= $i21 goto label13;

        $i31 = x#13;

        $b27 = line[x#13];

        if a#14 >= 0 goto label11;

        $b39 = 0;

        goto label12;

     label11:
        $b39 = line[a#14];

     label12:
        $s24 = 255 & $b39;

        $b22 = previousLine[x#13];

        $s23 = 255 & $b22;

        $i25 = $s24 + $s23;

        $i26 = $i25 / 2;

        $i28 = $b27 + $i26;

        $b29 = (byte) $i28;

        line[$i31] = $b29;

        x#13 = x#13 + 1;

        a#14 = a#14 + 1;

        goto label10;

     label13:
        goto label17;

     label14:
        $i11 = sampleBitCount / 8;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i11);

        $i13 = $i12 - 1;

        previous#16 = neg $i13;

        x#17 = 1;

        a#18 = previous#16;

     label15:
        $i14 = lengthof line;

        if x#17 >= $i14 goto label16;

        result = specialinvoke this.<com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: int paethPredictor(byte[],byte[],int,int)>(line, previousLine, x#17, a#18);

        $b15 = line[x#17];

        $i16 = $b15 + result;

        $b17 = (byte) $i16;

        line[x#17] = $b17;

        x#17 = x#17 + 1;

        a#18 = a#18 + 1;

        goto label15;

     label16:
        goto label17;

     label17:
        $b40 = virtualinvoke filterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        line[0] = $b40;

        $b41 = virtualinvoke previousFilterType.<com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        previousLine[0] = $b41;

        return;
    }

    private int paethPredictor(byte[], byte[], int, int)
    {
        com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int x, xp, p, pa, pb, pc, $i1, $i2, $i3, $i4, $i9, $i10, $i11;
        short a, b, c, $s12;
        byte $b0, $b7, $b8;

        this := @this: com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        line := @parameter0: byte[];

        previousLine := @parameter1: byte[];

        x := @parameter2: int;

        xp := @parameter3: int;

        if xp >= 0 goto label01;

        $b7 = 0;

        goto label02;

     label01:
        $b7 = line[xp];

     label02:
        a = 255 & $b7;

        $b0 = previousLine[x];

        b = 255 & $b0;

        if xp >= 0 goto label03;

        $b8 = 0;

        goto label04;

     label03:
        $b8 = previousLine[xp];

     label04:
        c = 255 & $b8;

        $i1 = a + b;

        p = $i1 - c;

        if p < a goto label05;

        $i9 = p - a;

        goto label06;

     label05:
        $i2 = p - a;

        $i9 = neg $i2;

     label06:
        pa = $i9;

        if p < b goto label07;

        $i10 = p - b;

        goto label08;

     label07:
        $i3 = p - b;

        $i10 = neg $i3;

     label08:
        pb = $i10;

        if p < c goto label09;

        $i11 = p - c;

        goto label10;

     label09:
        $i4 = p - c;

        $i11 = neg $i4;

     label10:
        pc = $i11;

        if pa > pb goto label11;

        if pa > pc goto label11;

        return a;

     label11:
        if pb > pc goto label12;

        $s12 = b;

        goto label13;

     label12:
        $s12 = c;

     label13:
        return $s12;
    }


