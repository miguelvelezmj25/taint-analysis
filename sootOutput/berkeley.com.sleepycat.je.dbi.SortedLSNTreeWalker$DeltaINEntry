    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/dbi/SortedLSNTreeWalker";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.tree.IN, int, java.lang.Object, long)
    {
        berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry this;
        berkeley.com.sleepycat.je.tree.IN in;
        int index;
        java.lang.Object delta;
        long deltaLsn;
        boolean $z0, $z1;
        java.lang.AssertionError $r0, $r1;
        byte $b0;

        this := @this: berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry;

        in := @parameter0: berkeley.com.sleepycat.je.tree.IN;

        index := @parameter1: int;

        delta := @parameter2: java.lang.Object;

        deltaLsn := @parameter3: long;

        specialinvoke this.<berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry: void <init>(berkeley.com.sleepycat.je.tree.IN,int)>(in, index);

        $z0 = <berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(delta);

        if delta != null goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $z1 = <berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $b0 = deltaLsn cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label2;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        this.<berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: java.lang.Object delta> = delta;

        this.<berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: long deltaLsn> = deltaLsn;

        return;
    }

    long getMemorySize()
    {
        berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry this;
        java.lang.Object $r0, $r1, $r3;
        boolean $z0;
        berkeley.com.sleepycat.je.tree.OldBINDelta $r2;
        long deltaSize#8, $l1, $l2, $l4, $l5;
        berkeley.com.sleepycat.je.tree.BIN $r4;
        int $i0, $i3;

        this := @this: berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry;

        $r0 = this.<berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: java.lang.Object delta>;

        $z0 = $r0 instanceof berkeley.com.sleepycat.je.tree.OldBINDelta;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: java.lang.Object delta>;

        $r2 = (berkeley.com.sleepycat.je.tree.OldBINDelta) $r1;

        deltaSize#8 = virtualinvoke $r2.<berkeley.com.sleepycat.je.tree.OldBINDelta: long getMemorySize()>();

        goto label2;

     label1:
        $r3 = this.<berkeley.com.sleepycat.je.dbi.SortedLSNTreeWalker$DeltaINEntry: java.lang.Object delta>;

        $r4 = (berkeley.com.sleepycat.je.tree.BIN) $r3;

        deltaSize#8 = virtualinvoke $r4.<berkeley.com.sleepycat.je.tree.BIN: long getInMemorySize()>();

     label2:
        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHMAP_ENTRY_OVERHEAD>;

        $l1 = (long) $i0;

        $l2 = deltaSize#8 + $l1;

        $i3 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int DELTAINENTRY_OVERHEAD>;

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        return $l5;
    }


