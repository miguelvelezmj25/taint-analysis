    public void close()
    {
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor this;
        berkeley.com.sleepycat.je.PreloadConfig$Phases $r0;
        berkeley.com.sleepycat.je.ProgressListener $r1, $r2;
        long $l0, $l1;

        this := @this: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor;

        $r1 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.ProgressListener progressListener>;

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.ProgressListener progressListener>;

        $r0 = <berkeley.com.sleepycat.je.PreloadConfig$Phases: berkeley.com.sleepycat.je.PreloadConfig$Phases PRELOAD>;

        $l0 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long progressCounter>;

        $l1 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long progressCounter>;

        interfaceinvoke $r2.<berkeley.com.sleepycat.je.ProgressListener: boolean progress(java.lang.Enum,long,long)>($r0, $l0, $l1);

     label1:
        return;
    }

    void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, long, boolean, long, berkeley.com.sleepycat.je.PreloadStats, berkeley.com.sleepycat.je.PreloadConfig)
    {
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        long maxBytes, targetTime;
        boolean useOffHeapCache, $z0;
        berkeley.com.sleepycat.je.PreloadStats stats;
        berkeley.com.sleepycat.je.PreloadConfig config;
        berkeley.com.sleepycat.je.ProgressListener $r0;

        this := @this: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        maxBytes := @parameter1: long;

        useOffHeapCache := @parameter2: boolean;

        targetTime := @parameter3: long;

        stats := @parameter4: berkeley.com.sleepycat.je.PreloadStats;

        config := @parameter5: berkeley.com.sleepycat.je.PreloadConfig;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long progressCounter> = 0L;

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long maxBytes> = maxBytes;

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: boolean useOffHeapCache> = 0;

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long targetTime> = targetTime;

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats> = stats;

        $z0 = virtualinvoke config.<berkeley.com.sleepycat.je.PreloadConfig: boolean getLoadLNs()>();

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: boolean countLNs> = $z0;

        $r0 = virtualinvoke config.<berkeley.com.sleepycat.je.PreloadConfig: berkeley.com.sleepycat.je.ProgressListener getProgressListener()>();

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.ProgressListener progressListener> = $r0;

        return;
    }

    public void processDirtyDeletedLN(long, berkeley.com.sleepycat.je.tree.LN, byte[])
    {
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor this;
        long childLsn;
        berkeley.com.sleepycat.je.tree.LN ln;
        byte[] lnKey;

        this := @this: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor;

        childLsn := @parameter0: long;

        ln := @parameter1: berkeley.com.sleepycat.je.tree.LN;

        lnKey := @parameter2: byte[];

        return;
    }

    public void noteMemoryExceeded()
    {
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor this;
        berkeley.com.sleepycat.je.PreloadStats $r0;

        this := @this: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor;

        $r0 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.PreloadStats: void incMemoryExceeded()>();

        return;
    }

    public void processLSN(long, berkeley.com.sleepycat.je.log.LogEntryType, berkeley.com.sleepycat.je.tree.Node, byte[], int)
    {
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor this;
        long childLsn, $l0, $l1, usedBytes#10, $l3, $l4, $l6, $l7, $l8;
        berkeley.com.sleepycat.je.log.LogEntryType childType, $r12, $r13, $r16, $r18, $r21, $r23;
        berkeley.com.sleepycat.je.tree.Node node;
        byte[] ignore2;
        int ignore3, i#71, $i10;
        berkeley.com.sleepycat.je.tree.BIN bin;
        byte $b2, $b5, $b9;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException $r0, $r5, $r10;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1, $r3;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        berkeley.com.sleepycat.je.evictor.OffHeapCache $r4;
        berkeley.com.sleepycat.je.ProgressListener $r6, $r8;
        berkeley.com.sleepycat.je.PreloadConfig$Phases $r9;
        berkeley.com.sleepycat.je.PreloadStats $r11, $r14, $r15, $r17, $r19, $r20, $r22, $r24;

        this := @this: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor;

        childLsn := @parameter0: long;

        childType := @parameter1: berkeley.com.sleepycat.je.log.LogEntryType;

        node := @parameter2: berkeley.com.sleepycat.je.tree.Node;

        ignore2 := @parameter3: byte[];

        ignore3 := @parameter4: int;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long targetTime>;

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label01;

        $r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException access$100()>();

        throw $r0;

     label01:
        $r1 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r2 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget access$200(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>($r1);

        usedBytes#10 = virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.MemoryBudget: long getCacheMemoryUsage()>();

        $z0 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: boolean useOffHeapCache>;

        if $z0 == 0 goto label02;

        $r3 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r4 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.evictor.OffHeapCache access$300(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)>($r3);

        $l3 = 0L;

        usedBytes#10 = usedBytes#10 + 0L;

     label02:
        $l4 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long maxBytes>;

        $b5 = usedBytes#10 cmp $l4;

        if $b5 <= 0 goto label03;

        $r5 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException access$400()>();

        throw $r5;

     label03:
        $r6 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.ProgressListener progressListener>;

        if $r6 == null goto label04;

        $l6 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long progressCounter>;

        $l7 = $l6 + 1L;

        this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long progressCounter> = $l7;

        $r8 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.ProgressListener progressListener>;

        $r9 = <berkeley.com.sleepycat.je.PreloadConfig$Phases: berkeley.com.sleepycat.je.PreloadConfig$Phases PRELOAD>;

        $l8 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: long progressCounter>;

        $z1 = interfaceinvoke $r8.<berkeley.com.sleepycat.je.ProgressListener: boolean progress(java.lang.Enum,long,long)>($r9, $l8, -1L);

        if $z1 != 0 goto label04;

        $r10 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException access$500()>();

        throw $r10;

     label04:
        $b9 = childLsn cmp -1L;

        if $b9 != 0 goto label05;

        $r11 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r11.<berkeley.com.sleepycat.je.PreloadStats: void incEmbeddedLNs()>();

        goto label15;

     label05:
        $r12 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_DUPCOUNTLN_TRANSACTIONAL>;

        $z2 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label06;

        $r13 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_DUPCOUNTLN>;

        $z3 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label07;

     label06:
        $r14 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r14.<berkeley.com.sleepycat.je.PreloadStats: void incDupCountLNsLoaded()>();

        goto label15;

     label07:
        $z4 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isLNType()>();

        if $z4 == 0 goto label08;

        $z5 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: boolean countLNs>;

        if $z5 == 0 goto label15;

        $r15 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r15.<berkeley.com.sleepycat.je.PreloadStats: void incLNsLoaded()>();

        goto label15;

     label08:
        $r16 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_DBIN>;

        $z6 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r16);

        if $z6 == 0 goto label09;

        $r17 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r17.<berkeley.com.sleepycat.je.PreloadStats: void incDBINsLoaded()>();

        goto label15;

     label09:
        $r18 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_BIN>;

        $z7 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r18);

        if $z7 == 0 goto label13;

        $r19 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r19.<berkeley.com.sleepycat.je.PreloadStats: void incBINsLoaded()>();

        $z8 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: boolean countLNs>;

        if $z8 != 0 goto label15;

        bin = (berkeley.com.sleepycat.je.tree.BIN) node;

        i#71 = 0;

     label10:
        $i10 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getNEntries()>();

        if i#71 >= $i10 goto label12;

        $z9 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(i#71);

        if $z9 == 0 goto label11;

        $r20 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r20.<berkeley.com.sleepycat.je.PreloadStats: void incEmbeddedLNs()>();

     label11:
        i#71 = i#71 + 1;

        goto label10;

     label12:
        goto label15;

     label13:
        $r21 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_DIN>;

        $z10 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r21);

        if $z10 == 0 goto label14;

        $r22 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r22.<berkeley.com.sleepycat.je.PreloadStats: void incDINsLoaded()>();

        goto label15;

     label14:
        $r23 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_IN>;

        $z11 = virtualinvoke childType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r23);

        if $z11 == 0 goto label15;

        $r24 = this.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: berkeley.com.sleepycat.je.PreloadStats stats>;

        virtualinvoke $r24.<berkeley.com.sleepycat.je.PreloadStats: void incINsLoaded()>();

     label15:
        return;
    }


