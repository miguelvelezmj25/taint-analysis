digraph getDensityBuckets {
"densities := @parameter0: java.util.List {18623456}" -> "srcDimension := @parameter1: java.awt.Dimension {611717852}";
"srcDimension := @parameter1: java.awt.Dimension {611717852}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1367843578}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1367843578}" -> "scale := @parameter3: float {1084776805}";
"scale := @parameter3: float {1084776805}" -> "isNinePatch := @parameter4: boolean {998744566}";
"isNinePatch := @parameter4: boolean {998744566}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {2006143421}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {2006143421}" -> "if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {45633847}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {45633847}" -> "$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {1086211353}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {45633847}" -> "$b0 = scale cmpl 0.0F {1334954508}";
"$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {1086211353}" -> "$d1 = $d0 - 2.0 {166968021}";
"$d1 = $d0 - 2.0 {166968021}" -> "$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {1062614395}";
"$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {1062614395}" -> "$d3 = $d2 - 2.0 {794527684}";
"$d3 = $d2 - 2.0 {794527684}" -> "virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {556303033}";
"virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {556303033}" -> "$b0 = scale cmpl 0.0F {1334954508}";
"$b0 = scale cmpl 0.0F {1334954508}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {53942676}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {53942676}" -> "if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {717857805}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {717857805}" -> "$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {1016228260}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {717857805}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1202885853}";
"$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {1016228260}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1935912956}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1935912956}" -> "if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {2098337168}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {2098337168}" -> "$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {1437644408}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {2098337168}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1202885853}";
"$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {1437644408}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1384585964}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1384585964}" -> "if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {2051025443}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {2051025443}" -> "$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {1812715736}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {2051025443}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1202885853}";
"$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {1812715736}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {489252313}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {489252313}" -> "if $z1 == 0 goto return null {1020833879}";
"if $z1 == 0 goto return null {1020833879}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1202885853}";
"if $z1 == 0 goto return null {1020833879}" -> "return null {1889980941}";
"$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1202885853}" -> "$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {2057490144}";
"$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {2057490144}" -> "$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {50435051}";
"$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {50435051}" -> "$i2 = $r1[$i1] {1355213610}";
"$i2 = $r1[$i1] {1355213610}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {434180402}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {434180402}" -> "tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1881864147}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1881864147}" -> "$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1449661836}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1881864147}" -> "$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {751947972}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1881864147}" -> "$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {891412860}";
"$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1449661836}" -> "return $r3 {1982315056}";
"$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {751947972}" -> "return $r4 {994371675}";
"$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {891412860}" -> "return $r5 {1040100973}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {489252313}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1384585964}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {434180402}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {53942676}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1935912956}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {2006143421}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getDensityBucketsWithFactorScale {
"densities := @parameter0: java.util.List {285360333}" -> "srcDimension := @parameter1: java.awt.Dimension {476213679}";
"srcDimension := @parameter1: java.awt.Dimension {476213679}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1610994878}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1610994878}" -> "scale := @parameter3: float {1269180275}";
"scale := @parameter3: float {1269180275}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {65077547}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {65077547}" -> "$d0 = (double) $i0 {2030445467}";
"$d0 = (double) $i0 {2030445467}" -> "$d1 = (double) scale {1210735262}";
"$d1 = (double) scale {1210735262}" -> "baseWidth = $d0 / $d1 {745043346}";
"baseWidth = $d0 / $d1 {745043346}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {1940301675}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {1940301675}" -> "$d2 = (double) $i1 {1556270442}";
"$d2 = (double) $i1 {1556270442}" -> "$d3 = (double) scale {1679012031}";
"$d3 = (double) scale {1679012031}" -> "baseHeight = $d2 / $d3 {335739208}";
"baseHeight = $d2 / $d3 {335739208}" -> "$r0 = new java.util.TreeMap {1835873599}";
"$r0 = new java.util.TreeMap {1835873599}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1024682336}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1024682336}" -> "bucketMap = $r0 {349647452}";
"bucketMap = $r0 {349647452}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {1787518291}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {1787518291}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {345938341}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {345938341}" -> "predicate = $r1 {2110611868}";
"predicate = $r1 {2110611868}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {671293113}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {671293113}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {2053739435}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {2053739435}" -> "consumer = $r2 {1941794433}";
"consumer = $r2 {1941794433}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {439891313}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {439891313}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {997888044}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {997888044}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {474503326}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {474503326}" -> "return bucketMap {156295670}";
}

digraph getDensityBucketsHeightDpScale {
"densities := @parameter0: java.util.List {2116267044}" -> "srcDimension := @parameter1: java.awt.Dimension {167559396}";
"srcDimension := @parameter1: java.awt.Dimension {167559396}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {901398621}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {901398621}" -> "scale := @parameter3: float {1075228186}";
"scale := @parameter3: float {1075228186}" -> "$i0 = srcDimension.<java.awt.Dimension: int height> {491285902}";
"$i0 = srcDimension.<java.awt.Dimension: int height> {491285902}" -> "$f0 = (float) $i0 {2102949733}";
"$f0 = (float) $i0 {2102949733}" -> "scaleFactor = scale / $f0 {1309209859}";
"scaleFactor = scale / $f0 {1309209859}" -> "$i1 = srcDimension.<java.awt.Dimension: int width> {1689273768}";
"$i1 = srcDimension.<java.awt.Dimension: int width> {1689273768}" -> "$f1 = (float) $i1 {1521966490}";
"$f1 = (float) $i1 {1521966490}" -> "$f2 = scaleFactor * $f1 {1674021956}";
"$f2 = scaleFactor * $f1 {1674021956}" -> "$d0 = (double) $f2 {428150803}";
"$d0 = (double) $f2 {428150803}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {2147388302}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {2147388302}" -> "baseWidth = (int) $d1 {1904991738}";
"baseWidth = (int) $d1 {1904991738}" -> "$d2 = (double) scale {1971825816}";
"$d2 = (double) scale {1971825816}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1523370975}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1523370975}" -> "baseHeight = (int) $d3 {989218264}";
"baseHeight = (int) $d3 {989218264}" -> "$r0 = new java.util.TreeMap {106492778}";
"$r0 = new java.util.TreeMap {106492778}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {10457146}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {10457146}" -> "bucketMap = $r0 {1238215860}";
"bucketMap = $r0 {1238215860}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {961126594}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {961126594}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {954757754}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {954757754}" -> "predicate = $r1 {1312267197}";
"predicate = $r1 {1312267197}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {1706858725}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {1706858725}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1161505802}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1161505802}" -> "consumer = $r2 {1609434537}";
"consumer = $r2 {1609434537}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1334401835}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1334401835}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1916854496}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1916854496}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1472863777}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1472863777}" -> "return bucketMap {474468906}";
}

digraph getDensityBucketsWithDpScale {
"densities := @parameter0: java.util.List {877560893}" -> "srcDimension := @parameter1: java.awt.Dimension {1918291706}";
"srcDimension := @parameter1: java.awt.Dimension {1918291706}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1705205339}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1705205339}" -> "scale := @parameter3: float {1010221241}";
"scale := @parameter3: float {1010221241}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {375578606}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {375578606}" -> "$f0 = (float) $i0 {1626576163}";
"$f0 = (float) $i0 {1626576163}" -> "scaleFactor = scale / $f0 {598357984}";
"scaleFactor = scale / $f0 {598357984}" -> "$d0 = (double) scale {2137559290}";
"$d0 = (double) scale {2137559290}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {219131328}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {219131328}" -> "baseWidth = (int) $d1 {1053875766}";
"baseWidth = (int) $d1 {1053875766}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {1917669634}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {1917669634}" -> "$f1 = (float) $i1 {2140535305}";
"$f1 = (float) $i1 {2140535305}" -> "$f2 = scaleFactor * $f1 {207066495}";
"$f2 = scaleFactor * $f1 {207066495}" -> "$d2 = (double) $f2 {218660288}";
"$d2 = (double) $f2 {218660288}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {366344226}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {366344226}" -> "baseHeight = (int) $d3 {992215445}";
"baseHeight = (int) $d3 {992215445}" -> "$r0 = new java.util.TreeMap {25881147}";
"$r0 = new java.util.TreeMap {25881147}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1432300133}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1432300133}" -> "bucketMap = $r0 {409030950}";
"bucketMap = $r0 {409030950}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate {1782883104}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate {1782883104}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {366505324}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {366505324}" -> "predicate = $r1 {1330871540}";
"predicate = $r1 {1330871540}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer {460854081}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer {460854081}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {809768001}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {809768001}" -> "consumer = $r2 {1843233932}";
"consumer = $r2 {1843233932}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {222330054}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {222330054}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {854769498}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {854769498}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {367833638}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {367833638}" -> "return bucketMap {1418546469}";
}


