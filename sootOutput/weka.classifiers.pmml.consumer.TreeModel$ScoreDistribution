    protected void <init>(org.w3c.dom.Element, weka.core.pmml.MiningSchema, double) throws java.lang.Exception
    {
        weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution this;
        org.w3c.dom.Element scoreE;
        weka.core.pmml.MiningSchema miningSchema;
        double baseCount, $d0, $d1, $d2, $d3, $d4;
        weka.core.Attribute classAtt;
        java.lang.String recordC, confidence, $r0, $r2, $r6, $r9, $r10;
        weka.core.Instances $r1;
        int $i0, $i1, $i2;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        boolean $z0;
        byte $b3;

        this := @this: weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution;

        scoreE := @parameter0: org.w3c.dom.Element;

        miningSchema := @parameter1: weka.core.pmml.MiningSchema;

        baseCount := @parameter2: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: int m_classLabelIndex> = -1;

        $d0 = staticinvoke <weka.core.Utils: double missingValue()>();

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: double m_confidence> = $d0;

        $r0 = interfaceinvoke scoreE.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("value");

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: java.lang.String m_classLabel> = $r0;

        $r1 = virtualinvoke miningSchema.<weka.core.pmml.MiningSchema: weka.core.Instances getFieldsAsInstances()>();

        classAtt = virtualinvoke $r1.<weka.core.Instances: weka.core.Attribute classAttribute()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(classAtt);

        if classAtt == null goto label1;

        $r2 = this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: java.lang.String m_classLabel>;

        $i0 = virtualinvoke classAtt.<weka.core.Attribute: int indexOfValue(java.lang.String)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 >= 0 goto label2;

     label1:
        $r3 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ScoreDistribution] class attribute not set or class value ");

        $r6 = this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: java.lang.String m_classLabel>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found!");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        $r10 = this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: java.lang.String m_classLabel>;

        $i1 = virtualinvoke classAtt.<weka.core.Attribute: int indexOfValue(java.lang.String)>($r10);

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: int m_classLabelIndex> = $i1;

        recordC = interfaceinvoke scoreE.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("recordCount");

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(recordC);

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: double m_recordCount> = $d1;

        confidence = interfaceinvoke scoreE.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("confidence");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(confidence);

        if confidence == null goto label3;

        $i2 = virtualinvoke confidence.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 <= 0 goto label3;

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(confidence);

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: double m_confidence> = $d2;

        goto label4;

     label3:
        $z0 = staticinvoke <weka.core.Utils: boolean isMissingValue(double)>(baseCount);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        $b3 = baseCount cmpl 0.0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 <= 0 goto label4;

        $d3 = this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: double m_recordCount>;

        $d4 = $d3 / baseCount;

        this.<weka.classifiers.pmml.consumer.TreeModel$ScoreDistribution: double m_confidence> = $d4;

     label4:
        return;
    }


