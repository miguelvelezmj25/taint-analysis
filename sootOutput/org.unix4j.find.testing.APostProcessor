    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.unix4j.find.testing.APostProcessor: java.util.Map lockMap> = $r0;

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>(1);

        <org.unix4j.find.testing.APostProcessor: java.util.concurrent.locks.ReentrantLock administrationLock> = $r1;

        return;
    }

    public void <init>()
    {
        org.unix4j.find.testing.APostProcessor this;

        this := @this: org.unix4j.find.testing.APostProcessor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


