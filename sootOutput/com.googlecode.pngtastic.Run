    public static void main(java.lang.String[])
    {
        java.lang.String[] args, files#42, files#45;
        java.util.HashMap options, $r0;
        java.lang.String arg, $r1, logLevel#91;
        int next, last#4, i#6, $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Object[] $r4;
        java.io.PrintStream $r5, $r6;
        java.lang.Double distThreshold#68, freqThreshold#74;
        java.lang.Integer minAlpha#80, timeout#86;
        com.googlecode.pngtastic.PngtasticColorCounter $r7;
        double $d0, $d1;
        long $l6;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        options = $r0;

        last#4 = 0;

        i#6 = 0;

     label01:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#6 >= $i0 goto label04;

        arg = args[i#6];

        $z0 = virtualinvoke arg.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        next = i#6 + 1;

        $i1 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(next);

        if next >= $i1 goto label02;

        $r1 = args[next];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, $r1);

        last#4 = next + 1;

        goto label03;

     label02:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, null);

        last#4 = next;

     label03:
        i#6 = i#6 + 1;

        goto label01;

     label04:
        $i2 = lengthof args;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#4, $i2);

        files#42 = (java.lang.String[]) $r4;

        files#45 = newarray (java.lang.String)[1];

        files#45[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/instrumented/pngtastic/images/optimizer/1px.png";

        $i3 = lengthof files#45;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label05;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("java -jar pngtastic-x.x.jar com.googlecode.pngtastic.PngtasticColorCounter [options] file1 [file2 ..]\nOptions:\n  --distThreshold    the distance below which two colors are considered similar (0.0 to 1.0)\n  --freqThreshold    the percentage a color must be represented in the overall image (0.0 to 1.0)\n  --minAlpha         the minimum alpha channel value a pixel must have\n  --timeout          the number of milliseconds after which color counting will be aborted\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label05:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFreqThreshold(boolean)>(1);

        <com.googlecode.pngtastic.Run: boolean FREQTHRESHOLD> = $z1;

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDistThreshold(boolean)>(1);

        <com.googlecode.pngtastic.Run: boolean DISTTHRESHOLD> = $z2;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMinAlpha(boolean)>(1);

        <com.googlecode.pngtastic.Run: boolean MINALPHA> = $z3;

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTimeout(boolean)>(1);

        <com.googlecode.pngtastic.Run: boolean TIMEOUT> = $z4;

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLogLevel(boolean)>(1);

        <com.googlecode.pngtastic.Run: boolean LOGLEVEL> = $z5;

        $z6 = <com.googlecode.pngtastic.Run: boolean DISTTHRESHOLD>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label06;

        distThreshold#68 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label07;

     label06:
        distThreshold#68 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

     label07:
        $z7 = <com.googlecode.pngtastic.Run: boolean FREQTHRESHOLD>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label08;

        freqThreshold#74 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label09;

     label08:
        freqThreshold#74 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

     label09:
        $z8 = <com.googlecode.pngtastic.Run: boolean MINALPHA>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label10;

        minAlpha#80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        goto label11;

     label10:
        minAlpha#80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

     label11:
        $z9 = <com.googlecode.pngtastic.Run: boolean TIMEOUT>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label12;

        timeout#86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label13;

     label12:
        timeout#86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1000000);

     label13:
        $z10 = <com.googlecode.pngtastic.Run: boolean LOGLEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label14;

        logLevel#91 = "debug";

        goto label15;

     label14:
        logLevel#91 = "none";

     label15:
        $r7 = new com.googlecode.pngtastic.PngtasticColorCounter;

        $d0 = virtualinvoke distThreshold#68.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke freqThreshold#74.<java.lang.Double: double doubleValue()>();

        $i4 = virtualinvoke minAlpha#80.<java.lang.Integer: int intValue()>();

        $i5 = virtualinvoke timeout#86.<java.lang.Integer: int intValue()>();

        $l6 = (long) $i5;

        specialinvoke $r7.<com.googlecode.pngtastic.PngtasticColorCounter: void <init>(java.lang.String[],java.lang.String,double,double,int,long)>(files#45, logLevel#91, $d0, $d1, $i4, $l6);

        return;
    }


