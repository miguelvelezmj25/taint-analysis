    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <berkeley.com.sleepycat.util.FastOutputStream: byte[] ZERO_LENGTH_BYTE_ARRAY> = $r0;

        return;
    }

    public final void writeFast(int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int b, $i0, $i1, $i2, $i3, $i4;
        byte[] $r0, $r1;
        byte $b5;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        b := @parameter0: int;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        $i1 = $i0 + 1;

        $r0 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i2 = lengthof $r0;

        if $i1 <= $i2 goto label1;

        specialinvoke this.<berkeley.com.sleepycat.util.FastOutputStream: void bump(int)>(1);

     label1:
        $r1 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i3 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        $i4 = $i3 + 1;

        this.<berkeley.com.sleepycat.util.FastOutputStream: int len> = $i4;

        $b5 = (byte) b;

        $r1[$i3] = $b5;

        return;
    }

    private void bump(int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int needed, bump, $i0, $i1, $i2, $i3, $i4, $i5;
        byte[] toBuf, $r0, $r1, $r2;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        needed := @parameter0: int;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int bumpLen>;

        if $i0 <= 0 goto label1;

        $i1 = this.<berkeley.com.sleepycat.util.FastOutputStream: int bumpLen>;

        goto label2;

     label1:
        $r0 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i1 = lengthof $r0;

     label2:
        bump = $i1;

        $r1 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i2 = lengthof $r1;

        $i3 = $i2 + needed;

        $i4 = $i3 + bump;

        toBuf = newarray (byte)[$i4];

        $r2 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i5 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, toBuf, 0, $i5);

        this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf> = toBuf;

        return;
    }

    public void <init>(byte[])
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        byte[] buffer;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        buffer := @parameter0: byte[];

        specialinvoke this.<java.io.OutputStream: void <init>()>();

        this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf> = buffer;

        this.<berkeley.com.sleepycat.util.FastOutputStream: int bumpLen> = 0;

        return;
    }

    public byte[] getBufferBytes()
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        byte[] $r0;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        $r0 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        return $r0;
    }

    public int getBufferOffset()
    {
        berkeley.com.sleepycat.util.FastOutputStream this;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        return 0;
    }

    public int getBufferLength()
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int $i0;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        return $i0;
    }

    public void makeSpace(int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int sizeNeeded, needed, $i0, $i1, $i2;
        byte[] $r0;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        sizeNeeded := @parameter0: int;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        $i1 = $i0 + sizeNeeded;

        $r0 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i2 = lengthof $r0;

        needed = $i1 - $i2;

        if needed <= 0 goto label1;

        specialinvoke this.<berkeley.com.sleepycat.util.FastOutputStream: void bump(int)>(needed);

     label1:
        return;
    }

    public void addSize(int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int sizeAdded, $i0, $i1;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        sizeAdded := @parameter0: int;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        $i1 = $i0 + sizeAdded;

        this.<berkeley.com.sleepycat.util.FastOutputStream: int len> = $i1;

        return;
    }

    public void <init>()
    {
        berkeley.com.sleepycat.util.FastOutputStream this;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        specialinvoke this.<java.io.OutputStream: void <init>()>();

        specialinvoke this.<berkeley.com.sleepycat.util.FastOutputStream: void initBuffer(int,int)>(100, 0);

        return;
    }

    private void initBuffer(int, int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int bufferSize, bumplength;
        byte[] $r0;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        bufferSize := @parameter0: int;

        bumplength := @parameter1: int;

        $r0 = newarray (byte)[100];

        this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf> = $r0;

        this.<berkeley.com.sleepycat.util.FastOutputStream: int bumpLen> = 0;

        return;
    }

    public final void writeFast(byte[], int, int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        byte[] fromBuf, $r0, $r1;
        int offset, length, needed, $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        fromBuf := @parameter0: byte[];

        offset := @parameter1: int;

        length := @parameter2: int;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        $i1 = $i0 + length;

        $r0 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i2 = lengthof $r0;

        needed = $i1 - $i2;

        if needed <= 0 goto label1;

        specialinvoke this.<berkeley.com.sleepycat.util.FastOutputStream: void bump(int)>(needed);

     label1:
        $r1 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i3 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(fromBuf, 0, $r1, $i3, length);

        $i4 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        $i5 = $i4 + length;

        this.<berkeley.com.sleepycat.util.FastOutputStream: int len> = $i5;

        return;
    }

    public void write(int)
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int b;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        b := @parameter0: int;

        virtualinvoke this.<berkeley.com.sleepycat.util.FastOutputStream: void writeFast(int)>(b);

        return;
    }

    public byte[] toByteArray()
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        byte[] toBuf, $r0, $r1;
        int $i0, $i1, $i2;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        if $i0 != 0 goto label1;

        $r0 = <berkeley.com.sleepycat.util.FastOutputStream: byte[] ZERO_LENGTH_BYTE_ARRAY>;

        return $r0;

     label1:
        $i1 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        toBuf = newarray (byte)[$i1];

        $r1 = this.<berkeley.com.sleepycat.util.FastOutputStream: byte[] buf>;

        $i2 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, toBuf, 0, $i2);

        return toBuf;
    }

    public int size()
    {
        berkeley.com.sleepycat.util.FastOutputStream this;
        int $i0;

        this := @this: berkeley.com.sleepycat.util.FastOutputStream;

        $i0 = this.<berkeley.com.sleepycat.util.FastOutputStream: int len>;

        return $i0;
    }


