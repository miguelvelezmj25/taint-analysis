    void <init>(int, int, kanzi.transform.DivSufSort$1)
    {
        kanzi.transform.DivSufSort$TRBudget this;
        int x0, x1;
        kanzi.transform.DivSufSort$1 x2;

        this := @this: kanzi.transform.DivSufSort$TRBudget;

        x0 := @parameter0: int;

        x1 := @parameter1: int;

        x2 := @parameter2: kanzi.transform.DivSufSort$1;

        specialinvoke this.<kanzi.transform.DivSufSort$TRBudget: void <init>(int,int)>(x0, x1);

        return;
    }

    static boolean access$200(kanzi.transform.DivSufSort$TRBudget, int)
    {
        kanzi.transform.DivSufSort$TRBudget x0;
        int x1;
        boolean $z0;

        x0 := @parameter0: kanzi.transform.DivSufSort$TRBudget;

        x1 := @parameter1: int;

        $z0 = specialinvoke x0.<kanzi.transform.DivSufSort$TRBudget: boolean check(int)>(x1);

        return $z0;
    }

    private void <init>(int, int)
    {
        kanzi.transform.DivSufSort$TRBudget this;
        int chance, incval;

        this := @this: kanzi.transform.DivSufSort$TRBudget;

        chance := @parameter0: int;

        incval := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<kanzi.transform.DivSufSort$TRBudget: int chance> = chance;

        this.<kanzi.transform.DivSufSort$TRBudget: int remain> = incval;

        this.<kanzi.transform.DivSufSort$TRBudget: int incVal> = incval;

        return;
    }

    private boolean check(int)
    {
        kanzi.transform.DivSufSort$TRBudget this;
        int size, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        this := @this: kanzi.transform.DivSufSort$TRBudget;

        size := @parameter0: int;

        $i0 = this.<kanzi.transform.DivSufSort$TRBudget: int remain>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(size);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if size > $i0 goto label1;

        $i1 = this.<kanzi.transform.DivSufSort$TRBudget: int remain>;

        $i2 = $i1 - size;

        this.<kanzi.transform.DivSufSort$TRBudget: int remain> = $i2;

        return 1;

     label1:
        $i3 = this.<kanzi.transform.DivSufSort$TRBudget: int chance>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label2;

        $i4 = this.<kanzi.transform.DivSufSort$TRBudget: int count>;

        $i5 = $i4 + size;

        this.<kanzi.transform.DivSufSort$TRBudget: int count> = $i5;

        return 0;

     label2:
        $i6 = this.<kanzi.transform.DivSufSort$TRBudget: int remain>;

        $i7 = this.<kanzi.transform.DivSufSort$TRBudget: int incVal>;

        $i8 = $i7 - size;

        $i9 = $i6 + $i8;

        this.<kanzi.transform.DivSufSort$TRBudget: int remain> = $i9;

        $i10 = this.<kanzi.transform.DivSufSort$TRBudget: int chance>;

        $i11 = $i10 - 1;

        this.<kanzi.transform.DivSufSort$TRBudget: int chance> = $i11;

        return 1;
    }


