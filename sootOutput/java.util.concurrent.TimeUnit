    static void <clinit>()
    {
        java.util.concurrent.TimeUnit$1 $r0;
        java.util.concurrent.TimeUnit$2 $r1;
        java.util.concurrent.TimeUnit$3 $r2;
        java.util.concurrent.TimeUnit$4 $r3;
        java.util.concurrent.TimeUnit$5 $r4;
        java.util.concurrent.TimeUnit$6 $r5;
        java.util.concurrent.TimeUnit$7 $r6;
        java.util.concurrent.TimeUnit[] $r7;
        java.util.concurrent.TimeUnit $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = new java.util.concurrent.TimeUnit$1;

        specialinvoke $r0.<java.util.concurrent.TimeUnit$1: void <init>(java.lang.String,int)>("NANOSECONDS", 0);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> = $r0;

        $r1 = new java.util.concurrent.TimeUnit$2;

        specialinvoke $r1.<java.util.concurrent.TimeUnit$2: void <init>(java.lang.String,int)>("MICROSECONDS", 1);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS> = $r1;

        $r2 = new java.util.concurrent.TimeUnit$3;

        specialinvoke $r2.<java.util.concurrent.TimeUnit$3: void <init>(java.lang.String,int)>("MILLISECONDS", 2);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> = $r2;

        $r3 = new java.util.concurrent.TimeUnit$4;

        specialinvoke $r3.<java.util.concurrent.TimeUnit$4: void <init>(java.lang.String,int)>("SECONDS", 3);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> = $r3;

        $r4 = new java.util.concurrent.TimeUnit$5;

        specialinvoke $r4.<java.util.concurrent.TimeUnit$5: void <init>(java.lang.String,int)>("MINUTES", 4);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> = $r4;

        $r5 = new java.util.concurrent.TimeUnit$6;

        specialinvoke $r5.<java.util.concurrent.TimeUnit$6: void <init>(java.lang.String,int)>("HOURS", 5);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS> = $r5;

        $r6 = new java.util.concurrent.TimeUnit$7;

        specialinvoke $r6.<java.util.concurrent.TimeUnit$7: void <init>(java.lang.String,int)>("DAYS", 6);

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS> = $r6;

        $r7 = newarray (java.util.concurrent.TimeUnit)[7];

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r7[0] = $r8;

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;

        $r7[1] = $r9;

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r7[2] = $r10;

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r7[3] = $r11;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $r7[4] = $r12;

        $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $r7[5] = $r13;

        $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;

        $r7[6] = $r14;

        <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] $VALUES> = $r7;

        return;
    }

    void <init>(java.lang.String, int, java.util.concurrent.TimeUnit$1)
    {
        java.util.concurrent.TimeUnit l0;
        java.lang.String l1;
        int l2;
        java.util.concurrent.TimeUnit$1 l3;

        l0 := @this: java.util.concurrent.TimeUnit;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        l3 := @parameter2: java.util.concurrent.TimeUnit$1;

        specialinvoke l0.<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    private void <init>(java.lang.String, int)
    {
        java.util.concurrent.TimeUnit l0;
        java.lang.String l1;
        int l2;

        l0 := @this: java.util.concurrent.TimeUnit;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke l0.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    static long x(long, long, long)
    {
        long l0, l2, l4, $l1, $l3;
        byte $b0, $b2;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        l4 := @parameter2: long;

        $b0 = l0 cmp l4;

        if $b0 <= 0 goto label1;

        return 9223372036854775807L;

     label1:
        $l1 = neg l4;

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label2;

        return -9223372036854775808L;

     label2:
        $l3 = l0 * l2;

        return $l3;
    }


