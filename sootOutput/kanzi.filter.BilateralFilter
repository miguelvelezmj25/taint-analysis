    public boolean apply(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.filter.BilateralFilter this;
        kanzi.SliceIntArray input, output;
        int[] src, dst, intens, k;
        int r, w, h, mult, startY, endY, val1, startX, endX, val2, val3, r2, g2, b2, srcIdx#12, dstIdx#15, $i0, j#32, $i1, $i2, $i3, i#48, $i4, $i5, r1#61, $i6, g1#67, b1#71, $i7, $i8, $i9, $i10, $i11, $i12, offs#91, kIdx#93, y#107, x#111, ii#113, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, dist#152, $i22, $i23, weight#160, $i25, $i27, $i28, $i29, $i30, $i31, $i32, dist#186, $i33, $i34, weight#194, $i36, $i38, $i39, $i40, $i41, $i42, $i43, dist#220, $i44, $i45, weight#228, $i47, $i49, r1#256, g1#267, b1#278, $i62, $i63, $i64, $i65, $i66, $i67, $i68;
        boolean $z0, $z1;
        long sumR#95, sumG#97, sumB#99, totalWeightR#101, totalWeightG#103, totalWeightB#105, $l24, $l26, $l35, $l37, $l46, $l48, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60, $l61;

        this := @this: kanzi.filter.BilateralFilter;

        input := @parameter0: kanzi.SliceIntArray;

        output := @parameter1: kanzi.SliceIntArray;

        $z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(input);

        if $z0 == 0 goto label01;

        $z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(output);

        if $z1 != 0 goto label02;

     label01:
        return 0;

     label02:
        src = input.<kanzi.SliceIntArray: int[] array>;

        dst = output.<kanzi.SliceIntArray: int[] array>;

        srcIdx#12 = input.<kanzi.SliceIntArray: int index>;

        dstIdx#15 = output.<kanzi.SliceIntArray: int index>;

        r = this.<kanzi.filter.BilateralFilter: int radius>;

        w = this.<kanzi.filter.BilateralFilter: int width>;

        h = this.<kanzi.filter.BilateralFilter: int height>;

        intens = this.<kanzi.filter.BilateralFilter: int[] intensities>;

        k = this.<kanzi.filter.BilateralFilter: int[] kernel>;

        $i0 = r << 1;

        mult = $i0 + 1;

        j#32 = 0;

     label03:
        if j#32 >= h goto label18;

        if j#32 < r goto label04;

        $i1 = j#32 - r;

        goto label05;

     label04:
        $i1 = 0;

     label05:
        startY = $i1;

        $i2 = j#32 + r;

        if $i2 >= h goto label06;

        $i3 = j#32 + r;

        goto label07;

     label06:
        $i3 = h;

     label07:
        endY = $i3;

        i#48 = 0;

     label08:
        if i#48 >= w goto label17;

        $i4 = srcIdx#12 + i#48;

        val1 = src[$i4];

        $i5 = val1 >> 16;

        r1#61 = $i5 & 255;

        $i6 = val1 >> 8;

        g1#67 = $i6 & 255;

        b1#71 = val1 & 255;

        if i#48 < r goto label09;

        $i7 = i#48 - r;

        goto label10;

     label09:
        $i7 = 0;

     label10:
        startX = $i7;

        $i8 = i#48 + r;

        if $i8 >= w goto label11;

        $i9 = i#48 + r;

        goto label12;

     label11:
        $i9 = w;

     label12:
        endX = $i9;

        $i10 = input.<kanzi.SliceIntArray: int index>;

        $i11 = this.<kanzi.filter.BilateralFilter: int stride>;

        $i12 = startY * $i11;

        offs#91 = $i10 + $i12;

        kIdx#93 = 0;

        sumR#95 = 0L;

        sumG#97 = 0L;

        sumB#99 = 0L;

        totalWeightR#101 = 0L;

        totalWeightG#103 = 0L;

        totalWeightB#105 = 0L;

        y#107 = startY;

     label13:
        if y#107 >= endY goto label16;

        x#111 = startX;

        ii#113 = kIdx#93;

     label14:
        if x#111 >= endX goto label15;

        $i13 = offs#91 + x#111;

        val2 = src[$i13];

        val3 = k[ii#113];

        $i14 = val2 >> 16;

        r2 = $i14 & 255;

        $i15 = val2 >> 8;

        g2 = $i15 & 255;

        b2 = val2 & 255;

        $i16 = r1#61 - r2;

        $i17 = r1#61 - r2;

        $i18 = $i17 >> 31;

        $i19 = $i16 + $i18;

        $i20 = r1#61 - r2;

        $i21 = $i20 >> 31;

        dist#152 = $i19 ^ $i21;

        $i22 = intens[dist#152];

        $i23 = val3 * $i22;

        weight#160 = $i23 >> 11;

        $l24 = (long) weight#160;

        totalWeightR#101 = totalWeightR#101 + $l24;

        $i25 = weight#160 * r2;

        $l26 = (long) $i25;

        sumR#95 = sumR#95 + $l26;

        $i27 = g1#67 - g2;

        $i28 = g1#67 - g2;

        $i29 = $i28 >> 31;

        $i30 = $i27 + $i29;

        $i31 = g1#67 - g2;

        $i32 = $i31 >> 31;

        dist#186 = $i30 ^ $i32;

        $i33 = intens[dist#186];

        $i34 = val3 * $i33;

        weight#194 = $i34 >> 11;

        $l35 = (long) weight#194;

        totalWeightG#103 = totalWeightG#103 + $l35;

        $i36 = weight#194 * g2;

        $l37 = (long) $i36;

        sumG#97 = sumG#97 + $l37;

        $i38 = b1#71 - b2;

        $i39 = b1#71 - b2;

        $i40 = $i39 >> 31;

        $i41 = $i38 + $i40;

        $i42 = b1#71 - b2;

        $i43 = $i42 >> 31;

        dist#220 = $i41 ^ $i43;

        $i44 = intens[dist#220];

        $i45 = val3 * $i44;

        weight#228 = $i45 >> 11;

        $l46 = (long) weight#228;

        totalWeightB#105 = totalWeightB#105 + $l46;

        $i47 = weight#228 * b2;

        $l48 = (long) $i47;

        sumB#99 = sumB#99 + $l48;

        x#111 = x#111 + 1;

        ii#113 = ii#113 + 1;

        goto label14;

     label15:
        $i49 = this.<kanzi.filter.BilateralFilter: int stride>;

        offs#91 = offs#91 + $i49;

        kIdx#93 = kIdx#93 + mult;

        y#107 = y#107 + 1;

        goto label13;

     label16:
        $l50 = sumR#95 << 5;

        $l51 = totalWeightR#101 << 5;

        $l52 = $l51 + 1L;

        $l53 = $l50 / $l52;

        r1#256 = (int) $l53;

        $l54 = sumG#97 << 5;

        $l55 = totalWeightG#103 << 5;

        $l56 = $l55 + 1L;

        $l57 = $l54 / $l56;

        g1#267 = (int) $l57;

        $l58 = sumB#99 << 5;

        $l59 = totalWeightB#105 << 5;

        $l60 = $l59 + 1L;

        $l61 = $l58 / $l60;

        b1#278 = (int) $l61;

        $i62 = dstIdx#15 + i#48;

        $i63 = r1#256 << 16;

        $i64 = g1#267 << 8;

        $i65 = $i63 | $i64;

        $i66 = $i65 | b1#278;

        dst[$i62] = $i66;

        i#48 = i#48 + 1;

        goto label08;

     label17:
        $i67 = this.<kanzi.filter.BilateralFilter: int stride>;

        srcIdx#12 = srcIdx#12 + $i67;

        $i68 = this.<kanzi.filter.BilateralFilter: int stride>;

        dstIdx#15 = dstIdx#15 + $i68;

        j#32 = j#32 + 1;

        goto label03;

     label18:
        return 1;
    }


