    public static weka.core.pmml.Function getFunction(java.lang.String, weka.core.pmml.TransformationDictionary) throws java.lang.Exception
    {
        java.lang.String name, $r4;
        weka.core.pmml.TransformationDictionary transDict;
        weka.core.pmml.Function result#3;
        java.lang.Exception $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        name := @parameter0: java.lang.String;

        transDict := @parameter1: weka.core.pmml.TransformationDictionary;

        result#3 = staticinvoke <weka.core.pmml.Function: weka.core.pmml.Function getFunction(java.lang.String)>(name);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#3);

        if result#3 != null goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(transDict);

        if transDict == null goto label1;

        result#3 = virtualinvoke transDict.<weka.core.pmml.TransformationDictionary: weka.core.pmml.DefineFunction getFunction(java.lang.String)>(name);

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#3);

        if result#3 != null goto label2;

        $r0 = new java.lang.Exception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Function] unknown/unsupported function ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return result#3;
    }

    public static weka.core.pmml.Function getFunction(java.lang.String)
    {
        java.lang.String name#1, name#6, $r9, $r13, $r17, $r21, $r25, $r29, $r33, $r37, $r41, $r45, $r49, $r53, $r57, $r61, $r65, $r69, $r73;
        weka.core.pmml.Function result#3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        weka.core.pmml.BuiltInArithmetic $r0, $r2, $r4, $r6;
        weka.core.pmml.BuiltInArithmetic$Operator $r1, $r3, $r5, $r7;
        weka.core.pmml.BuiltInMath$MathFunc $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28, $r31, $r32, $r35, $r36, $r39, $r40, $r43, $r44, $r47, $r48, $r51, $r52, $r55, $r56, $r59, $r60, $r63;
        weka.core.pmml.BuiltInMath $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42, $r46, $r50, $r54, $r58, $r62;
        weka.core.pmml.BuiltInString$StringFunc $r64, $r67, $r68, $r71, $r72, $r75;
        weka.core.pmml.BuiltInString $r66, $r70, $r74;

        name#1 := @parameter0: java.lang.String;

        result#3 = null;

        name#6 = virtualinvoke name#1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>("+");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        $r0 = new weka.core.pmml.BuiltInArithmetic;

        $r1 = <weka.core.pmml.BuiltInArithmetic$Operator: weka.core.pmml.BuiltInArithmetic$Operator ADDITION>;

        specialinvoke $r0.<weka.core.pmml.BuiltInArithmetic: void <init>(weka.core.pmml.BuiltInArithmetic$Operator)>($r1);

        result#3 = $r0;

        goto label21;

     label01:
        $z1 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>("-");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label02;

        $r2 = new weka.core.pmml.BuiltInArithmetic;

        $r3 = <weka.core.pmml.BuiltInArithmetic$Operator: weka.core.pmml.BuiltInArithmetic$Operator SUBTRACTION>;

        specialinvoke $r2.<weka.core.pmml.BuiltInArithmetic: void <init>(weka.core.pmml.BuiltInArithmetic$Operator)>($r3);

        result#3 = $r2;

        goto label21;

     label02:
        $z2 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>("*");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label03;

        $r4 = new weka.core.pmml.BuiltInArithmetic;

        $r5 = <weka.core.pmml.BuiltInArithmetic$Operator: weka.core.pmml.BuiltInArithmetic$Operator MULTIPLICATION>;

        specialinvoke $r4.<weka.core.pmml.BuiltInArithmetic: void <init>(weka.core.pmml.BuiltInArithmetic$Operator)>($r5);

        result#3 = $r4;

        goto label21;

     label03:
        $z3 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>("/");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label04;

        $r6 = new weka.core.pmml.BuiltInArithmetic;

        $r7 = <weka.core.pmml.BuiltInArithmetic$Operator: weka.core.pmml.BuiltInArithmetic$Operator DIVISION>;

        specialinvoke $r6.<weka.core.pmml.BuiltInArithmetic: void <init>(weka.core.pmml.BuiltInArithmetic$Operator)>($r7);

        result#3 = $r6;

        goto label21;

     label04:
        $r8 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc MIN>;

        $r9 = virtualinvoke $r8.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z4 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label05;

        $r10 = new weka.core.pmml.BuiltInMath;

        $r11 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc MIN>;

        specialinvoke $r10.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r11);

        result#3 = $r10;

        goto label21;

     label05:
        $r12 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc MAX>;

        $r13 = virtualinvoke $r12.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z5 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label06;

        $r14 = new weka.core.pmml.BuiltInMath;

        $r15 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc MAX>;

        specialinvoke $r14.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r15);

        result#3 = $r14;

        goto label21;

     label06:
        $r16 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc SUM>;

        $r17 = virtualinvoke $r16.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z6 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label07;

        $r18 = new weka.core.pmml.BuiltInMath;

        $r19 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc SUM>;

        specialinvoke $r18.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r19);

        result#3 = $r18;

        goto label21;

     label07:
        $r20 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc AVG>;

        $r21 = virtualinvoke $r20.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z7 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label08;

        $r22 = new weka.core.pmml.BuiltInMath;

        $r23 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc AVG>;

        specialinvoke $r22.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r23);

        result#3 = $r22;

        goto label21;

     label08:
        $r24 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc LOG10>;

        $r25 = virtualinvoke $r24.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z8 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label09;

        $r26 = new weka.core.pmml.BuiltInMath;

        $r27 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc LOG10>;

        specialinvoke $r26.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r27);

        result#3 = $r26;

        goto label21;

     label09:
        $r28 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc LN>;

        $r29 = virtualinvoke $r28.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z9 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label10;

        $r30 = new weka.core.pmml.BuiltInMath;

        $r31 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc LN>;

        specialinvoke $r30.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r31);

        result#3 = $r30;

        goto label21;

     label10:
        $r32 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc SQRT>;

        $r33 = virtualinvoke $r32.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z10 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label11;

        $r34 = new weka.core.pmml.BuiltInMath;

        $r35 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc SQRT>;

        specialinvoke $r34.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r35);

        result#3 = $r34;

        goto label21;

     label11:
        $r36 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc ABS>;

        $r37 = virtualinvoke $r36.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z11 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label12;

        $r38 = new weka.core.pmml.BuiltInMath;

        $r39 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc ABS>;

        specialinvoke $r38.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r39);

        result#3 = $r38;

        goto label21;

     label12:
        $r40 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc EXP>;

        $r41 = virtualinvoke $r40.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z12 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r41);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label13;

        $r42 = new weka.core.pmml.BuiltInMath;

        $r43 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc EXP>;

        specialinvoke $r42.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r43);

        result#3 = $r42;

        goto label21;

     label13:
        $r44 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc POW>;

        $r45 = virtualinvoke $r44.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z13 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 == 0 goto label14;

        $r46 = new weka.core.pmml.BuiltInMath;

        $r47 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc POW>;

        specialinvoke $r46.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r47);

        result#3 = $r46;

        goto label21;

     label14:
        $r48 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc THRESHOLD>;

        $r49 = virtualinvoke $r48.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z14 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r49);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z14);

        if $z14 == 0 goto label15;

        $r50 = new weka.core.pmml.BuiltInMath;

        $r51 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc THRESHOLD>;

        specialinvoke $r50.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r51);

        result#3 = $r50;

        goto label21;

     label15:
        $r52 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc FLOOR>;

        $r53 = virtualinvoke $r52.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z15 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        if $z15 == 0 goto label16;

        $r54 = new weka.core.pmml.BuiltInMath;

        $r55 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc FLOOR>;

        specialinvoke $r54.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r55);

        result#3 = $r54;

        goto label21;

     label16:
        $r56 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc CEIL>;

        $r57 = virtualinvoke $r56.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z16 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r57);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z16);

        if $z16 == 0 goto label17;

        $r58 = new weka.core.pmml.BuiltInMath;

        $r59 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc CEIL>;

        specialinvoke $r58.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r59);

        result#3 = $r58;

        goto label21;

     label17:
        $r60 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc ROUND>;

        $r61 = virtualinvoke $r60.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $z17 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r61);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z17);

        if $z17 == 0 goto label18;

        $r62 = new weka.core.pmml.BuiltInMath;

        $r63 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc ROUND>;

        specialinvoke $r62.<weka.core.pmml.BuiltInMath: void <init>(weka.core.pmml.BuiltInMath$MathFunc)>($r63);

        result#3 = $r62;

        goto label21;

     label18:
        $r64 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc UPPERCASE>;

        $r65 = virtualinvoke $r64.<weka.core.pmml.BuiltInString$StringFunc: java.lang.String toString()>();

        $z18 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r65);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z18);

        if $z18 == 0 goto label19;

        $r66 = new weka.core.pmml.BuiltInString;

        $r67 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc UPPERCASE>;

        specialinvoke $r66.<weka.core.pmml.BuiltInString: void <init>(weka.core.pmml.BuiltInString$StringFunc)>($r67);

        result#3 = $r66;

        goto label21;

     label19:
        $r68 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc SUBSTRING>;

        $r69 = virtualinvoke $r68.<weka.core.pmml.BuiltInString$StringFunc: java.lang.String toString()>();

        $z19 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r69);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z19);

        if $z19 == 0 goto label20;

        $r70 = new weka.core.pmml.BuiltInString;

        $r71 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc SUBSTRING>;

        specialinvoke $r70.<weka.core.pmml.BuiltInString: void <init>(weka.core.pmml.BuiltInString$StringFunc)>($r71);

        result#3 = $r70;

        goto label21;

     label20:
        $r72 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc TRIMBLANKS>;

        $r73 = virtualinvoke $r72.<weka.core.pmml.BuiltInString$StringFunc: java.lang.String toString()>();

        $z20 = virtualinvoke name#6.<java.lang.String: boolean equals(java.lang.Object)>($r73);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20);

        if $z20 == 0 goto label21;

        $r74 = new weka.core.pmml.BuiltInString;

        $r75 = <weka.core.pmml.BuiltInString$StringFunc: weka.core.pmml.BuiltInString$StringFunc TRIMBLANKS>;

        specialinvoke $r74.<weka.core.pmml.BuiltInString: void <init>(weka.core.pmml.BuiltInString$StringFunc)>($r75);

        result#3 = $r74;

     label21:
        return result#3;
    }

    public void <init>()
    {
        weka.core.pmml.Function this;

        this := @this: weka.core.pmml.Function;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.pmml.Function: java.util.ArrayList m_parameterDefs> = null;

        return;
    }


