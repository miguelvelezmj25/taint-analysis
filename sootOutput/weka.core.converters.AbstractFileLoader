    static void <clinit>()
    {
        <weka.core.converters.AbstractFileLoader: java.lang.String FILE_EXTENSION_COMPRESSED> = ".gz";

        return;
    }

    public void <init>()
    {
        weka.core.converters.AbstractFileLoader this;
        java.io.File $r0;
        java.lang.String $r1, $r2;

        this := @this: weka.core.converters.AbstractFileLoader;

        specialinvoke this.<weka.core.converters.AbstractLoader: void <init>()>();

        $r0 = new java.io.File;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        this.<weka.core.converters.AbstractFileLoader: java.lang.String m_File> = $r2;

        this.<weka.core.converters.AbstractFileLoader: weka.core.Instances m_structure> = null;

        this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile> = null;

        this.<weka.core.converters.AbstractFileLoader: boolean m_useRelativePath> = 0;

        return;
    }

    public void setSource(java.io.File) throws java.io.IOException
    {
        weka.core.converters.AbstractFileLoader this;
        java.io.File original, file#1, $r5, file#26, $r22, $r23, $r26, $r28;
        java.lang.Exception l4, ex, $r4, $r25;
        java.lang.String fnameWithCorrectSeparators, fName#13, $r6, $r8, $r10, $r12, $r24, $r27, $r29;
        java.io.IOException $r0;
        weka.core.Environment $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.util.zip.GZIPInputStream $r13;
        java.io.FileInputStream $r14, $r15;
        char $c0;
        java.lang.Class $r16, $r19;
        java.lang.ClassLoader $r17, $r20;
        java.net.URL $r18;
        java.io.InputStream $r21;

        this := @this: weka.core.converters.AbstractFileLoader;

        file#1 := @parameter0: java.io.File;

        original = file#1;

        this.<weka.core.converters.AbstractFileLoader: weka.core.Instances m_structure> = null;

        virtualinvoke this.<weka.core.converters.AbstractFileLoader: void setRetrieval(int)>(0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(file#1);

        if file#1 != null goto label01;

        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("Source file object is null!");

        throw $r0;

     label01:
        fName#13 = virtualinvoke file#1.<java.io.File: java.lang.String getPath()>();

     label02:
        $r1 = this.<weka.core.converters.AbstractFileLoader: weka.core.Environment m_env>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label03;

        $r2 = staticinvoke <weka.core.Environment: weka.core.Environment getSystemWide()>();

        this.<weka.core.converters.AbstractFileLoader: weka.core.Environment m_env> = $r2;

     label03:
        $r3 = this.<weka.core.converters.AbstractFileLoader: weka.core.Environment m_env>;

        fName#13 = virtualinvoke $r3.<weka.core.Environment: java.lang.String substitute(java.lang.String)>(fName#13);

     label04:
        goto label06;

     label05:
        $r4 := @caughtexception;

        l4 = $r4;

     label06:
        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(fName#13);

        file#26 = $r5;

        $z0 = virtualinvoke file#26.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label08;

        $z1 = virtualinvoke file#26.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label08;

        $r6 = virtualinvoke file#26.<java.io.File: java.lang.String getName()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke this.<weka.core.converters.AbstractFileLoader: java.lang.String getFileExtension()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = <weka.core.converters.AbstractFileLoader: java.lang.String FILE_EXTENSION_COMPRESSED>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>($r12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label07;

        $r13 = new java.util.zip.GZIPInputStream;

        $r14 = new java.io.FileInputStream;

        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>(file#26);

        specialinvoke $r13.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r14);

        virtualinvoke this.<weka.core.converters.AbstractFileLoader: void setSource(java.io.InputStream)>($r13);

        goto label09;

     label07:
        $r15 = new java.io.FileInputStream;

        specialinvoke $r15.<java.io.FileInputStream: void <init>(java.io.File)>(file#26);

        virtualinvoke this.<weka.core.converters.AbstractFileLoader: void setSource(java.io.InputStream)>($r15);

        goto label09;

     label08:
        $c0 = <java.io.File: char separatorChar>;

        fnameWithCorrectSeparators = virtualinvoke fName#13.<java.lang.String: java.lang.String replace(char,char)>($c0, 47);

        $r16 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r18 = virtualinvoke $r17.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(fnameWithCorrectSeparators);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r18);

        if $r18 == null goto label09;

        $r19 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r21 = virtualinvoke $r20.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(fnameWithCorrectSeparators);

        virtualinvoke this.<weka.core.converters.AbstractFileLoader: void setSource(java.io.InputStream)>($r21);

     label09:
        $z3 = this.<weka.core.converters.AbstractFileLoader: boolean m_useRelativePath>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label13;

     label10:
        $r22 = staticinvoke <weka.core.Utils: java.io.File convertToRelativePath(java.io.File)>(original);

        this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile> = $r22;

        $r23 = this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile>;

        $r24 = virtualinvoke $r23.<java.io.File: java.lang.String getPath()>();

        this.<weka.core.converters.AbstractFileLoader: java.lang.String m_File> = $r24;

     label11:
        goto label14;

     label12:
        $r25 := @caughtexception;

        ex = $r25;

        this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile> = original;

        $r26 = this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile>;

        $r27 = virtualinvoke $r26.<java.io.File: java.lang.String getPath()>();

        this.<weka.core.converters.AbstractFileLoader: java.lang.String m_File> = $r27;

        goto label14;

     label13:
        this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile> = original;

        $r28 = this.<weka.core.converters.AbstractFileLoader: java.io.File m_sourceFile>;

        $r29 = virtualinvoke $r28.<java.io.File: java.lang.String getPath()>();

        this.<weka.core.converters.AbstractFileLoader: java.lang.String m_File> = $r29;

     label14:
        return;

        catch java.lang.Exception from label02 to label04 with label05;
        catch java.lang.Exception from label10 to label11 with label12;
    }


