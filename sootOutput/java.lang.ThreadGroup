    public final void checkAccess()
    {
        java.lang.ThreadGroup l0;
        java.lang.SecurityManager l1;

        l0 := @this: java.lang.ThreadGroup;

        l1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if l1 == null goto label1;

        virtualinvoke l1.<java.lang.SecurityManager: void checkAccess(java.lang.ThreadGroup)>(l0);

     label1:
        return;
    }

    void addUnstarted()
    {
        java.lang.ThreadGroup l0, l1;
        java.lang.Throwable l2, $r3;
        boolean $z0;
        java.lang.IllegalThreadStateException $r1;
        int $i0, $i1;

        l0 := @this: java.lang.ThreadGroup;

        l1 = l0;

        entermonitor l0;

     label1:
        $z0 = l0.<java.lang.ThreadGroup: boolean destroyed>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = new java.lang.IllegalThreadStateException;

        specialinvoke $r1.<java.lang.IllegalThreadStateException: void <init>()>();

        throw $r1;

     label2:
        $i0 = l0.<java.lang.ThreadGroup: int nUnstartedThreads>;

        $i1 = $i0 + 1;

        l0.<java.lang.ThreadGroup: int nUnstartedThreads> = $i1;

        exitmonitor l1;

     label3:
        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        l2 = $r3;

        exitmonitor l1;

     label6:
        throw l2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final int getMaxPriority()
    {
        java.lang.ThreadGroup l0;
        int $i0;

        l0 := @this: java.lang.ThreadGroup;

        $i0 = l0.<java.lang.ThreadGroup: int maxPriority>;

        return $i0;
    }

    public final java.lang.ThreadGroup getParent()
    {
        java.lang.ThreadGroup l0, $r0, $r1, $r2;

        l0 := @this: java.lang.ThreadGroup;

        $r0 = l0.<java.lang.ThreadGroup: java.lang.ThreadGroup parent>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = l0.<java.lang.ThreadGroup: java.lang.ThreadGroup parent>;

        virtualinvoke $r1.<java.lang.ThreadGroup: void checkAccess()>();

     label1:
        $r2 = l0.<java.lang.ThreadGroup: java.lang.ThreadGroup parent>;

        return $r2;
    }

    void threadStartFailed(java.lang.Thread)
    {
        java.lang.ThreadGroup l0, l2;
        java.lang.Thread l1;
        java.lang.Throwable l3, $r2;
        int $i0, $i1;

        l0 := @this: java.lang.ThreadGroup;

        l1 := @parameter0: java.lang.Thread;

        l2 = l0;

        entermonitor l0;

     label1:
        specialinvoke l0.<java.lang.ThreadGroup: void remove(java.lang.Thread)>(l1);

        $i0 = l0.<java.lang.ThreadGroup: int nUnstartedThreads>;

        $i1 = $i0 + 1;

        l0.<java.lang.ThreadGroup: int nUnstartedThreads> = $i1;

        exitmonitor l2;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        l3 = $r2;

        exitmonitor l2;

     label5:
        throw l3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void remove(java.lang.Thread)
    {
        java.lang.ThreadGroup l0, l2;
        java.lang.Thread l1, $r2;
        java.lang.Throwable l4, $r7;
        boolean $z0;
        int l3#7, $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Thread[] $r1, $r3, $r4, $r6;

        l0 := @this: java.lang.ThreadGroup;

        l1 := @parameter0: java.lang.Thread;

        l2 = l0;

        entermonitor l0;

     label01:
        $z0 = l0.<java.lang.ThreadGroup: boolean destroyed>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        exitmonitor l2;

     label02:
        return;

     label03:
        l3#7 = 0;

     label04:
        $i0 = l0.<java.lang.ThreadGroup: int nthreads>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if l3#7 >= $i0 goto label06;

        $r1 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $r2 = $r1[l3#7];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if $r2 != l1 goto label05;

        $r3 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $i1 = l3#7 + 1;

        $r4 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $i2 = l0.<java.lang.ThreadGroup: int nthreads>;

        $i3 = $i2 - 1;

        l0.<java.lang.ThreadGroup: int nthreads> = $i3;

        $i4 = $i3 - l3#7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r4, l3#7, $i4);

        $r6 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $i5 = l0.<java.lang.ThreadGroup: int nthreads>;

        $r6[$i5] = null;

        goto label06;

     label05:
        l3#7 = l3#7 + 1;

        goto label04;

     label06:
        exitmonitor l2;

     label07:
        goto label11;

     label08:
        $r7 := @caughtexception;

     label09:
        l4 = $r7;

        exitmonitor l2;

     label10:
        throw l4;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void add(java.lang.Thread)
    {
        java.lang.ThreadGroup l0, l2;
        java.lang.Thread l1;
        java.lang.Throwable l3, $r11;
        boolean $z0;
        java.lang.IllegalThreadStateException $r1;
        java.lang.Thread[] $r2, $r3, $r4, $r5, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object[] $r6;

        l0 := @this: java.lang.ThreadGroup;

        l1 := @parameter0: java.lang.Thread;

        l2 = l0;

        entermonitor l0;

     label1:
        $z0 = l0.<java.lang.ThreadGroup: boolean destroyed>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = new java.lang.IllegalThreadStateException;

        specialinvoke $r1.<java.lang.IllegalThreadStateException: void <init>()>();

        throw $r1;

     label2:
        $r2 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 != null goto label3;

        $r3 = newarray (java.lang.Thread)[4];

        l0.<java.lang.ThreadGroup: java.lang.Thread[] threads> = $r3;

        goto label4;

     label3:
        $i0 = l0.<java.lang.ThreadGroup: int nthreads>;

        $r4 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $i1 = lengthof $r4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 != $i1 goto label4;

        $r5 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $i2 = l0.<java.lang.ThreadGroup: int nthreads>;

        $i3 = $i2 * 2;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i3);

        $r7 = (java.lang.Thread[]) $r6;

        l0.<java.lang.ThreadGroup: java.lang.Thread[] threads> = $r7;

     label4:
        $r8 = l0.<java.lang.ThreadGroup: java.lang.Thread[] threads>;

        $i4 = l0.<java.lang.ThreadGroup: int nthreads>;

        $r8[$i4] = l1;

        $i5 = l0.<java.lang.ThreadGroup: int nthreads>;

        $i6 = $i5 + 1;

        l0.<java.lang.ThreadGroup: int nthreads> = $i6;

        $i7 = l0.<java.lang.ThreadGroup: int nUnstartedThreads>;

        $i8 = $i7 - 1;

        l0.<java.lang.ThreadGroup: int nUnstartedThreads> = $i8;

        exitmonitor l2;

     label5:
        goto label9;

     label6:
        $r11 := @caughtexception;

     label7:
        l3 = $r11;

        exitmonitor l2;

     label8:
        throw l3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }


