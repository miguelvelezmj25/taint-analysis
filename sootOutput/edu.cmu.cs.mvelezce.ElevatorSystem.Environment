    public edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] getFloors()
    {
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment this;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] $r0;

        this := @this: edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        $r0 = this.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] floors>;

        return $r0;
    }

    public boolean isTopFloor(int)
    {
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment this;
        int id, $i0, $i1;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] $r0;
        boolean $z0;

        this := @this: edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        id := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] floors>;

        $i0 = lengthof $r0;

        $i1 = $i0 - 1;

        if id != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public edu.cmu.cs.mvelezce.ElevatorSystem.Floor getFloor(int)
    {
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment this;
        int id;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor $r1;

        this := @this: edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        id := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] floors>;

        $r1 = $r0[id];

        return $r1;
    }

    public void <init>(int)
    {
        edu.cmu.cs.mvelezce.ElevatorSystem.Environment this;
        int numFloors, i#6;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor $r0;
        edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] $r1, $r2;

        this := @this: edu.cmu.cs.mvelezce.ElevatorSystem.Environment;

        numFloors := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r1 = newarray (edu.cmu.cs.mvelezce.ElevatorSystem.Floor)[numFloors];

        this.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] floors> = $r1;

        i#6 = 0;

     label1:
        if i#6 >= numFloors goto label2;

        $r2 = this.<edu.cmu.cs.mvelezce.ElevatorSystem.Environment: edu.cmu.cs.mvelezce.ElevatorSystem.Floor[] floors>;

        $r0 = new edu.cmu.cs.mvelezce.ElevatorSystem.Floor;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.ElevatorSystem.Floor: void <init>(int)>(i#6);

        $r2[i#6] = $r0;

        i#6 = i#6 + 1;

        goto label1;

     label2:
        return;
    }


