digraph getStorageSize {
"bin := @parameter0: berkeley.com.sleepycat.je.tree.BIN {1651942115}" -> "idx := @parameter1: int {489144725}";
"idx := @parameter1: int {489144725}" -> "storedKeySize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx) {1091419542}";
"storedKeySize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx) {1091419542}" -> "$r0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>() {258955393}";
"$r0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>() {258955393}" -> "$z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>() {308227910}";
"$z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>() {308227910}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {217335125}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {217335125}" -> "if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {1041416598}";
"if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {1041416598}" -> "$i0 = storedKeySize - 1 {1692381013}";
"if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {1041416598}" -> "$z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {983569563}";
"$i0 = storedKeySize - 1 {1692381013}" -> "$i1 = $i0 + 12 {1302616450}";
"$i1 = $i0 + 12 {1302616450}" -> "return $i1 {1318158892}";
"$z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {983569563}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1821283063}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1821283063}" -> "if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {2019713281}";
"if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {2019713281}" -> "$i2 = storedKeySize - 1 {272024914}";
"if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {2019713281}" -> "lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {2145274634}";
"$i2 = storedKeySize - 1 {272024914}" -> "$i3 = $i2 + 20 {1603297077}";
"$i3 = $i2 + 20 {1603297077}" -> "return $i3 {892384811}";
"lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {2145274634}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {2146652824}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {2146652824}" -> "if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {104042590}";
"if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {104042590}" -> "return 0 {1428218733}";
"if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {104042590}" -> "$i4 = lastLoggedSize + storedKeySize {184665022}";
"$i4 = lastLoggedSize + storedKeySize {184665022}" -> "$i5 = $i4 + 14 {108691488}";
"$i5 = $i4 + 14 {108691488}" -> "return $i5 {488395434}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {217335125}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1821283063}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {2146652824}"[fontcolor="blue", penwidth=3, color="blue"];
}


