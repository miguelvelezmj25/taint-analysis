    void <init>(com.sleepycat.je.tree.INTargetRep$1)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        com.sleepycat.je.tree.INTargetRep$1 x0;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        x0 := @parameter0: com.sleepycat.je.tree.INTargetRep$1;

        specialinvoke this.<com.sleepycat.je.tree.INTargetRep$None: void <init>()>();

        return;
    }

    private void <init>()
    {
        com.sleepycat.je.tree.INTargetRep$None this;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        specialinvoke this.<com.sleepycat.je.tree.INTargetRep: void <init>()>();

        return;
    }

    public volatile java.lang.Object get(int)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int l1;
        com.sleepycat.je.tree.Node $r0;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        l1 := @parameter0: int;

        $r0 = virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: com.sleepycat.je.tree.Node get(int)>(l1);

        return $r0;
    }

    public com.sleepycat.je.tree.Node get(int)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int idx;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        idx := @parameter0: int;

        return null;
    }

    public volatile java.lang.Object getType()
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        com.sleepycat.je.tree.INTargetRep$Type $r0;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        $r0 = virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: com.sleepycat.je.tree.INTargetRep$Type getType()>();

        return $r0;
    }

    public com.sleepycat.je.tree.INTargetRep$Type getType()
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        com.sleepycat.je.tree.INTargetRep$Type $r0;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        $r0 = <com.sleepycat.je.tree.INTargetRep$Type: com.sleepycat.je.tree.INTargetRep$Type NONE>;

        return $r0;
    }

    public long calculateMemorySize()
    {
        com.sleepycat.je.tree.INTargetRep$None this;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        return 0L;
    }

    public void updateCacheStats(boolean, com.sleepycat.je.evictor.Evictor)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        boolean increment;
        com.sleepycat.je.evictor.Evictor evictor;
        java.util.concurrent.atomic.AtomicLong $r0, $r1;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        increment := @parameter0: boolean;

        evictor := @parameter1: com.sleepycat.je.evictor.Evictor;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(increment);

        if increment == 0 goto label1;

        $r0 = virtualinvoke evictor.<com.sleepycat.je.evictor.Evictor: java.util.concurrent.atomic.AtomicLong getNINNoTarget()>();

        virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        goto label2;

     label1:
        $r1 = virtualinvoke evictor.<com.sleepycat.je.evictor.Evictor: java.util.concurrent.atomic.AtomicLong getNINNoTarget()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long decrementAndGet()>();

     label2:
        return;
    }

    public volatile java.lang.Object resize(int)
    {
        com.sleepycat.je.tree.INTargetRep$None this, $r0;
        int l1;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        l1 := @parameter0: int;

        $r0 = virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: com.sleepycat.je.tree.INTargetRep$None resize(int)>(l1);

        return $r0;
    }

    public com.sleepycat.je.tree.INTargetRep$None resize(int)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int capacity;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        capacity := @parameter0: int;

        return this;
    }

    public volatile java.lang.Object set(int, java.lang.Object, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int l1;
        java.lang.Object l2;
        com.sleepycat.je.tree.IN l3;
        com.sleepycat.je.tree.Node $r0;
        com.sleepycat.je.tree.INTargetRep $r1;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        l1 := @parameter0: int;

        l2 := @parameter1: java.lang.Object;

        l3 := @parameter2: com.sleepycat.je.tree.IN;

        $r0 = (com.sleepycat.je.tree.Node) l2;

        $r1 = virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: com.sleepycat.je.tree.INTargetRep set(int,com.sleepycat.je.tree.Node,com.sleepycat.je.tree.IN)>(l1, $r0, l3);

        return $r1;
    }

    public com.sleepycat.je.tree.INTargetRep set(int, com.sleepycat.je.tree.Node, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int idx, $i0;
        com.sleepycat.je.tree.Node node;
        com.sleepycat.je.tree.IN parent;
        com.sleepycat.je.tree.INTargetRep$Sparse targets, $r0;
        java.lang.Object $r1;
        com.sleepycat.je.tree.INTargetRep $r2;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        idx := @parameter0: int;

        node := @parameter1: com.sleepycat.je.tree.Node;

        parent := @parameter2: com.sleepycat.je.tree.IN;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(node);

        if node != null goto label1;

        return this;

     label1:
        $r0 = new com.sleepycat.je.tree.INTargetRep$Sparse;

        $i0 = virtualinvoke parent.<com.sleepycat.je.tree.IN: int getMaxEntries()>();

        specialinvoke $r0.<com.sleepycat.je.tree.INTargetRep$Sparse: void <init>(int)>($i0);

        targets = $r0;

        virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: void noteRepChange(com.sleepycat.je.tree.INArrayRep,com.sleepycat.je.tree.IN)>(targets, parent);

        $r1 = virtualinvoke targets.<com.sleepycat.je.tree.INTargetRep: java.lang.Object set(int,java.lang.Object,com.sleepycat.je.tree.IN)>(idx, node, parent);

        $r2 = (com.sleepycat.je.tree.INTargetRep) $r1;

        return $r2;
    }

    public volatile java.lang.Object copy(int, int, int, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int l1, l2, l3;
        com.sleepycat.je.tree.IN l4;
        com.sleepycat.je.tree.INTargetRep $r0;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 := @parameter3: com.sleepycat.je.tree.IN;

        $r0 = virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: com.sleepycat.je.tree.INTargetRep copy(int,int,int,com.sleepycat.je.tree.IN)>(l1, l2, l3, l4);

        return $r0;
    }

    public com.sleepycat.je.tree.INTargetRep copy(int, int, int, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        int 'from', 'to', n;
        com.sleepycat.je.tree.IN parent;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        'from' := @parameter0: int;

        'to' := @parameter1: int;

        n := @parameter2: int;

        parent := @parameter3: com.sleepycat.je.tree.IN;

        return this;
    }

    public volatile java.lang.Object compact(com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        com.sleepycat.je.tree.IN l1;
        com.sleepycat.je.tree.INTargetRep $r0;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        l1 := @parameter0: com.sleepycat.je.tree.IN;

        $r0 = virtualinvoke this.<com.sleepycat.je.tree.INTargetRep$None: com.sleepycat.je.tree.INTargetRep compact(com.sleepycat.je.tree.IN)>(l1);

        return $r0;
    }

    public com.sleepycat.je.tree.INTargetRep compact(com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INTargetRep$None this;
        com.sleepycat.je.tree.IN parent;

        this := @this: com.sleepycat.je.tree.INTargetRep$None;

        parent := @parameter0: com.sleepycat.je.tree.IN;

        return this;
    }


