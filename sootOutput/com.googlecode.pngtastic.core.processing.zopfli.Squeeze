    static void optimalRun(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, byte[], int, int, char[], com.googlecode.pngtastic.core.processing.zopfli.LzStore)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        byte[] input;
        int 'from', 'to', $i0, $i1, $i5, $i6, pathSize#1, size#2, las#4, pos#5, j#7;
        char[] lengthArray, path;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        byte $b2;
        short $s3;
        char $c4, $c7, $c8, las#3, length#6;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        input := @parameter2: byte[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        lengthArray := @parameter5: char[];

        store := @parameter6: com.googlecode.pngtastic.core.processing.zopfli.LzStore;

        path = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] path>;

        pathSize#1 = 0;

        size#2 = 'to' - 'from';

     label1:
        las#3 = lengthArray[size#2];

        $i0 = pathSize#1;

        pathSize#1 = pathSize#1 + 1;

        path[$i0] = las#3;

        size#2 = size#2 - las#3;

        if size#2 != 0 goto label1;

        $i1 = 'from' - 32768;

        las#4 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        h = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.Hash h>;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void init(byte[],int,int,int)>(input, las#4, 'from', 'to');

        pos#5 = 'from';

     label2:
        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, pos#5, 'to');

        pathSize#1 = pathSize#1 + -1;

        length#6 = path[pathSize#1];

        if length#6 < 3 goto label3;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,com.googlecode.pngtastic.core.processing.zopfli.Hash,byte[],int,int,int,char[])>(cookie, lmc, 'from', h, input, pos#5, 'to', length#6, null);

        $c8 = (char) length#6;

        $i6 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int distVal>;

        $c7 = (char) $i6;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c8, $c7);

        goto label4;

     label3:
        length#6 = 1;

        $b2 = input[pos#5];

        $s3 = $b2 & 255;

        $c4 = (char) $s3;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void append(char,char)>($c4, 0);

     label4:
        j#7 = 1;

     label5:
        if j#7 >= length#6 goto label6;

        $i5 = pos#5 + j#7;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, $i5, 'to');

        j#7 = j#7 + 1;

        goto label5;

     label6:
        pos#5 = pos#5 + length#6;

        if pathSize#1 != 0 goto label2;

        return;
    }

    static void bestFixedLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, byte[], int, int, char[], long[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        byte[] input;
        int 'from', 'to', windowStart, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i14, $i17, $i18, $i23, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i37, $i38, i#1, j#2, k#4, $i39, symbolCost#62, $i40;
        char[] lengthArray, subLen;
        long[] costs;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        int[] $r0, $r1;
        long $l7, $l8, $l9, $l12, $l13, $l15, $l21, $l22, $l24, $l35, $l36, symbolCost#3, symbolCost#57, k#72;
        double $d0;
        byte $b10, $b16, $b19, $b25;
        char $c11, k#65;
        short $s20;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        input := @parameter2: byte[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        lengthArray := @parameter5: char[];

        costs := @parameter6: long[];

        $i0 = 'from' - 32768;

        windowStart = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        h = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.Hash h>;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void init(byte[],int,int,int)>(input, windowStart, 'from', 'to');

        $i1 = 'to' - 'from';

        $i2 = $i1 + 1;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Cookie: void fillCostMax(long[],int)>(costs, $i2);

        costs[0] = 0L;

        lengthArray[0] = 0;

        subLen = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] c259a>;

        i#1 = 'from';

     label1:
        if i#1 >= 'to' goto label9;

        j#2 = i#1 - 'from';

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#1, 'to');

        $r0 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        $i3 = i#1 & 32767;

        $i4 = $r0[$i3];

        if $i4 <= 516 goto label3;

        $i28 = 'from' + 258;

        $i29 = $i28 + 1;

        if i#1 <= $i29 goto label3;

        $i30 = i#1 + 516;

        $i31 = $i30 + 1;

        if $i31 >= 'to' goto label3;

        $r1 = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        $i32 = i#1 - 258;

        $i33 = $i32 & 32767;

        $i34 = $r1[$i33];

        if $i34 <= 258 goto label3;

        symbolCost#3 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: long fixedCost(int,int)>(258, 1);

        k#4 = 0;

     label2:
        if k#4 >= 258 goto label3;

        $i37 = j#2 + 258;

        $l35 = costs[j#2];

        $l36 = $l35 + symbolCost#3;

        costs[$i37] = $l36;

        $i38 = j#2 + 258;

        lengthArray[$i38] = 258;

        i#1 = i#1 + 1;

        j#2 = j#2 + 1;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#1, 'to');

        k#4 = k#4 + 1;

        goto label2;

     label3:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,com.googlecode.pngtastic.core.processing.zopfli.Hash,byte[],int,int,int,char[])>(cookie, lmc, 'from', h, input, i#1, 'to', 258, subLen);

        $i39 = i#1 + 1;

        if $i39 > 'to' goto label4;

        $l21 = costs[j#2];

        $b19 = input[i#1];

        $s20 = $b19 & 255;

        $l22 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: long fixedCost(int,int)>($s20, 0);

        symbolCost#57 = $l21 + $l22;

        $i23 = j#2 + 1;

        $l24 = costs[$i23];

        $b25 = symbolCost#57 cmp $l24;

        if $b25 >= 0 goto label4;

        $i26 = j#2 + 1;

        costs[$i26] = symbolCost#57;

        $i27 = j#2 + 1;

        lengthArray[$i27] = 1;

     label4:
        symbolCost#62 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        k#65 = 3;

     label5:
        if k#65 > symbolCost#62 goto label8;

        $i5 = i#1 + k#65;

        if $i5 > 'to' goto label8;

        $i6 = j#2 + k#65;

        $l8 = costs[$i6];

        $l7 = costs[j#2];

        $l9 = $l8 - $l7;

        $d0 = (double) $l9;

        $b10 = $d0 cmpg 12.0;

        if $b10 > 0 goto label6;

        goto label7;

     label6:
        $l12 = costs[j#2];

        $c11 = subLen[k#65];

        $l13 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: long fixedCost(int,int)>(k#65, $c11);

        k#72 = $l12 + $l13;

        $i14 = j#2 + k#65;

        $l15 = costs[$i14];

        $b16 = k#72 cmp $l15;

        if $b16 >= 0 goto label7;

        $i17 = j#2 + k#65;

        costs[$i17] = k#72;

        $i18 = j#2 + k#65;

        lengthArray[$i18] = k#65;

     label7:
        $i40 = k#65 + 1;

        k#65 = (char) $i40;

        goto label5;

     label8:
        i#1 = i#1 + 1;

        goto label1;

     label9:
        return;
    }

    static com.googlecode.pngtastic.core.processing.zopfli.LzStore optimal(com.googlecode.pngtastic.core.processing.zopfli.Cookie, int, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, byte[], int, int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        int numIterations, 'from', 'to', cost, $i1, $i2, $i3, bestCost#1, lastCost#2, lastRandomStep#3, i#4;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        byte[] input;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore currentStore, store;
        com.googlecode.pngtastic.core.processing.zopfli.SymbolStats stats, bestStats, lastStats;
        char[] lengthArray, $r0, $r1;
        long[] costs;
        long $l0;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        numIterations := @parameter1: int;

        lmc := @parameter2: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        currentStore = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LzStore store1>;

        virtualinvoke currentStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        store = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LzStore store2>;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void greedy(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, lmc, input, 'from', 'to', currentStore);

        stats = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.SymbolStats stats>;

        bestStats = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.SymbolStats bestStats>;

        lastStats = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.SymbolStats lastStats>;

        virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void getFreqs(com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(currentStore);

        lengthArray = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] lengthArray>;

        costs = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: long[] costs>;

        bestCost#1 = 2147483647;

        lastCost#2 = 0;

        lastRandomStep#3 = -1;

        i#4 = 0;

     label1:
        if i#4 >= numIterations goto label5;

        virtualinvoke currentStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        $l0 = virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: long minCost()>();

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void bestLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,byte[],int,int,long,com.googlecode.pngtastic.core.processing.zopfli.SymbolStats,char[],long[])>(cookie, lmc, 'from', input, 'from', 'to', $l0, stats, lengthArray, costs);

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Squeeze: void optimalRun(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,char[],com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, lmc, input, 'from', 'to', lengthArray, currentStore);

        $r1 = currentStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r0 = currentStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i1 = currentStore.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        cost = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, $r1, $r0, 0, $i1);

        if cost >= bestCost#1 goto label2;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void copy(com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(currentStore);

        virtualinvoke bestStats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void copy(com.googlecode.pngtastic.core.processing.zopfli.SymbolStats)>(stats);

        bestCost#1 = cost;

     label2:
        virtualinvoke lastStats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void copy(com.googlecode.pngtastic.core.processing.zopfli.SymbolStats)>(stats);

        virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void getFreqs(com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(currentStore);

        if lastRandomStep#3 == -1 goto label3;

        virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void alloy(com.googlecode.pngtastic.core.processing.zopfli.SymbolStats)>(lastStats);

        virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void calculate()>();

     label3:
        if i#4 <= 5 goto label4;

        if cost != lastCost#2 goto label4;

        virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void copy(com.googlecode.pngtastic.core.processing.zopfli.SymbolStats)>(bestStats);

        $i2 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int rnd>;

        $i3 = virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: int randomizeFreqs(int)>($i2);

        cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int rnd> = $i3;

        virtualinvoke stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: void calculate()>();

        lastRandomStep#3 = i#4;

     label4:
        lastCost#2 = cost;

        i#4 = i#4 + 1;

        goto label1;

     label5:
        return store;
    }

    private static long fixedCost(int, int)
    {
        int litLen, dist, $i2, $i3, $i4, $i5, $i6;
        long cost, $l0;
        int[] $r0, $r1, $r2;

        litLen := @parameter0: int;

        dist := @parameter1: int;

        if dist != 0 goto label2;

        if litLen > 143 goto label1;

        return 8L;

     label1:
        return 9L;

     label2:
        if dist >= 4097 goto label3;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_EXTRA_BITS>;

        $i2 = $r0[dist];

        goto label6;

     label3:
        if dist >= 16385 goto label5;

        if dist >= 8193 goto label4;

        $i2 = 11;

        goto label6;

     label4:
        $i2 = 12;

        goto label6;

     label5:
        $i2 = 13;

     label6:
        $i3 = 12 + $i2;

        $r1 = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_EXTRA_BITS>;

        $i4 = $r1[litLen];

        $i5 = $i3 + $i4;

        cost = (long) $i5;

        $r2 = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] LENGTH_SYMBOL>;

        $i6 = $r2[litLen];

        if $i6 <= 279 goto label7;

        $l0 = cost + 1L;

        return $l0;

     label7:
        return cost;
    }

    private static void bestLengths(com.googlecode.pngtastic.core.processing.zopfli.Cookie, com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache, int, byte[], int, int, long, com.googlecode.pngtastic.core.processing.zopfli.SymbolStats, char[], long[])
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache lmc;
        int blockStart, 'from', 'to', windowStart, $i0, $i1, $i2, $i5, $i6, $i10, $i19, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i31, $i32, i#1, j#2, k#3, $i33, newCost#74, $i34, jpk#89, $i35;
        byte[] input;
        long minCost, stepCost, baseCost, newCost, $l3, $l4, $l7, $l11, $l12, $l13, $l14, $l18, $l20, $l29, $l30, k#52, newCost#69;
        com.googlecode.pngtastic.core.processing.zopfli.SymbolStats stats;
        char[] lengthArray, subLen, $r0;
        long[] costs, slLiterals, slLengths, sdSymbols;
        com.googlecode.pngtastic.core.processing.zopfli.Hash h;
        int[] same, cachedDistSymbol;
        byte $b8, $b15, $b16, $b21;
        char $c9, k#90;
        short $s17;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        lmc := @parameter1: com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache;

        blockStart := @parameter2: int;

        input := @parameter3: byte[];

        'from' := @parameter4: int;

        'to' := @parameter5: int;

        minCost := @parameter6: long;

        stats := @parameter7: com.googlecode.pngtastic.core.processing.zopfli.SymbolStats;

        lengthArray := @parameter8: char[];

        costs := @parameter9: long[];

        $i0 = 'from' - 32768;

        windowStart = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        h = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.Hash h>;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void init(byte[],int,int,int)>(input, windowStart, 'from', 'to');

        $i1 = 'to' - 'from';

        $i2 = $i1 + 1;

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Cookie: void fillCostMax(long[],int)>(costs, $i2);

        costs[0] = 0L;

        lengthArray[0] = 0;

        same = h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: int[] same>;

        subLen = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] c259a>;

        $r0 = <com.googlecode.pngtastic.core.processing.zopfli.Cookie: char[] charZeroes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, subLen, 0, 259);

        slLiterals = stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: long[] lLiterals>;

        slLengths = stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: long[] lLengths>;

        sdSymbols = stats.<com.googlecode.pngtastic.core.processing.zopfli.SymbolStats: long[] dSymbols>;

        $l4 = slLengths[258];

        $l3 = sdSymbols[0];

        stepCost = $l4 + $l3;

        cachedDistSymbol = <com.googlecode.pngtastic.core.processing.zopfli.Util: int[] CACHED_DIST_SYMBOL>;

        i#1 = 'from';

        j#2 = 0;

     label1:
        if i#1 >= 'to' goto label9;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#1, 'to');

        $i5 = i#1 & 32767;

        $i6 = same[$i5];

        if $i6 <= 516 goto label3;

        $i24 = 'from' + 259;

        if i#1 <= $i24 goto label3;

        $i25 = i#1 + 517;

        if $i25 >= 'to' goto label3;

        $i26 = i#1 - 258;

        $i27 = $i26 & 32767;

        $i28 = same[$i27];

        if $i28 <= 258 goto label3;

        k#3 = 0;

     label2:
        if k#3 >= 258 goto label3;

        $i31 = j#2 + 258;

        $l29 = costs[j#2];

        $l30 = $l29 + stepCost;

        costs[$i31] = $l30;

        $i32 = j#2 + 258;

        lengthArray[$i32] = 258;

        i#1 = i#1 + 1;

        j#2 = j#2 + 1;

        virtualinvoke h.<com.googlecode.pngtastic.core.processing.zopfli.Hash: void updateHash(byte[],int,int)>(input, i#1, 'to');

        k#3 = k#3 + 1;

        goto label2;

     label3:
        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void findLongestMatch(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,int,com.googlecode.pngtastic.core.processing.zopfli.Hash,byte[],int,int,int,char[])>(cookie, lmc, blockStart, h, input, i#1, 'to', 258, subLen);

        k#52 = costs[j#2];

        $i33 = i#1 + 1;

        if $i33 > 'to' goto label4;

        $b16 = input[i#1];

        $s17 = $b16 & 255;

        $l18 = slLiterals[$s17];

        newCost#69 = k#52 + $l18;

        $i19 = j#2 + 1;

        $l20 = costs[$i19];

        $b21 = newCost#69 cmp $l20;

        if $b21 >= 0 goto label4;

        $i22 = j#2 + 1;

        costs[$i22] = newCost#69;

        $i23 = j#2 + 1;

        lengthArray[$i23] = 1;

     label4:
        newCost#74 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int lenVal>;

        baseCost = minCost + k#52;

        $i34 = 'to' - i#1;

        if newCost#74 <= $i34 goto label5;

        newCost#74 = 'to' - i#1;

     label5:
        jpk#89 = j#2 + 3;

        k#90 = 3;

     label6:
        if k#90 > newCost#74 goto label8;

        $l7 = costs[jpk#89];

        $b8 = $l7 cmp baseCost;

        if $b8 <= 0 goto label7;

        $l12 = slLengths[k#90];

        $c9 = subLen[k#90];

        $i10 = cachedDistSymbol[$c9];

        $l11 = sdSymbols[$i10];

        $l13 = $l12 + $l11;

        newCost = k#52 + $l13;

        $l14 = costs[jpk#89];

        $b15 = $l14 cmp newCost;

        if $b15 <= 0 goto label7;

        costs[jpk#89] = newCost;

        lengthArray[jpk#89] = k#90;

     label7:
        $i35 = k#90 + 1;

        k#90 = (char) $i35;

        jpk#89 = jpk#89 + 1;

        goto label6;

     label8:
        i#1 = i#1 + 1;

        j#2 = j#2 + 1;

        goto label1;

     label9:
        return;
    }


