    public com.sleepycat.je.evictor.OffHeapAllocator getDefaultAllocator()
    {
        com.sleepycat.je.evictor.OffHeapAllocatorFactory this;
        com.sleepycat.je.evictor.OffHeapAllocator $r0;

        this := @this: com.sleepycat.je.evictor.OffHeapAllocatorFactory;

        $r0 = this.<com.sleepycat.je.evictor.OffHeapAllocatorFactory: com.sleepycat.je.evictor.OffHeapAllocator defaultAllocator>;

        return $r0;
    }

    void <init>() throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        com.sleepycat.je.evictor.OffHeapAllocatorFactory this;
        java.lang.Class 'cls';
        java.lang.Object $r0;
        com.sleepycat.je.evictor.OffHeapAllocator $r1;

        this := @this: com.sleepycat.je.evictor.OffHeapAllocatorFactory;

        specialinvoke this.<java.lang.Object: void <init>()>();

        'cls' = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.sleepycat.je.evictor.CHeapAllocator");

        $r0 = virtualinvoke 'cls'.<java.lang.Class: java.lang.Object newInstance()>();

        $r1 = (com.sleepycat.je.evictor.OffHeapAllocator) $r0;

        this.<com.sleepycat.je.evictor.OffHeapAllocatorFactory: com.sleepycat.je.evictor.OffHeapAllocator defaultAllocator> = $r1;

        return;
    }


