    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.io.File $r1;
        berkeley.persist.gettingStarted.MyDbEnv $r2;

        $r0 = class "berkeley/persist/gettingStarted/ExampleInventoryRead";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.persist.gettingStarted.ExampleInventoryRead: boolean $assertionsDisabled> = $z1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/berkeleydb/env");

        <berkeley.persist.gettingStarted.ExampleInventoryRead: java.io.File myDbEnvPath> = $r1;

        $r2 = new berkeley.persist.gettingStarted.MyDbEnv;

        specialinvoke $r2.<berkeley.persist.gettingStarted.MyDbEnv: void <init>()>();

        <berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.MyDbEnv myDbEnv> = $r2;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        berkeley.persist.gettingStarted.ExampleInventoryRead eir, $r0;
        berkeley.com.sleepycat.je.DatabaseException dbe, $r2;
        java.lang.Throwable l3, $r10;
        berkeley.persist.gettingStarted.MyDbEnv $r1, $r9, $r11;
        java.io.PrintStream $r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $r0 = new berkeley.persist.gettingStarted.ExampleInventoryRead;

        specialinvoke $r0.<berkeley.persist.gettingStarted.ExampleInventoryRead: void <init>()>();

        eir = $r0;

     label1:
        specialinvoke eir.<berkeley.persist.gettingStarted.ExampleInventoryRead: void run(java.lang.String[])>(args);

     label2:
        $r1 = <berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r1.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        goto label7;

     label3:
        $r2 := @caughtexception;

     label4:
        dbe = $r2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExampleInventoryRead: ");

        $r6 = virtualinvoke dbe.<berkeley.com.sleepycat.je.DatabaseException: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke dbe.<berkeley.com.sleepycat.je.DatabaseException: void printStackTrace()>();

     label5:
        $r9 = <berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r9.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        goto label7;

     label6:
        $r10 := @caughtexception;

        l3 = $r10;

        $r11 = <berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        virtualinvoke $r11.<berkeley.persist.gettingStarted.MyDbEnv: void close()>();

        throw l3;

     label7:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("All done.");

        return;

        catch berkeley.com.sleepycat.je.DatabaseException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void <init>()
    {
        berkeley.persist.gettingStarted.ExampleInventoryRead this;

        this := @this: berkeley.persist.gettingStarted.ExampleInventoryRead;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private void run(java.lang.String[]) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleInventoryRead this;
        java.lang.String[] args;
        boolean allowCreate#3, $z0, $z1, $z2, $z3;
        java.lang.String $r0, $r8;
        java.lang.Boolean $r1, $r2;
        berkeley.persist.gettingStarted.MyDbEnv $r3, $r6;
        java.io.File $r4;
        berkeley.persist.gettingStarted.DataAccessor $r5;
        berkeley.com.sleepycat.persist.EntityStore $r7;

        this := @this: berkeley.persist.gettingStarted.ExampleInventoryRead;

        args := @parameter0: java.lang.String[];

        staticinvoke <berkeley.persist.gettingStarted.ExampleInventoryRead: void parseArgs(java.lang.String[])>(args);

        allowCreate#3 = 0;

        $r0 = args[0];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionALLOWCREATE(boolean)>($z0);

        <berkeley.persist.gettingStarted.ExampleInventoryRead: boolean ALLOWCREATE> = $z1;

        $z2 = <berkeley.persist.gettingStarted.ExampleInventoryRead: boolean ALLOWCREATE>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        $z3 = <berkeley.persist.gettingStarted.ExampleInventoryRead: boolean ALLOWCREATE>;

        if $z3 == 0 goto label1;

        allowCreate#3 = 1;

     label1:
        $r3 = <berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        $r4 = <berkeley.persist.gettingStarted.ExampleInventoryRead: java.io.File myDbEnvPath>;

        virtualinvoke $r3.<berkeley.persist.gettingStarted.MyDbEnv: void setup(java.io.File,boolean,java.lang.String)>($r4, allowCreate#3, "");

        $r5 = new berkeley.persist.gettingStarted.DataAccessor;

        $r6 = <berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.MyDbEnv myDbEnv>;

        $r7 = virtualinvoke $r6.<berkeley.persist.gettingStarted.MyDbEnv: berkeley.com.sleepycat.persist.EntityStore getEntityStore()>();

        specialinvoke $r5.<berkeley.persist.gettingStarted.DataAccessor: void <init>(berkeley.com.sleepycat.persist.EntityStore)>($r7);

        this.<berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.DataAccessor da> = $r5;

        $r8 = <berkeley.persist.gettingStarted.ExampleInventoryRead: java.lang.String locateItem>;

        if $r8 == null goto label2;

        specialinvoke this.<berkeley.persist.gettingStarted.ExampleInventoryRead: void showItem()>();

        goto label3;

     label2:
        specialinvoke this.<berkeley.persist.gettingStarted.ExampleInventoryRead: void showAllInventory()>();

     label3:
        return;
    }

    private static void parseArgs(java.lang.String[])
    {
        java.lang.String[] args;
        int i#2, $i0;
        java.lang.String $r0, $r1, $r3, $r4;
        boolean $z0;
        char $c1;
        java.io.File $r2;

        args := @parameter0: java.lang.String[];

        i#2 = 0;

     label1:
        $i0 = lengthof args;

        if i#2 >= $i0 goto label6;

        $r0 = args[i#2];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label5;

        $r1 = args[i#2];

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        lookupswitch($c1)
        {
            case 104: goto label2;
            case 115: goto label3;
            default: goto label4;
        };

     label2:
        $r2 = new java.io.File;

        i#2 = i#2 + 1;

        $r3 = args[i#2];

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        <berkeley.persist.gettingStarted.ExampleInventoryRead: java.io.File myDbEnvPath> = $r2;

        goto label5;

     label3:
        i#2 = i#2 + 1;

        $r4 = args[i#2];

        <berkeley.persist.gettingStarted.ExampleInventoryRead: java.lang.String locateItem> = $r4;

        goto label5;

     label4:
        staticinvoke <berkeley.persist.gettingStarted.ExampleInventoryRead: void usage()>();

     label5:
        i#2 = i#2 + 1;

        goto label1;

     label6:
        return;
    }

    private static void usage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("ExampleInventoryRead [-h <env directory>][-s <item to locate>]");

        staticinvoke <java.lang.System: void exit(int)>(-1);

        return;
    }

    private void showItem() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleInventoryRead this;
        berkeley.com.sleepycat.persist.EntityCursor items;
        java.util.Iterator l2;
        berkeley.persist.gettingStarted.Inventory item;
        java.lang.Throwable l4, $r5;
        berkeley.persist.gettingStarted.DataAccessor $r0;
        berkeley.com.sleepycat.persist.SecondaryIndex $r1;
        java.lang.String $r2;
        berkeley.com.sleepycat.persist.EntityIndex $r3;
        boolean $z0;
        java.lang.Object $r4;

        this := @this: berkeley.persist.gettingStarted.ExampleInventoryRead;

        $r0 = this.<berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.DataAccessor da>;

        $r1 = $r0.<berkeley.persist.gettingStarted.DataAccessor: berkeley.com.sleepycat.persist.SecondaryIndex inventoryByName>;

        $r2 = <berkeley.persist.gettingStarted.ExampleInventoryRead: java.lang.String locateItem>;

        $r3 = virtualinvoke $r1.<berkeley.com.sleepycat.persist.SecondaryIndex: berkeley.com.sleepycat.persist.EntityIndex subIndex(java.lang.Object)>($r2);

        items = interfaceinvoke $r3.<berkeley.com.sleepycat.persist.EntityIndex: berkeley.com.sleepycat.persist.EntityCursor entities()>();

     label1:
        l2 = interfaceinvoke items.<berkeley.com.sleepycat.persist.EntityCursor: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (berkeley.persist.gettingStarted.Inventory) $r4;

        specialinvoke this.<berkeley.persist.gettingStarted.ExampleInventoryRead: void displayInventoryRecord(berkeley.persist.gettingStarted.Inventory)>(item);

        goto label2;

     label3:
        interfaceinvoke items.<berkeley.com.sleepycat.persist.EntityCursor: void close()>();

        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        l4 = $r5;

     label6:
        interfaceinvoke items.<berkeley.com.sleepycat.persist.EntityCursor: void close()>();

        throw l4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void showAllInventory() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleInventoryRead this;
        berkeley.com.sleepycat.persist.EntityCursor items;
        java.util.Iterator l2;
        berkeley.persist.gettingStarted.Inventory item;
        java.lang.Throwable l4, $r3;
        berkeley.persist.gettingStarted.DataAccessor $r0;
        berkeley.com.sleepycat.persist.PrimaryIndex $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: berkeley.persist.gettingStarted.ExampleInventoryRead;

        $r0 = this.<berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.DataAccessor da>;

        $r1 = $r0.<berkeley.persist.gettingStarted.DataAccessor: berkeley.com.sleepycat.persist.PrimaryIndex inventoryBySku>;

        items = virtualinvoke $r1.<berkeley.com.sleepycat.persist.PrimaryIndex: berkeley.com.sleepycat.persist.EntityCursor entities()>();

     label1:
        l2 = interfaceinvoke items.<berkeley.com.sleepycat.persist.EntityCursor: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (berkeley.persist.gettingStarted.Inventory) $r2;

        specialinvoke this.<berkeley.persist.gettingStarted.ExampleInventoryRead: void displayInventoryRecord(berkeley.persist.gettingStarted.Inventory)>(item);

        goto label2;

     label3:
        interfaceinvoke items.<berkeley.com.sleepycat.persist.EntityCursor: void close()>();

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        l4 = $r3;

     label6:
        interfaceinvoke items.<berkeley.com.sleepycat.persist.EntityCursor: void close()>();

        throw l4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void displayInventoryRecord(berkeley.persist.gettingStarted.Inventory) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.persist.gettingStarted.ExampleInventoryRead this;
        berkeley.persist.gettingStarted.Inventory theInventory;
        berkeley.persist.gettingStarted.Vendor theVendor;
        java.io.PrintStream $r0, $r6, $r12, $r18, $r24, $r29, $r34, $r40, $r46, $r58, $r64, $r70;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r8, $r10, $r13, $r14, $r16, $r19, $r20, $r22, $r25, $r26, $r27, $r30, $r31, $r32, $r41, $r42, $r44, $r47, $r48, $r50, $r51, $r53, $r54, $r56, $r59, $r60, $r62, $r65, $r66, $r68, $r71, $r72, $r74;
        java.lang.String $r2, $r5, $r9, $r11, $r15, $r17, $r21, $r23, $r28, $r33, $r37, $r43, $r45, $r49, $r52, $r55, $r57, $r61, $r63, $r67, $r69, $r73, $r75;
        int $i0;
        float $f0;
        berkeley.persist.gettingStarted.DataAccessor $r35;
        berkeley.com.sleepycat.persist.PrimaryIndex $r36;
        java.lang.Object $r38;
        boolean $z0;
        java.lang.AssertionError $r39;

        this := @this: berkeley.persist.gettingStarted.ExampleInventoryRead;

        theInventory := @parameter0: berkeley.persist.gettingStarted.Inventory;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: java.lang.String getSku()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t ");

        $r9 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: java.lang.String getItemName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t ");

        $r15 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: java.lang.String getCategory()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t ");

        $r21 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: java.lang.String getVendor()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\tNumber in stock: ");

        $i0 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: int getVendorInventory()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\tPrice per unit:  ");

        $f0 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: float getVendorPrice()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("\t\tContact: ");

        $r35 = this.<berkeley.persist.gettingStarted.ExampleInventoryRead: berkeley.persist.gettingStarted.DataAccessor da>;

        $r36 = $r35.<berkeley.persist.gettingStarted.DataAccessor: berkeley.com.sleepycat.persist.PrimaryIndex vendorByName>;

        $r37 = virtualinvoke theInventory.<berkeley.persist.gettingStarted.Inventory: java.lang.String getVendor()>();

        $r38 = virtualinvoke $r36.<berkeley.com.sleepycat.persist.PrimaryIndex: java.lang.Object get(java.lang.Object)>($r37);

        theVendor = (berkeley.persist.gettingStarted.Vendor) $r38;

        $z0 = <berkeley.persist.gettingStarted.ExampleInventoryRead: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if theVendor != null goto label1;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label1:
        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t ");

        $r43 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getAddress()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $r46 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t ");

        $r49 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getCity()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r52 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getState()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r55 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getZipcode()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r57);

        $r58 = <java.lang.System: java.io.PrintStream out>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t Business Phone: ");

        $r61 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getBusinessPhoneNumber()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r63);

        $r64 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t Sales Rep: ");

        $r67 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getRepName()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r69);

        $r70 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t            ");

        $r73 = virtualinvoke theVendor.<berkeley.persist.gettingStarted.Vendor: java.lang.String getRepPhoneNumber()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>($r75);

        return;
    }


