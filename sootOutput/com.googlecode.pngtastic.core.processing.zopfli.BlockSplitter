    static int splitLz(com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int llSize, llPos, splitL, splitR, start, end, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, numBlocks#1, lStart#3, lEnd#4, blockN#5, longest#7, i#9;
        int[] splitPoints, splitSize;
        byte maxBlocks;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, found#8, $z6, $z7, $z8, $z9;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        litLens := @parameter1: char[];

        dists := @parameter2: char[];

        llSize := @parameter3: int;

        splitPoints = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        splitSize = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitSize>;

        splitPoints[0] = 0;

        $i0 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, 0, llSize);

        splitSize[0] = $i0;

        splitPoints[1] = llSize;

        splitSize[1] = -1;

        numBlocks#1 = 1;

        virtualinvoke cookie.<java.lang.Object: java.lang.Class getClass()>();

        maxBlocks = 15;

        if llSize >= 10 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z0 == 0 goto label03;

        return numBlocks#1;

     label03:
        lStart#3 = 0;

        lEnd#4 = llSize;

        blockN#5 = 0;

     label04:
        if numBlocks#1 >= maxBlocks goto label21;

        llPos = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int findMinimum(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, lStart#3, lEnd#4);

        splitL = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, lStart#3, llPos);

        splitR = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, llPos, lEnd#4);

        $i2 = splitL + splitR;

        $i1 = splitSize[blockN#5];

        if $i2 > $i1 goto label05;

        $i11 = lStart#3 + 1;

        if llPos == $i11 goto label05;

        if llPos != lEnd#4 goto label06;

     label05:
        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z1 == 0 goto label08;

        splitSize[blockN#5] = -1;

        goto label09;

     label08:
        splitSize[blockN#5] = splitL;

        numBlocks#1 = numBlocks#1 + 1;

        blockN#5 = blockN#5 + 1;

        $i4 = blockN#5 + 1;

        $i3 = numBlocks#1 - blockN#5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(splitPoints, blockN#5, splitPoints, $i4, $i3);

        $i6 = blockN#5 + 1;

        $i5 = numBlocks#1 - blockN#5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(splitSize, blockN#5, splitSize, $i6, $i5);

        splitPoints[blockN#5] = llPos;

        splitSize[blockN#5] = splitR;

     label09:
        longest#7 = 0;

        found#8 = 0;

        i#9 = 0;

     label10:
        if i#9 >= numBlocks#1 goto label14;

        start = splitPoints[i#9];

        $i8 = i#9 + 1;

        end = splitPoints[$i8];

        $i9 = splitSize[i#9];

        if $i9 == -1 goto label11;

        $i10 = end - start;

        if $i10 <= longest#7 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label13;

        lStart#3 = start;

        lEnd#4 = end;

        found#8 = 1;

        longest#7 = end - start;

        blockN#5 = i#9;

     label13:
        i#9 = i#9 + 1;

        goto label10;

     label14:
        if found#8 != 0 goto label15;

        $z8 = 1;

        goto label16;

     label15:
        $z8 = 0;

     label16:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z2 == 0 goto label17;

        goto label21;

     label17:
        $i7 = lEnd#4 - lStart#3;

        if $i7 >= 10 goto label18;

        $z9 = 1;

        goto label19;

     label18:
        $z9 = 0;

     label19:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z9);

        if $z3 == 0 goto label20;

        goto label21;

     label20:
        goto label04;

     label21:
        return numBlocks#1;
    }

    static int split(com.googlecode.pngtastic.core.processing.zopfli.Cookie, byte[], int, int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        byte[] input;
        int 'from', 'to', nPoints, pj, $i0, $i2, pos#1, i#2, j#3;
        com.googlecode.pngtastic.core.processing.zopfli.LzStore store;
        char[] dists, litLens, $r0, $r1;
        int[] points;
        char $c1, $c3;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        input := @parameter1: byte[];

        'from' := @parameter2: int;

        'to' := @parameter3: int;

        store = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: com.googlecode.pngtastic.core.processing.zopfli.LzStore store1>;

        virtualinvoke store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: void reset()>();

        staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: void greedy(com.googlecode.pngtastic.core.processing.zopfli.Cookie,com.googlecode.pngtastic.core.processing.zopfli.LongestMatchCache,byte[],int,int,com.googlecode.pngtastic.core.processing.zopfli.LzStore)>(cookie, null, input, 'from', 'to', store);

        $r1 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        $r0 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        $i0 = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: int size>;

        nPoints = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.BlockSplitter: int splitLz(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int)>(cookie, $r1, $r0, $i0);

        pos#1 = 'from';

        dists = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] dists>;

        litLens = store.<com.googlecode.pngtastic.core.processing.zopfli.LzStore: char[] litLens>;

        points = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] splitPoints>;

        points[0] = pos#1;

        i#2 = 0;

        j#3 = 1;

     label1:
        if j#3 > nPoints goto label6;

        pj = points[j#3];

     label2:
        if i#2 >= pj goto label5;

        $i2 = pos#1;

        $c1 = dists[i#2];

        if $c1 != 0 goto label3;

        $c3 = 1;

        goto label4;

     label3:
        $c3 = litLens[i#2];

     label4:
        pos#1 = $i2 + $c3;

        i#2 = i#2 + 1;

        goto label2;

     label5:
        points[j#3] = pos#1;

        j#3 = j#3 + 1;

        goto label1;

     label6:
        return nPoints;
    }

    private static int findMinimum(com.googlecode.pngtastic.core.processing.zopfli.Cookie, char[], char[], int, int)
    {
        com.googlecode.pngtastic.core.processing.zopfli.Cookie cookie;
        char[] litLens, dists;
        int 'from', 'to', $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, start#1, end#2, best#4, result#5, i#6, v#7, v#12, pos#13, i#15, i#16, best#17, i#18, $i19, $i20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        byte best#9;
        int[] result#10, i#11;

        cookie := @parameter0: com.googlecode.pngtastic.core.processing.zopfli.Cookie;

        litLens := @parameter1: char[];

        dists := @parameter2: char[];

        'from' := @parameter3: int;

        'to' := @parameter4: int;

        start#1 = 'from' + 1;

        end#2 = 'to';

        $i0 = end#2 - start#1;

        if $i0 >= 1024 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z0 == 0 goto label08;

        best#4 = 2147483647;

        result#5 = start#1;

        i#6 = start#1;

     label03:
        if i#6 >= end#2 goto label07;

        $i17 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, 'from', i#6);

        $i18 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, i#6, 'to');

        v#7 = $i17 + $i18;

        if v#7 >= best#4 goto label04;

        $z6 = 1;

        goto label05;

     label04:
        $z6 = 0;

     label05:
        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z4 == 0 goto label06;

        best#4 = v#7;

        result#5 = i#6;

     label06:
        i#6 = i#6 + 1;

        goto label03;

     label07:
        return result#5;

     label08:
        best#9 = 9;

        result#10 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] p>;

        i#11 = cookie.<com.googlecode.pngtastic.core.processing.zopfli.Cookie: int[] vp>;

        v#12 = 2147483647;

        pos#13 = start#1;

     label09:
        $i1 = end#2 - start#1;

        if $i1 > best#9 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z1 == 0 goto label12;

        goto label27;

     label12:
        i#15 = 0;

     label13:
        if i#15 >= best#9 goto label14;

        $i9 = i#15 + 1;

        $i7 = end#2 - start#1;

        $i6 = best#9 + 1;

        $i8 = $i7 / $i6;

        $i10 = $i9 * $i8;

        $i11 = start#1 + $i10;

        result#10[i#15] = $i11;

        $i12 = result#10[i#15];

        $i13 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, 'from', $i12);

        $i14 = result#10[i#15];

        $i15 = staticinvoke <com.googlecode.pngtastic.core.processing.zopfli.Deflate: int calculateBlockSize(com.googlecode.pngtastic.core.processing.zopfli.Cookie,char[],char[],int,int)>(cookie, litLens, dists, $i14, 'to');

        $i16 = $i13 + $i15;

        i#11[i#15] = $i16;

        i#15 = i#15 + 1;

        goto label13;

     label14:
        i#16 = 0;

        best#17 = i#11[0];

        i#18 = 1;

     label15:
        if i#18 >= best#9 goto label19;

        $i5 = i#11[i#18];

        if $i5 >= best#17 goto label16;

        $z8 = 1;

        goto label17;

     label16:
        $z8 = 0;

     label17:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z3 == 0 goto label18;

        best#17 = i#11[i#18];

        i#16 = i#18;

     label18:
        i#18 = i#18 + 1;

        goto label15;

     label19:
        if best#17 <= v#12 goto label20;

        $z9 = 1;

        goto label21;

     label20:
        $z9 = 0;

     label21:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z9);

        if $z2 == 0 goto label22;

        goto label27;

     label22:
        if i#16 != 0 goto label23;

        $i19 = start#1;

        goto label24;

     label23:
        $i2 = i#16 - 1;

        $i19 = result#10[$i2];

     label24:
        start#1 = $i19;

        $i3 = best#9 - 1;

        if i#16 != $i3 goto label25;

        $i20 = end#2;

        goto label26;

     label25:
        $i4 = i#16 + 1;

        $i20 = result#10[$i4];

     label26:
        end#2 = $i20;

        pos#13 = result#10[i#16];

        v#12 = best#17;

        goto label09;

     label27:
        return pos#13;
    }


