    public void <init>(java.util.Map, java.lang.String, java.lang.Object, org.prevayler.implementation.PrevaylerDirectory, org.prevayler.foundation.serialization.Serializer) throws java.lang.Exception
    {
        org.prevayler.implementation.snapshot.GenericSnapshotManager this;
        java.util.Map snapshotSerializers;
        java.lang.String primarySnapshotSuffix, suffix, $r7;
        java.lang.Object newPrevalentSystem, recoveredPrevalentSystem, $r1, $r10;
        org.prevayler.implementation.PrevaylerDirectory directory, $r8, $r9;
        org.prevayler.foundation.serialization.Serializer journalSerializer;
        java.util.Iterator iterator;
        java.io.File latestSnapshot;
        long recoveredVersion, $l0;
        java.util.Set $r0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        org.prevayler.implementation.PrevalentSystemGuard $r11;

        this := @this: org.prevayler.implementation.snapshot.GenericSnapshotManager;

        snapshotSerializers := @parameter0: java.util.Map;

        primarySnapshotSuffix := @parameter1: java.lang.String;

        newPrevalentSystem := @parameter2: java.lang.Object;

        directory := @parameter3: org.prevayler.implementation.PrevaylerDirectory;

        journalSerializer := @parameter4: org.prevayler.foundation.serialization.Serializer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = interfaceinvoke snapshotSerializers.<java.util.Map: java.util.Set keySet()>();

        iterator = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        suffix = (java.lang.String) $r1;

        staticinvoke <org.prevayler.implementation.PrevaylerDirectory: void checkValidSnapshotSuffix(java.lang.String)>(suffix);

        goto label1;

     label2:
        $z1 = interfaceinvoke snapshotSerializers.<java.util.Map: boolean containsKey(java.lang.Object)>(primarySnapshotSuffix);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Primary suffix \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(primarySnapshotSuffix);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not appear in strategies map");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.util.Map _strategies> = snapshotSerializers;

        this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.String _primarySuffix> = primarySnapshotSuffix;

        this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevaylerDirectory _directory> = directory;

        $r8 = this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevaylerDirectory _directory>;

        virtualinvoke $r8.<org.prevayler.implementation.PrevaylerDirectory: void produceDirectory()>();

        $r9 = this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevaylerDirectory _directory>;

        latestSnapshot = virtualinvoke $r9.<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(latestSnapshot);

        if latestSnapshot != null goto label4;

        $l0 = 0L;

        goto label5;

     label4:
        $l0 = staticinvoke <org.prevayler.implementation.PrevaylerDirectory: long snapshotVersion(java.io.File)>(latestSnapshot);

     label5:
        recoveredVersion = $l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(latestSnapshot);

        if latestSnapshot != null goto label6;

        $r10 = newPrevalentSystem;

        goto label7;

     label6:
        $r10 = specialinvoke this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>(latestSnapshot);

     label7:
        recoveredPrevalentSystem = $r10;

        $r11 = new org.prevayler.implementation.PrevalentSystemGuard;

        specialinvoke $r11.<org.prevayler.implementation.PrevalentSystemGuard: void <init>(java.lang.Object,long,org.prevayler.foundation.serialization.Serializer)>(recoveredPrevalentSystem, recoveredVersion, journalSerializer);

        this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard _recoveredPrevalentSystem> = $r11;

        return;
    }

    private java.lang.Object readSnapshot(java.io.File) throws java.lang.Exception
    {
        org.prevayler.implementation.snapshot.GenericSnapshotManager this;
        java.io.File snapshotFile;
        java.lang.String suffix, $r0, $r1, $r5, $r10, $r13;
        org.prevayler.foundation.serialization.Serializer serializer;
        java.io.FileInputStream in, $r16;
        java.lang.Object l5, $r15;
        java.lang.Throwable l6, $r17;
        int $i0, $i1;
        java.util.Map $r2, $r8, $r14;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r11, $r12;
        java.util.Set $r9;

        this := @this: org.prevayler.implementation.snapshot.GenericSnapshotManager;

        snapshotFile := @parameter0: java.io.File;

        $r0 = virtualinvoke snapshotFile.<java.io.File: java.lang.String getName()>();

        $r1 = virtualinvoke snapshotFile.<java.io.File: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

        $i1 = $i0 + 1;

        suffix = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.util.Map _strategies>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(suffix);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke snapshotFile.<java.io.File: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read; only ");

        $r8 = this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.util.Map _strategies>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" supported");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label1:
        $r14 = this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.util.Map _strategies>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(suffix);

        serializer = (org.prevayler.foundation.serialization.Serializer) $r15;

        $r16 = new java.io.FileInputStream;

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.io.File)>(snapshotFile);

        in = $r16;

     label2:
        l5 = interfaceinvoke serializer.<org.prevayler.foundation.serialization.Serializer: java.lang.Object readObject(java.io.InputStream)>(in);

     label3:
        virtualinvoke in.<java.io.FileInputStream: void close()>();

        return l5;

     label4:
        $r17 := @caughtexception;

     label5:
        l6 = $r17;

     label6:
        virtualinvoke in.<java.io.FileInputStream: void close()>();

        throw l6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()
    {
        org.prevayler.implementation.snapshot.GenericSnapshotManager this;
        org.prevayler.implementation.PrevalentSystemGuard $r0;

        this := @this: org.prevayler.implementation.snapshot.GenericSnapshotManager;

        $r0 = this.<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard _recoveredPrevalentSystem>;

        return $r0;
    }


