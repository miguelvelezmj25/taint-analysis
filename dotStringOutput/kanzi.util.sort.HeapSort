digraph sort {
"this := @this: kanzi.util.sort.HeapSort {342882059}" -> "input := @parameter0: int[] {86276314}";
"input := @parameter0: int[] {86276314}" -> "blkptr := @parameter1: int {1728344274}";
"blkptr := @parameter1: int {1728344274}" -> "len := @parameter2: int {1331446014}";
"len := @parameter2: int {1331446014}" -> "if blkptr < 0 goto return 0 {1848479503}";
"if blkptr < 0 goto return 0 {1848479503}" -> "if len <= 0 goto return 0 {2113501709}";
"if blkptr < 0 goto return 0 {1848479503}" -> "return 0 {361953250}";
"if len <= 0 goto return 0 {2113501709}" -> "$i0 = blkptr + len {415230632}";
"if len <= 0 goto return 0 {2113501709}" -> "return 0 {361953250}";
"$i0 = blkptr + len {415230632}" -> "$i1 = lengthof input {670342394}";
"$i1 = lengthof input {670342394}" -> "if $i0 <= $i1 goto (branch) {257906491}";
"if $i0 <= $i1 goto (branch) {257906491}" -> "return 0 {361953250}";
"if $i0 <= $i1 goto (branch) {257906491}" -> "if len != 1 goto k#15 = len >> 1 {462241700}";
"if len != 1 goto k#15 = len >> 1 {462241700}" -> "return 1 {452209288}";
"if len != 1 goto k#15 = len >> 1 {462241700}" -> "k#15 = len >> 1 {1618692609}";
"k#15 = len >> 1 {1618692609}" -> "if k#15 <= 0 goto i#26 = len - 1 {1034716407}";
"if k#15 <= 0 goto i#26 = len - 1 {1034716407}" -> "$r0 = this.<kanzi.util.sort.HeapSort: kanzi.ArrayComparator 'cmp'> {1053277257}";
"if k#15 <= 0 goto i#26 = len - 1 {1034716407}" -> "i#26 = len - 1 {2055460685}";
"$r0 = this.<kanzi.util.sort.HeapSort: kanzi.ArrayComparator 'cmp'> {1053277257}" -> "staticinvoke <kanzi.util.sort.HeapSort: void doSort(int[],int,int,int,kanzi.ArrayComparator)>(input, blkptr, k#15, len, $r0) {41261334}";
"staticinvoke <kanzi.util.sort.HeapSort: void doSort(int[],int,int,int,kanzi.ArrayComparator)>(input, blkptr, k#15, len, $r0) {41261334}" -> "k#15 = k#15 + -1 {349816683}";
"k#15 = k#15 + -1 {349816683}" -> "goto [?= (branch)] {950560687}";
"goto [?= (branch)] {950560687}" -> "if k#15 <= 0 goto i#26 = len - 1 {1034716407}";
"i#26 = len - 1 {2055460685}" -> "if i#26 <= 0 goto return 1 {1666731459}";
"if i#26 <= 0 goto return 1 {1666731459}" -> "temp = input[blkptr] {431317416}";
"if i#26 <= 0 goto return 1 {1666731459}" -> "return 1 {1750890224}";
"temp = input[blkptr] {431317416}" -> "$i2 = blkptr + i#26 {1144414136}";
"$i2 = blkptr + i#26 {1144414136}" -> "$i3 = input[$i2] {1741583953}";
"$i3 = input[$i2] {1741583953}" -> "input[blkptr] = $i3 {575624949}";
"input[blkptr] = $i3 {575624949}" -> "$i4 = blkptr + i#26 {24506743}";
"$i4 = blkptr + i#26 {24506743}" -> "input[$i4] = temp {491698696}";
"input[$i4] = temp {491698696}" -> "$r1 = this.<kanzi.util.sort.HeapSort: kanzi.ArrayComparator 'cmp'> {1086593283}";
"$r1 = this.<kanzi.util.sort.HeapSort: kanzi.ArrayComparator 'cmp'> {1086593283}" -> "staticinvoke <kanzi.util.sort.HeapSort: void doSort(int[],int,int,int,kanzi.ArrayComparator)>(input, blkptr, 1, i#26, $r1) {452474986}";
"staticinvoke <kanzi.util.sort.HeapSort: void doSort(int[],int,int,int,kanzi.ArrayComparator)>(input, blkptr, 1, i#26, $r1) {452474986}" -> "i#26 = i#26 + -1 {466467897}";
"i#26 = i#26 + -1 {466467897}" -> "goto [?= (branch)] {1397761277}";
"goto [?= (branch)] {1397761277}" -> "if i#26 <= 0 goto return 1 {1666731459}";
}

digraph doSort {
"array := @parameter0: int[] {1844394065}" -> "blkptr := @parameter1: int {178811189}";
"blkptr := @parameter1: int {178811189}" -> "idx := @parameter2: int {1493783420}";
"idx := @parameter2: int {1493783420}" -> "count := @parameter3: int {784945315}";
"count := @parameter3: int {784945315}" -> "cmp := @parameter4: kanzi.ArrayComparator {1988787888}";
"cmp := @parameter4: kanzi.ArrayComparator {1988787888}" -> "k#2 = idx {1648148375}";
"k#2 = idx {1648148375}" -> "$i0 = blkptr + k#2 {2121953003}";
"$i0 = blkptr + k#2 {2121953003}" -> "$i1 = $i0 - 1 {1200111819}";
"$i1 = $i0 - 1 {1200111819}" -> "temp = array[$i1] {668369322}";
"temp = array[$i1] {668369322}" -> "n = count >> 1 {1460043813}";
"n = count >> 1 {1460043813}" -> "if cmp == null goto (branch) {75316555}";
"if cmp == null goto (branch) {75316555}" -> "if k#2 > n goto $i29 = blkptr + k#2 {1584586356}";
"if cmp == null goto (branch) {75316555}" -> "if k#2 > n goto $i29 = blkptr + k#2 {211776841}";
"if k#2 > n goto $i29 = blkptr + k#2 {1584586356}" -> "j#19 = k#2 << 1 {1328454092}";
"if k#2 > n goto $i29 = blkptr + k#2 {1584586356}" -> "$i29 = blkptr + k#2 {1840368293}";
"j#19 = k#2 << 1 {1328454092}" -> "if j#19 >= count goto $i8 = blkptr + j#19 {2071571836}";
"if j#19 >= count goto $i8 = blkptr + j#19 {2071571836}" -> "$i2 = blkptr + j#19 {50837631}";
"if j#19 >= count goto $i8 = blkptr + j#19 {2071571836}" -> "$i8 = blkptr + j#19 {313654303}";
"$i2 = blkptr + j#19 {50837631}" -> "$i3 = $i2 - 1 {395464517}";
"$i3 = $i2 - 1 {395464517}" -> "$i4 = array[$i3] {1928927171}";
"$i4 = array[$i3] {1928927171}" -> "$i5 = blkptr + j#19 {97512761}";
"$i5 = blkptr + j#19 {97512761}" -> "$i6 = array[$i5] {1628772537}";
"$i6 = array[$i5] {1628772537}" -> "$i7 = interfaceinvoke cmp.<kanzi.ArrayComparator: int compare(int,int)>($i4, $i6) {1826123054}";
"$i7 = interfaceinvoke cmp.<kanzi.ArrayComparator: int compare(int,int)>($i4, $i6) {1826123054}" -> "if $i7 >= 0 goto $i8 = blkptr + j#19 {823255168}";
"if $i7 >= 0 goto $i8 = blkptr + j#19 {823255168}" -> "j#19 = j#19 + 1 {1263363518}";
"if $i7 >= 0 goto $i8 = blkptr + j#19 {823255168}" -> "$i8 = blkptr + j#19 {313654303}";
"j#19 = j#19 + 1 {1263363518}" -> "$i8 = blkptr + j#19 {313654303}";
"$i8 = blkptr + j#19 {313654303}" -> "$i9 = $i8 - 1 {1937630872}";
"$i9 = $i8 - 1 {1937630872}" -> "$i10 = array[$i9] {1323007137}";
"$i10 = array[$i9] {1323007137}" -> "if temp < $i10 goto $i11 = blkptr + k#2 {1402413153}";
"if temp < $i10 goto $i11 = blkptr + k#2 {1402413153}" -> "goto [?= $i29 = blkptr + k#2] {144278799}";
"if temp < $i10 goto $i11 = blkptr + k#2 {1402413153}" -> "$i11 = blkptr + k#2 {795631114}";
"goto [?= $i29 = blkptr + k#2] {144278799}" -> "$i29 = blkptr + k#2 {1840368293}";
"$i11 = blkptr + k#2 {795631114}" -> "$i12 = $i11 - 1 {1615466882}";
"$i12 = $i11 - 1 {1615466882}" -> "$i13 = blkptr + j#19 {327525883}";
"$i13 = blkptr + j#19 {327525883}" -> "$i14 = $i13 - 1 {1380356582}";
"$i14 = $i13 - 1 {1380356582}" -> "$i15 = array[$i14] {1782386430}";
"$i15 = array[$i14] {1782386430}" -> "array[$i12] = $i15 {1412023359}";
"array[$i12] = $i15 {1412023359}" -> "k#2 = j#19 {156942934}";
"k#2 = j#19 {156942934}" -> "goto [?= (branch)] {185759613}";
"goto [?= (branch)] {185759613}" -> "if k#2 > n goto $i29 = blkptr + k#2 {1584586356}";
"if k#2 > n goto $i29 = blkptr + k#2 {211776841}" -> "j#63 = k#2 << 1 {1633578360}";
"if k#2 > n goto $i29 = blkptr + k#2 {211776841}" -> "$i29 = blkptr + k#2 {1840368293}";
"j#63 = k#2 << 1 {1633578360}" -> "if j#63 >= count goto $i21 = blkptr + j#63 {436579274}";
"if j#63 >= count goto $i21 = blkptr + j#63 {436579274}" -> "$i16 = blkptr + j#63 {2036430850}";
"if j#63 >= count goto $i21 = blkptr + j#63 {436579274}" -> "$i21 = blkptr + j#63 {1679341004}";
"$i16 = blkptr + j#63 {2036430850}" -> "$i17 = $i16 - 1 {801449201}";
"$i17 = $i16 - 1 {801449201}" -> "$i18 = array[$i17] {258470586}";
"$i18 = array[$i17] {258470586}" -> "$i19 = blkptr + j#63 {1796688365}";
"$i19 = blkptr + j#63 {1796688365}" -> "$i20 = array[$i19] {934177657}";
"$i20 = array[$i19] {934177657}" -> "if $i18 >= $i20 goto $i21 = blkptr + j#63 {1685292175}";
"if $i18 >= $i20 goto $i21 = blkptr + j#63 {1685292175}" -> "j#63 = j#63 + 1 {323069796}";
"if $i18 >= $i20 goto $i21 = blkptr + j#63 {1685292175}" -> "$i21 = blkptr + j#63 {1679341004}";
"j#63 = j#63 + 1 {323069796}" -> "$i21 = blkptr + j#63 {1679341004}";
"$i21 = blkptr + j#63 {1679341004}" -> "$i22 = $i21 - 1 {1634702719}";
"$i22 = $i21 - 1 {1634702719}" -> "$i23 = array[$i22] {401940223}";
"$i23 = array[$i22] {401940223}" -> "if temp < $i23 goto $i24 = blkptr + k#2 {912420632}";
"if temp < $i23 goto $i24 = blkptr + k#2 {912420632}" -> "goto [?= $i29 = blkptr + k#2] {1459616938}";
"if temp < $i23 goto $i24 = blkptr + k#2 {912420632}" -> "$i24 = blkptr + k#2 {2023208204}";
"goto [?= $i29 = blkptr + k#2] {1459616938}" -> "$i29 = blkptr + k#2 {1840368293}";
"$i24 = blkptr + k#2 {2023208204}" -> "$i25 = $i24 - 1 {680651200}";
"$i25 = $i24 - 1 {680651200}" -> "$i26 = blkptr + j#63 {648146847}";
"$i26 = blkptr + j#63 {648146847}" -> "$i27 = $i26 - 1 {877018393}";
"$i27 = $i26 - 1 {877018393}" -> "$i28 = array[$i27] {2073829309}";
"$i28 = array[$i27] {2073829309}" -> "array[$i25] = $i28 {1382599238}";
"array[$i25] = $i28 {1382599238}" -> "k#2 = j#63 {888029507}";
"k#2 = j#63 {888029507}" -> "goto [?= (branch)] {798278036}";
"goto [?= (branch)] {798278036}" -> "if k#2 > n goto $i29 = blkptr + k#2 {211776841}";
"$i29 = blkptr + k#2 {1840368293}" -> "$i30 = $i29 - 1 {809951165}";
"$i30 = $i29 - 1 {809951165}" -> "array[$i30] = temp {913970198}";
"array[$i30] = temp {913970198}" -> "return {83254067}";
}


