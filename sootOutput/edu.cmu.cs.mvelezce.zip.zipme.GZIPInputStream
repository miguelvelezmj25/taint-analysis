    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        java.io.InputStream in;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        in := @parameter0: java.io.InputStream;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void <init>(java.io.InputStream,int)>(in, 4096);

        return;
    }

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        java.io.InputStream in;
        int size;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        in := @parameter0: java.io.InputStream;

        size := @parameter1: int;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.Inflater;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: void <init>(boolean)>(1);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void <init>(java.io.InputStream,edu.cmu.cs.mvelezce.zip.zipme.Inflater,int)>(in, $r0, size);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook()>();

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void readHeader()>();

        return;
    }

    public void hook()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook__role__DerivativeGZIPCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook__before__DerivativeGZIPCRC()>();

     label2:
        return;
    }

    private void readHeader() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int magic, magic2, CM, flags, len1, len2, extraLen, readByte, tempByte, $i0, $i1, $i2, $i3, $i4, i#69, readByte#75, $i5, i#90, readByte#96, $i6, $i7, $i8, i#139, $i9, $i10, readByte#162, $i11, $i12, readByte#182, $i13, crcval#201, $i14, crcval#222;
        java.io.InputStream $r0, $r1, $r7, $r9, $r12, $r14, $r16, $r17, $r19, $r20, $r22, $r24, $r26, $r28, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35;
        java.io.IOException $r2, $r8, $r11;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.io.EOFException $r10, $r13, $r15, $r18, $r21, $r23, $r25, $r27, $r29, $r31;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook1()>();

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        magic = virtualinvoke $r0.<java.io.InputStream: int read()>();

        if magic >= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: boolean eos> = 1;

        return;

     label03:
        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        magic2 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i0 = magic2 << 8;

        $i1 = magic + $i0;

        if $i1 == 35615 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in GZIP header, bad magic code code is ");

        $i2 = magic2 << 8;

        $i3 = magic + $i2;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label06:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(magic);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(magic2);

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        CM = virtualinvoke $r7.<java.io.InputStream: int read()>();

        if CM == 8 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label09;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Error in GZIP header, data not in deflate format");

        throw $r8;

     label09:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(CM);

        $r9 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        flags = virtualinvoke $r9.<java.io.InputStream: int read()>();

        if flags >= 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label12;

        $r10 = new java.io.EOFException;

        specialinvoke $r10.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r10;

     label12:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(flags);

        $i4 = flags & 208;

        if $i4 == 0 goto label13;

        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label15;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Reserved flag bits in GZIP header != 0");

        throw $r11;

     label15:
        i#69 = 0;

     label16:
        if i#69 >= 6 goto label20;

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        readByte#75 = virtualinvoke $r12.<java.io.InputStream: int read()>();

        if readByte#75 >= 0 goto label17;

        $z10 = 1;

        goto label18;

     label17:
        $z10 = 0;

     label18:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label19;

        $r13 = new java.io.EOFException;

        specialinvoke $r13.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r13;

     label19:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte#75);

        i#69 = i#69 + 1;

        goto label16;

     label20:
        $i5 = flags & 4;

        if $i5 == 0 goto label21;

        $z12 = 1;

        goto label22;

     label21:
        $z12 = 0;

     label22:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label40;

        i#90 = 0;

     label23:
        if i#90 >= 2 goto label27;

        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        readByte#96 = virtualinvoke $r14.<java.io.InputStream: int read()>();

        if readByte#96 >= 0 goto label24;

        $z14 = 1;

        goto label25;

     label24:
        $z14 = 0;

     label25:
        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label26;

        $r15 = new java.io.EOFException;

        specialinvoke $r15.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r15;

     label26:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte#96);

        i#90 = i#90 + 1;

        goto label23;

     label27:
        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        $i6 = virtualinvoke $r16.<java.io.InputStream: int read()>();

        if $i6 < 0 goto label28;

        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        $i7 = virtualinvoke $r17.<java.io.InputStream: int read()>();

        if $i7 >= 0 goto label29;

     label28:
        $z16 = 1;

        goto label30;

     label29:
        $z16 = 0;

     label30:
        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z17 == 0 goto label31;

        $r18 = new java.io.EOFException;

        specialinvoke $r18.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r18;

     label31:
        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        len1 = virtualinvoke $r19.<java.io.InputStream: int read()>();

        $r20 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        len2 = virtualinvoke $r20.<java.io.InputStream: int read()>();

        if len1 < 0 goto label32;

        if len2 >= 0 goto label33;

     label32:
        $z18 = 1;

        goto label34;

     label33:
        $z18 = 0;

     label34:
        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z18);

        if $z19 == 0 goto label35;

        $r21 = new java.io.EOFException;

        specialinvoke $r21.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r21;

     label35:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(len1);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(len2);

        $i8 = len1 << 8;

        extraLen = $i8 | len2;

        i#139 = 0;

     label36:
        if i#139 >= extraLen goto label40;

        $r22 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        readByte = virtualinvoke $r22.<java.io.InputStream: int read()>();

        if readByte >= 0 goto label37;

        $z20 = 1;

        goto label38;

     label37:
        $z20 = 0;

     label38:
        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z21 == 0 goto label39;

        $r23 = new java.io.EOFException;

        specialinvoke $r23.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r23;

     label39:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte);

        i#139 = i#139 + 1;

        goto label36;

     label40:
        $i9 = flags & 8;

        if $i9 == 0 goto label41;

        $z22 = 1;

        goto label42;

     label41:
        $z22 = 0;

     label42:
        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z22);

        if $z23 == 0 goto label48;

     label43:
        $r24 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        $i10 = virtualinvoke $r24.<java.io.InputStream: int read()>();

        readByte#162 = $i10;

        if $i10 <= 0 goto label44;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte#162);

        goto label43;

     label44:
        if readByte#162 >= 0 goto label45;

        $z24 = 1;

        goto label46;

     label45:
        $z24 = 0;

     label46:
        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z24);

        if $z25 == 0 goto label47;

        $r25 = new java.io.EOFException;

        specialinvoke $r25.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP file name");

        throw $r25;

     label47:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte#162);

     label48:
        $i11 = flags & 16;

        if $i11 == 0 goto label49;

        $z26 = 1;

        goto label50;

     label49:
        $z26 = 0;

     label50:
        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z26);

        if $z27 == 0 goto label56;

     label51:
        $r26 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        $i12 = virtualinvoke $r26.<java.io.InputStream: int read()>();

        readByte#182 = $i12;

        if $i12 <= 0 goto label52;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte#182);

        goto label51;

     label52:
        if readByte#182 >= 0 goto label53;

        $z28 = 1;

        goto label54;

     label53:
        $z28 = 0;

     label54:
        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        if $z29 == 0 goto label55;

        $r27 = new java.io.EOFException;

        specialinvoke $r27.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP comment");

        throw $r27;

     label55:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2(int)>(readByte#182);

     label56:
        $i13 = flags & 2;

        if $i13 == 0 goto label57;

        $z30 = 1;

        goto label58;

     label57:
        $z30 = 0;

     label58:
        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z30);

        if $z31 == 0 goto label65;

        $r28 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        crcval#201 = virtualinvoke $r28.<java.io.InputStream: int read()>();

        if crcval#201 >= 0 goto label59;

        $z32 = 1;

        goto label60;

     label59:
        $z32 = 0;

     label60:
        $z33 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z32);

        if $z33 == 0 goto label61;

        $r29 = new java.io.EOFException;

        specialinvoke $r29.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r29;

     label61:
        $r30 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        tempByte = virtualinvoke $r30.<java.io.InputStream: int read()>();

        if tempByte >= 0 goto label62;

        $z34 = 1;

        goto label63;

     label62:
        $z34 = 0;

     label63:
        $z35 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z34);

        if $z35 == 0 goto label64;

        $r31 = new java.io.EOFException;

        specialinvoke $r31.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP header");

        throw $r31;

     label64:
        $i14 = crcval#201 << 8;

        crcval#222 = $i14 | tempByte;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook3(int)>(crcval#222);

     label65:
        this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: boolean readGZIPHeader> = 1;

        return;
    }

    private void hook1()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook1__role__DerivativeGZIPCRC()>();

        goto label2;

     label1:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook1__before__DerivativeGZIPCRC()>();

     label2:
        return;
    }

    public void hook2(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int CM;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        CM := @parameter0: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2__role__DerivativeGZIPCRC(int)>(CM);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2__before__DerivativeGZIPCRC(int)>(CM);

     label2:
        return;
    }

    public void hook3(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int crcval;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        crcval := @parameter0: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook3__role__DerivativeGZIPCRC(int)>(crcval);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook3__before__DerivativeGZIPCRC(int)>(crcval);

     label2:
        return;
    }

    public void hook3__role__DerivativeGZIPCRC(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int crcval, $i1, $i2;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;
        long $l0;
        boolean $z0, $z1;
        java.io.IOException $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        crcval := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 headCRC>;

        $l0 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        $i1 = (int) $l0;

        $i2 = $i1 & 65535;

        if crcval == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Header CRC value mismatch");

        throw $r1;

     label3:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook3__before__DerivativeGZIPCRC(int)>(crcval);

        return;
    }

    public void hook3__before__DerivativeGZIPCRC(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int crcval;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        crcval := @parameter0: int;

        return;
    }

    public void hook2__role__DerivativeGZIPCRC(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int CM;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        CM := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 headCRC>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void update(int)>(CM);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook2__before__DerivativeGZIPCRC(int)>(CM);

        return;
    }

    public void hook2__before__DerivativeGZIPCRC(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int CM;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        CM := @parameter0: int;

        return;
    }

    private void hook1__role__DerivativeGZIPCRC()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 headCRC> = $r0;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook1__before__DerivativeGZIPCRC()>();

        return;
    }

    private void hook1__before__DerivativeGZIPCRC()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        return;
    }

    public void hook__role__DerivativeGZIPCRC()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc> = $r0;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook__before__DerivativeGZIPCRC()>();

        return;
    }

    public void hook__before__DerivativeGZIPCRC()
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        return;
    }

    public void close() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void close()>();

        return;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        byte[] buf;
        int offset, len, numRead;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        buf := @parameter0: byte[];

        offset := @parameter1: int;

        len := @parameter2: int;

        $z0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: boolean readGZIPHeader>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z1);

        if $z2 == 0 goto label3;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void readHeader()>();

     label3:
        $z3 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: boolean eos>;

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        if $z4 == 0 goto label4;

        return -1;

     label4:
        numRead = specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int read(byte[],int,int)>(buf, offset, len);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook30(byte[],int,int)>(buf, offset, numRead);

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $z5 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: boolean finished()>();

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z6 == 0 goto label5;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void readFooter()>();

     label5:
        return numRead;
    }

    protected void hook30(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        byte[] buf;
        int offset, numRead;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        buf := @parameter0: byte[];

        offset := @parameter1: int;

        numRead := @parameter2: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook30__role__DerivativeGZIPCRC(byte[],int,int)>(buf, offset, numRead);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook30__before__DerivativeGZIPCRC(byte[],int,int)>(buf, offset, numRead);

     label2:
        return;
    }

    private void readFooter() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        byte[] footer, $r1;
        int count, crcval, total, avail#6, $i0, $i1, $i2, needed#25, $i3, $i8, $i9, $i12, $i13, $i15, $i20, $i21, $i24, $i25, $i27, $i28;
        edu.cmu.cs.mvelezce.zip.zipme.Inflater $r0, $r2, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.InputStream $r3;
        java.io.EOFException $r4;
        byte $b4, $b6, $b10, $b14, $b16, $b18, $b22, $b26;
        short $s5, $s7, $s11, $s17, $s19, $s23;
        java.io.IOException $r6;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        footer = newarray (byte)[8];

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        avail#6 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getRemaining()>();

        if avail#6 <= 8 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        avail#6 = 8;

     label03:
        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: byte[] buf>;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: int len>;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i1 = virtualinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getRemaining()>();

        $i2 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, footer, 0, avail#6);

        needed#25 = 8 - avail#6;

     label04:
        if needed#25 <= 0 goto label08;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: java.io.InputStream in>;

        $i3 = 8 - needed#25;

        count = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(footer, $i3, needed#25);

        if count > 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label07;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>("Early EOF in GZIP footer");

        throw $r4;

     label07:
        needed#25 = needed#25 - count;

        goto label04;

     label08:
        $b4 = footer[0];

        $s5 = $b4 & 255;

        $b6 = footer[1];

        $s7 = $b6 & 255;

        $i8 = $s7 << 8;

        $i9 = $s5 | $i8;

        $b10 = footer[2];

        $s11 = $b10 & 255;

        $i12 = $s11 << 16;

        $i13 = $i9 | $i12;

        $b14 = footer[3];

        $i15 = $b14 << 24;

        crcval = $i13 | $i15;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook4(int)>(crcval);

        $b16 = footer[4];

        $s17 = $b16 & 255;

        $b18 = footer[5];

        $s19 = $b18 & 255;

        $i20 = $s19 << 8;

        $i21 = $s17 | $i20;

        $b22 = footer[6];

        $s23 = $b22 & 255;

        $i24 = $s23 << 16;

        $i25 = $i21 | $i24;

        $b26 = footer[7];

        $i27 = $b26 << 24;

        total = $i25 | $i27;

        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.Inflater inf>;

        $i28 = virtualinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.Inflater: int getTotalOut()>();

        if total == $i28 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label11;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Number of bytes mismatch");

        throw $r6;

     label11:
        this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: boolean eos> = 1;

        return;
    }

    public void hook4(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int crcval;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        crcval := @parameter0: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook4__role__DerivativeGZIPCRC(int)>(crcval);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook4__before__DerivativeGZIPCRC(int)>(crcval);

     label2:
        return;
    }

    public void hook4__role__DerivativeGZIPCRC(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int crcval, $i1, $i3;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0, $r7;
        long $l0, $l2;
        boolean $z0, $z1;
        java.io.IOException $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r9;
        java.lang.String $r4, $r8, $r10;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        crcval := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        $l0 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        $i1 = (int) $l0;

        if crcval == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GZIP crc sum mismatch, theirs \"");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(crcval);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" and ours \"");

        $r7 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        $l2 = virtualinvoke $r7.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        $i3 = (int) $l2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r1;

     label3:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook4__before__DerivativeGZIPCRC(int)>(crcval);

        return;
    }

    public void hook4__before__DerivativeGZIPCRC(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        int crcval;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        crcval := @parameter0: int;

        return;
    }

    protected void hook30__role__DerivativeGZIPCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        byte[] buf;
        int offset, numRead;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        buf := @parameter0: byte[];

        offset := @parameter1: int;

        numRead := @parameter2: int;

        if numRead <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void update(byte[],int,int)>(buf, offset, numRead);

     label3:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void hook30__before__DerivativeGZIPCRC(byte[],int,int)>(buf, offset, numRead);

        return;
    }

    protected void hook30__before__DerivativeGZIPCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream this;
        byte[] buf;
        int offset, numRead;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        buf := @parameter0: byte[];

        offset := @parameter1: int;

        numRead := @parameter2: int;

        return;
    }


