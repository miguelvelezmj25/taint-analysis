    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/cleaner/FilesToMigrate";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.cleaner.FilesToMigrate: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.cleaner.FilesToMigrate this;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        java.lang.String forceCleanProp;
        com.sleepycat.je.config.IntConfigParam $r0;
        com.sleepycat.je.dbi.DbConfigManager $r1, $r3;
        com.sleepycat.je.config.ConfigParam $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        this := @this: com.sleepycat.je.cleaner.FilesToMigrate;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.cleaner.FilesToMigrate: com.sleepycat.je.dbi.EnvironmentImpl env> = env;

        $r1 = virtualinvoke env.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r2 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.ConfigParam CLEANER_FORCE_CLEAN_FILES>;

        forceCleanProp = virtualinvoke $r1.<com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(com.sleepycat.je.config.ConfigParam)>($r2);

        specialinvoke this.<com.sleepycat.je.cleaner.FilesToMigrate: void parseForceCleanFiles(java.lang.String)>(forceCleanProp);

        $r3 = virtualinvoke env.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r0 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam CLEANER_UPGRADE_TO_LOG_VERSION>;

        $i0 = virtualinvoke $r3.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r0);

        this.<com.sleepycat.je.cleaner.FilesToMigrate: int upgradeToVersion> = $i0;

        $i1 = this.<com.sleepycat.je.cleaner.FilesToMigrate: int upgradeToVersion>;

        if $i1 != -1 goto label1;

        this.<com.sleepycat.je.cleaner.FilesToMigrate: int upgradeToVersion> = 14;

     label1:
        $i2 = this.<com.sleepycat.je.cleaner.FilesToMigrate: int upgradeToVersion>;

        if $i2 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        this.<com.sleepycat.je.cleaner.FilesToMigrate: boolean checkLogVersion> = $z0;

        this.<com.sleepycat.je.cleaner.FilesToMigrate: boolean nextAvailable> = 0;

        this.<com.sleepycat.je.cleaner.FilesToMigrate: long nextFile> = -1L;

        return;
    }

    private void parseForceCleanFiles(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.sleepycat.je.cleaner.FilesToMigrate this;
        java.lang.String propValue, errPrefix, fromStr, delim, toStr, $r3, $r16, $r17, $r18, $r25, $r31, $r37;
        java.util.StringTokenizer tokens, $r8;
        java.util.ArrayList list, $r9;
        long fromNum, toNum#46, toNum#55, $l4;
        java.lang.NumberFormatException e, e, $r10, $r19;
        int $i0, $i2, i#120, $i3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36;
        com.sleepycat.je.config.ConfigParam $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r11, $r20, $r26, $r32;
        byte $b1;
        java.lang.AssertionError $r38;
        java.lang.Long $r39, $r40, $r45;
        long[] $r41, $r42, $r43;
        java.lang.Object $r44;

        this := @this: com.sleepycat.je.cleaner.FilesToMigrate;

        propValue := @parameter0: java.lang.String;

        if propValue == null goto label01;

        $i0 = virtualinvoke propValue.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        this.<com.sleepycat.je.cleaner.FilesToMigrate: long[] forceCleanFiles> = null;

        goto label21;

     label02:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in ");

        $r2 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.ConfigParam CLEANER_FORCE_CLEAN_FILES>;

        $r3 = virtualinvoke $r2.<com.sleepycat.je.config.ConfigParam: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(propValue);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        errPrefix = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(propValue, ",-", 1);

        tokens = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        list = $r9;

     label03:
        $z0 = virtualinvoke tokens.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label19;

        fromStr = virtualinvoke tokens.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label04:
        fromNum = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(fromStr, 16);

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

        e = $r10;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(errPrefix);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex file number: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fromStr);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label07:
        toNum#46 = -1L;

        $z1 = virtualinvoke tokens.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label16;

        delim = virtualinvoke tokens.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r17 = ",";

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(delim);

        if $z2 == 0 goto label08;

        toNum#55 = fromNum;

        goto label15;

     label08:
        $r18 = "-";

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(delim);

        if $z3 == 0 goto label14;

        $z4 = virtualinvoke tokens.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label13;

        toStr = virtualinvoke tokens.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label09:
        toNum#55 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(toStr, 16);

     label10:
        goto label12;

     label11:
        $r19 := @caughtexception;

        e = $r19;

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(errPrefix);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex file number: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(toStr);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label12:
        goto label15;

     label13:
        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(errPrefix);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected file number: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(delim);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r26;

     label14:
        $r32 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(errPrefix);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'-\' or \',\': ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(delim);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label15:
        goto label17;

     label16:
        toNum#55 = fromNum;

     label17:
        $z5 = <com.sleepycat.je.cleaner.FilesToMigrate: boolean $assertionsDisabled>;

        if $z5 != 0 goto label18;

        $b1 = toNum#55 cmp -1L;

        if $b1 != 0 goto label18;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label18:
        $r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fromNum);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r39);

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(toNum#55);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r40);

        goto label03;

     label19:
        $i2 = interfaceinvoke list.<java.util.List: int size()>();

        $r41 = newarray (long)[$i2];

        this.<com.sleepycat.je.cleaner.FilesToMigrate: long[] forceCleanFiles> = $r41;

        i#120 = 0;

     label20:
        $r42 = this.<com.sleepycat.je.cleaner.FilesToMigrate: long[] forceCleanFiles>;

        $i3 = lengthof $r42;

        if i#120 >= $i3 goto label21;

        $r43 = this.<com.sleepycat.je.cleaner.FilesToMigrate: long[] forceCleanFiles>;

        $r44 = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i#120);

        $r45 = (java.lang.Long) $r44;

        $l4 = virtualinvoke $r45.<java.lang.Long: long longValue()>();

        $r43[i#120] = $l4;

        i#120 = i#120 + 1;

        goto label20;

     label21:
        return;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }


