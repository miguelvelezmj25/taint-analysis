    void <init>(java.lang.String, int, java.lang.String)
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$1 this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$1;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction: void <init>(java.lang.String,int,java.lang.String,weka.classifiers.pmml.consumer.NeuralNetwork$1)>(l1, l2, name, null);

        return;
    }

    double eval(double, double, double, double)
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$1 this;
        double z, threshold, altitude, fanIn;
        byte $b0;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$1;

        z := @parameter0: double;

        threshold := @parameter1: double;

        altitude := @parameter2: double;

        fanIn := @parameter3: double;

        $b0 = z cmpl threshold;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 <= 0 goto label1;

        return 1.0;

     label1:
        return 0.0;
    }


