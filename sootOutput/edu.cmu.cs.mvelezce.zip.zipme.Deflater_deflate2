    void <init>(edu.cmu.cs.mvelezce.zip.zipme.Deflater, byte[], int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater _this;
        byte[] output;
        int offset, length;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        _this := @parameter0: edu.cmu.cs.mvelezce.zip.zipme.Deflater;

        output := @parameter1: byte[];

        offset := @parameter2: int;

        length := @parameter3: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this> = _this;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: byte[] output> = output;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int offset> = offset;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length> = length;

        return;
    }

    int execute()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r0, $r3, $r6, $r8, $r12, $r14, $r16, $r18, $r21, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r46, $r48, $r50, $r52, $r53;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        java.lang.IllegalStateException $r2;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending $r13, $r22, $r42, $r44, $r51;
        byte $b27;
        byte[] $r23;
        long $l36, $l38, $l39;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine $r30;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length>;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int origLength> = $i0;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i1 = $r0.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        if $i1 != 127 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Deflater closed");

        throw $r2;

     label03:
        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i2 = $r3.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        if $i2 >= 16 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label16;

        $i3 = 8 + 112;

        $i4 = $i3 << 8;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header> = $i4;

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i5 = $r6.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int level>;

        $i6 = $i5 - 1;

        $i7 = $i6 >> 1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int level_flags> = $i7;

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int level_flags>;

        if $i8 < 0 goto label06;

        $i9 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int level_flags>;

        if $i9 <= 3 goto label07;

     label06:
        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label09;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int level_flags> = 3;

     label09:
        $i10 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header>;

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int level_flags>;

        $i12 = $i11 << 6;

        $i13 = $i10 | $i12;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header> = $i13;

        $r8 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i14 = $r8.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        $i15 = $i14 & 1;

        if $i15 == 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label12;

        $i16 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header>;

        $i17 = $i16 | 32;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header> = $i17;

     label12:
        $i18 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header>;

        $i19 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header>;

        $i20 = $i19 % 31;

        $i21 = 31 - $i20;

        $i22 = $i18 + $i21;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header> = $i22;

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r13 = $r12.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $i23 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int header>;

        virtualinvoke $r13.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void writeShortMSB(int)>($i23);

        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i24 = $r14.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        $i25 = $i24 & 1;

        if $i25 == 0 goto label13;

        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label15;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook22()>();

     label15:
        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r18 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i26 = $r18.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        $b27 = 4 | 8;

        $i28 = $i26 & $b27;

        $i29 = 16 | $i28;

        $r16.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state> = $i29;

     label16:
        $r21 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r22 = $r21.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $r23 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: byte[] output>;

        $i30 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int offset>;

        $i31 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length>;

        $i32 = virtualinvoke $r22.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: int flush(byte[],int,int)>($r23, $i30, $i31);

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int count> = $i32;

        $i33 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int offset>;

        $i34 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int count>;

        $i35 = $i33 + $i34;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int offset> = $i35;

        $r25 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $l36 = $r25.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: long totalOut>;

        $i37 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int count>;

        $l38 = (long) $i37;

        $l39 = $l36 + $l38;

        $r25.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: long totalOut> = $l39;

        $i40 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length>;

        $i41 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int count>;

        $i42 = $i40 - $i41;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length> = $i42;

        $i43 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length>;

        if $i43 == 0 goto label17;

        $r27 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i44 = $r27.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        if $i44 != 30 goto label18;

     label17:
        $z10 = 1;

        goto label19;

     label18:
        $z10 = 0;

     label19:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label20;

        goto label42;

     label20:
        $r29 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r30 = $r29.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine engine>;

        $r31 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i45 = $r31.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        $i46 = $i45 & 4;

        if $i46 == 0 goto label21;

        $z12 = 1;

        goto label22;

     label21:
        $z12 = 0;

     label22:
        $r33 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i47 = $r33.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        $i48 = $i47 & 8;

        if $i48 == 0 goto label23;

        $z13 = 1;

        goto label24;

     label23:
        $z13 = 0;

     label24:
        $z14 = virtualinvoke $r30.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: boolean deflate(boolean,boolean)>($z12, $z13);

        if $z14 != 0 goto label25;

        $z15 = 1;

        goto label26;

     label25:
        $z15 = 0;

     label26:
        $z16 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z15);

        if $z16 == 0 goto label16;

        $r35 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i49 = $r35.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        if $i49 != 16 goto label27;

        $z17 = 1;

        goto label28;

     label27:
        $z17 = 0;

     label28:
        $z18 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z17);

        if $z18 == 0 goto label29;

        $i50 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int origLength>;

        $i51 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length>;

        $i52 = $i50 - $i51;

        return $i52;

     label29:
        $r37 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i53 = $r37.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        if $i53 != 20 goto label30;

        $z19 = 1;

        goto label31;

     label30:
        $z19 = 0;

     label31:
        $z20 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z20 == 0 goto label36;

        $r39 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i54 = $r39.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int level>;

        if $i54 == 0 goto label32;

        $z21 = 1;

        goto label33;

     label32:
        $z21 = 0;

     label33:
        $z22 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z21);

        if $z22 == 0 goto label35;

        $r41 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r42 = $r41.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $i55 = virtualinvoke $r42.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: int getBitCount()>();

        $i56 = neg $i55;

        $i57 = $i56 & 7;

        $i58 = 8 + $i57;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int neededbits> = $i58;

     label34:
        $i59 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int neededbits>;

        if $i59 <= 0 goto label35;

        $r43 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r44 = $r43.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        virtualinvoke $r44.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void writeBits(int,int)>(2, 10);

        $i60 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int neededbits>;

        $i61 = $i60 - 10;

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int neededbits> = $i61;

        goto label34;

     label35:
        $r46 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r46.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state> = 16;

        goto label16;

     label36:
        $r48 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $i62 = $r48.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state>;

        if $i62 != 28 goto label37;

        $z23 = 1;

        goto label38;

     label37:
        $z23 = 0;

     label38:
        $z24 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z23);

        if $z24 == 0 goto label16;

        $r50 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r51 = $r50.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        virtualinvoke $r51.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void alignToByte()>();

        $r52 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $z25 = $r52.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: boolean noHeader>;

        if $z25 != 0 goto label39;

        $z26 = 1;

        goto label40;

     label39:
        $z26 = 0;

     label40:
        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z26);

        if $z27 == 0 goto label41;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook23()>();

     label41:
        $r53 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r53.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int state> = 30;

        goto label16;

     label42:
        $i63 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int origLength>;

        $i64 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int length>;

        $i65 = $i63 - $i64;

        return $i65;
    }

    protected void hook22()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressAdlerThreeTwoChecksum>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook22__role__DerivativeCompressAdler32Checksum()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook22__before__DerivativeCompressAdler32Checksum()>();

     label2:
        return;
    }

    protected void hook23()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressAdlerThreeTwoChecksum>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook23__role__DerivativeCompressAdler32Checksum()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook23__before__DerivativeCompressAdler32Checksum()>();

     label2:
        return;
    }

    protected void hook23__role__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r0, $r2, $r4;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine $r1;
        int $i0, $i1, $i2, $i3, $i4;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending $r3, $r5;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r1 = $r0.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine engine>;

        $i0 = virtualinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int getAdler()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int adler> = $i0;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r3 = $r2.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int adler>;

        $i2 = $i1 >> 16;

        virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void writeShortMSB(int)>($i2);

        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r5 = $r4.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int adler>;

        $i4 = $i3 & 65535;

        virtualinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void writeShortMSB(int)>($i4);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook23__before__DerivativeCompressAdler32Checksum()>();

        return;
    }

    protected void hook23__before__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        return;
    }

    protected void hook22__role__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r0, $r2, $r4, $r6;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending $r5, $r7;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r1 = $r0.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine engine>;

        $i0 = virtualinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: int getAdler()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int chksum> = $i0;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r3 = $r2.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine engine>;

        virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterEngine: void resetAdler()>();

        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r5 = $r4.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int chksum>;

        $i2 = $i1 >> 16;

        virtualinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void writeShortMSB(int)>($i2);

        $r6 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: edu.cmu.cs.mvelezce.zip.zipme.Deflater _this>;

        $r7 = $r6.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending pending>;

        $i3 = this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: int chksum>;

        $i4 = $i3 & 65535;

        virtualinvoke $r7.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterPending: void writeShortMSB(int)>($i4);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2: void hook22__before__DerivativeCompressAdler32Checksum()>();

        return;
    }

    protected void hook22__before__DerivativeCompressAdler32Checksum()
    {
        edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2 this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.Deflater_deflate2;

        return;
    }


