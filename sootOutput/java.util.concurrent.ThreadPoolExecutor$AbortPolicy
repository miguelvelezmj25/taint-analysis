    public void <init>()
    {
        java.util.concurrent.ThreadPoolExecutor$AbortPolicy l0;

        l0 := @this: java.util.concurrent.ThreadPoolExecutor$AbortPolicy;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public void rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)
    {
        java.util.concurrent.ThreadPoolExecutor$AbortPolicy l0;
        java.lang.Runnable l1;
        java.util.concurrent.ThreadPoolExecutor l2;
        java.util.concurrent.RejectedExecutionException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7;
        java.lang.String $r3, $r6, $r8;

        l0 := @this: java.util.concurrent.ThreadPoolExecutor$AbortPolicy;

        l1 := @parameter0: java.lang.Runnable;

        l2 := @parameter1: java.util.concurrent.ThreadPoolExecutor;

        $r0 = new java.util.concurrent.RejectedExecutionException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task ");

        $r3 = virtualinvoke l1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rejected from ");

        $r6 = virtualinvoke l2.<java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>($r8);

        throw $r0;
    }


