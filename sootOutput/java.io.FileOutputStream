    static void <clinit>()
    {
        staticinvoke <java.io.FileOutputStream: void initIDs()>();

        return;
    }

    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.FileOutputStream l0;
        java.io.File l1;

        l0 := @this: java.io.FileOutputStream;

        l1 := @parameter0: java.io.File;

        specialinvoke l0.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(l1, 0);

        return;
    }

    protected void finalize() throws java.io.IOException
    {
        java.io.FileOutputStream l0;
        java.io.FileDescriptor $r0, $r1, $r2, $r3, $r4;

        l0 := @this: java.io.FileOutputStream;

        $r0 = l0.<java.io.FileOutputStream: java.io.FileDescriptor fd>;

        if $r0 == null goto label3;

        $r1 = l0.<java.io.FileOutputStream: java.io.FileDescriptor fd>;

        $r2 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        if $r1 == $r2 goto label1;

        $r3 = l0.<java.io.FileOutputStream: java.io.FileDescriptor fd>;

        $r4 = <java.io.FileDescriptor: java.io.FileDescriptor err>;

        if $r3 != $r4 goto label2;

     label1:
        virtualinvoke l0.<java.io.FileOutputStream: void flush()>();

        goto label3;

     label2:
        virtualinvoke l0.<java.io.FileOutputStream: void close()>();

     label3:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.FileOutputStream l0;
        java.lang.Object l1, $r0;
        java.lang.Throwable l2, $r1;
        boolean $z0;
        java.nio.channels.FileChannel $r2, $r3;
        java.io.FileDescriptor $r4;
        java.io.FileOutputStream$1 $r5;

        l0 := @this: java.io.FileOutputStream;

        $r0 = l0.<java.io.FileOutputStream: java.lang.Object closeLock>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $z0 = l0.<java.io.FileOutputStream: boolean closed>;

        if $z0 == 0 goto label3;

        exitmonitor l1;

     label2:
        return;

     label3:
        l0.<java.io.FileOutputStream: boolean closed> = 1;

        exitmonitor l1;

     label4:
        goto label8;

     label5:
        $r1 := @caughtexception;

     label6:
        l2 = $r1;

        exitmonitor l1;

     label7:
        throw l2;

     label8:
        $r2 = l0.<java.io.FileOutputStream: java.nio.channels.FileChannel channel>;

        if $r2 == null goto label9;

        $r3 = l0.<java.io.FileOutputStream: java.nio.channels.FileChannel channel>;

        virtualinvoke $r3.<java.nio.channels.FileChannel: void close()>();

     label9:
        $r4 = l0.<java.io.FileOutputStream: java.io.FileDescriptor fd>;

        $r5 = new java.io.FileOutputStream$1;

        specialinvoke $r5.<java.io.FileOutputStream$1: void <init>(java.io.FileOutputStream)>(l0);

        virtualinvoke $r4.<java.io.FileDescriptor: void closeAll(java.io.Closeable)>($r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void <init>(java.io.File, boolean) throws java.io.FileNotFoundException
    {
        java.io.FileOutputStream l0;
        java.io.File l1;
        boolean l2, $z0;
        java.lang.String l3, $r1;
        java.lang.SecurityManager l4;
        java.lang.Object $r0;
        java.lang.NullPointerException $r2;
        java.io.FileNotFoundException $r3;
        java.io.FileDescriptor $r4, $r5;

        l0 := @this: java.io.FileOutputStream;

        l1 := @parameter0: java.io.File;

        l2 := @parameter1: boolean;

        specialinvoke l0.<java.io.OutputStream: void <init>()>();

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        l0.<java.io.FileOutputStream: java.lang.Object closeLock> = $r0;

        l0.<java.io.FileOutputStream: boolean closed> = 0;

        if l1 == null goto label1;

        $r1 = virtualinvoke l1.<java.io.File: java.lang.String getPath()>();

        goto label2;

     label1:
        $r1 = null;

     label2:
        l3 = $r1;

        l4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if l4 == null goto label3;

        virtualinvoke l4.<java.lang.SecurityManager: void checkWrite(java.lang.String)>(l3);

     label3:
        if l3 != null goto label4;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label4:
        $z0 = virtualinvoke l1.<java.io.File: boolean isInvalid()>();

        if $z0 == 0 goto label5;

        $r3 = new java.io.FileNotFoundException;

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Invalid file path");

        throw $r3;

     label5:
        $r4 = new java.io.FileDescriptor;

        specialinvoke $r4.<java.io.FileDescriptor: void <init>()>();

        l0.<java.io.FileOutputStream: java.io.FileDescriptor fd> = $r4;

        $r5 = l0.<java.io.FileOutputStream: java.io.FileDescriptor fd>;

        virtualinvoke $r5.<java.io.FileDescriptor: void attach(java.io.Closeable)>(l0);

        l0.<java.io.FileOutputStream: boolean append> = l2;

        l0.<java.io.FileOutputStream: java.lang.String path> = l3;

        specialinvoke l0.<java.io.FileOutputStream: void open(java.lang.String,boolean)>(l3, l2);

        return;
    }

    private void open(java.lang.String, boolean) throws java.io.FileNotFoundException
    {
        java.io.FileOutputStream l0;
        java.lang.String l1;
        boolean l2;

        l0 := @this: java.io.FileOutputStream;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: boolean;

        specialinvoke l0.<java.io.FileOutputStream: void open0(java.lang.String,boolean)>(l1, l2);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.FileOutputStream l0;
        byte[] l1;
        int $i0;
        boolean $z0;

        l0 := @this: java.io.FileOutputStream;

        l1 := @parameter0: byte[];

        $i0 = lengthof l1;

        $z0 = l0.<java.io.FileOutputStream: boolean append>;

        specialinvoke l0.<java.io.FileOutputStream: void writeBytes(byte[],int,int,boolean)>(l1, 0, $i0, $z0);

        return;
    }

    static void access$000(java.io.FileOutputStream) throws java.io.IOException
    {
        java.io.FileOutputStream l0;

        l0 := @parameter0: java.io.FileOutputStream;

        specialinvoke l0.<java.io.FileOutputStream: void close0()>();

        return;
    }


