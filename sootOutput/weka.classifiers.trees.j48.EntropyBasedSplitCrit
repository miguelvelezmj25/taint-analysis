    public void <init>()
    {
        weka.classifiers.trees.j48.EntropyBasedSplitCrit this;

        this := @this: weka.classifiers.trees.j48.EntropyBasedSplitCrit;

        specialinvoke this.<weka.classifiers.trees.j48.SplitCriterion: void <init>()>();

        return;
    }

    public final double lnFunc(double)
    {
        weka.classifiers.trees.j48.EntropyBasedSplitCrit this;
        double num, $d0;
        byte $b0;

        this := @this: weka.classifiers.trees.j48.EntropyBasedSplitCrit;

        num := @parameter0: double;

        $b0 = num cmpg 1.0E-6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 >= 0 goto label1;

        return 0.0;

     label1:
        $d0 = staticinvoke <weka.core.ContingencyTables: double lnFunc(double)>(num);

        return $d0;
    }

    public final double newEnt(weka.classifiers.trees.j48.Distribution)
    {
        weka.classifiers.trees.j48.EntropyBasedSplitCrit this;
        weka.classifiers.trees.j48.Distribution bags;
        double returnValue#2, $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        int i#4, $i0, j#9, $i1;

        this := @this: weka.classifiers.trees.j48.EntropyBasedSplitCrit;

        bags := @parameter0: weka.classifiers.trees.j48.Distribution;

        returnValue#2 = 0.0;

        i#4 = 0;

     label1:
        $i0 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: int numBags()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#4 >= $i0 goto label4;

        j#9 = 0;

     label2:
        $i1 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: int numClasses()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if j#9 >= $i1 goto label3;

        $d0 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double perClassPerBag(int,int)>(i#4, j#9);

        $d1 = virtualinvoke this.<weka.classifiers.trees.j48.EntropyBasedSplitCrit: double lnFunc(double)>($d0);

        returnValue#2 = returnValue#2 + $d1;

        j#9 = j#9 + 1;

        goto label2;

     label3:
        $d2 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double perBag(int)>(i#4);

        $d3 = virtualinvoke this.<weka.classifiers.trees.j48.EntropyBasedSplitCrit: double lnFunc(double)>($d2);

        returnValue#2 = returnValue#2 - $d3;

        i#4 = i#4 + 1;

        goto label1;

     label4:
        $d4 = <weka.core.ContingencyTables: double log2>;

        $d5 = returnValue#2 / $d4;

        $d6 = neg $d5;

        return $d6;
    }

    public final double oldEnt(weka.classifiers.trees.j48.Distribution)
    {
        weka.classifiers.trees.j48.EntropyBasedSplitCrit this;
        weka.classifiers.trees.j48.Distribution bags;
        double returnValue#2, $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        int j#4, $i0;

        this := @this: weka.classifiers.trees.j48.EntropyBasedSplitCrit;

        bags := @parameter0: weka.classifiers.trees.j48.Distribution;

        returnValue#2 = 0.0;

        j#4 = 0;

     label1:
        $i0 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: int numClasses()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if j#4 >= $i0 goto label2;

        $d0 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double perClass(int)>(j#4);

        $d1 = virtualinvoke this.<weka.classifiers.trees.j48.EntropyBasedSplitCrit: double lnFunc(double)>($d0);

        returnValue#2 = returnValue#2 + $d1;

        j#4 = j#4 + 1;

        goto label1;

     label2:
        $d2 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double total()>();

        $d3 = virtualinvoke this.<weka.classifiers.trees.j48.EntropyBasedSplitCrit: double lnFunc(double)>($d2);

        $d4 = $d3 - returnValue#2;

        $d5 = <weka.core.ContingencyTables: double log2>;

        $d6 = $d4 / $d5;

        return $d6;
    }


