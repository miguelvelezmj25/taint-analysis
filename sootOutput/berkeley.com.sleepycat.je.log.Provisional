    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.log.Provisional $r1, $r2, $r3, $r5, $r6, $r7;
        berkeley.com.sleepycat.je.log.Provisional[] $r4;

        $r0 = class "berkeley/com/sleepycat/je/log/Provisional";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.log.Provisional: boolean $assertionsDisabled> = $z1;

        $r1 = new berkeley.com.sleepycat.je.log.Provisional;

        specialinvoke $r1.<berkeley.com.sleepycat.je.log.Provisional: void <init>(java.lang.String,int)>("NO", 0);

        <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional NO> = $r1;

        $r2 = new berkeley.com.sleepycat.je.log.Provisional;

        specialinvoke $r2.<berkeley.com.sleepycat.je.log.Provisional: void <init>(java.lang.String,int)>("YES", 1);

        <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional YES> = $r2;

        $r3 = new berkeley.com.sleepycat.je.log.Provisional;

        specialinvoke $r3.<berkeley.com.sleepycat.je.log.Provisional: void <init>(java.lang.String,int)>("BEFORE_CKPT_END", 2);

        <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional BEFORE_CKPT_END> = $r3;

        $r4 = newarray (berkeley.com.sleepycat.je.log.Provisional)[3];

        $r5 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional NO>;

        $r4[0] = $r5;

        $r6 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional YES>;

        $r4[1] = $r6;

        $r7 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional BEFORE_CKPT_END>;

        $r4[2] = $r7;

        <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional[] $VALUES> = $r4;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        berkeley.com.sleepycat.je.log.Provisional this;
        java.lang.String l1;
        int l2;

        this := @this: berkeley.com.sleepycat.je.log.Provisional;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    public boolean isProvisional(long, long)
    {
        berkeley.com.sleepycat.je.log.Provisional this;
        long logEntryLsn, ckptEndLsn;
        boolean $z0, $z1, $z2;
        byte $b0, $b3;
        java.lang.AssertionError $r0, $r2;
        int[] $r1;
        int $i1, $i2, $i4;

        this := @this: berkeley.com.sleepycat.je.log.Provisional;

        logEntryLsn := @parameter0: long;

        ckptEndLsn := @parameter1: long;

        $z0 = <berkeley.com.sleepycat.je.log.Provisional: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $b0 = logEntryLsn cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $r1 = <berkeley.com.sleepycat.je.log.Provisional$1: int[] $SwitchMap$berkeley$com$sleepycat$je$log$Provisional>;

        $i1 = virtualinvoke this.<berkeley.com.sleepycat.je.log.Provisional: int ordinal()>();

        $i2 = $r1[$i1];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label7;
        };

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $b3 = ckptEndLsn cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 == 0 goto label5;

        $i4 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(logEntryLsn, ckptEndLsn);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 >= 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

     label7:
        $z2 = <berkeley.com.sleepycat.je.log.Provisional: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label8;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label8:
        return 0;
    }

    public static berkeley.com.sleepycat.je.log.Provisional[] values()
    {
        berkeley.com.sleepycat.je.log.Provisional[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (berkeley.com.sleepycat.je.log.Provisional[]) $r1;

        return $r2;
    }


