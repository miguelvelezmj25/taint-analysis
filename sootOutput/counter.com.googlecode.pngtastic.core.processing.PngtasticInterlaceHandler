    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3;

        nop;

        $r0 = newarray (int)[7];

        nop;

        $r0[0] = 8;

        nop;

        $r0[1] = 8;

        nop;

        $r0[2] = 4;

        nop;

        $r0[3] = 4;

        nop;

        $r0[4] = 2;

        nop;

        $r0[5] = 2;

        nop;

        $r0[6] = 1;

        nop;

        <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency> = $r0;

        nop;

        $r1 = newarray (int)[7];

        nop;

        $r1[0] = 0;

        nop;

        $r1[1] = 4;

        nop;

        $r1[2] = 0;

        nop;

        $r1[3] = 2;

        nop;

        $r1[4] = 0;

        nop;

        $r1[5] = 1;

        nop;

        $r1[6] = 0;

        nop;

        <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnOffset> = $r1;

        nop;

        $r2 = newarray (int)[7];

        nop;

        $r2[0] = 8;

        nop;

        $r2[1] = 8;

        nop;

        $r2[2] = 8;

        nop;

        $r2[3] = 4;

        nop;

        $r2[4] = 4;

        nop;

        $r2[5] = 2;

        nop;

        $r2[6] = 2;

        nop;

        <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency> = $r2;

        nop;

        $r3 = newarray (int)[7];

        nop;

        $r3[0] = 0;

        nop;

        $r3[1] = 0;

        nop;

        $r3[2] = 4;

        nop;

        $r3[3] = 0;

        nop;

        $r3[4] = 2;

        nop;

        $r3[5] = 0;

        nop;

        $r3[6] = 1;

        nop;

        <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowOffset> = $r3;

        nop;

        return;
    }

    public void <init>(counter.com.googlecode.pngtastic.core.Logger, counter.com.googlecode.pngtastic.core.processing.PngFilterHandler)
    {
        counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler this;
        counter.com.googlecode.pngtastic.core.Logger log;
        counter.com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler;

        nop;

        this := @this: counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler;

        nop;

        log := @parameter0: counter.com.googlecode.pngtastic.core.Logger;

        nop;

        pngFilterHandler := @parameter1: counter.com.googlecode.pngtastic.core.processing.PngFilterHandler;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        this.<counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: counter.com.googlecode.pngtastic.core.Logger log> = log;

        nop;

        this.<counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: counter.com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler> = pngFilterHandler;

        nop;

        return;
    }

    public java.util.List deInterlace(int, int, int, counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream)
    {
        counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler this;
        int width, height, sampleBitCount, sampleSize, subImageRows, subImageColumns, rowLength, cf, co, rf, ro, samples, $i0, $i1, $i2, $i3, subImageOffset#27, pass#29, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, offset#93, i#95, $i20, $i21, $i22, sample#133, b#137, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i#172, $i33;
        counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.util.ArrayList results, $r2;
        byte[][] rows;
        byte[] row, previousRow#91, $r15, $r21, $r23;
        counter.com.googlecode.pngtastic.core.PngException e, $r17;
        counter.com.googlecode.pngtastic.core.Logger $r0, $r18;
        java.lang.Object[] $r1, $r19;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Double $r3, $r10;
        int[] $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14;
        counter.com.googlecode.pngtastic.core.processing.PngFilterHandler $r16;
        java.lang.String $r20;
        byte $b32;
        java.lang.Object $r22;

        nop;

        this := @this: counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler;

        nop;

        width := @parameter0: int;

        nop;

        height := @parameter1: int;

        nop;

        sampleBitCount := @parameter2: int;

        nop;

        inflatedImageData := @parameter3: counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        nop;

        $r0 = this.<counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: counter.com.googlecode.pngtastic.core.Logger log>;

        nop;

        $r1 = newarray (java.lang.Object)[0];

        nop;

        virtualinvoke $r0.<counter.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Deinterlacing", $r1);

        nop;

        $r2 = new java.util.ArrayList;

        nop;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        nop;

        results = $r2;

        nop;

        $i0 = sampleBitCount / 8;

        nop;

        sampleSize = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        nop;

        $i1 = width * sampleBitCount;

        nop;

        $d0 = (double) $i1;

        nop;

        $d1 = $d0 / 8.0;

        nop;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        nop;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        nop;

        $i2 = virtualinvoke $r3.<java.lang.Double: int intValue()>();

        nop;

        $i3 = $i2 + 1;

        nop;

        rows = newmultiarray (byte)[height][$i3];

        nop;

        subImageOffset#27 = 0;

        nop;

        pass#29 = 0;

     label01:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pass#29);

        nop;

        if pass#29 >= 7 goto label12;

        nop;

        $r4 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowOffset>;

        nop;

        $i4 = $r4[pass#29];

        nop;

        $i5 = height - $i4;

        nop;

        $r5 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency>;

        nop;

        $i6 = $r5[pass#29];

        nop;

        $i7 = $i6 - 1;

        nop;

        $i8 = $i5 + $i7;

        nop;

        $r6 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency>;

        nop;

        $i9 = $r6[pass#29];

        nop;

        subImageRows = $i8 / $i9;

        nop;

        $r7 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnOffset>;

        nop;

        $i10 = $r7[pass#29];

        nop;

        $i11 = width - $i10;

        nop;

        $r8 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency>;

        nop;

        $i12 = $r8[pass#29];

        nop;

        $i13 = $i12 - 1;

        nop;

        $i14 = $i11 + $i13;

        nop;

        $r9 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency>;

        nop;

        $i15 = $r9[pass#29];

        nop;

        subImageColumns = $i14 / $i15;

        nop;

        $i16 = subImageColumns * sampleBitCount;

        nop;

        $d3 = (double) $i16;

        nop;

        $d4 = $d3 / 8.0;

        nop;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        nop;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        nop;

        $i17 = virtualinvoke $r10.<java.lang.Double: int intValue()>();

        nop;

        rowLength = $i17 + 1;

        nop;

        $r11 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnFrequency>;

        nop;

        $i18 = $r11[pass#29];

        nop;

        cf = $i18 * sampleSize;

        nop;

        $r12 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceColumnOffset>;

        nop;

        $i19 = $r12[pass#29];

        nop;

        co = $i19 * sampleSize;

        nop;

        $r13 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowFrequency>;

        nop;

        rf = $r13[pass#29];

        nop;

        $r14 = <counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: int[] interlaceRowOffset>;

        nop;

        ro = $r14[pass#29];

        nop;

        previousRow#91 = newarray (byte)[rowLength];

        nop;

        offset#93 = 0;

        nop;

        i#95 = 0;

     label02:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#95);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subImageRows);

        nop;

        if i#95 >= subImageRows goto label11;

        nop;

        $i20 = i#95 * rowLength;

        nop;

        offset#93 = subImageOffset#27 + $i20;

        nop;

        row = newarray (byte)[rowLength];

        nop;

        $r15 = virtualinvoke inflatedImageData.<counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: byte[] get()>();

        nop;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, offset#93, row, 0, rowLength);

     label03:
        nop;

        $r16 = this.<counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: counter.com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler>;

        nop;

        interfaceinvoke $r16.<counter.com.googlecode.pngtastic.core.processing.PngFilterHandler: void deFilter(byte[],byte[],int)>(row, previousRow#91, sampleBitCount);

     label04:
        nop;

        goto label06;

     label05:
        nop;

        $r17 := @caughtexception;

        nop;

        e = $r17;

        nop;

        $r18 = this.<counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: counter.com.googlecode.pngtastic.core.Logger log>;

        nop;

        $r19 = newarray (java.lang.Object)[1];

        nop;

        $r20 = virtualinvoke e.<counter.com.googlecode.pngtastic.core.PngException: java.lang.String getMessage()>();

        nop;

        $r19[0] = $r20;

        nop;

        virtualinvoke $r18.<counter.com.googlecode.pngtastic.core.Logger: void error(java.lang.String,java.lang.Object[])>("Error: %s", $r19);

     label06:
        nop;

        $i21 = lengthof row;

        nop;

        $i22 = $i21 - 1;

        nop;

        samples = $i22 / sampleSize;

        nop;

        sample#133 = 0;

     label07:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sample#133);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(samples);

        nop;

        if sample#133 >= samples goto label10;

        nop;

        b#137 = 0;

     label08:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b#137);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sampleSize);

        nop;

        if b#137 >= sampleSize goto label09;

        nop;

        $i23 = i#95 * rf;

        nop;

        $i24 = $i23 + ro;

        nop;

        $r21 = rows[$i24];

        nop;

        $i25 = sample#133 * cf;

        nop;

        $i26 = $i25 + co;

        nop;

        $i27 = $i26 + b#137;

        nop;

        $i28 = $i27 + 1;

        nop;

        $i29 = sample#133 * sampleSize;

        nop;

        $i30 = $i29 + b#137;

        nop;

        $i31 = $i30 + 1;

        nop;

        $b32 = row[$i31];

        nop;

        $r21[$i28] = $b32;

        nop;

        b#137 = b#137 + 1;

        nop;

        goto label08;

     label09:
        nop;

        sample#133 = sample#133 + 1;

        nop;

        goto label07;

     label10:
        nop;

        $r22 = virtualinvoke row.<java.lang.Object: java.lang.Object clone()>();

        nop;

        previousRow#91 = (byte[]) $r22;

        nop;

        i#95 = i#95 + 1;

        nop;

        goto label02;

     label11:
        nop;

        subImageOffset#27 = offset#93 + rowLength;

        nop;

        pass#29 = pass#29 + 1;

        nop;

        goto label01;

     label12:
        nop;

        i#172 = 0;

     label13:
        nop;

        $i33 = lengthof rows;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#172);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i33);

        nop;

        if i#172 >= $i33 goto label14;

        nop;

        $r23 = rows[i#172];

        nop;

        interfaceinvoke results.<java.util.List: boolean add(java.lang.Object)>($r23);

        nop;

        i#172 = i#172 + 1;

        nop;

        goto label13;

     label14:
        nop;

        return results;

        catch counter.com.googlecode.pngtastic.core.PngException from label03 to label04 with label05;
    }


