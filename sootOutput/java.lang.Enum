    public final int ordinal()
    {
        java.lang.Enum l0;
        int $i0;

        l0 := @this: java.lang.Enum;

        $i0 = l0.<java.lang.Enum: int ordinal>;

        return $i0;
    }

    protected void <init>(java.lang.String, int)
    {
        java.lang.Enum l0;
        java.lang.String l1;
        int l2;

        l0 := @this: java.lang.Enum;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        l0.<java.lang.Enum: java.lang.String name> = l1;

        l0.<java.lang.Enum: int ordinal> = l2;

        return;
    }

    protected final void finalize()
    {
        java.lang.Enum l0;

        l0 := @this: java.lang.Enum;

        return;
    }

    public final int hashCode()
    {
        java.lang.Enum l0;
        int $i0;

        l0 := @this: java.lang.Enum;

        $i0 = specialinvoke l0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.Enum l0;
        java.lang.Object l1;
        boolean $z0;

        l0 := @this: java.lang.Enum;

        l1 := @parameter0: java.lang.Object;

        if l0 != l1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.Enum l0, $r0;
        java.lang.Object l1;
        int $i0;

        l0 := @this: java.lang.Enum;

        l1 := @parameter0: java.lang.Object;

        $r0 = (java.lang.Enum) l1;

        $i0 = virtualinvoke l0.<java.lang.Enum: int compareTo(java.lang.Enum)>($r0);

        return $i0;
    }

    public final int compareTo(java.lang.Enum)
    {
        java.lang.Enum l0, l1, l2, l3;
        java.lang.Class $r0, $r1, $r2, $r3;
        java.lang.ClassCastException $r4;
        int $i0, $i1, $i2;

        l0 := @this: java.lang.Enum;

        l1 := @parameter0: java.lang.Enum;

        l2 = l1;

        l3 = l0;

        $r0 = virtualinvoke l3.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke l2.<java.lang.Object: java.lang.Class getClass()>();

        if $r0 == $r1 goto label1;

        $r2 = virtualinvoke l3.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke l2.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        if $r2 == $r3 goto label1;

        $r4 = new java.lang.ClassCastException;

        specialinvoke $r4.<java.lang.ClassCastException: void <init>()>();

        throw $r4;

     label1:
        $i0 = l3.<java.lang.Enum: int ordinal>;

        $i1 = l2.<java.lang.Enum: int ordinal>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public final java.lang.Class getDeclaringClass()
    {
        java.lang.Enum l0;
        java.lang.Class l1, l2, $r0;

        l0 := @this: java.lang.Enum;

        l1 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>();

        l2 = virtualinvoke l1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if l2 != class "java/lang/Enum" goto label1;

        $r0 = l1;

        goto label2;

     label1:
        $r0 = l2;

     label2:
        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.Enum l0;
        java.lang.String $r0;

        l0 := @this: java.lang.Enum;

        $r0 = l0.<java.lang.Enum: java.lang.String name>;

        return $r0;
    }


