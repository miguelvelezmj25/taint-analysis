digraph <clinit> {
"$r0 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>() {1576068592}" -> "<java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> = $r0 {1843298374}";
"<java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> = $r0 {1843298374}" -> "$r1 = <java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> {2059018347}";
"$r1 = <java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> {2059018347}" -> "$r2 = class \"java/util/concurrent/atomic/AtomicInteger\" {1132806025}";
"$r2 = class \"java/util/concurrent/atomic/AtomicInteger\" {1132806025}" -> "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"value\") {1828604068}";
"$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(\"value\") {1828604068}" -> "$l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r3) {116214725}";
"$l0 = virtualinvoke $r1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r3) {116214725}" -> "<java.util.concurrent.atomic.AtomicInteger: long valueOffset> = $l0 {1580068916}";
"<java.util.concurrent.atomic.AtomicInteger: long valueOffset> = $l0 {1580068916}" -> "goto [?= return] {999297684}";
"goto [?= return] {999297684}" -> "return {395666382}";
"$r4 := @caughtexception {1703196166}" -> "l0 = $r4 {1231684154}";
"l0 = $r4 {1231684154}" -> "$r5 = new java.lang.Error {2029512563}";
"$r5 = new java.lang.Error {2029512563}" -> "specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(l0) {1361441902}";
"specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(l0) {1361441902}" -> "throw $r5 {380525894}";
}

digraph <init> {
"l0 := @this: java.util.concurrent.atomic.AtomicInteger {1767473075}" -> "specialinvoke l0.<java.lang.Number: void <init>()>() {2145644121}";
"specialinvoke l0.<java.lang.Number: void <init>()>() {2145644121}" -> "return {1566941937}";
}

digraph getAndAdd {
"l0 := @this: java.util.concurrent.atomic.AtomicInteger {1758757195}" -> "l1 := @parameter0: int {414304055}";
"l1 := @parameter0: int {414304055}" -> "$r0 = <java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> {876945614}";
"$r0 = <java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> {876945614}" -> "$l0 = <java.util.concurrent.atomic.AtomicInteger: long valueOffset> {2137366542}";
"$l0 = <java.util.concurrent.atomic.AtomicInteger: long valueOffset> {2137366542}" -> "$i1 = virtualinvoke $r0.<sun.misc.Unsafe: int getAndAddInt(java.lang.Object,long,int)>(l0, $l0, l1) {569321045}";
"$i1 = virtualinvoke $r0.<sun.misc.Unsafe: int getAndAddInt(java.lang.Object,long,int)>(l0, $l0, l1) {569321045}" -> "return $i1 {1935181750}";
}

digraph addAndGet {
"l0 := @this: java.util.concurrent.atomic.AtomicInteger {776516137}" -> "l1 := @parameter0: int {1595332876}";
"l1 := @parameter0: int {1595332876}" -> "$r0 = <java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> {1196160524}";
"$r0 = <java.util.concurrent.atomic.AtomicInteger: sun.misc.Unsafe unsafe> {1196160524}" -> "$l0 = <java.util.concurrent.atomic.AtomicInteger: long valueOffset> {114854837}";
"$l0 = <java.util.concurrent.atomic.AtomicInteger: long valueOffset> {114854837}" -> "$i1 = virtualinvoke $r0.<sun.misc.Unsafe: int getAndAddInt(java.lang.Object,long,int)>(l0, $l0, l1) {356545825}";
"$i1 = virtualinvoke $r0.<sun.misc.Unsafe: int getAndAddInt(java.lang.Object,long,int)>(l0, $l0, l1) {356545825}" -> "$i2 = $i1 + l1 {2146835215}";
"$i2 = $i1 + l1 {2146835215}" -> "return $i2 {32431281}";
}


