    static weka.classifiers.pmml.consumer.TreeModel$Predicate getPredicate(org.w3c.dom.Element, weka.core.pmml.MiningSchema) throws java.lang.Exception
    {
        org.w3c.dom.Element nodeE, $r0, $r4, $r6, $r8;
        weka.core.pmml.MiningSchema miningSchema;
        org.w3c.dom.NodeList children;
        org.w3c.dom.Node child;
        java.lang.String tagName;
        weka.classifiers.pmml.consumer.TreeModel$Predicate result#2;
        int i#6, $i0;
        short $s1;
        boolean $z0, $z1, $z2, $z3, $z4;
        weka.classifiers.pmml.consumer.TreeModel$True $r1;
        weka.classifiers.pmml.consumer.TreeModel$False $r2;
        weka.classifiers.pmml.consumer.TreeModel$SimplePredicate $r3;
        weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate $r5;
        weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate $r7;
        java.lang.Exception $r9;

        nodeE := @parameter0: org.w3c.dom.Element;

        miningSchema := @parameter1: weka.core.pmml.MiningSchema;

        result#2 = null;

        children = interfaceinvoke nodeE.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i#6 = 0;

     label1:
        $i0 = interfaceinvoke children.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#6 >= $i0 goto label7;

        child = interfaceinvoke children.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#6);

        $s1 = interfaceinvoke child.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if $s1 != 1 goto label6;

        $r0 = (org.w3c.dom.Element) child;

        tagName = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("True");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = new weka.classifiers.pmml.consumer.TreeModel$True;

        specialinvoke $r1.<weka.classifiers.pmml.consumer.TreeModel$True: void <init>()>();

        result#2 = $r1;

        goto label7;

     label2:
        $z1 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("False");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        $r2 = new weka.classifiers.pmml.consumer.TreeModel$False;

        specialinvoke $r2.<weka.classifiers.pmml.consumer.TreeModel$False: void <init>()>();

        result#2 = $r2;

        goto label7;

     label3:
        $z2 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("SimplePredicate");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label4;

        $r3 = new weka.classifiers.pmml.consumer.TreeModel$SimplePredicate;

        $r4 = (org.w3c.dom.Element) child;

        specialinvoke $r3.<weka.classifiers.pmml.consumer.TreeModel$SimplePredicate: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r4, miningSchema);

        result#2 = $r3;

        goto label7;

     label4:
        $z3 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("CompoundPredicate");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label5;

        $r5 = new weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate;

        $r6 = (org.w3c.dom.Element) child;

        specialinvoke $r5.<weka.classifiers.pmml.consumer.TreeModel$CompoundPredicate: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r6, miningSchema);

        result#2 = $r5;

        goto label7;

     label5:
        $z4 = virtualinvoke tagName.<java.lang.String: boolean equals(java.lang.Object)>("SimpleSetPredicate");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label6;

        $r7 = new weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate;

        $r8 = (org.w3c.dom.Element) child;

        specialinvoke $r7.<weka.classifiers.pmml.consumer.TreeModel$SimpleSetPredicate: void <init>(org.w3c.dom.Element,weka.core.pmml.MiningSchema)>($r8, miningSchema);

        result#2 = $r7;

        goto label7;

     label6:
        i#6 = i#6 + 1;

        goto label1;

     label7:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#2);

        if result#2 != null goto label8;

        $r9 = new java.lang.Exception;

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>("[Predicate] unknown or missing predicate type in node");

        throw $r9;

     label8:
        return result#2;
    }

    void <init>()
    {
        weka.classifiers.pmml.consumer.TreeModel$Predicate this;

        this := @this: weka.classifiers.pmml.consumer.TreeModel$Predicate;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


