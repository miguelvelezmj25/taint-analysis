    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        com.sleepycat.je.log.LogEntryType[] $r1;
        com.sleepycat.je.log.entry.LNLogEntry $r2, $r8, $r15, $r20, $r49, $r54, $r59;
        com.sleepycat.je.log.LogEntryType$Txnal $r3, $r9, $r16, $r21, $r25, $r31, $r37, $r43, $r50, $r55, $r60, $r65, $r70, $r75, $r80, $r85, $r89, $r95, $r102, $r107, $r112, $r117, $r122, $r126, $r133, $r138, $r143, $r148, $r153, $r157, $r163, $r165, $r167, $r169, $r171, $r173, $r176, $r181, $r186;
        com.sleepycat.je.log.LogEntryType$Marshall $r4, $r10, $r17, $r22, $r26, $r32, $r38, $r44, $r51, $r56, $r61, $r66, $r71, $r76, $r81, $r86, $r90, $r96, $r103, $r108, $r113, $r118, $r123, $r127, $r134, $r139, $r144, $r149, $r154, $r158, $r177, $r182, $r187;
        com.sleepycat.je.log.LogEntryType$Replicable $r5, $r11, $r27, $r33, $r39, $r45, $r91, $r97, $r128, $r159;
        com.sleepycat.je.log.LogEntryType$NodeType $r6, $r12, $r18, $r23, $r28, $r34, $r40, $r46, $r52, $r57, $r62, $r67, $r72, $r77, $r82, $r87, $r92, $r98, $r104, $r109, $r114, $r119, $r124, $r129, $r135, $r140, $r145, $r150, $r155, $r160, $r178, $r183, $r188;
        com.sleepycat.je.log.LogEntryType $r7, $r13, $r14, $r19, $r29, $r35, $r41, $r47, $r48, $r53, $r58, $r63, $r68, $r73, $r78, $r83, $r93, $r99, $r100, $r105, $r110, $r115, $r120, $r130, $r131, $r136, $r141, $r146, $r151, $r161, $r174, $r179, $r184;
        com.sleepycat.je.log.entry.NameLNLogEntry $r24, $r30;
        com.sleepycat.je.log.entry.DeletedDupLNLogEntry $r36, $r42;
        com.sleepycat.je.log.entry.INLogEntry $r64, $r69, $r74, $r79;
        com.sleepycat.je.log.entry.SingleItemEntry $r84, $r101, $r106, $r111, $r137, $r142, $r147, $r152, $r180, $r185;
        com.sleepycat.je.log.entry.CommitLogEntry $r88;
        com.sleepycat.je.log.entry.AbortLogEntry $r94;
        com.sleepycat.je.log.entry.OldBINDeltaLogEntry $r116, $r121;
        com.sleepycat.je.log.entry.TraceLogEntry $r125;
        com.sleepycat.je.log.entry.FileHeaderEntry $r132;
        com.sleepycat.je.log.entry.MatchpointLogEntry $r156;
        com.sleepycat.je.log.LogEntryType$UserLNLogEntryType $r162, $r164, $r166, $r168, $r170, $r172;
        com.sleepycat.je.log.entry.BINDeltaLogEntry $r175;

        $r0 = class "com/sleepycat/je/log/LogEntryType";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.log.LogEntryType: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (com.sleepycat.je.log.LogEntryType)[39];

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType[] LOG_TYPES> = $r1;

        $r2 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/LN");

        $r3 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r4 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r5 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r6 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_USER>;

        $r7 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(1, "LN_TX", $r2, $r3, $r4, $r5, $r6);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_LN_TRANSACTIONAL> = $r7;

        $r8 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/LN");

        $r9 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r10 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r11 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r12 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_USER>;

        $r13 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(2, "LN", $r8, $r9, $r10, $r11, $r12);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_LN> = $r13;

        $r14 = new com.sleepycat.je.log.LogEntryType;

        $r15 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/MapLN");

        $r16 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r17 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall INSIDE_LATCH>;

        $r18 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_INTERNAL>;

        specialinvoke $r14.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(3, "MapLN_TX", $r15, $r16, $r17, $r18);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_MAPLN_TRANSACTIONAL> = $r14;

        $r19 = new com.sleepycat.je.log.LogEntryType;

        $r20 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/MapLN");

        $r21 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r22 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall INSIDE_LATCH>;

        $r23 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_INTERNAL>;

        specialinvoke $r19.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(4, "MapLN", $r20, $r21, $r22, $r23);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_MAPLN> = $r19;

        $r24 = new com.sleepycat.je.log.entry.NameLNLogEntry;

        specialinvoke $r24.<com.sleepycat.je.log.entry.NameLNLogEntry: void <init>()>();

        $r25 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r26 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r27 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r28 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_INTERNAL>;

        $r29 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(5, "NameLN_TX", $r24, $r25, $r26, $r27, $r28);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_NAMELN_TRANSACTIONAL> = $r29;

        $r30 = new com.sleepycat.je.log.entry.NameLNLogEntry;

        specialinvoke $r30.<com.sleepycat.je.log.entry.NameLNLogEntry: void <init>()>();

        $r31 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r32 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r33 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r34 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_INTERNAL>;

        $r35 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(6, "NameLN", $r30, $r31, $r32, $r33, $r34);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_NAMELN> = $r35;

        $r36 = new com.sleepycat.je.log.entry.DeletedDupLNLogEntry;

        specialinvoke $r36.<com.sleepycat.je.log.entry.DeletedDupLNLogEntry: void <init>()>();

        $r37 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r38 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r39 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r40 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_USER>;

        $r41 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(7, "DelDupLN_TX", $r36, $r37, $r38, $r39, $r40);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DEL_DUPLN_TRANSACTIONAL> = $r41;

        $r42 = new com.sleepycat.je.log.entry.DeletedDupLNLogEntry;

        specialinvoke $r42.<com.sleepycat.je.log.entry.DeletedDupLNLogEntry: void <init>()>();

        $r43 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r44 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r45 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r46 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_USER>;

        $r47 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(8, "DelDupLN", $r42, $r43, $r44, $r45, $r46);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DEL_DUPLN> = $r47;

        $r48 = new com.sleepycat.je.log.LogEntryType;

        $r49 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/dupConvert/DupCountLN");

        $r50 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r51 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r52 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType OLD_DUP>;

        specialinvoke $r48.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(9, "DupCountLN_TX", $r49, $r50, $r51, $r52);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DUPCOUNTLN_TRANSACTIONAL> = $r48;

        $r53 = new com.sleepycat.je.log.LogEntryType;

        $r54 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/dupConvert/DupCountLN");

        $r55 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r56 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r57 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType OLD_DUP>;

        specialinvoke $r53.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(10, "DupCountLN", $r54, $r55, $r56, $r57);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DUPCOUNTLN> = $r53;

        $r58 = new com.sleepycat.je.log.LogEntryType;

        $r59 = staticinvoke <com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.log.entry.LNLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/FileSummaryLN");

        $r60 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r61 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall INSIDE_LATCH>;

        $r62 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_INTERNAL>;

        specialinvoke $r58.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(11, "FileSummaryLN", $r59, $r60, $r61, $r62);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_FILESUMMARYLN> = $r58;

        $r63 = new com.sleepycat.je.log.LogEntryType;

        $r64 = staticinvoke <com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.log.entry.INLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/IN");

        $r65 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r66 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r67 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType IN>;

        specialinvoke $r63.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(12, "IN", $r64, $r65, $r66, $r67);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_IN> = $r63;

        $r68 = new com.sleepycat.je.log.LogEntryType;

        $r69 = staticinvoke <com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.log.entry.INLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/BIN");

        $r70 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r71 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r72 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType IN>;

        specialinvoke $r68.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(13, "BIN", $r69, $r70, $r71, $r72);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_BIN> = $r68;

        $r73 = new com.sleepycat.je.log.LogEntryType;

        $r74 = staticinvoke <com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.log.entry.INLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/dupConvert/DIN");

        $r75 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r76 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r77 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType OLD_DUP>;

        specialinvoke $r73.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(14, "DIN", $r74, $r75, $r76, $r77);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DIN> = $r73;

        $r78 = new com.sleepycat.je.log.LogEntryType;

        $r79 = staticinvoke <com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.log.entry.INLogEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/dupConvert/DBIN");

        $r80 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r81 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r82 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType OLD_DUP>;

        specialinvoke $r78.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(15, "DBIN", $r79, $r80, $r81, $r82);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DBIN> = $r78;

        $r83 = new com.sleepycat.je.log.LogEntryType;

        $r84 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/dbi/DbTree");

        $r85 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r86 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall INSIDE_LATCH>;

        $r87 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r83.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(16, "DbTree", $r84, $r85, $r86, $r87);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DBTREE> = $r83;

        $r88 = new com.sleepycat.je.log.entry.CommitLogEntry;

        specialinvoke $r88.<com.sleepycat.je.log.entry.CommitLogEntry: void <init>()>();

        $r89 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r90 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall INSIDE_LATCH>;

        $r91 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_MATCH>;

        $r92 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        $r93 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(17, "Commit", $r88, $r89, $r90, $r91, $r92);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_TXN_COMMIT> = $r93;

        $r94 = new com.sleepycat.je.log.entry.AbortLogEntry;

        specialinvoke $r94.<com.sleepycat.je.log.entry.AbortLogEntry: void <init>()>();

        $r95 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r96 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall INSIDE_LATCH>;

        $r97 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_MATCH>;

        $r98 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        $r99 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(18, "Abort", $r94, $r95, $r96, $r97, $r98);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_TXN_ABORT> = $r99;

        $r100 = new com.sleepycat.je.log.LogEntryType;

        $r101 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/recovery/CheckpointStart");

        $r102 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r103 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r104 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r100.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(19, "CkptStart", $r101, $r102, $r103, $r104);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_CKPT_START> = $r100;

        $r105 = new com.sleepycat.je.log.LogEntryType;

        $r106 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/recovery/CheckpointEnd");

        $r107 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r108 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r109 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r105.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(20, "CkptEnd", $r106, $r107, $r108, $r109);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_CKPT_END> = $r105;

        $r110 = new com.sleepycat.je.log.LogEntryType;

        $r111 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/dupConvert/INDeleteInfo");

        $r112 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r113 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r114 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r110.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(21, "INDelete", $r111, $r112, $r113, $r114);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_IN_DELETE_INFO> = $r110;

        $r115 = new com.sleepycat.je.log.LogEntryType;

        $r116 = new com.sleepycat.je.log.entry.OldBINDeltaLogEntry;

        specialinvoke $r116.<com.sleepycat.je.log.entry.OldBINDeltaLogEntry: void <init>(java.lang.Class)>(class "com/sleepycat/je/tree/OldBINDelta");

        $r117 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r118 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r119 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r115.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(22, "BINDelta", $r116, $r117, $r118, $r119);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA> = $r115;

        $r120 = new com.sleepycat.je.log.LogEntryType;

        $r121 = new com.sleepycat.je.log.entry.OldBINDeltaLogEntry;

        specialinvoke $r121.<com.sleepycat.je.log.entry.OldBINDeltaLogEntry: void <init>(java.lang.Class)>(class "com/sleepycat/je/tree/OldBINDelta");

        $r122 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r123 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r124 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r120.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(23, "DupBINDelta", $r121, $r122, $r123, $r124);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_OLD_DUP_BIN_DELTA> = $r120;

        $r125 = new com.sleepycat.je.log.entry.TraceLogEntry;

        specialinvoke $r125.<com.sleepycat.je.log.entry.TraceLogEntry: void <init>()>();

        $r126 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r127 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r128 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_NO_MATCH>;

        $r129 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        $r130 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(24, "Trace", $r125, $r126, $r127, $r128, $r129);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_TRACE> = $r130;

        $r131 = new com.sleepycat.je.log.LogEntryType;

        $r132 = new com.sleepycat.je.log.entry.FileHeaderEntry;

        specialinvoke $r132.<com.sleepycat.je.log.entry.FileHeaderEntry: void <init>(java.lang.Class)>(class "com/sleepycat/je/log/FileHeader");

        $r133 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r134 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r135 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r131.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(25, "FileHeader", $r132, $r133, $r134, $r135);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER> = $r131;

        $r136 = new com.sleepycat.je.log.LogEntryType;

        $r137 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/tree/dupConvert/INDupDeleteInfo");

        $r138 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r139 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r140 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r136.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(26, "INDupDelete", $r137, $r138, $r139, $r140);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_IN_DUPDELETE_INFO> = $r136;

        $r141 = new com.sleepycat.je.log.LogEntryType;

        $r142 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/txn/TxnPrepare");

        $r143 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        $r144 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r145 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r141.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(27, "Prepare", $r142, $r143, $r144, $r145);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_TXN_PREPARE> = $r141;

        $r146 = new com.sleepycat.je.log.LogEntryType;

        $r147 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/txn/RollbackStart");

        $r148 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r149 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r150 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r146.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(28, "RollbackStart", $r147, $r148, $r149, $r150);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_ROLLBACK_START> = $r146;

        $r151 = new com.sleepycat.je.log.LogEntryType;

        $r152 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/txn/RollbackEnd");

        $r153 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r154 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r155 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r151.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(29, "RollbackEnd", $r152, $r153, $r154, $r155);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_ROLLBACK_END> = $r151;

        $r156 = new com.sleepycat.je.log.entry.MatchpointLogEntry;

        specialinvoke $r156.<com.sleepycat.je.log.entry.MatchpointLogEntry: void <init>()>();

        $r157 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r158 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r159 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable REPLICABLE_MATCH>;

        $r160 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        $r161 = staticinvoke <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte,java.lang.String,com.sleepycat.je.log.entry.ReplicableLogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(30, "Matchpoint", $r156, $r157, $r158, $r159, $r160);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_MATCHPOINT> = $r161;

        $r162 = new com.sleepycat.je.log.LogEntryType$UserLNLogEntryType;

        $r163 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        specialinvoke $r162.<com.sleepycat.je.log.LogEntryType$UserLNLogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.LogEntryType$Txnal)>(31, "DEL_LN_TX", $r163);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DEL_LN_TRANSACTIONAL> = $r162;

        $r164 = new com.sleepycat.je.log.LogEntryType$UserLNLogEntryType;

        $r165 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        specialinvoke $r164.<com.sleepycat.je.log.LogEntryType$UserLNLogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.LogEntryType$Txnal)>(32, "DEL_LN", $r165);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DEL_LN> = $r164;

        $r166 = new com.sleepycat.je.log.LogEntryType$UserLNLogEntryType;

        $r167 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        specialinvoke $r166.<com.sleepycat.je.log.LogEntryType$UserLNLogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.LogEntryType$Txnal)>(33, "INS_LN_TX", $r167);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_INS_LN_TRANSACTIONAL> = $r166;

        $r168 = new com.sleepycat.je.log.LogEntryType$UserLNLogEntryType;

        $r169 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        specialinvoke $r168.<com.sleepycat.je.log.LogEntryType$UserLNLogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.LogEntryType$Txnal)>(34, "INS_LN", $r169);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_INS_LN> = $r168;

        $r170 = new com.sleepycat.je.log.LogEntryType$UserLNLogEntryType;

        $r171 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal TXNAL>;

        specialinvoke $r170.<com.sleepycat.je.log.LogEntryType$UserLNLogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.LogEntryType$Txnal)>(35, "UPD_LN_TX", $r171);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_UPD_LN_TRANSACTIONAL> = $r170;

        $r172 = new com.sleepycat.je.log.LogEntryType$UserLNLogEntryType;

        $r173 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        specialinvoke $r172.<com.sleepycat.je.log.LogEntryType$UserLNLogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.LogEntryType$Txnal)>(36, "UPD_LN", $r173);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_UPD_LN> = $r172;

        $r174 = new com.sleepycat.je.log.LogEntryType;

        $r175 = new com.sleepycat.je.log.entry.BINDeltaLogEntry;

        specialinvoke $r175.<com.sleepycat.je.log.entry.BINDeltaLogEntry: void <init>(java.lang.Class)>(class "com/sleepycat/je/tree/BIN");

        $r176 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r177 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r178 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType IN>;

        specialinvoke $r174.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(37, "NewBINDelta", $r175, $r176, $r177, $r178);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA> = $r174;

        $r179 = new com.sleepycat.je.log.LogEntryType;

        $r180 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/log/entry/EmptyLogEntry");

        $r181 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r182 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r183 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r179.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(38, "ImmutableFile", $r180, $r181, $r182, $r183);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_IMMUTABLE_FILE> = $r179;

        $r184 = new com.sleepycat.je.log.LogEntryType;

        $r185 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(java.lang.Class)>(class "com/sleepycat/je/log/entry/RestoreRequired");

        $r186 = <com.sleepycat.je.log.LogEntryType$Txnal: com.sleepycat.je.log.LogEntryType$Txnal NON_TXNAL>;

        $r187 = <com.sleepycat.je.log.LogEntryType$Marshall: com.sleepycat.je.log.LogEntryType$Marshall OUTSIDE_LATCH>;

        $r188 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        specialinvoke $r184.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$NodeType)>(39, "RestoreRequired", $r185, $r186, $r187, $r188);

        <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_RESTORE_REQUIRED> = $r184;

        return;
    }

    private static com.sleepycat.je.log.LogEntryType createReplicableLogEntryType(byte, java.lang.String, com.sleepycat.je.log.entry.ReplicableLogEntry, com.sleepycat.je.log.LogEntryType$Txnal, com.sleepycat.je.log.LogEntryType$Marshall, com.sleepycat.je.log.LogEntryType$Replicable, com.sleepycat.je.log.LogEntryType$NodeType)
    {
        byte typeNum;
        java.lang.String displayName;
        com.sleepycat.je.log.entry.ReplicableLogEntry logEntry;
        com.sleepycat.je.log.LogEntryType$Txnal isTransactional;
        com.sleepycat.je.log.LogEntryType$Marshall marshallBehavior;
        com.sleepycat.je.log.LogEntryType$Replicable replicationPossible;
        com.sleepycat.je.log.LogEntryType$NodeType nodeType;
        com.sleepycat.je.log.LogEntryType $r0;

        typeNum := @parameter0: byte;

        displayName := @parameter1: java.lang.String;

        logEntry := @parameter2: com.sleepycat.je.log.entry.ReplicableLogEntry;

        isTransactional := @parameter3: com.sleepycat.je.log.LogEntryType$Txnal;

        marshallBehavior := @parameter4: com.sleepycat.je.log.LogEntryType$Marshall;

        replicationPossible := @parameter5: com.sleepycat.je.log.LogEntryType$Replicable;

        nodeType := @parameter6: com.sleepycat.je.log.LogEntryType$NodeType;

        $r0 = new com.sleepycat.je.log.LogEntryType;

        specialinvoke $r0.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(typeNum, displayName, logEntry, isTransactional, marshallBehavior, replicationPossible, nodeType);

        return $r0;
    }

    private void <init>(byte, java.lang.String, com.sleepycat.je.log.entry.LogEntry, com.sleepycat.je.log.LogEntryType$Txnal, com.sleepycat.je.log.LogEntryType$Marshall, com.sleepycat.je.log.LogEntryType$Replicable, com.sleepycat.je.log.LogEntryType$NodeType)
    {
        com.sleepycat.je.log.LogEntryType this;
        byte typeNum;
        java.lang.String displayName;
        com.sleepycat.je.log.entry.LogEntry logEntry;
        com.sleepycat.je.log.LogEntryType$Txnal isTransactional;
        com.sleepycat.je.log.LogEntryType$Marshall marshallBehavior;
        com.sleepycat.je.log.LogEntryType$Replicable replicationPossible;
        com.sleepycat.je.log.LogEntryType$NodeType nodeType;
        com.sleepycat.je.log.LogEntryType[] $r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.AssertionError $r1, $r2;

        this := @this: com.sleepycat.je.log.LogEntryType;

        typeNum := @parameter0: byte;

        displayName := @parameter1: java.lang.String;

        logEntry := @parameter2: com.sleepycat.je.log.entry.LogEntry;

        isTransactional := @parameter3: com.sleepycat.je.log.LogEntryType$Txnal;

        marshallBehavior := @parameter4: com.sleepycat.je.log.LogEntryType$Marshall;

        replicationPossible := @parameter5: com.sleepycat.je.log.LogEntryType$Replicable;

        nodeType := @parameter6: com.sleepycat.je.log.LogEntryType$NodeType;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.log.LogEntryType: byte typeNum> = typeNum;

        this.<com.sleepycat.je.log.LogEntryType: java.lang.String displayName> = displayName;

        this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.entry.LogEntry logEntry> = logEntry;

        this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$Txnal isTransactional> = isTransactional;

        this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$Marshall marshallBehavior> = marshallBehavior;

        this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$Replicable replicationPossible> = replicationPossible;

        this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$NodeType nodeType> = nodeType;

        interfaceinvoke logEntry.<com.sleepycat.je.log.entry.LogEntry: void setLogType(com.sleepycat.je.log.LogEntryType)>(this);

        $r0 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType[] LOG_TYPES>;

        $i0 = typeNum - 1;

        $r0[$i0] = this;

        $z0 = <com.sleepycat.je.log.LogEntryType: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if logEntry == null goto label1;

        if replicationPossible != null goto label2;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $z1 = <com.sleepycat.je.log.LogEntryType: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke replicationPossible.<com.sleepycat.je.log.LogEntryType$Replicable: boolean isReplicable()>();

        if $z2 == 0 goto label3;

        $z3 = logEntry instanceof com.sleepycat.je.log.entry.ReplicableLogEntry;

        if $z3 != 0 goto label3;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Replicable log types must have replicable log entries");

        throw $r2;

     label3:
        return;
    }

    private void <init>(byte, java.lang.String, com.sleepycat.je.log.entry.LogEntry, com.sleepycat.je.log.LogEntryType$Txnal, com.sleepycat.je.log.LogEntryType$Marshall, com.sleepycat.je.log.LogEntryType$NodeType)
    {
        com.sleepycat.je.log.LogEntryType this;
        byte typeNum;
        java.lang.String displayName;
        com.sleepycat.je.log.entry.LogEntry logEntry;
        com.sleepycat.je.log.LogEntryType$Txnal isTransactional;
        com.sleepycat.je.log.LogEntryType$Marshall marshallBehavior;
        com.sleepycat.je.log.LogEntryType$NodeType nodeType;
        com.sleepycat.je.log.LogEntryType$Replicable $r0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        typeNum := @parameter0: byte;

        displayName := @parameter1: java.lang.String;

        logEntry := @parameter2: com.sleepycat.je.log.entry.LogEntry;

        isTransactional := @parameter3: com.sleepycat.je.log.LogEntryType$Txnal;

        marshallBehavior := @parameter4: com.sleepycat.je.log.LogEntryType$Marshall;

        nodeType := @parameter5: com.sleepycat.je.log.LogEntryType$NodeType;

        $r0 = <com.sleepycat.je.log.LogEntryType$Replicable: com.sleepycat.je.log.LogEntryType$Replicable LOCAL>;

        specialinvoke this.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(typeNum, displayName, logEntry, isTransactional, marshallBehavior, $r0, nodeType);

        return;
    }

    void <init>(byte, java.lang.String, com.sleepycat.je.log.entry.LogEntry, com.sleepycat.je.log.LogEntryType$Txnal, com.sleepycat.je.log.LogEntryType$Marshall, com.sleepycat.je.log.LogEntryType$Replicable, com.sleepycat.je.log.LogEntryType$NodeType, com.sleepycat.je.log.LogEntryType$1)
    {
        com.sleepycat.je.log.LogEntryType this;
        byte x0;
        java.lang.String x1;
        com.sleepycat.je.log.entry.LogEntry x2;
        com.sleepycat.je.log.LogEntryType$Txnal x3;
        com.sleepycat.je.log.LogEntryType$Marshall x4;
        com.sleepycat.je.log.LogEntryType$Replicable x5;
        com.sleepycat.je.log.LogEntryType$NodeType x6;
        com.sleepycat.je.log.LogEntryType$1 x7;

        this := @this: com.sleepycat.je.log.LogEntryType;

        x0 := @parameter0: byte;

        x1 := @parameter1: java.lang.String;

        x2 := @parameter2: com.sleepycat.je.log.entry.LogEntry;

        x3 := @parameter3: com.sleepycat.je.log.LogEntryType$Txnal;

        x4 := @parameter4: com.sleepycat.je.log.LogEntryType$Marshall;

        x5 := @parameter5: com.sleepycat.je.log.LogEntryType$Replicable;

        x6 := @parameter6: com.sleepycat.je.log.LogEntryType$NodeType;

        x7 := @parameter7: com.sleepycat.je.log.LogEntryType$1;

        specialinvoke this.<com.sleepycat.je.log.LogEntryType: void <init>(byte,java.lang.String,com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.LogEntryType$Txnal,com.sleepycat.je.log.LogEntryType$Marshall,com.sleepycat.je.log.LogEntryType$Replicable,com.sleepycat.je.log.LogEntryType$NodeType)>(x0, x1, x2, x3, x4, x5, x6);

        return;
    }

    public static java.util.Set getAllTypes()
    {
        java.util.HashSet 'ret', $r0;
        int i#4;
        com.sleepycat.je.log.LogEntryType[] $r1;
        com.sleepycat.je.log.LogEntryType $r2;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        'ret' = $r0;

        i#4 = 0;

     label1:
        if i#4 >= 39 goto label2;

        $r1 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType[] LOG_TYPES>;

        $r2 = $r1[i#4];

        virtualinvoke 'ret'.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        i#4 = i#4 + 1;

        goto label1;

     label2:
        return 'ret';
    }

    public static com.sleepycat.je.log.LogEntryType findType(byte)
    {
        byte typeNum;
        com.sleepycat.je.log.LogEntryType[] $r0;
        int $i0;
        com.sleepycat.je.log.LogEntryType $r1;

        typeNum := @parameter0: byte;

        if typeNum <= 0 goto label1;

        if typeNum <= 39 goto label2;

     label1:
        return null;

     label2:
        $r0 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType[] LOG_TYPES>;

        $i0 = typeNum - 1;

        $r1 = $r0[$i0];

        return $r1;
    }

    public byte getTypeNum()
    {
        com.sleepycat.je.log.LogEntryType this;
        byte $b0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $b0 = this.<com.sleepycat.je.log.LogEntryType: byte typeNum>;

        return $b0;
    }

    void <init>(byte)
    {
        com.sleepycat.je.log.LogEntryType this;
        byte typeNum;

        this := @this: com.sleepycat.je.log.LogEntryType;

        typeNum := @parameter0: byte;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.log.LogEntryType: byte typeNum> = typeNum;

        this.<com.sleepycat.je.log.LogEntryType: java.lang.String displayName> = null;

        this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.entry.LogEntry logEntry> = null;

        return;
    }

    static boolean isValidType(byte)
    {
        byte typeNum;
        boolean $z0;

        typeNum := @parameter0: byte;

        if typeNum <= 0 goto label1;

        if typeNum > 39 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sleepycat.je.log.entry.LogEntry getNewLogEntry() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.entry.LogEntry $r0, $r1;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r0 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.entry.LogEntry logEntry>;

        $r1 = interfaceinvoke $r0.<com.sleepycat.je.log.entry.LogEntry: com.sleepycat.je.log.entry.LogEntry clone()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.sleepycat.je.log.LogEntryType this, $r0;
        java.lang.Object obj;
        boolean $z0, $z1;
        byte $b0, $b1;

        this := @this: com.sleepycat.je.log.LogEntryType;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        $z0 = obj instanceof com.sleepycat.je.log.LogEntryType;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $b0 = this.<com.sleepycat.je.log.LogEntryType: byte typeNum>;

        $r0 = (com.sleepycat.je.log.LogEntryType) obj;

        $b1 = $r0.<com.sleepycat.je.log.LogEntryType: byte typeNum>;

        if $b0 != $b1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean isNodeType()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$NodeType $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r1 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$NodeType nodeType>;

        $r0 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType NONE>;

        if $r1 == $r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean equalsType(byte)
    {
        com.sleepycat.je.log.LogEntryType this;
        byte type, $b0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        type := @parameter0: byte;

        $b0 = this.<com.sleepycat.je.log.LogEntryType: byte typeNum>;

        if $b0 != type goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sleepycat.je.log.entry.LogEntry getSharedLogEntry()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.entry.LogEntry $r0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r0 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.entry.LogEntry logEntry>;

        return $r0;
    }

    public boolean isTransactional()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$Txnal $r0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r0 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$Txnal isTransactional>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.log.LogEntryType$Txnal: boolean isTransactional()>();

        return $z0;
    }

    public boolean isUserLNType()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$NodeType $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r1 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$NodeType nodeType>;

        $r0 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_USER>;

        if $r1 != $r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLNType()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$NodeType $r0, $r1;
        boolean $z0, $z1;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r1 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$NodeType nodeType>;

        $r0 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType LN_INTERNAL>;

        if $r1 == $r0 goto label1;

        $z0 = virtualinvoke this.<com.sleepycat.je.log.LogEntryType: boolean isUserLNType()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean marshallOutsideLatch()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$Marshall $r0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r0 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$Marshall marshallBehavior>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.log.LogEntryType$Marshall: boolean marshallOutsideLatch()>();

        return $z0;
    }

    public boolean isReplicationPossible()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$Replicable $r0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r0 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$Replicable replicationPossible>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.log.LogEntryType$Replicable: boolean isReplicable()>();

        return $z0;
    }

    public boolean isINType()
    {
        com.sleepycat.je.log.LogEntryType this;
        com.sleepycat.je.log.LogEntryType$NodeType $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r1 = this.<com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType$NodeType nodeType>;

        $r0 = <com.sleepycat.je.log.LogEntryType$NodeType: com.sleepycat.je.log.LogEntryType$NodeType IN>;

        if $r1 != $r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toStringNoVersion()
    {
        com.sleepycat.je.log.LogEntryType this;
        java.lang.String $r0;

        this := @this: com.sleepycat.je.log.LogEntryType;

        $r0 = this.<com.sleepycat.je.log.LogEntryType: java.lang.String displayName>;

        return $r0;
    }


