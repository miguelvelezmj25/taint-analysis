    public static int sendEmail(family.EmailSystem.Client, java.lang.String, java.lang.String, java.lang.String)
    {
        family.EmailSystem.Client sender, receiver;
        java.lang.String receiverAddress, subject, body, $r3, $r4, $r10;
        family.EmailSystem.Email email;
        java.lang.StringBuilder $r0, $r1, $r2, $r6, $r7, $r8, $r9;
        int $i0;
        java.lang.IllegalArgumentException $r5;

        sender := @parameter0: family.EmailSystem.Client;

        receiverAddress := @parameter1: java.lang.String;

        subject := @parameter2: java.lang.String;

        body := @parameter3: java.lang.String;

        email = staticinvoke <family.EmailSystem.Email: family.EmailSystem.Email createEmail(family.EmailSystem.Client,java.lang.String,java.lang.String,java.lang.String)>(sender, receiverAddress, subject, body);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sending Mail ");

        $i0 = virtualinvoke email.<family.EmailSystem.Email: int getId()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>($r3);

        staticinvoke <family.EmailSystem.Client: void outgoing(family.EmailSystem.Client,family.EmailSystem.Email)>(sender, email);

        $r4 = virtualinvoke email.<family.EmailSystem.Email: java.lang.String getEmailTo()>();

        receiver = staticinvoke <family.EmailSystem.Client: family.EmailSystem.Client getClientByAdress(java.lang.String)>($r4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(receiver);

        if receiver == null goto label1;

        staticinvoke <family.EmailSystem.Client: void incoming(family.EmailSystem.Client,family.EmailSystem.Email)>(receiver, email);

        goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(receiverAddress);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Unknown");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        return 0;
    }

    static void <clinit>()
    {
        family.EmailSystem.Client[] $r0;

        <family.EmailSystem.Client: int clientCounter> = 1;

        $r0 = newarray (family.EmailSystem.Client)[4];

        <family.EmailSystem.Client: family.EmailSystem.Client[] clients> = $r0;

        return;
    }

    public static family.EmailSystem.Client createClient(java.lang.String)
    {
        java.lang.String name;
        family.EmailSystem.Client client, $r0;
        int $i0, $i1, $i2;
        family.EmailSystem.Client[] $r1;

        name := @parameter0: java.lang.String;

        $r0 = new family.EmailSystem.Client;

        $i0 = <family.EmailSystem.Client: int clientCounter>;

        $i1 = $i0 + 1;

        <family.EmailSystem.Client: int clientCounter> = $i1;

        specialinvoke $r0.<family.EmailSystem.Client: void <init>(int,java.lang.String)>($i0, name);

        client = $r0;

        $r1 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $i2 = virtualinvoke client.<family.EmailSystem.Client: int getId()>();

        $r1[$i2] = client;

        return client;
    }

    public static void resetClients()
    {
        int i#3, $i0;
        family.EmailSystem.Client[] $r0, $r1;

        <family.EmailSystem.Client: int clientCounter> = 1;

        i#3 = 0;

     label1:
        $r0 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $i0 = lengthof $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#3 >= $i0 goto label2;

        $r1 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $r1[i#3] = null;

        i#3 = i#3 + 1;

        goto label1;

     label2:
        return;
    }

    public static void generateKeyPair(family.EmailSystem.Client, int)
    {
        family.EmailSystem.Client client;
        int seed;
        java.lang.InterruptedException e1, $r0;

        client := @parameter0: family.EmailSystem.Client;

        seed := @parameter1: int;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e1 = $r0;

        virtualinvoke e1.<java.lang.InterruptedException: void printStackTrace()>();

     label4:
        virtualinvoke client.<family.EmailSystem.Client: void setPrivateKey(int)>(seed);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    static void incoming(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client, receiver;
        family.EmailSystem.Email msg;
        int privkey, $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.InterruptedException $r0, e1#4, $r1, e1#25, $r2, e1#37;
        java.lang.String $r3;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        $z0 = <family.PL_Interface_impl: boolean DECRYPT>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label05;

     label01:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label02:
        goto label04;

     label03:
        $r0 := @caughtexception;

        e1#4 = $r0;

        virtualinvoke e1#4.<java.lang.InterruptedException: void printStackTrace()>();

     label04:
        privkey = virtualinvoke client.<family.EmailSystem.Client: int getPrivateKey()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(privkey);

        if privkey == 0 goto label05;

        $z1 = virtualinvoke msg.<family.EmailSystem.Email: boolean isEncrypted()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label05;

        $i0 = virtualinvoke msg.<family.EmailSystem.Email: int getEmailEncryptionKey()>();

        $z2 = staticinvoke <family.EmailSystem.Client: boolean isKeyPairValid(int,int)>($i0, privkey);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label05;

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailIsEncrypted(boolean)>(0);

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailEncryptionKey(int)>(0);

     label05:
        $z3 = <family.PL_Interface_impl: boolean VERIFY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label06;

        staticinvoke <family.EmailSystem.Client: void verify(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

     label06:
        $z4 = <family.PL_Interface_impl: boolean AUTORESPONDER>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label10;

     label07:
        staticinvoke <java.lang.Thread: void sleep(long)>(50L);

     label08:
        goto label10;

     label09:
        $r1 := @caughtexception;

        e1#25 = $r1;

        virtualinvoke e1#25.<java.lang.InterruptedException: void printStackTrace()>();

     label10:
        staticinvoke <family.EmailSystem.Client: void deliver(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

        $z5 = <family.PL_Interface_impl: boolean AUTORESPONDER>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label11;

        $z6 = virtualinvoke client.<family.EmailSystem.Client: boolean isAutoResponse()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label11;

        staticinvoke <family.EmailSystem.Client: void autoRespond(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

     label11:
        $z7 = <family.PL_Interface_impl: boolean FORWARD>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label16;

     label12:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label13:
        goto label15;

     label14:
        $r2 := @caughtexception;

        e1#37 = $r2;

        virtualinvoke e1#37.<java.lang.InterruptedException: void printStackTrace()>();

     label15:
        receiver = virtualinvoke client.<family.EmailSystem.Client: family.EmailSystem.Client getForwardReceiver()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(receiver);

        if receiver == null goto label16;

        $r3 = virtualinvoke receiver.<family.EmailSystem.Client: java.lang.String getName()>();

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailTo(java.lang.String)>($r3);

        staticinvoke <family.EmailSystem.Client: void forward(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

        staticinvoke <family.EmailSystem.Client: void incoming(family.EmailSystem.Client,family.EmailSystem.Email)>(receiver, msg);

     label16:
        return;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.InterruptedException from label12 to label13 with label14;
    }

    static family.EmailSystem.Client getClientByAdress(java.lang.String)
    {
        java.lang.String address, $r5;
        int i#2, $i0;
        family.EmailSystem.Client[] $r0, $r1, $r3, $r6;
        family.EmailSystem.Client $r2, $r4, $r7;
        boolean $z0;

        address := @parameter0: java.lang.String;

        i#2 = 0;

     label1:
        $r0 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $i0 = lengthof $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#2 >= $i0 goto label3;

        $r1 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $r2 = $r1[i#2];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 == null goto label2;

        $r3 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $r4 = $r3[i#2];

        $r5 = virtualinvoke $r4.<family.EmailSystem.Client: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(address);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r6 = <family.EmailSystem.Client: family.EmailSystem.Client[] clients>;

        $r7 = $r6[i#2];

        return $r7;

     label2:
        i#2 = i#2 + 1;

        goto label1;

     label3:
        return null;
    }

    static void outgoing(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client, receiver, $r2;
        family.EmailSystem.Email msg;
        java.util.List aliasReceivers;
        java.lang.String receiverAddress, $r0, $r4, $r5, $r9;
        int pubkey, i#12, $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r1, $r3;
        java.lang.StringBuilder $r6, $r7, $r8;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        $z0 = <family.PL_Interface_impl: boolean SIGN>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        staticinvoke <family.EmailSystem.Client: void sign(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

     label1:
        $z1 = <family.PL_Interface_impl: boolean ADDRESSBOOK>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        $r0 = virtualinvoke msg.<family.EmailSystem.Email: java.lang.String getEmailTo()>();

        aliasReceivers = virtualinvoke client.<family.EmailSystem.Client: java.util.List getAddressBookReceiversForAlias(java.lang.String)>($r0);

        $z2 = interfaceinvoke aliasReceivers.<java.util.List: boolean isEmpty()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label4;

        i#12 = 1;

     label2:
        $i0 = interfaceinvoke aliasReceivers.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#12 >= $i0 goto label3;

        $r1 = interfaceinvoke aliasReceivers.<java.util.List: java.lang.Object get(int)>(i#12);

        receiverAddress = (java.lang.String) $r1;

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailTo(java.lang.String)>(receiverAddress);

        staticinvoke <family.EmailSystem.Client: void outgoing(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

        $r2 = staticinvoke <family.EmailSystem.Client: family.EmailSystem.Client getClientByAdress(java.lang.String)>(receiverAddress);

        staticinvoke <family.EmailSystem.Client: void incoming(family.EmailSystem.Client,family.EmailSystem.Email)>($r2, msg);

        i#12 = i#12 + 1;

        goto label2;

     label3:
        $r3 = interfaceinvoke aliasReceivers.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailTo(java.lang.String)>($r4);

     label4:
        $z3 = <family.PL_Interface_impl: boolean ENCRYPT>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label5;

        $r5 = virtualinvoke msg.<family.EmailSystem.Email: java.lang.String getEmailTo()>();

        receiver = staticinvoke <family.EmailSystem.Client: family.EmailSystem.Client getClientByAdress(java.lang.String)>($r5);

        pubkey = virtualinvoke client.<family.EmailSystem.Client: int getKeyringPublicKeyByClient(family.EmailSystem.Client)>(receiver);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pubkey);

        if pubkey == 0 goto label5;

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailEncryptionKey(int)>(pubkey);

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailIsEncrypted(boolean)>(1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encrypted Mail ");

        $i1 = virtualinvoke msg.<family.EmailSystem.Email: int getId()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>($r9);

     label5:
        virtualinvoke msg.<family.EmailSystem.Email: void setEmailFrom(family.EmailSystem.Client)>(client);

        staticinvoke <family.EmailSystem.Client: void mail(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

        return;
    }

    static void forward(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client;
        family.EmailSystem.Email msg;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>("Forwarding message.\n");

        staticinvoke <family.EmailSystem.Email: void printMail(family.EmailSystem.Email)>(msg);

        staticinvoke <family.EmailSystem.Client: void outgoing(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

        return;
    }

    static void autoRespond(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client, sender;
        family.EmailSystem.Email msg;
        java.lang.String $r0;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>("sending autoresponse\n");

        sender = virtualinvoke msg.<family.EmailSystem.Email: family.EmailSystem.Client getEmailFrom()>();

        $r0 = virtualinvoke sender.<family.EmailSystem.Client: java.lang.String getName()>();

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailTo(java.lang.String)>($r0);

        staticinvoke <family.EmailSystem.Client: void outgoing(family.EmailSystem.Client,family.EmailSystem.Email)>(client, msg);

        staticinvoke <family.EmailSystem.Client: void incoming(family.EmailSystem.Client,family.EmailSystem.Email)>(sender, msg);

        return;
    }

    static void deliver(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client;
        family.EmailSystem.Email msg;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>("mail delivered\n");

        return;
    }

    static void verify(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client, $r0;
        family.EmailSystem.Email msg;
        int pubkey, $i0;
        boolean $z0;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        $r0 = virtualinvoke msg.<family.EmailSystem.Email: family.EmailSystem.Client getEmailFrom()>();

        pubkey = virtualinvoke client.<family.EmailSystem.Client: int getKeyringPublicKeyByClient(family.EmailSystem.Client)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pubkey);

        if pubkey == 0 goto label1;

        $i0 = virtualinvoke msg.<family.EmailSystem.Email: int getEmailSignKey()>();

        $z0 = staticinvoke <family.EmailSystem.Client: boolean isKeyPairValid(int,int)>($i0, pubkey);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        virtualinvoke msg.<family.EmailSystem.Email: void setIsSignatureVerified(boolean)>(1);

     label1:
        return;
    }

    public static boolean isKeyPairValid(int, int)
    {
        int publicKey, privateKey;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        publicKey := @parameter0: int;

        privateKey := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keypair valid ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(publicKey);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(privateKey);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>($r5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(publicKey);

        if publicKey == 0 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(privateKey);

        if privateKey != 0 goto label2;

     label1:
        return 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(privateKey);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(publicKey);

        if privateKey != publicKey goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    static void mail(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client;
        family.EmailSystem.Email msg;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        staticinvoke <family.EmailSystem.Util: void prompt(java.lang.String)>("mail sent");

        return;
    }

    static void sign(family.EmailSystem.Client, family.EmailSystem.Email)
    {
        family.EmailSystem.Client client;
        family.EmailSystem.Email msg;
        int privkey;

        client := @parameter0: family.EmailSystem.Client;

        msg := @parameter1: family.EmailSystem.Email;

        privkey = virtualinvoke client.<family.EmailSystem.Client: int getPrivateKey()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(privkey);

        if privkey != 0 goto label1;

        return;

     label1:
        virtualinvoke msg.<family.EmailSystem.Email: void setEmailIsSigned(boolean)>(1);

        virtualinvoke msg.<family.EmailSystem.Email: void setEmailSignKey(int)>(privkey);

        return;
    }

    public int getId()
    {
        family.EmailSystem.Client this;
        int $i0;

        this := @this: family.EmailSystem.Client;

        $i0 = this.<family.EmailSystem.Client: int id>;

        return $i0;
    }

    private void <init>(int, java.lang.String)
    {
        family.EmailSystem.Client this;
        int id;
        java.lang.String name;
        java.util.ArrayList $r0, $r1;

        this := @this: family.EmailSystem.Client;

        id := @parameter0: int;

        name := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<family.EmailSystem.Client: java.util.ArrayList keyring> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        this.<family.EmailSystem.Client: java.util.ArrayList addressbook> = $r1;

        this.<family.EmailSystem.Client: int id> = id;

        this.<family.EmailSystem.Client: java.lang.String name> = name;

        return;
    }

    public java.lang.String getName()
    {
        family.EmailSystem.Client this;
        java.lang.String $r0;

        this := @this: family.EmailSystem.Client;

        $r0 = this.<family.EmailSystem.Client: java.lang.String name>;

        return $r0;
    }

    public void addKeyringEntry(family.EmailSystem.Client, int)
    {
        family.EmailSystem.Client this, client;
        int publicKey;
        family.EmailSystem.Client$KeyringEntry $r0;
        java.util.ArrayList $r1;

        this := @this: family.EmailSystem.Client;

        client := @parameter0: family.EmailSystem.Client;

        publicKey := @parameter1: int;

        $r1 = this.<family.EmailSystem.Client: java.util.ArrayList keyring>;

        $r0 = new family.EmailSystem.Client$KeyringEntry;

        specialinvoke $r0.<family.EmailSystem.Client$KeyringEntry: void <init>(family.EmailSystem.Client,int)>(client, publicKey);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void setPrivateKey(int)
    {
        family.EmailSystem.Client this;
        int privateKey;

        this := @this: family.EmailSystem.Client;

        privateKey := @parameter0: int;

        this.<family.EmailSystem.Client: int privateKey> = privateKey;

        return;
    }

    public int getPrivateKey()
    {
        family.EmailSystem.Client this;
        int $i0;

        this := @this: family.EmailSystem.Client;

        $i0 = this.<family.EmailSystem.Client: int privateKey>;

        return $i0;
    }

    public void setAutoResponse(boolean)
    {
        family.EmailSystem.Client this;
        boolean autoResponse;

        this := @this: family.EmailSystem.Client;

        autoResponse := @parameter0: boolean;

        this.<family.EmailSystem.Client: boolean autoResponse> = autoResponse;

        return;
    }

    public void setForwardReceiver(family.EmailSystem.Client)
    {
        family.EmailSystem.Client this, forwardReceiver;

        this := @this: family.EmailSystem.Client;

        forwardReceiver := @parameter0: family.EmailSystem.Client;

        this.<family.EmailSystem.Client: family.EmailSystem.Client forwardReceiver> = forwardReceiver;

        return;
    }

    public void addAddressbookEntry(java.lang.String, java.lang.String)
    {
        family.EmailSystem.Client this;
        java.lang.String alias, receiver, $r3;
        java.lang.InterruptedException e1, $r0;
        java.util.Iterator l3;
        family.EmailSystem.Client$AddressBookEntry e, newEntry, $r4;
        java.util.ArrayList $r1, $r5;
        boolean $z0, $z1;
        java.lang.Object $r2;

        this := @this: family.EmailSystem.Client;

        alias := @parameter0: java.lang.String;

        receiver := @parameter1: java.lang.String;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e1 = $r0;

        virtualinvoke e1.<java.lang.InterruptedException: void printStackTrace()>();

     label4:
        $r1 = this.<family.EmailSystem.Client: java.util.ArrayList addressbook>;

        l3 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        e = (family.EmailSystem.Client$AddressBookEntry) $r2;

        $r3 = virtualinvoke e.<family.EmailSystem.Client$AddressBookEntry: java.lang.String getAlias()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(alias);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label6;

        virtualinvoke e.<family.EmailSystem.Client$AddressBookEntry: void addReceiver(java.lang.String)>(receiver);

        return;

     label6:
        goto label5;

     label7:
        $r4 = new family.EmailSystem.Client$AddressBookEntry;

        specialinvoke $r4.<family.EmailSystem.Client$AddressBookEntry: void <init>(java.lang.String)>(alias);

        newEntry = $r4;

        virtualinvoke newEntry.<family.EmailSystem.Client$AddressBookEntry: void addReceiver(java.lang.String)>(receiver);

        $r5 = this.<family.EmailSystem.Client: java.util.ArrayList addressbook>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(newEntry);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public java.util.List getAddressBookReceiversForAlias(java.lang.String)
    {
        family.EmailSystem.Client this;
        java.lang.String alias, $r2;
        java.util.Iterator l2;
        family.EmailSystem.Client$AddressBookEntry e;
        java.util.ArrayList $r0, $r3;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.util.List $r4;

        this := @this: family.EmailSystem.Client;

        alias := @parameter0: java.lang.String;

        $r0 = this.<family.EmailSystem.Client: java.util.ArrayList addressbook>;

        l2 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        e = (family.EmailSystem.Client$AddressBookEntry) $r1;

        $r2 = virtualinvoke e.<family.EmailSystem.Client$AddressBookEntry: java.lang.String getAlias()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(alias);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke e.<family.EmailSystem.Client$AddressBookEntry: java.util.ArrayList getReceivers()>();

        return $r3;

     label2:
        goto label1;

     label3:
        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;
    }

    public int getKeyringPublicKeyByClient(family.EmailSystem.Client)
    {
        family.EmailSystem.Client this, client, $r2;
        java.util.Iterator l2;
        family.EmailSystem.Client$KeyringEntry e;
        java.util.ArrayList $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        int $i0;

        this := @this: family.EmailSystem.Client;

        client := @parameter0: family.EmailSystem.Client;

        $r0 = this.<family.EmailSystem.Client: java.util.ArrayList keyring>;

        l2 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        e = (family.EmailSystem.Client$KeyringEntry) $r1;

        $r2 = virtualinvoke e.<family.EmailSystem.Client$KeyringEntry: family.EmailSystem.Client getKeyOwner()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(client);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke e.<family.EmailSystem.Client$KeyringEntry: int getPublicKey()>();

        return $i0;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean isAutoResponse()
    {
        family.EmailSystem.Client this;
        boolean $z0;

        this := @this: family.EmailSystem.Client;

        $z0 = this.<family.EmailSystem.Client: boolean autoResponse>;

        return $z0;
    }

    public family.EmailSystem.Client getForwardReceiver()
    {
        family.EmailSystem.Client this, $r0;

        this := @this: family.EmailSystem.Client;

        $r0 = this.<family.EmailSystem.Client: family.EmailSystem.Client forwardReceiver>;

        return $r0;
    }


