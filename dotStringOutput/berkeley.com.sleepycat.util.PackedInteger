digraph readLong {
"buf := @parameter0: byte[] {1931616070}" -> "off#1 := @parameter1: int {1267569247}";
"off#1 := @parameter1: int {1267569247}" -> "off#4 = off#1 + 1 {2061772370}";
"off#4 = off#1 + 1 {2061772370}" -> "b1 = buf[off#1] {157982335}";
"b1 = buf[off#1] {157982335}" -> "if b1 >= -119 goto (branch) {1880102535}";
"if b1 >= -119 goto (branch) {1880102535}" -> "negative#9 = 1 {108858557}";
"if b1 >= -119 goto (branch) {1880102535}" -> "if b1 <= 119 goto $l1 = (long) b1 {159774019}";
"negative#9 = 1 {108858557}" -> "$b0 = neg b1 {2085353349}";
"$b0 = neg b1 {2085353349}" -> "byteLen#14 = $b0 - 119 {1384688751}";
"byteLen#14 = $b0 - 119 {1384688751}" -> "goto [?= off#25 = off#4 + 1] {168768360}";
"goto [?= off#25 = off#4 + 1] {168768360}" -> "off#25 = off#4 + 1 {1810975589}";
"if b1 <= 119 goto $l1 = (long) b1 {159774019}" -> "negative#9 = 0 {1954372573}";
"if b1 <= 119 goto $l1 = (long) b1 {159774019}" -> "$l1 = (long) b1 {1308382278}";
"negative#9 = 0 {1954372573}" -> "byteLen#14 = b1 - 119 {1991931182}";
"byteLen#14 = b1 - 119 {1991931182}" -> "goto [?= off#25 = off#4 + 1] {986407497}";
"goto [?= off#25 = off#4 + 1] {986407497}" -> "off#25 = off#4 + 1 {1810975589}";
"$l1 = (long) b1 {1308382278}" -> "return $l1 {1749699538}";
"off#25 = off#4 + 1 {1810975589}" -> "$b2 = buf[off#4] {1365219602}";
"$b2 = buf[off#4] {1365219602}" -> "$l3 = (long) $b2 {1302112740}";
"$l3 = (long) $b2 {1302112740}" -> "value#30 = $l3 & 255L {1305962465}";
"value#30 = $l3 & 255L {1305962465}" -> "if byteLen#14 <= 1 goto (branch) {599096158}";
"if byteLen#14 <= 1 goto (branch) {599096158}" -> "off#36 = off#25 + 1 {49500957}";
"if byteLen#14 <= 1 goto (branch) {599096158}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#36 = off#25 + 1 {49500957}" -> "$b4 = buf[off#25] {1087562958}";
"$b4 = buf[off#25] {1087562958}" -> "$l5 = (long) $b4 {1143195966}";
"$l5 = (long) $b4 {1143195966}" -> "$l6 = $l5 & 255L {947137109}";
"$l6 = $l5 & 255L {947137109}" -> "$l7 = $l6 << 8 {830388866}";
"$l7 = $l6 << 8 {830388866}" -> "value#30 = value#30 | $l7 {2105312120}";
"value#30 = value#30 | $l7 {2105312120}" -> "if byteLen#14 <= 2 goto (branch) {92452116}";
"if byteLen#14 <= 2 goto (branch) {92452116}" -> "off#49 = off#36 + 1 {941697874}";
"if byteLen#14 <= 2 goto (branch) {92452116}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#49 = off#36 + 1 {941697874}" -> "$b8 = buf[off#36] {1084859808}";
"$b8 = buf[off#36] {1084859808}" -> "$l9 = (long) $b8 {744181457}";
"$l9 = (long) $b8 {744181457}" -> "$l10 = $l9 & 255L {1844449509}";
"$l10 = $l9 & 255L {1844449509}" -> "$l11 = $l10 << 16 {371379030}";
"$l11 = $l10 << 16 {371379030}" -> "value#30 = value#30 | $l11 {1901392078}";
"value#30 = value#30 | $l11 {1901392078}" -> "if byteLen#14 <= 3 goto (branch) {828206242}";
"if byteLen#14 <= 3 goto (branch) {828206242}" -> "off#62 = off#49 + 1 {2109889636}";
"if byteLen#14 <= 3 goto (branch) {828206242}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#62 = off#49 + 1 {2109889636}" -> "$b12 = buf[off#49] {1400097819}";
"$b12 = buf[off#49] {1400097819}" -> "$l13 = (long) $b12 {296665518}";
"$l13 = (long) $b12 {296665518}" -> "$l14 = $l13 & 255L {1493513960}";
"$l14 = $l13 & 255L {1493513960}" -> "$l15 = $l14 << 24 {1939814979}";
"$l15 = $l14 << 24 {1939814979}" -> "value#30 = value#30 | $l15 {1846703336}";
"value#30 = value#30 | $l15 {1846703336}" -> "if byteLen#14 <= 4 goto (branch) {843290281}";
"if byteLen#14 <= 4 goto (branch) {843290281}" -> "off#75 = off#62 + 1 {1358793916}";
"if byteLen#14 <= 4 goto (branch) {843290281}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#75 = off#62 + 1 {1358793916}" -> "$b16 = buf[off#62] {1206451559}";
"$b16 = buf[off#62] {1206451559}" -> "$l17 = (long) $b16 {1327999404}";
"$l17 = (long) $b16 {1327999404}" -> "$l18 = $l17 & 255L {539883973}";
"$l18 = $l17 & 255L {539883973}" -> "$l19 = $l18 << 32 {1387695122}";
"$l19 = $l18 << 32 {1387695122}" -> "value#30 = value#30 | $l19 {1236494265}";
"value#30 = value#30 | $l19 {1236494265}" -> "if byteLen#14 <= 5 goto (branch) {49280965}";
"if byteLen#14 <= 5 goto (branch) {49280965}" -> "off#88 = off#75 + 1 {1292311426}";
"if byteLen#14 <= 5 goto (branch) {49280965}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#88 = off#75 + 1 {1292311426}" -> "$b20 = buf[off#75] {55485210}";
"$b20 = buf[off#75] {55485210}" -> "$l21 = (long) $b20 {1282208656}";
"$l21 = (long) $b20 {1282208656}" -> "$l22 = $l21 & 255L {1436115700}";
"$l22 = $l21 & 255L {1436115700}" -> "$l23 = $l22 << 40 {149080762}";
"$l23 = $l22 << 40 {149080762}" -> "value#30 = value#30 | $l23 {199982906}";
"value#30 = value#30 | $l23 {199982906}" -> "if byteLen#14 <= 6 goto (branch) {809624107}";
"if byteLen#14 <= 6 goto (branch) {809624107}" -> "off#101 = off#88 + 1 {203029509}";
"if byteLen#14 <= 6 goto (branch) {809624107}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#101 = off#88 + 1 {203029509}" -> "$b24 = buf[off#88] {1991072473}";
"$b24 = buf[off#88] {1991072473}" -> "$l25 = (long) $b24 {228436475}";
"$l25 = (long) $b24 {228436475}" -> "$l26 = $l25 & 255L {1305847166}";
"$l26 = $l25 & 255L {1305847166}" -> "$l27 = $l26 << 48 {822148131}";
"$l27 = $l26 << 48 {822148131}" -> "value#30 = value#30 | $l27 {600335401}";
"value#30 = value#30 | $l27 {600335401}" -> "if byteLen#14 <= 7 goto (branch) {593115792}";
"if byteLen#14 <= 7 goto (branch) {593115792}" -> "off#114 = off#101 + 1 {1069086544}";
"if byteLen#14 <= 7 goto (branch) {593115792}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"off#114 = off#101 + 1 {1069086544}" -> "$b28 = buf[off#101] {1667823442}";
"$b28 = buf[off#101] {1667823442}" -> "$l29 = (long) $b28 {1941613448}";
"$l29 = (long) $b28 {1941613448}" -> "$l30 = $l29 & 255L {1622744024}";
"$l30 = $l29 & 255L {1622744024}" -> "$l31 = $l30 << 56 {1645197056}";
"$l31 = $l30 << 56 {1645197056}" -> "value#30 = value#30 | $l31 {1232073284}";
"value#30 = value#30 | $l31 {1232073284}" -> "if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}";
"if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}" -> "$l32 = neg value#30 {977110402}";
"if negative#9 == 0 goto $l33 = value#30 + 119L {1873203015}" -> "$l33 = value#30 + 119L {2063550973}";
"$l32 = neg value#30 {977110402}" -> "$l33 = $l32 - 119L {1707075146}";
"$l33 = $l32 - 119L {1707075146}" -> "goto [?= return $l33] {1554824076}";
"goto [?= return $l33] {1554824076}" -> "return $l33 {1127673333}";
"$l33 = value#30 + 119L {2063550973}" -> "return $l33 {1127673333}";
}

digraph getReadLongLength {
"buf := @parameter0: byte[] {2065269307}" -> "off := @parameter1: int {574066181}";
"off := @parameter1: int {574066181}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, off) {516305585}";
"$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, off) {516305585}" -> "return $i0 {723307610}";
}

digraph getReadIntLength {
"buf := @parameter0: byte[] {266087601}" -> "off := @parameter1: int {1948996028}";
"off := @parameter1: int {1948996028}" -> "b1 = buf[off] {2069315533}";
"b1 = buf[off] {2069315533}" -> "if b1 >= -119 goto (branch) {1723259498}";
"if b1 >= -119 goto (branch) {1723259498}" -> "$b0 = neg b1 {868236147}";
"if b1 >= -119 goto (branch) {1723259498}" -> "if b1 <= 119 goto return 1 {1999957593}";
"$b0 = neg b1 {868236147}" -> "$i1 = $b0 - 119 {150229247}";
"$i1 = $b0 - 119 {150229247}" -> "$i2 = $i1 + 1 {2005689771}";
"$i2 = $i1 + 1 {2005689771}" -> "return $i2 {574096977}";
"if b1 <= 119 goto return 1 {1999957593}" -> "$i3 = b1 - 119 {2079190172}";
"if b1 <= 119 goto return 1 {1999957593}" -> "return 1 {561238586}";
"$i3 = b1 - 119 {2079190172}" -> "$i4 = $i3 + 1 {1576144373}";
"$i4 = $i3 + 1 {1576144373}" -> "return $i4 {1115603412}";
}

digraph readInt {
"buf := @parameter0: byte[] {1003072829}" -> "off#1 := @parameter1: int {413414704}";
"off#1 := @parameter1: int {413414704}" -> "off#4 = off#1 + 1 {1980416250}";
"off#4 = off#1 + 1 {1980416250}" -> "b1 = buf[off#1] {1481263134}";
"b1 = buf[off#1] {1481263134}" -> "if b1 >= -119 goto (branch) {408185114}";
"if b1 >= -119 goto (branch) {408185114}" -> "negative#9 = 1 {1256380669}";
"if b1 >= -119 goto (branch) {408185114}" -> "if b1 <= 119 goto return b1 {1177992598}";
"negative#9 = 1 {1256380669}" -> "$b0 = neg b1 {1163957236}";
"$b0 = neg b1 {1163957236}" -> "byteLen#14 = $b0 - 119 {1704786892}";
"byteLen#14 = $b0 - 119 {1704786892}" -> "goto [?= off#24 = off#4 + 1] {1645904432}";
"goto [?= off#24 = off#4 + 1] {1645904432}" -> "off#24 = off#4 + 1 {2113462148}";
"if b1 <= 119 goto return b1 {1177992598}" -> "negative#9 = 0 {1775420912}";
"if b1 <= 119 goto return b1 {1177992598}" -> "return b1 {682884547}";
"negative#9 = 0 {1775420912}" -> "byteLen#14 = b1 - 119 {1063253263}";
"byteLen#14 = b1 - 119 {1063253263}" -> "goto [?= off#24 = off#4 + 1] {725505845}";
"goto [?= off#24 = off#4 + 1] {725505845}" -> "off#24 = off#4 + 1 {2113462148}";
"off#24 = off#4 + 1 {2113462148}" -> "$b1 = buf[off#4] {1242724381}";
"$b1 = buf[off#4] {1242724381}" -> "value#28 = $b1 & 255 {41720424}";
"value#28 = $b1 & 255 {41720424}" -> "if byteLen#14 <= 1 goto (branch) {115151204}";
"if byteLen#14 <= 1 goto (branch) {115151204}" -> "off#34 = off#24 + 1 {404397251}";
"if byteLen#14 <= 1 goto (branch) {115151204}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {696208934}";
"off#34 = off#24 + 1 {404397251}" -> "$b2 = buf[off#24] {1113422808}";
"$b2 = buf[off#24] {1113422808}" -> "$s3 = $b2 & 255 {1875330649}";
"$s3 = $b2 & 255 {1875330649}" -> "$i4 = $s3 << 8 {182259691}";
"$i4 = $s3 << 8 {182259691}" -> "value#28 = value#28 | $i4 {775764347}";
"value#28 = value#28 | $i4 {775764347}" -> "if byteLen#14 <= 2 goto (branch) {1198352455}";
"if byteLen#14 <= 2 goto (branch) {1198352455}" -> "off#46 = off#34 + 1 {1231232802}";
"if byteLen#14 <= 2 goto (branch) {1198352455}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {696208934}";
"off#46 = off#34 + 1 {1231232802}" -> "$b5 = buf[off#34] {719656137}";
"$b5 = buf[off#34] {719656137}" -> "$s6 = $b5 & 255 {989676451}";
"$s6 = $b5 & 255 {989676451}" -> "$i7 = $s6 << 16 {1769460530}";
"$i7 = $s6 << 16 {1769460530}" -> "value#28 = value#28 | $i7 {507491256}";
"value#28 = value#28 | $i7 {507491256}" -> "if byteLen#14 <= 3 goto (branch) {576121977}";
"if byteLen#14 <= 3 goto (branch) {576121977}" -> "off#58 = off#46 + 1 {1320965505}";
"if byteLen#14 <= 3 goto (branch) {576121977}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {696208934}";
"off#58 = off#46 + 1 {1320965505}" -> "$b8 = buf[off#46] {907869511}";
"$b8 = buf[off#46] {907869511}" -> "$s9 = $b8 & 255 {1203091128}";
"$s9 = $b8 & 255 {1203091128}" -> "$i10 = $s9 << 24 {984534369}";
"$i10 = $s9 << 24 {984534369}" -> "value#28 = value#28 | $i10 {1103609061}";
"value#28 = value#28 | $i10 {1103609061}" -> "if negative#9 == 0 goto $i12 = value#28 + 119 {696208934}";
"if negative#9 == 0 goto $i12 = value#28 + 119 {696208934}" -> "$i11 = neg value#28 {271686292}";
"if negative#9 == 0 goto $i12 = value#28 + 119 {696208934}" -> "$i12 = value#28 + 119 {905369115}";
"$i11 = neg value#28 {271686292}" -> "$i12 = $i11 - 119 {350008756}";
"$i12 = $i11 - 119 {350008756}" -> "goto [?= return $i12] {288305828}";
"goto [?= return $i12] {288305828}" -> "return $i12 {1571059731}";
"$i12 = value#28 + 119 {905369115}" -> "return $i12 {1571059731}";
}

digraph readReverseInt {
"buf := @parameter0: byte[] {685198713}" -> "off#1 := @parameter1: int {93573641}";
"off#1 := @parameter1: int {93573641}" -> "b1 = buf[off#1] {149302452}";
"b1 = buf[off#1] {149302452}" -> "if b1 >= -119 goto (branch) {242255624}";
"if b1 >= -119 goto (branch) {242255624}" -> "negative#8 = 1 {656482341}";
"if b1 >= -119 goto (branch) {242255624}" -> "if b1 <= 119 goto return b1 {1736239587}";
"negative#8 = 1 {656482341}" -> "$b0 = neg b1 {1309000245}";
"$b0 = neg b1 {1309000245}" -> "byteLen#13 = $b0 - 119 {2075622687}";
"byteLen#13 = $b0 - 119 {2075622687}" -> "goto [?= off#22 = off#1 + -1] {1286478141}";
"goto [?= off#22 = off#1 + -1] {1286478141}" -> "off#22 = off#1 + -1 {511615026}";
"if b1 <= 119 goto return b1 {1736239587}" -> "negative#8 = 0 {1782299812}";
"if b1 <= 119 goto return b1 {1736239587}" -> "return b1 {712850146}";
"negative#8 = 0 {1782299812}" -> "byteLen#13 = b1 - 119 {64564720}";
"byteLen#13 = b1 - 119 {64564720}" -> "goto [?= off#22 = off#1 + -1] {1036763}";
"goto [?= off#22 = off#1 + -1] {1036763}" -> "off#22 = off#1 + -1 {511615026}";
"off#22 = off#1 + -1 {511615026}" -> "$b1 = buf[off#22] {1114379716}";
"$b1 = buf[off#22] {1114379716}" -> "value#27 = $b1 & 255 {1339489843}";
"value#27 = $b1 & 255 {1339489843}" -> "if byteLen#13 <= 1 goto (branch) {1536189641}";
"if byteLen#13 <= 1 goto (branch) {1536189641}" -> "off#32 = off#22 + -1 {1569753234}";
"if byteLen#13 <= 1 goto (branch) {1536189641}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {1304694933}";
"off#32 = off#22 + -1 {1569753234}" -> "$b2 = buf[off#32] {1467430712}";
"$b2 = buf[off#32] {1467430712}" -> "$s3 = $b2 & 255 {2076139879}";
"$s3 = $b2 & 255 {2076139879}" -> "$i4 = $s3 << 8 {767922886}";
"$i4 = $s3 << 8 {767922886}" -> "value#27 = value#27 | $i4 {1951958416}";
"value#27 = value#27 | $i4 {1951958416}" -> "if byteLen#13 <= 2 goto (branch) {215006454}";
"if byteLen#13 <= 2 goto (branch) {215006454}" -> "off#44 = off#32 + -1 {717328098}";
"if byteLen#13 <= 2 goto (branch) {215006454}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {1304694933}";
"off#44 = off#32 + -1 {717328098}" -> "$b5 = buf[off#44] {966153170}";
"$b5 = buf[off#44] {966153170}" -> "$s6 = $b5 & 255 {1337095938}";
"$s6 = $b5 & 255 {1337095938}" -> "$i7 = $s6 << 16 {437414455}";
"$i7 = $s6 << 16 {437414455}" -> "value#27 = value#27 | $i7 {1032829667}";
"value#27 = value#27 | $i7 {1032829667}" -> "if byteLen#13 <= 3 goto (branch) {125501591}";
"if byteLen#13 <= 3 goto (branch) {125501591}" -> "off#56 = off#44 + -1 {442119488}";
"if byteLen#13 <= 3 goto (branch) {125501591}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {1304694933}";
"off#56 = off#44 + -1 {442119488}" -> "$b8 = buf[off#56] {496003472}";
"$b8 = buf[off#56] {496003472}" -> "$s9 = $b8 & 255 {1532847973}";
"$s9 = $b8 & 255 {1532847973}" -> "$i10 = $s9 << 24 {1476321973}";
"$i10 = $s9 << 24 {1476321973}" -> "value#27 = value#27 | $i10 {1114335739}";
"value#27 = value#27 | $i10 {1114335739}" -> "if negative#8 == 0 goto $i12 = value#27 + 119 {1304694933}";
"if negative#8 == 0 goto $i12 = value#27 + 119 {1304694933}" -> "$i11 = neg value#27 {1277698477}";
"if negative#8 == 0 goto $i12 = value#27 + 119 {1304694933}" -> "$i12 = value#27 + 119 {1182348765}";
"$i11 = neg value#27 {1277698477}" -> "$i12 = $i11 - 119 {838653616}";
"$i12 = $i11 - 119 {838653616}" -> "goto [?= return $i12] {1239621964}";
"goto [?= return $i12] {1239621964}" -> "return $i12 {373331231}";
"$i12 = value#27 + 119 {1182348765}" -> "return $i12 {373331231}";
}

digraph writeReverseInt {
"buf := @parameter0: byte[] {919670791}" -> "off#1 := @parameter1: int {1582312959}";
"off#1 := @parameter1: int {1582312959}" -> "value#2 := @parameter2: int {73001934}";
"value#2 := @parameter2: int {73001934}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(value#2) {1428388815}";
"$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(value#2) {1428388815}" -> "nextOff = off#1 + $i0 {4792004}";
"nextOff = off#1 + $i0 {4792004}" -> "if value#2 >= -119 goto (branch) {710943978}";
"if value#2 >= -119 goto (branch) {710943978}" -> "negative#10 = 1 {1033221698}";
"if value#2 >= -119 goto (branch) {710943978}" -> "if value#2 <= 119 goto $b2 = (byte) value#2 {367598053}";
"negative#10 = 1 {1033221698}" -> "$i1 = neg value#2 {1236489645}";
"$i1 = neg value#2 {1236489645}" -> "value#15 = $i1 - 119 {1500336660}";
"value#15 = $i1 - 119 {1500336660}" -> "goto [?= byte1Off = nextOff - 1] {178285225}";
"goto [?= byte1Off = nextOff - 1] {178285225}" -> "byte1Off = nextOff - 1 {1549268037}";
"if value#2 <= 119 goto $b2 = (byte) value#2 {367598053}" -> "negative#10 = 0 {1426334828}";
"if value#2 <= 119 goto $b2 = (byte) value#2 {367598053}" -> "$b2 = (byte) value#2 {1357042392}";
"negative#10 = 0 {1426334828}" -> "value#15 = value#2 - 119 {1346533863}";
"value#15 = value#2 - 119 {1346533863}" -> "goto [?= byte1Off = nextOff - 1] {1121372275}";
"goto [?= byte1Off = nextOff - 1] {1121372275}" -> "byte1Off = nextOff - 1 {1549268037}";
"$b2 = (byte) value#2 {1357042392}" -> "buf[off#1] = $b2 {441112120}";
"buf[off#1] = $b2 {441112120}" -> "$i3 = off#1 + 1 {653313003}";
"$i3 = off#1 + 1 {653313003}" -> "return $i3 {1783048731}";
"byte1Off = nextOff - 1 {1549268037}" -> "off#33 = byte1Off {120921153}";
"off#33 = byte1Off {120921153}" -> "off#35 = off#33 + -1 {937177925}";
"off#35 = off#33 + -1 {937177925}" -> "$b4 = (byte) value#15 {988000192}";
"$b4 = (byte) value#15 {988000192}" -> "buf[off#35] = $b4 {1827927490}";
"buf[off#35] = $b4 {1827927490}" -> "$i5 = value#15 & -256 {575903984}";
"$i5 = value#15 & -256 {575903984}" -> "if $i5 != 0 goto off#48 = off#35 + -1 {1375544477}";
"if $i5 != 0 goto off#48 = off#35 + -1 {1375544477}" -> "if negative#10 == 0 goto $b7 = 120 {1895789046}";
"if $i5 != 0 goto off#48 = off#35 + -1 {1375544477}" -> "off#48 = off#35 + -1 {1151994467}";
"if negative#10 == 0 goto $b7 = 120 {1895789046}" -> "$b7 = -120 {1777653641}";
"if negative#10 == 0 goto $b7 = 120 {1895789046}" -> "$b7 = 120 {52757622}";
"$b7 = -120 {1777653641}" -> "goto [?= buf[byte1Off] = $b7] {955100562}";
"goto [?= buf[byte1Off] = $b7] {955100562}" -> "buf[byte1Off] = $b7 {140424485}";
"$b7 = 120 {52757622}" -> "buf[byte1Off] = $b7 {140424485}";
"buf[byte1Off] = $b7 {140424485}" -> "return nextOff {311285628}";
"off#48 = off#35 + -1 {1151994467}" -> "$i8 = value#15 >>> 8 {1702294103}";
"$i8 = value#15 >>> 8 {1702294103}" -> "$b9 = (byte) $i8 {918594170}";
"$b9 = (byte) $i8 {918594170}" -> "buf[off#48] = $b9 {1945518202}";
"buf[off#48] = $b9 {1945518202}" -> "$i10 = value#15 & -65536 {752188885}";
"$i10 = value#15 & -65536 {752188885}" -> "if $i10 != 0 goto off#63 = off#48 + -1 {1835077029}";
"if $i10 != 0 goto off#63 = off#48 + -1 {1835077029}" -> "if negative#10 == 0 goto $b12 = 121 {1758987490}";
"if $i10 != 0 goto off#63 = off#48 + -1 {1835077029}" -> "off#63 = off#48 + -1 {1191857660}";
"if negative#10 == 0 goto $b12 = 121 {1758987490}" -> "$b12 = -121 {1407824905}";
"if negative#10 == 0 goto $b12 = 121 {1758987490}" -> "$b12 = 121 {860821793}";
"$b12 = -121 {1407824905}" -> "goto [?= buf[byte1Off] = $b12] {932992026}";
"goto [?= buf[byte1Off] = $b12] {932992026}" -> "buf[byte1Off] = $b12 {463008958}";
"$b12 = 121 {860821793}" -> "buf[byte1Off] = $b12 {463008958}";
"buf[byte1Off] = $b12 {463008958}" -> "return nextOff {1344727567}";
"off#63 = off#48 + -1 {1191857660}" -> "$i13 = value#15 >>> 16 {173594616}";
"$i13 = value#15 >>> 16 {173594616}" -> "$b14 = (byte) $i13 {1859781045}";
"$b14 = (byte) $i13 {1859781045}" -> "buf[off#63] = $b14 {1648194899}";
"buf[off#63] = $b14 {1648194899}" -> "$i15 = value#15 & -16777216 {1332398162}";
"$i15 = value#15 & -16777216 {1332398162}" -> "if $i15 != 0 goto off#78 = off#63 + -1 {1190439681}";
"if $i15 != 0 goto off#78 = off#63 + -1 {1190439681}" -> "if negative#10 == 0 goto $b17 = 122 {797507095}";
"if $i15 != 0 goto off#78 = off#63 + -1 {1190439681}" -> "off#78 = off#63 + -1 {764752660}";
"if negative#10 == 0 goto $b17 = 122 {797507095}" -> "$b17 = -122 {1121412175}";
"if negative#10 == 0 goto $b17 = 122 {797507095}" -> "$b17 = 122 {1344357905}";
"$b17 = -122 {1121412175}" -> "goto [?= buf[byte1Off] = $b17] {601150534}";
"goto [?= buf[byte1Off] = $b17] {601150534}" -> "buf[byte1Off] = $b17 {942764612}";
"$b17 = 122 {1344357905}" -> "buf[byte1Off] = $b17 {942764612}";
"buf[byte1Off] = $b17 {942764612}" -> "return nextOff {1154356884}";
"off#78 = off#63 + -1 {764752660}" -> "$i18 = value#15 >>> 24 {10056094}";
"$i18 = value#15 >>> 24 {10056094}" -> "$b19 = (byte) $i18 {791580377}";
"$b19 = (byte) $i18 {791580377}" -> "buf[off#78] = $b19 {1114925034}";
"buf[off#78] = $b19 {1114925034}" -> "if negative#10 == 0 goto $b21 = 123 {812405142}";
"if negative#10 == 0 goto $b21 = 123 {812405142}" -> "$b21 = -123 {751766759}";
"if negative#10 == 0 goto $b21 = 123 {812405142}" -> "$b21 = 123 {1878119139}";
"$b21 = -123 {751766759}" -> "goto [?= buf[byte1Off] = $b21] {267125074}";
"goto [?= buf[byte1Off] = $b21] {267125074}" -> "buf[byte1Off] = $b21 {1036242538}";
"$b21 = 123 {1878119139}" -> "buf[byte1Off] = $b21 {1036242538}";
"buf[byte1Off] = $b21 {1036242538}" -> "return nextOff {104218613}";
}

digraph getWriteIntLength {
"value#1 := @parameter0: int {1590584404}" -> "if value#1 >= -119 goto (branch) {1002131897}";
"if value#1 >= -119 goto (branch) {1002131897}" -> "$i0 = neg value#1 {203034403}";
"if value#1 >= -119 goto (branch) {1002131897}" -> "if value#1 <= 119 goto return 1 {1302978456}";
"$i0 = neg value#1 {203034403}" -> "value#8 = $i0 - 119 {162111814}";
"value#8 = $i0 - 119 {162111814}" -> "goto [?= $i1 = value#8 & -256] {1427559495}";
"goto [?= $i1 = value#8 & -256] {1427559495}" -> "$i1 = value#8 & -256 {1510984733}";
"if value#1 <= 119 goto return 1 {1302978456}" -> "value#8 = value#1 - 119 {1109784585}";
"if value#1 <= 119 goto return 1 {1302978456}" -> "return 1 {2104603794}";
"value#8 = value#1 - 119 {1109784585}" -> "goto [?= $i1 = value#8 & -256] {418759781}";
"goto [?= $i1 = value#8 & -256] {418759781}" -> "$i1 = value#8 & -256 {1510984733}";
"$i1 = value#8 & -256 {1510984733}" -> "if $i1 != 0 goto $i2 = value#8 & -65536 {715798250}";
"if $i1 != 0 goto $i2 = value#8 & -65536 {715798250}" -> "return 2 {498663822}";
"if $i1 != 0 goto $i2 = value#8 & -65536 {715798250}" -> "$i2 = value#8 & -65536 {1948092932}";
"$i2 = value#8 & -65536 {1948092932}" -> "if $i2 != 0 goto $i3 = value#8 & -16777216 {561856632}";
"if $i2 != 0 goto $i3 = value#8 & -16777216 {561856632}" -> "return 3 {1773550148}";
"if $i2 != 0 goto $i3 = value#8 & -16777216 {561856632}" -> "$i3 = value#8 & -16777216 {1433220107}";
"$i3 = value#8 & -16777216 {1433220107}" -> "if $i3 != 0 goto return 5 {223428856}";
"if $i3 != 0 goto return 5 {223428856}" -> "return 4 {1762045597}";
"if $i3 != 0 goto return 5 {223428856}" -> "return 5 {1378278940}";
}

digraph getWriteLongLength {
"value#1 := @parameter0: long {485951098}" -> "$b0 = value#1 cmp -119L {817720747}";
"$b0 = value#1 cmp -119L {817720747}" -> "if $b0 >= 0 goto $b2 = value#1 cmp 119L {413303690}";
"if $b0 >= 0 goto $b2 = value#1 cmp 119L {413303690}" -> "$l1 = neg value#1 {1010001710}";
"if $b0 >= 0 goto $b2 = value#1 cmp 119L {413303690}" -> "$b2 = value#1 cmp 119L {982148519}";
"$l1 = neg value#1 {1010001710}" -> "value#9 = $l1 - 119L {811620016}";
"value#9 = $l1 - 119L {811620016}" -> "goto [?= $l3 = value#9 & -256L] {390942085}";
"goto [?= $l3 = value#9 & -256L] {390942085}" -> "$l3 = value#9 & -256L {392011012}";
"$b2 = value#1 cmp 119L {982148519}" -> "if $b2 <= 0 goto return 1 {1205220886}";
"if $b2 <= 0 goto return 1 {1205220886}" -> "value#9 = value#1 - 119L {1884773263}";
"if $b2 <= 0 goto return 1 {1205220886}" -> "return 1 {772465809}";
"value#9 = value#1 - 119L {1884773263}" -> "goto [?= $l3 = value#9 & -256L] {811743516}";
"goto [?= $l3 = value#9 & -256L] {811743516}" -> "$l3 = value#9 & -256L {392011012}";
"$l3 = value#9 & -256L {392011012}" -> "$b4 = $l3 cmp 0L {1353776518}";
"$b4 = $l3 cmp 0L {1353776518}" -> "if $b4 != 0 goto $l5 = value#9 & -65536L {335655942}";
"if $b4 != 0 goto $l5 = value#9 & -65536L {335655942}" -> "return 2 {1469385865}";
"if $b4 != 0 goto $l5 = value#9 & -65536L {335655942}" -> "$l5 = value#9 & -65536L {185256444}";
"$l5 = value#9 & -65536L {185256444}" -> "$b6 = $l5 cmp 0L {14144503}";
"$b6 = $l5 cmp 0L {14144503}" -> "if $b6 != 0 goto $l7 = value#9 & -16777216L {751360630}";
"if $b6 != 0 goto $l7 = value#9 & -16777216L {751360630}" -> "return 3 {652848813}";
"if $b6 != 0 goto $l7 = value#9 & -16777216L {751360630}" -> "$l7 = value#9 & -16777216L {114515943}";
"$l7 = value#9 & -16777216L {114515943}" -> "$b8 = $l7 cmp 0L {152056311}";
"$b8 = $l7 cmp 0L {152056311}" -> "if $b8 != 0 goto $l9 = value#9 & -4294967296L {203711189}";
"if $b8 != 0 goto $l9 = value#9 & -4294967296L {203711189}" -> "return 4 {1565983008}";
"if $b8 != 0 goto $l9 = value#9 & -4294967296L {203711189}" -> "$l9 = value#9 & -4294967296L {1262392185}";
"$l9 = value#9 & -4294967296L {1262392185}" -> "$b10 = $l9 cmp 0L {2079837095}";
"$b10 = $l9 cmp 0L {2079837095}" -> "if $b10 != 0 goto $l11 = value#9 & -1099511627776L {1850543484}";
"if $b10 != 0 goto $l11 = value#9 & -1099511627776L {1850543484}" -> "return 5 {1367045567}";
"if $b10 != 0 goto $l11 = value#9 & -1099511627776L {1850543484}" -> "$l11 = value#9 & -1099511627776L {2088343616}";
"$l11 = value#9 & -1099511627776L {2088343616}" -> "$b12 = $l11 cmp 0L {1135769339}";
"$b12 = $l11 cmp 0L {1135769339}" -> "if $b12 != 0 goto $l13 = value#9 & -281474976710656L {1993171741}";
"if $b12 != 0 goto $l13 = value#9 & -281474976710656L {1993171741}" -> "return 6 {509390877}";
"if $b12 != 0 goto $l13 = value#9 & -281474976710656L {1993171741}" -> "$l13 = value#9 & -281474976710656L {654564638}";
"$l13 = value#9 & -281474976710656L {654564638}" -> "$b14 = $l13 cmp 0L {1525648316}";
"$b14 = $l13 cmp 0L {1525648316}" -> "if $b14 != 0 goto $l15 = value#9 & -72057594037927936L {50942170}";
"if $b14 != 0 goto $l15 = value#9 & -72057594037927936L {50942170}" -> "return 7 {1147952621}";
"if $b14 != 0 goto $l15 = value#9 & -72057594037927936L {50942170}" -> "$l15 = value#9 & -72057594037927936L {1295463307}";
"$l15 = value#9 & -72057594037927936L {1295463307}" -> "$b16 = $l15 cmp 0L {1302931460}";
"$b16 = $l15 cmp 0L {1302931460}" -> "if $b16 != 0 goto return 9 {305523996}";
"if $b16 != 0 goto return 9 {305523996}" -> "return 8 {425779878}";
"if $b16 != 0 goto return 9 {305523996}" -> "return 9 {544031542}";
}

digraph writeInt {
"buf := @parameter0: byte[] {1777604387}" -> "offset#1 := @parameter1: int {34753009}";
"offset#1 := @parameter1: int {34753009}" -> "value#2 := @parameter2: int {1978192187}";
"value#2 := @parameter2: int {1978192187}" -> "byte1Off = offset#1 {624216233}";
"byte1Off = offset#1 {624216233}" -> "if value#2 >= -119 goto (branch) {2040503944}";
"if value#2 >= -119 goto (branch) {2040503944}" -> "negative#7 = 1 {154065654}";
"if value#2 >= -119 goto (branch) {2040503944}" -> "if value#2 <= 119 goto offset#21 = offset#1 + 1 {183958167}";
"negative#7 = 1 {154065654}" -> "$i0 = neg value#2 {1843119057}";
"$i0 = neg value#2 {1843119057}" -> "value#12 = $i0 - 119 {748575334}";
"value#12 = $i0 - 119 {748575334}" -> "goto [?= offset#25 = offset#1 + 1] {526963055}";
"goto [?= offset#25 = offset#1 + 1] {526963055}" -> "offset#25 = offset#1 + 1 {473885942}";
"if value#2 <= 119 goto offset#21 = offset#1 + 1 {183958167}" -> "negative#7 = 0 {1277352258}";
"if value#2 <= 119 goto offset#21 = offset#1 + 1 {183958167}" -> "offset#21 = offset#1 + 1 {1786500808}";
"negative#7 = 0 {1277352258}" -> "value#12 = value#2 - 119 {1733996088}";
"value#12 = value#2 - 119 {1733996088}" -> "goto [?= offset#25 = offset#1 + 1] {2127769855}";
"goto [?= offset#25 = offset#1 + 1] {2127769855}" -> "offset#25 = offset#1 + 1 {473885942}";
"offset#21 = offset#1 + 1 {1786500808}" -> "$b1 = (byte) value#2 {2127356745}";
"$b1 = (byte) value#2 {2127356745}" -> "buf[offset#1] = $b1 {1245034446}";
"buf[offset#1] = $b1 {1245034446}" -> "return offset#21 {99713450}";
"offset#25 = offset#1 + 1 {473885942}" -> "offset#28 = offset#25 + 1 {196513066}";
"offset#28 = offset#25 + 1 {196513066}" -> "$b2 = (byte) value#12 {245579757}";
"$b2 = (byte) value#12 {245579757}" -> "buf[offset#25] = $b2 {301958488}";
"buf[offset#25] = $b2 {301958488}" -> "$i3 = value#12 & -256 {2111562852}";
"$i3 = value#12 & -256 {2111562852}" -> "if $i3 != 0 goto offset#41 = offset#28 + 1 {274955202}";
"if $i3 != 0 goto offset#41 = offset#28 + 1 {274955202}" -> "if negative#7 == 0 goto $b5 = 120 {101134167}";
"if $i3 != 0 goto offset#41 = offset#28 + 1 {274955202}" -> "offset#41 = offset#28 + 1 {1061043917}";
"if negative#7 == 0 goto $b5 = 120 {101134167}" -> "$b5 = -120 {1378603099}";
"if negative#7 == 0 goto $b5 = 120 {101134167}" -> "$b5 = 120 {558374901}";
"$b5 = -120 {1378603099}" -> "goto [?= buf[byte1Off] = $b5] {599375986}";
"goto [?= buf[byte1Off] = $b5] {599375986}" -> "buf[byte1Off] = $b5 {504033564}";
"$b5 = 120 {558374901}" -> "buf[byte1Off] = $b5 {504033564}";
"buf[byte1Off] = $b5 {504033564}" -> "return offset#28 {2138618873}";
"offset#41 = offset#28 + 1 {1061043917}" -> "$i6 = value#12 >>> 8 {1585279440}";
"$i6 = value#12 >>> 8 {1585279440}" -> "$b7 = (byte) $i6 {1151981906}";
"$b7 = (byte) $i6 {1151981906}" -> "buf[offset#28] = $b7 {219048518}";
"buf[offset#28] = $b7 {219048518}" -> "$i8 = value#12 & -65536 {2105481708}";
"$i8 = value#12 & -65536 {2105481708}" -> "if $i8 != 0 goto offset#56 = offset#41 + 1 {56430687}";
"if $i8 != 0 goto offset#56 = offset#41 + 1 {56430687}" -> "if negative#7 == 0 goto $b10 = 121 {1758208279}";
"if $i8 != 0 goto offset#56 = offset#41 + 1 {56430687}" -> "offset#56 = offset#41 + 1 {1222525101}";
"if negative#7 == 0 goto $b10 = 121 {1758208279}" -> "$b10 = -121 {28633431}";
"if negative#7 == 0 goto $b10 = 121 {1758208279}" -> "$b10 = 121 {710980265}";
"$b10 = -121 {28633431}" -> "goto [?= buf[byte1Off] = $b10] {1777147813}";
"goto [?= buf[byte1Off] = $b10] {1777147813}" -> "buf[byte1Off] = $b10 {590215787}";
"$b10 = 121 {710980265}" -> "buf[byte1Off] = $b10 {590215787}";
"buf[byte1Off] = $b10 {590215787}" -> "return offset#41 {82081316}";
"offset#56 = offset#41 + 1 {1222525101}" -> "$i11 = value#12 >>> 16 {831326150}";
"$i11 = value#12 >>> 16 {831326150}" -> "$b12 = (byte) $i11 {200073842}";
"$b12 = (byte) $i11 {200073842}" -> "buf[offset#41] = $b12 {102462369}";
"buf[offset#41] = $b12 {102462369}" -> "$i13 = value#12 & -16777216 {751277194}";
"$i13 = value#12 & -16777216 {751277194}" -> "if $i13 != 0 goto offset#71 = offset#56 + 1 {1906080968}";
"if $i13 != 0 goto offset#71 = offset#56 + 1 {1906080968}" -> "if negative#7 == 0 goto $b15 = 122 {2120151345}";
"if $i13 != 0 goto offset#71 = offset#56 + 1 {1906080968}" -> "offset#71 = offset#56 + 1 {1492543842}";
"if negative#7 == 0 goto $b15 = 122 {2120151345}" -> "$b15 = -122 {135350257}";
"if negative#7 == 0 goto $b15 = 122 {2120151345}" -> "$b15 = 122 {86630447}";
"$b15 = -122 {135350257}" -> "goto [?= buf[byte1Off] = $b15] {1553247692}";
"goto [?= buf[byte1Off] = $b15] {1553247692}" -> "buf[byte1Off] = $b15 {217538242}";
"$b15 = 122 {86630447}" -> "buf[byte1Off] = $b15 {217538242}";
"buf[byte1Off] = $b15 {217538242}" -> "return offset#56 {2010679480}";
"offset#71 = offset#56 + 1 {1492543842}" -> "$i16 = value#12 >>> 24 {1738693691}";
"$i16 = value#12 >>> 24 {1738693691}" -> "$b17 = (byte) $i16 {208962772}";
"$b17 = (byte) $i16 {208962772}" -> "buf[offset#56] = $b17 {574535185}";
"buf[offset#56] = $b17 {574535185}" -> "if negative#7 == 0 goto $b19 = 123 {1658062781}";
"if negative#7 == 0 goto $b19 = 123 {1658062781}" -> "$b19 = -123 {42164979}";
"if negative#7 == 0 goto $b19 = 123 {1658062781}" -> "$b19 = 123 {2041095126}";
"$b19 = -123 {42164979}" -> "goto [?= buf[byte1Off] = $b19] {569645666}";
"goto [?= buf[byte1Off] = $b19] {569645666}" -> "buf[byte1Off] = $b19 {990100145}";
"$b19 = 123 {2041095126}" -> "buf[byte1Off] = $b19 {990100145}";
"buf[byte1Off] = $b19 {990100145}" -> "return offset#71 {598276833}";
}

digraph writeLong {
"buf := @parameter0: byte[] {2098367060}" -> "offset#1 := @parameter1: int {1454401244}";
"offset#1 := @parameter1: int {1454401244}" -> "value#2 := @parameter2: long {1602044206}";
"value#2 := @parameter2: long {1602044206}" -> "byte1Off = offset#1 {1197939132}";
"byte1Off = offset#1 {1197939132}" -> "$b0 = value#2 cmp -119L {904915519}";
"$b0 = value#2 cmp -119L {904915519}" -> "if $b0 >= 0 goto $b2 = value#2 cmp 119L {58880618}";
"if $b0 >= 0 goto $b2 = value#2 cmp 119L {58880618}" -> "negative#8 = 1 {60757229}";
"if $b0 >= 0 goto $b2 = value#2 cmp 119L {58880618}" -> "$b2 = value#2 cmp 119L {1411817808}";
"negative#8 = 1 {60757229}" -> "$l1 = neg value#2 {1061120164}";
"$l1 = neg value#2 {1061120164}" -> "value#13 = $l1 - 119L {843984607}";
"value#13 = $l1 - 119L {843984607}" -> "goto [?= offset#28 = offset#1 + 1] {1987054202}";
"goto [?= offset#28 = offset#1 + 1] {1987054202}" -> "offset#28 = offset#1 + 1 {1688576716}";
"$b2 = value#2 cmp 119L {1411817808}" -> "if $b2 <= 0 goto offset#23 = offset#1 + 1 {577978996}";
"if $b2 <= 0 goto offset#23 = offset#1 + 1 {577978996}" -> "negative#8 = 0 {287088780}";
"if $b2 <= 0 goto offset#23 = offset#1 + 1 {577978996}" -> "offset#23 = offset#1 + 1 {697184226}";
"negative#8 = 0 {287088780}" -> "value#13 = value#2 - 119L {1515530681}";
"value#13 = value#2 - 119L {1515530681}" -> "goto [?= offset#28 = offset#1 + 1] {663179874}";
"goto [?= offset#28 = offset#1 + 1] {663179874}" -> "offset#28 = offset#1 + 1 {1688576716}";
"offset#23 = offset#1 + 1 {697184226}" -> "$i3 = (int) value#2 {52022171}";
"$i3 = (int) value#2 {52022171}" -> "$b4 = (byte) $i3 {208357701}";
"$b4 = (byte) $i3 {208357701}" -> "buf[offset#1] = $b4 {1422038549}";
"buf[offset#1] = $b4 {1422038549}" -> "return offset#23 {844293282}";
"offset#28 = offset#1 + 1 {1688576716}" -> "offset#31 = offset#28 + 1 {735798546}";
"offset#31 = offset#28 + 1 {735798546}" -> "$i5 = (int) value#13 {2042553130}";
"$i5 = (int) value#13 {2042553130}" -> "$b6 = (byte) $i5 {952796743}";
"$b6 = (byte) $i5 {952796743}" -> "buf[offset#28] = $b6 {1221171129}";
"buf[offset#28] = $b6 {1221171129}" -> "$l7 = value#13 & -256L {1077206603}";
"$l7 = value#13 & -256L {1077206603}" -> "$b8 = $l7 cmp 0L {709688864}";
"$b8 = $l7 cmp 0L {709688864}" -> "if $b8 != 0 goto offset#47 = offset#31 + 1 {44900210}";
"if $b8 != 0 goto offset#47 = offset#31 + 1 {44900210}" -> "if negative#8 == 0 goto $b10 = 120 {537615592}";
"if $b8 != 0 goto offset#47 = offset#31 + 1 {44900210}" -> "offset#47 = offset#31 + 1 {397147177}";
"if negative#8 == 0 goto $b10 = 120 {537615592}" -> "$b10 = -120 {787985676}";
"if negative#8 == 0 goto $b10 = 120 {537615592}" -> "$b10 = 120 {1632741481}";
"$b10 = -120 {787985676}" -> "goto [?= buf[byte1Off] = $b10] {401767360}";
"goto [?= buf[byte1Off] = $b10] {401767360}" -> "buf[byte1Off] = $b10 {457659575}";
"$b10 = 120 {1632741481}" -> "buf[byte1Off] = $b10 {457659575}";
"buf[byte1Off] = $b10 {457659575}" -> "return offset#31 {212044732}";
"offset#47 = offset#31 + 1 {397147177}" -> "$l11 = value#13 >>> 8 {1991229667}";
"$l11 = value#13 >>> 8 {1991229667}" -> "$i12 = (int) $l11 {1520328734}";
"$i12 = (int) $l11 {1520328734}" -> "$b13 = (byte) $i12 {1651095404}";
"$b13 = (byte) $i12 {1651095404}" -> "buf[offset#31] = $b13 {903789179}";
"buf[offset#31] = $b13 {903789179}" -> "$l14 = value#13 & -65536L {993317608}";
"$l14 = value#13 & -65536L {993317608}" -> "$b15 = $l14 cmp 0L {808134663}";
"$b15 = $l14 cmp 0L {808134663}" -> "if $b15 != 0 goto offset#65 = offset#47 + 1 {1779883085}";
"if $b15 != 0 goto offset#65 = offset#47 + 1 {1779883085}" -> "if negative#8 == 0 goto $b17 = 121 {1947858907}";
"if $b15 != 0 goto offset#65 = offset#47 + 1 {1779883085}" -> "offset#65 = offset#47 + 1 {580408324}";
"if negative#8 == 0 goto $b17 = 121 {1947858907}" -> "$b17 = -121 {1149377141}";
"if negative#8 == 0 goto $b17 = 121 {1947858907}" -> "$b17 = 121 {1046733139}";
"$b17 = -121 {1149377141}" -> "goto [?= buf[byte1Off] = $b17] {468074521}";
"goto [?= buf[byte1Off] = $b17] {468074521}" -> "buf[byte1Off] = $b17 {100626027}";
"$b17 = 121 {1046733139}" -> "buf[byte1Off] = $b17 {100626027}";
"buf[byte1Off] = $b17 {100626027}" -> "return offset#47 {2025191853}";
"offset#65 = offset#47 + 1 {580408324}" -> "$l18 = value#13 >>> 16 {514160503}";
"$l18 = value#13 >>> 16 {514160503}" -> "$i19 = (int) $l18 {2122135763}";
"$i19 = (int) $l18 {2122135763}" -> "$b20 = (byte) $i19 {919190166}";
"$b20 = (byte) $i19 {919190166}" -> "buf[offset#47] = $b20 {822568301}";
"buf[offset#47] = $b20 {822568301}" -> "$l21 = value#13 & -16777216L {1759952111}";
"$l21 = value#13 & -16777216L {1759952111}" -> "$b22 = $l21 cmp 0L {52051236}";
"$b22 = $l21 cmp 0L {52051236}" -> "if $b22 != 0 goto offset#83 = offset#65 + 1 {365184245}";
"if $b22 != 0 goto offset#83 = offset#65 + 1 {365184245}" -> "if negative#8 == 0 goto $b24 = 122 {1263484298}";
"if $b22 != 0 goto offset#83 = offset#65 + 1 {365184245}" -> "offset#83 = offset#65 + 1 {159968629}";
"if negative#8 == 0 goto $b24 = 122 {1263484298}" -> "$b24 = -122 {1195381814}";
"if negative#8 == 0 goto $b24 = 122 {1263484298}" -> "$b24 = 122 {451145293}";
"$b24 = -122 {1195381814}" -> "goto [?= buf[byte1Off] = $b24] {1060448134}";
"goto [?= buf[byte1Off] = $b24] {1060448134}" -> "buf[byte1Off] = $b24 {686961654}";
"$b24 = 122 {451145293}" -> "buf[byte1Off] = $b24 {686961654}";
"buf[byte1Off] = $b24 {686961654}" -> "return offset#65 {2034982913}";
"offset#83 = offset#65 + 1 {159968629}" -> "$l25 = value#13 >>> 24 {899974433}";
"$l25 = value#13 >>> 24 {899974433}" -> "$i26 = (int) $l25 {2072589733}";
"$i26 = (int) $l25 {2072589733}" -> "$b27 = (byte) $i26 {1580504398}";
"$b27 = (byte) $i26 {1580504398}" -> "buf[offset#65] = $b27 {58836216}";
"buf[offset#65] = $b27 {58836216}" -> "$l28 = value#13 & -4294967296L {1517260917}";
"$l28 = value#13 & -4294967296L {1517260917}" -> "$b29 = $l28 cmp 0L {730131452}";
"$b29 = $l28 cmp 0L {730131452}" -> "if $b29 != 0 goto offset#101 = offset#83 + 1 {1410239700}";
"if $b29 != 0 goto offset#101 = offset#83 + 1 {1410239700}" -> "if negative#8 == 0 goto $b31 = 123 {673667592}";
"if $b29 != 0 goto offset#101 = offset#83 + 1 {1410239700}" -> "offset#101 = offset#83 + 1 {1910911162}";
"if negative#8 == 0 goto $b31 = 123 {673667592}" -> "$b31 = -123 {2015594886}";
"if negative#8 == 0 goto $b31 = 123 {673667592}" -> "$b31 = 123 {1246074230}";
"$b31 = -123 {2015594886}" -> "goto [?= buf[byte1Off] = $b31] {983921976}";
"goto [?= buf[byte1Off] = $b31] {983921976}" -> "buf[byte1Off] = $b31 {1478521132}";
"$b31 = 123 {1246074230}" -> "buf[byte1Off] = $b31 {1478521132}";
"buf[byte1Off] = $b31 {1478521132}" -> "return offset#83 {758514191}";
"offset#101 = offset#83 + 1 {1910911162}" -> "$l32 = value#13 >>> 32 {585886948}";
"$l32 = value#13 >>> 32 {585886948}" -> "$i33 = (int) $l32 {1657301987}";
"$i33 = (int) $l32 {1657301987}" -> "$b34 = (byte) $i33 {1703237555}";
"$b34 = (byte) $i33 {1703237555}" -> "buf[offset#83] = $b34 {2104552535}";
"buf[offset#83] = $b34 {2104552535}" -> "$l35 = value#13 & -1099511627776L {1858122763}";
"$l35 = value#13 & -1099511627776L {1858122763}" -> "$b36 = $l35 cmp 0L {431643055}";
"$b36 = $l35 cmp 0L {431643055}" -> "if $b36 != 0 goto offset#119 = offset#101 + 1 {36476934}";
"if $b36 != 0 goto offset#119 = offset#101 + 1 {36476934}" -> "if negative#8 == 0 goto $b38 = 124 {387201912}";
"if $b36 != 0 goto offset#119 = offset#101 + 1 {36476934}" -> "offset#119 = offset#101 + 1 {1854691390}";
"if negative#8 == 0 goto $b38 = 124 {387201912}" -> "$b38 = -124 {1187487514}";
"if negative#8 == 0 goto $b38 = 124 {387201912}" -> "$b38 = 124 {1876699424}";
"$b38 = -124 {1187487514}" -> "goto [?= buf[byte1Off] = $b38] {1842347173}";
"goto [?= buf[byte1Off] = $b38] {1842347173}" -> "buf[byte1Off] = $b38 {1503989848}";
"$b38 = 124 {1876699424}" -> "buf[byte1Off] = $b38 {1503989848}";
"buf[byte1Off] = $b38 {1503989848}" -> "return offset#101 {836276532}";
"offset#119 = offset#101 + 1 {1854691390}" -> "$l39 = value#13 >>> 40 {1572541485}";
"$l39 = value#13 >>> 40 {1572541485}" -> "$i40 = (int) $l39 {1375402508}";
"$i40 = (int) $l39 {1375402508}" -> "$b41 = (byte) $i40 {195531452}";
"$b41 = (byte) $i40 {195531452}" -> "buf[offset#101] = $b41 {529695980}";
"buf[offset#101] = $b41 {529695980}" -> "$l42 = value#13 & -281474976710656L {732172738}";
"$l42 = value#13 & -281474976710656L {732172738}" -> "$b43 = $l42 cmp 0L {1441288059}";
"$b43 = $l42 cmp 0L {1441288059}" -> "if $b43 != 0 goto offset#137 = offset#119 + 1 {1137402588}";
"if $b43 != 0 goto offset#137 = offset#119 + 1 {1137402588}" -> "if negative#8 == 0 goto $b45 = 125 {896402210}";
"if $b43 != 0 goto offset#137 = offset#119 + 1 {1137402588}" -> "offset#137 = offset#119 + 1 {1316554172}";
"if negative#8 == 0 goto $b45 = 125 {896402210}" -> "$b45 = -125 {798299544}";
"if negative#8 == 0 goto $b45 = 125 {896402210}" -> "$b45 = 125 {414928893}";
"$b45 = -125 {798299544}" -> "goto [?= buf[byte1Off] = $b45] {1873360592}";
"goto [?= buf[byte1Off] = $b45] {1873360592}" -> "buf[byte1Off] = $b45 {1569269979}";
"$b45 = 125 {414928893}" -> "buf[byte1Off] = $b45 {1569269979}";
"buf[byte1Off] = $b45 {1569269979}" -> "return offset#119 {2089708823}";
"offset#137 = offset#119 + 1 {1316554172}" -> "$l46 = value#13 >>> 48 {213992572}";
"$l46 = value#13 >>> 48 {213992572}" -> "$i47 = (int) $l46 {169075901}";
"$i47 = (int) $l46 {169075901}" -> "$b48 = (byte) $i47 {1253982201}";
"$b48 = (byte) $i47 {1253982201}" -> "buf[offset#119] = $b48 {925821872}";
"buf[offset#119] = $b48 {925821872}" -> "$l49 = value#13 & -72057594037927936L {529741190}";
"$l49 = value#13 & -72057594037927936L {529741190}" -> "$b50 = $l49 cmp 0L {995291157}";
"$b50 = $l49 cmp 0L {995291157}" -> "if $b50 != 0 goto offset#155 = offset#137 + 1 {1407916357}";
"if $b50 != 0 goto offset#155 = offset#137 + 1 {1407916357}" -> "if negative#8 == 0 goto $b52 = 126 {747450190}";
"if $b50 != 0 goto offset#155 = offset#137 + 1 {1407916357}" -> "offset#155 = offset#137 + 1 {377033961}";
"if negative#8 == 0 goto $b52 = 126 {747450190}" -> "$b52 = -126 {1758872709}";
"if negative#8 == 0 goto $b52 = 126 {747450190}" -> "$b52 = 126 {816431195}";
"$b52 = -126 {1758872709}" -> "goto [?= buf[byte1Off] = $b52] {776923015}";
"goto [?= buf[byte1Off] = $b52] {776923015}" -> "buf[byte1Off] = $b52 {1973124703}";
"$b52 = 126 {816431195}" -> "buf[byte1Off] = $b52 {1973124703}";
"buf[byte1Off] = $b52 {1973124703}" -> "return offset#137 {1981306539}";
"offset#155 = offset#137 + 1 {377033961}" -> "$l53 = value#13 >>> 56 {868280019}";
"$l53 = value#13 >>> 56 {868280019}" -> "$i54 = (int) $l53 {1841324574}";
"$i54 = (int) $l53 {1841324574}" -> "$b55 = (byte) $i54 {1252728456}";
"$b55 = (byte) $i54 {1252728456}" -> "buf[offset#137] = $b55 {399968308}";
"buf[offset#137] = $b55 {399968308}" -> "if negative#8 == 0 goto $b57 = 127 {1893726606}";
"if negative#8 == 0 goto $b57 = 127 {1893726606}" -> "$b57 = -127 {2136406908}";
"if negative#8 == 0 goto $b57 = 127 {1893726606}" -> "$b57 = 127 {86140924}";
"$b57 = -127 {2136406908}" -> "goto [?= buf[byte1Off] = $b57] {1816811447}";
"goto [?= buf[byte1Off] = $b57] {1816811447}" -> "buf[byte1Off] = $b57 {180288863}";
"$b57 = 127 {86140924}" -> "buf[byte1Off] = $b57 {180288863}";
"buf[byte1Off] = $b57 {180288863}" -> "return offset#155 {2083678824}";
}

digraph writeSortedLong {
"buf := @parameter0: byte[] {1016077135}" -> "offset#1 := @parameter1: int {1560152513}";
"offset#1 := @parameter1: int {1560152513}" -> "value#2 := @parameter2: long {1486193029}";
"value#2 := @parameter2: long {1486193029}" -> "byte1Off = offset#1 {737588257}";
"byte1Off = offset#1 {737588257}" -> "offset#4 = offset#1 + 1 {1116693518}";
"offset#4 = offset#1 + 1 {1116693518}" -> "$b0 = value#2 cmp -119L {1176468746}";
"$b0 = value#2 cmp -119L {1176468746}" -> "if $b0 >= 0 goto $b49 = value#2 cmp 120L {430914537}";
"if $b0 >= 0 goto $b49 = value#2 cmp 120L {430914537}" -> "value#11 = value#2 + 119L {357585421}";
"if $b0 >= 0 goto $b49 = value#2 cmp 120L {430914537}" -> "$b49 = value#2 cmp 120L {2144819526}";
"value#11 = value#2 + 119L {357585421}" -> "$l1 = value#11 | 72057594037927935L {1873054430}";
"$l1 = value#11 | 72057594037927935L {1873054430}" -> "$b2 = $l1 cmp -1L {490878871}";
"$b2 = $l1 cmp -1L {490878871}" -> "if $b2 == 0 goto $l7 = value#11 | 281474976710655L {1431976875}";
"if $b2 == 0 goto $l7 = value#11 | 281474976710655L {1431976875}" -> "$i3 = offset#4 {1911151195}";
"if $b2 == 0 goto $l7 = value#11 | 281474976710655L {1431976875}" -> "$l7 = value#11 | 281474976710655L {1062325061}";
"$i3 = offset#4 {1911151195}" -> "offset#4 = offset#4 + 1 {1978282158}";
"offset#4 = offset#4 + 1 {1978282158}" -> "$l4 = value#11 >> 56 {1293196901}";
"$l4 = value#11 >> 56 {1293196901}" -> "$i5 = (int) $l4 {131100672}";
"$i5 = (int) $l4 {131100672}" -> "$b6 = (byte) $i5 {226024919}";
"$b6 = (byte) $i5 {226024919}" -> "buf[$i3] = $b6 {433478372}";
"buf[$i3] = $b6 {433478372}" -> "$l7 = value#11 | 281474976710655L {1062325061}";
"$l7 = value#11 | 281474976710655L {1062325061}" -> "$b8 = $l7 cmp -1L {617864643}";
"$b8 = $l7 cmp -1L {617864643}" -> "if $b8 == 0 goto $l13 = value#11 | 1099511627775L {838463545}";
"if $b8 == 0 goto $l13 = value#11 | 1099511627775L {838463545}" -> "$i9 = offset#4 {1229517734}";
"if $b8 == 0 goto $l13 = value#11 | 1099511627775L {838463545}" -> "$l13 = value#11 | 1099511627775L {219067658}";
"$i9 = offset#4 {1229517734}" -> "offset#4 = offset#4 + 1 {1934561929}";
"offset#4 = offset#4 + 1 {1934561929}" -> "$l10 = value#11 >> 48 {456941871}";
"$l10 = value#11 >> 48 {456941871}" -> "$i11 = (int) $l10 {275571611}";
"$i11 = (int) $l10 {275571611}" -> "$b12 = (byte) $i11 {1468373811}";
"$b12 = (byte) $i11 {1468373811}" -> "buf[$i9] = $b12 {2036567152}";
"buf[$i9] = $b12 {2036567152}" -> "$l13 = value#11 | 1099511627775L {219067658}";
"$l13 = value#11 | 1099511627775L {219067658}" -> "$b14 = $l13 cmp -1L {483008335}";
"$b14 = $l13 cmp -1L {483008335}" -> "if $b14 == 0 goto $l19 = value#11 | 4294967295L {637378085}";
"if $b14 == 0 goto $l19 = value#11 | 4294967295L {637378085}" -> "$i15 = offset#4 {1748729606}";
"if $b14 == 0 goto $l19 = value#11 | 4294967295L {637378085}" -> "$l19 = value#11 | 4294967295L {567215871}";
"$i15 = offset#4 {1748729606}" -> "offset#4 = offset#4 + 1 {608642345}";
"offset#4 = offset#4 + 1 {608642345}" -> "$l16 = value#11 >> 40 {500799002}";
"$l16 = value#11 >> 40 {500799002}" -> "$i17 = (int) $l16 {11175653}";
"$i17 = (int) $l16 {11175653}" -> "$b18 = (byte) $i17 {2030585545}";
"$b18 = (byte) $i17 {2030585545}" -> "buf[$i15] = $b18 {523969345}";
"buf[$i15] = $b18 {523969345}" -> "$l19 = value#11 | 4294967295L {567215871}";
"$l19 = value#11 | 4294967295L {567215871}" -> "$b20 = $l19 cmp -1L {830617452}";
"$b20 = $l19 cmp -1L {830617452}" -> "if $b20 == 0 goto $l25 = value#11 | 16777215L {2049469840}";
"if $b20 == 0 goto $l25 = value#11 | 16777215L {2049469840}" -> "$i21 = offset#4 {79914337}";
"if $b20 == 0 goto $l25 = value#11 | 16777215L {2049469840}" -> "$l25 = value#11 | 16777215L {224731392}";
"$i21 = offset#4 {79914337}" -> "offset#4 = offset#4 + 1 {618269634}";
"offset#4 = offset#4 + 1 {618269634}" -> "$l22 = value#11 >> 32 {1788335392}";
"$l22 = value#11 >> 32 {1788335392}" -> "$i23 = (int) $l22 {518477739}";
"$i23 = (int) $l22 {518477739}" -> "$b24 = (byte) $i23 {1045513429}";
"$b24 = (byte) $i23 {1045513429}" -> "buf[$i21] = $b24 {1236408785}";
"buf[$i21] = $b24 {1236408785}" -> "$l25 = value#11 | 16777215L {224731392}";
"$l25 = value#11 | 16777215L {224731392}" -> "$b26 = $l25 cmp -1L {244988941}";
"$b26 = $l25 cmp -1L {244988941}" -> "if $b26 == 0 goto $l31 = value#11 | 65535L {47724054}";
"if $b26 == 0 goto $l31 = value#11 | 65535L {47724054}" -> "$i27 = offset#4 {1961688319}";
"if $b26 == 0 goto $l31 = value#11 | 65535L {47724054}" -> "$l31 = value#11 | 65535L {1259799663}";
"$i27 = offset#4 {1961688319}" -> "offset#4 = offset#4 + 1 {726256699}";
"offset#4 = offset#4 + 1 {726256699}" -> "$l28 = value#11 >> 24 {1444275682}";
"$l28 = value#11 >> 24 {1444275682}" -> "$i29 = (int) $l28 {861455119}";
"$i29 = (int) $l28 {861455119}" -> "$b30 = (byte) $i29 {1249754769}";
"$b30 = (byte) $i29 {1249754769}" -> "buf[$i27] = $b30 {1624219092}";
"buf[$i27] = $b30 {1624219092}" -> "$l31 = value#11 | 65535L {1259799663}";
"$l31 = value#11 | 65535L {1259799663}" -> "$b32 = $l31 cmp -1L {749432661}";
"$b32 = $l31 cmp -1L {749432661}" -> "if $b32 == 0 goto $l37 = value#11 | 255L {218214337}";
"if $b32 == 0 goto $l37 = value#11 | 255L {218214337}" -> "$i33 = offset#4 {2045013375}";
"if $b32 == 0 goto $l37 = value#11 | 255L {218214337}" -> "$l37 = value#11 | 255L {1523381626}";
"$i33 = offset#4 {2045013375}" -> "offset#4 = offset#4 + 1 {247620817}";
"offset#4 = offset#4 + 1 {247620817}" -> "$l34 = value#11 >> 16 {492055990}";
"$l34 = value#11 >> 16 {492055990}" -> "$i35 = (int) $l34 {11351585}";
"$i35 = (int) $l34 {11351585}" -> "$b36 = (byte) $i35 {1662530974}";
"$b36 = (byte) $i35 {1662530974}" -> "buf[$i33] = $b36 {766118558}";
"buf[$i33] = $b36 {766118558}" -> "$l37 = value#11 | 255L {1523381626}";
"$l37 = value#11 | 255L {1523381626}" -> "$b38 = $l37 cmp -1L {1263804933}";
"$b38 = $l37 cmp -1L {1263804933}" -> "if $b38 == 0 goto $i43 = offset#4 {1744565150}";
"if $b38 == 0 goto $i43 = offset#4 {1744565150}" -> "$i39 = offset#4 {40135151}";
"if $b38 == 0 goto $i43 = offset#4 {1744565150}" -> "$i43 = offset#4 {2023928880}";
"$i39 = offset#4 {40135151}" -> "offset#4 = offset#4 + 1 {1758078892}";
"offset#4 = offset#4 + 1 {1758078892}" -> "$l40 = value#11 >> 8 {645983062}";
"$l40 = value#11 >> 8 {645983062}" -> "$i41 = (int) $l40 {533618541}";
"$i41 = (int) $l40 {533618541}" -> "$b42 = (byte) $i41 {1708144290}";
"$b42 = (byte) $i41 {1708144290}" -> "buf[$i39] = $b42 {880882520}";
"buf[$i39] = $b42 {880882520}" -> "$i43 = offset#4 {2023928880}";
"$i43 = offset#4 {2023928880}" -> "offset#4 = offset#4 + 1 {480508064}";
"offset#4 = offset#4 + 1 {480508064}" -> "$i44 = (int) value#11 {1629083638}";
"$i44 = (int) value#11 {1629083638}" -> "$b45 = (byte) $i44 {209190097}";
"$b45 = (byte) $i44 {209190097}" -> "buf[$i43] = $b45 {252867335}";
"buf[$i43] = $b45 {252867335}" -> "$i46 = offset#4 - byte1Off {438907220}";
"$i46 = offset#4 - byte1Off {438907220}" -> "valueLen#106 = $i46 - 1 {883754425}";
"valueLen#106 = $i46 - 1 {883754425}" -> "$i47 = 8 - valueLen#106 {2060908863}";
"$i47 = 8 - valueLen#106 {2060908863}" -> "$b48 = (byte) $i47 {1109094244}";
"$b48 = (byte) $i47 {1109094244}" -> "buf[byte1Off] = $b48 {1156828512}";
"buf[byte1Off] = $b48 {1156828512}" -> "goto [?= return offset#4] {1908289766}";
"goto [?= return offset#4] {1908289766}" -> "return offset#4 {847593855}";
"$b49 = value#2 cmp 120L {2144819526}" -> "if $b49 <= 0 goto $l98 = value#2 + 127L {2137947994}";
"if $b49 <= 0 goto $l98 = value#2 + 127L {2137947994}" -> "value#119 = value#2 - 121L {1724028723}";
"if $b49 <= 0 goto $l98 = value#2 + 127L {2137947994}" -> "$l98 = value#2 + 127L {536087191}";
"value#119 = value#2 - 121L {1724028723}" -> "$l50 = value#119 & -72057594037927936L {11685977}";
"$l50 = value#119 & -72057594037927936L {11685977}" -> "$b51 = $l50 cmp 0L {1686787540}";
"$b51 = $l50 cmp 0L {1686787540}" -> "if $b51 == 0 goto $l56 = value#119 & -281474976710656L {32746955}";
"if $b51 == 0 goto $l56 = value#119 & -281474976710656L {32746955}" -> "$i52 = offset#4 {945992593}";
"if $b51 == 0 goto $l56 = value#119 & -281474976710656L {32746955}" -> "$l56 = value#119 & -281474976710656L {1431332435}";
"$i52 = offset#4 {945992593}" -> "offset#4 = offset#4 + 1 {242247100}";
"offset#4 = offset#4 + 1 {242247100}" -> "$l53 = value#119 >> 56 {608278283}";
"$l53 = value#119 >> 56 {608278283}" -> "$i54 = (int) $l53 {697392058}";
"$i54 = (int) $l53 {697392058}" -> "$b55 = (byte) $i54 {865640872}";
"$b55 = (byte) $i54 {865640872}" -> "buf[$i52] = $b55 {671998611}";
"buf[$i52] = $b55 {671998611}" -> "$l56 = value#119 & -281474976710656L {1431332435}";
"$l56 = value#119 & -281474976710656L {1431332435}" -> "$b57 = $l56 cmp 0L {1950235238}";
"$b57 = $l56 cmp 0L {1950235238}" -> "if $b57 == 0 goto $l62 = value#119 & -1099511627776L {1334166251}";
"if $b57 == 0 goto $l62 = value#119 & -1099511627776L {1334166251}" -> "$i58 = offset#4 {2074459407}";
"if $b57 == 0 goto $l62 = value#119 & -1099511627776L {1334166251}" -> "$l62 = value#119 & -1099511627776L {1888186096}";
"$i58 = offset#4 {2074459407}" -> "offset#4 = offset#4 + 1 {2118993175}";
"offset#4 = offset#4 + 1 {2118993175}" -> "$l59 = value#119 >> 48 {1513792343}";
"$l59 = value#119 >> 48 {1513792343}" -> "$i60 = (int) $l59 {1321935098}";
"$i60 = (int) $l59 {1321935098}" -> "$b61 = (byte) $i60 {596486310}";
"$b61 = (byte) $i60 {596486310}" -> "buf[$i58] = $b61 {645476284}";
"buf[$i58] = $b61 {645476284}" -> "$l62 = value#119 & -1099511627776L {1888186096}";
"$l62 = value#119 & -1099511627776L {1888186096}" -> "$b63 = $l62 cmp 0L {112068521}";
"$b63 = $l62 cmp 0L {112068521}" -> "if $b63 == 0 goto $l68 = value#119 & -4294967296L {1371280306}";
"if $b63 == 0 goto $l68 = value#119 & -4294967296L {1371280306}" -> "$i64 = offset#4 {1624081279}";
"if $b63 == 0 goto $l68 = value#119 & -4294967296L {1371280306}" -> "$l68 = value#119 & -4294967296L {458910749}";
"$i64 = offset#4 {1624081279}" -> "offset#4 = offset#4 + 1 {371737472}";
"offset#4 = offset#4 + 1 {371737472}" -> "$l65 = value#119 >> 40 {158809706}";
"$l65 = value#119 >> 40 {158809706}" -> "$i66 = (int) $l65 {1570199687}";
"$i66 = (int) $l65 {1570199687}" -> "$b67 = (byte) $i66 {1028956946}";
"$b67 = (byte) $i66 {1028956946}" -> "buf[$i64] = $b67 {1418648760}";
"buf[$i64] = $b67 {1418648760}" -> "$l68 = value#119 & -4294967296L {458910749}";
"$l68 = value#119 & -4294967296L {458910749}" -> "$b69 = $l68 cmp 0L {209555593}";
"$b69 = $l68 cmp 0L {209555593}" -> "if $b69 == 0 goto $l74 = value#119 & -16777216L {2132442656}";
"if $b69 == 0 goto $l74 = value#119 & -16777216L {2132442656}" -> "$i70 = offset#4 {379356413}";
"if $b69 == 0 goto $l74 = value#119 & -16777216L {2132442656}" -> "$l74 = value#119 & -16777216L {1255963950}";
"$i70 = offset#4 {379356413}" -> "offset#4 = offset#4 + 1 {1980082047}";
"offset#4 = offset#4 + 1 {1980082047}" -> "$l71 = value#119 >> 32 {1500018713}";
"$l71 = value#119 >> 32 {1500018713}" -> "$i72 = (int) $l71 {34406932}";
"$i72 = (int) $l71 {34406932}" -> "$b73 = (byte) $i72 {1231258496}";
"$b73 = (byte) $i72 {1231258496}" -> "buf[$i70] = $b73 {1865627274}";
"buf[$i70] = $b73 {1865627274}" -> "$l74 = value#119 & -16777216L {1255963950}";
"$l74 = value#119 & -16777216L {1255963950}" -> "$b75 = $l74 cmp 0L {1078892226}";
"$b75 = $l74 cmp 0L {1078892226}" -> "if $b75 == 0 goto $l80 = value#119 & -65536L {1795515394}";
"if $b75 == 0 goto $l80 = value#119 & -65536L {1795515394}" -> "$i76 = offset#4 {306714070}";
"if $b75 == 0 goto $l80 = value#119 & -65536L {1795515394}" -> "$l80 = value#119 & -65536L {590946081}";
"$i76 = offset#4 {306714070}" -> "offset#4 = offset#4 + 1 {646216155}";
"offset#4 = offset#4 + 1 {646216155}" -> "$l77 = value#119 >> 24 {1011790853}";
"$l77 = value#119 >> 24 {1011790853}" -> "$i78 = (int) $l77 {964778230}";
"$i78 = (int) $l77 {964778230}" -> "$b79 = (byte) $i78 {1449924975}";
"$b79 = (byte) $i78 {1449924975}" -> "buf[$i76] = $b79 {1870270009}";
"buf[$i76] = $b79 {1870270009}" -> "$l80 = value#119 & -65536L {590946081}";
"$l80 = value#119 & -65536L {590946081}" -> "$b81 = $l80 cmp 0L {1368857454}";
"$b81 = $l80 cmp 0L {1368857454}" -> "if $b81 == 0 goto $l86 = value#119 & -256L {36732509}";
"if $b81 == 0 goto $l86 = value#119 & -256L {36732509}" -> "$i82 = offset#4 {458330793}";
"if $b81 == 0 goto $l86 = value#119 & -256L {36732509}" -> "$l86 = value#119 & -256L {1097901440}";
"$i82 = offset#4 {458330793}" -> "offset#4 = offset#4 + 1 {1920251590}";
"offset#4 = offset#4 + 1 {1920251590}" -> "$l83 = value#119 >> 16 {1350727488}";
"$l83 = value#119 >> 16 {1350727488}" -> "$i84 = (int) $l83 {127346960}";
"$i84 = (int) $l83 {127346960}" -> "$b85 = (byte) $i84 {1267599445}";
"$b85 = (byte) $i84 {1267599445}" -> "buf[$i82] = $b85 {127788996}";
"buf[$i82] = $b85 {127788996}" -> "$l86 = value#119 & -256L {1097901440}";
"$l86 = value#119 & -256L {1097901440}" -> "$b87 = $l86 cmp 0L {1491882530}";
"$b87 = $l86 cmp 0L {1491882530}" -> "if $b87 == 0 goto $i92 = offset#4 {480121188}";
"if $b87 == 0 goto $i92 = offset#4 {480121188}" -> "$i88 = offset#4 {797419486}";
"if $b87 == 0 goto $i92 = offset#4 {480121188}" -> "$i92 = offset#4 {148004136}";
"$i88 = offset#4 {797419486}" -> "offset#4 = offset#4 + 1 {356556110}";
"offset#4 = offset#4 + 1 {356556110}" -> "$l89 = value#119 >> 8 {69561205}";
"$l89 = value#119 >> 8 {69561205}" -> "$i90 = (int) $l89 {354298962}";
"$i90 = (int) $l89 {354298962}" -> "$b91 = (byte) $i90 {558786929}";
"$b91 = (byte) $i90 {558786929}" -> "buf[$i88] = $b91 {1134241178}";
"buf[$i88] = $b91 {1134241178}" -> "$i92 = offset#4 {148004136}";
"$i92 = offset#4 {148004136}" -> "offset#4 = offset#4 + 1 {1510320290}";
"offset#4 = offset#4 + 1 {1510320290}" -> "$i93 = (int) value#119 {2027444671}";
"$i93 = (int) value#119 {2027444671}" -> "$b94 = (byte) $i93 {1660510353}";
"$b94 = (byte) $i93 {1660510353}" -> "buf[$i92] = $b94 {365855956}";
"buf[$i92] = $b94 {365855956}" -> "$i95 = offset#4 - byte1Off {26615115}";
"$i95 = offset#4 - byte1Off {26615115}" -> "valueLen#214 = $i95 - 1 {667286797}";
"valueLen#214 = $i95 - 1 {667286797}" -> "$i96 = 247 + valueLen#214 {2076375501}";
"$i96 = 247 + valueLen#214 {2076375501}" -> "$b97 = (byte) $i96 {1562389015}";
"$b97 = (byte) $i96 {1562389015}" -> "buf[byte1Off] = $b97 {952165190}";
"buf[byte1Off] = $b97 {952165190}" -> "goto [?= return offset#4] {2017931264}";
"goto [?= return offset#4] {2017931264}" -> "return offset#4 {847593855}";
"$l98 = value#2 + 127L {536087191}" -> "$i99 = (int) $l98 {226454102}";
"$i99 = (int) $l98 {226454102}" -> "$b100 = (byte) $i99 {142756210}";
"$b100 = (byte) $i99 {142756210}" -> "buf[byte1Off] = $b100 {2076291893}";
"buf[byte1Off] = $b100 {2076291893}" -> "return offset#4 {847593855}";
}

digraph readSortedLong {
"buf := @parameter0: byte[] {59926769}" -> "off#1 := @parameter1: int {313048161}";
"off#1 := @parameter1: int {313048161}" -> "off#4 = off#1 + 1 {519111610}";
"off#4 = off#1 + 1 {519111610}" -> "$b0 = buf[off#1] {1094384152}";
"$b0 = buf[off#1] {1094384152}" -> "b1 = $b0 & 255 {1900088213}";
"b1 = $b0 & 255 {1900088213}" -> "if b1 >= 8 goto (branch) {703469607}";
"if b1 >= 8 goto (branch) {703469607}" -> "byteLen#13 = 8 - b1 {250630141}";
"if b1 >= 8 goto (branch) {703469607}" -> "if b1 <= 247 goto $i1 = b1 - 127 {1942157212}";
"byteLen#13 = 8 - b1 {250630141}" -> "negative#15 = 1 {243180401}";
"negative#15 = 1 {243180401}" -> "goto [?= (branch)] {50174692}";
"goto [?= (branch)] {50174692}" -> "if negative#15 == 0 goto value#28 = 0L {722182119}";
"if b1 <= 247 goto $i1 = b1 - 127 {1942157212}" -> "byteLen#13 = b1 - 247 {1670288664}";
"if b1 <= 247 goto $i1 = b1 - 127 {1942157212}" -> "$i1 = b1 - 127 {919802176}";
"byteLen#13 = b1 - 247 {1670288664}" -> "negative#15 = 0 {983726028}";
"negative#15 = 0 {983726028}" -> "goto [?= (branch)] {443933453}";
"goto [?= (branch)] {443933453}" -> "if negative#15 == 0 goto value#28 = 0L {722182119}";
"$i1 = b1 - 127 {919802176}" -> "$l2 = (long) $i1 {51110172}";
"$l2 = (long) $i1 {51110172}" -> "return $l2 {721346192}";
"if negative#15 == 0 goto value#28 = 0L {722182119}" -> "value#28 = -1L {1218776265}";
"if negative#15 == 0 goto value#28 = 0L {722182119}" -> "value#28 = 0L {1364144555}";
"value#28 = -1L {1218776265}" -> "goto [?= (branch)] {1059477149}";
"goto [?= (branch)] {1059477149}" -> "if byteLen#13 <= 7 goto (branch) {2094753964}";
"value#28 = 0L {1364144555}" -> "if byteLen#13 <= 7 goto (branch) {2094753964}";
"if byteLen#13 <= 7 goto (branch) {2094753964}" -> "$l3 = value#28 << 8 {129192223}";
"if byteLen#13 <= 7 goto (branch) {2094753964}" -> "if byteLen#13 <= 6 goto (branch) {1631594556}";
"$l3 = value#28 << 8 {129192223}" -> "$i4 = off#4 {1670003885}";
"$i4 = off#4 {1670003885}" -> "off#4 = off#4 + 1 {2116858474}";
"off#4 = off#4 + 1 {2116858474}" -> "$b5 = buf[$i4] {1546300020}";
"$b5 = buf[$i4] {1546300020}" -> "$s6 = $b5 & 255 {579195992}";
"$s6 = $b5 & 255 {579195992}" -> "$l7 = (long) $s6 {958504320}";
"$l7 = (long) $s6 {958504320}" -> "value#28 = $l3 | $l7 {1731426263}";
"value#28 = $l3 | $l7 {1731426263}" -> "if byteLen#13 <= 6 goto (branch) {1631594556}";
"if byteLen#13 <= 6 goto (branch) {1631594556}" -> "$l8 = value#28 << 8 {1784008049}";
"if byteLen#13 <= 6 goto (branch) {1631594556}" -> "if byteLen#13 <= 5 goto (branch) {1094544937}";
"$l8 = value#28 << 8 {1784008049}" -> "$i9 = off#4 {472092547}";
"$i9 = off#4 {472092547}" -> "off#4 = off#4 + 1 {884709958}";
"off#4 = off#4 + 1 {884709958}" -> "$b10 = buf[$i9] {1883367397}";
"$b10 = buf[$i9] {1883367397}" -> "$s11 = $b10 & 255 {1515073813}";
"$s11 = $b10 & 255 {1515073813}" -> "$l12 = (long) $s11 {852486576}";
"$l12 = (long) $s11 {852486576}" -> "value#28 = $l8 | $l12 {412626515}";
"value#28 = $l8 | $l12 {412626515}" -> "if byteLen#13 <= 5 goto (branch) {1094544937}";
"if byteLen#13 <= 5 goto (branch) {1094544937}" -> "$l13 = value#28 << 8 {706666118}";
"if byteLen#13 <= 5 goto (branch) {1094544937}" -> "if byteLen#13 <= 4 goto (branch) {910730285}";
"$l13 = value#28 << 8 {706666118}" -> "$i14 = off#4 {1774721628}";
"$i14 = off#4 {1774721628}" -> "off#4 = off#4 + 1 {1129728937}";
"off#4 = off#4 + 1 {1129728937}" -> "$b15 = buf[$i14] {534796203}";
"$b15 = buf[$i14] {534796203}" -> "$s16 = $b15 & 255 {1935714448}";
"$s16 = $b15 & 255 {1935714448}" -> "$l17 = (long) $s16 {35307094}";
"$l17 = (long) $s16 {35307094}" -> "value#28 = $l13 | $l17 {1607603205}";
"value#28 = $l13 | $l17 {1607603205}" -> "if byteLen#13 <= 4 goto (branch) {910730285}";
"if byteLen#13 <= 4 goto (branch) {910730285}" -> "$l18 = value#28 << 8 {1366916768}";
"if byteLen#13 <= 4 goto (branch) {910730285}" -> "if byteLen#13 <= 3 goto (branch) {1222628873}";
"$l18 = value#28 << 8 {1366916768}" -> "$i19 = off#4 {1948664571}";
"$i19 = off#4 {1948664571}" -> "off#4 = off#4 + 1 {311604298}";
"off#4 = off#4 + 1 {311604298}" -> "$b20 = buf[$i19] {142886086}";
"$b20 = buf[$i19] {142886086}" -> "$s21 = $b20 & 255 {1923559922}";
"$s21 = $b20 & 255 {1923559922}" -> "$l22 = (long) $s21 {1964047112}";
"$l22 = (long) $s21 {1964047112}" -> "value#28 = $l18 | $l22 {1863900342}";
"value#28 = $l18 | $l22 {1863900342}" -> "if byteLen#13 <= 3 goto (branch) {1222628873}";
"if byteLen#13 <= 3 goto (branch) {1222628873}" -> "$l23 = value#28 << 8 {1084835115}";
"if byteLen#13 <= 3 goto (branch) {1222628873}" -> "if byteLen#13 <= 2 goto (branch) {924323706}";
"$l23 = value#28 << 8 {1084835115}" -> "$i24 = off#4 {1295405473}";
"$i24 = off#4 {1295405473}" -> "off#4 = off#4 + 1 {572207913}";
"off#4 = off#4 + 1 {572207913}" -> "$b25 = buf[$i24] {672246364}";
"$b25 = buf[$i24] {672246364}" -> "$s26 = $b25 & 255 {607365013}";
"$s26 = $b25 & 255 {607365013}" -> "$l27 = (long) $s26 {1598708289}";
"$l27 = (long) $s26 {1598708289}" -> "value#28 = $l23 | $l27 {457836094}";
"value#28 = $l23 | $l27 {457836094}" -> "if byteLen#13 <= 2 goto (branch) {924323706}";
"if byteLen#13 <= 2 goto (branch) {924323706}" -> "$l28 = value#28 << 8 {1609352689}";
"if byteLen#13 <= 2 goto (branch) {924323706}" -> "if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1311443791}";
"$l28 = value#28 << 8 {1609352689}" -> "$i29 = off#4 {281731579}";
"$i29 = off#4 {281731579}" -> "off#4 = off#4 + 1 {1873701890}";
"off#4 = off#4 + 1 {1873701890}" -> "$b30 = buf[$i29] {1456795467}";
"$b30 = buf[$i29] {1456795467}" -> "$s31 = $b30 & 255 {2060507514}";
"$s31 = $b30 & 255 {2060507514}" -> "$l32 = (long) $s31 {1711436894}";
"$l32 = (long) $s31 {1711436894}" -> "value#28 = $l28 | $l32 {993198889}";
"value#28 = $l28 | $l32 {993198889}" -> "if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1311443791}";
"if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1311443791}" -> "$l33 = value#28 << 8 {835348356}";
"if byteLen#13 <= 1 goto $l38 = value#28 << 8 {1311443791}" -> "$l38 = value#28 << 8 {109104176}";
"$l33 = value#28 << 8 {835348356}" -> "$i34 = off#4 {1508800959}";
"$i34 = off#4 {1508800959}" -> "off#4 = off#4 + 1 {1420780361}";
"off#4 = off#4 + 1 {1420780361}" -> "$b35 = buf[$i34] {909891615}";
"$b35 = buf[$i34] {909891615}" -> "$s36 = $b35 & 255 {1355786580}";
"$s36 = $b35 & 255 {1355786580}" -> "$l37 = (long) $s36 {2136292655}";
"$l37 = (long) $s36 {2136292655}" -> "value#28 = $l33 | $l37 {1575717044}";
"value#28 = $l33 | $l37 {1575717044}" -> "$l38 = value#28 << 8 {109104176}";
"$l38 = value#28 << 8 {109104176}" -> "off#119 = off#4 + 1 {109044195}";
"off#119 = off#4 + 1 {109044195}" -> "$b39 = buf[off#4] {102653008}";
"$b39 = buf[off#4] {102653008}" -> "$s40 = $b39 & 255 {1713357848}";
"$s40 = $b39 & 255 {1713357848}" -> "$l41 = (long) $s40 {521552321}";
"$l41 = (long) $s40 {521552321}" -> "value#125 = $l38 | $l41 {1817477291}";
"value#125 = $l38 | $l41 {1817477291}" -> "if negative#15 == 0 goto value#130 = value#125 + 121L {1497823531}";
"if negative#15 == 0 goto value#130 = value#125 + 121L {1497823531}" -> "value#130 = value#125 - 119L {235298083}";
"if negative#15 == 0 goto value#130 = value#125 + 121L {1497823531}" -> "value#130 = value#125 + 121L {267981898}";
"value#130 = value#125 - 119L {235298083}" -> "goto [?= return value#130] {1621120774}";
"goto [?= return value#130] {1621120774}" -> "return value#130 {1577613550}";
"value#130 = value#125 + 121L {267981898}" -> "return value#130 {1577613550}";
}

digraph getReadSortedLongLength {
"buf := @parameter0: byte[] {1468782553}" -> "off := @parameter1: int {234400116}";
"off := @parameter1: int {234400116}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadSortedIntLength(byte[],int)>(buf, off) {355309528}";
"$i0 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadSortedIntLength(byte[],int)>(buf, off) {355309528}" -> "return $i0 {2100419863}";
}

digraph getReadSortedIntLength {
"buf := @parameter0: byte[] {107505658}" -> "off := @parameter1: int {601769229}";
"off := @parameter1: int {601769229}" -> "$b0 = buf[off] {1995072125}";
"$b0 = buf[off] {1995072125}" -> "b1 = $b0 & 255 {1225686075}";
"b1 = $b0 & 255 {1225686075}" -> "if b1 >= 8 goto (branch) {1978006010}";
"if b1 >= 8 goto (branch) {1978006010}" -> "$i1 = 9 - b1 {366343089}";
"if b1 >= 8 goto (branch) {1978006010}" -> "if b1 <= 247 goto return 1 {693928535}";
"$i1 = 9 - b1 {366343089}" -> "return $i1 {1327887064}";
"if b1 <= 247 goto return 1 {693928535}" -> "$i2 = 1 + b1 {1692826042}";
"if b1 <= 247 goto return 1 {693928535}" -> "return 1 {1159219536}";
"$i2 = 1 + b1 {1692826042}" -> "$i3 = $i2 - 247 {418355527}";
"$i3 = $i2 - 247 {418355527}" -> "return $i3 {327874494}";
}

digraph readSortedInt {
"buf := @parameter0: byte[] {979500935}" -> "off#1 := @parameter1: int {26981462}";
"off#1 := @parameter1: int {26981462}" -> "off#4 = off#1 + 1 {700542641}";
"off#4 = off#1 + 1 {700542641}" -> "$b0 = buf[off#1] {860087880}";
"$b0 = buf[off#1] {860087880}" -> "b1 = $b0 & 255 {1223350429}";
"b1 = $b0 & 255 {1223350429}" -> "if b1 >= 8 goto (branch) {1138101039}";
"if b1 >= 8 goto (branch) {1138101039}" -> "byteLen#13 = 8 - b1 {997174540}";
"if b1 >= 8 goto (branch) {1138101039}" -> "if b1 <= 247 goto $i1 = b1 - 127 {1178975173}";
"byteLen#13 = 8 - b1 {997174540}" -> "negative#15 = 1 {935415954}";
"negative#15 = 1 {935415954}" -> "goto [?= (branch)] {1895861419}";
"goto [?= (branch)] {1895861419}" -> "if negative#15 == 0 goto value#27 = 0 {52536663}";
"if b1 <= 247 goto $i1 = b1 - 127 {1178975173}" -> "byteLen#13 = b1 - 247 {682977835}";
"if b1 <= 247 goto $i1 = b1 - 127 {1178975173}" -> "$i1 = b1 - 127 {1525899435}";
"byteLen#13 = b1 - 247 {682977835}" -> "negative#15 = 0 {1239966955}";
"negative#15 = 0 {1239966955}" -> "goto [?= (branch)] {555035265}";
"goto [?= (branch)] {555035265}" -> "if negative#15 == 0 goto value#27 = 0 {52536663}";
"$i1 = b1 - 127 {1525899435}" -> "return $i1 {1387923542}";
"if negative#15 == 0 goto value#27 = 0 {52536663}" -> "value#27 = -1 {1730116247}";
"if negative#15 == 0 goto value#27 = 0 {52536663}" -> "value#27 = 0 {972417421}";
"value#27 = -1 {1730116247}" -> "goto [?= (branch)] {1763336254}";
"goto [?= (branch)] {1763336254}" -> "if byteLen#13 <= 3 goto (branch) {89638967}";
"value#27 = 0 {972417421}" -> "if byteLen#13 <= 3 goto (branch) {89638967}";
"if byteLen#13 <= 3 goto (branch) {89638967}" -> "$i2 = value#27 << 8 {630714497}";
"if byteLen#13 <= 3 goto (branch) {89638967}" -> "if byteLen#13 <= 2 goto (branch) {1288597861}";
"$i2 = value#27 << 8 {630714497}" -> "$i3 = off#4 {1444928791}";
"$i3 = off#4 {1444928791}" -> "off#4 = off#4 + 1 {1284914349}";
"off#4 = off#4 + 1 {1284914349}" -> "$b4 = buf[$i3] {108379769}";
"$b4 = buf[$i3] {108379769}" -> "$s5 = $b4 & 255 {1959283416}";
"$s5 = $b4 & 255 {1959283416}" -> "value#27 = $i2 | $s5 {577475215}";
"value#27 = $i2 | $s5 {577475215}" -> "if byteLen#13 <= 2 goto (branch) {1288597861}";
"if byteLen#13 <= 2 goto (branch) {1288597861}" -> "$i6 = value#27 << 8 {1148396755}";
"if byteLen#13 <= 2 goto (branch) {1288597861}" -> "if byteLen#13 <= 1 goto $i14 = value#27 << 8 {696649397}";
"$i6 = value#27 << 8 {1148396755}" -> "$i7 = off#4 {845396284}";
"$i7 = off#4 {845396284}" -> "off#4 = off#4 + 1 {121563066}";
"off#4 = off#4 + 1 {121563066}" -> "$b8 = buf[$i7] {1521880626}";
"$b8 = buf[$i7] {1521880626}" -> "$s9 = $b8 & 255 {1200310617}";
"$s9 = $b8 & 255 {1200310617}" -> "value#27 = $i6 | $s9 {1574255206}";
"value#27 = $i6 | $s9 {1574255206}" -> "if byteLen#13 <= 1 goto $i14 = value#27 << 8 {696649397}";
"if byteLen#13 <= 1 goto $i14 = value#27 << 8 {696649397}" -> "$i10 = value#27 << 8 {579953311}";
"if byteLen#13 <= 1 goto $i14 = value#27 << 8 {696649397}" -> "$i14 = value#27 << 8 {1849364793}";
"$i10 = value#27 << 8 {579953311}" -> "$i11 = off#4 {1187885087}";
"$i11 = off#4 {1187885087}" -> "off#4 = off#4 + 1 {1103668617}";
"off#4 = off#4 + 1 {1103668617}" -> "$b12 = buf[$i11] {1759814325}";
"$b12 = buf[$i11] {1759814325}" -> "$s13 = $b12 & 255 {596051455}";
"$s13 = $b12 & 255 {596051455}" -> "value#27 = $i10 | $s13 {1784407976}";
"value#27 = $i10 | $s13 {1784407976}" -> "$i14 = value#27 << 8 {1849364793}";
"$i14 = value#27 << 8 {1849364793}" -> "off#67 = off#4 + 1 {1511575206}";
"off#67 = off#4 + 1 {1511575206}" -> "$b15 = buf[off#4] {1813822981}";
"$b15 = buf[off#4] {1813822981}" -> "$s16 = $b15 & 255 {1137189582}";
"$s16 = $b15 & 255 {1137189582}" -> "value#72 = $i14 | $s16 {1457309835}";
"value#72 = $i14 | $s16 {1457309835}" -> "if negative#15 == 0 goto value#74 = value#72 + 121 {374190621}";
"if negative#15 == 0 goto value#74 = value#72 + 121 {374190621}" -> "value#74 = value#72 + -119 {78219242}";
"if negative#15 == 0 goto value#74 = value#72 + 121 {374190621}" -> "value#74 = value#72 + 121 {703417555}";
"value#74 = value#72 + -119 {78219242}" -> "goto [?= return value#74] {880910180}";
"goto [?= return value#74] {880910180}" -> "return value#74 {446010829}";
"value#74 = value#72 + 121 {703417555}" -> "return value#74 {446010829}";
}


