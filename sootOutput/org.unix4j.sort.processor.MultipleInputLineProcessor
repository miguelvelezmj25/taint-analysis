    public void <init>(java.util.List, org.unix4j.sort.processor.InputProcessor, org.unix4j.sort.processor.LineProcessor)
    {
        org.unix4j.sort.processor.MultipleInputLineProcessor this;
        java.util.List inputs;
        org.unix4j.sort.processor.InputProcessor processor;
        org.unix4j.sort.processor.LineProcessor output;

        this := @this: org.unix4j.sort.processor.MultipleInputLineProcessor;

        inputs := @parameter0: java.util.List;

        processor := @parameter1: org.unix4j.sort.processor.InputProcessor;

        output := @parameter2: org.unix4j.sort.processor.LineProcessor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.unix4j.sort.processor.MultipleInputLineProcessor: java.util.List inputs> = inputs;

        this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.InputProcessor processor> = processor;

        this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.LineProcessor output> = output;

        return;
    }

    public void finish()
    {
        org.unix4j.sort.processor.MultipleInputLineProcessor this;
        org.unix4j.sort.io.Input input;
        java.util.Iterator l3;
        org.unix4j.sort.line.Line line;
        org.unix4j.sort.command.ExitValueException e, $r12;
        java.util.List $r0, $r2, $r3, $r13;
        org.unix4j.sort.processor.LineProcessor $r1, $r6, $r9, $r11, $r14;
        int i#7, $i0;
        java.lang.Object $r4, $r7;
        org.unix4j.sort.processor.InputProcessor $r5, $r8, $r10;
        boolean $z0, $z1;

        this := @this: org.unix4j.sort.processor.MultipleInputLineProcessor;

        $r0 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: java.util.List inputs>;

        $r1 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.LineProcessor output>;

        virtualinvoke this.<org.unix4j.sort.processor.MultipleInputLineProcessor: void beginMultiple(java.util.List,org.unix4j.sort.processor.LineProcessor)>($r0, $r1);

        i#7 = 0;

     label1:
        $r2 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: java.util.List inputs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#7 >= $i0 goto label9;

        $r3 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: java.util.List inputs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i#7);

        input = (org.unix4j.sort.io.Input) $r4;

     label2:
        $r5 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.InputProcessor processor>;

        $r6 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.LineProcessor output>;

        interfaceinvoke $r5.<org.unix4j.sort.processor.InputProcessor: void begin(org.unix4j.sort.io.Input,org.unix4j.sort.processor.LineProcessor)>(input, $r6);

        l3 = interfaceinvoke input.<org.unix4j.sort.io.Input: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        line = (org.unix4j.sort.line.Line) $r7;

        $r8 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.InputProcessor processor>;

        $r9 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.LineProcessor output>;

        $z1 = interfaceinvoke $r8.<org.unix4j.sort.processor.InputProcessor: boolean processLine(org.unix4j.sort.io.Input,org.unix4j.sort.line.Line,org.unix4j.sort.processor.LineProcessor)>(input, line, $r9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        goto label3;

     label5:
        $r10 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.InputProcessor processor>;

        $r11 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.LineProcessor output>;

        interfaceinvoke $r10.<org.unix4j.sort.processor.InputProcessor: void finish(org.unix4j.sort.io.Input,org.unix4j.sort.processor.LineProcessor)>(input, $r11);

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        e = $r12;

        virtualinvoke e.<org.unix4j.sort.command.ExitValueException: void setInput(org.unix4j.sort.io.Input)>(input);

        throw e;

     label8:
        i#7 = i#7 + 1;

        goto label1;

     label9:
        $r13 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: java.util.List inputs>;

        $r14 = this.<org.unix4j.sort.processor.MultipleInputLineProcessor: org.unix4j.sort.processor.LineProcessor output>;

        virtualinvoke this.<org.unix4j.sort.processor.MultipleInputLineProcessor: void finishMultiple(java.util.List,org.unix4j.sort.processor.LineProcessor)>($r13, $r14);

        return;

        catch org.unix4j.sort.command.ExitValueException from label2 to label6 with label7;
    }

    protected void beginMultiple(java.util.List, org.unix4j.sort.processor.LineProcessor)
    {
        org.unix4j.sort.processor.MultipleInputLineProcessor this;
        java.util.List inputs;
        org.unix4j.sort.processor.LineProcessor output;

        this := @this: org.unix4j.sort.processor.MultipleInputLineProcessor;

        inputs := @parameter0: java.util.List;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        return;
    }

    protected void finishMultiple(java.util.List, org.unix4j.sort.processor.LineProcessor)
    {
        org.unix4j.sort.processor.MultipleInputLineProcessor this;
        java.util.List inputs;
        org.unix4j.sort.processor.LineProcessor output;

        this := @this: org.unix4j.sort.processor.MultipleInputLineProcessor;

        inputs := @parameter0: java.util.List;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        interfaceinvoke output.<org.unix4j.sort.processor.LineProcessor: void finish()>();

        return;
    }


