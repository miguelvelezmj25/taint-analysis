digraph generateCanonicalCodes {
"sizes := @parameter0: short[] {25561585}" -> "codes := @parameter1: int[] {1485134634}";
"codes := @parameter1: int[] {1485134634}" -> "ranks := @parameter2: int[] {840838206}";
"ranks := @parameter2: int[] {840838206}" -> "count := @parameter3: int {274722324}";
"count := @parameter3: int {274722324}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {675884651}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {675884651}" -> "if count <= 1 goto code#13 = 0 {89255462}";
"if count <= 1 goto code#13 = 0 {89255462}" -> "$r0 = new kanzi.util.sort.QuickSort {1162093482}";
"if count <= 1 goto code#13 = 0 {89255462}" -> "code#13 = 0 {563880874}";
"$r0 = new kanzi.util.sort.QuickSort {1162093482}" -> "$r1 = new kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator {591662822}";
"$r1 = new kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator {591662822}" -> "specialinvoke $r1.<kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator: void <init>(short[])>(sizes) {466214149}";
"specialinvoke $r1.<kanzi.entropy.HuffmanCommon$CodeLengthArrayComparator: void <init>(short[])>(sizes) {466214149}" -> "specialinvoke $r0.<kanzi.util.sort.QuickSort: void <init>(kanzi.ArrayComparator)>($r1) {2134444548}";
"specialinvoke $r0.<kanzi.util.sort.QuickSort: void <init>(kanzi.ArrayComparator)>($r1) {2134444548}" -> "sorter = $r0 {2087848742}";
"sorter = $r0 {2087848742}" -> "virtualinvoke sorter.<kanzi.util.sort.QuickSort: boolean sort(int[],int,int)>(ranks, 0, count) {1507040904}";
"virtualinvoke sorter.<kanzi.util.sort.QuickSort: boolean sort(int[],int,int)>(ranks, 0, count) {1507040904}" -> "code#13 = 0 {563880874}";
"code#13 = 0 {563880874}" -> "$i0 = ranks[0] {969682416}";
"$i0 = ranks[0] {969682416}" -> "len#19 = sizes[$i0] {1400215677}";
"len#19 = sizes[$i0] {1400215677}" -> "i#21 = 0 {1846048323}";
"i#21 = 0 {1846048323}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21) {796946443}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21) {796946443}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {40319999}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {40319999}" -> "if i#21 >= count goto return count {496511710}";
"if i#21 >= count goto return count {496511710}" -> "r = ranks[i#21] {1079192757}";
"if i#21 >= count goto return count {496511710}" -> "return count {745534109}";
"r = ranks[i#21] {1079192757}" -> "$s1 = sizes[r] {1417703319}";
"$s1 = sizes[r] {1417703319}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1) {1007091100}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1) {1007091100}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19) {117801248}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19) {117801248}" -> "if $s1 <= len#19 goto codes[r] = code#13 {2138804565}";
"if $s1 <= len#19 goto codes[r] = code#13 {2138804565}" -> "$s2 = sizes[r] {1337303135}";
"if $s1 <= len#19 goto codes[r] = code#13 {2138804565}" -> "codes[r] = code#13 {1923329376}";
"$s2 = sizes[r] {1337303135}" -> "$i3 = $s2 - len#19 {1090704288}";
"$i3 = $s2 - len#19 {1090704288}" -> "code#13 = code#13 << $i3 {1951064422}";
"code#13 = code#13 << $i3 {1951064422}" -> "len#19 = sizes[r] {746139375}";
"len#19 = sizes[r] {746139375}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19) {279627690}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19) {279627690}" -> "if len#19 <= 24 goto codes[r] = code#13 {1799698018}";
"if len#19 <= 24 goto codes[r] = code#13 {1799698018}" -> "return -1 {1327445465}";
"if len#19 <= 24 goto codes[r] = code#13 {1799698018}" -> "codes[r] = code#13 {1923329376}";
"codes[r] = code#13 {1923329376}" -> "code#13 = code#13 + 1 {2050590855}";
"code#13 = code#13 + 1 {2050590855}" -> "i#21 = i#21 + 1 {369776379}";
"i#21 = i#21 + 1 {369776379}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21)] {1971541907}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21)] {1971541907}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21) {796946443}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {675884651}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19) {117801248}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {40319999}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1) {1007091100}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#19) {279627690}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#21) {796946443}"[fontcolor="blue", penwidth=3, color="blue"];
}


