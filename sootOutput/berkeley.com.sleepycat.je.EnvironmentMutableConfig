    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/EnvironmentMutableConfig";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        java.util.Properties $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnNoSync> = 0;

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnWriteNoSync> = 0;

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean loadPropertyFile> = 1;

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean validateParams> = 1;

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: berkeley.com.sleepycat.je.ExceptionListener exceptionListener> = null;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props> = $r0;

        return;
    }

    protected berkeley.com.sleepycat.je.EnvironmentMutableConfig clone()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this, copy;
        java.lang.CloneNotSupportedException willNeverOccur, $r5;
        java.lang.Object $r0, $r2;
        java.util.Properties $r1, $r3;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

     label1:
        $r0 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        copy = (berkeley.com.sleepycat.je.EnvironmentMutableConfig) $r0;

        $r1 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.Object clone()>();

        $r3 = (java.util.Properties) $r2;

        copy.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props> = $r3;

     label2:
        return copy;

     label3:
        $r5 := @caughtexception;

        willNeverOccur = $r5;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public berkeley.com.sleepycat.je.Durability getDurability()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        berkeley.com.sleepycat.je.config.ConfigParam $r0;
        java.lang.String value;
        java.util.Properties $r1;
        berkeley.com.sleepycat.je.Durability $r2;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $r1 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        $r0 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.ConfigParam JE_DURABILITY>;

        value = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String getVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam)>($r1, $r0);

        $r2 = staticinvoke <berkeley.com.sleepycat.je.Durability: berkeley.com.sleepycat.je.Durability parse(java.lang.String)>(value);

        return $r2;
    }

    public boolean getTxnWriteNoSync()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $z0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnWriteNoSync>;

        return $z0;
    }

    public boolean getTxnNoSync()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $z0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnNoSync>;

        return $z0;
    }

    boolean getLoadPropertyFile()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $z0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean loadPropertyFile>;

        return $z0;
    }

    void copyHandlePropsTo(berkeley.com.sleepycat.je.EnvironmentMutableConfig)
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this, other;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.Durability $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        other := @parameter0: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $z0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnNoSync>;

        other.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnNoSync> = $z0;

        $z1 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnWriteNoSync>;

        other.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnWriteNoSync> = $z1;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: berkeley.com.sleepycat.je.Durability getDurability()>();

        virtualinvoke other.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: berkeley.com.sleepycat.je.EnvironmentMutableConfig setDurability(berkeley.com.sleepycat.je.Durability)>($r0);

        return;
    }

    public berkeley.com.sleepycat.je.EnvironmentMutableConfig setDurability(berkeley.com.sleepycat.je.Durability)
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        berkeley.com.sleepycat.je.Durability durability;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        durability := @parameter0: berkeley.com.sleepycat.je.Durability;

        virtualinvoke this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: void setDurabilityVoid(berkeley.com.sleepycat.je.Durability)>(durability);

        return this;
    }

    public void setDurabilityVoid(berkeley.com.sleepycat.je.Durability)
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        berkeley.com.sleepycat.je.Durability durability;
        boolean $z0, $z1, $z2;
        java.util.Properties $r0, $r3;
        berkeley.com.sleepycat.je.config.ConfigParam $r1, $r4;
        java.lang.String $r5;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        durability := @parameter0: berkeley.com.sleepycat.je.Durability;

        $z0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnNoSync>;

        $z1 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean txnWriteNoSync>;

        staticinvoke <berkeley.com.sleepycat.je.TransactionConfig: void checkMixedMode(boolean,boolean,boolean,berkeley.com.sleepycat.je.Durability)>(0, $z0, $z1, durability);

        if durability != null goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        $r1 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.ConfigParam JE_DURABILITY>;

        virtualinvoke $r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>($r1);

        goto label2;

     label1:
        $r3 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        $r4 = <berkeley.com.sleepycat.je.config.EnvironmentParams: berkeley.com.sleepycat.je.config.ConfigParam JE_DURABILITY>;

        $r5 = virtualinvoke durability.<berkeley.com.sleepycat.je.Durability: java.lang.String toString()>();

        $z2 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean validateParams>;

        staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: void setVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam,java.lang.String,boolean)>($r3, $r4, $r5, $z2);

     label2:
        return;
    }

    java.util.Properties getProps()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        java.util.Properties $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        return $r0;
    }

    public boolean isConfigParamSet(java.lang.String)
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        java.lang.String paramName;
        java.util.Properties $r0;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        paramName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        $z0 = virtualinvoke $r0.<java.util.Properties: boolean containsKey(java.lang.Object)>(paramName);

        return $z0;
    }

    public berkeley.com.sleepycat.je.ExceptionListener getExceptionListener()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        berkeley.com.sleepycat.je.ExceptionListener $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: berkeley.com.sleepycat.je.ExceptionListener exceptionListener>;

        return $r0;
    }

    public berkeley.com.sleepycat.je.CacheMode getCacheMode()
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        berkeley.com.sleepycat.je.CacheMode $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: berkeley.com.sleepycat.je.CacheMode cacheMode>;

        return $r0;
    }

    void checkImmutablePropsForEquality(java.util.Properties) throws java.lang.IllegalArgumentException
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        java.util.Properties handleConfigProps, $r6;
        java.util.Iterator iter;
        java.lang.String paramName, paramVal, useParamVal, $r15;
        berkeley.com.sleepycat.je.config.ConfigParam param;
        java.util.Map $r0, $r3;
        java.util.Set $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r2, $r4;
        java.lang.AssertionError $r5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        handleConfigProps := @parameter0: java.util.Properties;

        $r0 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        iter = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        paramName = (java.lang.String) $r2;

        $r3 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(paramName);

        param = (berkeley.com.sleepycat.je.config.ConfigParam) $r4;

        $z1 = <berkeley.com.sleepycat.je.EnvironmentMutableConfig: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if param != null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $z2 = virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isMutable()>();

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isForReplication()>();

        if $z3 != 0 goto label5;

        $r6 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        paramVal = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(paramName);

        useParamVal = virtualinvoke handleConfigProps.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(paramName);

        if paramVal == null goto label3;

        $z4 = virtualinvoke paramVal.<java.lang.String: boolean equals(java.lang.Object)>(useParamVal);

        if $z4 != 0 goto label5;

        goto label4;

     label3:
        if useParamVal == null goto label5;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramName);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is set to ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(useParamVal);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the config parameter which is incompatible with the value of ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramVal);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the underlying environment");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r7;

     label5:
        goto label1;

     label6:
        return;
    }

    void fillInEnvironmentGeneratedProps(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r0;
        long $l0, $l1;
        berkeley.com.sleepycat.je.evictor.OffHeapCache $r1;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        $l0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.MemoryBudget: long getMaxMemory()>();

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: long cacheSize> = $l0;

        $r1 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.evictor.OffHeapCache getOffHeapCache()>();

        $l1 = virtualinvoke $r1.<berkeley.com.sleepycat.je.evictor.OffHeapCache: long getMaxMemory()>();

        this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: long offHeapCacheSize> = $l1;

        return;
    }

    public java.lang.String getConfigParam(java.lang.String) throws java.lang.IllegalArgumentException
    {
        berkeley.com.sleepycat.je.EnvironmentMutableConfig this;
        java.lang.String paramName, $r1;
        java.util.Properties $r0;

        this := @this: berkeley.com.sleepycat.je.EnvironmentMutableConfig;

        paramName := @parameter0: java.lang.String;

        $r0 = this.<berkeley.com.sleepycat.je.EnvironmentMutableConfig: java.util.Properties props>;

        $r1 = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String getConfigParam(java.util.Properties,java.lang.String)>($r0, paramName);

        return $r1;
    }


