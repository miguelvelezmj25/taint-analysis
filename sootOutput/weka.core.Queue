    public void <init>()
    {
        weka.core.Queue this;

        this := @this: weka.core.Queue;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head> = null;

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Tail> = null;

        this.<weka.core.Queue: int m_Size> = 0;

        return;
    }

    public int size()
    {
        weka.core.Queue this;
        int $i0;

        this := @this: weka.core.Queue;

        $i0 = this.<weka.core.Queue: int m_Size>;

        return $i0;
    }

    public synchronized java.lang.Object push(java.lang.Object)
    {
        weka.core.Queue this;
        java.lang.Object item;
        weka.core.Queue$QueueNode newNode, $r0, $r1, $r3, $r4;
        int $i0, $i1;

        this := @this: weka.core.Queue;

        item := @parameter0: java.lang.Object;

        $r0 = new weka.core.Queue$QueueNode;

        specialinvoke $r0.<weka.core.Queue$QueueNode: void <init>(weka.core.Queue,java.lang.Object)>(this, item);

        newNode = $r0;

        $r1 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label1;

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Tail> = newNode;

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head> = newNode;

        goto label2;

     label1:
        $r3 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Tail>;

        $r4 = virtualinvoke $r3.<weka.core.Queue$QueueNode: weka.core.Queue$QueueNode next(weka.core.Queue$QueueNode)>(newNode);

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Tail> = $r4;

     label2:
        $i0 = this.<weka.core.Queue: int m_Size>;

        $i1 = $i0 + 1;

        this.<weka.core.Queue: int m_Size> = $i1;

        return item;
    }

    public synchronized java.lang.Object pop() throws java.lang.RuntimeException
    {
        weka.core.Queue this;
        java.lang.Object retval;
        weka.core.Queue$QueueNode $r0, $r2, $r4, $r5, $r6;
        java.lang.RuntimeException $r1;
        int $i0, $i1;

        this := @this: weka.core.Queue;

        $r0 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Queue is empty");

        throw $r1;

     label1:
        $r2 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head>;

        retval = virtualinvoke $r2.<weka.core.Queue$QueueNode: java.lang.Object contents()>();

        $i0 = this.<weka.core.Queue: int m_Size>;

        $i1 = $i0 - 1;

        this.<weka.core.Queue: int m_Size> = $i1;

        $r4 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head>;

        $r5 = virtualinvoke $r4.<weka.core.Queue$QueueNode: weka.core.Queue$QueueNode next()>();

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head> = $r5;

        $r6 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r6 != null goto label2;

        this.<weka.core.Queue: weka.core.Queue$QueueNode m_Tail> = null;

     label2:
        return retval;
    }

    public boolean empty()
    {
        weka.core.Queue this;
        weka.core.Queue$QueueNode $r0;
        boolean $z0;

        this := @this: weka.core.Queue;

        $r0 = this.<weka.core.Queue: weka.core.Queue$QueueNode m_Head>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }


