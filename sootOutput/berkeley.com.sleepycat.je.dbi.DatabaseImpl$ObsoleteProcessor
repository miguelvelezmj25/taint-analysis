    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/dbi/DatabaseImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.dbi.DatabaseImpl, berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker)
    {
        berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl db;
        berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker localTracker;

        this := @this: berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor;

        db := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        localTracker := @parameter1: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: berkeley.com.sleepycat.je.dbi.DatabaseImpl db> = db;

        this.<berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker localTracker> = localTracker;

        return;
    }

    public void processDirtyDeletedLN(long, berkeley.com.sleepycat.je.tree.LN, byte[])
    {
        berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor this;
        long childLsn;
        berkeley.com.sleepycat.je.tree.LN ln;
        byte[] lnKey;
        boolean $z0;
        java.lang.AssertionError $r0;
        berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker $r1;
        berkeley.com.sleepycat.je.log.LogEntryType $r2;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r3;

        this := @this: berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor;

        childLsn := @parameter0: long;

        ln := @parameter1: berkeley.com.sleepycat.je.tree.LN;

        lnKey := @parameter2: byte[];

        $z0 = <berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if ln != null goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker localTracker>;

        $r2 = virtualinvoke ln.<berkeley.com.sleepycat.je.tree.LN: berkeley.com.sleepycat.je.log.LogEntryType getGenericLogType()>();

        $r3 = this.<berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: berkeley.com.sleepycat.je.dbi.DatabaseImpl db>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: void countObsoleteNodeInexact(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(childLsn, $r2, 0, $r3);

        return;
    }

    public void noteMemoryExceeded()
    {
        berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor this;

        this := @this: berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor;

        return;
    }

    public void processLSN(long, berkeley.com.sleepycat.je.log.LogEntryType, berkeley.com.sleepycat.je.tree.Node, byte[], int)
    {
        berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor this;
        long childLsn;
        berkeley.com.sleepycat.je.log.LogEntryType childType;
        berkeley.com.sleepycat.je.tree.Node node;
        byte[] lnKey;
        int lastLoggedSize, size#7;
        boolean $z0, $z1;
        byte $b0;
        java.lang.AssertionError $r0;
        berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker $r1;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r2;

        this := @this: berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor;

        childLsn := @parameter0: long;

        childType := @parameter1: berkeley.com.sleepycat.je.log.LogEntryType;

        node := @parameter2: berkeley.com.sleepycat.je.tree.Node;

        lnKey := @parameter3: byte[];

        lastLoggedSize := @parameter4: int;

        $z0 = <berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b0 = childLsn cmp -1L;

        if $b0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        size#7 = 0;

        if lnKey == null goto label2;

        $z1 = node instanceof berkeley.com.sleepycat.je.tree.LN;

        if $z1 == 0 goto label2;

        size#7 = lastLoggedSize;

     label2:
        $r1 = this.<berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker localTracker>;

        $r2 = this.<berkeley.com.sleepycat.je.dbi.DatabaseImpl$ObsoleteProcessor: berkeley.com.sleepycat.je.dbi.DatabaseImpl db>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: void countObsoleteNodeInexact(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(childLsn, childType, size#7, $r2);

        return;
    }


