digraph <init> {
"this := @this: weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$8 {148497567}" -> "l1 := @parameter0: java.lang.String {1387678780}";
"l1 := @parameter0: java.lang.String {1387678780}" -> "l2 := @parameter1: int {998866490}";
"l2 := @parameter1: int {998866490}" -> "name := @parameter2: java.lang.String {1006848985}";
"name := @parameter2: java.lang.String {1006848985}" -> "specialinvoke this.<weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction: void <init>(java.lang.String,int,java.lang.String,weka.classifiers.pmml.consumer.GeneralRegression$1)>(l1, l2, name, null) {485138218}";
"specialinvoke this.<weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction: void <init>(java.lang.String,int,java.lang.String,weka.classifiers.pmml.consumer.GeneralRegression$1)>(l1, l2, name, null) {485138218}" -> "return {975846999}";
}

digraph eval {
"this := @this: weka.classifiers.pmml.consumer.GeneralRegression$LinkFunction$8 {312315893}" -> "value := @parameter0: double {152196596}";
"value := @parameter0: double {152196596}" -> "offset := @parameter1: double {1396484486}";
"offset := @parameter1: double {1396484486}" -> "trials := @parameter2: double {329095531}";
"trials := @parameter2: double {329095531}" -> "distParam := @parameter3: double {194704165}";
"distParam := @parameter3: double {194704165}" -> "linkParam := @parameter4: double {576552471}";
"linkParam := @parameter4: double {576552471}" -> "$d0 = value + offset {76066787}";
"$d0 = value + offset {76066787}" -> "$d1 = neg $d0 {914759421}";
"$d1 = neg $d0 {914759421}" -> "$d2 = staticinvoke <java.lang.Math: double exp(double)>($d1) {1734639929}";
"$d2 = staticinvoke <java.lang.Math: double exp(double)>($d1) {1734639929}" -> "$d3 = $d2 - 1.0 {897223743}";
"$d3 = $d2 - 1.0 {897223743}" -> "$d4 = distParam * $d3 {864886171}";
"$d4 = distParam * $d3 {864886171}" -> "$d5 = 1.0 / $d4 {1889746842}";
"$d5 = 1.0 / $d4 {1889746842}" -> "$d6 = $d5 * trials {51403576}";
"$d6 = $d5 * trials {51403576}" -> "return $d6 {1479208708}";
}


