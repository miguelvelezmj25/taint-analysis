    public java.lang.String toString()
    {
        kanzi.function.TextCodec$DictEntry this;
        java.lang.StringBuilder sb, $r0;
        short $s0, $s1;
        int i#6, $i2, $i3;
        byte[] $r1;
        byte $b4;
        char $c5;
        java.lang.String $r3;

        this := @this: kanzi.function.TextCodec$DictEntry;

        $r0 = new java.lang.StringBuilder;

        $s0 = this.<kanzi.function.TextCodec$DictEntry: short length>;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($s0);

        sb = $r0;

        i#6 = 0;

     label1:
        $s1 = this.<kanzi.function.TextCodec$DictEntry: short length>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if i#6 >= $s1 goto label2;

        $r1 = this.<kanzi.function.TextCodec$DictEntry: byte[] buf>;

        $i2 = this.<kanzi.function.TextCodec$DictEntry: int pos>;

        $i3 = $i2 + i#6;

        $b4 = $r1[$i3];

        $c5 = (char) $b4;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i#6 = i#6 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    void <init>(byte[], int, int, int, int)
    {
        kanzi.function.TextCodec$DictEntry this;
        byte[] buf;
        int pos, hash, idx, length;
        short $s0;

        this := @this: kanzi.function.TextCodec$DictEntry;

        buf := @parameter0: byte[];

        pos := @parameter1: int;

        hash := @parameter2: int;

        idx := @parameter3: int;

        length := @parameter4: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<kanzi.function.TextCodec$DictEntry: byte[] buf> = buf;

        this.<kanzi.function.TextCodec$DictEntry: int pos> = pos;

        this.<kanzi.function.TextCodec$DictEntry: int hash> = hash;

        this.<kanzi.function.TextCodec$DictEntry: int idx> = idx;

        $s0 = (short) length;

        this.<kanzi.function.TextCodec$DictEntry: short length> = $s0;

        return;
    }


