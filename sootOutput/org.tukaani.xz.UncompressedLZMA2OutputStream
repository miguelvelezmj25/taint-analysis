    void <init>(org.tukaani.xz.FinishableOutputStream)
    {
        org.tukaani.xz.UncompressedLZMA2OutputStream this;
        org.tukaani.xz.FinishableOutputStream out;
        byte[] $r0, $r1;
        java.lang.NullPointerException $r2;
        java.io.DataOutputStream $r3;

        this := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        out := @parameter0: org.tukaani.xz.FinishableOutputStream;

        specialinvoke this.<org.tukaani.xz.FinishableOutputStream: void <init>()>();

        $r0 = newarray (byte)[65536];

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf> = $r0;

        $r1 = newarray (byte)[1];

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] tempBuf> = $r1;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos> = 0;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean dictResetNeeded> = 1;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished> = 0;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = null;

        if out != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out> = out;

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(out);

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData> = $r3;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.tukaani.xz.UncompressedLZMA2OutputStream this;
        byte[] buf, $r4, $r5, $r7;
        int off, copySize, len#1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.io.IOException e, $r1, $r2, $r8;
        java.lang.IndexOutOfBoundsException $r0;
        boolean $z0;
        org.tukaani.xz.XZIOException $r3;

        this := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        buf := @parameter0: byte[];

        off := @parameter1: int;

        len#1 := @parameter2: int;

        if off < 0 goto label1;

        if len#1 < 0 goto label1;

        $i0 = off + len#1;

        if $i0 < 0 goto label1;

        $i1 = off + len#1;

        $i2 = lengthof buf;

        if $i1 <= $i2 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        $r1 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        if $r1 == null goto label3;

        $r2 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        throw $r2;

     label3:
        $z0 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished>;

        if $z0 == 0 goto label4;

        $r3 = new org.tukaani.xz.XZIOException;

        specialinvoke $r3.<org.tukaani.xz.XZIOException: void <init>(java.lang.String)>("Stream finished or closed");

        throw $r3;

     label4:
        if len#1 <= 0 goto label6;

        $r4 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i3 = lengthof $r4;

        $i4 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $i5 = $i3 - $i4;

        copySize = staticinvoke <java.lang.Math: int min(int,int)>($i5, len#1);

        $r5 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i6 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, $r5, $i6, copySize);

        len#1 = len#1 - copySize;

        $i7 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $i8 = $i7 + copySize;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos> = $i8;

        $i9 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $r7 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i10 = lengthof $r7;

        if $i9 != $i10 goto label5;

        specialinvoke this.<org.tukaani.xz.UncompressedLZMA2OutputStream: void writeChunk()>();

     label5:
        goto label4;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        e = $r8;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = e;

        throw e;

     label8:
        return;

        catch java.io.IOException from label4 to label6 with label7;
    }

    private void writeChunk() throws java.io.IOException
    {
        org.tukaani.xz.UncompressedLZMA2OutputStream this;
        java.io.DataOutputStream $r0, $r1, $r2;
        boolean $z0;
        byte $b0;
        int $i1, $i2, $i3;
        byte[] $r3;

        this := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        $r0 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData>;

        $z0 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean dictResetNeeded>;

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        virtualinvoke $r0.<java.io.DataOutputStream: void writeByte(int)>($b0);

        $r1 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData>;

        $i1 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $i2 = $i1 - 1;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeShort(int)>($i2);

        $r2 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData>;

        $r3 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i3 = this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[],int,int)>($r3, 0, $i3);

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos> = 0;

        this.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean dictResetNeeded> = 0;

        return;
    }


