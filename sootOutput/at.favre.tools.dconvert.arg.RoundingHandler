    public void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)
    {
        at.favre.tools.dconvert.arg.RoundingHandler this;
        at.favre.tools.dconvert.arg.RoundingHandler$Strategy strategy;

        this := @this: at.favre.tools.dconvert.arg.RoundingHandler;

        strategy := @parameter0: at.favre.tools.dconvert.arg.RoundingHandler$Strategy;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<at.favre.tools.dconvert.arg.RoundingHandler: at.favre.tools.dconvert.arg.RoundingHandler$Strategy strategy> = strategy;

        return;
    }

    public long round(double)
    {
        at.favre.tools.dconvert.arg.RoundingHandler this;
        double value, $d0, $d1;
        int[] $r0;
        at.favre.tools.dconvert.arg.RoundingHandler$Strategy $r1;
        int $i0, $i1;
        long $l2, $l3, $l4, $l5, $l6, $l7;

        this := @this: at.favre.tools.dconvert.arg.RoundingHandler;

        value := @parameter0: double;

        $r0 = <at.favre.tools.dconvert.arg.RoundingHandler$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$RoundingHandler$Strategy>;

        $r1 = this.<at.favre.tools.dconvert.arg.RoundingHandler: at.favre.tools.dconvert.arg.RoundingHandler$Strategy strategy>;

        $i0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler$Strategy: int ordinal()>();

        $i1 = $r0[$i0];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label3;
        };

     label1:
        $d0 = staticinvoke <java.lang.Math: double ceil(double)>(value);

        $l2 = (long) $d0;

        $l3 = staticinvoke <java.lang.Math: long max(long,long)>(1L, $l2);

        return $l3;

     label2:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>(value);

        $l4 = (long) $d1;

        $l5 = staticinvoke <java.lang.Math: long max(long,long)>(1L, $l4);

        return $l5;

     label3:
        $l6 = staticinvoke <java.lang.Math: long round(double)>(value);

        $l7 = staticinvoke <java.lang.Math: long max(long,long)>(1L, $l6);

        return $l7;
    }


