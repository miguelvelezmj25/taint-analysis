    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/dbi/SortedLSNTreeWalker";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(com.sleepycat.je.tree.IN, int)
    {
        com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry this;
        com.sleepycat.je.tree.IN in;
        int index;
        boolean $z0, $z1;
        java.lang.AssertionError $r0, $r2;
        com.sleepycat.je.dbi.DatabaseImpl $r1;

        this := @this: com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry;

        in := @parameter0: com.sleepycat.je.tree.IN;

        index := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $z0 = <com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(in);

        if in != null goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $z1 = <com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $r1 = virtualinvoke in.<com.sleepycat.je.tree.IN: com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        this.<com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry: com.sleepycat.je.tree.IN in> = in;

        this.<com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry: int index> = index;

        return;
    }

    long getMemorySize()
    {
        com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry this;
        int $i0, $i1, $i2;
        long $l3;

        this := @this: com.sleepycat.je.dbi.SortedLSNTreeWalker$INEntry;

        $i1 = <com.sleepycat.je.dbi.MemoryBudget: int HASHMAP_ENTRY_OVERHEAD>;

        $i0 = <com.sleepycat.je.dbi.MemoryBudget: int INENTRY_OVERHEAD>;

        $i2 = $i1 + $i0;

        $l3 = (long) $i2;

        return $l3;
    }


