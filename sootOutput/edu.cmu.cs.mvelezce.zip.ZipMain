    public static void main(java.lang.String[])
    {
        edu.cmu.cs.mvelezce.zip.ZipMain impl, $r19;
        java.lang.Throwable e, $r20;
        java.lang.String[] args#1, args#65;
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r26, $r28;
        java.lang.Boolean $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.io.PrintStream $r18;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r27;
        java.lang.Class $r23;

        args#1 := @parameter0: java.lang.String[];

     label1:
        $r0 = args#1[0];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATURECRC(boolean)>($z0);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATURECRC> = $z1;

        $r2 = args#1[1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREArchiveCheck(boolean)>($z2);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREArchiveCheck> = $z3;

        $r4 = args#1[2];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r4);

        $z4 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREAdlerThreeTwoChecksum(boolean)>($z4);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREAdlerThreeTwoChecksum> = $z5;

        $r6 = args#1[4];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z6 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeGZIPCRC(boolean)>($z6);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeGZIPCRC> = $z7;

        $r8 = args#1[5];

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        $z8 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressCRC(boolean)>($z8);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressCRC> = $z9;

        $r10 = args#1[5];

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        $z10 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeExtractCRC(boolean)>($z10);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeExtractCRC> = $z11;

        $r12 = args#1[6];

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        $z12 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressGZIP(boolean)>($z12);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressGZIP> = $z13;

        $r14 = args#1[7];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        $z14 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressAdlerThreeTwoChecksum(boolean)>($z14);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressAdlerThreeTwoChecksum> = $z15;

        $r16 = args#1[8];

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r16);

        $z16 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFEATUREDerivativeCompressGZIPCRC(boolean)>($z16);

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressGZIPCRC> = $z17;

        $z18 = staticinvoke <edu.cmu.cs.mvelezce.zip.verificationClasses.FeatureSwitches: boolean valid_product()>();

        if $z18 != 0 goto label2;

        $z19 = 1;

        goto label3;

     label2:
        $z19 = 0;

     label3:
        $z20 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        if $z20 == 0 goto label4;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Illegal config");

     label4:
        $r19 = new edu.cmu.cs.mvelezce.zip.ZipMain;

        specialinvoke $r19.<edu.cmu.cs.mvelezce.zip.ZipMain: void <init>()>();

        impl = $r19;

        args#65 = newarray (java.lang.String)[1];

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean verbose> = 1;

        virtualinvoke impl.<edu.cmu.cs.mvelezce.zip.ZipMain: void start(int,int)>(1, 3);

        staticinvoke <edu.cmu.cs.mvelezce.zip.ZipMain: void println(java.lang.String)>("no Exception");

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

        e = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception: ");

        $r23 = virtualinvoke e.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke e.<java.lang.Throwable: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.cmu.cs.mvelezce.zip.ZipMain: void println(java.lang.String)>($r28);

        virtualinvoke e.<java.lang.Throwable: void printStackTrace()>();

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static void println(java.lang.String)
    {
        java.lang.String s;
        boolean $z0, $z1;
        java.io.PrintStream $r0;

        s := @parameter0: java.lang.String;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean verbose>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(s);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREBase> = 1;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREZipMeTest> = 1;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATURECompress> = 1;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREExtract> = 1;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREGZIP> = 1;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean executedUnimplementedAction> = 0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <edu.cmu.cs.mvelezce.zip.ZipMain: java.util.List actionHistory> = $r0;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean verbose> = 0;

        <edu.cmu.cs.mvelezce.zip.ZipMain: boolean isAbortedRun> = 0;

        return;
    }

    public void <init>()
    {
        edu.cmu.cs.mvelezce.zip.ZipMain this;

        this := @this: edu.cmu.cs.mvelezce.zip.ZipMain;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void start(int, int) throws java.lang.Throwable
    {
        edu.cmu.cs.mvelezce.zip.ZipMain this;
        int specification, variation;
        java.lang.Throwable e, l4, $r6, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        this := @this: edu.cmu.cs.mvelezce.zip.ZipMain;

        specification := @parameter0: int;

        variation := @parameter1: int;

     label1:
        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean verbose>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Started with Specification ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(specification);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Variation: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(variation);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.cmu.cs.mvelezce.zip.ZipMain: void print(java.lang.String)>($r5);

     label2:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.ZipMain: void test(int,int)>(specification, variation);

     label3:
        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        e = $r6;

        throw e;

     label6:
        $r7 := @caughtexception;

        l4 = $r7;

     label7:
        throw l4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public static void print(java.lang.String)
    {
        java.lang.String s;
        boolean $z0, $z1;
        java.io.PrintStream $r0;

        s := @parameter0: java.lang.String;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean verbose>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(s);

     label1:
        return;
    }

    public void test(int, int) throws java.lang.Throwable
    {
        edu.cmu.cs.mvelezce.zip.ZipMain this;
        int specification, variation;
        java.lang.String[] args;
        java.lang.Throwable e, $r1;
        java.io.File $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.ZipMain;

        specification := @parameter0: int;

        variation := @parameter1: int;

        args = newarray (java.lang.String)[1];

        args[0] = "irrelevant";

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/zipme/uiq2testfile");

        <edu.cmu.cs.mvelezce.zip.ZipTest: java.io.File fileToZip> = $r0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: void main(java.lang.String[])>(args);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        virtualinvoke e.<java.lang.Throwable: void printStackTrace()>();

        throw e;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }


