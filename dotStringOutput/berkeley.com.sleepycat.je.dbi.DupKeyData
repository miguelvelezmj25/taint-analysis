digraph <clinit> {
"$r0 = class \"berkeley/com/sleepycat/je/dbi/DupKeyData\" {1634690313}" -> "$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {369462}";
"$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {369462}" -> "if $z0 != 0 goto $z1 = 0 {1486787179}";
"if $z0 != 0 goto $z1 = 0 {1486787179}" -> "$z1 = 1 {1789529847}";
"if $z0 != 0 goto $z1 = 0 {1486787179}" -> "$z1 = 0 {1573288109}";
"$z1 = 1 {1789529847}" -> "goto [?= <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1] {1886878086}";
"goto [?= <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1] {1886878086}" -> "<berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {1911006388}";
"$z1 = 0 {1573288109}" -> "<berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {1911006388}";
"<berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {1911006388}" -> "return {1266733513}";
}

digraph replaceData {
"twoPartKey := @parameter0: byte[] {1307936662}" -> "newData := @parameter1: byte[] {1223966926}";
"newData := @parameter1: byte[] {1223966926}" -> "$i0 = lengthof twoPartKey {532107407}";
"$i0 = lengthof twoPartKey {532107407}" -> "$i1 = $i0 - 1 {387814694}";
"$i1 = $i0 - 1 {387814694}" -> "origKeySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {1291894321}";
"origKeySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {1291894321}" -> "if origKeySize != -1 goto $i3 = origKeySize {580958287}";
"if origKeySize != -1 goto $i3 = origKeySize {580958287}" -> "$i2 = lengthof twoPartKey {556613499}";
"if origKeySize != -1 goto $i3 = origKeySize {580958287}" -> "$i3 = origKeySize {2036921541}";
"$i2 = lengthof twoPartKey {556613499}" -> "$i3 = $i2 - 1 {269917154}";
"$i3 = $i2 - 1 {269917154}" -> "goto [?= keySize = $i3] {829870967}";
"goto [?= keySize = $i3] {829870967}" -> "keySize = $i3 {1938066300}";
"$i3 = origKeySize {2036921541}" -> "keySize = $i3 {1938066300}";
"keySize = $i3 {1938066300}" -> "$i4 = lengthof newData {1349996799}";
"$i4 = lengthof newData {1349996799}" -> "$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(twoPartKey, 0, keySize, newData, 0, $i4) {245786826}";
"$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(twoPartKey, 0, keySize, newData, 0, $i4) {245786826}" -> "return $r0 {1912142679}";
}

digraph combine {
"key := @parameter0: byte[] {1330454123}" -> "keyOff := @parameter1: int {880992847}";
"keyOff := @parameter1: int {880992847}" -> "keySize := @parameter2: int {89822449}";
"keySize := @parameter2: int {89822449}" -> "data := @parameter3: byte[] {1901481459}";
"data := @parameter3: byte[] {1901481459}" -> "dataOff := @parameter4: int {432301157}";
"dataOff := @parameter4: int {432301157}" -> "dataSize := @parameter5: int {575149098}";
"dataSize := @parameter5: int {575149098}" -> "keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(keySize) {1796878571}";
"keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(keySize) {1796878571}" -> "$i0 = keySizeLen + keySize {1377619144}";
"$i0 = keySizeLen + keySize {1377619144}" -> "$i1 = $i0 + dataSize {1074037354}";
"$i1 = $i0 + dataSize {1074037354}" -> "buf = newarray (byte)[$i1] {1472370529}";
"buf = newarray (byte)[$i1] {1472370529}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, keyOff, buf, 0, keySize) {1537725181}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, keyOff, buf, 0, keySize) {1537725181}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, dataOff, buf, keySize, dataSize) {2003465084}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, dataOff, buf, keySize, dataSize) {2003465084}" -> "$i2 = keySize + dataSize {1116031650}";
"$i2 = keySize + dataSize {1116031650}" -> "nextOff = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int writeReverseInt(byte[],int,int)>(buf, $i2, keySize) {289338062}";
"nextOff = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int writeReverseInt(byte[],int,int)>(buf, $i2, keySize) {289338062}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {552153864}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {552153864}" -> "if $z0 != 0 goto return buf {313271470}";
"if $z0 != 0 goto return buf {313271470}" -> "$i3 = lengthof buf {1460566980}";
"if $z0 != 0 goto return buf {313271470}" -> "return buf {1489214045}";
"$i3 = lengthof buf {1460566980}" -> "if nextOff == $i3 goto return buf {620018911}";
"if nextOff == $i3 goto return buf {620018911}" -> "$r0 = new java.lang.AssertionError {1053754980}";
"if nextOff == $i3 goto return buf {620018911}" -> "return buf {1489214045}";
"$r0 = new java.lang.AssertionError {1053754980}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {391376701}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {391376701}" -> "throw $r0 {373341004}";
}

digraph getKeyLength {
"buf := @parameter0: byte[] {428710101}" -> "off := @parameter1: int {870773350}";
"off := @parameter1: int {870773350}" -> "len := @parameter2: int {1368255203}";
"len := @parameter2: int {1368255203}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {667760835}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {667760835}" -> "if $z0 != 0 goto $i2 = off + len {535442991}";
"if $z0 != 0 goto $i2 = off + len {535442991}" -> "$i0 = lengthof buf {1722672873}";
"if $z0 != 0 goto $i2 = off + len {535442991}" -> "$i2 = off + len {421685227}";
"$i0 = lengthof buf {1722672873}" -> "$i1 = off + len {1347895849}";
"$i1 = off + len {1347895849}" -> "if $i0 >= $i1 goto $i2 = off + len {1479504201}";
"if $i0 >= $i1 goto $i2 = off + len {1479504201}" -> "$r0 = new java.lang.AssertionError {250616590}";
"if $i0 >= $i1 goto $i2 = off + len {1479504201}" -> "$i2 = off + len {421685227}";
"$r0 = new java.lang.AssertionError {250616590}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {571828954}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {571828954}" -> "throw $r0 {18084584}";
"$i2 = off + len {421685227}" -> "$i3 = $i2 - 1 {547276495}";
"$i3 = $i2 - 1 {547276495}" -> "keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {278194841}";
"keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {278194841}" -> "$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1189805818}";
"$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1189805818}" -> "if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1873103253}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1873103253}" -> "if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1397112541}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1873103253}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {996992696}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1397112541}" -> "$r1 = new java.lang.AssertionError {384449729}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1397112541}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {996992696}";
"$r1 = new java.lang.AssertionError {384449729}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {519418908}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {519418908}" -> "throw $r1 {2082984393}";
"$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {996992696}" -> "if $z2 != 0 goto return keyLen {224394260}";
"if $z2 != 0 goto return keyLen {224394260}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {2085804912}";
"if $z2 != 0 goto return keyLen {224394260}" -> "return keyLen {1209295485}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {2085804912}" -> "if keyLen <= len goto return keyLen {599117014}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {2085804912}" -> "$r2 = new java.lang.AssertionError {1238764171}";
"if keyLen <= len goto return keyLen {599117014}" -> "$r2 = new java.lang.AssertionError {1238764171}";
"if keyLen <= len goto return keyLen {599117014}" -> "return keyLen {1209295485}";
"$r2 = new java.lang.AssertionError {1238764171}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1413224844}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1413224844}" -> "throw $r2 {1508031649}";
}

digraph getKey {
"buf := @parameter0: byte[] {483369006}" -> "off := @parameter1: int {1563932433}";
"off := @parameter1: int {1563932433}" -> "len := @parameter2: int {1862245343}";
"len := @parameter2: int {1862245343}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1900364968}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1900364968}" -> "if $z0 != 0 goto $i2 = off + len {2058907783}";
"if $z0 != 0 goto $i2 = off + len {2058907783}" -> "$i0 = lengthof buf {777179424}";
"if $z0 != 0 goto $i2 = off + len {2058907783}" -> "$i2 = off + len {166228340}";
"$i0 = lengthof buf {777179424}" -> "$i1 = off + len {2106394803}";
"$i1 = off + len {2106394803}" -> "if $i0 >= $i1 goto $i2 = off + len {1461338316}";
"if $i0 >= $i1 goto $i2 = off + len {1461338316}" -> "$r0 = new java.lang.AssertionError {1170320665}";
"if $i0 >= $i1 goto $i2 = off + len {1461338316}" -> "$i2 = off + len {166228340}";
"$r0 = new java.lang.AssertionError {1170320665}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1655629881}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1655629881}" -> "throw $r0 {1740101760}";
"$i2 = off + len {166228340}" -> "$i3 = $i2 - 1 {325123866}";
"$i3 = $i2 - 1 {325123866}" -> "keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {71729855}";
"keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {71729855}" -> "$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {273298690}";
"$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {273298690}" -> "if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1805777255}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1805777255}" -> "if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1717849064}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1805777255}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {987605459}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1717849064}" -> "$r1 = new java.lang.AssertionError {40565890}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1717849064}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {987605459}";
"$r1 = new java.lang.AssertionError {40565890}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {729408449}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {729408449}" -> "throw $r1 {1871103565}";
"$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {987605459}" -> "if $z2 != 0 goto key = newarray (byte)[keyLen] {674321217}";
"if $z2 != 0 goto key = newarray (byte)[keyLen] {674321217}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {366987528}";
"if $z2 != 0 goto key = newarray (byte)[keyLen] {674321217}" -> "key = newarray (byte)[keyLen] {1030447152}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {366987528}" -> "if keyLen <= len goto key = newarray (byte)[keyLen] {975822549}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {366987528}" -> "$r2 = new java.lang.AssertionError {1364576017}";
"if keyLen <= len goto key = newarray (byte)[keyLen] {975822549}" -> "$r2 = new java.lang.AssertionError {1364576017}";
"if keyLen <= len goto key = newarray (byte)[keyLen] {975822549}" -> "key = newarray (byte)[keyLen] {1030447152}";
"$r2 = new java.lang.AssertionError {1364576017}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1014181697}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1014181697}" -> "throw $r2 {1222148460}";
"key = newarray (byte)[keyLen] {1030447152}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, key, 0, keyLen) {1319839224}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, key, 0, keyLen) {1319839224}" -> "return key {124935447}";
}

digraph split {
"twoPartKey := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry {990669025}" -> "paramKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {1766182654}";
"paramKey := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {1766182654}" -> "paramData := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {1626841391}";
"paramData := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {1626841391}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1826754219}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1826754219}" -> "if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1895241496}";
"if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1895241496}" -> "$i0 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1055447948}";
"if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1895241496}" -> "$r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {381667676}";
"$i0 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1055447948}" -> "if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1115884972}";
"if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1115884972}" -> "$r0 = new java.lang.AssertionError {168074547}";
"if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1115884972}" -> "$r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {381667676}";
"$r0 = new java.lang.AssertionError {168074547}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {609419986}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {609419986}" -> "throw $r0 {168881774}";
"$r1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {381667676}" -> "$i1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {656995443}";
"$i1 = virtualinvoke twoPartKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {656995443}" -> "staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: void split(byte[],int,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r1, $i1, paramKey, paramData) {3416180}";
"staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: void split(byte[],int,berkeley.com.sleepycat.je.DatabaseEntry,berkeley.com.sleepycat.je.DatabaseEntry)>($r1, $i1, paramKey, paramData) {3416180}" -> "return {40947710}";
}

digraph split {
"twoPartKey := @parameter0: byte[] {1377869721}" -> "twoPartKeySize := @parameter1: int {1569460760}";
"twoPartKeySize := @parameter1: int {1569460760}" -> "paramKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {963552566}";
"paramKey := @parameter2: berkeley.com.sleepycat.je.DatabaseEntry {963552566}" -> "paramData := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry {252236883}";
"paramData := @parameter3: berkeley.com.sleepycat.je.DatabaseEntry {252236883}" -> "$i0 = twoPartKeySize - 1 {2112517089}";
"$i0 = twoPartKeySize - 1 {2112517089}" -> "keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i0) {1779858915}";
"keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i0) {1779858915}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1145925179}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1145925179}" -> "if $z0 != 0 goto (branch) {2073149979}";
"if $z0 != 0 goto (branch) {2073149979}" -> "if keySize != -1 goto (branch) {1369259537}";
"if $z0 != 0 goto (branch) {2073149979}" -> "if paramKey == null goto (branch) {415074622}";
"if keySize != -1 goto (branch) {1369259537}" -> "$r0 = new java.lang.AssertionError {619294499}";
"if keySize != -1 goto (branch) {1369259537}" -> "if paramKey == null goto (branch) {415074622}";
"$r0 = new java.lang.AssertionError {619294499}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2035762828}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2035762828}" -> "throw $r0 {1099072001}";
"if paramKey == null goto (branch) {415074622}" -> "keyBuf = newarray (byte)[keySize] {255413408}";
"if paramKey == null goto (branch) {415074622}" -> "if paramData == null goto return {162513509}";
"keyBuf = newarray (byte)[keySize] {255413408}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, 0, keyBuf, 0, keySize) {1254889790}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, 0, keyBuf, 0, keySize) {1254889790}" -> "if keySize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1682384351}";
"if keySize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1682384351}" -> "$z1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {467279868}";
"if keySize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1682384351}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {101961804}";
"$z1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {467279868}" -> "if $z1 == 0 goto virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {235551756}";
"if $z1 == 0 goto virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {235551756}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {101961804}";
"if $z1 == 0 goto virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {235551756}" -> "virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {1487141116}";
"staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {101961804}" -> "goto [?= (branch)] {1495688926}";
"goto [?= (branch)] {1495688926}" -> "if paramData == null goto return {162513509}";
"virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {1487141116}" -> "if paramData == null goto return {162513509}";
"if paramData == null goto return {162513509}" -> "$i1 = twoPartKeySize - 1 {1715747327}";
"if paramData == null goto return {162513509}" -> "return {776184961}";
"$i1 = twoPartKeySize - 1 {1715747327}" -> "keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey, $i1) {1356496795}";
"keySizeLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey, $i1) {1356496795}" -> "$i2 = twoPartKeySize - keySize {741459761}";
"$i2 = twoPartKeySize - keySize {741459761}" -> "dataSize = $i2 - keySizeLen {39429623}";
"dataSize = $i2 - keySizeLen {39429623}" -> "dataBuf = newarray (byte)[dataSize] {1024899361}";
"dataBuf = newarray (byte)[dataSize] {1024899361}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, keySize, dataBuf, 0, dataSize) {1874589817}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, keySize, dataBuf, 0, dataSize) {1874589817}" -> "if dataSize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1552357486}";
"if dataSize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1552357486}" -> "$z2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {674119087}";
"if dataSize == 0 goto staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1552357486}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {642136518}";
"$z2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {674119087}" -> "if $z2 == 0 goto virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {814151577}";
"if $z2 == 0 goto virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {814151577}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {642136518}";
"if $z2 == 0 goto virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {814151577}" -> "virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1876766523}";
"staticinvoke <berkeley.com.sleepycat.je.tree.LN: void setEntry(berkeley.com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {642136518}" -> "goto [?= return] {570108072}";
"goto [?= return] {570108072}" -> "return {776184961}";
"virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1876766523}" -> "return {776184961}";
}

digraph removeData {
"twoPartKey := @parameter0: byte[] {914815740}" -> "$i0 = lengthof twoPartKey {831929395}";
"$i0 = lengthof twoPartKey {831929395}" -> "$i1 = $i0 - 1 {266558326}";
"$i1 = $i0 - 1 {266558326}" -> "keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {1958792630}";
"keySize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {1958792630}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1642922163}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1642922163}" -> "if $z0 != 0 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1251615218}";
"if $z0 != 0 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1251615218}" -> "if keySize != -1 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1850944599}";
"if $z0 != 0 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1251615218}" -> "$r1 = new berkeley.com.sleepycat.je.DatabaseEntry {330668410}";
"if keySize != -1 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1850944599}" -> "$r0 = new java.lang.AssertionError {1977419230}";
"if keySize != -1 goto $r1 = new berkeley.com.sleepycat.je.DatabaseEntry {1850944599}" -> "$r1 = new berkeley.com.sleepycat.je.DatabaseEntry {330668410}";
"$r0 = new java.lang.AssertionError {1977419230}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2031953002}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2031953002}" -> "throw $r0 {249269898}";
"$r1 = new berkeley.com.sleepycat.je.DatabaseEntry {330668410}" -> "$r2 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] makePrefixKey(byte[],int,int)>(twoPartKey, 0, keySize) {614830852}";
"$r2 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] makePrefixKey(byte[],int,int)>(twoPartKey, 0, keySize) {614830852}" -> "specialinvoke $r1.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r2) {1116604457}";
"specialinvoke $r1.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r2) {1116604457}" -> "return $r1 {1483155273}";
}

digraph makePrefixKey {
"key := @parameter0: byte[] {1731922456}" -> "keyOff := @parameter1: int {1615237130}";
"keyOff := @parameter1: int {1615237130}" -> "keySize := @parameter2: int {172687065}";
"keySize := @parameter2: int {172687065}" -> "$i0 = keySize + 1 {1337862989}";
"$i0 = keySize + 1 {1337862989}" -> "buf = newarray (byte)[$i0] {1072940719}";
"buf = newarray (byte)[$i0] {1072940719}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, 0, buf, 0, keySize) {1607042504}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, 0, buf, 0, keySize) {1607042504}" -> "buf[keySize] = -1 {145113630}";
"buf[keySize] = -1 {145113630}" -> "return buf {847552036}";
}

digraph compareMainKey {
"keyBytes1 := @parameter0: byte[] {1409757834}" -> "keyBytes2 := @parameter1: byte[] {706098850}";
"keyBytes2 := @parameter1: byte[] {706098850}" -> "btreeComparator := @parameter2: java.util.Comparator {738241071}";
"btreeComparator := @parameter2: java.util.Comparator {738241071}" -> "$i0 = lengthof keyBytes2 {1591198503}";
"$i0 = lengthof keyBytes2 {1591198503}" -> "$i1 = $i0 - 1 {1134585346}";
"$i1 = $i0 - 1 {1134585346}" -> "origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes2, $i1) {238162672}";
"origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes2, $i1) {238162672}" -> "if origKeySize2 != -1 goto $i3 = origKeySize2 {2093224756}";
"if origKeySize2 != -1 goto $i3 = origKeySize2 {2093224756}" -> "$i2 = lengthof keyBytes2 {997104182}";
"if origKeySize2 != -1 goto $i3 = origKeySize2 {2093224756}" -> "$i3 = origKeySize2 {771364455}";
"$i2 = lengthof keyBytes2 {997104182}" -> "$i3 = $i2 - 1 {2033216137}";
"$i3 = $i2 - 1 {2033216137}" -> "goto [?= keySize2 = $i3] {1653247786}";
"goto [?= keySize2 = $i3] {1653247786}" -> "keySize2 = $i3 {2121871623}";
"$i3 = origKeySize2 {771364455}" -> "keySize2 = $i3 {2121871623}";
"keySize2 = $i3 {2121871623}" -> "$i4 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(keyBytes1, keyBytes2, 0, keySize2, btreeComparator) {1673200290}";
"$i4 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(keyBytes1, keyBytes2, 0, keySize2, btreeComparator) {1673200290}" -> "return $i4 {629583787}";
}

digraph compareMainKey {
"keyBytes1 := @parameter0: byte[] {627099638}" -> "keyBytes2 := @parameter1: byte[] {965571904}";
"keyBytes2 := @parameter1: byte[] {965571904}" -> "keyOff2 := @parameter2: int {1711421033}";
"keyOff2 := @parameter2: int {1711421033}" -> "keySize2 := @parameter3: int {608737832}";
"keySize2 := @parameter3: int {608737832}" -> "btreeComparator := @parameter4: java.util.Comparator {1727504889}";
"btreeComparator := @parameter4: java.util.Comparator {1727504889}" -> "$i0 = lengthof keyBytes1 {80679301}";
"$i0 = lengthof keyBytes1 {80679301}" -> "$i1 = $i0 - 1 {841859160}";
"$i1 = $i0 - 1 {841859160}" -> "origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes1, $i1) {1429214075}";
"origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes1, $i1) {1429214075}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {1070376527}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1070376527}" -> "$i2 = lengthof keyBytes1 {2060793291}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1070376527}" -> "$i3 = origKeySize1 {654064803}";
"$i2 = lengthof keyBytes1 {2060793291}" -> "$i3 = $i2 - 1 {160628330}";
"$i3 = $i2 - 1 {160628330}" -> "goto [?= keySize1 = $i3] {1968448687}";
"goto [?= keySize1 = $i3] {1968448687}" -> "keySize1 = $i3 {1576321400}";
"$i3 = origKeySize1 {654064803}" -> "keySize1 = $i3 {1576321400}";
"keySize1 = $i3 {1576321400}" -> "if btreeComparator != null goto key1 = newarray (byte)[keySize1] {1309658008}";
"if btreeComparator != null goto key1 = newarray (byte)[keySize1] {1309658008}" -> "keyCmp#20 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(keyBytes1, 0, keySize1, keyBytes2, keyOff2, keySize2) {1514820875}";
"if btreeComparator != null goto key1 = newarray (byte)[keySize1] {1309658008}" -> "key1 = newarray (byte)[keySize1] {709444175}";
"keyCmp#20 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(keyBytes1, 0, keySize1, keyBytes2, keyOff2, keySize2) {1514820875}" -> "goto [?= return keyCmp#20] {274539962}";
"goto [?= return keyCmp#20] {274539962}" -> "return keyCmp#20 {2133825596}";
"key1 = newarray (byte)[keySize1] {709444175}" -> "key2 = newarray (byte)[keySize2] {287341957}";
"key2 = newarray (byte)[keySize2] {287341957}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes1, 0, key1, 0, keySize1) {26595986}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes1, 0, key1, 0, keySize1) {26595986}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes2, keyOff2, key2, 0, keySize2) {1249581473}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes2, keyOff2, key2, 0, keySize2) {1249581473}" -> "keyCmp#20 = interfaceinvoke btreeComparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1817841359}";
"keyCmp#20 = interfaceinvoke btreeComparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1817841359}" -> "return keyCmp#20 {2133825596}";
}

digraph combine {
"paramKey := @parameter0: berkeley.com.sleepycat.je.DatabaseEntry {153417673}" -> "paramData := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {159411519}";
"paramData := @parameter1: berkeley.com.sleepycat.je.DatabaseEntry {159411519}" -> "$r0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1504271784}";
"$r0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1504271784}" -> "$i0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1558223292}";
"$i0 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1558223292}" -> "$i1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {821908769}";
"$i1 = virtualinvoke paramKey.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {821908769}" -> "$r1 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {584653315}";
"$r1 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: byte[] getData()>() {584653315}" -> "$i2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1505958637}";
"$i2 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getOffset()>() {1505958637}" -> "$i3 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {1683039096}";
"$i3 = virtualinvoke paramData.<berkeley.com.sleepycat.je.DatabaseEntry: int getSize()>() {1683039096}" -> "buf = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) {392428949}";
"buf = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) {392428949}" -> "$r2 = new berkeley.com.sleepycat.je.DatabaseEntry {2051294946}";
"$r2 = new berkeley.com.sleepycat.je.DatabaseEntry {2051294946}" -> "specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>(buf) {1801009990}";
"specialinvoke $r2.<berkeley.com.sleepycat.je.DatabaseEntry: void <init>(byte[])>(buf) {1801009990}" -> "return $r2 {871498649}";
}

digraph combine {
"key := @parameter0: byte[] {169569423}" -> "data := @parameter1: byte[] {814850531}";
"data := @parameter1: byte[] {814850531}" -> "$i0 = lengthof key {553132791}";
"$i0 = lengthof key {553132791}" -> "$i1 = lengthof data {966095281}";
"$i1 = lengthof data {966095281}" -> "$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(key, 0, $i0, data, 0, $i1) {1494929712}";
"$r0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(key, 0, $i0, data, 0, $i1) {1494929712}" -> "return $r0 {907223524}";
}

digraph getData {
"buf := @parameter0: byte[] {419958808}" -> "off := @parameter1: int {2095480304}";
"off := @parameter1: int {2095480304}" -> "len := @parameter2: int {371462617}";
"len := @parameter2: int {371462617}" -> "$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {586836738}";
"$z0 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {586836738}" -> "if $z0 != 0 goto $i2 = off + len {1198339338}";
"if $z0 != 0 goto $i2 = off + len {1198339338}" -> "$i0 = lengthof buf {2027006899}";
"if $z0 != 0 goto $i2 = off + len {1198339338}" -> "$i2 = off + len {426143705}";
"$i0 = lengthof buf {2027006899}" -> "$i1 = off + len {865802481}";
"$i1 = off + len {865802481}" -> "if $i0 >= $i1 goto $i2 = off + len {1518315449}";
"if $i0 >= $i1 goto $i2 = off + len {1518315449}" -> "$r0 = new java.lang.AssertionError {668032949}";
"if $i0 >= $i1 goto $i2 = off + len {1518315449}" -> "$i2 = off + len {426143705}";
"$r0 = new java.lang.AssertionError {668032949}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {153687448}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {153687448}" -> "throw $r0 {776747371}";
"$i2 = off + len {426143705}" -> "$i3 = $i2 - 1 {878600474}";
"$i3 = $i2 - 1 {878600474}" -> "keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {184124951}";
"keyLen = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {184124951}" -> "$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1307074787}";
"$z1 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1307074787}" -> "if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {208859176}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {208859176}" -> "if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {979815041}";
"if $z1 != 0 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {208859176}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1097092678}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {979815041}" -> "$r1 = new java.lang.AssertionError {554606165}";
"if keyLen != -1 goto $z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {979815041}" -> "$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1097092678}";
"$r1 = new java.lang.AssertionError {554606165}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {410215921}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {410215921}" -> "throw $r1 {349013692}";
"$z2 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1097092678}" -> "if $z2 != 0 goto $i4 = off + len {1650252361}";
"if $z2 != 0 goto $i4 = off + len {1650252361}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {428078564}";
"if $z2 != 0 goto $i4 = off + len {1650252361}" -> "$i4 = off + len {1806768621}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {428078564}" -> "if keyLen <= len goto $i4 = off + len {79511103}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {428078564}" -> "$r2 = new java.lang.AssertionError {43505561}";
"if keyLen <= len goto $i4 = off + len {79511103}" -> "$r2 = new java.lang.AssertionError {43505561}";
"if keyLen <= len goto $i4 = off + len {79511103}" -> "$i4 = off + len {1806768621}";
"$r2 = new java.lang.AssertionError {43505561}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1456825342}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1456825342}" -> "throw $r2 {1005904861}";
"$i4 = off + len {1806768621}" -> "$i5 = $i4 - 1 {2109913553}";
"$i5 = $i4 - 1 {2109913553}" -> "keyLenSize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, $i5) {1886956627}";
"keyLenSize = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, $i5) {1886956627}" -> "$i6 = len - keyLen {331564821}";
"$i6 = len - keyLen {331564821}" -> "dataLen = $i6 - keyLenSize {714913819}";
"dataLen = $i6 - keyLenSize {714913819}" -> "$z3 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1869460089}";
"$z3 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1869460089}" -> "if $z3 != 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1044748241}";
"if $z3 != 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1044748241}" -> "if dataLen > 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {665469729}";
"if $z3 != 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1044748241}" -> "$z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1923797501}";
"if dataLen > 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {665469729}" -> "$r3 = new java.lang.AssertionError {634831831}";
"if dataLen > 0 goto $z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {665469729}" -> "$z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1923797501}";
"$r3 = new java.lang.AssertionError {634831831}" -> "specialinvoke $r3.<java.lang.AssertionError: void <init>()>() {347575427}";
"specialinvoke $r3.<java.lang.AssertionError: void <init>()>() {347575427}" -> "throw $r3 {1634823807}";
"$z4 = <berkeley.com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1923797501}" -> "if $z4 != 0 goto data = newarray (byte)[dataLen] {1011275296}";
"if $z4 != 0 goto data = newarray (byte)[dataLen] {1011275296}" -> "$i7 = keyLen + dataLen {1511312343}";
"if $z4 != 0 goto data = newarray (byte)[dataLen] {1011275296}" -> "data = newarray (byte)[dataLen] {1454142819}";
"$i7 = keyLen + dataLen {1511312343}" -> "if $i7 <= len goto data = newarray (byte)[dataLen] {782210479}";
"if $i7 <= len goto data = newarray (byte)[dataLen] {782210479}" -> "$r4 = new java.lang.AssertionError {2124190701}";
"if $i7 <= len goto data = newarray (byte)[dataLen] {782210479}" -> "data = newarray (byte)[dataLen] {1454142819}";
"$r4 = new java.lang.AssertionError {2124190701}" -> "specialinvoke $r4.<java.lang.AssertionError: void <init>()>() {492285509}";
"specialinvoke $r4.<java.lang.AssertionError: void <init>()>() {492285509}" -> "throw $r4 {1329029805}";
"data = newarray (byte)[dataLen] {1454142819}" -> "$i8 = off + keyLen {1327435950}";
"$i8 = off + keyLen {1327435950}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, $i8, data, 0, dataLen) {1111087415}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, $i8, data, 0, dataLen) {1111087415}" -> "return data {439269682}";
}


