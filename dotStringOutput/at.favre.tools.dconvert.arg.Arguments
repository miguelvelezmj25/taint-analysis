digraph <clinit> {
"$r0 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy ROUND_HALF_UP> {202881687}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {2072744308}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {2072744308}" -> "$r1 = new java.util.HashSet {1183413665}";
"$r1 = new java.util.HashSet {1183413665}" -> "$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {1354388225}";
"$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {1354388225}" -> "$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {742176653}";
"$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {742176653}" -> "$r2[0] = $r3 {1018537341}";
"$r2[0] = $r3 {1018537341}" -> "$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {1472238657}";
"$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {1472238657}" -> "$r2[1] = $r4 {1187995017}";
"$r2[1] = $r4 {1187995017}" -> "$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {1199513630}";
"$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {1199513630}" -> "specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {392212331}";
"specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {392212331}" -> "<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {1154564954}";
"<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {1154564954}" -> "$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {2026798428}";
"$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {2026798428}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {1175444875}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {1175444875}" -> "$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {1418078678}";
"$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {1418078678}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {444824463}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {444824463}" -> "$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {296538398}";
"$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {296538398}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {704095525}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {704095525}" -> "$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {1281028436}";
"$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {1281028436}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1300538451}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1300538451}" -> "return {978827484}";
}

digraph getImageType {
"srcFile := @parameter0: java.io.File {1044634249}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {1959089055}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {1959089055}" -> "l2 = extension {909670151}";
"l2 = extension {909670151}" -> "l3#5 = -1 {712791141}";
"l3#5 = -1 {712791141}" -> "$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {1262290516}";
"$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {1262290516}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {777349764}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {777349764}" -> "lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {2008317210}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {2141776851}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {484495889}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {2021621083}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {1721358482}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {2042788868}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {399087033}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {229809246}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {294830446}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {1531740606}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {484495889}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {10571733}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {10571733}" -> "if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1455361306}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1455361306}" -> "l3#5 = 0 {270169404}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1455361306}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 0 {270169404}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {183524724}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {183524724}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {229809246}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1711601840}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1711601840}" -> "if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {94464865}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {94464865}" -> "l3#5 = 1 {812738204}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {94464865}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 1 {812738204}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {691555488}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {691555488}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {2021621083}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1887410661}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1887410661}" -> "if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {323576760}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {323576760}" -> "l3#5 = 2 {482264427}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {323576760}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 2 {482264427}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {531166722}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {531166722}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {2042788868}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1270336458}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1270336458}" -> "if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {553815512}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {553815512}" -> "l3#5 = 3 {1042749303}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {553815512}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 3 {1042749303}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1416589035}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1416589035}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {399087033}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {211635986}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {211635986}" -> "if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {956217757}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {956217757}" -> "l3#5 = 4 {1741257341}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {956217757}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 4 {1741257341}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1022779232}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1022779232}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {294830446}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {1293811577}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {1293811577}" -> "if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {529633635}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {529633635}" -> "l3#5 = 5 {951312052}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {529633635}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 5 {951312052}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1068360061}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1068360061}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {1721358482}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {1713351647}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {1713351647}" -> "if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {913275701}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {913275701}" -> "l3#5 = 6 {911993669}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {913275701}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 6 {911993669}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {514783316}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {514783316}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {2141776851}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {1105390532}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {1105390532}" -> "if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {372097066}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {372097066}" -> "l3#5 = 7 {2122285134}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {372097066}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 7 {2122285134}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1177618977}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1177618977}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {2008317210}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {94704655}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {94704655}" -> "if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {966394319}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {966394319}" -> "l3#5 = 8 {9400127}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {966394319}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"l3#5 = 8 {9400127}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}" -> "tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {1703092360}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {1981115294}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {1681368963}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {1429034826}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {1985144834}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {220577624}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {1094006633}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1031436735}" -> "$r7 = new java.lang.IllegalArgumentException {987157088}";
"$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {1703092360}" -> "return $r0 {504257936}";
"$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {1981115294}" -> "return $r1 {407651170}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {1681368963}" -> "return $r2 {137987144}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {1429034826}" -> "return $r3 {788552158}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {1985144834}" -> "return $r4 {848116036}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {220577624}" -> "return $r5 {549898635}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {1094006633}" -> "return $r6 {447308050}";
"$r7 = new java.lang.IllegalArgumentException {987157088}" -> "$r8 = new java.lang.StringBuilder {366768857}";
"$r8 = new java.lang.StringBuilder {366768857}" -> "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {1183331979}";
"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {1183331979}" -> "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {111744136}";
"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {111744136}" -> "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {1175024627}";
"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {1175024627}" -> "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {504986570}";
"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {504986570}" -> "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1126813406}";
"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1126813406}" -> "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1119001718}";
"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1119001718}" -> "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {387999937}";
"specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {387999937}" -> "throw $r7 {1276715679}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {94704655}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1887410661}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {777349764}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {669111797}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {10571733}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {1713351647}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {211635986}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1270336458}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {1293811577}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1711601840}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {1105390532}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getOutCompressionForType {
"type := @parameter0: at.favre.tools.dconvert.arg.EOutputCompressionMode {752572148}" -> "imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {102293442}";
"imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {102293442}" -> "$r0 = new java.util.ArrayList {1914138702}";
"$r0 = new java.util.ArrayList {1914138702}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {1755253594}";
"specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {1755253594}" -> "list = $r0 {31274593}";
"list = $r0 {31274593}" -> "$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {791945751}";
"$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {791945751}" -> "$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {293263194}";
"$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {293263194}" -> "$i1 = $r1[$i0] {2038203690}";
"$i1 = $r1[$i0] {2038203690}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1008156849}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1008156849}" -> "tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {105768655}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {347499197}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {691135970}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {2074668004}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {401473843}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {1900199740}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {2002138248}" -> "$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {2064847027}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {105768655}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {568028750}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {568028750}" -> "goto [?= return list] {1302765209}";
"goto [?= return list] {1302765209}" -> "return list {147821515}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {347499197}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {681122702}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {681122702}" -> "goto [?= return list] {944056065}";
"goto [?= return list] {944056065}" -> "return list {147821515}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {691135970}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {753395185}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {753395185}" -> "goto [?= return list] {974821662}";
"goto [?= return list] {974821662}" -> "return list {147821515}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {2074668004}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {1256443278}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {1256443278}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {853692832}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {853692832}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {808477570}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {808477570}" -> "goto [?= return list] {2087663851}";
"goto [?= return list] {2087663851}" -> "return list {147821515}";
"$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {401473843}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {1351965537}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {1351965537}" -> "goto [?= return list] {2112156343}";
"goto [?= return list] {2112156343}" -> "return list {147821515}";
"$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {1900199740}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {1129247983}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {1129247983}" -> "goto [?= return list] {448026981}";
"goto [?= return list] {448026981}" -> "return list {147821515}";
"$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {2064847027}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {387305141}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {387305141}" -> "return list {147821515}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1008156849}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: at.favre.tools.dconvert.arg.Arguments {2096356737}" -> "src := @parameter0: java.io.File {640776379}";
"src := @parameter0: java.io.File {640776379}" -> "dst := @parameter1: java.io.File {1269721660}";
"dst := @parameter1: java.io.File {1269721660}" -> "scale := @parameter2: float {495096576}";
"scale := @parameter2: float {495096576}" -> "platform := @parameter3: java.util.Set {294173896}";
"platform := @parameter3: java.util.Set {294173896}" -> "outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1990638157}";
"outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1990638157}" -> "scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {1978039221}";
"scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {1978039221}" -> "downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {1616113582}";
"downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {1616113582}" -> "upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {1616483201}";
"upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {1616483201}" -> "compressionQuality := @parameter8: float {503777657}";
"compressionQuality := @parameter8: float {503777657}" -> "threadCount := @parameter9: int {934735260}";
"threadCount := @parameter9: int {934735260}" -> "skipExistingFiles := @parameter10: boolean {1165863798}";
"skipExistingFiles := @parameter10: boolean {1165863798}" -> "skipUpscaling := @parameter11: boolean {597287045}";
"skipUpscaling := @parameter11: boolean {597287045}" -> "verboseLog := @parameter12: boolean {1368379101}";
"verboseLog := @parameter12: boolean {1368379101}" -> "includeAndroidLdpiTvdpi := @parameter13: boolean {127670259}";
"includeAndroidLdpiTvdpi := @parameter13: boolean {127670259}" -> "haltOnError := @parameter14: boolean {1591336870}";
"haltOnError := @parameter14: boolean {1591336870}" -> "createMipMapInsteadOfDrawableDir := @parameter15: boolean {940554108}";
"createMipMapInsteadOfDrawableDir := @parameter15: boolean {940554108}" -> "iosCreateImagesetFolders := @parameter16: boolean {567209737}";
"iosCreateImagesetFolders := @parameter16: boolean {567209737}" -> "enablePngCrush := @parameter17: boolean {1668552826}";
"enablePngCrush := @parameter17: boolean {1668552826}" -> "enableMozJpeg := @parameter18: boolean {1428006496}";
"enableMozJpeg := @parameter18: boolean {1428006496}" -> "postConvertWebp := @parameter19: boolean {521754122}";
"postConvertWebp := @parameter19: boolean {521754122}" -> "enableAntiAliasing := @parameter20: boolean {1235303431}";
"enableAntiAliasing := @parameter20: boolean {1235303431}" -> "dryRun := @parameter21: boolean {689202077}";
"dryRun := @parameter21: boolean {689202077}" -> "keepUnoptimizedFilesPostProcessor := @parameter22: boolean {632905086}";
"keepUnoptimizedFilesPostProcessor := @parameter22: boolean {632905086}" -> "roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {359729678}";
"roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {359729678}" -> "guiAdvancedOptions := @parameter24: boolean {1610038132}";
"guiAdvancedOptions := @parameter24: boolean {1610038132}" -> "clearDirBeforeConvert := @parameter25: boolean {1097657896}";
"clearDirBeforeConvert := @parameter25: boolean {1097657896}" -> "scaleIsHeightdp := @parameter26: boolean {1092597788}";
"scaleIsHeightdp := @parameter26: boolean {1092597788}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {827978236}";
"specialinvoke this.<java.lang.Object: void <init>()>() {827978236}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {148268508}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {148268508}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {1870928083}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {1870928083}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {763675735}";
"this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {763675735}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {45505069}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {45505069}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {1002853052}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {1002853052}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {1355092944}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {1355092944}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {1747189150}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {1747189150}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {898653554}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {898653554}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {479272724}";
"this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {479272724}" -> "this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {123027543}";
"this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {123027543}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {911762776}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {911762776}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {236773879}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {236773879}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {1360301753}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {1360301753}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {1121546222}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {1121546222}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {792704558}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {792704558}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {1736249871}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {1736249871}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {2116323159}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {2116323159}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {1808869496}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {1808869496}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {2117980890}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {2117980890}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {431196059}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {431196059}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {1875691707}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {1875691707}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {441270343}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {441270343}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {11017312}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {11017312}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {672262065}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {672262065}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {1049339878}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {1049339878}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {1907688129}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {1907688129}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> = scaleIsHeightdp {1615367822}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> = scaleIsHeightdp {1615367822}" -> "$r0 = new java.util.ArrayList {976174579}";
"$r0 = new java.util.ArrayList {976174579}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>()>() {575453587}";
"specialinvoke $r0.<java.util.ArrayList: void <init>()>() {575453587}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {1632618636}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {1632618636}" -> "supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {1146067509}";
"supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {1146067509}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {1765335485}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {1765335485}" -> "if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {345855026}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {345855026}" -> "$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {1856941210}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {345855026}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1963566673}";
"$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {1856941210}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1943041013}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1943041013}" -> "if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1828423462}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1828423462}" -> "l29 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {802554019}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1828423462}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1963566673}";
"l29 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {802554019}" -> "l30 = lengthof l29 {2140988152}";
"l30 = lengthof l29 {2140988152}" -> "l31#67 = 0 {1725127963}";
"l31#67 = 0 {1725127963}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {1573785383}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {1573785383}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {436215372}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {436215372}" -> "if l31#67 >= l30 goto (branch) {1313571435}";
"if l31#67 >= l30 goto (branch) {1313571435}" -> "file = l29[l31#67] {107748419}";
"if l31#67 >= l30 goto (branch) {1313571435}" -> "goto [?= return] {1561495337}";
"file = l29[l31#67] {107748419}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {1163299932}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {1163299932}" -> "$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {1151101326}";
"$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {1151101326}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {490682365}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {490682365}" -> "if $z1 == 0 goto l31#67 = l31#67 + 1 {903428397}";
"if $z1 == 0 goto l31#67 = l31#67 + 1 {903428397}" -> "$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {648102880}";
"if $z1 == 0 goto l31#67 = l31#67 + 1 {903428397}" -> "l31#67 = l31#67 + 1 {1139443388}";
"$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {648102880}" -> "interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {467801116}";
"interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {467801116}" -> "l31#67 = l31#67 + 1 {1139443388}";
"l31#67 = l31#67 + 1 {1139443388}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67)] {1987881972}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67)] {1987881972}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {1573785383}";
"goto [?= return] {1561495337}" -> "return {585412175}";
"$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1963566673}" -> "$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {1022057494}";
"$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {1022057494}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1590360124}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1590360124}" -> "if $z3 == 0 goto return {1146014683}";
"if $z3 == 0 goto return {1146014683}" -> "$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1447930695}";
"if $z3 == 0 goto return {1146014683}" -> "return {585412175}";
"$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1447930695}" -> "interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {1730239160}";
"interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {1730239160}" -> "return {585412175}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {436215372}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {1573785383}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1943041013}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {490682365}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1590360124}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {1765335485}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getSupportedFileTypes {
"$r0 = new java.util.HashSet {752058859}" -> "specialinvoke $r0.<java.util.HashSet: void <init>()>() {1940827281}";
"specialinvoke $r0.<java.util.HashSet: void <init>()>() {1940827281}" -> "set = $r0 {893045709}";
"set = $r0 {893045709}" -> "l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {894271767}";
"l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {894271767}" -> "l2 = lengthof l1 {1860895684}";
"l2 = lengthof l1 {1860895684}" -> "l3#7 = 0 {1103999584}";
"l3#7 = 0 {1103999584}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {232563640}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {232563640}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {81699111}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {81699111}" -> "if l3#7 >= l2 goto return set {979518698}";
"if l3#7 >= l2 goto return set {979518698}" -> "imageType = l1[l3#7] {1881145524}";
"if l3#7 >= l2 goto return set {979518698}" -> "return set {232186502}";
"imageType = l1[l3#7] {1881145524}" -> "$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {2117154878}";
"$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {2117154878}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1960912274}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1960912274}" -> "if $z0 == 0 goto l3#7 = l3#7 + 1 {1586295316}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {1586295316}" -> "$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {2145739265}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {1586295316}" -> "l3#7 = l3#7 + 1 {1830568465}";
"$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {2145739265}" -> "$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {1178612667}";
"$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {1178612667}" -> "interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {1816623906}";
"interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {1816623906}" -> "l3#7 = l3#7 + 1 {1830568465}";
"l3#7 = l3#7 + 1 {1830568465}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {713456098}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {713456098}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {232563640}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {232563640}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1960912274}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {81699111}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph round {
"this := @this: at.favre.tools.dconvert.arg.Arguments {918663191}" -> "raw := @parameter0: double {1661230088}";
"raw := @parameter0: double {1661230088}" -> "$r0 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {1241681857}";
"$r0 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {1241681857}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {250509508}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {250509508}" -> "if $r0 == null goto return raw {195522197}";
"if $r0 == null goto return raw {195522197}" -> "$r1 = new at.favre.tools.dconvert.arg.RoundingHandler {788248791}";
"if $r0 == null goto return raw {195522197}" -> "return raw {51897467}";
"$r1 = new at.favre.tools.dconvert.arg.RoundingHandler {788248791}" -> "$r2 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {743367261}";
"$r2 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {743367261}" -> "specialinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r2) {912923713}";
"specialinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r2) {912923713}" -> "$l0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {885314083}";
"$l0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {885314083}" -> "$d0 = (double) $l0 {1866699500}";
"$d0 = (double) $l0 {1866699500}" -> "return $d0 {153944913}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {250509508}"[fontcolor="blue", penwidth=3, color="blue"];
}


