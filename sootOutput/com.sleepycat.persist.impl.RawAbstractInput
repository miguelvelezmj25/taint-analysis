    static com.sleepycat.persist.impl.Format checkRawType(com.sleepycat.persist.impl.Catalog, java.lang.Object, com.sleepycat.persist.impl.Format) throws com.sleepycat.persist.impl.RefreshException
    {
        com.sleepycat.persist.impl.Catalog catalog;
        java.lang.Object o;
        com.sleepycat.persist.impl.Format declaredFormat, proxiedFormat, format#11, format#17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.AssertionError $r0;
        com.sleepycat.persist.raw.RawObject $r1;
        com.sleepycat.persist.raw.RawType $r2;
        int $i0, $i1;
        java.lang.Class $r3;
        java.lang.IllegalArgumentException $r4, $r10, $r19;
        java.lang.StringBuilder $r5, $r6, $r8, $r11, $r12, $r14, $r15, $r17, $r20, $r21, $r23, $r24, $r25;
        java.lang.String $r7, $r9, $r13, $r16, $r18, $r22, $r26;

        catalog := @parameter0: com.sleepycat.persist.impl.Catalog;

        o := @parameter1: java.lang.Object;

        declaredFormat := @parameter2: com.sleepycat.persist.impl.Format;

        $z0 = <com.sleepycat.persist.impl.RawAbstractInput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if declaredFormat != null goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $z1 = o instanceof com.sleepycat.persist.raw.RawObject;

        if $z1 == 0 goto label2;

        $r1 = (com.sleepycat.persist.raw.RawObject) o;

        $r2 = virtualinvoke $r1.<com.sleepycat.persist.raw.RawObject: com.sleepycat.persist.raw.RawType getType()>();

        format#11 = (com.sleepycat.persist.impl.Format) $r2;

        $i0 = virtualinvoke format#11.<com.sleepycat.persist.impl.Format: int getId()>();

        format#17 = interfaceinvoke catalog.<com.sleepycat.persist.impl.Catalog: com.sleepycat.persist.impl.Format getFormat(int,boolean)>($i0, 0);

        goto label4;

     label2:
        $r3 = virtualinvoke o.<java.lang.Object: java.lang.Class getClass()>();

        format#17 = interfaceinvoke catalog.<com.sleepycat.persist.impl.Catalog: com.sleepycat.persist.impl.Format getFormat(java.lang.Class,boolean)>($r3, 0);

        $z2 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: boolean isSimple()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: boolean isEnum()>();

        if $z3 == 0 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a RawObject or a non-enum simple type: ");

        $r7 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label4:
        $z4 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: boolean isAssignableTo(com.sleepycat.persist.impl.Format)>(declaredFormat);

        if $z4 != 0 goto label5;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a subtype of the field\'s declared class ");

        $r13 = virtualinvoke declaredFormat.<com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label5:
        $z5 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: boolean isCurrentVersion()>();

        if $z5 != 0 goto label6;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Raw type version is not current.  Class: ");

        $r22 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: java.lang.String getClassName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Version: ");

        $i1 = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: int getVersion()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r19;

     label6:
        proxiedFormat = virtualinvoke format#17.<com.sleepycat.persist.impl.Format: com.sleepycat.persist.impl.Format getProxiedFormat()>();

        if proxiedFormat == null goto label7;

        format#17 = proxiedFormat;

     label7:
        return format#17;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/persist/impl/RawAbstractInput";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.persist.impl.RawAbstractInput: boolean $assertionsDisabled> = $z1;

        return;
    }


