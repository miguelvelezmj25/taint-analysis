    public boolean forward(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.transform.DWT_CDF_9_7 this;
        kanzi.SliceIntArray src, dst;
        int count, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i#45, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        boolean $z0, $z1;
        int[] $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: kanzi.transform.DWT_CDF_9_7;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        $z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i1 = this.<kanzi.transform.DWT_CDF_9_7: int height>;

        count = $i0 * $i1;

        $i2 = src.<kanzi.SliceIntArray: int length>;

        if $i2 == count goto label3;

        return 0;

     label3:
        $i3 = dst.<kanzi.SliceIntArray: int length>;

        if $i3 >= count goto label4;

        return 0;

     label4:
        $i4 = dst.<kanzi.SliceIntArray: int index>;

        $i5 = $i4 + count;

        $r0 = dst.<kanzi.SliceIntArray: int[] array>;

        $i6 = lengthof $r0;

        if $i5 <= $i6 goto label5;

        return 0;

     label5:
        $r1 = src.<kanzi.SliceIntArray: int[] array>;

        $r2 = dst.<kanzi.SliceIntArray: int[] array>;

        if $r1 != $r2 goto label6;

        $i7 = src.<kanzi.SliceIntArray: int index>;

        $i8 = dst.<kanzi.SliceIntArray: int index>;

        if $i7 == $i8 goto label7;

     label6:
        $r3 = src.<kanzi.SliceIntArray: int[] array>;

        $i9 = src.<kanzi.SliceIntArray: int index>;

        $r4 = dst.<kanzi.SliceIntArray: int[] array>;

        $i10 = dst.<kanzi.SliceIntArray: int index>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i9, $r4, $i10, count);

     label7:
        i#45 = 0;

     label8:
        $i11 = this.<kanzi.transform.DWT_CDF_9_7: int steps>;

        if i#45 >= $i11 goto label9;

        $r5 = dst.<kanzi.SliceIntArray: int[] array>;

        $i12 = dst.<kanzi.SliceIntArray: int index>;

        $i13 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i14 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i15 = $i14 >> i#45;

        $i16 = this.<kanzi.transform.DWT_CDF_9_7: int height>;

        $i17 = $i16 >> i#45;

        specialinvoke this.<kanzi.transform.DWT_CDF_9_7: void forward(int[],int,int,int,int,int)>($r5, $i12, $i13, 1, $i15, $i17);

        $r6 = dst.<kanzi.SliceIntArray: int[] array>;

        $i18 = dst.<kanzi.SliceIntArray: int index>;

        $i19 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i20 = this.<kanzi.transform.DWT_CDF_9_7: int height>;

        $i21 = $i20 >> i#45;

        $i22 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i23 = $i22 >> i#45;

        specialinvoke this.<kanzi.transform.DWT_CDF_9_7: void forward(int[],int,int,int,int,int)>($r6, $i18, 1, $i19, $i21, $i23);

        i#45 = i#45 + 1;

        goto label8;

     label9:
        $i24 = src.<kanzi.SliceIntArray: int index>;

        $i25 = $i24 + count;

        src.<kanzi.SliceIntArray: int index> = $i25;

        $i26 = dst.<kanzi.SliceIntArray: int index>;

        $i27 = $i26 + count;

        dst.<kanzi.SliceIntArray: int index> = $i27;

        return 1;
    }

    private void forward(int[], int, int, int, int, int)
    {
        kanzi.transform.DWT_CDF_9_7 this;
        int[] block, $r8, $r9, $r10, $r11;
        int blkptr, stride, inc, dim1, dim2, stride2, endOffs, half, end, endj, $i0, $i1, offset#15, $i2, $i3, prev#28, i#32, $i4, next#40, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, prev#82, i#86, $i20, next#94, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, prev#134, i#138, $i36, next#146, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, prev#188, i#192, $i52, next#200, $i54, $i55, $i56, $i57, $i58, $i59, $i61, $i62, $i63, $i64, $i65, $i66, $i67, i#238, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, i#274, j#276, $i78, $i79, $i80, $i81, $i82, $i83, $i84, i#312, $i85;

        this := @this: kanzi.transform.DWT_CDF_9_7;

        block := @parameter0: int[];

        blkptr := @parameter1: int;

        stride := @parameter2: int;

        inc := @parameter3: int;

        dim1 := @parameter4: int;

        dim2 := @parameter5: int;

        stride2 = stride << 1;

        $i0 = dim1 * inc;

        endOffs = blkptr + $i0;

        $i1 = dim2 >> 1;

        half = stride * $i1;

        offset#15 = blkptr;

     label01:
        if offset#15 >= endOffs goto label16;

        $i2 = dim2 - 2;

        $i3 = $i2 * stride;

        end = offset#15 + $i3;

        prev#28 = block[offset#15];

        i#32 = offset#15 + stride;

     label02:
        if i#32 >= end goto label03;

        $i4 = i#32 + stride;

        next#40 = block[$i4];

        $i6 = block[i#32];

        $i7 = prev#28 + next#40;

        $i8 = 6497 * $i7;

        $i9 = $i8 + 2048;

        $i10 = $i9 >> 12;

        $i11 = $i6 - $i10;

        block[i#32] = $i11;

        prev#28 = next#40;

        i#32 = i#32 + stride2;

        goto label02;

     label03:
        $i12 = end + stride;

        $i13 = block[$i12];

        $i14 = block[end];

        $i15 = 6497 * $i14;

        $i16 = $i15 + 1024;

        $i17 = $i16 >> 11;

        $i18 = $i13 - $i17;

        block[$i12] = $i18;

        $i19 = offset#15 + stride;

        prev#82 = block[$i19];

        i#86 = offset#15 + stride2;

     label04:
        if i#86 > end goto label05;

        $i20 = i#86 + stride;

        next#94 = block[$i20];

        $i22 = block[i#86];

        $i23 = prev#82 + next#94;

        $i24 = 217 * $i23;

        $i25 = $i24 + 2048;

        $i26 = $i25 >> 12;

        $i27 = $i22 - $i26;

        block[i#86] = $i27;

        prev#82 = next#94;

        i#86 = i#86 + stride2;

        goto label04;

     label05:
        $i29 = block[offset#15];

        $i30 = offset#15 + stride;

        $i31 = block[$i30];

        $i32 = 217 * $i31;

        $i33 = $i32 + 1024;

        $i34 = $i33 >> 11;

        $i35 = $i29 - $i34;

        block[offset#15] = $i35;

        prev#134 = block[offset#15];

        i#138 = offset#15 + stride;

     label06:
        if i#138 >= end goto label07;

        $i36 = i#138 + stride;

        next#146 = block[$i36];

        $i38 = block[i#138];

        $i39 = prev#134 + next#146;

        $i40 = 3616 * $i39;

        $i41 = $i40 + 2048;

        $i42 = $i41 >> 12;

        $i43 = $i38 + $i42;

        block[i#138] = $i43;

        prev#134 = next#146;

        i#138 = i#138 + stride2;

        goto label06;

     label07:
        $i44 = end + stride;

        $i45 = block[$i44];

        $i46 = block[end];

        $i47 = 3616 * $i46;

        $i48 = $i47 + 1024;

        $i49 = $i48 >> 11;

        $i50 = $i45 + $i49;

        block[$i44] = $i50;

        $i51 = offset#15 + stride;

        prev#188 = block[$i51];

        i#192 = offset#15 + stride2;

     label08:
        if i#192 > end goto label09;

        $i52 = i#192 + stride;

        next#200 = block[$i52];

        $i54 = block[i#192];

        $i55 = prev#188 + next#200;

        $i56 = 1817 * $i55;

        $i57 = $i56 + 2048;

        $i58 = $i57 >> 12;

        $i59 = $i54 + $i58;

        block[i#192] = $i59;

        prev#188 = next#200;

        i#192 = i#192 + stride2;

        goto label08;

     label09:
        $i61 = block[offset#15];

        $i62 = offset#15 + stride;

        $i63 = block[$i62];

        $i64 = 1817 * $i63;

        $i65 = $i64 + 1024;

        $i66 = $i65 >> 11;

        $i67 = $i61 + $i66;

        block[offset#15] = $i67;

        i#238 = offset#15;

     label10:
        if i#238 > end goto label11;

        $i68 = block[i#238];

        $i69 = $i68 * 4709;

        $i70 = $i69 + 2048;

        $i71 = $i70 >> 12;

        block[i#238] = $i71;

        $i72 = i#238 + stride;

        $i73 = i#238 + stride;

        $i74 = block[$i73];

        $i75 = $i74 * 3563;

        $i76 = $i75 + 2048;

        $i77 = $i76 >> 12;

        block[$i72] = $i77;

        i#238 = i#238 + stride2;

        goto label10;

     label11:
        endj = offset#15 + half;

        i#274 = offset#15;

        j#276 = offset#15;

     label12:
        if j#276 >= endj goto label13;

        $r8 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i78 = block[i#274];

        $r8[j#276] = $i78;

        $r9 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i79 = half + j#276;

        $i80 = i#274 + stride;

        $i81 = block[$i80];

        $r9[$i79] = $i81;

        i#274 = i#274 + stride2;

        j#276 = j#276 + stride;

        goto label12;

     label13:
        $i82 = end + stride;

        $r10 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i83 = end + stride;

        $i84 = $r10[$i83];

        block[$i82] = $i84;

        i#312 = offset#15;

     label14:
        if i#312 > end goto label15;

        $r11 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i85 = $r11[i#312];

        block[i#312] = $i85;

        i#312 = i#312 + stride;

        goto label14;

     label15:
        offset#15 = offset#15 + inc;

        goto label01;

     label16:
        return;
    }

    public boolean inverse(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.transform.DWT_CDF_9_7 this;
        kanzi.SliceIntArray src, dst;
        int count, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i#48, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        boolean $z0, $z1;
        int[] $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: kanzi.transform.DWT_CDF_9_7;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        $z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i1 = this.<kanzi.transform.DWT_CDF_9_7: int height>;

        count = $i0 * $i1;

        $i2 = src.<kanzi.SliceIntArray: int length>;

        if $i2 == count goto label3;

        return 0;

     label3:
        $i3 = dst.<kanzi.SliceIntArray: int length>;

        if $i3 >= count goto label4;

        return 0;

     label4:
        $i4 = dst.<kanzi.SliceIntArray: int index>;

        $i5 = $i4 + count;

        $r0 = dst.<kanzi.SliceIntArray: int[] array>;

        $i6 = lengthof $r0;

        if $i5 <= $i6 goto label5;

        return 0;

     label5:
        $r1 = src.<kanzi.SliceIntArray: int[] array>;

        $r2 = dst.<kanzi.SliceIntArray: int[] array>;

        if $r1 != $r2 goto label6;

        $i7 = src.<kanzi.SliceIntArray: int index>;

        $i8 = dst.<kanzi.SliceIntArray: int index>;

        if $i7 == $i8 goto label7;

     label6:
        $r3 = src.<kanzi.SliceIntArray: int[] array>;

        $i9 = src.<kanzi.SliceIntArray: int index>;

        $r4 = dst.<kanzi.SliceIntArray: int[] array>;

        $i10 = dst.<kanzi.SliceIntArray: int index>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i9, $r4, $i10, count);

     label7:
        $i11 = this.<kanzi.transform.DWT_CDF_9_7: int steps>;

        i#48 = $i11 - 1;

     label8:
        if i#48 < 0 goto label9;

        $r5 = dst.<kanzi.SliceIntArray: int[] array>;

        $i12 = dst.<kanzi.SliceIntArray: int index>;

        $i13 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i14 = this.<kanzi.transform.DWT_CDF_9_7: int height>;

        $i15 = $i14 >> i#48;

        $i16 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i17 = $i16 >> i#48;

        specialinvoke this.<kanzi.transform.DWT_CDF_9_7: void inverse(int[],int,int,int,int,int)>($r5, $i12, 1, $i13, $i15, $i17);

        $r6 = dst.<kanzi.SliceIntArray: int[] array>;

        $i18 = dst.<kanzi.SliceIntArray: int index>;

        $i19 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i20 = this.<kanzi.transform.DWT_CDF_9_7: int width>;

        $i21 = $i20 >> i#48;

        $i22 = this.<kanzi.transform.DWT_CDF_9_7: int height>;

        $i23 = $i22 >> i#48;

        specialinvoke this.<kanzi.transform.DWT_CDF_9_7: void inverse(int[],int,int,int,int,int)>($r6, $i18, $i19, 1, $i21, $i23);

        i#48 = i#48 + -1;

        goto label8;

     label9:
        $i24 = src.<kanzi.SliceIntArray: int index>;

        $i25 = $i24 + count;

        src.<kanzi.SliceIntArray: int index> = $i25;

        $i26 = dst.<kanzi.SliceIntArray: int index>;

        $i27 = $i26 + count;

        dst.<kanzi.SliceIntArray: int index> = $i27;

        return 1;
    }

    private void inverse(int[], int, int, int, int, int)
    {
        kanzi.transform.DWT_CDF_9_7 this;
        int[] block, $r0, $r1, $r2, $r3;
        int blkptr, stride, inc, dim1, dim2, stride2, endOffs, half, end, endj, $i0, $i1, offset#15, $i2, $i3, i#29, $i4, $i5, $i6, $i7, i#52, j#54, $i8, $i9, $i10, $i11, i#80, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, prev#117, i#121, $i23, next#129, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, prev#169, i#173, $i39, next#181, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, prev#223, i#227, $i55, next#235, $i57, $i58, $i59, $i60, $i61, $i62, $i64, $i65, $i66, $i67, $i68, $i69, $i70, prev#275, i#279, $i71, next#287, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85;

        this := @this: kanzi.transform.DWT_CDF_9_7;

        block := @parameter0: int[];

        blkptr := @parameter1: int;

        stride := @parameter2: int;

        inc := @parameter3: int;

        dim1 := @parameter4: int;

        dim2 := @parameter5: int;

        stride2 = stride << 1;

        $i0 = dim1 * inc;

        endOffs = blkptr + $i0;

        $i1 = dim2 >> 1;

        half = stride * $i1;

        offset#15 = blkptr;

     label01:
        if offset#15 >= endOffs goto label16;

        $i2 = dim2 - 2;

        $i3 = $i2 * stride;

        end = offset#15 + $i3;

        endj = offset#15 + half;

        i#29 = offset#15;

     label02:
        if i#29 > end goto label03;

        $r0 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i4 = block[i#29];

        $r0[i#29] = $i4;

        i#29 = i#29 + stride;

        goto label02;

     label03:
        $r1 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i5 = end + stride;

        $i6 = end + stride;

        $i7 = block[$i6];

        $r1[$i5] = $i7;

        i#52 = offset#15;

        j#54 = offset#15;

     label04:
        if j#54 >= endj goto label05;

        $r2 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i8 = $r2[j#54];

        block[i#52] = $i8;

        $i9 = i#52 + stride;

        $r3 = this.<kanzi.transform.DWT_CDF_9_7: int[] data>;

        $i10 = half + j#54;

        $i11 = $r3[$i10];

        block[$i9] = $i11;

        i#52 = i#52 + stride2;

        j#54 = j#54 + stride;

        goto label04;

     label05:
        i#80 = offset#15;

     label06:
        if i#80 > end goto label07;

        $i12 = block[i#80];

        $i13 = $i12 * 3563;

        $i14 = $i13 + 2048;

        $i15 = $i14 >> 12;

        block[i#80] = $i15;

        $i16 = i#80 + stride;

        $i17 = i#80 + stride;

        $i18 = block[$i17];

        $i19 = $i18 * 4709;

        $i20 = $i19 + 2048;

        $i21 = $i20 >> 12;

        block[$i16] = $i21;

        i#80 = i#80 + stride2;

        goto label06;

     label07:
        $i22 = offset#15 + stride;

        prev#117 = block[$i22];

        i#121 = offset#15 + stride2;

     label08:
        if i#121 > end goto label09;

        $i23 = i#121 + stride;

        next#129 = block[$i23];

        $i25 = block[i#121];

        $i26 = prev#117 + next#129;

        $i27 = 1817 * $i26;

        $i28 = $i27 + 2048;

        $i29 = $i28 >> 12;

        $i30 = $i25 - $i29;

        block[i#121] = $i30;

        prev#117 = next#129;

        i#121 = i#121 + stride2;

        goto label08;

     label09:
        $i32 = block[offset#15];

        $i33 = offset#15 + stride;

        $i34 = block[$i33];

        $i35 = 1817 * $i34;

        $i36 = $i35 + 1024;

        $i37 = $i36 >> 11;

        $i38 = $i32 - $i37;

        block[offset#15] = $i38;

        prev#169 = block[offset#15];

        i#173 = offset#15 + stride;

     label10:
        if i#173 >= end goto label11;

        $i39 = i#173 + stride;

        next#181 = block[$i39];

        $i41 = block[i#173];

        $i42 = prev#169 + next#181;

        $i43 = 3616 * $i42;

        $i44 = $i43 + 2048;

        $i45 = $i44 >> 12;

        $i46 = $i41 - $i45;

        block[i#173] = $i46;

        prev#169 = next#181;

        i#173 = i#173 + stride2;

        goto label10;

     label11:
        $i47 = end + stride;

        $i48 = block[$i47];

        $i49 = block[end];

        $i50 = 3616 * $i49;

        $i51 = $i50 + 1024;

        $i52 = $i51 >> 11;

        $i53 = $i48 - $i52;

        block[$i47] = $i53;

        $i54 = offset#15 + stride;

        prev#223 = block[$i54];

        i#227 = offset#15 + stride2;

     label12:
        if i#227 > end goto label13;

        $i55 = i#227 + stride;

        next#235 = block[$i55];

        $i57 = block[i#227];

        $i58 = prev#223 + next#235;

        $i59 = 217 * $i58;

        $i60 = $i59 + 2048;

        $i61 = $i60 >> 12;

        $i62 = $i57 + $i61;

        block[i#227] = $i62;

        prev#223 = next#235;

        i#227 = i#227 + stride2;

        goto label12;

     label13:
        $i64 = block[offset#15];

        $i65 = offset#15 + stride;

        $i66 = block[$i65];

        $i67 = 217 * $i66;

        $i68 = $i67 + 1024;

        $i69 = $i68 >> 11;

        $i70 = $i64 + $i69;

        block[offset#15] = $i70;

        prev#275 = block[offset#15];

        i#279 = offset#15 + stride;

     label14:
        if i#279 >= end goto label15;

        $i71 = i#279 + stride;

        next#287 = block[$i71];

        $i73 = block[i#279];

        $i74 = prev#275 + next#287;

        $i75 = 6497 * $i74;

        $i76 = $i75 + 2048;

        $i77 = $i76 >> 12;

        $i78 = $i73 + $i77;

        block[i#279] = $i78;

        prev#275 = next#287;

        i#279 = i#279 + stride2;

        goto label14;

     label15:
        $i79 = end + stride;

        $i80 = block[$i79];

        $i81 = block[end];

        $i82 = 6497 * $i81;

        $i83 = $i82 + 1024;

        $i84 = $i83 >> 11;

        $i85 = $i80 + $i84;

        block[$i79] = $i85;

        offset#15 = offset#15 + inc;

        goto label01;

     label16:
        return;
    }


