digraph getDensityBuckets {
"densities := @parameter0: java.util.List {842395237}" -> "srcDimension := @parameter1: java.awt.Dimension {1469133923}";
"srcDimension := @parameter1: java.awt.Dimension {1469133923}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {170757513}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {170757513}" -> "scale := @parameter3: float {604211191}";
"scale := @parameter3: float {604211191}" -> "isNinePatch := @parameter4: boolean {1695264821}";
"isNinePatch := @parameter4: boolean {1695264821}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {1252403468}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {1252403468}" -> "if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {968820303}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {968820303}" -> "$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {1486888141}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {968820303}" -> "$b0 = scale cmpl 0.0F {1529040346}";
"$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {1486888141}" -> "$d1 = $d0 - 2.0 {1051219669}";
"$d1 = $d0 - 2.0 {1051219669}" -> "$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {47573851}";
"$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {47573851}" -> "$d3 = $d2 - 2.0 {179550119}";
"$d3 = $d2 - 2.0 {179550119}" -> "virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {663820953}";
"virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {663820953}" -> "$b0 = scale cmpl 0.0F {1529040346}";
"$b0 = scale cmpl 0.0F {1529040346}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {2096974052}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {2096974052}" -> "if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1959383541}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1959383541}" -> "$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {223078924}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1959383541}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1915723737}";
"$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {223078924}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {963780527}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {963780527}" -> "if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1279732706}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1279732706}" -> "$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {1708101673}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1279732706}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1915723737}";
"$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {1708101673}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {140536567}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {140536567}" -> "if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {923143446}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {923143446}" -> "$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {1821497769}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {923143446}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1915723737}";
"$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {1821497769}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {2009182814}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {2009182814}" -> "if $z1 == 0 goto return null {1975931594}";
"if $z1 == 0 goto return null {1975931594}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1915723737}";
"if $z1 == 0 goto return null {1975931594}" -> "return null {1226392763}";
"$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1915723737}" -> "$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {186661864}";
"$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {186661864}" -> "$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {1287088196}";
"$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {1287088196}" -> "$i2 = $r1[$i1] {1114175324}";
"$i2 = $r1[$i1] {1114175324}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {124321612}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {124321612}" -> "tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1547128193}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1547128193}" -> "$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {552902068}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1547128193}" -> "$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {690583485}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {1547128193}" -> "$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1371325572}";
"$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {552902068}" -> "return $r3 {962298661}";
"$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {690583485}" -> "return $r4 {258217821}";
"$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1371325572}" -> "return $r5 {1878318519}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {2009182814}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {124321612}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {2096974052}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {1252403468}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {140536567}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {963780527}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getDensityBucketsWithFactorScale {
"densities := @parameter0: java.util.List {937688704}" -> "srcDimension := @parameter1: java.awt.Dimension {922649383}";
"srcDimension := @parameter1: java.awt.Dimension {922649383}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {2059584495}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {2059584495}" -> "scale := @parameter3: float {1890167363}";
"scale := @parameter3: float {1890167363}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {1912962068}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {1912962068}" -> "$d0 = (double) $i0 {1338194853}";
"$d0 = (double) $i0 {1338194853}" -> "$d1 = (double) scale {1901099036}";
"$d1 = (double) scale {1901099036}" -> "baseWidth = $d0 / $d1 {516599003}";
"baseWidth = $d0 / $d1 {516599003}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {134776296}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {134776296}" -> "$d2 = (double) $i1 {197497510}";
"$d2 = (double) $i1 {197497510}" -> "$d3 = (double) scale {1772044388}";
"$d3 = (double) scale {1772044388}" -> "baseHeight = $d2 / $d3 {1353249570}";
"baseHeight = $d2 / $d3 {1353249570}" -> "$r0 = new java.util.TreeMap {1126634803}";
"$r0 = new java.util.TreeMap {1126634803}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1289431184}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1289431184}" -> "bucketMap = $r0 {870878207}";
"bucketMap = $r0 {870878207}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {128514221}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {128514221}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {1735348619}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {1735348619}" -> "predicate = $r1 {372146824}";
"predicate = $r1 {372146824}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {1664332612}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {1664332612}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {2133199147}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {2133199147}" -> "consumer = $r2 {504800107}";
"consumer = $r2 {504800107}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1159694943}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1159694943}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {978531188}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {978531188}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1959011314}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1959011314}" -> "return bucketMap {1759196070}";
}

digraph getDensityBucketsHeightDpScale {
"densities := @parameter0: java.util.List {1985894920}" -> "srcDimension := @parameter1: java.awt.Dimension {48569217}";
"srcDimension := @parameter1: java.awt.Dimension {48569217}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1164918129}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1164918129}" -> "scale := @parameter3: float {120173175}";
"scale := @parameter3: float {120173175}" -> "$i0 = srcDimension.<java.awt.Dimension: int height> {1534753947}";
"$i0 = srcDimension.<java.awt.Dimension: int height> {1534753947}" -> "$f0 = (float) $i0 {434840785}";
"$f0 = (float) $i0 {434840785}" -> "scaleFactor = scale / $f0 {1592730200}";
"scaleFactor = scale / $f0 {1592730200}" -> "$i1 = srcDimension.<java.awt.Dimension: int width> {157442111}";
"$i1 = srcDimension.<java.awt.Dimension: int width> {157442111}" -> "$f1 = (float) $i1 {786253396}";
"$f1 = (float) $i1 {786253396}" -> "$f2 = scaleFactor * $f1 {106218663}";
"$f2 = scaleFactor * $f1 {106218663}" -> "$d0 = (double) $f2 {1504677238}";
"$d0 = (double) $f2 {1504677238}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {1129741796}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {1129741796}" -> "baseWidth = (int) $d1 {38603830}";
"baseWidth = (int) $d1 {38603830}" -> "$d2 = (double) scale {1578398913}";
"$d2 = (double) scale {1578398913}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {886243209}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {886243209}" -> "baseHeight = (int) $d3 {569518447}";
"baseHeight = (int) $d3 {569518447}" -> "$r0 = new java.util.TreeMap {41923695}";
"$r0 = new java.util.TreeMap {41923695}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {2072309946}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {2072309946}" -> "bucketMap = $r0 {875437606}";
"bucketMap = $r0 {875437606}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {995932119}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {995932119}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {773343414}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {773343414}" -> "predicate = $r1 {1478463371}";
"predicate = $r1 {1478463371}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {801679516}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {801679516}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {184507592}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {184507592}" -> "consumer = $r2 {436724338}";
"consumer = $r2 {436724338}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {781890980}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {781890980}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1630069691}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1630069691}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1502166018}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1502166018}" -> "return bucketMap {2002919016}";
}

digraph getDensityBucketsWithDpScale {
"densities := @parameter0: java.util.List {1970062686}" -> "srcDimension := @parameter1: java.awt.Dimension {972460341}";
"srcDimension := @parameter1: java.awt.Dimension {972460341}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1892136281}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1892136281}" -> "scale := @parameter3: float {1938075701}";
"scale := @parameter3: float {1938075701}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {1605278109}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {1605278109}" -> "$f0 = (float) $i0 {425262601}";
"$f0 = (float) $i0 {425262601}" -> "scaleFactor = scale / $f0 {2087181292}";
"scaleFactor = scale / $f0 {2087181292}" -> "$d0 = (double) scale {1738658569}";
"$d0 = (double) scale {1738658569}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {635165866}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {635165866}" -> "baseWidth = (int) $d1 {1779790177}";
"baseWidth = (int) $d1 {1779790177}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {1713321710}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {1713321710}" -> "$f1 = (float) $i1 {1710221197}";
"$f1 = (float) $i1 {1710221197}" -> "$f2 = scaleFactor * $f1 {1768786545}";
"$f2 = scaleFactor * $f1 {1768786545}" -> "$d2 = (double) $f2 {1535537242}";
"$d2 = (double) $f2 {1535537242}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1152488834}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1152488834}" -> "baseHeight = (int) $d3 {867125560}";
"baseHeight = (int) $d3 {867125560}" -> "$r0 = new java.util.TreeMap {2080036682}";
"$r0 = new java.util.TreeMap {2080036682}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {664802732}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {664802732}" -> "bucketMap = $r0 {1138930917}";
"bucketMap = $r0 {1138930917}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate {919551234}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate {919551234}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {1847703165}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {1847703165}" -> "predicate = $r1 {1677875903}";
"predicate = $r1 {1677875903}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer {917238346}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer {917238346}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1256097162}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1256097162}" -> "consumer = $r2 {345240724}";
"consumer = $r2 {345240724}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1980938002}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1980938002}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {237726119}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {237726119}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1372245752}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1372245752}" -> "return bucketMap {965021126}";
}


