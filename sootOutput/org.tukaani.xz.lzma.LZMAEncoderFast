    void <init>(org.tukaani.xz.rangecoder.RangeEncoder, int, int, int, int, int, int, int, int)
    {
        org.tukaani.xz.lzma.LZMAEncoderFast this;
        org.tukaani.xz.rangecoder.RangeEncoder rc;
        int lc, lp, pb, dictSize, extraSizeBefore, niceLen, mf, depthLimit, $i0;
        org.tukaani.xz.lz.LZEncoder $r0;

        this := @this: org.tukaani.xz.lzma.LZMAEncoderFast;

        rc := @parameter0: org.tukaani.xz.rangecoder.RangeEncoder;

        lc := @parameter1: int;

        lp := @parameter2: int;

        pb := @parameter3: int;

        dictSize := @parameter4: int;

        extraSizeBefore := @parameter5: int;

        niceLen := @parameter6: int;

        mf := @parameter7: int;

        depthLimit := @parameter8: int;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(extraSizeBefore, 1);

        $r0 = staticinvoke <org.tukaani.xz.lz.LZEncoder: org.tukaani.xz.lz.LZEncoder getInstance(int,int,int,int,int,int,int)>(dictSize, $i0, 272, niceLen, 273, mf, depthLimit);

        specialinvoke this.<org.tukaani.xz.lzma.LZMAEncoder: void <init>(org.tukaani.xz.rangecoder.RangeEncoder,org.tukaani.xz.lz.LZEncoder,int,int,int,int,int)>(rc, $r0, lc, lp, pb, dictSize, niceLen);

        this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches> = null;

        return;
    }

    int getNextSymbol()
    {
        org.tukaani.xz.lzma.LZMAEncoderFast this;
        int avail, len, newLen, newDist, limit, $i0, $i1, bestRepLen#18, bestRepIndex#20, rep#22, $i2, $i3, $i4, mainLen#50, mainDist#52, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, rep#230, $i40, $i41, $i42, $i43;
        org.tukaani.xz.lz.Matches $r0, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r32;
        org.tukaani.xz.lz.LZEncoder $r1, $r2, $r33;
        int[] $r3, $r6, $r9, $r13, $r16, $r20, $r23, $r28, $r31, $r34;
        boolean $z0, $z1, $z2;

        this := @this: org.tukaani.xz.lzma.LZMAEncoderFast;

        $i0 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: int readAhead>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != -1 goto label01;

        $r0 = virtualinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches getMatches()>();

        this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches> = $r0;

     label01:
        this.<org.tukaani.xz.lzma.LZMAEncoderFast: int back> = -1;

        $r1 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.LZEncoder lz>;

        $i1 = virtualinvoke $r1.<org.tukaani.xz.lz.LZEncoder: int getAvail()>();

        avail = staticinvoke <java.lang.Math: int min(int,int)>($i1, 273);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avail);

        if avail >= 2 goto label02;

        return 1;

     label02:
        bestRepLen#18 = 0;

        bestRepIndex#20 = 0;

        rep#22 = 0;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rep#22);

        if rep#22 >= 4 goto label07;

        $r2 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.LZEncoder lz>;

        $r3 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: int[] reps>;

        $i2 = $r3[rep#22];

        len = virtualinvoke $r2.<org.tukaani.xz.lz.LZEncoder: int getMatchLen(int,int)>($i2, avail);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if len >= 2 goto label04;

        goto label06;

     label04:
        $i3 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: int niceLen>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if len < $i3 goto label05;

        this.<org.tukaani.xz.lzma.LZMAEncoderFast: int back> = rep#22;

        $i4 = len - 1;

        virtualinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: void skip(int)>($i4);

        return len;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestRepLen#18);

        if len <= bestRepLen#18 goto label06;

        bestRepIndex#20 = rep#22;

        bestRepLen#18 = len;

     label06:
        rep#22 = rep#22 + 1;

        goto label03;

     label07:
        mainLen#50 = 0;

        mainDist#52 = 0;

        $r4 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i5 = $r4.<org.tukaani.xz.lz.Matches: int count>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 <= 0 goto label11;

        $r5 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r6 = $r5.<org.tukaani.xz.lz.Matches: int[] len>;

        $r7 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i6 = $r7.<org.tukaani.xz.lz.Matches: int count>;

        $i7 = $i6 - 1;

        mainLen#50 = $r6[$i7];

        $r8 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r9 = $r8.<org.tukaani.xz.lz.Matches: int[] dist>;

        $r10 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i8 = $r10.<org.tukaani.xz.lz.Matches: int count>;

        $i9 = $i8 - 1;

        mainDist#52 = $r9[$i9];

        $i10 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: int niceLen>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        if mainLen#50 < $i10 goto label08;

        $i11 = mainDist#52 + 4;

        this.<org.tukaani.xz.lzma.LZMAEncoderFast: int back> = $i11;

        $i12 = mainLen#50 - 1;

        virtualinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: void skip(int)>($i12);

        return mainLen#50;

     label08:
        $r11 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i13 = $r11.<org.tukaani.xz.lz.Matches: int count>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        if $i13 <= 1 goto label10;

        $r12 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r13 = $r12.<org.tukaani.xz.lz.Matches: int[] len>;

        $r14 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i14 = $r14.<org.tukaani.xz.lz.Matches: int count>;

        $i15 = $i14 - 2;

        $i16 = $r13[$i15];

        $i17 = $i16 + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        if mainLen#50 != $i17 goto label10;

        $r15 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r16 = $r15.<org.tukaani.xz.lz.Matches: int[] dist>;

        $r17 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i18 = $r17.<org.tukaani.xz.lz.Matches: int count>;

        $i19 = $i18 - 2;

        $i20 = $r16[$i19];

        $z0 = specialinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: boolean changePair(int,int)>($i20, mainDist#52);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label09;

        goto label10;

     label09:
        $r18 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i21 = $r18.<org.tukaani.xz.lz.Matches: int count>;

        $i22 = $i21 - 1;

        $r18.<org.tukaani.xz.lz.Matches: int count> = $i22;

        $r19 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r20 = $r19.<org.tukaani.xz.lz.Matches: int[] len>;

        $r21 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i23 = $r21.<org.tukaani.xz.lz.Matches: int count>;

        $i24 = $i23 - 1;

        mainLen#50 = $r20[$i24];

        $r22 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r23 = $r22.<org.tukaani.xz.lz.Matches: int[] dist>;

        $r24 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i25 = $r24.<org.tukaani.xz.lz.Matches: int count>;

        $i26 = $i25 - 1;

        mainDist#52 = $r23[$i26];

        goto label08;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if mainLen#50 != 2 goto label11;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainDist#52);

        if mainDist#52 < 128 goto label11;

        mainLen#50 = 1;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestRepLen#18);

        if bestRepLen#18 < 2 goto label14;

        $i27 = bestRepLen#18 + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i27);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if $i27 >= mainLen#50 goto label13;

        $i28 = bestRepLen#18 + 2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i28);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if $i28 < mainLen#50 goto label12;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainDist#52);

        if mainDist#52 >= 512 goto label13;

     label12:
        $i29 = bestRepLen#18 + 3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i29);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if $i29 < mainLen#50 goto label14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainDist#52);

        if mainDist#52 < 32768 goto label14;

     label13:
        this.<org.tukaani.xz.lzma.LZMAEncoderFast: int back> = bestRepIndex#20;

        $i30 = bestRepLen#18 - 1;

        virtualinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: void skip(int)>($i30);

        return bestRepLen#18;

     label14:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if mainLen#50 < 2 goto label15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(avail);

        if avail > 2 goto label16;

     label15:
        return 1;

     label16:
        $r25 = virtualinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches getMatches()>();

        this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches> = $r25;

        $r26 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i31 = $r26.<org.tukaani.xz.lz.Matches: int count>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i31);

        if $i31 <= 0 goto label20;

        $r27 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r28 = $r27.<org.tukaani.xz.lz.Matches: int[] len>;

        $r29 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i32 = $r29.<org.tukaani.xz.lz.Matches: int count>;

        $i33 = $i32 - 1;

        newLen = $r28[$i33];

        $r30 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $r31 = $r30.<org.tukaani.xz.lz.Matches: int[] dist>;

        $r32 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.Matches matches>;

        $i34 = $r32.<org.tukaani.xz.lz.Matches: int count>;

        $i35 = $i34 - 1;

        newDist = $r31[$i35];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newLen);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if newLen < mainLen#50 goto label17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newDist);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainDist#52);

        if newDist < mainDist#52 goto label19;

     label17:
        $i36 = mainLen#50 + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newLen);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i36);

        if newLen != $i36 goto label18;

        $z1 = specialinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: boolean changePair(int,int)>(mainDist#52, newDist);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label19;

     label18:
        $i37 = mainLen#50 + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newLen);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i37);

        if newLen > $i37 goto label19;

        $i38 = newLen + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i38);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if $i38 < mainLen#50 goto label20;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mainLen#50);

        if mainLen#50 < 3 goto label20;

        $z2 = specialinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: boolean changePair(int,int)>(newDist, mainDist#52);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label20;

     label19:
        return 1;

     label20:
        $i39 = mainLen#50 - 1;

        limit = staticinvoke <java.lang.Math: int max(int,int)>($i39, 2);

        rep#230 = 0;

     label21:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rep#230);

        if rep#230 >= 4 goto label23;

        $r33 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: org.tukaani.xz.lz.LZEncoder lz>;

        $r34 = this.<org.tukaani.xz.lzma.LZMAEncoderFast: int[] reps>;

        $i40 = $r34[rep#230];

        $i41 = virtualinvoke $r33.<org.tukaani.xz.lz.LZEncoder: int getMatchLen(int,int)>($i40, limit);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i41);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit);

        if $i41 != limit goto label22;

        return 1;

     label22:
        rep#230 = rep#230 + 1;

        goto label21;

     label23:
        $i42 = mainDist#52 + 4;

        this.<org.tukaani.xz.lzma.LZMAEncoderFast: int back> = $i42;

        $i43 = mainLen#50 - 2;

        virtualinvoke this.<org.tukaani.xz.lzma.LZMAEncoderFast: void skip(int)>($i43);

        return mainLen#50;
    }

    private boolean changePair(int, int)
    {
        org.tukaani.xz.lzma.LZMAEncoderFast this;
        int smallDist, bigDist, $i0;
        boolean $z0;

        this := @this: org.tukaani.xz.lzma.LZMAEncoderFast;

        smallDist := @parameter0: int;

        bigDist := @parameter1: int;

        $i0 = bigDist >>> 7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(smallDist);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if smallDist >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }


