    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 = class "berkeley/com/sleepycat/je/cleaner/DbFileSummaryMap";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: boolean $assertionsDisabled> = $z1;

        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHMAP_ENTRY_OVERHEAD>;

        $i1 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int LONG_OVERHEAD>;

        $i2 = $i0 + $i1;

        $i3 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int DBFILESUMMARY_OVERHEAD>;

        $i4 = $i2 + $i3;

        <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD> = $i4;

        return;
    }

    public void <init>(boolean)
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        boolean countParentMapEntry;
        java.util.HashMap $r0;
        int $i0, $i1, $i2, $i3;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        countParentMapEntry := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map> = $r0;

        $i0 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHMAP_OVERHEAD>;

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize> = $i0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(countParentMapEntry);

        if countParentMapEntry == 0 goto label1;

        $i1 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $i2 = <berkeley.com.sleepycat.je.dbi.MemoryBudget: int HASHMAP_ENTRY_OVERHEAD>;

        $i3 = $i1 + $i2;

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize> = $i3;

     label1:
        return;
    }

    public void init(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl env;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r0, $r1;
        int $i0;
        long $l1;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = virtualinvoke env.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()>();

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget> = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        $i0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateTreeAdminMemoryUsage(long)>($l1);

        return;
    }

    public berkeley.com.sleepycat.je.cleaner.DbFileSummary get(java.lang.Long, boolean, boolean, berkeley.com.sleepycat.je.log.FileManager)
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        java.lang.Long fileNum;
        boolean adjustMemBudget, checkResurrected, $z0, $z2, $z3, $z4, $z5, $z6;
        berkeley.com.sleepycat.je.log.FileManager fileManager;
        java.lang.Object oldVal, $r3;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r0, $r8;
        java.lang.AssertionError $r1, $r6, $r9;
        java.util.Map $r2, $r5;
        berkeley.com.sleepycat.je.cleaner.DbFileSummary summary#13, $r4;
        long $l0, $l1, $l3, $l8, $l9, $l10, $l12, $l13;
        byte $b2, $b11;
        int $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12, $r14;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        fileNum := @parameter0: java.lang.Long;

        adjustMemBudget := @parameter1: boolean;

        checkResurrected := @parameter2: boolean;

        fileManager := @parameter3: berkeley.com.sleepycat.je.log.FileManager;

        $z0 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label3;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(adjustMemBudget);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if adjustMemBudget == $z2 goto label3;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label3:
        $r2 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(fileNum);

        summary#13 = (berkeley.com.sleepycat.je.cleaner.DbFileSummary) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(summary#13);

        if summary#13 != null goto label7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(checkResurrected);

        if checkResurrected == 0 goto label4;

        $l0 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $l1 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: long getCurrentFileNum()>();

        $b2 = $l0 cmp $l1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 >= 0 goto label4;

        $l3 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $z3 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: boolean isFileValid(long)>($l3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label4;

        goto label7;

     label4:
        $r4 = new berkeley.com.sleepycat.je.cleaner.DbFileSummary;

        specialinvoke $r4.<berkeley.com.sleepycat.je.cleaner.DbFileSummary: void <init>()>();

        summary#13 = $r4;

        $r5 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map>;

        oldVal = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileNum, summary#13);

        $z4 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(oldVal);

        if oldVal == null goto label5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label5:
        $i4 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $i5 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD>;

        $i6 = $i4 + $i5;

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize> = $i6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(adjustMemBudget);

        if adjustMemBudget == 0 goto label6;

        $r8 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        $i7 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD>;

        $l8 = (long) $i7;

        virtualinvoke $r8.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateTreeAdminMemoryUsage(long)>($l8);

     label6:
        $z5 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(checkResurrected);

        if checkResurrected == 0 goto label7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fileManager);

        if fileManager == null goto label7;

        $l9 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $l10 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: long getCurrentFileNum()>();

        $b11 = $l9 cmp $l10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b11);

        if $b11 == 0 goto label7;

        $l12 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $z6 = virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: boolean isFileValid(long)>($l12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label7;

        $r9 = new java.lang.AssertionError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resurrected file: 0x");

        $l13 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r9;

     label7:
        return summary#13;
    }

    public long getMemorySize()
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        int $i0;
        long $l1;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        $i0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $l1 = (long) $i0;

        return $l1;
    }

    public java.util.Set entrySet()
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        java.util.Map $r0;
        java.util.Set $r1;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        return $r1;
    }

    public int size()
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        java.util.Map $r0;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        return $i0;
    }

    public void subtractFromMemoryBudget()
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r0, $r1;
        int $i0, $i1;
        long $l2;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        $i0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $i1 = 0 - $i0;

        $l2 = (long) $i1;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateTreeAdminMemoryUsage(long)>($l2);

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize> = 0;

     label1:
        return;
    }

    public boolean remove(java.lang.Long)
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        java.lang.Long fileNum;
        java.util.Map $r0;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r2;
        int $i0, $i1, $i3, $i4, $i5;
        long $l2;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        fileNum := @parameter0: java.lang.Long;

        $r0 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(fileNum);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $r2 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        $i0 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD>;

        $i1 = 0 - $i0;

        $l2 = (long) $i1;

        virtualinvoke $r2.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateTreeAdminMemoryUsage(long)>($l2);

        $i3 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $i4 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD>;

        $i5 = $i3 - $i4;

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize> = $i5;

        return 1;

     label1:
        return 0;
    }

    public void repair(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl env;
        java.lang.Long[] existingFiles;
        java.util.Iterator iter;
        java.lang.Long fileNum;
        berkeley.com.sleepycat.je.log.FileManager $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        berkeley.com.sleepycat.je.dbi.MemoryBudget $r4;
        long $l3;

        this := @this: berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap;

        env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = virtualinvoke env.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        existingFiles = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.FileManager: java.lang.Long[] getAllFileNumbers()>();

        $r1 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        iter = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        fileNum = (java.lang.Long) $r3;

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(existingFiles, fileNum);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 >= 0 goto label2;

        interfaceinvoke iter.<java.util.Iterator: void remove()>();

        $r4 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: berkeley.com.sleepycat.je.dbi.MemoryBudget budget>;

        $i1 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD>;

        $i2 = 0 - $i1;

        $l3 = (long) $i2;

        virtualinvoke $r4.<berkeley.com.sleepycat.je.dbi.MemoryBudget: void updateTreeAdminMemoryUsage(long)>($l3);

        $i4 = this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize>;

        $i5 = <berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int FILE_ENTRY_OVERHEAD>;

        $i6 = $i4 - $i5;

        this.<berkeley.com.sleepycat.je.cleaner.DbFileSummaryMap: int memSize> = $i6;

     label2:
        goto label1;

     label3:
        return;
    }


