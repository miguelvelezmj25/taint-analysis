    public void <init>(org.unix4j.sort.context.ExecutionContext, org.unix4j.sort.processor.LineProcessor, org.unix4j.sort.unix.sort.SortArguments)
    {
        org.unix4j.sort.unix.sort.CheckProcessor this;
        org.unix4j.sort.context.ExecutionContext context;
        org.unix4j.sort.processor.LineProcessor output;
        org.unix4j.sort.unix.sort.SortArguments arguments;

        this := @this: org.unix4j.sort.unix.sort.CheckProcessor;

        context := @parameter0: org.unix4j.sort.context.ExecutionContext;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        arguments := @parameter2: org.unix4j.sort.unix.sort.SortArguments;

        specialinvoke this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: void <init>(org.unix4j.sort.context.ExecutionContext,org.unix4j.sort.processor.LineProcessor,org.unix4j.sort.unix.sort.SortArguments)>(context, output, arguments);

        this.<org.unix4j.sort.unix.sort.CheckProcessor: org.unix4j.sort.line.Line lastLine> = null;

        return;
    }

    public void finish()
    {
        org.unix4j.sort.unix.sort.CheckProcessor this;
        org.unix4j.sort.processor.LineProcessor $r0;

        this := @this: org.unix4j.sort.unix.sort.CheckProcessor;

        $r0 = virtualinvoke this.<org.unix4j.sort.unix.sort.CheckProcessor: org.unix4j.sort.processor.LineProcessor getOutput()>();

        interfaceinvoke $r0.<org.unix4j.sort.processor.LineProcessor: void finish()>();

        return;
    }

    public void reset()
    {
        org.unix4j.sort.unix.sort.CheckProcessor this;

        this := @this: org.unix4j.sort.unix.sort.CheckProcessor;

        this.<org.unix4j.sort.unix.sort.CheckProcessor: org.unix4j.sort.line.Line lastLine> = null;

        return;
    }

    public boolean processLine(org.unix4j.sort.line.Line)
    {
        org.unix4j.sort.unix.sort.CheckProcessor this;
        org.unix4j.sort.line.Line line, $r0, $r2;
        java.util.Comparator $r1;
        int $i0;
        org.unix4j.sort.command.ExitValueException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        this := @this: org.unix4j.sort.unix.sort.CheckProcessor;

        line := @parameter0: org.unix4j.sort.line.Line;

        $r0 = this.<org.unix4j.sort.unix.sort.CheckProcessor: org.unix4j.sort.line.Line lastLine>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = virtualinvoke this.<org.unix4j.sort.unix.sort.CheckProcessor: java.util.Comparator getComparator()>();

        $r2 = this.<org.unix4j.sort.unix.sort.CheckProcessor: org.unix4j.sort.line.Line lastLine>;

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, line);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label1;

        $r3 = new org.unix4j.sort.command.ExitValueException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file is not sorted, line: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(line);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.unix4j.sort.command.ExitValueException: void <init>(java.lang.String,int)>($r7, 1);

        throw $r3;

     label1:
        this.<org.unix4j.sort.unix.sort.CheckProcessor: org.unix4j.sort.line.Line lastLine> = line;

        return 1;
    }


