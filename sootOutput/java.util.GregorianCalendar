    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        int[] $r1, $r2, $r3, $r4, $r5;
        sun.util.calendar.Gregorian $r6;

        $r0 = class "java/util/GregorianCalendar";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.util.GregorianCalendar: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (int)[12];

        $r1[0] = 31;

        $r1[1] = 28;

        $r1[2] = 31;

        $r1[3] = 30;

        $r1[4] = 31;

        $r1[5] = 30;

        $r1[6] = 31;

        $r1[7] = 31;

        $r1[8] = 30;

        $r1[9] = 31;

        $r1[10] = 30;

        $r1[11] = 31;

        <java.util.GregorianCalendar: int[] MONTH_LENGTH> = $r1;

        $r2 = newarray (int)[12];

        $r2[0] = 31;

        $r2[1] = 29;

        $r2[2] = 31;

        $r2[3] = 30;

        $r2[4] = 31;

        $r2[5] = 30;

        $r2[6] = 31;

        $r2[7] = 31;

        $r2[8] = 30;

        $r2[9] = 31;

        $r2[10] = 30;

        $r2[11] = 31;

        <java.util.GregorianCalendar: int[] LEAP_MONTH_LENGTH> = $r2;

        $r3 = newarray (int)[17];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 0;

        $r3[3] = 1;

        $r3[4] = 0;

        $r3[5] = 1;

        $r3[6] = 1;

        $r3[7] = 1;

        $r3[8] = 1;

        $r3[9] = 0;

        $r3[10] = 0;

        $r3[11] = 0;

        $r3[12] = 0;

        $r3[13] = 0;

        $r3[14] = 0;

        $r3[15] = -46800000;

        $r3[16] = 0;

        <java.util.GregorianCalendar: int[] MIN_VALUES> = $r3;

        $r4 = newarray (int)[17];

        $r4[0] = 1;

        $r4[1] = 292269054;

        $r4[2] = 11;

        $r4[3] = 52;

        $r4[4] = 4;

        $r4[5] = 28;

        $r4[6] = 365;

        $r4[7] = 7;

        $r4[8] = 4;

        $r4[9] = 1;

        $r4[10] = 11;

        $r4[11] = 23;

        $r4[12] = 59;

        $r4[13] = 59;

        $r4[14] = 999;

        $r4[15] = 50400000;

        $r4[16] = 1200000;

        <java.util.GregorianCalendar: int[] LEAST_MAX_VALUES> = $r4;

        $r5 = newarray (int)[17];

        $r5[0] = 1;

        $r5[1] = 292278994;

        $r5[2] = 11;

        $r5[3] = 53;

        $r5[4] = 6;

        $r5[5] = 31;

        $r5[6] = 366;

        $r5[7] = 7;

        $r5[8] = 6;

        $r5[9] = 1;

        $r5[10] = 11;

        $r5[11] = 23;

        $r5[12] = 59;

        $r5[13] = 59;

        $r5[14] = 999;

        $r5[15] = 50400000;

        $r5[16] = 7200000;

        <java.util.GregorianCalendar: int[] MAX_VALUES> = $r5;

        $r6 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.Gregorian getGregorianCalendar()>();

        <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal> = $r6;

        return;
    }

    public void <init>(java.util.TimeZone, java.util.Locale)
    {
        java.util.GregorianCalendar l0;
        java.util.TimeZone l1;
        java.util.Locale l2;
        sun.util.calendar.Gregorian $r0;
        sun.util.calendar.Gregorian$Date $r1;
        long $l0;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: java.util.TimeZone;

        l2 := @parameter1: java.util.Locale;

        specialinvoke l0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>(l1, l2);

        l0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        l0.<java.util.GregorianCalendar: long gregorianCutoverDate> = 577736L;

        l0.<java.util.GregorianCalendar: int gregorianCutoverYear> = 1582;

        l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian> = 1582;

        l0.<java.util.GregorianCalendar: long cachedFixedDate> = -9223372036854775808L;

        $r0 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $r1 = virtualinvoke $r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>(l1);

        l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke l0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l0);

        return;
    }

    protected void computeFields()
    {
        java.util.GregorianCalendar l0;
        int l2, l1#5, $i0, $i1, $i2;
        boolean $z0, $z1;
        sun.util.calendar.BaseCalendar $r0;
        java.lang.AssertionError $r1;

        l0 := @this: java.util.GregorianCalendar;

        $z0 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isPartiallyNormalized()>();

        if $z0 == 0 goto label3;

        l1#5 = virtualinvoke l0.<java.util.GregorianCalendar: int getSetStateFields()>();

        $i0 = l1#5 ^ -1;

        l2 = $i0 & 131071;

        if l2 != 0 goto label1;

        $r0 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        if $r0 != null goto label2;

     label1:
        $i1 = l1#5 & 98304;

        $i2 = specialinvoke l0.<java.util.GregorianCalendar: int computeFields(int,int)>(l2, $i1);

        l1#5 = l1#5 | $i2;

        $z1 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if l1#5 == 131071 goto label2;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        goto label4;

     label3:
        l1#5 = 131071;

        specialinvoke l0.<java.util.GregorianCalendar: int computeFields(int,int)>(l1#5, 0);

     label4:
        virtualinvoke l0.<java.util.GregorianCalendar: void setFieldsComputed(int)>(l1#5);

        return;
    }

    private int computeFields(int, int)
    {
        java.util.GregorianCalendar l0;
        int l1, l2, l11, l12, l20, l28, l29, l3#2, $i2, $i3, $i4, $i5, $i6, $i7, $i8, l7#75, $i14, l7#90, $i27, $i28, $i29, $i34, $i35, $i36, l9#198, $i40, $i41, l10#261, $i42, $i43, $i44, $i45, l13#294, $i46, $i47, l14#311, $i48, l14#320, $i49, $i50, $i51, $i52, $i53, $i54, l13#376, $i56, l16#392, $i59, l21#411, $i60, $i61, $i65, l22#438, l19#442, $i67, $i68, l22#462, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i79, l27#564, $i81, l24#580, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i93, $i95, $i98;
        java.util.TimeZone l4, $r50;
        int[] $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r61, $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, l19#401, $z7, $z8, $z9;
        sun.util.calendar.ZoneInfo $r2;
        long $l0, $l1, $l9, l5#71, $l10, $l11, l5#82, $l12, $l13, $l15, $l17, $l18, $l19, $l20, l5#115, $l21, $l23, $l25, $l30, $l31, $l33, $l37, $l38, l14#385, $l55, $l57, $l58, l17#399, $l62, $l64, $l66, l23#467, l25#471, l23#546, $l78, l25#559, $l80, $l82, l25#612, $l92, l27#623, $l94, $l96;
        byte $b16, l8#117, $b22, $b24, $b26, $b32, $b39, $b63, $b83, $b97;
        sun.util.calendar.BaseCalendar$Date $r11, $r14, $r15, $r16, $r17, $r24, $r25, $r26, $r27, $r30, $r34, $r35, $r37, $r38, $r42, $r45, $r53, $r54, $r57, $r58, $r59, $r60, $r63, $r65, $r68, $r69, $r70, $r72;
        java.lang.AssertionError $r12, $r18, $r39;
        sun.util.calendar.Gregorian $r13, $r23, $r33, $r36, $r67, l27#517, l23#616;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r28, $r29, $r31, $r40, $r41, $r43, $r44, $r46;
        java.lang.String $r32, $r47;
        sun.util.calendar.BaseCalendar $r48, $r64, $r66, l27#495, l27#505, l27#522, l23#576;
        sun.util.calendar.JulianCalendar $r49, $r52, $r71;
        sun.util.calendar.JulianCalendar$Date $r51;
        sun.util.calendar.Era l10#243, $r56;
        sun.util.calendar.Era[] $r55;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3#2 = 0;

        l4 = virtualinvoke l0.<java.util.GregorianCalendar: java.util.TimeZone getZone()>();

        $r0 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        if $r0 != null goto label01;

        $r1 = newarray (int)[2];

        l0.<java.util.GregorianCalendar: int[] zoneOffsets> = $r1;

     label01:
        if l2 == 98304 goto label03;

        $z0 = l4 instanceof sun.util.calendar.ZoneInfo;

        if $z0 == 0 goto label02;

        $r2 = (sun.util.calendar.ZoneInfo) l4;

        $l0 = l0.<java.util.GregorianCalendar: long time>;

        $r3 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        l3#2 = virtualinvoke $r2.<sun.util.calendar.ZoneInfo: int getOffsets(long,int[])>($l0, $r3);

        goto label03;

     label02:
        $l1 = l0.<java.util.GregorianCalendar: long time>;

        l3#2 = virtualinvoke l4.<java.util.TimeZone: int getOffset(long)>($l1);

        $r4 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i2 = virtualinvoke l4.<java.util.TimeZone: int getRawOffset()>();

        $r4[0] = $i2;

        $r5 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $r6 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i3 = $r6[0];

        $i4 = l3#2 - $i3;

        $r5[1] = $i4;

     label03:
        if l2 == 0 goto label06;

        $z1 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l2, 15);

        if $z1 == 0 goto label04;

        $r7 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i5 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(15);

        $r7[0] = $i5;

     label04:
        $z2 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l2, 16);

        if $z2 == 0 goto label05;

        $r8 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i6 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(16);

        $r8[1] = $i6;

     label05:
        $r9 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i7 = $r9[0];

        $r10 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i8 = $r10[1];

        l3#2 = $i7 + $i8;

     label06:
        $l9 = (long) l3#2;

        l5#71 = $l9 / 86400000L;

        l7#75 = l3#2 % 86400000;

        $l10 = l0.<java.util.GregorianCalendar: long time>;

        $l11 = $l10 / 86400000L;

        l5#82 = l5#71 + $l11;

        $l12 = l0.<java.util.GregorianCalendar: long time>;

        $l13 = $l12 % 86400000L;

        $i14 = (int) $l13;

        l7#90 = l7#75 + $i14;

        $l15 = (long) l7#90;

        $b16 = $l15 cmp 86400000L;

        if $b16 < 0 goto label07;

        $l17 = (long) l7#90;

        $l18 = $l17 - 86400000L;

        l7#90 = (int) $l18;

        l5#82 = l5#82 + 1L;

        goto label08;

     label07:
        if l7#90 >= 0 goto label08;

        $l19 = (long) l7#90;

        $l20 = $l19 + 86400000L;

        l7#90 = (int) $l20;

        l5#82 = l5#82 - 1L;

        goto label07;

     label08:
        l5#115 = l5#82 + 719163L;

        l8#117 = 1;

        $l21 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b22 = l5#115 cmp $l21;

        if $b22 < 0 goto label13;

        $z3 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z3 != 0 goto label09;

        $l23 = l0.<java.util.GregorianCalendar: long cachedFixedDate>;

        $b24 = $l23 cmp -9223372036854775808L;

        if $b24 == 0 goto label09;

        $r11 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $z4 = virtualinvoke $r11.<sun.util.calendar.BaseCalendar$Date: boolean isNormalized()>();

        if $z4 != 0 goto label09;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>("cache control: not normalized");

        throw $r12;

     label09:
        $z5 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z5 != 0 goto label10;

        $l25 = l0.<java.util.GregorianCalendar: long cachedFixedDate>;

        $b26 = $l25 cmp -9223372036854775808L;

        if $b26 == 0 goto label10;

        $r13 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $r14 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $i27 = virtualinvoke $r14.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $r15 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $i28 = virtualinvoke $r15.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        $r16 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $i29 = virtualinvoke $r16.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $r17 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $l30 = virtualinvoke $r13.<sun.util.calendar.Gregorian: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i27, $i28, $i29, $r17);

        $l31 = l0.<java.util.GregorianCalendar: long cachedFixedDate>;

        $b32 = $l30 cmp $l31;

        if $b32 == 0 goto label10;

        $r18 = new java.lang.AssertionError;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cache control: inconsictency, cachedFixedDate=");

        $l33 = l0.<java.util.GregorianCalendar: long cachedFixedDate>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l33);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", computed=");

        $r23 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $r24 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $i34 = virtualinvoke $r24.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $r25 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $i35 = virtualinvoke $r25.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        $r26 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $i36 = virtualinvoke $r26.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $r27 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $l37 = virtualinvoke $r23.<sun.util.calendar.Gregorian: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i34, $i35, $i36, $r27);

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l37);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", date=");

        $r30 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>($r32);

        throw $r18;

     label10:
        $l38 = l0.<java.util.GregorianCalendar: long cachedFixedDate>;

        $b39 = l5#115 cmp $l38;

        if $b39 == 0 goto label11;

        $r33 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $r34 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        virtualinvoke $r33.<sun.util.calendar.Gregorian: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>($r34, l5#115);

        l0.<java.util.GregorianCalendar: long cachedFixedDate> = l5#115;

     label11:
        $r35 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        l9#198 = virtualinvoke $r35.<sun.util.calendar.BaseCalendar$Date: int getYear()>();

        if l9#198 > 0 goto label12;

        l9#198 = 1 - l9#198;

        l8#117 = 0;

     label12:
        $r36 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys> = $r36;

        $r37 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate> = $r37;

        $z6 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z6 != 0 goto label15;

        $r38 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $i40 = virtualinvoke $r38.<sun.util.calendar.BaseCalendar$Date: int getDayOfWeek()>();

        if $i40 > 0 goto label15;

        $r39 = new java.lang.AssertionError;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dow=");

        $r42 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $i41 = virtualinvoke $r42.<sun.util.calendar.BaseCalendar$Date: int getDayOfWeek()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", date=");

        $r45 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.AssertionError: void <init>(java.lang.Object)>($r47);

        throw $r39;

     label13:
        $r48 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys> = $r48;

        $r49 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        $r50 = virtualinvoke l0.<java.util.GregorianCalendar: java.util.TimeZone getZone()>();

        $r51 = virtualinvoke $r49.<sun.util.calendar.JulianCalendar: sun.util.calendar.JulianCalendar$Date newCalendarDate(java.util.TimeZone)>($r50);

        l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate> = $r51;

        $r52 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        $r53 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        virtualinvoke $r52.<sun.util.calendar.JulianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>($r53, l5#115);

        $r54 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l10#243 = virtualinvoke $r54.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.Era getEra()>();

        $r55 = <java.util.GregorianCalendar: sun.util.calendar.Era[] jeras>;

        $r56 = $r55[0];

        if l10#243 != $r56 goto label14;

        l8#117 = 0;

     label14:
        $r57 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l9#198 = virtualinvoke $r57.<sun.util.calendar.BaseCalendar$Date: int getYear()>();

     label15:
        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(0, l8#117);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(1, l9#198);

        l10#261 = l1 | 3;

        $r58 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $i42 = virtualinvoke $r58.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        l11 = $i42 - 1;

        $r59 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l12 = virtualinvoke $r59.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $i43 = l1 & 164;

        if $i43 == 0 goto label16;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(2, l11);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(5, l12);

        $r60 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $i44 = virtualinvoke $r60.<sun.util.calendar.BaseCalendar$Date: int getDayOfWeek()>();

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(7, $i44);

        l10#261 = l10#261 | 164;

     label16:
        $i45 = l1 & 32256;

        if $i45 == 0 goto label19;

        if l7#90 == 0 goto label17;

        l13#294 = l7#90 / 3600000;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(11, l13#294);

        $i46 = l13#294 / 12;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(9, $i46);

        $i47 = l13#294 % 12;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(10, $i47);

        l14#311 = l7#90 % 3600000;

        $i48 = l14#311 / 60000;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(12, $i48);

        l14#320 = l14#311 % 60000;

        $i49 = l14#320 / 1000;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(13, $i49);

        $i50 = l14#320 % 1000;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(14, $i50);

        goto label18;

     label17:
        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(11, 0);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(9, 0);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(10, 0);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(12, 0);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(13, 0);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(14, 0);

     label18:
        l10#261 = l10#261 | 32256;

     label19:
        $i51 = l1 & 98304;

        if $i51 == 0 goto label20;

        $r61 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i52 = $r61[0];

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(15, $i52);

        $r62 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i53 = $r62[1];

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(16, $i53);

        l10#261 = l10#261 | 98304;

     label20:
        $i54 = l1 & 344;

        if $i54 == 0 goto label41;

        $r63 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l13#376 = virtualinvoke $r63.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $r64 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r65 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l14#385 = virtualinvoke $r64.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l13#376, 1, 1, $r65);

        $l55 = l5#115 - l14#385;

        $i56 = (int) $l55;

        l16#392 = $i56 + 1;

        $l57 = (long) l12;

        $l58 = l5#115 - $l57;

        l17#399 = $l58 + 1L;

        l19#401 = 0;

        $r66 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r67 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if $r66 != $r67 goto label21;

        $i59 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        goto label22;

     label21:
        $i59 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

     label22:
        l20 = $i59;

        l21#411 = l12 - 1;

        if l13#376 != l20 goto label24;

        $i60 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        $i61 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if $i60 > $i61 goto label23;

        $r68 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l14#385 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDateJan1(sun.util.calendar.BaseCalendar$Date,long)>($r68, l5#115);

        $l62 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b63 = l5#115 cmp $l62;

        if $b63 < 0 goto label23;

        $r69 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l17#399 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long)>($r69, l5#115);

     label23:
        $l64 = l5#115 - l14#385;

        $i65 = (int) $l64;

        l22#438 = $i65 + 1;

        l19#442 = l16#392 - l22#438;

        l16#392 = l22#438;

        $l66 = l5#115 - l17#399;

        l21#411 = (int) $l66;

     label24:
        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(6, l16#392);

        $i67 = l21#411 / 7;

        $i68 = $i67 + 1;

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(8, $i68);

        l22#462 = specialinvoke l0.<java.util.GregorianCalendar: int getWeekNumber(long,long)>(l14#385, l5#115);

        if l22#462 != 0 goto label30;

        l23#467 = l14#385 - 1L;

        l25#471 = l14#385 - 365L;

        $i69 = l20 + 1;

        if l13#376 <= $i69 goto label25;

        $i70 = l13#376 - 1;

        $z7 = staticinvoke <sun.util.calendar.CalendarUtils: boolean isGregorianLeapYear(int)>($i70);

        if $z7 == 0 goto label29;

        l25#471 = l25#471 - 1L;

        goto label29;

     label25:
        $i71 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l13#376 > $i71 goto label26;

        $i72 = l13#376 - 1;

        $z8 = staticinvoke <sun.util.calendar.CalendarUtils: boolean isJulianLeapYear(int)>($i72);

        if $z8 == 0 goto label29;

        l25#471 = l25#471 - 1L;

        goto label29;

     label26:
        l27#495 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r70 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>(l23#467);

        l28 = virtualinvoke $r70.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i73 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l28 != $i73 goto label28;

        l27#505 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getCutoverCalendarSystem()>();

        $r71 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        if l27#505 != $r71 goto label27;

        l25#471 = virtualinvoke l27#505.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l28, 1, 1, null);

        goto label29;

     label27:
        l25#471 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        l27#517 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        goto label29;

     label28:
        $i74 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l28 > $i74 goto label29;

        l27#522 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        l25#471 = virtualinvoke l27#522.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l28, 1, 1, null);

     label29:
        l22#462 = specialinvoke l0.<java.util.GregorianCalendar: int getWeekNumber(long,long)>(l25#471, l23#467);

        goto label40;

     label30:
        $i75 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l13#376 > $i75 goto label31;

        $i76 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        $i77 = $i76 - 1;

        if l13#376 >= $i77 goto label34;

     label31:
        if l22#462 < 52 goto label40;

        l23#546 = l14#385 + 365L;

        $r72 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $z9 = virtualinvoke $r72.<sun.util.calendar.BaseCalendar$Date: boolean isLeapYear()>();

        if $z9 == 0 goto label32;

        l23#546 = l23#546 + 1L;

     label32:
        $l78 = l23#546 + 6L;

        $i79 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l25#559 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l78, $i79);

        $l80 = l25#559 - l23#546;

        l27#564 = (int) $l80;

        $i81 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if l27#564 < $i81 goto label33;

        $l82 = l25#559 - 7L;

        $b83 = l5#115 cmp $l82;

        if $b83 < 0 goto label33;

        l22#462 = 1;

     label33:
        goto label40;

     label34:
        l23#576 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        l24#580 = l13#376 + 1;

        $i84 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        $i85 = $i84 + 1;

        if l24#580 != $i85 goto label35;

        $i86 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l24#580 >= $i86 goto label35;

        l24#580 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

     label35:
        $i87 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l24#580 != $i87 goto label36;

        l23#576 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getCutoverCalendarSystem()>();

     label36:
        $i88 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l24#580 > $i88 goto label37;

        $i89 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        $i90 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if $i89 == $i90 goto label37;

        $i91 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l24#580 != $i91 goto label38;

     label37:
        l25#612 = virtualinvoke l23#576.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l24#580, 1, 1, null);

        goto label39;

     label38:
        l25#612 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        l23#616 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

     label39:
        $l92 = l25#612 + 6L;

        $i93 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l27#623 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l92, $i93);

        $l94 = l27#623 - l25#612;

        l29 = (int) $l94;

        $i95 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if l29 < $i95 goto label40;

        $l96 = l27#623 - 7L;

        $b97 = l5#115 cmp $l96;

        if $b97 < 0 goto label40;

        l22#462 = 1;

     label40:
        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(3, l22#462);

        $i98 = specialinvoke l0.<java.util.GregorianCalendar: int getWeekNumber(long,long)>(l17#399, l5#115);

        virtualinvoke l0.<java.util.GregorianCalendar: void internalSet(int,int)>(4, $i98);

        l10#261 = l10#261 | 344;

     label41:
        return l10#261;
    }

    private static synchronized sun.util.calendar.BaseCalendar getJulianCalendarSystem()
    {
        sun.util.calendar.JulianCalendar $r0, $r2, $r3, $r5;
        sun.util.calendar.CalendarSystem $r1;
        sun.util.calendar.Era[] $r4;

        $r0 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>("julian");

        $r2 = (sun.util.calendar.JulianCalendar) $r1;

        <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal> = $r2;

        $r3 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        $r4 = virtualinvoke $r3.<sun.util.calendar.JulianCalendar: sun.util.calendar.Era[] getEras()>();

        <java.util.GregorianCalendar: sun.util.calendar.Era[] jeras> = $r4;

     label1:
        $r5 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        return $r5;
    }

    private long getFixedDateJan1(sun.util.calendar.BaseCalendar$Date, long)
    {
        java.util.GregorianCalendar l0;
        sun.util.calendar.BaseCalendar$Date l1;
        long l2, $l6, $l8, $l10;
        sun.util.calendar.BaseCalendar l4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9;
        java.lang.AssertionError $r0;
        byte $b7;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: sun.util.calendar.BaseCalendar$Date;

        l2 := @parameter1: long;

        $z0 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if $i0 == $i1 goto label1;

        $i2 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i3 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i2 == $i3 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $i4 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i5 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i4 == $i5 goto label2;

        $l6 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b7 = l2 cmp $l6;

        if $b7 < 0 goto label2;

        $l8 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        return $l8;

     label2:
        l4 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        $i9 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $l10 = virtualinvoke l4.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i9, 1, 1, null);

        return $l10;
    }

    private long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date, long)
    {
        java.util.GregorianCalendar l0;
        sun.util.calendar.BaseCalendar$Date l1, l4, l7;
        long l2, $l7, $l8, $l9, l5#47, $l19, $l20;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.AssertionError $r0;
        sun.util.calendar.JulianCalendar $r1;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: sun.util.calendar.BaseCalendar$Date;

        l2 := @parameter1: long;

        $z0 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if $i0 == $i1 goto label1;

        $i2 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i3 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i2 == $i3 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        l4 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getGregorianCutoverDate()>();

        $i4 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        if $i4 != 1 goto label2;

        $i5 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        if $i5 != 1 goto label2;

        $i6 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $l7 = (long) $i6;

        $l8 = l2 - $l7;

        $l9 = $l8 + 1L;

        return $l9;

     label2:
        $i10 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        $i11 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        if $i10 != $i11 goto label5;

        l7 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getLastJulianDate()>();

        $i12 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i13 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i12 != $i13 goto label3;

        $i14 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        $i15 = virtualinvoke l7.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        if $i14 != $i15 goto label3;

        $r1 = <java.util.GregorianCalendar: sun.util.calendar.JulianCalendar jcal>;

        $i16 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i17 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        l5#47 = virtualinvoke $r1.<sun.util.calendar.JulianCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i16, $i17, 1, null);

        goto label4;

     label3:
        l5#47 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

     label4:
        goto label6;

     label5:
        $i18 = virtualinvoke l1.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $l19 = (long) $i18;

        $l20 = l2 - $l19;

        l5#47 = $l20 + 1L;

     label6:
        return l5#47;
    }

    private int getWeekNumber(long, long)
    {
        java.util.GregorianCalendar l0;
        long l1, l3, $l0, l5#7, $l2, $l4;
        int l7, l8, $i1, $i3, $i5, $i6, $i7, $i8;
        boolean $z0;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: long;

        l3 := @parameter1: long;

        $l0 = l1 + 6L;

        $i1 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l5#7 = staticinvoke <sun.util.calendar.Gregorian: long getDayOfWeekDateOnOrBefore(long,int)>($l0, $i1);

        $l2 = l5#7 - l1;

        l7 = (int) $l2;

        $z0 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if l7 <= 7 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $i3 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if l7 < $i3 goto label2;

        l5#7 = l5#7 - 7L;

     label2:
        $l4 = l3 - l5#7;

        l8 = (int) $l4;

        if l8 < 0 goto label3;

        $i5 = l8 / 7;

        $i6 = $i5 + 1;

        return $i6;

     label3:
        $i7 = staticinvoke <sun.util.calendar.CalendarUtils: int floorDivide(int,int)>(l8, 7);

        $i8 = $i7 + 1;

        return $i8;
    }

    private sun.util.calendar.BaseCalendar$Date getCalendarDate(long)
    {
        java.util.GregorianCalendar l0;
        long l1, $l0;
        java.lang.Object l3, $r0;
        sun.util.calendar.BaseCalendar$Date l4;
        byte $b1;
        java.util.TimeZone $r1;
        sun.util.calendar.CalendarDate $r2;
        sun.util.calendar.BaseCalendar tmp$1875319321, tmp$508236419;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: long;

        $l0 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b1 = l1 cmp $l0;

        if $b1 < 0 goto label1;

        $r0 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        goto label2;

     label1:
        $r0 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

     label2:
        l3 = $r0;

        $r1 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        tmp$1875319321 = (sun.util.calendar.BaseCalendar) l3;

        $r2 = virtualinvoke tmp$1875319321.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>($r1);

        l4 = (sun.util.calendar.BaseCalendar$Date) $r2;

        tmp$508236419 = (sun.util.calendar.BaseCalendar) l3;

        virtualinvoke tmp$508236419.<sun.util.calendar.BaseCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(l4, l1);

        return l4;
    }

    private sun.util.calendar.BaseCalendar getCutoverCalendarSystem()
    {
        java.util.GregorianCalendar l0;
        int $i0, $i1;
        sun.util.calendar.Gregorian $r0;
        sun.util.calendar.BaseCalendar $r1;

        l0 := @this: java.util.GregorianCalendar;

        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if $i0 >= $i1 goto label1;

        $r0 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        return $r0;

     label1:
        $r1 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        return $r1;
    }

    private sun.util.calendar.BaseCalendar$Date getGregorianCutoverDate()
    {
        java.util.GregorianCalendar l0;
        long $l0;
        sun.util.calendar.BaseCalendar$Date $r0;

        l0 := @this: java.util.GregorianCalendar;

        $l0 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $r0 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>($l0);

        return $r0;
    }

    private sun.util.calendar.BaseCalendar$Date getLastJulianDate()
    {
        java.util.GregorianCalendar l0;
        long $l0, $l1;
        sun.util.calendar.BaseCalendar$Date $r0;

        l0 := @this: java.util.GregorianCalendar;

        $l0 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $l1 = $l0 - 1L;

        $r0 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>($l1);

        return $r0;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.util.GregorianCalendar l0;
        java.util.TimeZone l1;
        sun.util.calendar.BaseCalendar$Date $r0, $r2, $r3, $r4, $r5;

        l0 := @this: java.util.GregorianCalendar;

        l1 = specialinvoke l0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r0 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        virtualinvoke $r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(l1);

        $r2 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        if $r2 == null goto label1;

        $r3 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r4 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        if $r3 == $r4 goto label1;

        $r5 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        virtualinvoke $r5.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(l1);

     label1:
        return l1;
    }

    protected void computeTime()
    {
        java.util.GregorianCalendar l0;
        int l3, l11, l1#9, l2#15, $i0, $i1, l1#37, $i2, l2#44, $i3, $i5, $i7, $i8, $i10, $i12, $i14, $i17, $i18, $i23, $i24, $i30, $i31, $i32, $i42, l12#283, $i46, $i47, $i48, $i49, $i50, $i52, $i53, l12#333, l13#337, $i54, $i55, $i56, $i57, $i58;
        java.lang.String l14, $r3, $r35, $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        int[] $r0, $r1, $r4, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r30, $r31, $r32;
        java.lang.IllegalArgumentException $r2, $r5, $r14, $r33;
        long l4#66, $l4, l4#76, $l6, $l9, l4#97, $l11, l4#104, l4#108, $l13, l4#115, l4#119, $l15, l4#126, l6#130, l4#134, $l19, l8#157, $l20, l6#163, $l22, l10#171, $l25, $l26, $l28, $l29, $l33, $l35, $l37, $l39, $l40, l8#254, $l43, $l44, $l51, l8#323;
        byte $b16, $b21, $b27, $b34, $b36, $b38;
        sun.util.calendar.Gregorian $r6, $r10, $r12;
        sun.util.calendar.BaseCalendar $r7, $r8, $r9, $r11, $r13;
        java.util.TimeZone l10#257;
        sun.util.calendar.ZoneInfo $r17;
        java.lang.StringBuilder $r25, $r27, $r28, $r29, $r34, $r36, $r37, $r38;

        l0 := @this: java.util.GregorianCalendar;

        $z0 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z0 != 0 goto label05;

        $r0 = l0.<java.util.GregorianCalendar: int[] originalFields>;

        if $r0 != null goto label01;

        $r1 = newarray (int)[17];

        l0.<java.util.GregorianCalendar: int[] originalFields> = $r1;

     label01:
        l1#9 = 0;

     label02:
        if l1#9 >= 17 goto label05;

        l2#15 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(l1#9);

        $z1 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isExternallySet(int)>(l1#9);

        if $z1 == 0 goto label04;

        $i0 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimum(int)>(l1#9);

        if l2#15 < $i0 goto label03;

        $i1 = virtualinvoke l0.<java.util.GregorianCalendar: int getMaximum(int)>(l1#9);

        if l2#15 <= $i1 goto label04;

     label03:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <java.util.GregorianCalendar: java.lang.String getFieldName(int)>(l1#9);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label04:
        $r4 = l0.<java.util.GregorianCalendar: int[] originalFields>;

        $r4[l1#9] = l2#15;

        l1#9 = l1#9 + 1;

        goto label02;

     label05:
        l1#37 = virtualinvoke l0.<java.util.GregorianCalendar: int selectFields()>();

        $z2 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isSet(int)>(1);

        if $z2 == 0 goto label06;

        $i2 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(1);

        goto label07;

     label06:
        $i2 = 1970;

     label07:
        l2#44 = $i2;

        l3 = specialinvoke l0.<java.util.GregorianCalendar: int internalGetEra()>();

        if l3 != 0 goto label08;

        l2#44 = 1 - l2#44;

        goto label09;

     label08:
        if l3 == 1 goto label09;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid era");

        throw $r5;

     label09:
        if l2#44 > 0 goto label10;

        $z3 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isSet(int)>(0);

        if $z3 != 0 goto label10;

        l1#37 = l1#37 | 1;

        virtualinvoke l0.<java.util.GregorianCalendar: void setFieldsComputed(int)>(1);

     label10:
        l4#66 = 0L;

        $z4 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l1#37, 11);

        if $z4 == 0 goto label11;

        $i3 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(11);

        $l4 = (long) $i3;

        l4#76 = l4#66 + $l4;

        goto label12;

     label11:
        $i5 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(10);

        $l6 = (long) $i5;

        l4#76 = l4#66 + $l6;

        $z5 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l1#37, 9);

        if $z5 == 0 goto label12;

        $i7 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(9);

        $i8 = 12 * $i7;

        $l9 = (long) $i8;

        l4#76 = l4#76 + $l9;

     label12:
        l4#97 = l4#76 * 60L;

        $i10 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(12);

        $l11 = (long) $i10;

        l4#104 = l4#97 + $l11;

        l4#108 = l4#104 * 60L;

        $i12 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(13);

        $l13 = (long) $i12;

        l4#115 = l4#108 + $l13;

        l4#119 = l4#115 * 1000L;

        $i14 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(14);

        $l15 = (long) $i14;

        l4#126 = l4#119 + $l15;

        l6#130 = l4#126 / 86400000L;

        l4#134 = l4#126 % 86400000L;

     label13:
        $b16 = l4#134 cmp 0L;

        if $b16 >= 0 goto label14;

        l4#134 = l4#134 + 86400000L;

        l6#130 = l6#130 - 1L;

        goto label13;

     label14:
        $i17 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l2#44 <= $i17 goto label16;

        $i18 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l2#44 <= $i18 goto label16;

        $r6 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $l19 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDate(sun.util.calendar.BaseCalendar,int,int)>($r6, l2#44, l1#37);

        l8#157 = l6#130 + $l19;

        $l20 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b21 = l8#157 cmp $l20;

        if $b21 < 0 goto label15;

        l6#163 = l8#157;

        goto label29;

     label15:
        $r7 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        $l22 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDate(sun.util.calendar.BaseCalendar,int,int)>($r7, l2#44, l1#37);

        l10#171 = l6#130 + $l22;

        goto label19;

     label16:
        $i23 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l2#44 >= $i23 goto label18;

        $i24 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l2#44 >= $i24 goto label18;

        $r8 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        $l25 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDate(sun.util.calendar.BaseCalendar,int,int)>($r8, l2#44, l1#37);

        l10#171 = l6#130 + $l25;

        $l26 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b27 = l10#171 cmp $l26;

        if $b27 >= 0 goto label17;

        l6#163 = l10#171;

        goto label29;

     label17:
        l8#157 = l10#171;

        goto label19;

     label18:
        $r9 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

        $l28 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDate(sun.util.calendar.BaseCalendar,int,int)>($r9, l2#44, l1#37);

        l10#171 = l6#130 + $l28;

        $r10 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $l29 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDate(sun.util.calendar.BaseCalendar,int,int)>($r10, l2#44, l1#37);

        l8#157 = l6#130 + $l29;

     label19:
        $z6 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l1#37, 6);

        if $z6 != 0 goto label20;

        $z7 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l1#37, 3);

        if $z7 == 0 goto label22;

     label20:
        $i30 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i31 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i30 != $i31 goto label21;

        l6#163 = l10#171;

        goto label29;

     label21:
        $i32 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l2#44 != $i32 goto label22;

        l6#163 = l8#157;

        goto label29;

     label22:
        $l33 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b34 = l8#157 cmp $l33;

        if $b34 < 0 goto label26;

        $l35 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b36 = l10#171 cmp $l35;

        if $b36 < 0 goto label23;

        l6#163 = l8#157;

        goto label29;

     label23:
        $r11 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r12 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if $r11 == $r12 goto label24;

        $r13 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        if $r13 != null goto label25;

     label24:
        l6#163 = l8#157;

        goto label29;

     label25:
        l6#163 = l10#171;

        goto label29;

     label26:
        $l37 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b38 = l10#171 cmp $l37;

        if $b38 >= 0 goto label27;

        l6#163 = l10#171;

        goto label29;

     label27:
        $z8 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z8 != 0 goto label28;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("the specified date doesn\'t exist");

        throw $r14;

     label28:
        l6#163 = l10#171;

     label29:
        $l39 = l6#163 - 719163L;

        $l40 = $l39 * 86400000L;

        l8#254 = $l40 + l4#134;

        l10#257 = virtualinvoke l0.<java.util.GregorianCalendar: java.util.TimeZone getZone()>();

        $r15 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        if $r15 != null goto label30;

        $r16 = newarray (int)[2];

        l0.<java.util.GregorianCalendar: int[] zoneOffsets> = $r16;

     label30:
        l11 = l1#37 & 98304;

        if l11 == 98304 goto label34;

        $z9 = l10#257 instanceof sun.util.calendar.ZoneInfo;

        if $z9 == 0 goto label31;

        $r17 = (sun.util.calendar.ZoneInfo) l10#257;

        $r18 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        virtualinvoke $r17.<sun.util.calendar.ZoneInfo: int getOffsetsByWall(long,int[])>(l8#254, $r18);

        goto label34;

     label31:
        $z10 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l1#37, 15);

        if $z10 == 0 goto label32;

        $i42 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(15);

        goto label33;

     label32:
        $i42 = virtualinvoke l10#257.<java.util.TimeZone: int getRawOffset()>();

     label33:
        l12#283 = $i42;

        $l43 = (long) l12#283;

        $l44 = l8#254 - $l43;

        $r19 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        virtualinvoke l10#257.<java.util.TimeZone: int getOffsets(long,int[])>($l44, $r19);

     label34:
        if l11 == 0 goto label36;

        $z11 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l11, 15);

        if $z11 == 0 goto label35;

        $r20 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i46 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(15);

        $r20[0] = $i46;

     label35:
        $z12 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l11, 16);

        if $z12 == 0 goto label36;

        $r21 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i47 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(16);

        $r21[1] = $i47;

     label36:
        $r22 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i48 = $r22[0];

        $r23 = l0.<java.util.GregorianCalendar: int[] zoneOffsets>;

        $i49 = $r23[1];

        $i50 = $i48 + $i49;

        $l51 = (long) $i50;

        l8#323 = l8#254 - $l51;

        l0.<java.util.GregorianCalendar: long time> = l8#323;

        $i52 = virtualinvoke l0.<java.util.GregorianCalendar: int getSetStateFields()>();

        $i53 = l1#37 | $i52;

        l12#333 = specialinvoke l0.<java.util.GregorianCalendar: int computeFields(int,int)>($i53, l11);

        $z13 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z13 != 0 goto label40;

        l13#337 = 0;

     label37:
        if l13#337 >= 17 goto label40;

        $z14 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isExternallySet(int)>(l13#337);

        if $z14 != 0 goto label38;

        goto label39;

     label38:
        $r24 = l0.<java.util.GregorianCalendar: int[] originalFields>;

        $i54 = $r24[l13#337];

        $i55 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(l13#337);

        if $i54 == $i55 goto label39;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = l0.<java.util.GregorianCalendar: int[] originalFields>;

        $i56 = $r26[l13#337];

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i56);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $i57 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(l13#337);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i57);

        l14 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = l0.<java.util.GregorianCalendar: int[] originalFields>;

        $r31 = l0.<java.util.GregorianCalendar: int[] fields>;

        $r32 = l0.<java.util.GregorianCalendar: int[] fields>;

        $i58 = lengthof $r32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, 0, $r31, 0, $i58);

        $r33 = new java.lang.IllegalArgumentException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = staticinvoke <java.util.GregorianCalendar: java.lang.String getFieldName(int)>(l13#337);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l14);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r39);

        throw $r33;

     label39:
        l13#337 = l13#337 + 1;

        goto label37;

     label40:
        virtualinvoke l0.<java.util.GregorianCalendar: void setFieldsNormalized(int)>(l12#333);

        return;
    }

    public int getMinimum(int)
    {
        java.util.GregorianCalendar l0;
        int l1, $i0;
        int[] $r0;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        $r0 = <java.util.GregorianCalendar: int[] MIN_VALUES>;

        $i0 = $r0[l1];

        return $i0;
    }

    public int getMaximum(int)
    {
        java.util.GregorianCalendar l0, l2;
        int l1, l3, l4, $i0, $i4, $i5, $i6, $i7;
        java.lang.Object $r0;
        long $l1, $l2, $l3;
        int[] $r1, $r2;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        tableswitch(l1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label3;
            case 8: goto label1;
            default: goto label3;
        };

     label1:
        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if $i0 <= 200 goto label2;

        goto label3;

     label2:
        $r0 = virtualinvoke l0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l2 = (java.util.GregorianCalendar) $r0;

        virtualinvoke l2.<java.util.GregorianCalendar: void setLenient(boolean)>(1);

        $l1 = l0.<java.util.GregorianCalendar: long gregorianCutover>;

        virtualinvoke l2.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l1);

        l3 = virtualinvoke l2.<java.util.GregorianCalendar: int getActualMaximum(int)>(l1);

        $l2 = l0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l3 = $l2 - 1L;

        virtualinvoke l2.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l3);

        l4 = virtualinvoke l2.<java.util.GregorianCalendar: int getActualMaximum(int)>(l1);

        $r1 = <java.util.GregorianCalendar: int[] MAX_VALUES>;

        $i4 = $r1[l1];

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(l3, l4);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        return $i6;

     label3:
        $r2 = <java.util.GregorianCalendar: int[] MAX_VALUES>;

        $i7 = $r2[l1];

        return $i7;
    }

    private int internalGetEra()
    {
        java.util.GregorianCalendar l0;
        boolean $z0;
        int $i0;

        l0 := @this: java.util.GregorianCalendar;

        $z0 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isSet(int)>(0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(0);

        goto label2;

     label1:
        $i0 = 1;

     label2:
        return $i0;
    }

    private long getFixedDate(sun.util.calendar.BaseCalendar, int, int)
    {
        java.util.GregorianCalendar l0;
        sun.util.calendar.BaseCalendar l1;
        int l3, l2#1, l4#3, $i0, $i1, $i2, $i3, $i5, $i8, $i10, $i14, $i15, $i16, $i17, l7#110, l8#119, $i19, $i23, $i24, $i25, l9#142, $i29, $i32, $i33, $i34, $i37, $i39, l9#202, $i42, $i44;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int[] l5#23;
        sun.util.calendar.Gregorian $r1, $r3;
        sun.util.calendar.BaseCalendar$Date $r2;
        long l5#44, $l6, l5#60, $l7, l7#73, $l9, $l11, $l13, $l18, $l20, $l21, $l22, $l26, $l27, $l28, $l30, $l35, l5#175, $l36, l7#185, $l38, $l40, $l43, $l45, $l46, $l47;
        byte $b12, $b31, $b41;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: sun.util.calendar.BaseCalendar;

        l2#1 := @parameter1: int;

        l3 := @parameter2: int;

        l4#3 = 0;

        $z0 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 2);

        if $z0 == 0 goto label02;

        l4#3 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(2);

        if l4#3 <= 11 goto label01;

        $i0 = l4#3 / 12;

        l2#1 = l2#1 + $i0;

        l4#3 = l4#3 % 12;

        goto label02;

     label01:
        if l4#3 >= 0 goto label02;

        l5#23 = newarray (int)[1];

        $i1 = staticinvoke <sun.util.calendar.CalendarUtils: int floorDivide(int,int,int[])>(l4#3, 12, l5#23);

        l2#1 = l2#1 + $i1;

        l4#3 = l5#23[0];

     label02:
        $i2 = l2#1;

        $i3 = l4#3 + 1;

        $r1 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if l1 != $r1 goto label03;

        $r2 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        goto label04;

     label03:
        $r2 = null;

     label04:
        l5#44 = virtualinvoke l1.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i2, $i3, 1, $r2);

        $z1 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 2);

        if $z1 == 0 goto label15;

        $z2 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 5);

        if $z2 == 0 goto label05;

        $z3 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isSet(int)>(5);

        if $z3 == 0 goto label20;

        $i5 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(5);

        $l6 = (long) $i5;

        l5#60 = l5#44 + $l6;

        l5#44 = l5#60 - 1L;

        goto label20;

     label05:
        $z4 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 4);

        if $z4 == 0 goto label08;

        $l7 = l5#44 + 6L;

        $i8 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l7#73 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l7, $i8);

        $l9 = l7#73 - l5#44;

        $i10 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        $l11 = (long) $i10;

        $b12 = $l9 cmp $l11;

        if $b12 < 0 goto label06;

        l7#73 = l7#73 - 7L;

     label06:
        $z5 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 7);

        if $z5 == 0 goto label07;

        $l13 = l7#73 + 6L;

        $i14 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(7);

        l7#73 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l13, $i14);

     label07:
        $i15 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(4);

        $i16 = $i15 - 1;

        $i17 = 7 * $i16;

        $l18 = (long) $i17;

        l5#44 = l7#73 + $l18;

        goto label20;

     label08:
        $z6 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 7);

        if $z6 == 0 goto label09;

        l7#110 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(7);

        goto label10;

     label09:
        l7#110 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

     label10:
        $z7 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 8);

        if $z7 == 0 goto label11;

        l8#119 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(8);

        goto label12;

     label11:
        l8#119 = 1;

     label12:
        if l8#119 < 0 goto label13;

        $i19 = 7 * l8#119;

        $l20 = (long) $i19;

        $l21 = l5#44 + $l20;

        $l22 = $l21 - 1L;

        l5#44 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l22, l7#110);

        goto label14;

     label13:
        $i23 = specialinvoke l0.<java.util.GregorianCalendar: int monthLength(int,int)>(l4#3, l2#1);

        $i24 = l8#119 + 1;

        $i25 = 7 * $i24;

        l9#142 = $i23 + $i25;

        $l26 = (long) l9#142;

        $l27 = l5#44 + $l26;

        $l28 = $l27 - 1L;

        l5#44 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l28, l7#110);

     label14:
        goto label20;

     label15:
        $i29 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l2#1 != $i29 goto label16;

        $r3 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if l1 != $r3 goto label16;

        $l30 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b31 = l5#44 cmp $l30;

        if $b31 >= 0 goto label16;

        $i32 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i33 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i32 == $i33 goto label16;

        l5#44 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

     label16:
        $z8 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 6);

        if $z8 == 0 goto label17;

        $i34 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(6);

        $l35 = (long) $i34;

        l5#175 = l5#44 + $l35;

        l5#44 = l5#175 - 1L;

        goto label20;

     label17:
        $l36 = l5#44 + 6L;

        $i37 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l7#185 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l36, $i37);

        $l38 = l7#185 - l5#44;

        $i39 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        $l40 = (long) $i39;

        $b41 = $l38 cmp $l40;

        if $b41 < 0 goto label18;

        l7#185 = l7#185 - 7L;

     label18:
        $z9 = staticinvoke <java.util.GregorianCalendar: boolean isFieldSet(int,int)>(l3, 7);

        if $z9 == 0 goto label19;

        l9#202 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(7);

        $i42 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        if l9#202 == $i42 goto label19;

        $l43 = l7#185 + 6L;

        l7#185 = staticinvoke <sun.util.calendar.BaseCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l43, l9#202);

     label19:
        $i44 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(3);

        $l45 = (long) $i44;

        $l46 = $l45 - 1L;

        $l47 = 7L * $l46;

        l5#44 = l7#185 + $l47;

     label20:
        return l5#44;
    }

    private int monthLength(int, int)
    {
        java.util.GregorianCalendar l0;
        int l1, l2, $i0;
        boolean $z0;
        int[] $r0, $r1;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $z0 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(l2);

        if $z0 == 0 goto label1;

        $r0 = <java.util.GregorianCalendar: int[] LEAP_MONTH_LENGTH>;

        $i0 = $r0[l1];

        goto label2;

     label1:
        $r1 = <java.util.GregorianCalendar: int[] MONTH_LENGTH>;

        $i0 = $r1[l1];

     label2:
        return $i0;
    }

    public boolean isLeapYear(int)
    {
        java.util.GregorianCalendar l0;
        int l1, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        sun.util.calendar.BaseCalendar$Date l3;
        boolean $z0, $z1, l2#31, $z2, $z3;
        long $l7;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        $i0 = l1 & 3;

        if $i0 == 0 goto label01;

        return 0;

     label01:
        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l1 <= $i1 goto label05;

        $i2 = l1 % 100;

        if $i2 != 0 goto label02;

        $i3 = l1 % 400;

        if $i3 != 0 goto label03;

     label02:
        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        return $z0;

     label05:
        $i4 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l1 >= $i4 goto label06;

        return 1;

     label06:
        $i5 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i6 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i5 != $i6 goto label09;

        $l7 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        l3 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>($l7);

        $i8 = virtualinvoke l3.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        if $i8 >= 3 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        l2#31 = $z1;

        goto label12;

     label09:
        $i9 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l1 != $i9 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        l2#31 = $z2;

     label12:
        if l2#31 == 0 goto label15;

        $i10 = l1 % 100;

        if $i10 != 0 goto label13;

        $i11 = l1 % 400;

        if $i11 != 0 goto label14;

     label13:
        $z3 = 1;

        goto label16;

     label14:
        $z3 = 0;

        goto label16;

     label15:
        $z3 = 1;

     label16:
        return $z3;
    }

    public java.lang.Object clone()
    {
        java.util.GregorianCalendar l0, l1;
        java.lang.Object $r0, $r2, $r8;
        sun.util.calendar.BaseCalendar$Date $r1, $r3, $r4, $r5, $r6, $r7, $r9, $r10;

        l0 := @this: java.util.GregorianCalendar;

        $r0 = specialinvoke l0.<java.util.Calendar: java.lang.Object clone()>();

        l1 = (java.util.GregorianCalendar) $r0;

        $r1 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        $r2 = virtualinvoke $r1.<sun.util.calendar.BaseCalendar$Date: java.lang.Object clone()>();

        $r3 = (sun.util.calendar.BaseCalendar$Date) $r2;

        l1.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate> = $r3;

        $r4 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        if $r4 == null goto label2;

        $r5 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r6 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        if $r5 == $r6 goto label1;

        $r7 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r8 = virtualinvoke $r7.<sun.util.calendar.BaseCalendar$Date: java.lang.Object clone()>();

        $r9 = (sun.util.calendar.BaseCalendar$Date) $r8;

        l1.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate> = $r9;

        goto label2;

     label1:
        $r10 = l1.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        l1.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate> = $r10;

     label2:
        l1.<java.util.GregorianCalendar: int[] originalFields> = null;

        l1.<java.util.GregorianCalendar: int[] zoneOffsets> = null;

        return l1;
    }

    public int getActualMaximum(int)
    {
        java.util.GregorianCalendar l0, l3#11;
        int l1, $i0, $i1, $i2, l6#18, l7#26, $i6, $i7, l10#69, $i13, $i14, $i15, l6#118, $i18, $i19, $i20, $i23, $i24, $i25, $i29, l9#179, $i30, l9#184, $i31, $i32, l10#193, l8#210, $i33, $i34, $i35, $i36, $i37, l9#247, l10#251, $i38, l9#256, l11#261, $i39, $i40, l10#271, l8#283, l9#287, $i41, $i42, l10#304, l8#315, l9#324, $i43, l11#343, l8#348, $i44, $i45, $i53, $i55, $i57, $i59;
        sun.util.calendar.BaseCalendar$Date l4, l13, l10#41, $r2, l11#311;
        sun.util.calendar.BaseCalendar l5, l10#98;
        byte l7#20, $b4, $b9, $b17, $b22, $b27, $b46, $b49, $b61;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10;
        sun.util.calendar.Gregorian $r0, $r3, $r17;
        long l8#33, $l3, $l5, l8#62, $l8, $l10, $l11, $l12, l11#80, l8#105, l10#124, $l16, $l21, $l26, $l28, l8#361, l10#372, $l47, $l48, $l50, $l51, $l52, $l54, l12#400, l12#404, $l56, l12#410, l12#414, $l58, l12#420, l12#424, $l60, l12#430;
        java.lang.Object $r1, $r8, $r10, $r11, $r13, $r14, $r15, l10#382;
        java.util.TimeZone $r6, $r16;
        sun.util.calendar.CalendarDate l8#169, l8#236, l11#388;
        java.lang.AssertionError tmp$741918819, tmp$548129191, tmp$1533028475;
        java.lang.ArrayIndexOutOfBoundsException tmp$2038831229;
        sun.util.calendar.CalendarSystem tmp$1770752845;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        $i0 = 1 << l1;

        $i1 = 130689 & $i0;

        if $i1 == 0 goto label01;

        $i2 = virtualinvoke l0.<java.util.GregorianCalendar: int getMaximum(int)>(l1);

        return $i2;

     label01:
        l3#11 = specialinvoke l0.<java.util.GregorianCalendar: java.util.GregorianCalendar getNormalizedCalendar()>();

        l4 = l3#11.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l5 = l3#11.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        l6#18 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        l7#20 = -1;

        tableswitch(l1)
        {
            case 1: goto label33;
            case 2: goto label02;
            case 3: goto label15;
            case 4: goto label21;
            case 5: goto label04;
            case 6: goto label07;
            case 7: goto label42;
            case 8: goto label28;
            default: goto label42;
        };

     label02:
        $z0 = specialinvoke l3#11.<java.util.GregorianCalendar: boolean isCutoverYear(int)>(l6#18);

        if $z0 != 0 goto label03;

        l7#26 = 11;

        goto label43;

     label03:
        $r0 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        l6#18 = l6#18 + 1;

        l8#33 = virtualinvoke $r0.<sun.util.calendar.Gregorian: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l6#18, 1, 1, null);

        $l3 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b4 = l8#33 cmp $l3;

        if $b4 < 0 goto label03;

        $r1 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: java.lang.Object clone()>();

        l10#41 = (sun.util.calendar.BaseCalendar$Date) $r1;

        $l5 = l8#33 - 1L;

        virtualinvoke l5.<sun.util.calendar.BaseCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(l10#41, $l5);

        $i6 = virtualinvoke l10#41.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        l7#26 = $i6 - 1;

        goto label43;

     label04:
        l7#26 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(l4);

        $z1 = specialinvoke l3#11.<java.util.GregorianCalendar: boolean isCutoverYear(int)>(l6#18);

        if $z1 == 0 goto label43;

        $i7 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        if $i7 != l7#26 goto label05;

        goto label43;

     label05:
        l8#62 = specialinvoke l3#11.<java.util.GregorianCalendar: long getCurrentFixedDate()>();

        $l8 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b9 = l8#62 cmp $l8;

        if $b9 < 0 goto label06;

        goto label43;

     label06:
        l10#69 = specialinvoke l3#11.<java.util.GregorianCalendar: int actualMonthLength()>();

        $r2 = l3#11.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $l10 = specialinvoke l3#11.<java.util.GregorianCalendar: long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long)>($r2, l8#62);

        $l11 = (long) l10#69;

        $l12 = $l10 + $l11;

        l11#80 = $l12 - 1L;

        l13 = specialinvoke l3#11.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>(l11#80);

        l7#26 = virtualinvoke l13.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        goto label43;

     label07:
        $z2 = specialinvoke l3#11.<java.util.GregorianCalendar: boolean isCutoverYear(int)>(l6#18);

        if $z2 != 0 goto label08;

        l7#26 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: int getYearLength(sun.util.calendar.CalendarDate)>(l4);

        goto label43;

     label08:
        $i13 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i14 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if $i13 != $i14 goto label09;

        l10#98 = specialinvoke l3#11.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getCutoverCalendarSystem()>();

        l8#105 = virtualinvoke l10#98.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l6#18, 1, 1, null);

        goto label11;

     label09:
        $i15 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l6#18 != $i15 goto label10;

        l8#105 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l6#18, 1, 1, null);

        goto label11;

     label10:
        l8#105 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

     label11:
        $r3 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        l6#118 = l6#18 + 1;

        l10#124 = virtualinvoke $r3.<sun.util.calendar.Gregorian: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>(l6#118, 1, 1, null);

        $l16 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b17 = l10#124 cmp $l16;

        if $b17 >= 0 goto label12;

        l10#124 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

     label12:
        $z3 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z3 != 0 goto label13;

        $i18 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i19 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        $i20 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $l21 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i18, $i19, $i20, l4);

        $b22 = l8#105 cmp $l21;

        if $b22 <= 0 goto label13;

        tmp$741918819 = new java.lang.AssertionError;

        specialinvoke tmp$741918819.<java.lang.AssertionError: void <init>()>();

        throw tmp$741918819;

     label13:
        $z4 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z4 != 0 goto label14;

        $i23 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i24 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        $i25 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        $l26 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i23, $i24, $i25, l4);

        $b27 = l10#124 cmp $l26;

        if $b27 >= 0 goto label14;

        tmp$548129191 = new java.lang.AssertionError;

        specialinvoke tmp$548129191.<java.lang.AssertionError: void <init>()>();

        throw tmp$548129191;

     label14:
        $l28 = l10#124 - l8#105;

        l7#26 = (int) $l28;

        goto label43;

     label15:
        $z5 = specialinvoke l3#11.<java.util.GregorianCalendar: boolean isCutoverYear(int)>(l6#18);

        if $z5 != 0 goto label18;

        $r6 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        l8#169 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>($r6);

        $i29 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getYear()>();

        virtualinvoke l8#169.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i29, 1, 1);

        l9#179 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: int getDayOfWeek(sun.util.calendar.CalendarDate)>(l8#169);

        $i30 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l9#184 = l9#179 - $i30;

        if l9#184 >= 0 goto label16;

        l9#184 = l9#184 + 7;

     label16:
        l7#26 = 52;

        $i31 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        $i32 = l9#184 + $i31;

        l10#193 = $i32 - 1;

        if l10#193 == 6 goto label17;

        $z6 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: boolean isLeapYear()>();

        if $z6 == 0 goto label43;

        if l10#193 == 5 goto label17;

        if l10#193 != 12 goto label43;

     label17:
        l7#26 = l7#26 + 1;

        goto label43;

     label18:
        if l3#11 != l0 goto label19;

        $r8 = virtualinvoke l3#11.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l3#11 = (java.util.GregorianCalendar) $r8;

     label19:
        l8#210 = virtualinvoke l0.<java.util.GregorianCalendar: int getActualMaximum(int)>(6);

        virtualinvoke l3#11.<java.util.GregorianCalendar: void set(int,int)>(6, l8#210);

        l7#26 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(3);

        $i33 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(1);

        $i34 = virtualinvoke l3#11.<java.util.GregorianCalendar: int getWeekYear()>();

        if $i33 == $i34 goto label20;

        $i35 = l8#210 - 7;

        virtualinvoke l3#11.<java.util.GregorianCalendar: void set(int,int)>(6, $i35);

        l7#26 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(3);

     label20:
        goto label43;

     label21:
        $z7 = specialinvoke l3#11.<java.util.GregorianCalendar: boolean isCutoverYear(int)>(l6#18);

        if $z7 != 0 goto label24;

        l8#236 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>(null);

        $i36 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getYear()>();

        $i37 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();

        virtualinvoke l8#236.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i36, $i37, 1);

        l9#247 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: int getDayOfWeek(sun.util.calendar.CalendarDate)>(l8#236);

        l10#251 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(l8#236);

        $i38 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        l9#256 = l9#247 - $i38;

        if l9#256 >= 0 goto label22;

        l9#256 = l9#256 + 7;

     label22:
        l11#261 = 7 - l9#256;

        l7#26 = 3;

        $i39 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if l11#261 < $i39 goto label23;

        l7#26 = l7#26 + 1;

     label23:
        $i40 = l11#261 + 21;

        l10#271 = l10#251 - $i40;

        if l10#271 <= 0 goto label43;

        l7#26 = l7#26 + 1;

        if l10#271 <= 7 goto label43;

        l7#26 = l7#26 + 1;

        goto label43;

     label24:
        if l3#11 != l0 goto label25;

        $r10 = virtualinvoke l3#11.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l3#11 = (java.util.GregorianCalendar) $r10;

     label25:
        l8#283 = virtualinvoke l3#11.<java.util.GregorianCalendar: int internalGet(int)>(1);

        l9#287 = virtualinvoke l3#11.<java.util.GregorianCalendar: int internalGet(int)>(2);

     label26:
        l7#26 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(4);

        virtualinvoke l3#11.<java.util.GregorianCalendar: void add(int,int)>(4, 1);

        $i41 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(1);

        if $i41 != l8#283 goto label27;

        $i42 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(2);

        if $i42 == l9#287 goto label26;

     label27:
        goto label43;

     label28:
        l10#304 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: int getDayOfWeek()>();

        $z8 = specialinvoke l3#11.<java.util.GregorianCalendar: boolean isCutoverYear(int)>(l6#18);

        if $z8 != 0 goto label29;

        $r11 = virtualinvoke l4.<sun.util.calendar.BaseCalendar$Date: java.lang.Object clone()>();

        l11#311 = (sun.util.calendar.BaseCalendar$Date) $r11;

        l8#315 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(l11#311);

        virtualinvoke l11#311.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);

        virtualinvoke l5.<sun.util.calendar.BaseCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(l11#311);

        l9#324 = virtualinvoke l11#311.<sun.util.calendar.BaseCalendar$Date: int getDayOfWeek()>();

        goto label31;

     label29:
        if l3#11 != l0 goto label30;

        $r13 = virtualinvoke l0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l3#11 = (java.util.GregorianCalendar) $r13;

     label30:
        l8#315 = specialinvoke l3#11.<java.util.GregorianCalendar: int actualMonthLength()>();

        $i43 = virtualinvoke l3#11.<java.util.GregorianCalendar: int getActualMinimum(int)>(5);

        virtualinvoke l3#11.<java.util.GregorianCalendar: void set(int,int)>(5, $i43);

        l9#324 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(7);

     label31:
        l11#343 = l10#304 - l9#324;

        if l11#343 >= 0 goto label32;

        l11#343 = l11#343 + 7;

     label32:
        l8#348 = l8#315 - l11#343;

        $i44 = l8#348 + 6;

        l7#26 = $i44 / 7;

        goto label43;

     label33:
        if l3#11 != l0 goto label34;

        $r14 = virtualinvoke l0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l3#11 = (java.util.GregorianCalendar) $r14;

     label34:
        l8#361 = specialinvoke l3#11.<java.util.GregorianCalendar: long getYearOffsetInMillis()>();

        $i45 = specialinvoke l3#11.<java.util.GregorianCalendar: int internalGetEra()>();

        if $i45 != 1 goto label36;

        virtualinvoke l3#11.<java.util.GregorianCalendar: void setTimeInMillis(long)>(9223372036854775807L);

        l7#26 = virtualinvoke l3#11.<java.util.GregorianCalendar: int get(int)>(1);

        l10#372 = specialinvoke l3#11.<java.util.GregorianCalendar: long getYearOffsetInMillis()>();

        $b46 = l8#361 cmp l10#372;

        if $b46 <= 0 goto label35;

        l7#26 = l7#26 + -1;

     label35:
        goto label41;

     label36:
        $l47 = virtualinvoke l3#11.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $l48 = l0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b49 = $l47 cmp $l48;

        if $b49 < 0 goto label37;

        $r15 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        goto label38;

     label37:
        $r15 = staticinvoke <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>();

     label38:
        l10#382 = $r15;

        $r16 = virtualinvoke l0.<java.util.GregorianCalendar: java.util.TimeZone getZone()>();

        tmp$1770752845 = (sun.util.calendar.CalendarSystem) l10#382;

        l11#388 = virtualinvoke tmp$1770752845.<sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarDate getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r16);

        $l50 = virtualinvoke l5.<sun.util.calendar.BaseCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>(l11#388);

        $l51 = $l50 - 1L;

        $l52 = $l51 * 24L;

        $i53 = virtualinvoke l11#388.<sun.util.calendar.CalendarDate: int getHours()>();

        $l54 = (long) $i53;

        l12#400 = $l52 + $l54;

        l12#404 = l12#400 * 60L;

        $i55 = virtualinvoke l11#388.<sun.util.calendar.CalendarDate: int getMinutes()>();

        $l56 = (long) $i55;

        l12#410 = l12#404 + $l56;

        l12#414 = l12#410 * 60L;

        $i57 = virtualinvoke l11#388.<sun.util.calendar.CalendarDate: int getSeconds()>();

        $l58 = (long) $i57;

        l12#420 = l12#414 + $l58;

        l12#424 = l12#420 * 1000L;

        $i59 = virtualinvoke l11#388.<sun.util.calendar.CalendarDate: int getMillis()>();

        $l60 = (long) $i59;

        l12#430 = l12#424 + $l60;

        l7#26 = virtualinvoke l11#388.<sun.util.calendar.CalendarDate: int getYear()>();

        if l7#26 > 0 goto label40;

        $z10 = <java.util.GregorianCalendar: boolean $assertionsDisabled>;

        if $z10 != 0 goto label39;

        $r17 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if l10#382 == $r17 goto label39;

        tmp$1533028475 = new java.lang.AssertionError;

        specialinvoke tmp$1533028475.<java.lang.AssertionError: void <init>()>();

        throw tmp$1533028475;

     label39:
        l7#26 = 1 - l7#26;

     label40:
        $b61 = l8#361 cmp l12#430;

        if $b61 >= 0 goto label41;

        l7#26 = l7#26 + -1;

     label41:
        goto label43;

     label42:
        tmp$2038831229 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke tmp$2038831229.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(l1);

        throw tmp$2038831229;

     label43:
        return l7#26;
    }

    private java.util.GregorianCalendar getNormalizedCalendar()
    {
        java.util.GregorianCalendar l0, l1#4;
        boolean $z0;
        java.lang.Object $r0;

        l0 := @this: java.util.GregorianCalendar;

        $z0 = virtualinvoke l0.<java.util.GregorianCalendar: boolean isFullyNormalized()>();

        if $z0 == 0 goto label1;

        l1#4 = l0;

        goto label2;

     label1:
        $r0 = virtualinvoke l0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l1#4 = (java.util.GregorianCalendar) $r0;

        virtualinvoke l1#4.<java.util.GregorianCalendar: void setLenient(boolean)>(1);

        virtualinvoke l1#4.<java.util.GregorianCalendar: void complete()>();

     label2:
        return l1#4;
    }

    private boolean isCutoverYear(int)
    {
        java.util.GregorianCalendar l0;
        int l1, l2, $i0;
        sun.util.calendar.BaseCalendar $r0;
        sun.util.calendar.Gregorian $r1;
        boolean $z0;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        $r0 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r1 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if $r0 != $r1 goto label1;

        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        goto label2;

     label1:
        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

     label2:
        l2 = $i0;

        if l1 != l2 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private long getCurrentFixedDate()
    {
        java.util.GregorianCalendar l0;
        sun.util.calendar.BaseCalendar $r0, $r2;
        sun.util.calendar.Gregorian $r1;
        long $l0;
        sun.util.calendar.BaseCalendar$Date $r3;

        l0 := @this: java.util.GregorianCalendar;

        $r0 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r1 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        if $r0 != $r1 goto label1;

        $l0 = l0.<java.util.GregorianCalendar: long cachedFixedDate>;

        goto label2;

     label1:
        $r2 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r3 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $l0 = virtualinvoke $r2.<sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>($r3);

     label2:
        return $l0;
    }

    private int actualMonthLength()
    {
        java.util.GregorianCalendar l0;
        int l1, $i0, $i1, $i2, $i3, $i8, $i10;
        long l3, l5, $l4, l7#34, $l5, $l7, l7#57, $l9;
        sun.util.calendar.BaseCalendar$Date $r0, $r2, $r3, $r7, $r8, tmp$1451837761, tmp$2000062658;
        sun.util.calendar.BaseCalendar $r1, $r5, $r6;
        java.lang.Object $r4, l2#19;
        byte $b6;
        sun.util.calendar.Gregorian $r9, $r11;
        java.util.TimeZone $r10;
        sun.util.calendar.CalendarDate tmp$183687168, tmp$316025290, tmp$481014786;

        l0 := @this: java.util.GregorianCalendar;

        $r0 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l1 = virtualinvoke $r0.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l1 == $i0 goto label1;

        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l1 == $i1 goto label1;

        $r1 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r2 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $i2 = virtualinvoke $r1.<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>($r2);

        return $i2;

     label1:
        $r3 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r4 = virtualinvoke $r3.<sun.util.calendar.BaseCalendar$Date: java.lang.Object clone()>();

        l2#19 = (sun.util.calendar.BaseCalendar$Date) $r4;

        $r5 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        tmp$183687168 = (sun.util.calendar.CalendarDate) l2#19;

        l3 = virtualinvoke $r5.<sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(tmp$183687168);

        tmp$1451837761 = (sun.util.calendar.BaseCalendar$Date) l2#19;

        l5 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long)>(tmp$1451837761, l3);

        $r6 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        tmp$316025290 = (sun.util.calendar.CalendarDate) l2#19;

        $i3 = virtualinvoke $r6.<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(tmp$316025290);

        $l4 = (long) $i3;

        l7#34 = l5 + $l4;

        $l5 = l0.<java.util.GregorianCalendar: long gregorianCutoverDate>;

        $b6 = l7#34 cmp $l5;

        if $b6 >= 0 goto label2;

        $l7 = l7#34 - l5;

        $i8 = (int) $l7;

        return $i8;

     label2:
        $r7 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r8 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        if $r7 == $r8 goto label3;

        $r9 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        $r10 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        l2#19 = virtualinvoke $r9.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r10);

     label3:
        $r11 = <java.util.GregorianCalendar: sun.util.calendar.Gregorian gcal>;

        tmp$481014786 = (sun.util.calendar.CalendarDate) l2#19;

        virtualinvoke $r11.<sun.util.calendar.Gregorian: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(tmp$481014786, l7#34);

        tmp$2000062658 = (sun.util.calendar.BaseCalendar$Date) l2#19;

        l7#57 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long)>(tmp$2000062658, l7#34);

        $l9 = l7#57 - l5;

        $i10 = (int) $l9;

        return $i10;
    }

    public int getWeekYear()
    {
        java.util.GregorianCalendar l0, l5;
        int l3, l4, l9, l1#4, $i0, $i1, $i2, l2#18, $i3, l2#30, $i4, $i5, $i6, l6#61, l7#70, $i7, $i8, $i9, l8#89, $i10, l7#100, $i11, $i12;
        java.lang.Object $r0;
        java.util.TimeZone $r1;

        l0 := @this: java.util.GregorianCalendar;

        l1#4 = virtualinvoke l0.<java.util.GregorianCalendar: int get(int)>(1);

        $i0 = specialinvoke l0.<java.util.GregorianCalendar: int internalGetEra()>();

        if $i0 != 0 goto label01;

        l1#4 = 1 - l1#4;

     label01:
        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        $i2 = $i1 + 1;

        if l1#4 <= $i2 goto label04;

        l2#18 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(3);

        $i3 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(2);

        if $i3 != 0 goto label02;

        if l2#18 < 52 goto label03;

        l1#4 = l1#4 + -1;

        goto label03;

     label02:
        if l2#18 != 1 goto label03;

        l1#4 = l1#4 + 1;

     label03:
        return l1#4;

     label04:
        l2#30 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(6);

        l3 = virtualinvoke l0.<java.util.GregorianCalendar: int getActualMaximum(int)>(6);

        l4 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if l2#30 <= l4 goto label05;

        $i4 = l3 - 6;

        if l2#30 >= $i4 goto label05;

        return l1#4;

     label05:
        $r0 = virtualinvoke l0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        l5 = (java.util.GregorianCalendar) $r0;

        virtualinvoke l5.<java.util.GregorianCalendar: void setLenient(boolean)>(1);

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke l5.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>($r1);

        virtualinvoke l5.<java.util.GregorianCalendar: void set(int,int)>(6, 1);

        virtualinvoke l5.<java.util.GregorianCalendar: void complete()>();

        $i5 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i6 = virtualinvoke l5.<java.util.GregorianCalendar: int get(int)>(7);

        l6#61 = $i5 - $i6;

        if l6#61 == 0 goto label07;

        if l6#61 >= 0 goto label06;

        l6#61 = l6#61 + 7;

     label06:
        virtualinvoke l5.<java.util.GregorianCalendar: void add(int,int)>(6, l6#61);

     label07:
        l7#70 = virtualinvoke l5.<java.util.GregorianCalendar: int get(int)>(6);

        if l2#30 >= l7#70 goto label08;

        if l7#70 > l4 goto label12;

        l1#4 = l1#4 + -1;

        goto label12;

     label08:
        $i7 = l1#4 + 1;

        virtualinvoke l5.<java.util.GregorianCalendar: void set(int,int)>(1, $i7);

        virtualinvoke l5.<java.util.GregorianCalendar: void set(int,int)>(6, 1);

        virtualinvoke l5.<java.util.GregorianCalendar: void complete()>();

        $i8 = virtualinvoke l0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i9 = virtualinvoke l5.<java.util.GregorianCalendar: int get(int)>(7);

        l8#89 = $i8 - $i9;

        if l8#89 == 0 goto label10;

        if l8#89 >= 0 goto label09;

        l8#89 = l8#89 + 7;

     label09:
        virtualinvoke l5.<java.util.GregorianCalendar: void add(int,int)>(6, l8#89);

     label10:
        $i10 = virtualinvoke l5.<java.util.GregorianCalendar: int get(int)>(6);

        l7#100 = $i10 - 1;

        if l7#100 != 0 goto label11;

        l7#100 = 7;

     label11:
        if l7#100 < l4 goto label12;

        $i11 = l3 - l2#30;

        l9 = $i11 + 1;

        $i12 = 7 - l7#100;

        if l9 > $i12 goto label12;

        l1#4 = l1#4 + 1;

     label12:
        return l1#4;
    }

    public int getActualMinimum(int)
    {
        java.util.GregorianCalendar l0, l2;
        int l1, l3, $i0, $i1, $i3, $i4;
        long l4, $l2;
        sun.util.calendar.BaseCalendar$Date l6, $r0, $r1, $r3;
        sun.util.calendar.BaseCalendar $r2;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        if l1 != 5 goto label2;

        l2 = specialinvoke l0.<java.util.GregorianCalendar: java.util.GregorianCalendar getNormalizedCalendar()>();

        $r0 = l2.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        l3 = virtualinvoke $r0.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();

        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l3 == $i0 goto label1;

        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l3 != $i1 goto label2;

     label1:
        $r1 = l2.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r2 = l2.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar calsys>;

        $r3 = l2.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $l2 = virtualinvoke $r2.<sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>($r3);

        l4 = specialinvoke l0.<java.util.GregorianCalendar: long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long)>($r1, $l2);

        l6 = specialinvoke l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>(l4);

        $i3 = virtualinvoke l6.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();

        return $i3;

     label2:
        $i4 = virtualinvoke l0.<java.util.GregorianCalendar: int getMinimum(int)>(l1);

        return $i4;
    }

    private long getYearOffsetInMillis()
    {
        java.util.GregorianCalendar l0;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, $i12, $i13, $i14;
        long l1#9, $l4, l1#16, l1#20, $l6, l1#27, l1#31, $l8, l1#38, l1#42, $l10, $l11, $l15, $l16;

        l0 := @this: java.util.GregorianCalendar;

        $i0 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(6);

        $i1 = $i0 - 1;

        $i2 = $i1 * 24;

        l1#9 = (long) $i2;

        $i3 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(11);

        $l4 = (long) $i3;

        l1#16 = l1#9 + $l4;

        l1#20 = l1#16 * 60L;

        $i5 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(12);

        $l6 = (long) $i5;

        l1#27 = l1#20 + $l6;

        l1#31 = l1#27 * 60L;

        $i7 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(13);

        $l8 = (long) $i7;

        l1#38 = l1#31 + $l8;

        l1#42 = l1#38 * 1000L;

        $i9 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(14);

        $l10 = (long) $i9;

        $l11 = l1#42 + $l10;

        $i12 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(15);

        $i13 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(16);

        $i14 = $i12 + $i13;

        $l15 = (long) $i14;

        $l16 = $l11 - $l15;

        return $l16;
    }

    public void add(int, int)
    {
        java.util.GregorianCalendar l0;
        int l1, l2, l3#13, $i0, l3#20, $i1, l3#36, $i2, $i3, l3#57, l4#61, l5#66, $i4, $i5, $i6, l4#81, $i7, l4#97, $i8, $i9, l3#119, $i10, $i11, l3#133, $i12, $i13, $i14, $i17, $i19, $i21, $i23, $i27, $i28, l9#249, $i34, $i35, $i36, l9#270;
        long l10, l3#144, l5#146, $l15, $l16, l7#179, $l18, l5#186, l5#190, $l20, l5#197, l5#201, $l22, l5#208, l5#212, $l24, l5#219, l7#241, $l29, $l30, $l31, $l32, $l33, $l37, $l38, $l39, $l41, $l42, $l43;
        java.lang.IllegalArgumentException $r0;
        byte $b25, $b26, $b40;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        if l2 != 0 goto label01;

        return;

     label01:
        if l1 < 0 goto label02;

        if l1 < 15 goto label03;

     label02:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label03:
        virtualinvoke l0.<java.util.GregorianCalendar: void complete()>();

        if l1 != 1 goto label08;

        l3#13 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(1);

        $i0 = specialinvoke l0.<java.util.GregorianCalendar: int internalGetEra()>();

        if $i0 != 1 goto label05;

        l3#20 = l3#13 + l2;

        if l3#20 <= 0 goto label04;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, l3#20);

        goto label07;

     label04:
        $i1 = 1 - l3#20;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, $i1);

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(0, 0);

        goto label07;

     label05:
        l3#36 = l3#13 - l2;

        if l3#36 <= 0 goto label06;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, l3#36);

        goto label07;

     label06:
        $i2 = 1 - l3#36;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, $i2);

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(0, 1);

     label07:
        specialinvoke l0.<java.util.GregorianCalendar: void pinDayOfMonth()>();

        goto label33;

     label08:
        if l1 != 2 goto label18;

        $i3 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(2);

        l3#57 = $i3 + l2;

        l4#61 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(1);

        if l3#57 < 0 goto label09;

        l5#66 = l3#57 / 12;

        goto label10;

     label09:
        $i4 = l3#57 + 1;

        $i5 = $i4 / 12;

        l5#66 = $i5 - 1;

     label10:
        if l5#66 == 0 goto label14;

        $i6 = specialinvoke l0.<java.util.GregorianCalendar: int internalGetEra()>();

        if $i6 != 1 goto label12;

        l4#81 = l4#61 + l5#66;

        if l4#81 <= 0 goto label11;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, l4#81);

        goto label14;

     label11:
        $i7 = 1 - l4#81;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, $i7);

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(0, 0);

        goto label14;

     label12:
        l4#97 = l4#61 - l5#66;

        if l4#97 <= 0 goto label13;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, l4#97);

        goto label14;

     label13:
        $i8 = 1 - l4#97;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(1, $i8);

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(0, 1);

     label14:
        if l3#57 < 0 goto label15;

        $i9 = l3#57 % 12;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(2, $i9);

        goto label17;

     label15:
        l3#119 = l3#57 % 12;

        if l3#119 >= 0 goto label16;

        l3#119 = l3#119 + 12;

     label16:
        $i10 = 0 + l3#119;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(2, $i10);

     label17:
        specialinvoke l0.<java.util.GregorianCalendar: void pinDayOfMonth()>();

        goto label33;

     label18:
        if l1 != 0 goto label21;

        $i11 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(0);

        l3#133 = $i11 + l2;

        if l3#133 >= 0 goto label19;

        l3#133 = 0;

     label19:
        if l3#133 <= 1 goto label20;

        l3#133 = 1;

     label20:
        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(0, l3#133);

        goto label33;

     label21:
        l3#144 = (long) l2;

        l5#146 = 0L;

        tableswitch(l1)
        {
            case 3: goto label26;
            case 4: goto label26;
            case 5: goto label27;
            case 6: goto label27;
            case 7: goto label27;
            case 8: goto label26;
            case 9: goto label28;
            case 10: goto label22;
            case 11: goto label22;
            case 12: goto label23;
            case 13: goto label24;
            case 14: goto label25;
            default: goto label29;
        };

     label22:
        l3#144 = l3#144 * 3600000L;

        goto label29;

     label23:
        l3#144 = l3#144 * 60000L;

        goto label29;

     label24:
        l3#144 = l3#144 * 1000L;

        goto label29;

     label25:
        goto label29;

     label26:
        l3#144 = l3#144 * 7L;

        goto label29;

     label27:
        goto label29;

     label28:
        $i12 = l2 / 2;

        l3#144 = (long) $i12;

        $i13 = l2 % 2;

        $i14 = 12 * $i13;

        l5#146 = (long) $i14;

     label29:
        if l1 < 10 goto label30;

        $l15 = l0.<java.util.GregorianCalendar: long time>;

        $l16 = $l15 + l3#144;

        virtualinvoke l0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l16);

        return;

     label30:
        l7#179 = specialinvoke l0.<java.util.GregorianCalendar: long getCurrentFixedDate()>();

        $i17 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(11);

        $l18 = (long) $i17;

        l5#186 = l5#146 + $l18;

        l5#190 = l5#186 * 60L;

        $i19 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(12);

        $l20 = (long) $i19;

        l5#197 = l5#190 + $l20;

        l5#201 = l5#197 * 60L;

        $i21 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(13);

        $l22 = (long) $i21;

        l5#208 = l5#201 + $l22;

        l5#212 = l5#208 * 1000L;

        $i23 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(14);

        $l24 = (long) $i23;

        l5#219 = l5#212 + $l24;

        $b25 = l5#219 cmp 86400000L;

        if $b25 < 0 goto label31;

        l7#179 = l7#179 + 1L;

        l5#219 = l5#219 - 86400000L;

        goto label32;

     label31:
        $b26 = l5#219 cmp 0L;

        if $b26 >= 0 goto label32;

        l7#179 = l7#179 - 1L;

        l5#219 = l5#219 + 86400000L;

     label32:
        l7#241 = l7#179 + l3#144;

        $i27 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(15);

        $i28 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(16);

        l9#249 = $i27 + $i28;

        $l29 = l7#241 - 719163L;

        $l30 = $l29 * 86400000L;

        $l31 = $l30 + l5#219;

        $l32 = (long) l9#249;

        $l33 = $l31 - $l32;

        virtualinvoke l0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l33);

        $i34 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(15);

        $i35 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(16);

        $i36 = $i34 + $i35;

        l9#270 = l9#249 - $i36;

        if l9#270 == 0 goto label33;

        $l37 = l0.<java.util.GregorianCalendar: long time>;

        $l38 = (long) l9#270;

        $l39 = $l37 + $l38;

        virtualinvoke l0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l39);

        l10 = specialinvoke l0.<java.util.GregorianCalendar: long getCurrentFixedDate()>();

        $b40 = l10 cmp l7#241;

        if $b40 == 0 goto label33;

        $l41 = l0.<java.util.GregorianCalendar: long time>;

        $l42 = (long) l9#270;

        $l43 = $l41 - $l42;

        virtualinvoke l0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l43);

     label33:
        return;
    }

    private void pinDayOfMonth()
    {
        java.util.GregorianCalendar l0, l3#18;
        int l1, $i0, $i1, $i2, l2#15, l3#25;

        l0 := @this: java.util.GregorianCalendar;

        l1 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(1);

        $i0 = l0.<java.util.GregorianCalendar: int gregorianCutoverYear>;

        if l1 > $i0 goto label1;

        $i1 = l0.<java.util.GregorianCalendar: int gregorianCutoverYearJulian>;

        if l1 >= $i1 goto label2;

     label1:
        $i2 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(2);

        l2#15 = specialinvoke l0.<java.util.GregorianCalendar: int monthLength(int)>($i2);

        goto label3;

     label2:
        l3#18 = specialinvoke l0.<java.util.GregorianCalendar: java.util.GregorianCalendar getNormalizedCalendar()>();

        l2#15 = virtualinvoke l3#18.<java.util.GregorianCalendar: int getActualMaximum(int)>(5);

     label3:
        l3#25 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(5);

        if l3#25 <= l2#15 goto label4;

        virtualinvoke l0.<java.util.GregorianCalendar: void set(int,int)>(5, l2#15);

     label4:
        return;
    }

    private int monthLength(int)
    {
        java.util.GregorianCalendar l0;
        int l1, l2#4, $i0, $i1;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: int;

        l2#4 = virtualinvoke l0.<java.util.GregorianCalendar: int internalGet(int)>(1);

        $i0 = specialinvoke l0.<java.util.GregorianCalendar: int internalGetEra()>();

        if $i0 != 0 goto label1;

        l2#4 = 1 - l2#4;

     label1:
        $i1 = specialinvoke l0.<java.util.GregorianCalendar: int monthLength(int,int)>(l1, l2#4);

        return $i1;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        java.util.GregorianCalendar l0;
        java.util.TimeZone l1;
        sun.util.calendar.BaseCalendar$Date $r0, $r2, $r3, $r4, $r5;

        l0 := @this: java.util.GregorianCalendar;

        l1 := @parameter0: java.util.TimeZone;

        specialinvoke l0.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(l1);

        $r0 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        virtualinvoke $r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(l1);

        $r2 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        if $r2 == null goto label1;

        $r3 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        $r4 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date gdate>;

        if $r3 == $r4 goto label1;

        $r5 = l0.<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date cdate>;

        virtualinvoke $r5.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(l1);

     label1:
        return;
    }


