    public static boolean containsIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String source, target;
        int $i0;
        boolean $z0;

        source := @parameter0: java.lang.String;

        target := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.unix4j.grep.util.StringUtil: int indexOfIgnoreCase(java.lang.String,java.lang.String)>(source, target);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if 0 > $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final int indexOfIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String source, target;
        int $i0;

        source := @parameter0: java.lang.String;

        target := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.unix4j.grep.util.StringUtil: int indexOfIgnoreCase(java.lang.String,java.lang.String,int)>(source, target, 2147483647);

        return $i0;
    }

    private static int indexOfIgnoreCase(java.lang.String, java.lang.String, int)
    {
        java.lang.String source, target, $r4;
        int maxIndex, sourceCount, targetCount, max, end, $i0, i#24, j#43, $i1, k#50;
        char first, ch, $c2, $c3;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        source := @parameter0: java.lang.String;

        target := @parameter1: java.lang.String;

        maxIndex := @parameter2: int;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(maxIndex);

        if maxIndex >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxIndex cannot be negative: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(maxIndex);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        sourceCount = virtualinvoke source.<java.lang.String: int length()>();

        targetCount = virtualinvoke target.<java.lang.String: int length()>();

        first = virtualinvoke target.<java.lang.String: char charAt(int)>(0);

        $i0 = sourceCount - targetCount;

        max = staticinvoke <java.lang.Math: int min(int,int)>(maxIndex, $i0);

        i#24 = 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#24);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(max);

        if i#24 > max goto label8;

        ch = virtualinvoke source.<java.lang.String: char charAt(int)>(i#24);

        $z0 = staticinvoke <org.unix4j.grep.util.StringUtil: boolean equalsIgnoreCase(char,char)>(ch, first);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

     label3:
        i#24 = i#24 + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#24);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(max);

        if i#24 > max goto label4;

        $z1 = staticinvoke <org.unix4j.grep.util.StringUtil: boolean equalsIgnoreCase(char,char)>(ch, first);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label4;

        goto label3;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#24);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(max);

        if i#24 > max goto label7;

        j#43 = i#24 + 1;

        $i1 = j#43 + targetCount;

        end = $i1 - 1;

        k#50 = 1;

     label5:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#43);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end);

        if j#43 >= end goto label6;

        $c2 = virtualinvoke source.<java.lang.String: char charAt(int)>(j#43);

        $c3 = virtualinvoke target.<java.lang.String: char charAt(int)>(k#50);

        $z2 = staticinvoke <org.unix4j.grep.util.StringUtil: boolean equalsIgnoreCase(char,char)>($c2, $c3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label6;

        j#43 = j#43 + 1;

        k#50 = k#50 + 1;

        goto label5;

     label6:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#43);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(end);

        if j#43 != end goto label7;

        return i#24;

     label7:
        i#24 = i#24 + 1;

        goto label2;

     label8:
        return -1;
    }

    public static boolean equalsIgnoreCase(char, char)
    {
        char ch1#1, ch2#2, ch1#8, ch2#11, $c0, $c1;
        boolean $z0;

        ch1#1 := @parameter0: char;

        ch2#2 := @parameter1: char;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2#2);

        if ch1#1 != ch2#2 goto label1;

        return 1;

     label1:
        ch1#8 = staticinvoke <java.lang.Character: char toUpperCase(char)>(ch1#1);

        ch2#11 = staticinvoke <java.lang.Character: char toUpperCase(char)>(ch2#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch1#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ch2#11);

        if ch1#8 != ch2#11 goto label2;

        return 1;

     label2:
        $c0 = staticinvoke <java.lang.Character: char toLowerCase(char)>(ch1#8);

        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>(ch2#11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($c1);

        if $c0 != $c1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }


