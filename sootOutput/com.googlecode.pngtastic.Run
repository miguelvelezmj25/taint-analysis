    public static void main(java.lang.String[])
    {
        java.lang.String[] args, i#5, i#6;
        java.util.HashMap options, $r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, last#1, i#2, next#4;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r16, arg#3, logLevel#11;
        java.lang.Boolean $r3, $r5, $r7, $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z17, $z18, $z19;
        com.googlecode.pngtastic.PngtasticColorCounter $r12;
        double $d0, $d1;
        long $l5;
        java.io.PrintStream $r13, $r14;
        java.lang.Double arg#7, next#8;
        java.lang.Integer minAlpha#9, timeout#10;

        args := @parameter0: java.lang.String[];

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        options = $r0;

        last#1 = 0;

        i#2 = 0;

     label01:
        $i0 = lengthof args;

        if i#2 >= $i0 goto label04;

        arg#3 = args[i#2];

        $z17 = virtualinvoke arg#3.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z17 == 0 goto label03;

        next#4 = i#2 + 1;

        $i6 = lengthof args;

        if next#4 >= $i6 goto label02;

        $r16 = args[next#4];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg#3, $r16);

        last#1 = next#4 + 1;

        goto label03;

     label02:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg#3, null);

        last#1 = next#4;

     label03:
        i#2 = i#2 + 1;

        goto label01;

     label04:
        $i1 = lengthof args;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#1, $i1);

        i#5 = (java.lang.String[]) $r1;

        i#6 = newarray (java.lang.String)[1];

        i#6[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/instrumented/pngtastic/images/optimizer/1px.png";

        $i2 = lengthof i#6;

        if $i2 != 0 goto label05;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("java -jar pngtastic-x.x.jar com.googlecode.pngtastic.PngtasticColorCounter [options] file1 [file2 ..]\nOptions:\n  --distThreshold    the distance below which two colors are considered similar (0.0 to 1.0)\n  --freqThreshold    the percentage a color must be represented in the overall image (0.0 to 1.0)\n  --minAlpha         the minimum alpha channel value a pixel must have\n  --timeout          the number of milliseconds after which color counting will be aborted\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label05:
        $r2 = args[0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFreqThreshold(boolean)>($z0);

        <com.googlecode.pngtastic.Run: boolean FREQTHRESHOLD> = $z1;

        $r4 = args[1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r4);

        $z2 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDistThreshold(boolean)>($z2);

        <com.googlecode.pngtastic.Run: boolean DISTTHRESHOLD> = $z3;

        $r6 = args[2];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z4 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMinAlpha(boolean)>($z4);

        <com.googlecode.pngtastic.Run: boolean MINALPHA> = $z5;

        $r8 = args[3];

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        $z6 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTimeout(boolean)>($z6);

        <com.googlecode.pngtastic.Run: boolean TIMEOUT> = $z7;

        $r10 = args[4];

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        $z8 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLogLevel(boolean)>($z8);

        <com.googlecode.pngtastic.Run: boolean LOGLEVEL> = $z9;

        $z10 = <com.googlecode.pngtastic.Run: boolean DISTTHRESHOLD>;

        if $z10 == 0 goto label06;

        arg#7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label07;

     label06:
        arg#7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

     label07:
        $z11 = <com.googlecode.pngtastic.Run: boolean FREQTHRESHOLD>;

        if $z11 == 0 goto label08;

        next#8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label09;

     label08:
        next#8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

     label09:
        $z12 = <com.googlecode.pngtastic.Run: boolean MINALPHA>;

        if $z12 == 0 goto label10;

        minAlpha#9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        goto label11;

     label10:
        minAlpha#9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

     label11:
        $z13 = <com.googlecode.pngtastic.Run: boolean TIMEOUT>;

        if $z13 == 0 goto label12;

        timeout#10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label13;

     label12:
        timeout#10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1000000);

     label13:
        $z14 = <com.googlecode.pngtastic.Run: boolean LOGLEVEL>;

        if $z14 == 0 goto label14;

        logLevel#11 = "debug";

        goto label15;

     label14:
        logLevel#11 = "none";

     label15:
        if next#8 != null goto label16;

        $z18 = 1;

        goto label17;

     label16:
        $z18 = 0;

     label17:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z18);

        if minAlpha#9 != null goto label18;

        $z19 = 1;

        goto label19;

     label18:
        $z19 = 0;

     label19:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z19);

        $r12 = new com.googlecode.pngtastic.PngtasticColorCounter;

        $d0 = virtualinvoke arg#7.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke next#8.<java.lang.Double: double doubleValue()>();

        $i3 = virtualinvoke minAlpha#9.<java.lang.Integer: int intValue()>();

        $i4 = virtualinvoke timeout#10.<java.lang.Integer: int intValue()>();

        $l5 = (long) $i4;

        specialinvoke $r12.<com.googlecode.pngtastic.PngtasticColorCounter: void <init>(java.lang.String[],java.lang.String,double,double,int,long)>(i#6, logLevel#11, $d0, $d1, $i3, $l5);

        return;
    }

    public void <init>()
    {
        com.googlecode.pngtastic.Run this;

        this := @this: com.googlecode.pngtastic.Run;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


