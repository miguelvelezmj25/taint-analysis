    public static void main(java.lang.String[]) throws java.lang.InterruptedException
    {
        java.lang.String[] args, $r16;
        long start, end, $l0;
        boolean isIgnoreCase, isInvertMatch, isFixedStrings, isLineNumber, isCount, isMatchingFiles, isWholeLine, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.String regexp, $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        org.unix4j.grep.unix.grep.GrepArguments grepArgs, $r15;
        org.unix4j.grep.unix.grep.GrepCommand grep, $r17;
        org.unix4j.grep.context.DefaultExecutionContext executionContext, $r18;
        org.unix4j.grep.io.StdOutput out, $r19;
        org.unix4j.grep.processor.LineProcessor exec;
        java.io.PrintStream $r0, $r20;
        java.lang.Boolean $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        double $d0, $d1;

        args := @parameter0: java.lang.String[];

        start = staticinvoke <java.lang.System: long nanoTime()>();

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Original");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(1500L);

        $r1 = args[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsIgnoreCase(boolean)>($z0);

        <org.unix4j.grep.Main: boolean ISIGNORECASE> = $z1;

        $r3 = args[1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsInvertMatch(boolean)>($z2);

        <org.unix4j.grep.Main: boolean ISINVERTMATCH> = $z3;

        $r5 = args[2];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5);

        $z4 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsFixedStrings(boolean)>($z4);

        <org.unix4j.grep.Main: boolean ISFIXEDSTRINGS> = $z5;

        $r7 = args[3];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r7);

        $z6 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsLineNumber(boolean)>($z6);

        <org.unix4j.grep.Main: boolean ISLINENUMBER> = $z7;

        $r9 = args[4];

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9);

        $z8 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsCount(boolean)>($z8);

        <org.unix4j.grep.Main: boolean ISCOUNT> = $z9;

        $r11 = args[5];

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11);

        $z10 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsMatchingFiles(boolean)>($z10);

        <org.unix4j.grep.Main: boolean ISMATCHINGFILES> = $z11;

        $r13 = args[6];

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13);

        $z12 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsWholeLine(boolean)>($z12);

        <org.unix4j.grep.Main: boolean ISWHOLELINE> = $z13;

        isIgnoreCase = <org.unix4j.grep.Main: boolean ISIGNORECASE>;

        isInvertMatch = <org.unix4j.grep.Main: boolean ISINVERTMATCH>;

        isFixedStrings = <org.unix4j.grep.Main: boolean ISFIXEDSTRINGS>;

        isLineNumber = <org.unix4j.grep.Main: boolean ISLINENUMBER>;

        isCount = <org.unix4j.grep.Main: boolean ISCOUNT>;

        isMatchingFiles = <org.unix4j.grep.Main: boolean ISMATCHINGFILES>;

        isWholeLine = <org.unix4j.grep.Main: boolean ISWHOLELINE>;

        regexp = "A.*C.*I.*K.*L.*W";

        $r15 = new org.unix4j.grep.unix.grep.GrepArguments;

        specialinvoke $r15.<org.unix4j.grep.unix.grep.GrepArguments: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean)>(isIgnoreCase, isInvertMatch, isFixedStrings, isLineNumber, isCount, isMatchingFiles, isWholeLine);

        grepArgs = $r15;

        virtualinvoke grepArgs.<org.unix4j.grep.unix.grep.GrepArguments: void setRegexp(java.lang.String)>(regexp);

        $r16 = newarray (java.lang.String)[1];

        $r16[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/grep/files/*.txt";

        virtualinvoke grepArgs.<org.unix4j.grep.unix.grep.GrepArguments: void setPaths(java.lang.String[])>($r16);

        $r17 = new org.unix4j.grep.unix.grep.GrepCommand;

        specialinvoke $r17.<org.unix4j.grep.unix.grep.GrepCommand: void <init>(org.unix4j.grep.unix.grep.GrepArguments)>(grepArgs);

        grep = $r17;

        $r18 = new org.unix4j.grep.context.DefaultExecutionContext;

        specialinvoke $r18.<org.unix4j.grep.context.DefaultExecutionContext: void <init>()>();

        executionContext = $r18;

        $r19 = new org.unix4j.grep.io.StdOutput;

        specialinvoke $r19.<org.unix4j.grep.io.StdOutput: void <init>()>();

        out = $r19;

        exec = virtualinvoke grep.<org.unix4j.grep.unix.grep.GrepCommand: org.unix4j.grep.processor.LineProcessor execute(org.unix4j.grep.context.ExecutionContext,org.unix4j.grep.processor.LineProcessor)>(executionContext, out);

        interfaceinvoke exec.<org.unix4j.grep.processor.LineProcessor: void finish()>();

        end = staticinvoke <java.lang.System: long nanoTime()>();

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $l0 = end - start;

        $d0 = (double) $l0;

        $d1 = $d0 / 1.0E9;

        virtualinvoke $r20.<java.io.PrintStream: void println(double)>($d1);

        return;
    }

    public void <init>()
    {
        org.unix4j.grep.Main this;

        this := @this: org.unix4j.grep.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


