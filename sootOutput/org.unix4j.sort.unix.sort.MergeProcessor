    public void <init>(org.unix4j.sort.context.ExecutionContext, org.unix4j.sort.processor.LineProcessor, java.util.List, org.unix4j.sort.unix.sort.SortArguments)
    {
        org.unix4j.sort.unix.sort.MergeProcessor this;
        org.unix4j.sort.context.ExecutionContext context;
        org.unix4j.sort.processor.LineProcessor output;
        java.util.List inputs;
        org.unix4j.sort.unix.sort.SortArguments arguments;

        this := @this: org.unix4j.sort.unix.sort.MergeProcessor;

        context := @parameter0: org.unix4j.sort.context.ExecutionContext;

        output := @parameter1: org.unix4j.sort.processor.LineProcessor;

        inputs := @parameter2: java.util.List;

        arguments := @parameter3: org.unix4j.sort.unix.sort.SortArguments;

        specialinvoke this.<org.unix4j.sort.unix.sort.AbstractSortProcessor: void <init>(org.unix4j.sort.context.ExecutionContext,org.unix4j.sort.processor.LineProcessor,org.unix4j.sort.unix.sort.SortArguments)>(context, output, arguments);

        this.<org.unix4j.sort.unix.sort.MergeProcessor: java.util.List inputs> = inputs;

        return;
    }

    public void finish()
    {
        org.unix4j.sort.unix.sort.MergeProcessor this;
        int len, i#7, $i0, inputIndexOfLine#28, i#30, $i1, $i2;
        org.unix4j.sort.line.Line[] lines;
        org.unix4j.sort.io.Input input, input;
        org.unix4j.sort.processor.LineProcessor output;
        java.util.Comparator comparator;
        org.unix4j.sort.line.Line cur, $r4, line#26, $r8;
        java.util.List $r0, $r1, $r5;
        java.lang.Object $r2, $r6;
        boolean $z0, $z1, $z2;

        this := @this: org.unix4j.sort.unix.sort.MergeProcessor;

        $r0 = this.<org.unix4j.sort.unix.sort.MergeProcessor: java.util.List inputs>;

        len = interfaceinvoke $r0.<java.util.List: int size()>();

        lines = newarray (org.unix4j.sort.line.Line)[len];

        i#7 = 0;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if i#7 >= len goto label04;

        $r1 = this.<org.unix4j.sort.unix.sort.MergeProcessor: java.util.List inputs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i#7);

        input = (org.unix4j.sort.io.Input) $r2;

        $i0 = i#7;

        $z0 = interfaceinvoke input.<org.unix4j.sort.io.Input: boolean hasMoreLines()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label02;

        $r4 = interfaceinvoke input.<org.unix4j.sort.io.Input: org.unix4j.sort.line.Line readLine()>();

        goto label03;

     label02:
        $r4 = null;

     label03:
        lines[$i0] = $r4;

        i#7 = i#7 + 1;

        goto label01;

     label04:
        output = virtualinvoke this.<org.unix4j.sort.unix.sort.MergeProcessor: org.unix4j.sort.processor.LineProcessor getOutput()>();

        comparator = virtualinvoke this.<org.unix4j.sort.unix.sort.MergeProcessor: java.util.Comparator getComparator()>();

     label05:
        line#26 = null;

        inputIndexOfLine#28 = -1;

        i#30 = 0;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#30);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if i#30 >= len goto label09;

        cur = lines[i#30];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(cur);

        if cur == null goto label08;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(inputIndexOfLine#28);

        if inputIndexOfLine#28 < 0 goto label07;

        $i1 = interfaceinvoke comparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(line#26, cur);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if 0 >= $i1 goto label08;

     label07:
        line#26 = cur;

        inputIndexOfLine#28 = i#30;

     label08:
        i#30 = i#30 + 1;

        goto label06;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(line#26);

        if line#26 == null goto label13;

        $z1 = interfaceinvoke output.<org.unix4j.sort.processor.LineProcessor: boolean processLine(org.unix4j.sort.line.Line)>(line#26);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label10;

        interfaceinvoke output.<org.unix4j.sort.processor.LineProcessor: void finish()>();

        return;

     label10:
        $r5 = this.<org.unix4j.sort.unix.sort.MergeProcessor: java.util.List inputs>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(inputIndexOfLine#28);

        input = (org.unix4j.sort.io.Input) $r6;

        $i2 = inputIndexOfLine#28;

        $z2 = interfaceinvoke input.<org.unix4j.sort.io.Input: boolean hasMoreLines()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label11;

        $r8 = interfaceinvoke input.<org.unix4j.sort.io.Input: org.unix4j.sort.line.Line readLine()>();

        goto label12;

     label11:
        $r8 = null;

     label12:
        lines[$i2] = $r8;

        goto label14;

     label13:
        interfaceinvoke output.<org.unix4j.sort.processor.LineProcessor: void finish()>();

        return;

     label14:
        goto label05;
    }


