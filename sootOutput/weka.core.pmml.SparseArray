    protected void <init>(org.w3c.dom.Element) throws java.lang.Exception
    {
        weka.core.pmml.SparseArray this;
        org.w3c.dom.Element arrayE;

        this := @this: weka.core.pmml.SparseArray;

        arrayE := @parameter0: org.w3c.dom.Element;

        specialinvoke this.<weka.core.pmml.Array: void <init>(org.w3c.dom.Element)>(arrayE);

        return;
    }

    protected void initialize(org.w3c.dom.Element) throws java.lang.Exception
    {
        weka.core.pmml.SparseArray this;
        org.w3c.dom.Element arrayE, entries, indices;
        java.lang.String arrayS, N, $r2, entriesName#15, contents#45, $r11, contents#95, $r18;
        org.w3c.dom.NodeList v, i, $r6, $r13;
        java.lang.Integer newInt, $r17;
        java.util.ArrayList $r0, $r10;
        weka.core.pmml.Array$ArrayType $r1, $r3, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.w3c.dom.Node $r5, $r7, $r12, $r14;
        java.io.StringReader $r8, sr#49, $r15, sr#99;
        java.io.StreamTokenizer $r9, st#53, $r16, st#103;
        java.util.List $r19, $r20;

        this := @this: weka.core.pmml.SparseArray;

        arrayE := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<weka.core.pmml.SparseArray: java.util.List m_indices> = $r0;

        arrayS = interfaceinvoke arrayE.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r1 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType REAL_SPARSE>;

        $r2 = virtualinvoke $r1.<weka.core.pmml.Array$ArrayType: java.lang.String toString()>();

        $z0 = virtualinvoke arrayS.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        $r3 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType REAL_SPARSE>;

        this.<weka.core.pmml.SparseArray: weka.core.pmml.Array$ArrayType m_type> = $r3;

        entriesName#15 = "REAL-Entries";

        goto label02;

     label01:
        $r4 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType INT_SPARSE>;

        this.<weka.core.pmml.SparseArray: weka.core.pmml.Array$ArrayType m_type> = $r4;

        entriesName#15 = "INT-Entries";

     label02:
        N = interfaceinvoke arrayE.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("n");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(N);

        if N == null goto label03;

        $i0 = virtualinvoke N.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label03;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(N);

        this.<weka.core.pmml.SparseArray: int m_numValues> = $i1;

     label03:
        v = interfaceinvoke arrayE.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>(entriesName#15);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(v);

        if v == null goto label04;

        $i2 = interfaceinvoke v.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 != 0 goto label05;

     label04:
        this.<weka.core.pmml.SparseArray: int m_numNonZero> = 0;

        goto label10;

     label05:
        $r5 = interfaceinvoke v.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        entries = (org.w3c.dom.Element) $r5;

        $r6 = interfaceinvoke entries.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        contents#45 = interfaceinvoke $r7.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r8 = new java.io.StringReader;

        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>(contents#45);

        sr#49 = $r8;

        $r9 = new java.io.StreamTokenizer;

        specialinvoke $r9.<java.io.StreamTokenizer: void <init>(java.io.Reader)>(sr#49);

        st#53 = $r9;

        virtualinvoke st#53.<java.io.StreamTokenizer: void resetSyntax()>();

        virtualinvoke st#53.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(0, 32);

        virtualinvoke st#53.<java.io.StreamTokenizer: void wordChars(int,int)>(33, 255);

        virtualinvoke st#53.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(32, 32);

        virtualinvoke st#53.<java.io.StreamTokenizer: void quoteChar(int)>(34);

        virtualinvoke st#53.<java.io.StreamTokenizer: void quoteChar(int)>(39);

        virtualinvoke st#53.<java.io.StreamTokenizer: int nextToken()>();

     label06:
        $i3 = st#53.<java.io.StreamTokenizer: int ttype>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 == -1 goto label07;

        $i4 = st#53.<java.io.StreamTokenizer: int ttype>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 == 10 goto label07;

        $r10 = this.<weka.core.pmml.SparseArray: java.util.ArrayList m_values>;

        $r11 = st#53.<java.io.StreamTokenizer: java.lang.String sval>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        virtualinvoke st#53.<java.io.StreamTokenizer: int nextToken()>();

        goto label06;

     label07:
        i = interfaceinvoke arrayE.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("Indices");

        $r12 = interfaceinvoke i.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        indices = (org.w3c.dom.Element) $r12;

        $r13 = interfaceinvoke indices.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r14 = interfaceinvoke $r13.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        contents#95 = interfaceinvoke $r14.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r15 = new java.io.StringReader;

        specialinvoke $r15.<java.io.StringReader: void <init>(java.lang.String)>(contents#95);

        sr#99 = $r15;

        $r16 = new java.io.StreamTokenizer;

        specialinvoke $r16.<java.io.StreamTokenizer: void <init>(java.io.Reader)>(sr#99);

        st#103 = $r16;

        virtualinvoke st#103.<java.io.StreamTokenizer: void resetSyntax()>();

        virtualinvoke st#103.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(0, 32);

        virtualinvoke st#103.<java.io.StreamTokenizer: void wordChars(int,int)>(33, 255);

        virtualinvoke st#103.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(32, 32);

        virtualinvoke st#103.<java.io.StreamTokenizer: void quoteChar(int)>(34);

        virtualinvoke st#103.<java.io.StreamTokenizer: void quoteChar(int)>(39);

        virtualinvoke st#103.<java.io.StreamTokenizer: int nextToken()>();

     label08:
        $i5 = st#103.<java.io.StreamTokenizer: int ttype>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 == -1 goto label09;

        $i6 = st#103.<java.io.StreamTokenizer: int ttype>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6);

        if $i6 == 10 goto label09;

        $r17 = new java.lang.Integer;

        $r18 = st#103.<java.io.StreamTokenizer: java.lang.String sval>;

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        $i8 = $i7 - 1;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>($i8);

        newInt = $r17;

        $r19 = this.<weka.core.pmml.SparseArray: java.util.List m_indices>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(newInt);

        virtualinvoke st#103.<java.io.StreamTokenizer: int nextToken()>();

        goto label08;

     label09:
        $r20 = this.<weka.core.pmml.SparseArray: java.util.List m_indices>;

        $i9 = interfaceinvoke $r20.<java.util.List: int size()>();

        this.<weka.core.pmml.SparseArray: int m_numNonZero> = $i9;

     label10:
        return;
    }


