    public void <init>()
    {
        weka.classifiers.trees.j48.GainRatioSplitCrit this;

        this := @this: weka.classifiers.trees.j48.GainRatioSplitCrit;

        specialinvoke this.<weka.classifiers.trees.j48.EntropyBasedSplitCrit: void <init>()>();

        return;
    }

    public final double splitCritValue(weka.classifiers.trees.j48.Distribution, double, double)
    {
        weka.classifiers.trees.j48.GainRatioSplitCrit this;
        weka.classifiers.trees.j48.Distribution bags;
        double totalnoInst, numerator, denumerator#4, denumerator#12, $d0;
        boolean $z0;

        this := @this: weka.classifiers.trees.j48.GainRatioSplitCrit;

        bags := @parameter0: weka.classifiers.trees.j48.Distribution;

        totalnoInst := @parameter1: double;

        numerator := @parameter2: double;

        denumerator#4 = specialinvoke this.<weka.classifiers.trees.j48.GainRatioSplitCrit: double splitEnt(weka.classifiers.trees.j48.Distribution,double)>(bags, totalnoInst);

        $z0 = staticinvoke <weka.core.Utils: boolean eq(double,double)>(denumerator#4, 0.0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        denumerator#12 = denumerator#4 / totalnoInst;

        $d0 = numerator / denumerator#12;

        return $d0;
    }

    private final double splitEnt(weka.classifiers.trees.j48.Distribution, double)
    {
        weka.classifiers.trees.j48.GainRatioSplitCrit this;
        weka.classifiers.trees.j48.Distribution bags;
        double totalnoInst, noUnknown, returnValue#2, $d0, $d1, $d2, $d3, $d4, returnValue#27, $d5, $d6, $d7;
        boolean $z0;
        int i#12, $i0;

        this := @this: weka.classifiers.trees.j48.GainRatioSplitCrit;

        bags := @parameter0: weka.classifiers.trees.j48.Distribution;

        totalnoInst := @parameter1: double;

        returnValue#2 = 0.0;

        $d0 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double total()>();

        noUnknown = totalnoInst - $d0;

        $d1 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double total()>();

        $z0 = staticinvoke <weka.core.Utils: boolean gr(double,double)>($d1, 0.0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        i#12 = 0;

     label1:
        $i0 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: int numBags()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#12 >= $i0 goto label2;

        $d2 = virtualinvoke bags.<weka.classifiers.trees.j48.Distribution: double perBag(int)>(i#12);

        $d3 = virtualinvoke this.<weka.classifiers.trees.j48.GainRatioSplitCrit: double lnFunc(double)>($d2);

        returnValue#2 = returnValue#2 - $d3;

        i#12 = i#12 + 1;

        goto label1;

     label2:
        $d4 = virtualinvoke this.<weka.classifiers.trees.j48.GainRatioSplitCrit: double lnFunc(double)>(noUnknown);

        returnValue#27 = returnValue#2 - $d4;

        $d5 = virtualinvoke this.<weka.classifiers.trees.j48.GainRatioSplitCrit: double lnFunc(double)>(totalnoInst);

        returnValue#2 = returnValue#27 + $d5;

     label3:
        $d6 = <weka.core.ContingencyTables: double log2>;

        $d7 = returnValue#2 / $d6;

        return $d7;
    }


