    public void <init>(kanzi.ArrayComparator)
    {
        kanzi.util.sort.QuickSort this;
        kanzi.ArrayComparator 'cmp';

        this := @this: kanzi.util.sort.QuickSort;

        'cmp' := @parameter0: kanzi.ArrayComparator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<kanzi.util.sort.QuickSort: kanzi.ArrayComparator 'cmp'> = 'cmp';

        return;
    }

    public boolean sort(int[], int, int)
    {
        kanzi.util.sort.QuickSort this;
        int[] input;
        int blkptr, len, $i0, $i1, $i2, $i3;
        kanzi.ArrayComparator $r0;

        this := @this: kanzi.util.sort.QuickSort;

        input := @parameter0: int[];

        blkptr := @parameter1: int;

        len := @parameter2: int;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(blkptr);

        if blkptr < 0 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if len <= 0 goto label1;

        $i0 = blkptr + len;

        $i1 = lengthof input;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 <= $i1 goto label2;

     label1:
        return 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if len != 1 goto label3;

        return 1;

     label3:
        $i2 = blkptr + len;

        $i3 = $i2 - 1;

        $r0 = this.<kanzi.util.sort.QuickSort: kanzi.ArrayComparator 'cmp'>;

        staticinvoke <kanzi.util.sort.QuickSort: void recursiveSort(int[],int,int,kanzi.ArrayComparator)>(input, blkptr, $i3, $r0);

        return 1;
    }

    private static void recursiveSort(int[], int, int, kanzi.ArrayComparator)
    {
        int[] array;
        int low, high, mid, s, lows, highs, l, m, h, pivIdx, pivot, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i#205, mi#207, j#209, mj#211, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, tmp#254, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, tmp#300, $i84, $i85, $i86, mi#309, i#310, $i87, mj#321, j#322, $i88;
        kanzi.ArrayComparator comp;

        array := @parameter0: int[];

        low := @parameter1: int;

        high := @parameter2: int;

        comp := @parameter3: kanzi.ArrayComparator;

        $i0 = low + 32;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if high > $i0 goto label03;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp);

        if comp == null goto label01;

        staticinvoke <kanzi.util.sort.QuickSort: void sortSmallArrayWithComparator(int[],int,int,kanzi.ArrayComparator)>(array, low, high, comp);

        goto label02;

     label01:
        staticinvoke <kanzi.util.sort.QuickSort: void sortSmallArrayNoComparator(int[],int,int)>(array, low, high);

     label02:
        return;

     label03:
        $i1 = high - low;

        $i2 = $i1 >> 1;

        mid = low + $i2;

        $i3 = high - low;

        s = $i3 >> 3;

        lows = low + s;

        highs = high - s;

        $i4 = array[low];

        $i5 = low + s;

        $i6 = array[$i5];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6);

        if $i4 >= $i6 goto label06;

        $i7 = array[lows];

        $i8 = lows + s;

        $i9 = array[$i8];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        if $i7 >= $i9 goto label04;

        $i10 = lows;

        goto label09;

     label04:
        $i11 = array[low];

        $i12 = lows + s;

        $i13 = array[$i12];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        if $i11 >= $i13 goto label05;

        $i10 = lows + s;

        goto label09;

     label05:
        $i10 = low;

        goto label09;

     label06:
        $i14 = array[lows];

        $i15 = lows + s;

        $i16 = array[$i15];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i16);

        if $i14 <= $i16 goto label07;

        $i10 = lows;

        goto label09;

     label07:
        $i17 = array[low];

        $i18 = lows + s;

        $i19 = array[$i18];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i19);

        if $i17 <= $i19 goto label08;

        $i10 = lows + s;

        goto label09;

     label08:
        $i10 = low;

     label09:
        l = $i10;

        $i20 = mid - s;

        $i21 = array[$i20];

        $i22 = array[mid];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i21);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i22);

        if $i21 >= $i22 goto label12;

        $i23 = array[mid];

        $i24 = mid + s;

        $i25 = array[$i24];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i23);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i25);

        if $i23 >= $i25 goto label10;

        $i26 = mid;

        goto label15;

     label10:
        $i27 = mid - s;

        $i28 = array[$i27];

        $i29 = mid + s;

        $i30 = array[$i29];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i28);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i30);

        if $i28 >= $i30 goto label11;

        $i26 = mid + s;

        goto label15;

     label11:
        $i26 = mid - s;

        goto label15;

     label12:
        $i31 = array[mid];

        $i32 = mid + s;

        $i33 = array[$i32];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i31);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i33);

        if $i31 <= $i33 goto label13;

        $i26 = mid;

        goto label15;

     label13:
        $i34 = mid - s;

        $i35 = array[$i34];

        $i36 = mid + s;

        $i37 = array[$i36];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i35);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i37);

        if $i35 <= $i37 goto label14;

        $i26 = mid + s;

        goto label15;

     label14:
        $i26 = mid - s;

     label15:
        m = $i26;

        $i38 = highs - s;

        $i39 = array[$i38];

        $i40 = array[highs];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i39);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i40);

        if $i39 >= $i40 goto label18;

        $i41 = array[highs];

        $i42 = array[high];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i41);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i42);

        if $i41 >= $i42 goto label16;

        $i43 = highs;

        goto label21;

     label16:
        $i44 = highs - s;

        $i45 = array[$i44];

        $i46 = array[high];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i45);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i46);

        if $i45 >= $i46 goto label17;

        $i43 = high;

        goto label21;

     label17:
        $i43 = highs - s;

        goto label21;

     label18:
        $i47 = array[highs];

        $i48 = array[high];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i47);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i48);

        if $i47 <= $i48 goto label19;

        $i43 = highs;

        goto label21;

     label19:
        $i49 = highs - s;

        $i50 = array[$i49];

        $i51 = array[high];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i50);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i51);

        if $i50 <= $i51 goto label20;

        $i43 = high;

        goto label21;

     label20:
        $i43 = highs - s;

     label21:
        h = $i43;

        $i52 = array[l];

        $i53 = array[m];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i52);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i53);

        if $i52 >= $i53 goto label24;

        $i54 = array[m];

        $i55 = array[h];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i54);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i55);

        if $i54 >= $i55 goto label22;

        $i56 = m;

        goto label27;

     label22:
        $i57 = array[l];

        $i58 = array[h];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i57);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i58);

        if $i57 >= $i58 goto label23;

        $i56 = h;

        goto label27;

     label23:
        $i56 = l;

        goto label27;

     label24:
        $i59 = array[m];

        $i60 = array[h];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i59);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i60);

        if $i59 <= $i60 goto label25;

        $i56 = m;

        goto label27;

     label25:
        $i61 = array[l];

        $i62 = array[h];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i61);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i62);

        if $i61 <= $i62 goto label26;

        $i56 = h;

        goto label27;

     label26:
        $i56 = l;

     label27:
        pivIdx = $i56;

        pivot = array[pivIdx];

        i#205 = low;

        mi#207 = low;

        j#209 = high;

        mj#211 = high;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(comp);

        if comp == null goto label34;

     label28:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label40;

     label29:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label31;

        $i63 = array[i#205];

        $i64 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>($i63, pivot);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i64);

        if $i64 > 0 goto label31;

        $i65 = array[i#205];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i65);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pivot);

        if $i65 != pivot goto label30;

        $i66 = mi#207;

        mi#207 = mi#207 + 1;

        $i67 = array[$i66];

        array[i#205] = $i67;

     label30:
        i#205 = i#205 + 1;

        goto label29;

     label31:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label33;

        $i68 = array[j#209];

        $i69 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>(pivot, $i68);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i69);

        if $i69 > 0 goto label33;

        $i70 = array[j#209];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i70);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pivot);

        if $i70 != pivot goto label32;

        $i71 = mj#211;

        mj#211 = mj#211 + -1;

        $i72 = array[$i71];

        array[j#209] = $i72;

     label32:
        j#209 = j#209 + -1;

        goto label31;

     label33:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label28;

        tmp#254 = array[i#205];

        $i73 = i#205;

        i#205 = i#205 + 1;

        $i74 = array[j#209];

        array[$i73] = $i74;

        $i75 = j#209;

        j#209 = j#209 + -1;

        array[$i75] = tmp#254;

        goto label28;

     label34:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label40;

     label35:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label37;

        $i76 = array[i#205];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i76);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pivot);

        if $i76 > pivot goto label37;

        $i77 = array[i#205];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i77);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pivot);

        if $i77 != pivot goto label36;

        $i78 = mi#207;

        mi#207 = mi#207 + 1;

        $i79 = array[$i78];

        array[i#205] = $i79;

     label36:
        i#205 = i#205 + 1;

        goto label35;

     label37:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label39;

        $i80 = array[j#209];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pivot);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i80);

        if pivot > $i80 goto label39;

        $i81 = array[j#209];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i81);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pivot);

        if $i81 != pivot goto label38;

        $i82 = mj#211;

        mj#211 = mj#211 + -1;

        $i83 = array[$i82];

        array[j#209] = $i83;

     label38:
        j#209 = j#209 + -1;

        goto label37;

     label39:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#205);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#209);

        if i#205 > j#209 goto label34;

        tmp#300 = array[i#205];

        $i84 = i#205;

        i#205 = i#205 + 1;

        $i85 = array[j#209];

        array[$i84] = $i85;

        $i86 = j#209;

        j#209 = j#209 + -1;

        array[$i86] = tmp#300;

        goto label34;

     label40:
        mi#309 = mi#207 + -1;

        i#310 = i#205 + -1;

     label41:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mi#309);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(low);

        if mi#309 < low goto label42;

        $i87 = array[i#310];

        array[mi#309] = $i87;

        array[i#310] = pivot;

        mi#309 = mi#309 + -1;

        i#310 = i#310 + -1;

        goto label41;

     label42:
        mj#321 = mj#211 + 1;

        j#322 = j#209 + 1;

     label43:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(mj#321);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        if mj#321 > high goto label44;

        $i88 = array[j#322];

        array[mj#321] = $i88;

        array[j#322] = pivot;

        mj#321 = mj#321 + 1;

        j#322 = j#322 + 1;

        goto label43;

     label44:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#310);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(low);

        if i#310 <= low goto label45;

        staticinvoke <kanzi.util.sort.QuickSort: void recursiveSort(int[],int,int,kanzi.ArrayComparator)>(array, low, i#310, comp);

     label45:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#322);

        if high <= j#322 goto label46;

        staticinvoke <kanzi.util.sort.QuickSort: void recursiveSort(int[],int,int,kanzi.ArrayComparator)>(array, j#322, high, comp);

     label46:
        return;
    }

    private static void sortSmallArrayNoComparator(int[], int, int)
    {
        int[] array;
        int low, high, tmp, a1, a2, a3, tmp, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i#94, j#103, $i10, $i11, $i12, $i13;

        array := @parameter0: int[];

        low := @parameter1: int;

        high := @parameter2: int;

        $i0 = low + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if high != $i0 goto label02;

        $i1 = array[low];

        $i2 = array[high];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i1 <= $i2 goto label01;

        tmp = array[low];

        $i3 = array[high];

        array[low] = $i3;

        array[high] = tmp;

     label01:
        return;

     label02:
        $i4 = low + 2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if high != $i4 goto label09;

        a1 = array[low];

        $i5 = low + 1;

        a2 = array[$i5];

        a3 = array[high];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a2);

        if a1 > a2 goto label05;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a3);

        if a2 > a3 goto label03;

        return;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a1);

        if a3 > a1 goto label04;

        array[low] = a3;

        $i6 = low + 1;

        array[$i6] = a1;

        array[high] = a2;

        return;

     label04:
        $i7 = low + 1;

        array[$i7] = a3;

        array[high] = a2;

        goto label08;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a3);

        if a1 > a3 goto label06;

        array[low] = a2;

        $i8 = low + 1;

        array[$i8] = a1;

        return;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a2);

        if a3 > a2 goto label07;

        array[low] = a3;

        array[high] = a1;

        return;

     label07:
        array[low] = a2;

        $i9 = low + 1;

        array[$i9] = a3;

        array[high] = a1;

     label08:
        return;

     label09:
        i#94 = low + 1;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#94);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        if i#94 > high goto label13;

        tmp = array[i#94];

        j#103 = i#94 - 1;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#103);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(low);

        if j#103 < low goto label12;

        $i10 = array[j#103];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(tmp);

        if $i10 <= tmp goto label12;

        $i11 = j#103 + 1;

        $i12 = array[j#103];

        array[$i11] = $i12;

        j#103 = j#103 + -1;

        goto label11;

     label12:
        $i13 = j#103 + 1;

        array[$i13] = tmp;

        i#94 = i#94 + 1;

        goto label10;

     label13:
        return;
    }

    private static void sortSmallArrayWithComparator(int[], int, int, kanzi.ArrayComparator)
    {
        int[] array;
        int low, high, tmp, a1, a2, a3, tmp, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i#106, j#115, $i16, $i17, $i18, $i19, $i20;
        kanzi.ArrayComparator comp;

        array := @parameter0: int[];

        low := @parameter1: int;

        high := @parameter2: int;

        comp := @parameter3: kanzi.ArrayComparator;

        $i0 = low + 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if high != $i0 goto label02;

        $i1 = array[low];

        $i2 = array[high];

        $i3 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>($i1, $i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 0 goto label01;

        tmp = array[low];

        $i4 = array[high];

        array[low] = $i4;

        array[high] = tmp;

     label01:
        return;

     label02:
        $i5 = low + 2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if high != $i5 goto label09;

        a1 = array[low];

        $i6 = low + 1;

        a2 = array[$i6];

        a3 = array[high];

        $i7 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>(a1, a2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        if $i7 > 0 goto label05;

        $i8 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>(a2, a3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        if $i8 > 0 goto label03;

        return;

     label03:
        $i9 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>(a3, a1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        if $i9 > 0 goto label04;

        array[low] = a3;

        $i10 = low + 1;

        array[$i10] = a1;

        array[high] = a2;

        return;

     label04:
        $i11 = low + 1;

        array[$i11] = a3;

        array[high] = a2;

        goto label08;

     label05:
        $i12 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>(a1, a3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12);

        if $i12 > 0 goto label06;

        array[low] = a2;

        $i13 = low + 1;

        array[$i13] = a1;

        return;

     label06:
        $i14 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>(a3, a2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14);

        if $i14 > 0 goto label07;

        array[low] = a3;

        array[high] = a1;

        return;

     label07:
        array[low] = a2;

        $i15 = low + 1;

        array[$i15] = a3;

        array[high] = a1;

     label08:
        return;

     label09:
        i#106 = low + 1;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#106);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(high);

        if i#106 > high goto label13;

        tmp = array[i#106];

        j#115 = i#106 - 1;

     label11:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#115);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(low);

        if j#115 < low goto label12;

        $i16 = array[j#115];

        $i17 = interfaceinvoke comp.<kanzi.ArrayComparator: int compare(int,int)>($i16, tmp);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        if $i17 <= 0 goto label12;

        $i18 = j#115 + 1;

        $i19 = array[j#115];

        array[$i18] = $i19;

        j#115 = j#115 + -1;

        goto label11;

     label12:
        $i20 = j#115 + 1;

        array[$i20] = tmp;

        i#106 = i#106 + 1;

        goto label10;

     label13:
        return;
    }


