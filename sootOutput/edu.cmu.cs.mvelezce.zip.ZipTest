    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] argv;
        java.util.ArrayList fileBuffer, $r0;
        java.io.FileInputStream inStream1, $r1;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream outStream1;
        byte[] buffer1, buffer2;
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream inStream2;
        java.lang.String message#2, contents#40, $r8;
        int $i0, $i1, len#27, $i2, len#47;
        boolean $z0, $z1, $z2, $z3;
        java.io.File $r2, $r4;
        edu.cmu.cs.mvelezce.zip.ZipTest$1 $r3;
        edu.cmu.cs.mvelezce.zip.ZipTest$2 $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.io.PrintStream $r10;
        java.lang.AssertionError $r11;

        argv := @parameter0: java.lang.String[];

        message#2 = "Hallo\n";

        $i0 = lengthof argv;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        message#2 = argv[0];

     label3:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(5000);

        fileBuffer = $r0;

        $r1 = new java.io.FileInputStream;

        $r2 = <edu.cmu.cs.mvelezce.zip.ZipTest: java.io.File fileToZip>;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        inStream1 = $r1;

        $r3 = new edu.cmu.cs.mvelezce.zip.ZipTest$1;

        specialinvoke $r3.<edu.cmu.cs.mvelezce.zip.ZipTest$1: void <init>(java.util.ArrayList)>(fileBuffer);

        $r4 = <edu.cmu.cs.mvelezce.zip.ZipTest: java.io.File fileToZip>;

        outStream1 = staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream getZipOutStream(java.io.OutputStream,java.io.File)>($r3, $r4);

        buffer1 = newarray (byte)[65535];

     label4:
        $i1 = virtualinvoke inStream1.<java.io.FileInputStream: int read(byte[])>(buffer1);

        len#27 = $i1;

        if $i1 == -1 goto label5;

        virtualinvoke outStream1.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void write(byte[],int,int)>(buffer1, 0, len#27);

        goto label4;

     label5:
        virtualinvoke inStream1.<java.io.FileInputStream: void close()>();

        virtualinvoke outStream1.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void close()>();

        $r5 = new edu.cmu.cs.mvelezce.zip.ZipTest$2;

        specialinvoke $r5.<edu.cmu.cs.mvelezce.zip.ZipTest$2: void <init>(java.util.ArrayList)>(fileBuffer);

        inStream2 = staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream getZipInStream(java.io.InputStream)>($r5);

        contents#40 = "";

        buffer2 = newarray (byte)[65535];

     label6:
        $i2 = virtualinvoke inStream2.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: int read(byte[])>(buffer2);

        len#47 = $i2;

        if $i2 == -1 goto label7;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(contents#40);

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int)>(buffer2, 0, len#47);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        contents#40 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label7:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(message#2);

        $z2 = <edu.cmu.cs.mvelezce.zip.ZipTest: boolean $assertionsDisabled>;

        if $z2 != 0 goto label8;

        $z3 = virtualinvoke contents#40.<java.lang.String: boolean equals(java.lang.Object)>(message#2);

        if $z3 != 0 goto label8;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label8:
        virtualinvoke inStream2.<edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream: void close()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.io.File $r1;

        $r0 = class "edu/cmu/cs/mvelezce/zip/ZipTest";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <edu.cmu.cs.mvelezce.zip.ZipTest: boolean $assertionsDisabled> = $z1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>("/home/rhein/ZipMeTestDir", "hallo.txt");

        <edu.cmu.cs.mvelezce.zip.ZipTest: java.io.File fileToZip> = $r1;

        return;
    }

    private static edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream getZipInStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream in;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream $r0, $r1;

        in := @parameter0: java.io.InputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREGZIP>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r0 = staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream getZipInStream__role__GZIP(java.io.InputStream)>(in);

        return $r0;

     label1:
        $r1 = staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream getZipInStream__before__GZIP(java.io.InputStream)>(in);

        return $r1;
    }

    private static edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream getZipOutStream(java.io.OutputStream, java.io.File) throws java.io.IOException
    {
        java.io.OutputStream out;
        java.io.File forFile;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream $r0, $r1;

        out := @parameter0: java.io.OutputStream;

        forFile := @parameter1: java.io.File;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREGZIP>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r0 = staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream getZipOutStream__role__GZIP(java.io.OutputStream,java.io.File)>(out, forFile);

        return $r0;

     label1:
        $r1 = staticinvoke <edu.cmu.cs.mvelezce.zip.ZipTest: edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream getZipOutStream__before__GZIP(java.io.OutputStream,java.io.File)>(out, forFile);

        return $r1;
    }

    private static edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream getZipInStream__before__GZIP(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream in;
        edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream zi, $r0;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry;
        boolean $z0, $z1;
        java.io.IOException $r1;

        in := @parameter0: java.io.InputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: void <init>(java.io.InputStream)>(in);

        zi = $r0;

        entry = virtualinvoke zi.<edu.cmu.cs.mvelezce.zip.zipme.ZipInputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry getNextEntry()>();

        if entry == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("zip archive stream does not contain an entry.");

        throw $r1;

     label4:
        return zi;
    }

    private static edu.cmu.cs.mvelezce.zip.zipme.InflaterInputStream getZipInStream__role__GZIP(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream in;
        edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream $r0;

        in := @parameter0: java.io.InputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.GZIPInputStream: void <init>(java.io.InputStream)>(in);

        return $r0;
    }

    private static edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream getZipOutStream__before__GZIP(java.io.OutputStream, java.io.File) throws java.io.IOException
    {
        java.io.OutputStream out;
        java.io.File forFile;
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream zos, $r0;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r1;

        out := @parameter0: java.io.OutputStream;

        forFile := @parameter1: java.io.File;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void <init>(java.io.OutputStream)>(out);

        zos = $r0;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.ZipEntry;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void <init>(java.lang.String)>("/some/dir/hallo.txt");

        virtualinvoke zos.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void putNextEntry(edu.cmu.cs.mvelezce.zip.zipme.ZipEntry)>($r1);

        return zos;
    }

    private static edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream getZipOutStream__role__GZIP(java.io.OutputStream, java.io.File) throws java.io.IOException
    {
        java.io.OutputStream out;
        java.io.File forFile;
        edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream $r0;

        out := @parameter0: java.io.OutputStream;

        forFile := @parameter1: java.io.File;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.GZIPOutputStream: void <init>(java.io.OutputStream)>(out);

        return $r0;
    }


