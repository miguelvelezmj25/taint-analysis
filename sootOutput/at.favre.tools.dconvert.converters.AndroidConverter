    public void <init>()
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        specialinvoke this.<at.favre.tools.dconvert.converters.APlatformConverter: void <init>()>();

        return;
    }

    public static boolean isNinePatch(java.io.File)
    {
        java.io.File file;
        java.lang.String $r0;
        boolean $z0;

        file := @parameter0: java.io.File;

        $r0 = virtualinvoke file.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(".9.png");

        return $z0;
    }

    public java.lang.String getConverterName()
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        return "android-converter";
    }

    public java.util.List usedOutputDensities(at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        at.favre.tools.dconvert.arg.Arguments arguments;
        java.util.List $r0;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        arguments := @parameter0: at.favre.tools.dconvert.arg.Arguments;

        $r0 = staticinvoke <at.favre.tools.dconvert.converters.AndroidConverter: java.util.List getAndroidDensityDescriptors(at.favre.tools.dconvert.arg.Arguments)>(arguments);

        return $r0;
    }

    public java.io.File createMainSubFolder(java.io.File, java.lang.String, at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        java.io.File destinationFolder, $r1, $r3;
        java.lang.String targetImageFileName, $r2;
        at.favre.tools.dconvert.arg.Arguments arguments;
        java.util.Set $r0;
        int $i0;
        boolean $z0;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        destinationFolder := @parameter0: java.io.File;

        targetImageFileName := @parameter1: java.lang.String;

        arguments := @parameter2: at.favre.tools.dconvert.arg.Arguments;

        $r0 = arguments.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform>;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 1 goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(destinationFolder, "android");

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = arguments.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun>;

        $r3 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.io.File createAndCheckFolder(java.lang.String,boolean)>($r2, $z0);

        return $r3;

     label1:
        return destinationFolder;
    }

    public void onPreExecute(java.io.File, java.lang.String, java.util.List, at.favre.tools.dconvert.arg.ImageType, at.favre.tools.dconvert.arg.Arguments) throws java.lang.Exception
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        java.io.File dstFolder;
        java.lang.String targetFileName;
        java.util.List densityDescriptions;
        at.favre.tools.dconvert.arg.ImageType imageType;
        at.favre.tools.dconvert.arg.Arguments arguments;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        dstFolder := @parameter0: java.io.File;

        targetFileName := @parameter1: java.lang.String;

        densityDescriptions := @parameter2: java.util.List;

        imageType := @parameter3: at.favre.tools.dconvert.arg.ImageType;

        arguments := @parameter4: at.favre.tools.dconvert.arg.Arguments;

        return;
    }

    public volatile java.io.File createFolderForOutputFile(java.io.File, at.favre.tools.dconvert.converters.descriptors.DensityDescriptor, java.awt.Dimension, java.lang.String, at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        java.io.File l1, $r1;
        at.favre.tools.dconvert.converters.descriptors.DensityDescriptor l2;
        java.awt.Dimension l3;
        java.lang.String l4;
        at.favre.tools.dconvert.arg.Arguments l5;
        at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor $r0;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        l1 := @parameter0: java.io.File;

        l2 := @parameter1: at.favre.tools.dconvert.converters.descriptors.DensityDescriptor;

        l3 := @parameter2: java.awt.Dimension;

        l4 := @parameter3: java.lang.String;

        l5 := @parameter4: at.favre.tools.dconvert.arg.Arguments;

        $r0 = (at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor) l2;

        $r1 = virtualinvoke this.<at.favre.tools.dconvert.converters.AndroidConverter: java.io.File createFolderForOutputFile(java.io.File,at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor,java.awt.Dimension,java.lang.String,at.favre.tools.dconvert.arg.Arguments)>(l1, $r0, l3, l4, l5);

        return $r1;
    }

    public volatile java.lang.String createDestinationFileNameWithoutExtension(at.favre.tools.dconvert.converters.descriptors.DensityDescriptor, java.awt.Dimension, java.lang.String, at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        at.favre.tools.dconvert.converters.descriptors.DensityDescriptor l1;
        java.awt.Dimension l2;
        java.lang.String l3, $r1;
        at.favre.tools.dconvert.arg.Arguments l4;
        at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor $r0;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        l1 := @parameter0: at.favre.tools.dconvert.converters.descriptors.DensityDescriptor;

        l2 := @parameter1: java.awt.Dimension;

        l3 := @parameter2: java.lang.String;

        l4 := @parameter3: at.favre.tools.dconvert.arg.Arguments;

        $r0 = (at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor) l1;

        $r1 = virtualinvoke this.<at.favre.tools.dconvert.converters.AndroidConverter: java.lang.String createDestinationFileNameWithoutExtension(at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor,java.awt.Dimension,java.lang.String,at.favre.tools.dconvert.arg.Arguments)>($r0, l2, l3, l4);

        return $r1;
    }

    public void onPostExecute(at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        at.favre.tools.dconvert.arg.Arguments arguments;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        arguments := @parameter0: at.favre.tools.dconvert.arg.Arguments;

        return;
    }

    public static java.util.List getAndroidDensityDescriptors(at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.arg.Arguments arguments;
        java.util.ArrayList list, $r0;
        java.lang.String dirPrefix, $r1, $r6, $r11, $r16, $r21, $r26, $r31, $r36;
        boolean $z0, $z1;
        at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor $r2, $r7, $r12, $r17, $r22, $r27, $r32;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19, $r20, $r23, $r24, $r25, $r28, $r29, $r30, $r33, $r34, $r35;

        arguments := @parameter0: at.favre.tools.dconvert.arg.Arguments;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        list = $r0;

        $z0 = arguments.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r1 = "mipmap";

        goto label2;

     label1:
        $r1 = "drawable";

     label2:
        dirPrefix = $r1;

        $z1 = arguments.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        $r2 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-ldpi");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(0.75F, "ldpi", $r6);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r7 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-tvdpi");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(1.33F, "tvdpi", $r11);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        $r12 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-mdpi");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(1.0F, "mdpi", $r16);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r17 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-hdpi");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(1.5F, "hdpi", $r21);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r22 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-xhdpi");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(2.0F, "xhdpi", $r26);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r27 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-xxhdpi");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(3.0F, "xxhdpi", $r31);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r32 = new at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dirPrefix);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-xxxhdpi");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: void <init>(float,java.lang.String,java.lang.String)>(4.0F, "xxxhdpi", $r36);

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r32);

        return list;
    }

    public java.lang.String createDestinationFileNameWithoutExtension(at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor, java.awt.Dimension, java.lang.String, at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor density;
        java.awt.Dimension dimension;
        java.lang.String targetFileName;
        at.favre.tools.dconvert.arg.Arguments arguments;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        density := @parameter0: at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        dimension := @parameter1: java.awt.Dimension;

        targetFileName := @parameter2: java.lang.String;

        arguments := @parameter3: at.favre.tools.dconvert.arg.Arguments;

        return targetFileName;
    }

    public java.io.File createFolderForOutputFile(java.io.File, at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor, java.awt.Dimension, java.lang.String, at.favre.tools.dconvert.arg.Arguments)
    {
        at.favre.tools.dconvert.converters.AndroidConverter this;
        java.io.File mainSubFolder, $r0, $r3;
        at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor density;
        java.awt.Dimension dimension;
        java.lang.String targetFileName, $r1, $r2;
        at.favre.tools.dconvert.arg.Arguments arguments;
        boolean $z0;

        this := @this: at.favre.tools.dconvert.converters.AndroidConverter;

        mainSubFolder := @parameter0: java.io.File;

        density := @parameter1: at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor;

        dimension := @parameter2: java.awt.Dimension;

        targetFileName := @parameter3: java.lang.String;

        arguments := @parameter4: at.favre.tools.dconvert.arg.Arguments;

        $r0 = new java.io.File;

        $r1 = density.<at.favre.tools.dconvert.converters.descriptors.AndroidDensityDescriptor: java.lang.String folderName>;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(mainSubFolder, $r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = arguments.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun>;

        $r3 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.io.File createAndCheckFolder(java.lang.String,boolean)>($r2, $z0);

        return $r3;
    }


