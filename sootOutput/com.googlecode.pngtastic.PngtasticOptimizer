    public static void main(java.lang.String[])
    {
        java.lang.String[] args, i#6, i#7;
        java.util.HashMap options, $r0;
        int $i0, $i1, $i2, $i3, $i4, last#1, i#2, next#4;
        java.lang.Object[] $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        java.lang.Object $r2, $r3, $r4, $r5;
        java.lang.String $r6, $r8, $r10, $r12, $r14, $r20, arg#3, $r22, arg#10, $r23, next#12, compressor#15, logLevel#17;
        java.lang.Boolean $r7, $r9, $r11, $r13, $r15, removeGamma#13;
        com.googlecode.pngtastic.PngtasticOptimizer $r16;
        java.io.PrintStream $r17, $r18;
        java.lang.Integer compressionLevel#14, iterations#16;

        args := @parameter0: java.lang.String[];

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        options = $r0;

        last#1 = 0;

        i#2 = 0;

     label01:
        $i0 = lengthof args;

        if i#2 >= $i0 goto label06;

        arg#3 = args[i#2];

        $z23 = virtualinvoke arg#3.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        $z24 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z23);

        if $z24 == 0 goto label05;

        next#4 = i#2 + 1;

        $i4 = lengthof args;

        if next#4 >= $i4 goto label02;

        $z26 = 1;

        goto label03;

     label02:
        $z26 = 0;

     label03:
        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z26);

        if $z25 == 0 goto label04;

        $r20 = args[next#4];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg#3, $r20);

        last#1 = next#4 + 1;

        goto label05;

     label04:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg#3, null);

        last#1 = next#4;

     label05:
        i#2 = i#2 + 1;

        goto label01;

     label06:
        $i1 = lengthof args;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#1, $i1);

        i#6 = (java.lang.String[]) $r1;

        i#7 = newarray (java.lang.String)[1];

        i#7[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/instrumented/pngtastic/images/optimizer/1px.png";

        $i2 = lengthof i#7;

        if $i2 != 0 goto label07;

        $z27 = 1;

        goto label08;

     label07:
        $z27 = 0;

     label08:
        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z27);

        if $z0 == 0 goto label09;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("java -cp pngtastic-x.x.jar com.googlecode.pngtastic.PngtasticOptimizer [options] file1 [file2 ..]\nOptions:\n  --toDir            the directory where optimized files go (will be created if it doesn\'t exist)\n  --fileSuffix       string appended to the optimized files (file.png can become file.png.optimized.png)\n  --removeGamma      remove gamma correction info if found\n  --compressionLevel the compression level; 0-9 allowed (default is to try them all by brute force)\n  --compressor       path to an alternate compressor (e.g. zopfli)\n  --iterations       number of compression iterations (useful for zopfli)\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label09:
        $r2 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        if $r2 != null goto label10;

        $r22 = ".";

        goto label11;

     label10:
        $r3 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        $r22 = (java.lang.String) $r3;

     label11:
        arg#10 = $r22;

        $r4 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        if $r4 != null goto label12;

        $r23 = "";

        goto label13;

     label12:
        $r5 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        $r23 = (java.lang.String) $r5;

     label13:
        next#12 = $r23;

        $r6 = args[0];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREMOVEGAMMA(boolean)>($z1);

        <com.googlecode.pngtastic.PngtasticOptimizer: boolean REMOVEGAMMA> = $z2;

        $r8 = args[1];

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        $z3 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSIONLEVEL(boolean)>($z3);

        <com.googlecode.pngtastic.PngtasticOptimizer: boolean COMPRESSIONLEVEL> = $z4;

        $r10 = args[2];

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        $z5 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSOR(boolean)>($z5);

        <com.googlecode.pngtastic.PngtasticOptimizer: boolean COMPRESSOR> = $z6;

        $r12 = args[3];

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        $z7 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionITERATIONS(boolean)>($z7);

        <com.googlecode.pngtastic.PngtasticOptimizer: boolean ITERATIONS> = $z8;

        $r14 = args[4];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        $z9 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLOGLEVEL(boolean)>($z9);

        <com.googlecode.pngtastic.PngtasticOptimizer: boolean LOGLEVEL> = $z10;

        $z11 = <com.googlecode.pngtastic.PngtasticOptimizer: boolean REMOVEGAMMA>;

        $z12 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z11);

        if $z12 == 0 goto label14;

        removeGamma#13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        goto label15;

     label14:
        removeGamma#13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label15:
        $z13 = <com.googlecode.pngtastic.PngtasticOptimizer: boolean COMPRESSIONLEVEL>;

        $z14 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z13);

        if $z14 == 0 goto label16;

        compressionLevel#14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        goto label17;

     label16:
        compressionLevel#14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label17:
        $z15 = <com.googlecode.pngtastic.PngtasticOptimizer: boolean COMPRESSOR>;

        $z16 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z15);

        if $z16 == 0 goto label18;

        compressor#15 = "zopfli";

        goto label19;

     label18:
        compressor#15 = "none";

     label19:
        $z17 = <com.googlecode.pngtastic.PngtasticOptimizer: boolean ITERATIONS>;

        $z18 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z17);

        if $z18 == 0 goto label20;

        iterations#16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        goto label21;

     label20:
        iterations#16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label21:
        $z19 = <com.googlecode.pngtastic.PngtasticOptimizer: boolean LOGLEVEL>;

        $z20 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z19);

        if $z20 == 0 goto label22;

        logLevel#17 = "debug";

        goto label23;

     label22:
        logLevel#17 = "none";

     label23:
        if compressor#15 != null goto label24;

        $z28 = 1;

        goto label25;

     label24:
        $z28 = 0;

     label25:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        $i3 = virtualinvoke iterations#16.<java.lang.Integer: int intValue()>();

        if $i3 != 0 goto label26;

        $z29 = 1;

        goto label27;

     label26:
        $z29 = 0;

     label27:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z29);

        $r16 = new com.googlecode.pngtastic.PngtasticOptimizer;

        specialinvoke $r16.<com.googlecode.pngtastic.PngtasticOptimizer: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)>(arg#10, i#7, next#12, removeGamma#13, compressionLevel#14, compressor#15, iterations#16, logLevel#17, "");

        return;
    }

    public void <init>(java.lang.String, java.lang.String[], java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String)
    {
        com.googlecode.pngtastic.PngtasticOptimizer this;
        java.lang.String toDir, fileSuffix, compressor, logLevel, s, file, $r7, $r12, $r18, outputPath#8;
        java.lang.String[] fileNames, l13;
        java.lang.Boolean removeGamma;
        java.lang.Integer compressionLevel, iterations, $r4;
        long start, $l2, $l3, $l4;
        com.googlecode.pngtastic.core.PngOptimizer optimizer, tmp$117052390;
        int l14, $i0, $i1, $i5, l15#3;
        com.googlecode.pngtastic.core.PngImage image, tmp$1505486986;
        java.lang.Object[] $r1;
        java.io.PrintStream $r2;
        java.util.List $r3;
        java.lang.Long $r5, $r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r16, $r17, tmp$1996787860, tmp$249109901;
        boolean $z2, $z3, $z4;
        java.lang.Throwable $r19, outputPath#9;
        java.lang.Exception tmp$1244211620;

        this := @this: com.googlecode.pngtastic.PngtasticOptimizer;

        toDir := @parameter0: java.lang.String;

        fileNames := @parameter1: java.lang.String[];

        fileSuffix := @parameter2: java.lang.String;

        removeGamma := @parameter3: java.lang.Boolean;

        compressionLevel := @parameter4: java.lang.Integer;

        compressor := @parameter5: java.lang.String;

        iterations := @parameter6: java.lang.Integer;

        logLevel := @parameter7: java.lang.String;

        s := @parameter8: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        start = staticinvoke <java.lang.System: long currentTimeMillis()>();

        tmp$117052390 = new com.googlecode.pngtastic.core.PngOptimizer;

        specialinvoke tmp$117052390.<com.googlecode.pngtastic.core.PngOptimizer: void <init>(java.lang.String)>(logLevel);

        optimizer = tmp$117052390;

        if compressor != null goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z3);

        $i0 = virtualinvoke iterations.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        virtualinvoke optimizer.<com.googlecode.pngtastic.core.PngOptimizer: void setCompressor(java.lang.String,java.lang.Integer)>(compressor, iterations);

        l13 = fileNames;

        l14 = lengthof l13;

        l15#3 = 0;

     label05:
        if l15#3 >= l14 goto label10;

        file = l13[l15#3];

     label06:
        tmp$1996787860 = new java.lang.StringBuilder;

        specialinvoke tmp$1996787860.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke tmp$1996787860.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(toDir);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(file);

        outputPath#8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i5 = virtualinvoke outputPath#8.<java.lang.String: int lastIndexOf(int)>(47);

        $r12 = virtualinvoke outputPath#8.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        specialinvoke this.<com.googlecode.pngtastic.PngtasticOptimizer: java.lang.String makeDirs(java.lang.String)>($r12);

        tmp$1505486986 = new com.googlecode.pngtastic.core.PngImage;

        specialinvoke tmp$1505486986.<com.googlecode.pngtastic.core.PngImage: void <init>(java.lang.String,java.lang.String)>(file, logLevel);

        image = tmp$1505486986;

        tmp$249109901 = new java.lang.StringBuilder;

        specialinvoke tmp$249109901.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke tmp$249109901.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(outputPath#8);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileSuffix);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke removeGamma.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke optimizer.<com.googlecode.pngtastic.core.PngOptimizer: void optimize(com.googlecode.pngtastic.core.PngImage,java.lang.String,boolean,java.lang.Integer)>(image, $r18, $z2, compressionLevel);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        outputPath#9 = $r19;

        tmp$1244211620 = (java.lang.Exception) outputPath#9;

        virtualinvoke tmp$1244211620.<java.lang.Exception: void printStackTrace()>();

     label09:
        l15#3 = l15#3 + 1;

        goto label05;

     label10:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = newarray (java.lang.Object)[3];

        $r3 = virtualinvoke optimizer.<com.googlecode.pngtastic.core.PngOptimizer: java.util.List getResults()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[0] = $r4;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - start;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[1] = $r5;

        $l4 = virtualinvoke optimizer.<com.googlecode.pngtastic.core.PngOptimizer: long getTotalSavings()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r1[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Processed %d files in %d milliseconds, saving %d bytes", $r1);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return;

        catch com.googlecode.pngtastic.core.PngException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label08;
    }

    private java.lang.String makeDirs(java.lang.String) throws java.io.IOException
    {
        com.googlecode.pngtastic.PngtasticOptimizer this;
        java.lang.String path, $r1, $r6;
        java.io.File out, $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        this := @this: com.googlecode.pngtastic.PngtasticOptimizer;

        path := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(path);

        out = $r0;

        $z0 = virtualinvoke out.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z4);

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke out.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision1(boolean)>($z5);

        if $z3 == 0 goto label5;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create path: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label5:
        $r1 = virtualinvoke out.<java.io.File: java.lang.String getCanonicalPath()>();

        return $r1;
    }


