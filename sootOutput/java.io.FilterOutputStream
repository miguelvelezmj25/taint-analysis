    public void write(byte[]) throws java.io.IOException
    {
        java.io.FilterOutputStream l0;
        byte[] l1;
        int $i0;

        l0 := @this: java.io.FilterOutputStream;

        l1 := @parameter0: byte[];

        $i0 = lengthof l1;

        virtualinvoke l0.<java.io.FilterOutputStream: void write(byte[],int,int)>(l1, 0, $i0);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.FilterOutputStream l0;
        java.io.OutputStream l1;
        java.lang.Throwable l4, l5, l2#4, $r0, l3#10, $r1, l3#15, $r2, $r3;

        l0 := @this: java.io.FilterOutputStream;

        l1 = l0.<java.io.FilterOutputStream: java.io.OutputStream out>;

        l2#4 = null;

     label01:
        virtualinvoke l0.<java.io.FilterOutputStream: void flush()>();

     label02:
        if l1 == null goto label13;

        goto label03;

     label03:
        virtualinvoke l1.<java.io.OutputStream: void close()>();

        goto label13;

     label04:
        $r1 := @caughtexception;

     label05:
        l3#15 = $r1;

        l2#4 = l3#15;

        throw l3#15;

     label06:
        $r2 := @caughtexception;

        l4 = $r2;

     label07:
        if l1 == null goto label12;

        if l2#4 == null goto label11;

     label08:
        virtualinvoke l1.<java.io.OutputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r3 := @caughtexception;

        l5 = $r3;

        virtualinvoke l2#4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l5);

        goto label12;

     label11:
        virtualinvoke l1.<java.io.OutputStream: void close()>();

     label12:
        throw l4;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.FilterOutputStream l0;
        java.io.OutputStream l1;

        l0 := @this: java.io.FilterOutputStream;

        l1 := @parameter0: java.io.OutputStream;

        specialinvoke l0.<java.io.OutputStream: void <init>()>();

        l0.<java.io.FilterOutputStream: java.io.OutputStream out> = l1;

        return;
    }


