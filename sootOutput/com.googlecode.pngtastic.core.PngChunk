    public boolean verifyCRC(long)
    {
        com.googlecode.pngtastic.core.PngChunk this;
        long crc, $l0;
        byte $b1;
        boolean $z0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        crc := @parameter0: long;

        $l0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: long getCRC()>();

        $b1 = $l0 cmp crc;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getTypeString()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        java.io.UnsupportedEncodingException e, $r2;
        java.lang.String $r0;
        byte[] $r1;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

     label1:
        $r0 = new java.lang.String;

        $r1 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] type>;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF8");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        return "";

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public long getCRC()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        java.util.zip.CRC32 crc32, $r0;
        byte[] $r1, $r2;
        long $l0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $r0 = new java.util.zip.CRC32;

        specialinvoke $r0.<java.util.zip.CRC32: void <init>()>();

        crc32 = $r0;

        $r1 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] type>;

        virtualinvoke crc32.<java.util.zip.CRC32: void update(byte[])>($r1);

        $r2 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        virtualinvoke crc32.<java.util.zip.CRC32: void update(byte[])>($r2);

        $l0 = virtualinvoke crc32.<java.util.zip.CRC32: long getValue()>();

        return $l0;
    }

    public void <init>(byte[], byte[])
    {
        com.googlecode.pngtastic.core.PngChunk this;
        byte[] type, data;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        type := @parameter0: byte[];

        data := @parameter1: byte[];

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.googlecode.pngtastic.core.PngChunk: byte[] type> = type;

        this.<com.googlecode.pngtastic.core.PngChunk: byte[] data> = data;

        return;
    }

    public long getWidth()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        long $l0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $l0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: long getUnsignedInt(int)>(0);

        return $l0;
    }

    public long getHeight()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        long $l0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $l0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: long getUnsignedInt(int)>(4);

        return $l0;
    }

    public short getBitDepth()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        short $s0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $s0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>(8);

        return $s0;
    }

    public short getColorType()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        short $s0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $s0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>(9);

        return $s0;
    }

    public short getInterlace()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        short $s0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $s0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>(12);

        return $s0;
    }

    public short getUnsignedByte(int)
    {
        com.googlecode.pngtastic.core.PngChunk this;
        int offset;
        byte[] $r0;
        byte $b0;
        short $s1, $s2;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        offset := @parameter0: int;

        $r0 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        $b0 = $r0[offset];

        $s1 = $b0 & 255;

        $s2 = (short) $s1;

        return $s2;
    }

    public long getUnsignedInt(int)
    {
        com.googlecode.pngtastic.core.PngChunk this;
        int offset, i#4, $i0, $i3, $i4, $i5;
        long value#2, $l6;
        byte[] $r0;
        byte $b1;
        short $s2;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        offset := @parameter0: int;

        value#2 = 0L;

        i#4 = 0;

     label1:
        if i#4 >= 4 goto label2;

        $r0 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        $i0 = offset + i#4;

        $b1 = $r0[$i0];

        $s2 = $b1 & 255;

        $i3 = 3 - i#4;

        $i4 = $i3 * 8;

        $i5 = $s2 << $i4;

        $l6 = (long) $i5;

        value#2 = value#2 + $l6;

        i#4 = i#4 + 1;

        goto label1;

     label2:
        return value#2;
    }

    public void setInterlace(byte)
    {
        com.googlecode.pngtastic.core.PngChunk this;
        byte interlace;
        byte[] $r0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        interlace := @parameter0: byte;

        $r0 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        $r0[12] = interlace;

        return;
    }

    public int getLength()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        byte[] $r0;
        int $i0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $r0 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        $i0 = lengthof $r0;

        return $i0;
    }

    public byte[] getData()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        byte[] $r0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $r0 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        return $r0;
    }

    public boolean isRequired()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $z0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: boolean isCritical()>();

        if $z0 != 0 goto label1;

        $r0 = "TRNS";

        $r1 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label1;

        $r3 = "GAMA";

        $r4 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label1;

        $r6 = "CHRM";

        $r7 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public byte[] getType()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        byte[] $r0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $r0 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] type>;

        return $r0;
    }

    public boolean isCritical()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        java.lang.String type, $r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $r0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        type = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke type.<java.lang.String: boolean equals(java.lang.Object)>("IHDR");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke type.<java.lang.String: boolean equals(java.lang.Object)>("PLTE");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke type.<java.lang.String: boolean equals(java.lang.Object)>("IDAT");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke type.<java.lang.String: boolean equals(java.lang.Object)>("IEND");

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public java.lang.String toString()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        java.lang.StringBuilder result, $r0, $r1, $r3, $r4, $r9, $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r37, $r44, $r45, $r46, $r48;
        java.lang.String $r2, $r6, $r7, $r8, $r34, $r35, $r36, $r38, $r41, $r42, $r43, $r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        long $l0, $l1, $l10;
        short $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        com.googlecode.pngtastic.core.PngImageType $r20;
        byte[] $r39;
        int $i9;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        result = $r0;

        $r1 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r2 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = "IHDR";

        $r7 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        $r9 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size:        ");

        $l0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: long getWidth()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

        $l1 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: long getHeight()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r14 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bit depth:   ");

        $s2 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getBitDepth()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r17 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type:  ");

        $s3 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getColorType()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $s4 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getColorType()>();

        $r20 = staticinvoke <com.googlecode.pngtastic.core.PngImageType: com.googlecode.pngtastic.core.PngImageType forColorType(int)>($s4);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r23 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Color type:  ");

        $s5 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getColorType()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s5);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r26 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compression: ");

        $s6 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getCompression()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s6);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r29 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter:      ");

        $s7 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getFilter()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s7);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r32 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interlace:   ");

        $s8 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getInterlace()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s8);

     label1:
        $r34 = "TEXT";

        $r35 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String toUpperCase()>();

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label2;

        $r37 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Text:        ");

        $r38 = new java.lang.String;

        $r39 = this.<com.googlecode.pngtastic.core.PngChunk: byte[] data>;

        specialinvoke $r38.<java.lang.String: void <init>(byte[])>($r39);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

     label2:
        $r41 = "IDAT";

        $r42 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: java.lang.String getTypeString()>();

        $r43 = virtualinvoke $r42.<java.lang.String: java.lang.String toUpperCase()>();

        $z4 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label3;

        $r44 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image Data:  ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length=");

        $i9 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: int getLength()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r48 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", crc=");

        $l10 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: long getCRC()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

     label3:
        $r50 = virtualinvoke result.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r50;
    }

    public short getCompression()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        short $s0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $s0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>(10);

        return $s0;
    }

    public short getFilter()
    {
        com.googlecode.pngtastic.core.PngChunk this;
        short $s0;

        this := @this: com.googlecode.pngtastic.core.PngChunk;

        $s0 = virtualinvoke this.<com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>(11);

        return $s0;
    }


