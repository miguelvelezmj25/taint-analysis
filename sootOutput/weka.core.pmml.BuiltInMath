    public void <init>(weka.core.pmml.BuiltInMath$MathFunc)
    {
        weka.core.pmml.BuiltInMath this;
        weka.core.pmml.BuiltInMath$MathFunc func, $r0, $r1;
        java.lang.String $r2;

        this := @this: weka.core.pmml.BuiltInMath;

        func := @parameter0: weka.core.pmml.BuiltInMath$MathFunc;

        specialinvoke this.<weka.core.pmml.Function: void <init>()>();

        $r0 = <weka.core.pmml.BuiltInMath$MathFunc: weka.core.pmml.BuiltInMath$MathFunc ABS>;

        this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func> = $r0;

        this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func> = func;

        $r1 = this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func>;

        $r2 = virtualinvoke $r1.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        this.<weka.core.pmml.BuiltInMath: java.lang.String m_functionName> = $r2;

        return;
    }

    public weka.core.Attribute getOutputDef()
    {
        weka.core.pmml.BuiltInMath this;
        weka.core.Attribute $r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        weka.core.pmml.BuiltInMath$MathFunc $r3;
        java.lang.String $r4, $r6;

        this := @this: weka.core.pmml.BuiltInMath;

        $r0 = new weka.core.Attribute;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BuiltInMathResult:");

        $r3 = this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func>;

        $r4 = virtualinvoke $r3.<weka.core.pmml.BuiltInMath$MathFunc: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<weka.core.Attribute: void <init>(java.lang.String)>($r6);

        return $r0;
    }

    public void setParameterDefs(java.util.ArrayList) throws java.lang.Exception
    {
        weka.core.pmml.BuiltInMath this;
        java.util.ArrayList paramDefs, $r1;
        weka.core.pmml.BuiltInMath$MathFunc $r0;
        int $i0;
        boolean $z0;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        this := @this: weka.core.pmml.BuiltInMath;

        paramDefs := @parameter0: java.util.ArrayList;

        this.<weka.core.pmml.BuiltInMath: java.util.ArrayList m_parameterDefs> = paramDefs;

        $r0 = this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func>;

        $r1 = this.<weka.core.pmml.BuiltInMath: java.util.ArrayList m_parameterDefs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $z0 = virtualinvoke $r0.<weka.core.pmml.BuiltInMath$MathFunc: boolean legalNumParams(int)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.Exception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[BuiltInMath] illegal number of parameters for function: ");

        $r5 = this.<weka.core.pmml.BuiltInMath: java.lang.String m_functionName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    public double getResult(double[]) throws java.lang.Exception
    {
        weka.core.pmml.BuiltInMath this;
        double[] incoming;
        double result;
        java.util.ArrayList $r0;
        java.lang.Exception $r1, $r3;
        weka.core.pmml.BuiltInMath$MathFunc $r2, $r4;
        int $i0;
        boolean $z0;

        this := @this: weka.core.pmml.BuiltInMath;

        incoming := @parameter0: double[];

        $r0 = this.<weka.core.pmml.BuiltInMath: java.util.ArrayList m_parameterDefs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = new java.lang.Exception;

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>("[BuiltInMath] incoming parameter structure has not been set");

        throw $r1;

     label1:
        $r2 = this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func>;

        $i0 = lengthof incoming;

        $z0 = virtualinvoke $r2.<weka.core.pmml.BuiltInMath$MathFunc: boolean legalNumParams(int)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("[BuiltInMath] wrong number of parameters!");

        throw $r3;

     label2:
        $r4 = this.<weka.core.pmml.BuiltInMath: weka.core.pmml.BuiltInMath$MathFunc m_func>;

        result = virtualinvoke $r4.<weka.core.pmml.BuiltInMath$MathFunc: double eval(double[])>(incoming);

        return result;
    }


