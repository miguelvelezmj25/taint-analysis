digraph <init> {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {940440698}" -> "btreeComparator := @parameter0: java.util.Comparator {158932922}";
"btreeComparator := @parameter0: java.util.Comparator {158932922}" -> "dupComparator := @parameter1: java.util.Comparator {1311609468}";
"dupComparator := @parameter1: java.util.Comparator {1311609468}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1918956809}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1918956809}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {1312600610}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {1312600610}" -> "this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {1849887742}";
"this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {1849887742}" -> "return {1162156470}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {629764338}" -> "l1 := @parameter0: java.lang.Object {1427458708}";
"l1 := @parameter0: java.lang.Object {1427458708}" -> "l2 := @parameter1: java.lang.Object {95357587}";
"l2 := @parameter1: java.lang.Object {95357587}" -> "$r0 = (byte[]) l1 {1207133954}";
"$r0 = (byte[]) l1 {1207133954}" -> "$r1 = (byte[]) l2 {1123160070}";
"$r1 = (byte[]) l2 {1123160070}" -> "$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {518370349}";
"$i0 = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {518370349}" -> "return $i0 {1527315245}";
}

digraph compare {
"this := @this: berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {104390564}" -> "twoPartKey1 := @parameter0: byte[] {228381918}";
"twoPartKey1 := @parameter0: byte[] {228381918}" -> "twoPartKey2 := @parameter1: byte[] {1980711629}";
"twoPartKey2 := @parameter1: byte[] {1980711629}" -> "$i0 = lengthof twoPartKey1 {275665507}";
"$i0 = lengthof twoPartKey1 {275665507}" -> "$i1 = $i0 - 1 {1587505202}";
"$i1 = $i0 - 1 {1587505202}" -> "origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {199813227}";
"origKeySize1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {199813227}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {1592817000}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1592817000}" -> "$i2 = lengthof twoPartKey1 {575317468}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1592817000}" -> "$i3 = origKeySize1 {1257010708}";
"$i2 = lengthof twoPartKey1 {575317468}" -> "$i3 = $i2 - 1 {342516687}";
"$i3 = $i2 - 1 {342516687}" -> "goto [?= keySize1 = $i3] {1040142386}";
"goto [?= keySize1 = $i3] {1040142386}" -> "keySize1 = $i3 {608119231}";
"$i3 = origKeySize1 {1257010708}" -> "keySize1 = $i3 {608119231}";
"keySize1 = $i3 {608119231}" -> "$i4 = lengthof twoPartKey2 {1261357750}";
"$i4 = lengthof twoPartKey2 {1261357750}" -> "$i5 = $i4 - 1 {1095674212}";
"$i5 = $i4 - 1 {1095674212}" -> "origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {865842849}";
"origKeySize2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {865842849}" -> "if origKeySize2 != -1 goto $i7 = origKeySize2 {184341226}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {184341226}" -> "$i6 = lengthof twoPartKey2 {849432790}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {184341226}" -> "$i7 = origKeySize2 {678552045}";
"$i6 = lengthof twoPartKey2 {849432790}" -> "$i7 = $i6 - 1 {373884086}";
"$i7 = $i6 - 1 {373884086}" -> "goto [?= keySize2 = $i7] {275653846}";
"goto [?= keySize2 = $i7] {275653846}" -> "keySize2 = $i7 {2064922760}";
"$i7 = origKeySize2 {678552045}" -> "keySize2 = $i7 {2064922760}";
"keySize2 = $i7 {2064922760}" -> "$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1038360459}";
"$r0 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {1038360459}" -> "if $r0 != null goto key1 = newarray (byte)[keySize1] {804363149}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {804363149}" -> "keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {505383880}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {804363149}" -> "key1 = newarray (byte)[keySize1] {801758175}";
"keyCmp#34 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {505383880}" -> "goto [?= (branch)] {1075884232}";
"goto [?= (branch)] {1075884232}" -> "if keyCmp#34 == 0 goto (branch) {1477591208}";
"key1 = newarray (byte)[keySize1] {801758175}" -> "key2 = newarray (byte)[keySize2] {1553450993}";
"key2 = newarray (byte)[keySize2] {1553450993}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {533007838}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {533007838}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {585302483}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {585302483}" -> "$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {2004982154}";
"$r1 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {2004982154}" -> "keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1503497319}";
"keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {1503497319}" -> "if keyCmp#34 == 0 goto (branch) {1477591208}";
"if keyCmp#34 == 0 goto (branch) {1477591208}" -> "return keyCmp#34 {401295704}";
"if keyCmp#34 == 0 goto (branch) {1477591208}" -> "if origKeySize1 == -1 goto (branch) {708370191}";
"if origKeySize1 == -1 goto (branch) {708370191}" -> "if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {1163183639}";
"if origKeySize1 == -1 goto (branch) {708370191}" -> "if origKeySize1 != origKeySize2 goto (branch) {45902292}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {1163183639}" -> "if origKeySize1 != origKeySize2 goto (branch) {45902292}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {1163183639}" -> "$i9 = lengthof twoPartKey1 {691487020}";
"if origKeySize1 != origKeySize2 goto (branch) {45902292}" -> "return 0 {224878297}";
"if origKeySize1 != origKeySize2 goto (branch) {45902292}" -> "if origKeySize1 != -1 goto $b8 = 1 {2039033108}";
"if origKeySize1 != -1 goto $b8 = 1 {2039033108}" -> "$b8 = -1 {1320105322}";
"if origKeySize1 != -1 goto $b8 = 1 {2039033108}" -> "$b8 = 1 {910035757}";
"$b8 = -1 {1320105322}" -> "goto [?= return $b8] {1220725440}";
"goto [?= return $b8] {1220725440}" -> "return $b8 {107962739}";
"$b8 = 1 {910035757}" -> "return $b8 {107962739}";
"$i9 = lengthof twoPartKey1 {691487020}" -> "$i10 = $i9 - 1 {86409788}";
"$i10 = $i9 - 1 {86409788}" -> "keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1766108913}";
"keySizeLen1 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1766108913}" -> "$i11 = lengthof twoPartKey2 {599014852}";
"$i11 = lengthof twoPartKey2 {599014852}" -> "$i12 = $i11 - 1 {552737237}";
"$i12 = $i11 - 1 {552737237}" -> "keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {813412317}";
"keySizeLen2 = staticinvoke <berkeley.com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {813412317}" -> "$i13 = lengthof twoPartKey1 {1845857330}";
"$i13 = lengthof twoPartKey1 {1845857330}" -> "$i14 = $i13 - keySize1 {767370881}";
"$i14 = $i13 - keySize1 {767370881}" -> "dataSize1 = $i14 - keySizeLen1 {2036561041}";
"dataSize1 = $i14 - keySizeLen1 {2036561041}" -> "$i15 = lengthof twoPartKey2 {140593540}";
"$i15 = lengthof twoPartKey2 {140593540}" -> "$i16 = $i15 - keySize2 {562429318}";
"$i16 = $i15 - keySize2 {562429318}" -> "dataSize2 = $i16 - keySizeLen2 {1684631521}";
"dataSize2 = $i16 - keySizeLen2 {1684631521}" -> "$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {481609328}";
"$r2 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {481609328}" -> "if $r2 != null goto data1 = newarray (byte)[dataSize1] {9560707}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {9560707}" -> "dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {2067572174}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {9560707}" -> "data1 = newarray (byte)[dataSize1] {647156623}";
"dataCmp#99 = staticinvoke <berkeley.com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {2067572174}" -> "goto [?= return dataCmp#99] {947318962}";
"goto [?= return dataCmp#99] {947318962}" -> "return dataCmp#99 {801573742}";
"data1 = newarray (byte)[dataSize1] {647156623}" -> "data2 = newarray (byte)[dataSize2] {1678020169}";
"data2 = newarray (byte)[dataSize2] {1678020169}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {2036458717}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {2036458717}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {1960787888}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {1960787888}" -> "$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {141626963}";
"$r3 = this.<berkeley.com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {141626963}" -> "dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1588524790}";
"dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1588524790}" -> "return dataCmp#99 {801573742}";
}


