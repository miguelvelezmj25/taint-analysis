    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0;

        <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = "";

        return;
    }

    public static int getByteLength(char[])
    {
        char[] chars;
        int $i0, $i1;

        chars := @parameter0: char[];

        $i0 = lengthof chars;

        $i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0);

        return $i1;
    }

    public static int getByteLength(char[], int, int)
    {
        char[] chars;
        int offset, length#1, len#3, length#7, i#9;
        char c;

        chars := @parameter0: char[];

        offset := @parameter1: int;

        length#1 := @parameter2: int;

        len#3 = 0;

        length#7 = length#1 + offset;

        i#9 = offset;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7);

        if i#9 >= length#7 goto label5;

        c = chars[i#9];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c < 1 goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c > 127 goto label2;

        len#3 = len#3 + 1;

        goto label4;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c <= 2047 goto label3;

        len#3 = len#3 + 3;

        goto label4;

     label3:
        len#3 = len#3 + 2;

     label4:
        i#9 = i#9 + 1;

        goto label1;

     label5:
        return len#3;
    }

    public static void charsToBytes(char[], int, byte[], int, int)
    {
        char[] chars;
        int charOffset, byteOffset#1, charLength#2, charLength#6, i#8, $i0, byteOffset#26, byteOffset#37, byteOffset#58;
        byte[] bytes;
        char c, $c2, $c3, $c4, $c6, $c7, $c8, $c10, $c11, $c12, $c14, $c15, $c16, $c18, $c19, $c20;
        byte $b1, $b5, $b9, $b13, $b17, $b21;

        chars := @parameter0: char[];

        charOffset := @parameter1: int;

        bytes := @parameter2: byte[];

        byteOffset#1 := @parameter3: int;

        charLength#2 := @parameter4: int;

        charLength#6 = charLength#2 + charOffset;

        i#8 = charOffset;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6);

        if i#8 >= charLength#6 goto label5;

        c = chars[i#8];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c < 1 goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c > 127 goto label2;

        $i0 = byteOffset#1;

        byteOffset#1 = byteOffset#1 + 1;

        $b1 = (byte) c;

        bytes[$i0] = $b1;

        goto label4;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        if c <= 2047 goto label3;

        byteOffset#26 = byteOffset#1 + 1;

        $c2 = c >> 12;

        $c3 = $c2 & 15;

        $c4 = 224 | $c3;

        $b5 = (byte) $c4;

        bytes[byteOffset#1] = $b5;

        byteOffset#37 = byteOffset#26 + 1;

        $c6 = c >> 6;

        $c7 = $c6 & 63;

        $c8 = 128 | $c7;

        $b9 = (byte) $c8;

        bytes[byteOffset#26] = $b9;

        byteOffset#1 = byteOffset#37 + 1;

        $c10 = c >> 0;

        $c11 = $c10 & 63;

        $c12 = 128 | $c11;

        $b13 = (byte) $c12;

        bytes[byteOffset#37] = $b13;

        goto label4;

     label3:
        byteOffset#58 = byteOffset#1 + 1;

        $c14 = c >> 6;

        $c15 = $c14 & 31;

        $c16 = 192 | $c15;

        $b17 = (byte) $c16;

        bytes[byteOffset#1] = $b17;

        byteOffset#1 = byteOffset#58 + 1;

        $c18 = c >> 0;

        $c19 = $c18 & 63;

        $c20 = 128 | $c19;

        $b21 = (byte) $c20;

        bytes[byteOffset#58] = $b21;

     label4:
        i#8 = i#8 + 1;

        goto label1;

     label5:
        return;
    }

    public static int getZeroTerminatedByteLength(byte[], int) throws java.lang.IndexOutOfBoundsException
    {
        byte[] bytes;
        int $i0, offset#1, len#3;
        byte $b1;

        bytes := @parameter0: byte[];

        offset#1 := @parameter1: int;

        len#3 = 0;

     label1:
        $i0 = offset#1;

        offset#1 = offset#1 + 1;

        $b1 = bytes[$i0];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 0 goto label2;

        len#3 = len#3 + 1;

        goto label1;

     label2:
        return len#3;
    }

    public static java.lang.String bytesToString(byte[], int, int) throws java.lang.IllegalArgumentException, java.lang.IndexOutOfBoundsException
    {
        byte[] bytes;
        int offset, length, charLen;
        char[] chars;
        java.lang.String $r0, $r1;

        bytes := @parameter0: byte[];

        offset := @parameter1: int;

        length := @parameter2: int;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length);

        if length != 0 goto label1;

        $r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING>;

        return $r0;

     label1:
        charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length);

        chars = newarray (char)[charLen];

        staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen);

        return $r1;
    }

    public static int bytesToChars(byte[], int, char[], int, int, boolean) throws java.lang.IllegalArgumentException, java.lang.IndexOutOfBoundsException
    {
        byte[] bytes;
        char[] chars;
        boolean isByteLen;
        short char1, $s5, $s6, $s10, $s12, $s17, $s18, $s20;
        byte char3, $b4, char2#29, $b14, char2#52, $b22, $b25;
        int byteOffset#1, charOffset#2, len#3, $i1, len#8, $i2, $i3, $i7, $i9, $i11, $i13, $i15, byteOffset#50, $i19, $i21, $i23, $i24, $i26, $i27;
        char $c8, $c16, $c28;
        java.lang.IllegalArgumentException $r0, $r1, $r2;

        bytes := @parameter0: byte[];

        byteOffset#1 := @parameter1: int;

        chars := @parameter2: char[];

        charOffset#2 := @parameter3: int;

        len#3 := @parameter4: int;

        isByteLen := @parameter5: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen);

        if isByteLen == 0 goto label01;

        $i1 = byteOffset#1;

        goto label02;

     label01:
        $i1 = charOffset#2;

     label02:
        len#8 = len#3 + $i1;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen);

        if isByteLen == 0 goto label04;

        $i2 = byteOffset#1;

        goto label05;

     label04:
        $i2 = charOffset#2;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8);

        if $i2 >= len#8 goto label13;

        $i3 = byteOffset#1;

        byteOffset#1 = byteOffset#1 + 1;

        $b4 = bytes[$i3];

        char1 = $b4 & 255;

        $s5 = char1 & 255;

        $s6 = $s5 >> 4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6);

        tableswitch($s6)
        {
            case 0: goto label06;
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label06;
            case 4: goto label06;
            case 5: goto label06;
            case 6: goto label06;
            case 7: goto label06;
            case 8: goto label12;
            case 9: goto label12;
            case 10: goto label12;
            case 11: goto label12;
            case 12: goto label07;
            case 13: goto label07;
            case 14: goto label09;
            default: goto label12;
        };

     label06:
        $i7 = charOffset#2;

        charOffset#2 = charOffset#2 + 1;

        $c8 = (char) char1;

        chars[$i7] = $c8;

        goto label03;

     label07:
        $i9 = byteOffset#1;

        byteOffset#1 = byteOffset#1 + 1;

        char2#29 = bytes[$i9];

        $s10 = char2#29 & 192;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10);

        if $s10 == 128 goto label08;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label08:
        $i11 = charOffset#2;

        charOffset#2 = charOffset#2 + 1;

        $s12 = char1 & 31;

        $i13 = $s12 << 6;

        $b14 = char2#29 & 63;

        $i15 = $i13 | $b14;

        $c16 = (char) $i15;

        chars[$i11] = $c16;

        goto label03;

     label09:
        byteOffset#50 = byteOffset#1 + 1;

        char2#52 = bytes[byteOffset#1];

        byteOffset#1 = byteOffset#50 + 1;

        char3 = bytes[byteOffset#50];

        $s17 = char2#52 & 192;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17);

        if $s17 != 128 goto label10;

        $s18 = char3 & 192;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18);

        if $s18 == 128 goto label11;

     label10:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label11:
        $i19 = charOffset#2;

        charOffset#2 = charOffset#2 + 1;

        $s20 = char1 & 15;

        $i21 = $s20 << 12;

        $b22 = char2#52 & 63;

        $i23 = $b22 << 6;

        $i24 = $i21 | $i23;

        $b25 = char3 & 63;

        $i26 = $b25 << 0;

        $i27 = $i24 | $i26;

        $c28 = (char) $i27;

        chars[$i19] = $c28;

        goto label03;

     label12:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label13:
        return byteOffset#1;
    }

    public static int getCharLength(byte[], int, int) throws java.lang.IllegalArgumentException, java.lang.IndexOutOfBoundsException
    {
        byte[] bytes;
        int offset#1, length#2, charCount#4, length#8;
        byte $b0;
        short $s1, $s2;
        java.lang.IllegalArgumentException $r0;

        bytes := @parameter0: byte[];

        offset#1 := @parameter1: int;

        length#2 := @parameter2: int;

        charCount#4 = 0;

        length#8 = length#2 + offset#1;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8);

        if offset#1 >= length#8 goto label7;

        $b0 = bytes[offset#1];

        $s1 = $b0 & 255;

        $s2 = $s1 >> 4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2);

        tableswitch($s2)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label5;
            case 11: goto label5;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label4;
            default: goto label5;
        };

     label2:
        offset#1 = offset#1 + 1;

        goto label6;

     label3:
        offset#1 = offset#1 + 2;

        goto label6;

     label4:
        offset#1 = offset#1 + 3;

        goto label6;

     label5:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label6:
        charCount#4 = charCount#4 + 1;

        goto label1;

     label7:
        return charCount#4;
    }


