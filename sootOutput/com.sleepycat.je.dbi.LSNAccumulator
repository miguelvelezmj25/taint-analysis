    boolean isEmpty()
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        int $i0;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        $i0 = this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    long[] getAndSortPendingLSNs()
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        long[] currentLSNs, l7;
        java.util.Iterator l3;
        java.util.Map$Entry fileEntry;
        long fileNumber, fileOffset, $l1;
        int l8, $i0, curIdx#5, l9#26;
        java.util.Map $r0;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2, $r3, $r5;
        java.lang.Long $r4;
        com.sleepycat.je.cleaner.OffsetList $r6;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        $i0 = this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries>;

        currentLSNs = newarray (long)[$i0];

        curIdx#5 = 0;

        $r0 = this.<com.sleepycat.je.dbi.LSNAccumulator: java.util.Map offsetsByFile>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        l3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        fileEntry = (java.util.Map$Entry) $r2;

        $r3 = interfaceinvoke fileEntry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.Long) $r3;

        fileNumber = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r5 = interfaceinvoke fileEntry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (com.sleepycat.je.cleaner.OffsetList) $r5;

        l7 = virtualinvoke $r6.<com.sleepycat.je.cleaner.OffsetList: long[] toArray()>();

        l8 = lengthof l7;

        l9#26 = 0;

     label2:
        if l9#26 >= l8 goto label3;

        fileOffset = l7[l9#26];

        $l1 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>(fileNumber, fileOffset);

        currentLSNs[curIdx#5] = $l1;

        curIdx#5 = curIdx#5 + 1;

        l9#26 = l9#26 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void init()>();

        staticinvoke <java.util.Arrays: void sort(long[])>(currentLSNs);

        return currentLSNs;
    }

    private void init()
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        long $l0, $l1, $l3;
        java.util.TreeMap $r0;
        int $i2;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        $l0 = this.<com.sleepycat.je.dbi.LSNAccumulator: long lsnAccMemoryUsage>;

        $l1 = neg $l0;

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void incInternalMemoryUsage(long)>($l1);

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        this.<com.sleepycat.je.dbi.LSNAccumulator: java.util.Map offsetsByFile> = $r0;

        this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries> = 0;

        $i2 = <com.sleepycat.je.dbi.MemoryBudget: int TREEMAP_OVERHEAD>;

        $l3 = (long) $i2;

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void incInternalMemoryUsage(long)>($l3);

        return;
    }

    private void incInternalMemoryUsage(long)
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        long increment, $l0, $l1;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        increment := @parameter0: long;

        $l0 = this.<com.sleepycat.je.dbi.LSNAccumulator: long lsnAccMemoryUsage>;

        $l1 = $l0 + increment;

        this.<com.sleepycat.je.dbi.LSNAccumulator: long lsnAccMemoryUsage> = $l1;

        virtualinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void noteMemUsage(long)>(increment);

        return;
    }

    void add(long)
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        long lsn, fileNumber, $l1, $l3, $l4, $l6;
        boolean newSegment;
        java.util.Map $r0, $r4;
        java.lang.Long $r1, $r5;
        java.lang.Object $r2;
        com.sleepycat.je.cleaner.OffsetList offsetsForFile#9, $r3;
        int $i0, $i2, $i5, $i7, $i8;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        lsn := @parameter0: long;

        fileNumber = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(lsn);

        $r0 = this.<com.sleepycat.je.dbi.LSNAccumulator: java.util.Map offsetsByFile>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fileNumber);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        offsetsForFile#9 = (com.sleepycat.je.cleaner.OffsetList) $r2;

        if offsetsForFile#9 != null goto label1;

        $r3 = new com.sleepycat.je.cleaner.OffsetList;

        specialinvoke $r3.<com.sleepycat.je.cleaner.OffsetList: void <init>()>();

        offsetsForFile#9 = $r3;

        $r4 = this.<com.sleepycat.je.dbi.LSNAccumulator: java.util.Map offsetsByFile>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fileNumber);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, offsetsForFile#9);

        $i0 = <com.sleepycat.je.dbi.MemoryBudget: int TFS_LIST_INITIAL_OVERHEAD>;

        $l1 = (long) $i0;

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void incInternalMemoryUsage(long)>($l1);

        $i2 = <com.sleepycat.je.dbi.MemoryBudget: int TREEMAP_ENTRY_OVERHEAD>;

        $l3 = (long) $i2;

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void incInternalMemoryUsage(long)>($l3);

     label1:
        $l4 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(lsn);

        newSegment = virtualinvoke offsetsForFile#9.<com.sleepycat.je.cleaner.OffsetList: boolean add(long,boolean)>($l4, 0);

        if newSegment == 0 goto label2;

        $i5 = <com.sleepycat.je.dbi.MemoryBudget: int TFS_LIST_SEGMENT_OVERHEAD>;

        $l6 = (long) $i5;

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void incInternalMemoryUsage(long)>($l6);

     label2:
        $i7 = this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries>;

        $i8 = $i7 + 1;

        this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries> = $i8;

        return;
    }

    int getNTotalEntries()
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        $i0 = this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries>;

        return $i0;
    }

    void clear()
    {
        com.sleepycat.je.dbi.LSNAccumulator this;
        java.util.Map $r0;
        long $l0, $l1;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        $r0 = this.<com.sleepycat.je.dbi.LSNAccumulator: java.util.Map offsetsByFile>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        this.<com.sleepycat.je.dbi.LSNAccumulator: int nTotalEntries> = 0;

        $l0 = this.<com.sleepycat.je.dbi.LSNAccumulator: long lsnAccMemoryUsage>;

        $l1 = neg $l0;

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void incInternalMemoryUsage(long)>($l1);

        return;
    }

    void <init>()
    {
        com.sleepycat.je.dbi.LSNAccumulator this;

        this := @this: com.sleepycat.je.dbi.LSNAccumulator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        specialinvoke this.<com.sleepycat.je.dbi.LSNAccumulator: void init()>();

        return;
    }


