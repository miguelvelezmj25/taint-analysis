digraph <init> {
"this := @this: weka.classifiers.rules.JRip$NominalAntd {1222341270}" -> "this$0 := @parameter0: weka.classifiers.rules.JRip {597316951}";
"this$0 := @parameter0: weka.classifiers.rules.JRip {597316951}" -> "a := @parameter1: weka.core.Attribute {2101529178}";
"a := @parameter1: weka.core.Attribute {2101529178}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: weka.classifiers.rules.JRip this$0> = this$0 {1902991537}";
"this.<weka.classifiers.rules.JRip$NominalAntd: weka.classifiers.rules.JRip this$0> = this$0 {1902991537}" -> "specialinvoke this.<weka.classifiers.rules.JRip$Antd: void <init>(weka.classifiers.rules.JRip,weka.core.Attribute)>(this$0, a) {1402722335}";
"specialinvoke this.<weka.classifiers.rules.JRip$Antd: void <init>(weka.classifiers.rules.JRip,weka.core.Attribute)>(this$0, a) {1402722335}" -> "$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1570098350}";
"$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1570098350}" -> "bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {767703045}";
"bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {767703045}" -> "$r1 = newarray (double)[bag] {1622053172}";
"$r1 = newarray (double)[bag] {1622053172}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> = $r1 {1544593204}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> = $r1 {1544593204}" -> "$r2 = newarray (double)[bag] {18582778}";
"$r2 = newarray (double)[bag] {18582778}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> = $r2 {1495943890}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> = $r2 {1495943890}" -> "return {451445174}";
}

digraph toString {
"this := @this: weka.classifiers.rules.JRip$NominalAntd {1618031786}" -> "$r0 = new java.lang.StringBuilder {968966231}";
"$r0 = new java.lang.StringBuilder {968966231}" -> "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() {1961774140}";
"specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() {1961774140}" -> "$r1 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {220359797}";
"$r1 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {220359797}" -> "$r2 = virtualinvoke $r1.<weka.core.Attribute: java.lang.String name()>() {1124124182}";
"$r2 = virtualinvoke $r1.<weka.core.Attribute: java.lang.String name()>() {1124124182}" -> "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) {1166667238}";
"$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) {1166667238}" -> "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \") {1865720284}";
"$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \") {1865720284}" -> "$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {548262953}";
"$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {548262953}" -> "$d0 = this.<weka.classifiers.rules.JRip$NominalAntd: double value> {1744443509}";
"$d0 = this.<weka.classifiers.rules.JRip$NominalAntd: double value> {1744443509}" -> "$i0 = (int) $d0 {699958335}";
"$i0 = (int) $d0 {699958335}" -> "$r6 = virtualinvoke $r5.<weka.core.Attribute: java.lang.String value(int)>($i0) {1131462717}";
"$r6 = virtualinvoke $r5.<weka.core.Attribute: java.lang.String value(int)>($i0) {1131462717}" -> "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) {1616222022}";
"$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) {1616222022}" -> "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() {1473974921}";
"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() {1473974921}" -> "return $r8 {984608049}";
}

digraph splitData {
"this := @this: weka.classifiers.rules.JRip$NominalAntd {457905908}" -> "data := @parameter0: weka.core.Instances {87160098}";
"data := @parameter0: weka.core.Instances {87160098}" -> "defAcRt := @parameter1: double {355455463}";
"defAcRt := @parameter1: double {355455463}" -> "cl := @parameter2: double {466693906}";
"cl := @parameter2: double {466693906}" -> "$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {689714820}";
"$r0 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {689714820}" -> "bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {182212275}";
"bag = virtualinvoke $r0.<weka.core.Attribute: int numValues()>() {182212275}" -> "splitData = newarray (weka.core.Instances)[bag] {24481972}";
"splitData = newarray (weka.core.Instances)[bag] {24481972}" -> "x#7 = 0 {552306289}";
"x#7 = 0 {552306289}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {929751346}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {929751346}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {320418002}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {320418002}" -> "if x#7 >= bag goto x#26 = 0 {107255111}";
"if x#7 >= bag goto x#26 = 0 {107255111}" -> "$r1 = new weka.core.Instances {953149342}";
"if x#7 >= bag goto x#26 = 0 {107255111}" -> "x#26 = 0 {2119243790}";
"$r1 = new weka.core.Instances {953149342}" -> "$i0 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1990944675}";
"$i0 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1990944675}" -> "specialinvoke $r1.<weka.core.Instances: void <init>(weka.core.Instances,int)>(data, $i0) {215518879}";
"specialinvoke $r1.<weka.core.Instances: void <init>(weka.core.Instances,int)>(data, $i0) {215518879}" -> "splitData[x#7] = $r1 {1928589600}";
"splitData[x#7] = $r1 {1928589600}" -> "$r2 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1224809966}";
"$r2 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1224809966}" -> "$r2[x#7] = 0.0 {1606317985}";
"$r2[x#7] = 0.0 {1606317985}" -> "$r3 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {833265350}";
"$r3 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {833265350}" -> "$r3[x#7] = 0.0 {1918468325}";
"$r3[x#7] = 0.0 {1918468325}" -> "x#7 = x#7 + 1 {392195270}";
"x#7 = x#7 + 1 {392195270}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7)] {451694135}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7)] {451694135}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {929751346}";
"x#26 = 0 {2119243790}" -> "$i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1575674888}";
"$i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1575674888}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#26) {574395536}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#26) {574395536}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {707091657}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {707091657}" -> "if x#26 >= $i1 goto x#71 = 0 {730666707}";
"if x#26 >= $i1 goto x#71 = 0 {730666707}" -> "inst = virtualinvoke data.<weka.core.Instances: weka.core.Instance instance(int)>(x#26) {1243761214}";
"if x#26 >= $i1 goto x#71 = 0 {730666707}" -> "x#71 = 0 {1288026289}";
"inst = virtualinvoke data.<weka.core.Instances: weka.core.Instance instance(int)>(x#26) {1243761214}" -> "$r4 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1270040139}";
"$r4 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {1270040139}" -> "$z0 = interfaceinvoke inst.<weka.core.Instance: boolean isMissing(weka.core.Attribute)>($r4) {320374457}";
"$z0 = interfaceinvoke inst.<weka.core.Instance: boolean isMissing(weka.core.Attribute)>($r4) {320374457}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {461286079}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {461286079}" -> "if $z0 != 0 goto x#26 = x#26 + 1 {1896565100}";
"if $z0 != 0 goto x#26 = x#26 + 1 {1896565100}" -> "$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {13098583}";
"if $z0 != 0 goto x#26 = x#26 + 1 {1896565100}" -> "x#26 = x#26 + 1 {1409579832}";
"$r5 = this.<weka.classifiers.rules.JRip$NominalAntd: weka.core.Attribute att> {13098583}" -> "$d0 = interfaceinvoke inst.<weka.core.Instance: double value(weka.core.Attribute)>($r5) {732739338}";
"$d0 = interfaceinvoke inst.<weka.core.Instance: double value(weka.core.Attribute)>($r5) {732739338}" -> "v = (int) $d0 {1088296286}";
"v = (int) $d0 {1088296286}" -> "$r6 = splitData[v] {1559067905}";
"$r6 = splitData[v] {1559067905}" -> "virtualinvoke $r6.<weka.core.Instances: boolean add(weka.core.Instance)>(inst) {319794335}";
"virtualinvoke $r6.<weka.core.Instances: boolean add(weka.core.Instance)>(inst) {319794335}" -> "$r7 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1375408684}";
"$r7 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1375408684}" -> "$d1 = $r7[v] {878446758}";
"$d1 = $r7[v] {878446758}" -> "$d2 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {566151966}";
"$d2 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {566151966}" -> "$d3 = $d1 + $d2 {1694410137}";
"$d3 = $d1 + $d2 {1694410137}" -> "$r7[v] = $d3 {808687768}";
"$r7[v] = $d3 {808687768}" -> "$d4 = interfaceinvoke inst.<weka.core.Instance: double classValue()>() {2030798971}";
"$d4 = interfaceinvoke inst.<weka.core.Instance: double classValue()>() {2030798971}" -> "$i3 = (int) $d4 {1757948078}";
"$i3 = (int) $d4 {1757948078}" -> "$i4 = (int) cl {953267428}";
"$i4 = (int) cl {953267428}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1983890883}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1983890883}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {381471047}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {381471047}" -> "if $i3 != $i4 goto x#26 = x#26 + 1 {490519509}";
"if $i3 != $i4 goto x#26 = x#26 + 1 {490519509}" -> "$r8 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1820334418}";
"if $i3 != $i4 goto x#26 = x#26 + 1 {490519509}" -> "x#26 = x#26 + 1 {1409579832}";
"$r8 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {1820334418}" -> "$d5 = $r8[v] {989657278}";
"$d5 = $r8[v] {989657278}" -> "$d6 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {354301836}";
"$d6 = interfaceinvoke inst.<weka.core.Instance: double weight()>() {354301836}" -> "$d7 = $d5 + $d6 {315499328}";
"$d7 = $d5 + $d6 {315499328}" -> "$r8[v] = $d7 {1336541359}";
"$r8[v] = $d7 {1336541359}" -> "x#26 = x#26 + 1 {1409579832}";
"x#26 = x#26 + 1 {1409579832}" -> "goto [?= $i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>()] {818054243}";
"goto [?= $i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>()] {818054243}" -> "$i1 = virtualinvoke data.<weka.core.Instances: int numInstances()>() {1575674888}";
"x#71 = 0 {1288026289}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {1512267323}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {1512267323}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {1501495161}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {1501495161}" -> "if x#71 >= bag goto return splitData {1737442912}";
"if x#71 >= bag goto return splitData {1737442912}" -> "$r9 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1132015584}";
"if x#71 >= bag goto return splitData {1737442912}" -> "return splitData {1998543979}";
"$r9 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {1132015584}" -> "$d8 = $r9[x#71] {340882114}";
"$d8 = $r9[x#71] {340882114}" -> "t = $d8 + 1.0 {2046673611}";
"t = $d8 + 1.0 {2046673611}" -> "$r10 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {313864931}";
"$r10 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {313864931}" -> "$d9 = $r10[x#71] {1224483112}";
"$d9 = $r10[x#71] {1224483112}" -> "p = $d9 + 1.0 {2088923601}";
"p = $d9 + 1.0 {2088923601}" -> "$r11 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {261987105}";
"$r11 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {261987105}" -> "$d10 = $r11[x#71] {1115368093}";
"$d10 = $r11[x#71] {1115368093}" -> "$d11 = p / t {1138176454}";
"$d11 = p / t {1138176454}" -> "$d12 = staticinvoke <weka.core.Utils: double log2(double)>($d11) {1491322083}";
"$d12 = staticinvoke <weka.core.Utils: double log2(double)>($d11) {1491322083}" -> "$d13 = staticinvoke <weka.core.Utils: double log2(double)>(defAcRt) {91164957}";
"$d13 = staticinvoke <weka.core.Utils: double log2(double)>(defAcRt) {91164957}" -> "$d14 = $d12 - $d13 {2135710071}";
"$d14 = $d12 - $d13 {2135710071}" -> "infoGain = $d10 * $d14 {2119518101}";
"infoGain = $d10 * $d14 {2119518101}" -> "$d15 = this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> {1363264705}";
"$d15 = this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> {1363264705}" -> "$b6 = infoGain cmpl $d15 {92031123}";
"$b6 = infoGain cmpl $d15 {92031123}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6) {1291449570}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6) {1291449570}" -> "if $b6 <= 0 goto x#71 = x#71 + 1 {534742915}";
"if $b6 <= 0 goto x#71 = x#71 + 1 {534742915}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> = infoGain {1907093217}";
"if $b6 <= 0 goto x#71 = x#71 + 1 {534742915}" -> "x#71 = x#71 + 1 {315840232}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double maxInfoGain> = infoGain {1907093217}" -> "$r12 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {144224996}";
"$r12 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] coverage> {144224996}" -> "$d16 = $r12[x#71] {1760107561}";
"$d16 = $r12[x#71] {1760107561}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double cover> = $d16 {517425033}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double cover> = $d16 {517425033}" -> "$r13 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {32155627}";
"$r13 = this.<weka.classifiers.rules.JRip$NominalAntd: double[] accurate> {32155627}" -> "$d17 = $r13[x#71] {1476688432}";
"$d17 = $r13[x#71] {1476688432}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double accu> = $d17 {1854751121}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double accu> = $d17 {1854751121}" -> "$d18 = p / t {1251435889}";
"$d18 = p / t {1251435889}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double accuRate> = $d18 {334533809}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double accuRate> = $d18 {334533809}" -> "$d19 = (double) x#71 {1758619794}";
"$d19 = (double) x#71 {1758619794}" -> "this.<weka.classifiers.rules.JRip$NominalAntd: double value> = $d19 {2131766309}";
"this.<weka.classifiers.rules.JRip$NominalAntd: double value> = $d19 {2131766309}" -> "x#71 = x#71 + 1 {315840232}";
"x#71 = x#71 + 1 {315840232}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71)] {1920817229}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71)] {1920817229}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {1512267323}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#26) {574395536}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {461286079}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6) {1291449570}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {707091657}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {1501495161}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#7) {929751346}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bag) {320418002}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {1983890883}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {381471047}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71) {1512267323}"[fontcolor="blue", penwidth=3, color="blue"];
}


