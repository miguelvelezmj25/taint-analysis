    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        java.util.HashMap map, $r0;
        java.lang.Exception e, $r2;
        int code, block#22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, force#18, checksum#28, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        byte verbose#16, level#20;
        java.lang.String entropy#24, transform#26, $r6, $r8;
        kanzi.app.BlockCompressor bc#46, $r1;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Integer $r9;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $z0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERBOSE(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean VERBOSE> = $z0;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFORCE(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean FORCE> = $z1;

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLEVEL(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean LEVEL> = $z2;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBLOCK(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean BLOCK> = $z3;

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionENTROPY(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean ENTROPY> = $z4;

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTRANSFORM(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean TRANSFORM> = $z5;

        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCHECKSUM(boolean)>(1);

        <edu.cmu.cs.mvelezce.KanziMain: boolean CHECKSUM> = $z6;

        verbose#16 = 0;

        force#18 = 0;

        level#20 = 0;

        block#22 = 1048576;

        entropy#24 = "HUFFMAN";

        transform#26 = "BWT+MTFT+ZRLT";

        checksum#28 = 0;

        $z7 = <edu.cmu.cs.mvelezce.KanziMain: boolean VERBOSE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label01;

        verbose#16 = 4;

     label01:
        $z8 = <edu.cmu.cs.mvelezce.KanziMain: boolean FORCE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label02;

        force#18 = 1;

     label02:
        $z9 = <edu.cmu.cs.mvelezce.KanziMain: boolean LEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label03;

        level#20 = 5;

     label03:
        $z10 = <edu.cmu.cs.mvelezce.KanziMain: boolean BLOCK>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label04;

        block#22 = block#22 * 1024;

     label04:
        $z11 = <edu.cmu.cs.mvelezce.KanziMain: boolean ENTROPY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label05;

        entropy#24 = "ANS";

     label05:
        $z12 = <edu.cmu.cs.mvelezce.KanziMain: boolean TRANSFORM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 == 0 goto label06;

        transform#26 = "BWT+LZ4+ZRLT+RANK+TEXT";

     label06:
        $z13 = <edu.cmu.cs.mvelezce.KanziMain: boolean CHECKSUM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        if $z13 == 0 goto label07;

        checksum#28 = 1;

     label07:
        bc#46 = null;

     label08:
        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        map = $r0;

        $r1 = new kanzi.app.BlockCompressor;

        specialinvoke $r1.<kanzi.app.BlockCompressor: void <init>(int,boolean,int,int,java.lang.String,java.lang.String,boolean,int,java.util.Map,java.util.concurrent.ExecutorService)>(verbose#16, force#18, level#20, block#22, entropy#24, transform#26, checksum#28, 1, map, null);

        bc#46 = $r1;

     label09:
        goto label11;

     label10:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create the compressor: ");

        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        staticinvoke <java.lang.System: void exit(int)>(-4);

     label11:
        $r9 = virtualinvoke bc#46.<kanzi.app.BlockCompressor: java.lang.Integer call()>();

        code = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(code);

        if code == 0 goto label12;

        virtualinvoke bc#46.<kanzi.app.BlockCompressor: void dispose()>();

     label12:
        staticinvoke <java.lang.System: void exit(int)>(code);

        return;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    public void <init>()
    {
        edu.cmu.cs.mvelezce.KanziMain this;

        this := @this: edu.cmu.cs.mvelezce.KanziMain;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


