    public boolean forward(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.transform.DCT16 this;
        kanzi.SliceIntArray src, dst, $r1, $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r0;

        this := @this: kanzi.transform.DCT16;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        $z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = src.<kanzi.SliceIntArray: int length>;

        if $i0 == 256 goto label2;

        return 0;

     label2:
        if src == dst goto label4;

        $z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i1 = dst.<kanzi.SliceIntArray: int index>;

        $i2 = $i1 + 256;

        $r0 = dst.<kanzi.SliceIntArray: int[] array>;

        $i3 = lengthof $r0;

        if $i2 <= $i3 goto label4;

        return 0;

     label4:
        $r1 = this.<kanzi.transform.DCT16: kanzi.SliceIntArray data>;

        $r1.<kanzi.SliceIntArray: int index> = 0;

        $r2 = this.<kanzi.transform.DCT16: kanzi.SliceIntArray data>;

        staticinvoke <kanzi.transform.DCT16: void computeForward(kanzi.SliceIntArray,kanzi.SliceIntArray,int)>(src, $r2, 6);

        $r3 = this.<kanzi.transform.DCT16: kanzi.SliceIntArray data>;

        $i4 = this.<kanzi.transform.DCT16: int fShift>;

        $i5 = $i4 - 6;

        staticinvoke <kanzi.transform.DCT16: void computeForward(kanzi.SliceIntArray,kanzi.SliceIntArray,int)>($r3, dst, $i5);

        $i6 = src.<kanzi.SliceIntArray: int index>;

        $i7 = $i6 + 256;

        src.<kanzi.SliceIntArray: int index> = $i7;

        $i8 = dst.<kanzi.SliceIntArray: int index>;

        $i9 = $i8 + 256;

        dst.<kanzi.SliceIntArray: int index> = $i9;

        return 1;
    }

    private static void computeForward(kanzi.SliceIntArray, kanzi.SliceIntArray, int)
    {
        kanzi.SliceIntArray src, dst;
        int shift, srcIdx, dstIdx, round, si, x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, b0, b1, b2, b3, b4, b5, b6, b7, c0, c1, c2, c3, di, $i0, i#15, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223;
        int[] input, output;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        shift := @parameter2: int;

        input = src.<kanzi.SliceIntArray: int[] array>;

        output = dst.<kanzi.SliceIntArray: int[] array>;

        srcIdx = src.<kanzi.SliceIntArray: int index>;

        dstIdx = dst.<kanzi.SliceIntArray: int index>;

        $i0 = 1 << shift;

        round = $i0 >> 1;

        i#15 = 0;

     label1:
        if i#15 >= 16 goto label2;

        $i1 = i#15 << 4;

        si = srcIdx + $i1;

        x0 = input[si];

        $i2 = si + 1;

        x1 = input[$i2];

        $i3 = si + 2;

        x2 = input[$i3];

        $i4 = si + 3;

        x3 = input[$i4];

        $i5 = si + 4;

        x4 = input[$i5];

        $i6 = si + 5;

        x5 = input[$i6];

        $i7 = si + 6;

        x6 = input[$i7];

        $i8 = si + 7;

        x7 = input[$i8];

        $i9 = si + 8;

        x8 = input[$i9];

        $i10 = si + 9;

        x9 = input[$i10];

        $i11 = si + 10;

        x10 = input[$i11];

        $i12 = si + 11;

        x11 = input[$i12];

        $i13 = si + 12;

        x12 = input[$i13];

        $i14 = si + 13;

        x13 = input[$i14];

        $i15 = si + 14;

        x14 = input[$i15];

        $i16 = si + 15;

        x15 = input[$i16];

        a0 = x0 + x15;

        a1 = x1 + x14;

        a2 = x0 - x15;

        a3 = x1 - x14;

        a4 = x2 + x13;

        a5 = x3 + x12;

        a6 = x2 - x13;

        a7 = x3 - x12;

        a8 = x4 + x11;

        a9 = x5 + x10;

        a10 = x4 - x11;

        a11 = x5 - x10;

        a12 = x6 + x9;

        a13 = x7 + x8;

        a14 = x6 - x9;

        a15 = x7 - x8;

        b0 = a0 + a13;

        b1 = a1 + a12;

        b2 = a0 - a13;

        b3 = a1 - a12;

        b4 = a4 + a9;

        b5 = a5 + a8;

        b6 = a4 - a9;

        b7 = a5 - a8;

        c0 = b0 + b5;

        c1 = b1 + b4;

        c2 = b0 - b5;

        c3 = b1 - b4;

        di = dstIdx + i#15;

        $i17 = 64 * c0;

        $i18 = 64 * c1;

        $i19 = $i17 + $i18;

        $i20 = $i19 + round;

        $i21 = $i20 >> shift;

        output[di] = $i21;

        $i22 = di + 16;

        $i23 = 90 * a2;

        $i24 = 87 * a3;

        $i25 = $i23 + $i24;

        $i26 = 80 * a6;

        $i27 = $i25 + $i26;

        $i28 = 70 * a7;

        $i29 = $i27 + $i28;

        $i30 = 57 * a10;

        $i31 = $i29 + $i30;

        $i32 = 43 * a11;

        $i33 = $i31 + $i32;

        $i34 = 25 * a14;

        $i35 = $i33 + $i34;

        $i36 = 9 * a15;

        $i37 = $i35 + $i36;

        $i38 = $i37 + round;

        $i39 = $i38 >> shift;

        output[$i22] = $i39;

        $i40 = di + 32;

        $i41 = 89 * b2;

        $i42 = 75 * b3;

        $i43 = $i41 + $i42;

        $i44 = 50 * b6;

        $i45 = $i43 + $i44;

        $i46 = 18 * b7;

        $i47 = $i45 + $i46;

        $i48 = $i47 + round;

        $i49 = $i48 >> shift;

        output[$i40] = $i49;

        $i50 = di + 48;

        $i51 = 87 * a2;

        $i52 = 57 * a3;

        $i53 = $i51 + $i52;

        $i54 = 9 * a6;

        $i55 = $i53 + $i54;

        $i56 = -43 * a7;

        $i57 = $i55 + $i56;

        $i58 = -80 * a10;

        $i59 = $i57 + $i58;

        $i60 = -90 * a11;

        $i61 = $i59 + $i60;

        $i62 = -70 * a14;

        $i63 = $i61 + $i62;

        $i64 = -25 * a15;

        $i65 = $i63 + $i64;

        $i66 = $i65 + round;

        $i67 = $i66 >> shift;

        output[$i50] = $i67;

        $i68 = di + 64;

        $i69 = 83 * c2;

        $i70 = 36 * c3;

        $i71 = $i69 + $i70;

        $i72 = $i71 + round;

        $i73 = $i72 >> shift;

        output[$i68] = $i73;

        $i74 = di + 80;

        $i75 = 80 * a2;

        $i76 = 9 * a3;

        $i77 = $i75 + $i76;

        $i78 = -70 * a6;

        $i79 = $i77 + $i78;

        $i80 = -87 * a7;

        $i81 = $i79 + $i80;

        $i82 = -25 * a10;

        $i83 = $i81 + $i82;

        $i84 = 57 * a11;

        $i85 = $i83 + $i84;

        $i86 = 90 * a14;

        $i87 = $i85 + $i86;

        $i88 = 43 * a15;

        $i89 = $i87 + $i88;

        $i90 = $i89 + round;

        $i91 = $i90 >> shift;

        output[$i74] = $i91;

        $i92 = di + 96;

        $i93 = 75 * b2;

        $i94 = -18 * b3;

        $i95 = $i93 + $i94;

        $i96 = -89 * b6;

        $i97 = $i95 + $i96;

        $i98 = -50 * b7;

        $i99 = $i97 + $i98;

        $i100 = $i99 + round;

        $i101 = $i100 >> shift;

        output[$i92] = $i101;

        $i102 = di + 112;

        $i103 = 70 * a2;

        $i104 = -43 * a3;

        $i105 = $i103 + $i104;

        $i106 = -87 * a6;

        $i107 = $i105 + $i106;

        $i108 = 9 * a7;

        $i109 = $i107 + $i108;

        $i110 = 90 * a10;

        $i111 = $i109 + $i110;

        $i112 = 25 * a11;

        $i113 = $i111 + $i112;

        $i114 = -80 * a14;

        $i115 = $i113 + $i114;

        $i116 = -57 * a15;

        $i117 = $i115 + $i116;

        $i118 = $i117 + round;

        $i119 = $i118 >> shift;

        output[$i102] = $i119;

        $i120 = di + 128;

        $i121 = 64 * c0;

        $i122 = -64 * c1;

        $i123 = $i121 + $i122;

        $i124 = $i123 + round;

        $i125 = $i124 >> shift;

        output[$i120] = $i125;

        $i126 = di + 144;

        $i127 = 57 * a2;

        $i128 = -80 * a3;

        $i129 = $i127 + $i128;

        $i130 = -25 * a6;

        $i131 = $i129 + $i130;

        $i132 = 90 * a7;

        $i133 = $i131 + $i132;

        $i134 = -9 * a10;

        $i135 = $i133 + $i134;

        $i136 = -87 * a11;

        $i137 = $i135 + $i136;

        $i138 = 43 * a14;

        $i139 = $i137 + $i138;

        $i140 = 70 * a15;

        $i141 = $i139 + $i140;

        $i142 = $i141 + round;

        $i143 = $i142 >> shift;

        output[$i126] = $i143;

        $i144 = di + 160;

        $i145 = 50 * b2;

        $i146 = -89 * b3;

        $i147 = $i145 + $i146;

        $i148 = 18 * b6;

        $i149 = $i147 + $i148;

        $i150 = 75 * b7;

        $i151 = $i149 + $i150;

        $i152 = $i151 + round;

        $i153 = $i152 >> shift;

        output[$i144] = $i153;

        $i154 = di + 176;

        $i155 = 43 * a2;

        $i156 = -90 * a3;

        $i157 = $i155 + $i156;

        $i158 = 57 * a6;

        $i159 = $i157 + $i158;

        $i160 = 25 * a7;

        $i161 = $i159 + $i160;

        $i162 = -87 * a10;

        $i163 = $i161 + $i162;

        $i164 = 70 * a11;

        $i165 = $i163 + $i164;

        $i166 = 9 * a14;

        $i167 = $i165 + $i166;

        $i168 = -80 * a15;

        $i169 = $i167 + $i168;

        $i170 = $i169 + round;

        $i171 = $i170 >> shift;

        output[$i154] = $i171;

        $i172 = di + 192;

        $i173 = 36 * c2;

        $i174 = -83 * c3;

        $i175 = $i173 + $i174;

        $i176 = $i175 + round;

        $i177 = $i176 >> shift;

        output[$i172] = $i177;

        $i178 = di + 208;

        $i179 = 25 * a2;

        $i180 = -70 * a3;

        $i181 = $i179 + $i180;

        $i182 = 90 * a6;

        $i183 = $i181 + $i182;

        $i184 = -80 * a7;

        $i185 = $i183 + $i184;

        $i186 = 43 * a10;

        $i187 = $i185 + $i186;

        $i188 = 9 * a11;

        $i189 = $i187 + $i188;

        $i190 = -57 * a14;

        $i191 = $i189 + $i190;

        $i192 = 87 * a15;

        $i193 = $i191 + $i192;

        $i194 = $i193 + round;

        $i195 = $i194 >> shift;

        output[$i178] = $i195;

        $i196 = di + 224;

        $i197 = 18 * b2;

        $i198 = -50 * b3;

        $i199 = $i197 + $i198;

        $i200 = 75 * b6;

        $i201 = $i199 + $i200;

        $i202 = -89 * b7;

        $i203 = $i201 + $i202;

        $i204 = $i203 + round;

        $i205 = $i204 >> shift;

        output[$i196] = $i205;

        $i206 = di + 240;

        $i207 = 9 * a2;

        $i208 = -25 * a3;

        $i209 = $i207 + $i208;

        $i210 = 43 * a6;

        $i211 = $i209 + $i210;

        $i212 = -57 * a7;

        $i213 = $i211 + $i212;

        $i214 = 70 * a10;

        $i215 = $i213 + $i214;

        $i216 = -80 * a11;

        $i217 = $i215 + $i216;

        $i218 = 87 * a14;

        $i219 = $i217 + $i218;

        $i220 = -90 * a15;

        $i221 = $i219 + $i220;

        $i222 = $i221 + round;

        $i223 = $i222 >> shift;

        output[$i206] = $i223;

        i#15 = i#15 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean inverse(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.transform.DCT16 this;
        kanzi.SliceIntArray src, dst, $r1, $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r0;

        this := @this: kanzi.transform.DCT16;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        $z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = src.<kanzi.SliceIntArray: int length>;

        if $i0 == 256 goto label2;

        return 0;

     label2:
        if src == dst goto label4;

        $z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i1 = dst.<kanzi.SliceIntArray: int index>;

        $i2 = $i1 + 256;

        $r0 = dst.<kanzi.SliceIntArray: int[] array>;

        $i3 = lengthof $r0;

        if $i2 <= $i3 goto label4;

        return 0;

     label4:
        $r1 = this.<kanzi.transform.DCT16: kanzi.SliceIntArray data>;

        $r1.<kanzi.SliceIntArray: int index> = 0;

        $r2 = this.<kanzi.transform.DCT16: kanzi.SliceIntArray data>;

        staticinvoke <kanzi.transform.DCT16: void computeInverse(kanzi.SliceIntArray,kanzi.SliceIntArray,int)>(src, $r2, 10);

        $r3 = this.<kanzi.transform.DCT16: kanzi.SliceIntArray data>;

        $i4 = this.<kanzi.transform.DCT16: int iShift>;

        $i5 = $i4 - 10;

        staticinvoke <kanzi.transform.DCT16: void computeInverse(kanzi.SliceIntArray,kanzi.SliceIntArray,int)>($r3, dst, $i5);

        $i6 = src.<kanzi.SliceIntArray: int index>;

        $i7 = $i6 + 256;

        src.<kanzi.SliceIntArray: int index> = $i7;

        $i8 = dst.<kanzi.SliceIntArray: int index>;

        $i9 = $i8 + 256;

        dst.<kanzi.SliceIntArray: int index> = $i9;

        return 1;
    }

    private static void computeInverse(kanzi.SliceIntArray, kanzi.SliceIntArray, int)
    {
        kanzi.SliceIntArray src, dst;
        int shift, srcIdx, dstIdx, round, si, x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, a0, a1, a2, a3, a4, a5, a6, a7, b0, b1, b2, b3, b4, b5, b6, b7, c0, c1, c2, c3, c4, c5, c6, c7, d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, di, $i0, i#15, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240;
        int[] input, output;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        shift := @parameter2: int;

        input = src.<kanzi.SliceIntArray: int[] array>;

        output = dst.<kanzi.SliceIntArray: int[] array>;

        srcIdx = src.<kanzi.SliceIntArray: int index>;

        dstIdx = dst.<kanzi.SliceIntArray: int index>;

        $i0 = 1 << shift;

        round = $i0 >> 1;

        i#15 = 0;

     label01:
        if i#15 >= 16 goto label50;

        si = srcIdx + i#15;

        x0 = input[si];

        $i1 = si + 16;

        x1 = input[$i1];

        $i2 = si + 32;

        x2 = input[$i2];

        $i3 = si + 48;

        x3 = input[$i3];

        $i4 = si + 64;

        x4 = input[$i4];

        $i5 = si + 80;

        x5 = input[$i5];

        $i6 = si + 96;

        x6 = input[$i6];

        $i7 = si + 112;

        x7 = input[$i7];

        $i8 = si + 128;

        x8 = input[$i8];

        $i9 = si + 144;

        x9 = input[$i9];

        $i10 = si + 160;

        x10 = input[$i10];

        $i11 = si + 176;

        x11 = input[$i11];

        $i12 = si + 192;

        x12 = input[$i12];

        $i13 = si + 208;

        x13 = input[$i13];

        $i14 = si + 224;

        x14 = input[$i14];

        $i15 = si + 240;

        x15 = input[$i15];

        $i16 = 90 * x1;

        $i17 = 87 * x3;

        $i18 = $i16 + $i17;

        $i19 = 80 * x5;

        $i20 = $i18 + $i19;

        $i21 = 70 * x7;

        $i22 = $i20 + $i21;

        $i23 = 57 * x9;

        $i24 = $i22 + $i23;

        $i25 = 43 * x11;

        $i26 = $i24 + $i25;

        $i27 = 25 * x13;

        $i28 = $i26 + $i27;

        $i29 = 9 * x15;

        a0 = $i28 + $i29;

        $i30 = 87 * x1;

        $i31 = 57 * x3;

        $i32 = $i30 + $i31;

        $i33 = 9 * x5;

        $i34 = $i32 + $i33;

        $i35 = -43 * x7;

        $i36 = $i34 + $i35;

        $i37 = -80 * x9;

        $i38 = $i36 + $i37;

        $i39 = -90 * x11;

        $i40 = $i38 + $i39;

        $i41 = -70 * x13;

        $i42 = $i40 + $i41;

        $i43 = -25 * x15;

        a1 = $i42 + $i43;

        $i44 = 80 * x1;

        $i45 = 9 * x3;

        $i46 = $i44 + $i45;

        $i47 = -70 * x5;

        $i48 = $i46 + $i47;

        $i49 = -87 * x7;

        $i50 = $i48 + $i49;

        $i51 = -25 * x9;

        $i52 = $i50 + $i51;

        $i53 = 57 * x11;

        $i54 = $i52 + $i53;

        $i55 = 90 * x13;

        $i56 = $i54 + $i55;

        $i57 = 43 * x15;

        a2 = $i56 + $i57;

        $i58 = 70 * x1;

        $i59 = -43 * x3;

        $i60 = $i58 + $i59;

        $i61 = -87 * x5;

        $i62 = $i60 + $i61;

        $i63 = 9 * x7;

        $i64 = $i62 + $i63;

        $i65 = 90 * x9;

        $i66 = $i64 + $i65;

        $i67 = 25 * x11;

        $i68 = $i66 + $i67;

        $i69 = -80 * x13;

        $i70 = $i68 + $i69;

        $i71 = -57 * x15;

        a3 = $i70 + $i71;

        $i72 = 57 * x1;

        $i73 = -80 * x3;

        $i74 = $i72 + $i73;

        $i75 = -25 * x5;

        $i76 = $i74 + $i75;

        $i77 = 90 * x7;

        $i78 = $i76 + $i77;

        $i79 = -9 * x9;

        $i80 = $i78 + $i79;

        $i81 = -87 * x11;

        $i82 = $i80 + $i81;

        $i83 = 43 * x13;

        $i84 = $i82 + $i83;

        $i85 = 70 * x15;

        a4 = $i84 + $i85;

        $i86 = 43 * x1;

        $i87 = -90 * x3;

        $i88 = $i86 + $i87;

        $i89 = 57 * x5;

        $i90 = $i88 + $i89;

        $i91 = 25 * x7;

        $i92 = $i90 + $i91;

        $i93 = -87 * x9;

        $i94 = $i92 + $i93;

        $i95 = 70 * x11;

        $i96 = $i94 + $i95;

        $i97 = 9 * x13;

        $i98 = $i96 + $i97;

        $i99 = -80 * x15;

        a5 = $i98 + $i99;

        $i100 = 25 * x1;

        $i101 = -70 * x3;

        $i102 = $i100 + $i101;

        $i103 = 90 * x5;

        $i104 = $i102 + $i103;

        $i105 = -80 * x7;

        $i106 = $i104 + $i105;

        $i107 = 43 * x9;

        $i108 = $i106 + $i107;

        $i109 = 9 * x11;

        $i110 = $i108 + $i109;

        $i111 = -57 * x13;

        $i112 = $i110 + $i111;

        $i113 = 87 * x15;

        a6 = $i112 + $i113;

        $i114 = 9 * x1;

        $i115 = -25 * x3;

        $i116 = $i114 + $i115;

        $i117 = 43 * x5;

        $i118 = $i116 + $i117;

        $i119 = -57 * x7;

        $i120 = $i118 + $i119;

        $i121 = 70 * x9;

        $i122 = $i120 + $i121;

        $i123 = -80 * x11;

        $i124 = $i122 + $i123;

        $i125 = 87 * x13;

        $i126 = $i124 + $i125;

        $i127 = -90 * x15;

        a7 = $i126 + $i127;

        $i128 = 89 * x2;

        $i129 = 75 * x6;

        $i130 = $i128 + $i129;

        $i131 = 50 * x10;

        $i132 = $i130 + $i131;

        $i133 = 18 * x14;

        b0 = $i132 + $i133;

        $i134 = 75 * x2;

        $i135 = -18 * x6;

        $i136 = $i134 + $i135;

        $i137 = -89 * x10;

        $i138 = $i136 + $i137;

        $i139 = -50 * x14;

        b1 = $i138 + $i139;

        $i140 = 50 * x2;

        $i141 = -89 * x6;

        $i142 = $i140 + $i141;

        $i143 = 18 * x10;

        $i144 = $i142 + $i143;

        $i145 = 75 * x14;

        b2 = $i144 + $i145;

        $i146 = 18 * x2;

        $i147 = -50 * x6;

        $i148 = $i146 + $i147;

        $i149 = 75 * x10;

        $i150 = $i148 + $i149;

        $i151 = -89 * x14;

        b3 = $i150 + $i151;

        $i152 = 64 * x0;

        $i153 = 64 * x8;

        $i154 = $i152 + $i153;

        $i155 = 83 * x4;

        $i156 = $i154 + $i155;

        $i157 = 36 * x12;

        b4 = $i156 + $i157;

        $i158 = 64 * x0;

        $i159 = 64 * x8;

        $i160 = $i158 + $i159;

        $i161 = 83 * x4;

        $i162 = $i160 - $i161;

        $i163 = 36 * x12;

        b5 = $i162 - $i163;

        $i164 = 64 * x0;

        $i165 = -64 * x8;

        $i166 = $i164 + $i165;

        $i167 = 36 * x4;

        $i168 = $i166 + $i167;

        $i169 = -83 * x12;

        b6 = $i168 + $i169;

        $i170 = 64 * x0;

        $i171 = -64 * x8;

        $i172 = $i170 + $i171;

        $i173 = 36 * x4;

        $i174 = $i172 - $i173;

        $i175 = -83 * x12;

        b7 = $i174 - $i175;

        c0 = b4 + b0;

        c1 = b6 + b1;

        c2 = b7 + b2;

        c3 = b5 + b3;

        c4 = b5 - b3;

        c5 = b7 - b2;

        c6 = b6 - b1;

        c7 = b4 - b0;

        $i176 = c0 + a0;

        $i177 = $i176 + round;

        d0 = $i177 >> shift;

        $i178 = c1 + a1;

        $i179 = $i178 + round;

        d1 = $i179 >> shift;

        $i180 = c2 + a2;

        $i181 = $i180 + round;

        d2 = $i181 >> shift;

        $i182 = c3 + a3;

        $i183 = $i182 + round;

        d3 = $i183 >> shift;

        $i184 = c4 + a4;

        $i185 = $i184 + round;

        d4 = $i185 >> shift;

        $i186 = c5 + a5;

        $i187 = $i186 + round;

        d5 = $i187 >> shift;

        $i188 = c6 + a6;

        $i189 = $i188 + round;

        d6 = $i189 >> shift;

        $i190 = c7 + a7;

        $i191 = $i190 + round;

        d7 = $i191 >> shift;

        $i192 = c7 - a7;

        $i193 = $i192 + round;

        d8 = $i193 >> shift;

        $i194 = c6 - a6;

        $i195 = $i194 + round;

        d9 = $i195 >> shift;

        $i196 = c5 - a5;

        $i197 = $i196 + round;

        d10 = $i197 >> shift;

        $i198 = c4 - a4;

        $i199 = $i198 + round;

        d11 = $i199 >> shift;

        $i200 = c3 - a3;

        $i201 = $i200 + round;

        d12 = $i201 >> shift;

        $i202 = c2 - a2;

        $i203 = $i202 + round;

        d13 = $i203 >> shift;

        $i204 = c1 - a1;

        $i205 = $i204 + round;

        d14 = $i205 >> shift;

        $i206 = c0 - a0;

        $i207 = $i206 + round;

        d15 = $i207 >> shift;

        $i208 = i#15 << 4;

        di = dstIdx + $i208;

        if d0 < 65536 goto label02;

        $i210 = 65536;

        goto label04;

     label02:
        if d0 > -65537 goto label03;

        $i210 = -65537;

        goto label04;

     label03:
        $i210 = d0;

     label04:
        output[di] = $i210;

        $i211 = di + 1;

        if d1 < 65536 goto label05;

        $i212 = 65536;

        goto label07;

     label05:
        if d1 > -65537 goto label06;

        $i212 = -65537;

        goto label07;

     label06:
        $i212 = d1;

     label07:
        output[$i211] = $i212;

        $i213 = di + 2;

        if d2 < 65536 goto label08;

        $i214 = 65536;

        goto label10;

     label08:
        if d2 > -65537 goto label09;

        $i214 = -65537;

        goto label10;

     label09:
        $i214 = d2;

     label10:
        output[$i213] = $i214;

        $i215 = di + 3;

        if d3 < 65536 goto label11;

        $i216 = 65536;

        goto label13;

     label11:
        if d3 > -65537 goto label12;

        $i216 = -65537;

        goto label13;

     label12:
        $i216 = d3;

     label13:
        output[$i215] = $i216;

        $i217 = di + 4;

        if d4 < 65536 goto label14;

        $i218 = 65536;

        goto label16;

     label14:
        if d4 > -65537 goto label15;

        $i218 = -65537;

        goto label16;

     label15:
        $i218 = d4;

     label16:
        output[$i217] = $i218;

        $i219 = di + 5;

        if d5 < 65536 goto label17;

        $i220 = 65536;

        goto label19;

     label17:
        if d5 > -65537 goto label18;

        $i220 = -65537;

        goto label19;

     label18:
        $i220 = d5;

     label19:
        output[$i219] = $i220;

        $i221 = di + 6;

        if d6 < 65536 goto label20;

        $i222 = 65536;

        goto label22;

     label20:
        if d6 > -65537 goto label21;

        $i222 = -65537;

        goto label22;

     label21:
        $i222 = d6;

     label22:
        output[$i221] = $i222;

        $i223 = di + 7;

        if d7 < 65536 goto label23;

        $i224 = 65536;

        goto label25;

     label23:
        if d7 > -65537 goto label24;

        $i224 = -65537;

        goto label25;

     label24:
        $i224 = d7;

     label25:
        output[$i223] = $i224;

        $i225 = di + 8;

        if d8 < 65536 goto label26;

        $i226 = 65536;

        goto label28;

     label26:
        if d8 > -65537 goto label27;

        $i226 = -65537;

        goto label28;

     label27:
        $i226 = d8;

     label28:
        output[$i225] = $i226;

        $i227 = di + 9;

        if d9 < 65536 goto label29;

        $i228 = 65536;

        goto label31;

     label29:
        if d9 > -65537 goto label30;

        $i228 = -65537;

        goto label31;

     label30:
        $i228 = d9;

     label31:
        output[$i227] = $i228;

        $i229 = di + 10;

        if d10 < 65536 goto label32;

        $i230 = 65536;

        goto label34;

     label32:
        if d10 > -65537 goto label33;

        $i230 = -65537;

        goto label34;

     label33:
        $i230 = d10;

     label34:
        output[$i229] = $i230;

        $i231 = di + 11;

        if d11 < 65536 goto label35;

        $i232 = 65536;

        goto label37;

     label35:
        if d11 > -65537 goto label36;

        $i232 = -65537;

        goto label37;

     label36:
        $i232 = d11;

     label37:
        output[$i231] = $i232;

        $i233 = di + 12;

        if d12 < 65536 goto label38;

        $i234 = 65536;

        goto label40;

     label38:
        if d12 > -65537 goto label39;

        $i234 = -65537;

        goto label40;

     label39:
        $i234 = d12;

     label40:
        output[$i233] = $i234;

        $i235 = di + 13;

        if d13 < 65536 goto label41;

        $i236 = 65536;

        goto label43;

     label41:
        if d13 > -65537 goto label42;

        $i236 = -65537;

        goto label43;

     label42:
        $i236 = d13;

     label43:
        output[$i235] = $i236;

        $i237 = di + 14;

        if d14 < 65536 goto label44;

        $i238 = 65536;

        goto label46;

     label44:
        if d14 > -65537 goto label45;

        $i238 = -65537;

        goto label46;

     label45:
        $i238 = d14;

     label46:
        output[$i237] = $i238;

        $i239 = di + 15;

        if d15 < 65536 goto label47;

        $i240 = 65536;

        goto label49;

     label47:
        if d15 > -65537 goto label48;

        $i240 = -65537;

        goto label49;

     label48:
        $i240 = d15;

     label49:
        output[$i239] = $i240;

        i#15 = i#15 + 1;

        goto label01;

     label50:
        return;
    }


