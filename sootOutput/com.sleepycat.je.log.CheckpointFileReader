    public boolean isCheckpointEnd()
    {
        com.sleepycat.je.log.CheckpointFileReader this;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CheckpointFileReader;

        $z0 = this.<com.sleepycat.je.log.CheckpointFileReader: boolean isCheckpointEnd>;

        return $z0;
    }

    public boolean isCheckpointStart()
    {
        com.sleepycat.je.log.CheckpointFileReader this;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CheckpointFileReader;

        $z0 = this.<com.sleepycat.je.log.CheckpointFileReader: boolean isCheckpointStart>;

        return $z0;
    }

    public boolean isDbTree()
    {
        com.sleepycat.je.log.CheckpointFileReader this;
        boolean $z0;

        this := @this: com.sleepycat.je.log.CheckpointFileReader;

        $z0 = this.<com.sleepycat.je.log.CheckpointFileReader: boolean isDbTree>;

        return $z0;
    }

    protected boolean isTargetEntry()
    {
        com.sleepycat.je.log.CheckpointFileReader this;
        byte logEntryTypeNumber;
        com.sleepycat.je.log.LogEntryHeader $r0;
        boolean isTarget#5, $z0, $z1, $z2;
        com.sleepycat.je.log.LogEntryType $r1, $r2, $r3;

        this := @this: com.sleepycat.je.log.CheckpointFileReader;

        $r0 = this.<com.sleepycat.je.log.CheckpointFileReader: com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        logEntryTypeNumber = virtualinvoke $r0.<com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        isTarget#5 = 0;

        this.<com.sleepycat.je.log.CheckpointFileReader: boolean isDbTree> = 0;

        this.<com.sleepycat.je.log.CheckpointFileReader: boolean isCheckpointEnd> = 0;

        this.<com.sleepycat.je.log.CheckpointFileReader: boolean isCheckpointStart> = 0;

        $r1 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_CKPT_END>;

        $z0 = virtualinvoke $r1.<com.sleepycat.je.log.LogEntryType: boolean equalsType(byte)>(logEntryTypeNumber);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        isTarget#5 = 1;

        this.<com.sleepycat.je.log.CheckpointFileReader: boolean isCheckpointEnd> = 1;

        goto label3;

     label1:
        $r2 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_CKPT_START>;

        $z1 = virtualinvoke $r2.<com.sleepycat.je.log.LogEntryType: boolean equalsType(byte)>(logEntryTypeNumber);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        isTarget#5 = 1;

        this.<com.sleepycat.je.log.CheckpointFileReader: boolean isCheckpointStart> = 1;

        goto label3;

     label2:
        $r3 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DBTREE>;

        $z2 = virtualinvoke $r3.<com.sleepycat.je.log.LogEntryType: boolean equalsType(byte)>(logEntryTypeNumber);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label3;

        isTarget#5 = 1;

        this.<com.sleepycat.je.log.CheckpointFileReader: boolean isDbTree> = 1;

     label3:
        return isTarget#5;
    }

    protected boolean processEntry(java.nio.ByteBuffer)
    {
        com.sleepycat.je.log.CheckpointFileReader this;
        java.nio.ByteBuffer entryBuffer;

        this := @this: com.sleepycat.je.log.CheckpointFileReader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        return 1;
    }

    public void <init>(com.sleepycat.je.dbi.EnvironmentImpl, int, boolean, long, long, long) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.CheckpointFileReader this;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        int readBufferSize;
        boolean forward;
        long startLsn, finishLsn, endOfFileLsn;

        this := @this: com.sleepycat.je.log.CheckpointFileReader;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        readBufferSize := @parameter1: int;

        forward := @parameter2: boolean;

        startLsn := @parameter3: long;

        finishLsn := @parameter4: long;

        endOfFileLsn := @parameter5: long;

        specialinvoke this.<com.sleepycat.je.log.FileReader: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,int,boolean,long,java.lang.Long,long,long)>(env, readBufferSize, forward, startLsn, null, endOfFileLsn, finishLsn);

        return;
    }


