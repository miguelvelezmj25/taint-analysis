    public void <init>()
    {
        weka.core.xml.PropertyHandler this;
        java.util.Hashtable $r0, $r1;

        this := @this: weka.core.xml.PropertyHandler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Ignored> = null;

        this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Allowed> = null;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Ignored> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Allowed> = $r1;

        return;
    }

    public boolean isAllowed(java.lang.Object, java.lang.String)
    {
        weka.core.xml.PropertyHandler this;
        java.lang.Object o, $r0, $r2;
        java.lang.String displayName;
        java.util.Enumeration enm;
        java.lang.Class c;
        java.util.HashSet list;
        boolean result#2, $z0, $z1;
        java.util.Hashtable $r1;

        this := @this: weka.core.xml.PropertyHandler;

        o := @parameter0: java.lang.Object;

        displayName := @parameter1: java.lang.String;

        result#2 = 1;

        enm = virtualinvoke this.<weka.core.xml.PropertyHandler: java.util.Enumeration allowed()>();

     label1:
        $z0 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r0 = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        c = (java.lang.Class) $r0;

        $z1 = virtualinvoke c.<java.lang.Class: boolean isInstance(java.lang.Object)>(o);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r1 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Allowed>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(c);

        list = (java.util.HashSet) $r2;

        result#2 = virtualinvoke list.<java.util.HashSet: boolean contains(java.lang.Object)>(displayName);

        goto label2;

     label2:
        return result#2;
    }

    public java.util.Enumeration allowed()
    {
        weka.core.xml.PropertyHandler this;
        java.util.Hashtable $r0;
        java.util.Enumeration $r1;

        this := @this: weka.core.xml.PropertyHandler;

        $r0 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Allowed>;

        $r1 = virtualinvoke $r0.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r1;
    }

    public boolean isIgnored(java.lang.Object, java.lang.String)
    {
        weka.core.xml.PropertyHandler this;
        java.lang.Object o, element, $r1;
        java.lang.String displayName;
        java.util.Enumeration enm;
        java.lang.Class c;
        java.util.HashSet list;
        boolean result#2, $z0, $z1, $z2;
        java.util.Hashtable $r0;

        this := @this: weka.core.xml.PropertyHandler;

        o := @parameter0: java.lang.Object;

        displayName := @parameter1: java.lang.String;

        result#2 = 0;

        enm = virtualinvoke this.<weka.core.xml.PropertyHandler: java.util.Enumeration ignored()>();

     label1:
        $z0 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        element = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        $z1 = element instanceof java.lang.Class;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        c = (java.lang.Class) element;

        $z2 = virtualinvoke c.<java.lang.Class: boolean isInstance(java.lang.Object)>(o);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label1;

        $r0 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Ignored>;

        $r1 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(c);

        list = (java.util.HashSet) $r1;

        result#2 = virtualinvoke list.<java.util.HashSet: boolean contains(java.lang.Object)>(displayName);

        goto label3;

     label3:
        return result#2;
    }

    public java.util.Enumeration ignored()
    {
        weka.core.xml.PropertyHandler this;
        java.util.Hashtable $r0;
        java.util.Enumeration $r1;

        this := @this: weka.core.xml.PropertyHandler;

        $r0 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Ignored>;

        $r1 = virtualinvoke $r0.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r1;
    }

    public boolean isIgnored(java.lang.String)
    {
        weka.core.xml.PropertyHandler this;
        java.lang.String displayName;
        java.util.Hashtable $r0;
        boolean $z0;

        this := @this: weka.core.xml.PropertyHandler;

        displayName := @parameter0: java.lang.String;

        $r0 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Ignored>;

        $z0 = virtualinvoke $r0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(displayName);

        return $z0;
    }

    public void addAllowed(java.lang.Class, java.lang.String)
    {
        weka.core.xml.PropertyHandler this;
        java.lang.Class c;
        java.lang.String displayName;
        java.util.Hashtable $r0, $r3;
        java.lang.Object $r1;
        java.util.HashSet list#6, $r2;

        this := @this: weka.core.xml.PropertyHandler;

        c := @parameter0: java.lang.Class;

        displayName := @parameter1: java.lang.String;

        $r0 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Allowed>;

        $r1 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(c);

        list#6 = (java.util.HashSet) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(list#6);

        if list#6 != null goto label1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        list#6 = $r2;

        $r3 = this.<weka.core.xml.PropertyHandler: java.util.Hashtable m_Allowed>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(c, list#6);

     label1:
        virtualinvoke list#6.<java.util.HashSet: boolean add(java.lang.Object)>(displayName);

        return;
    }


