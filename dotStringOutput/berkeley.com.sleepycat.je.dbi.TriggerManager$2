digraph <init> {
"this := @this: berkeley.com.sleepycat.je.dbi.TriggerManager$2 {101676061}" -> "invokeTransactionTrigger := @parameter0: boolean {1746227453}";
"invokeTransactionTrigger := @parameter0: boolean {1746227453}" -> "specialinvoke this.<berkeley.com.sleepycat.je.dbi.TriggerManager$TriggerInvoker: void <init>(boolean)>(invokeTransactionTrigger) {59374894}";
"specialinvoke this.<berkeley.com.sleepycat.je.dbi.TriggerManager$TriggerInvoker: void <init>(boolean)>(invokeTransactionTrigger) {59374894}" -> "return {2129357880}";
}

digraph run {
"this := @this: berkeley.com.sleepycat.je.dbi.TriggerManager$2 {1848658912}" -> "triggerTransaction := @parameter0: berkeley.com.sleepycat.je.Transaction {1081770826}";
"triggerTransaction := @parameter0: berkeley.com.sleepycat.je.Transaction {1081770826}" -> "dbt := @parameter1: berkeley.com.sleepycat.je.trigger.Trigger {646090253}";
"dbt := @parameter1: berkeley.com.sleepycat.je.trigger.Trigger {646090253}" -> "$z0 = dbt instanceof berkeley.com.sleepycat.je.trigger.PersistentTrigger {351033293}";
"$z0 = dbt instanceof berkeley.com.sleepycat.je.trigger.PersistentTrigger {351033293}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {478525778}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {478525778}" -> "if $z0 == 0 goto return {648827323}";
"if $z0 == 0 goto return {648827323}" -> "$r0 = (berkeley.com.sleepycat.je.trigger.PersistentTrigger) dbt {397591779}";
"if $z0 == 0 goto return {648827323}" -> "return {628301815}";
"$r0 = (berkeley.com.sleepycat.je.trigger.PersistentTrigger) dbt {397591779}" -> "interfaceinvoke $r0.<berkeley.com.sleepycat.je.trigger.PersistentTrigger: void close()>() {1628879847}";
"interfaceinvoke $r0.<berkeley.com.sleepycat.je.trigger.PersistentTrigger: void close()>() {1628879847}" -> "return {628301815}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {478525778}"[fontcolor="blue", penwidth=3, color="blue"];
}


