    void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.util.ArrayList $r0, $r2;
        java.util.HashSet $r1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List periodList> = $r0;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: long checkpointStart> = -1L;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.Set recoveryFilesToSync> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List singlePassInvisibleLsns> = $r2;

        return;
    }

    void singlePassSetInvisible()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r1;
        boolean $z0;
        java.util.List $r2;
        java.util.Set $r3;
        java.util.ArrayList $r4;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List singlePassInvisibleLsns>;

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.Set recoveryFilesToSync>;

        staticinvoke <berkeley.com.sleepycat.je.recovery.RollbackTracker: void setInvisible(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.List,java.util.Set)>($r1, $r2, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List singlePassInvisibleLsns> = $r4;

        return;
    }

    private static void setInvisible(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, java.util.List, java.util.Set)
    {
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.util.List rollbackLsns;
        java.util.Set filesToFsync;
        berkeley.com.sleepycat.je.log.FileManager fileManager;
        java.util.Iterator l7;
        java.lang.Long lsn, $r2;
        int $i0;
        java.util.ArrayList $r0, perFileLsns#8, $r3;
        long currentFileNum#10, $l1, $l2, $l4;
        boolean $z0;
        java.lang.Object $r1;
        byte $b3;

        envImpl := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        rollbackLsns := @parameter1: java.util.List;

        filesToFsync := @parameter2: java.util.Set;

        $i0 = interfaceinvoke rollbackLsns.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        fileManager = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        staticinvoke <java.util.Collections: void sort(java.util.List)>(rollbackLsns);

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        perFileLsns#8 = $r0;

        currentFileNum#10 = -1L;

        l7 = interfaceinvoke rollbackLsns.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r1 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        lsn = (java.lang.Long) $r1;

        $l1 = virtualinvoke lsn.<java.lang.Long: long longValue()>();

        $l2 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l1);

        $b3 = $l2 cmp currentFileNum#10;

        if $b3 == 0 goto label3;

        virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: void makeInvisible(long,java.util.List)>(currentFileNum#10, perFileLsns#8);

        $l4 = virtualinvoke lsn.<java.lang.Long: long longValue()>();

        currentFileNum#10 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l4);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(currentFileNum#10);

        interfaceinvoke filesToFsync.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        perFileLsns#8 = $r3;

     label3:
        interfaceinvoke perFileLsns#8.<java.util.List: boolean add(java.lang.Object)>(lsn);

        goto label2;

     label4:
        virtualinvoke fileManager.<berkeley.com.sleepycat.je.log.FileManager: void makeInvisible(long,java.util.List)>(currentFileNum#10, perFileLsns#8);

        return;
    }

    void register(berkeley.com.sleepycat.je.txn.RollbackEnd, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        berkeley.com.sleepycat.je.txn.RollbackEnd rollbackEnd;
        long rollbackEndLSN;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod $r0, $r1, $r2, $r4;
        boolean $z0;
        java.util.List $r3;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        rollbackEnd := @parameter0: berkeley.com.sleepycat.je.txn.RollbackEnd;

        rollbackEndLSN := @parameter1: long;

        specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: void assertFirstPass(long)>(rollbackEndLSN);

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        $z0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean makeNestedPeriod(berkeley.com.sleepycat.je.txn.RollbackEnd,long)>(rollbackEnd, rollbackEndLSN);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        specialinvoke $r2.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker,berkeley.com.sleepycat.je.txn.RollbackEnd,long)>(this, rollbackEnd, rollbackEndLSN);

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod> = $r2;

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List periodList>;

        $r4 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    private void assertFirstPass(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        long logLSN;
        berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason $r0;
        boolean $z0;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        logLSN := @parameter0: long;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: boolean firstUndoPass>;

        if $z0 != 0 goto label1;

        $r1 = new berkeley.com.sleepycat.je.EnvironmentFailureException;

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r0 = <berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason: berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason UNEXPECTED_STATE>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saw entry at ");

        $r5 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(logLSN);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should only be building the tracker on the first pass");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<berkeley.com.sleepycat.je.EnvironmentFailureException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r2, $r0, $r8);

        throw $r1;

     label1:
        return;
    }

    long getCheckpointStart()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $l0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: long checkpointStart>;

        return $l0;
    }

    berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImpl()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        return $r0;
    }

    void register(berkeley.com.sleepycat.je.txn.RollbackStart, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        berkeley.com.sleepycat.je.txn.RollbackStart rollbackStart;
        long rollbackStartLSN;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod $r0, $r1, $r2, $r4;
        boolean $z0;
        java.util.List $r3;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        rollbackStart := @parameter0: berkeley.com.sleepycat.je.txn.RollbackStart;

        rollbackStartLSN := @parameter1: long;

        specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: void assertFirstPass(long)>(rollbackStartLSN);

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        $z0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean makeNestedPeriod(berkeley.com.sleepycat.je.txn.RollbackStart,long)>(rollbackStart, rollbackStartLSN);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod;

        specialinvoke $r2.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker,berkeley.com.sleepycat.je.txn.RollbackStart,long)>(this, rollbackStart, rollbackStartLSN);

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod> = $r2;

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List periodList>;

        $r4 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    void checkCommit(long, long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        long commitLSN, txnId;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod $r0, $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        commitLSN := @parameter0: long;

        txnId := @parameter1: long;

        specialinvoke this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: void assertFirstPass(long)>(commitLSN);

        $z0 = staticinvoke <berkeley.com.sleepycat.je.txn.TxnManager: boolean isReplicatedTxn(long)>(txnId);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        if $r0 != null goto label2;

        return;

     label2:
        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        $z1 = virtualinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: boolean contains(long)>(commitLSN);

        if $z1 == 0 goto label3;

        $r2 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit at ");

        $r5 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(commitLSN);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is within rollback period.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod: void fail(java.lang.String)>($r8);

     label3:
        return;
    }

    berkeley.com.sleepycat.je.recovery.RollbackTracker$Scanner getScanner()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        boolean $z0;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$UnderConstructionScanner $r0;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$BackwardScanner $r1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $z0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: boolean firstUndoPass>;

        if $z0 == 0 goto label1;

        $r0 = new berkeley.com.sleepycat.je.recovery.RollbackTracker$UnderConstructionScanner;

        specialinvoke $r0.<berkeley.com.sleepycat.je.recovery.RollbackTracker$UnderConstructionScanner: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker)>(this);

        return $r0;

     label1:
        $r1 = new berkeley.com.sleepycat.je.recovery.RollbackTracker$BackwardScanner;

        specialinvoke $r1.<berkeley.com.sleepycat.je.recovery.RollbackTracker$BackwardScanner: void <init>(berkeley.com.sleepycat.je.recovery.RollbackTracker)>(this);

        return $r1;
    }

    static berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod access$300(berkeley.com.sleepycat.je.recovery.RollbackTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker x0;
        berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = x0.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.recovery.RollbackTracker$RollbackPeriod underConstructionPeriod>;

        return $r0;
    }

    static void access$200(berkeley.com.sleepycat.je.recovery.RollbackTracker, long, berkeley.com.sleepycat.je.txn.UndoReader, berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker x0;
        long x1;
        berkeley.com.sleepycat.je.txn.UndoReader x2;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker x3;

        x0 := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        x1 := @parameter1: long;

        x2 := @parameter2: berkeley.com.sleepycat.je.txn.UndoReader;

        x3 := @parameter3: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker;

        specialinvoke x0.<berkeley.com.sleepycat.je.recovery.RollbackTracker: void countObsolete(long,berkeley.com.sleepycat.je.txn.UndoReader,berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker)>(x1, x2, x3);

        return;
    }

    static java.util.List access$100(berkeley.com.sleepycat.je.recovery.RollbackTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker x0;
        java.util.List $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = x0.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List singlePassInvisibleLsns>;

        return $r0;
    }

    static berkeley.com.sleepycat.je.dbi.EnvironmentImpl access$000(berkeley.com.sleepycat.je.recovery.RollbackTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker x0;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = x0.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        return $r0;
    }

    static java.util.List access$400(berkeley.com.sleepycat.je.recovery.RollbackTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker x0;
        java.util.List $r0;

        x0 := @parameter0: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = x0.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.List periodList>;

        return $r0;
    }

    void setFirstPass(boolean)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        boolean firstUndoPass;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        firstUndoPass := @parameter0: boolean;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: boolean firstUndoPass> = firstUndoPass;

        return;
    }

    void recoveryEndFsyncInvisible()
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r0, $r1;
        boolean $z0;
        berkeley.com.sleepycat.je.log.FileManager $r2;
        java.util.Set $r3;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        $r0 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r2 = virtualinvoke $r1.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.log.FileManager getFileManager()>();

        $r3 = this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: java.util.Set recoveryFilesToSync>;

        virtualinvoke $r2.<berkeley.com.sleepycat.je.log.FileManager: void force(java.util.Set)>($r3);

        return;
    }

    void setCheckpointStart(long)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        long lsn;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        lsn := @parameter0: long;

        this.<berkeley.com.sleepycat.je.recovery.RollbackTracker: long checkpointStart> = lsn;

        return;
    }

    private void countObsolete(long, berkeley.com.sleepycat.je.txn.UndoReader, berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker)
    {
        berkeley.com.sleepycat.je.recovery.RollbackTracker this;
        long undoLsn;
        berkeley.com.sleepycat.je.txn.UndoReader undo;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker;
        int $i0;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r0;
        berkeley.com.sleepycat.je.dbi.DatabaseId $r1;

        this := @this: berkeley.com.sleepycat.je.recovery.RollbackTracker;

        undoLsn := @parameter0: long;

        undo := @parameter1: berkeley.com.sleepycat.je.txn.UndoReader;

        tracker := @parameter2: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker;

        $i0 = undo.<berkeley.com.sleepycat.je.txn.UndoReader: int logEntrySize>;

        $r0 = undo.<berkeley.com.sleepycat.je.txn.UndoReader: berkeley.com.sleepycat.je.dbi.DatabaseImpl db>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.dbi.DatabaseId getId()>();

        virtualinvoke tracker.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void countObsoleteUnconditional(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseId,boolean)>(undoLsn, null, $i0, $r1, 0);

        return;
    }


