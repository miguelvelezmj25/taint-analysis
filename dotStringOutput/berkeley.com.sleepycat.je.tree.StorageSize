digraph getStorageSize {
"bin := @parameter0: berkeley.com.sleepycat.je.tree.BIN {1664918648}" -> "idx := @parameter1: int {1047385854}";
"idx := @parameter1: int {1047385854}" -> "storedKeySize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx) {1038925002}";
"storedKeySize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx) {1038925002}" -> "$r0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>() {1250498936}";
"$r0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>() {1250498936}" -> "$z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>() {1996734424}";
"$z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>() {1996734424}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {997775579}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {997775579}" -> "if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {802248478}";
"if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {802248478}" -> "$i0 = storedKeySize - 1 {823891536}";
"if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {802248478}" -> "$z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {140785292}";
"$i0 = storedKeySize - 1 {823891536}" -> "$i1 = $i0 + 12 {694028193}";
"$i1 = $i0 + 12 {694028193}" -> "return $i1 {303385891}";
"$z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {140785292}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {193111130}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {193111130}" -> "if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {807407350}";
"if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {807407350}" -> "$i2 = storedKeySize - 1 {1250182329}";
"if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {807407350}" -> "lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {432416701}";
"$i2 = storedKeySize - 1 {1250182329}" -> "$i3 = $i2 + 20 {1042760472}";
"$i3 = $i2 + 20 {1042760472}" -> "return $i3 {858253294}";
"lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {432416701}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {1033036142}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {1033036142}" -> "if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {1090283304}";
"if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {1090283304}" -> "return 0 {1485446714}";
"if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {1090283304}" -> "$i4 = lastLoggedSize + storedKeySize {677818000}";
"$i4 = lastLoggedSize + storedKeySize {677818000}" -> "$i5 = $i4 + 14 {109694857}";
"$i5 = $i4 + 14 {109694857}" -> "return $i5 {876937776}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {193111130}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {997775579}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {1033036142}"[fontcolor="blue", penwidth=3, color="blue"];
}


