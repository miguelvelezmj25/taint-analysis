    public static void checkValidJournalSuffix(java.lang.String)
    {
        java.lang.String suffix, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;

        nop;

        suffix := @parameter0: java.lang.String;

        nop;

        $z0 = virtualinvoke suffix.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]*[Jj]ournal");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 != 0 goto label1;

        nop;

        $r0 = new java.lang.IllegalArgumentException;

        nop;

        $r1 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'");

        nop;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix);

        nop;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not");

        nop;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        nop;

        throw $r0;

     label1:
        nop;

        return;
    }

    public void produceDirectory() throws java.io.IOException
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        java.io.File $r0;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        $r0 = this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File _directory>;

        nop;

        staticinvoke <org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>($r0);

        nop;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        java.lang.String directory;
        java.io.File $r0;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        directory := @parameter0: java.lang.String;

        nop;

        $r0 = new java.io.File;

        nop;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(directory);

        nop;

        specialinvoke this.<org.prevayler.implementation.PrevaylerDirectory: void <init>(java.io.File)>($r0);

        nop;

        return;
    }

    public void <init>(java.io.File)
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        java.io.File directory;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        directory := @parameter0: java.io.File;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File _directory> = directory;

        nop;

        return;
    }

    public static long snapshotVersion(java.io.File)
    {
        java.io.File file;
        long $l0;

        nop;

        file := @parameter0: java.io.File;

        nop;

        $l0 = staticinvoke <org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>(file, "\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot");

        nop;

        return $l0;
    }

    public static void checkValidSnapshotSuffix(java.lang.String)
    {
        java.lang.String suffix, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;

        nop;

        suffix := @parameter0: java.lang.String;

        nop;

        $z0 = virtualinvoke suffix.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]*[Ss]napshot");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 != 0 goto label1;

        nop;

        $r0 = new java.lang.IllegalArgumentException;

        nop;

        $r1 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'");

        nop;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix);

        nop;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not");

        nop;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        nop;

        throw $r0;

     label1:
        nop;

        return;
    }

    private static long version(java.io.File, java.lang.String)
    {
        java.io.File file;
        java.lang.String filenamePattern, fileName, $r0;
        boolean $z0;
        int $i0;
        long $l1;

        nop;

        file := @parameter0: java.io.File;

        nop;

        filenamePattern := @parameter1: java.lang.String;

        nop;

        fileName = virtualinvoke file.<java.io.File: java.lang.String getName()>();

        nop;

        $z0 = virtualinvoke fileName.<java.lang.String: boolean matches(java.lang.String)>(filenamePattern);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 != 0 goto label1;

        nop;

        return -1L;

     label1:
        nop;

        $i0 = virtualinvoke fileName.<java.lang.String: int indexOf(java.lang.String)>(".");

        nop;

        $r0 = virtualinvoke fileName.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        nop;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        nop;

        return $l1;
    }

    public java.io.File latestSnapshot() throws java.io.IOException
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        java.io.File[] files;
        java.io.File candidateSnapshot, $r0, $r4, latestSnapshot#16;
        long candidateVersion, latestVersion#18;
        java.io.IOException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;
        int i#20, $i0;
        byte $b1;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        $r0 = this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File _directory>;

        nop;

        files = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(files);

        nop;

        if files != null goto label1;

        nop;

        $r1 = new java.io.IOException;

        nop;

        $r2 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading file list from directory ");

        nop;

        $r4 = this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File _directory>;

        nop;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        nop;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r6);

        nop;

        throw $r1;

     label1:
        nop;

        latestSnapshot#16 = null;

        nop;

        latestVersion#18 = -1L;

        nop;

        i#20 = 0;

     label2:
        nop;

        $i0 = lengthof files;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#20);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if i#20 >= $i0 goto label4;

        nop;

        candidateSnapshot = files[i#20];

        nop;

        candidateVersion = staticinvoke <org.prevayler.implementation.PrevaylerDirectory: long snapshotVersion(java.io.File)>(candidateSnapshot);

        nop;

        $b1 = candidateVersion cmp latestVersion#18;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        nop;

        if $b1 <= 0 goto label3;

        nop;

        latestVersion#18 = candidateVersion;

        nop;

        latestSnapshot#16 = candidateSnapshot;

     label3:
        nop;

        i#20 = i#20 + 1;

        nop;

        goto label2;

     label4:
        nop;

        return latestSnapshot#16;
    }

    public java.io.File journalFile(long, java.lang.String)
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        long transaction;
        java.lang.String suffix;
        java.io.File $r0;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        transaction := @parameter0: long;

        nop;

        suffix := @parameter1: java.lang.String;

        nop;

        staticinvoke <org.prevayler.implementation.PrevaylerDirectory: void checkValidJournalSuffix(java.lang.String)>(suffix);

        nop;

        $r0 = specialinvoke this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File file(long,java.lang.String)>(transaction, suffix);

        nop;

        return $r0;
    }

    private java.io.File file(long, java.lang.String)
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        long version;
        java.lang.String suffix, fileName, $r4, $r11, $r15;
        byte $b0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r10, $r12, $r13, $r14;
        java.io.File $r8, $r9;
        int $i1, $i2;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        version := @parameter0: long;

        nop;

        suffix := @parameter1: java.lang.String;

        nop;

        $b0 = version cmp 0L;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        nop;

        if $b0 >= 0 goto label1;

        nop;

        $r0 = new java.lang.IllegalArgumentException;

        nop;

        $r1 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshot and journal version numbers must be non-negative: ");

        nop;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(version);

        nop;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        nop;

        throw $r0;

     label1:
        nop;

        $r5 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0000000000000000000");

        nop;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(version);

        nop;

        fileName = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        $r8 = new java.io.File;

        nop;

        $r9 = this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File _directory>;

        nop;

        $r10 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        nop;

        $i1 = virtualinvoke fileName.<java.lang.String: int length()>();

        nop;

        $i2 = $i1 - 19;

        nop;

        $r11 = virtualinvoke fileName.<java.lang.String: java.lang.String substring(int)>($i2);

        nop;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        nop;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        nop;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix);

        nop;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r15);

        nop;

        return $r8;
    }

    public static void renameUnusedFile(java.io.File)
    {
        java.io.File journalFile, $r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r6;
        long $l0;

        nop;

        journalFile := @parameter0: java.io.File;

        nop;

        $r0 = new java.io.File;

        nop;

        $r1 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r2 = virtualinvoke journalFile.<java.io.File: java.lang.String getAbsolutePath()>();

        nop;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        nop;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".unusedFile");

        nop;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        nop;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        nop;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r6);

        nop;

        virtualinvoke journalFile.<java.io.File: boolean renameTo(java.io.File)>($r0);

        nop;

        return;
    }

    public static long journalVersion(java.io.File)
    {
        java.io.File file;
        long $l0;

        nop;

        file := @parameter0: java.io.File;

        nop;

        $l0 = staticinvoke <org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>(file, "\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal");

        nop;

        return $l0;
    }

    public java.io.File findInitialJournalFile(long)
    {
        org.prevayler.implementation.PrevaylerDirectory this;
        long initialTransactionWanted, version;
        java.io.File[] journals;
        java.io.File journal, $r0;
        org.prevayler.implementation.PrevaylerDirectory$1 $r1;
        org.prevayler.implementation.PrevaylerDirectory$2 $r2;
        int $i0, i#15;
        byte $b1;

        nop;

        this := @this: org.prevayler.implementation.PrevaylerDirectory;

        nop;

        initialTransactionWanted := @parameter0: long;

        nop;

        $r0 = this.<org.prevayler.implementation.PrevaylerDirectory: java.io.File _directory>;

        nop;

        $r1 = new org.prevayler.implementation.PrevaylerDirectory$1;

        nop;

        specialinvoke $r1.<org.prevayler.implementation.PrevaylerDirectory$1: void <init>(org.prevayler.implementation.PrevaylerDirectory)>(this);

        nop;

        journals = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r1);

        nop;

        $r2 = new org.prevayler.implementation.PrevaylerDirectory$2;

        nop;

        specialinvoke $r2.<org.prevayler.implementation.PrevaylerDirectory$2: void <init>(org.prevayler.implementation.PrevaylerDirectory)>(this);

        nop;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(journals, $r2);

        nop;

        $i0 = lengthof journals;

        nop;

        i#15 = $i0 - 1;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#15);

        nop;

        if i#15 < 0 goto label3;

        nop;

        journal = journals[i#15];

        nop;

        version = staticinvoke <org.prevayler.implementation.PrevaylerDirectory: long journalVersion(java.io.File)>(journal);

        nop;

        $b1 = version cmp initialTransactionWanted;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        nop;

        if $b1 > 0 goto label2;

        nop;

        return journal;

     label2:
        nop;

        i#15 = i#15 + -1;

        nop;

        goto label1;

     label3:
        nop;

        return null;
    }


