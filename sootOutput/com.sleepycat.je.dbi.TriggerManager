    public static void invokeAddRemoveTriggers(com.sleepycat.je.txn.Locker, java.util.List, java.util.List)
    {
        com.sleepycat.je.txn.Locker locker;
        java.util.List oldTriggers, newTriggers;
        java.util.Set oldNames, newNames;
        com.sleepycat.je.Transaction txn, $r7;
        com.sleepycat.je.dbi.TriggerManager$11 $r0;
        java.util.HashSet $r1, $r4;
        java.util.Collection $r2, $r5;
        com.sleepycat.je.dbi.TriggerManager$12 $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sleepycat.je.txn.Txn $r6;
        java.util.Iterator l6#23, l6#39;
        java.lang.Object $r8, $r10;
        com.sleepycat.je.trigger.Trigger trigger#29, trigger#45;
        java.lang.String $r9, $r11;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        oldTriggers := @parameter1: java.util.List;

        newTriggers := @parameter2: java.util.List;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$11;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$11: void <init>(java.util.Collection)>(oldTriggers);

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$11: java.util.Collection run(java.util.Collection)>($r1);

        oldNames = (java.util.Set) $r2;

        $r3 = new com.sleepycat.je.dbi.TriggerManager$12;

        specialinvoke $r3.<com.sleepycat.je.dbi.TriggerManager$12: void <init>(java.util.Collection)>(newTriggers);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = virtualinvoke $r3.<com.sleepycat.je.dbi.TriggerManager$12: java.util.Collection run(java.util.Collection)>($r4);

        newNames = (java.util.Set) $r5;

        $z0 = locker instanceof com.sleepycat.je.txn.Txn;

        if $z0 == 0 goto label1;

        $r6 = (com.sleepycat.je.txn.Txn) locker;

        $r7 = virtualinvoke $r6.<com.sleepycat.je.txn.Txn: com.sleepycat.je.Transaction getTransaction()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        txn = $r7;

        if oldTriggers == null goto label5;

        l6#23 = interfaceinvoke oldTriggers.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke l6#23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r8 = interfaceinvoke l6#23.<java.util.Iterator: java.lang.Object next()>();

        trigger#29 = (com.sleepycat.je.trigger.Trigger) $r8;

        $r9 = interfaceinvoke trigger#29.<com.sleepycat.je.trigger.Trigger: java.lang.String getName()>();

        $z2 = interfaceinvoke newNames.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z2 != 0 goto label4;

        interfaceinvoke trigger#29.<com.sleepycat.je.trigger.Trigger: void removeTrigger(com.sleepycat.je.Transaction)>(txn);

     label4:
        goto label3;

     label5:
        if newTriggers == null goto label8;

        l6#39 = interfaceinvoke newTriggers.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke l6#39.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r10 = interfaceinvoke l6#39.<java.util.Iterator: java.lang.Object next()>();

        trigger#45 = (com.sleepycat.je.trigger.Trigger) $r10;

        $r11 = interfaceinvoke trigger#45.<com.sleepycat.je.trigger.Trigger: java.lang.String getName()>();

        $z4 = interfaceinvoke oldNames.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z4 != 0 goto label7;

        interfaceinvoke trigger#45.<com.sleepycat.je.trigger.Trigger: void addTrigger(com.sleepycat.je.Transaction)>(txn);

     label7:
        goto label6;

     label8:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/dbi/TriggerManager";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.dbi.TriggerManager: boolean $assertionsDisabled> = $z1;

        return;
    }

    public static void runOpenTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.Database, boolean)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.Database db;
        boolean isNew;
        com.sleepycat.je.dbi.DatabaseImpl $r0;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        db := @parameter1: com.sleepycat.je.Database;

        isNew := @parameter2: boolean;

        $r0 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.dbi.DatabaseImpl getDbImpl(com.sleepycat.je.Database)>(db);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runOpenTriggers(com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.DatabaseImpl,boolean)>(locker, $r0, isNew);

        return;
    }

    public static void runOpenTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.DatabaseImpl, boolean)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean isNew;
        com.sleepycat.je.dbi.TriggerManager$1 $r0;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        dbImpl := @parameter1: com.sleepycat.je.dbi.DatabaseImpl;

        isNew := @parameter2: boolean;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$1;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$1: void <init>(boolean,boolean)>(isNew, isNew);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r0);

        return;
    }

    private static void runTriggers(com.sleepycat.je.dbi.DatabaseImpl, com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)
    {
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.TriggerManager$TriggerInvoker invoker;
        java.util.List triggers;
        com.sleepycat.je.Transaction triggerTransaction, $r1;
        java.util.Iterator l5;
        com.sleepycat.je.trigger.Trigger trigger, dbt;
        java.lang.Exception e, $r3;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        boolean $z0, $z1, $z2;
        com.sleepycat.je.txn.Txn $r0, $r5;
        java.lang.Object $r2;
        com.sleepycat.je.EnvironmentFailureException $r4;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        locker := @parameter1: com.sleepycat.je.txn.Locker;

        invoker := @parameter2: com.sleepycat.je.dbi.TriggerManager$TriggerInvoker;

        triggers = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: java.util.List getTriggers()>();

        if triggers != null goto label1;

        return;

     label1:
        $z0 = locker instanceof com.sleepycat.je.txn.Txn;

        if $z0 == 0 goto label2;

        $r0 = (com.sleepycat.je.txn.Txn) locker;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.txn.Txn: com.sleepycat.je.Transaction getTransaction()>();

        goto label3;

     label2:
        $r1 = null;

     label3:
        triggerTransaction = $r1;

     label4:
        l5 = interfaceinvoke triggers.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r2 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        trigger = (com.sleepycat.je.trigger.Trigger) $r2;

        dbt = trigger;

        virtualinvoke invoker.<com.sleepycat.je.dbi.TriggerManager$TriggerInvoker: void run(com.sleepycat.je.Transaction,com.sleepycat.je.trigger.Trigger)>(triggerTransaction, dbt);

        goto label5;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        e = $r3;

        env = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: com.sleepycat.je.dbi.EnvironmentImpl getEnv()>();

        $r4 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedException(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Exception)>(env, e);

        throw $r4;

     label8:
        $z2 = virtualinvoke invoker.<com.sleepycat.je.dbi.TriggerManager$TriggerInvoker: boolean invokeTransactionTrigger()>();

        if $z2 == 0 goto label9;

        $r5 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.txn.Txn getTxn(com.sleepycat.je.Transaction)>(triggerTransaction);

        virtualinvoke $r5.<com.sleepycat.je.txn.Txn: void noteTriggerDb(com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

     label9:
        return;

        catch java.lang.Exception from label4 to label6 with label7;
    }

    static com.sleepycat.je.Environment access$000(com.sleepycat.je.Transaction)
    {
        com.sleepycat.je.Transaction x0;
        com.sleepycat.je.Environment $r0;

        x0 := @parameter0: com.sleepycat.je.Transaction;

        $r0 = staticinvoke <com.sleepycat.je.dbi.TriggerManager: com.sleepycat.je.Environment getOpenTriggerEnvironment(com.sleepycat.je.Transaction)>(x0);

        return $r0;
    }

    private static com.sleepycat.je.Environment getOpenTriggerEnvironment(com.sleepycat.je.Transaction)
    {
        com.sleepycat.je.Transaction transaction;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        com.sleepycat.je.txn.Txn $r0;
        boolean $z0;
        com.sleepycat.je.Environment $r1, $r2;

        transaction := @parameter0: com.sleepycat.je.Transaction;

        if transaction != null goto label1;

        return null;

     label1:
        $r0 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.txn.Txn getTxn(com.sleepycat.je.Transaction)>(transaction);

        envImpl = virtualinvoke $r0.<com.sleepycat.je.txn.Txn: com.sleepycat.je.dbi.EnvironmentImpl getEnvironmentImpl()>();

        $z0 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReplicated()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment getInternalEnvHandle()>();

        return $r1;

     label2:
        $r2 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.Environment getEnvironment(com.sleepycat.je.Transaction)>(transaction);

        return $r2;
    }

    public static void runAbortTriggers(com.sleepycat.je.txn.Txn)
    {
        com.sleepycat.je.txn.Txn txn;
        java.util.Set triggerDbs;
        java.util.Iterator l2;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.dbi.TriggerManager$8 $r0;
        boolean $z0, $z1;
        java.lang.AssertionError $r1;
        java.lang.Object $r2;

        txn := @parameter0: com.sleepycat.je.txn.Txn;

        $z0 = <com.sleepycat.je.dbi.TriggerManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if txn != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        triggerDbs = virtualinvoke txn.<com.sleepycat.je.txn.Txn: java.util.Set getTriggerDbs()>();

        if triggerDbs != null goto label2;

        return;

     label2:
        l2 = interfaceinvoke triggerDbs.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        dbImpl = (com.sleepycat.je.dbi.DatabaseImpl) $r2;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$8;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$8: void <init>(boolean,com.sleepycat.je.dbi.DatabaseImpl)>(0, dbImpl);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, txn, $r0);

        goto label3;

     label4:
        return;
    }

    public static void runCommitTriggers(com.sleepycat.je.txn.Txn)
    {
        com.sleepycat.je.txn.Txn txn;
        java.util.Set triggerDbs;
        java.util.Iterator l2;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.dbi.TriggerManager$7 $r0;
        boolean $z0, $z1;
        java.lang.AssertionError $r1;
        java.lang.Object $r2;

        txn := @parameter0: com.sleepycat.je.txn.Txn;

        $z0 = <com.sleepycat.je.dbi.TriggerManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if txn != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        triggerDbs = virtualinvoke txn.<com.sleepycat.je.txn.Txn: java.util.Set getTriggerDbs()>();

        if triggerDbs != null goto label2;

        return;

     label2:
        l2 = interfaceinvoke triggerDbs.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        dbImpl = (com.sleepycat.je.dbi.DatabaseImpl) $r2;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$7;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$7: void <init>(boolean)>(0);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, txn, $r0);

        goto label3;

     label4:
        return;
    }

    public static void runDeleteTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.DatabaseImpl, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.DatabaseEntry key, oldData;
        com.sleepycat.je.dbi.TriggerManager$10 $r0;
        boolean $z0;
        java.lang.AssertionError $r1;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        dbImpl := @parameter1: com.sleepycat.je.dbi.DatabaseImpl;

        key := @parameter2: com.sleepycat.je.DatabaseEntry;

        oldData := @parameter3: com.sleepycat.je.DatabaseEntry;

        $z0 = <com.sleepycat.je.dbi.TriggerManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if key != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r0 = new com.sleepycat.je.dbi.TriggerManager$10;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$10: void <init>(boolean,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(1, key, oldData);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r0);

        return;
    }

    public static void runPutTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.DatabaseImpl, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.DatabaseEntry key, oldData, newData;
        com.sleepycat.je.dbi.TriggerManager$9 $r0;
        boolean $z0, $z1;
        java.lang.AssertionError $r1, $r2;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        dbImpl := @parameter1: com.sleepycat.je.dbi.DatabaseImpl;

        key := @parameter2: com.sleepycat.je.DatabaseEntry;

        oldData := @parameter3: com.sleepycat.je.DatabaseEntry;

        newData := @parameter4: com.sleepycat.je.DatabaseEntry;

        $z0 = <com.sleepycat.je.dbi.TriggerManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if key != null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $z1 = <com.sleepycat.je.dbi.TriggerManager: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if newData != null goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r0 = new com.sleepycat.je.dbi.TriggerManager$9;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$9: void <init>(boolean,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>(1, key, oldData, newData);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r0);

        return;
    }

    public static void runRemoveTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.dbi.TriggerManager$3 $r0;
        com.sleepycat.je.dbi.TriggerManager$4 $r1;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        dbImpl := @parameter1: com.sleepycat.je.dbi.DatabaseImpl;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$3;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$3: void <init>(boolean)>(1);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r0);

        $r1 = new com.sleepycat.je.dbi.TriggerManager$4;

        specialinvoke $r1.<com.sleepycat.je.dbi.TriggerManager$4: void <init>(boolean)>(1);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r1);

        return;
    }

    public static void runRenameTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.DatabaseImpl, java.lang.String)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        java.lang.String newName;
        com.sleepycat.je.dbi.TriggerManager$6 $r0;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        dbImpl := @parameter1: com.sleepycat.je.dbi.DatabaseImpl;

        newName := @parameter2: java.lang.String;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$6;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$6: void <init>(boolean,java.lang.String)>(1, newName);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r0);

        return;
    }

    public static void runCloseTriggers(com.sleepycat.je.txn.Locker, com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.txn.Locker locker;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        com.sleepycat.je.dbi.TriggerManager$2 $r0;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        dbImpl := @parameter1: com.sleepycat.je.dbi.DatabaseImpl;

        $r0 = new com.sleepycat.je.dbi.TriggerManager$2;

        specialinvoke $r0.<com.sleepycat.je.dbi.TriggerManager$2: void <init>(boolean)>(0);

        staticinvoke <com.sleepycat.je.dbi.TriggerManager: void runTriggers(com.sleepycat.je.dbi.DatabaseImpl,com.sleepycat.je.txn.Locker,com.sleepycat.je.dbi.TriggerManager$TriggerInvoker)>(dbImpl, locker, $r0);

        return;
    }


