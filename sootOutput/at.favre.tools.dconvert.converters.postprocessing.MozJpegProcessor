    public at.favre.tools.dconvert.converters.Result synchronizedProcess(java.io.File, boolean)
    {
        at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor this;
        java.io.File rawFile;
        boolean keepOriginal;
        java.lang.String[] args, $r0;
        java.lang.Exception e, $r3;
        at.favre.tools.dconvert.arg.ImageType $r1;
        at.favre.tools.dconvert.converters.Result $r2, $r4;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.Class $r7;
        java.lang.String $r8, $r10;
        java.util.List $r11;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor;

        rawFile := @parameter0: java.io.File;

        keepOriginal := @parameter1: boolean;

     label1:
        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "jpegtran";

        $r0[1] = "-outfile";

        $r0[2] = "%%outFilePath%%";

        $r0[3] = "-optimise";

        $r0[4] = "-progressive";

        $r0[5] = "-copy";

        $r0[6] = "none";

        $r0[7] = "%%sourceFilePath%%";

        args = $r0;

        $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;

        $r2 = staticinvoke <at.favre.tools.dconvert.util.PostProcessorUtil: at.favre.tools.dconvert.converters.Result runImageOptimizer(java.io.File,at.favre.tools.dconvert.arg.ImageType,java.lang.String[],boolean)>(rawFile, $r1, args, keepOriginal);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new at.favre.tools.dconvert.converters.Result;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not execute post processor ");

        $r7 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(rawFile);

        specialinvoke $r4.<at.favre.tools.dconvert.converters.Result: void <init>(java.lang.String,java.lang.Exception,java.util.List)>($r10, e, $r11);

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor this;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor;

        specialinvoke this.<at.favre.tools.dconvert.converters.postprocessing.APostProcessor: void <init>()>();

        return;
    }

    public boolean isSupported()
    {
        at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor this;
        java.lang.String[] $r0;
        boolean $z0;

        this := @this: at.favre.tools.dconvert.converters.postprocessing.MozJpegProcessor;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "jpegtran";

        $r0[1] = "-h";

        $z0 = staticinvoke <at.favre.tools.dconvert.util.PostProcessorUtil: boolean canRunCmd(java.lang.String[])>($r0);

        return $z0;
    }


