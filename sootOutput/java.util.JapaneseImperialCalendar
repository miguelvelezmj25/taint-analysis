    static void <clinit>()
    {
        sun.util.calendar.Era[] l0, $r9, $r15, l3#195, $r19, $r21, $r25, $r27;
        int l1, $i0, l2#192, l4#198, l5#200, $i3, $i4, $i5, l3#231, l4#233, l6#239, $i6, $i7, $i10, $i11, $i12, $i15, $i16, l13#299, $i18, $i19;
        sun.util.calendar.CalendarDate l9, $r14, l7#209;
        sun.util.calendar.LocalGregorianCalendar$Date l12;
        java.lang.Class $r0;
        boolean $z0, $z1;
        sun.util.calendar.CalendarSystem $r1;
        sun.util.calendar.LocalGregorianCalendar $r2, $r8;
        sun.util.calendar.Gregorian $r3, $r12, $r18, $r23, $r30, $r32;
        sun.util.calendar.Era $r4, $r13, $r16, l6#206, $r28;
        int[] $r5, $r6, $r7, $r20, $r22, $r33, $r34;
        long[] $r10, $r11, $r17, $r26;
        byte l2#183, $b8, $b13;
        long $l1, $l2, l7#246, l10#260, $l9, l10#281, $l14, $l17;
        java.util.TimeZone $r24;
        sun.util.calendar.Gregorian$Date l5#237;

        $r0 = class "java/util/JapaneseImperialCalendar";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>("japanese");

        $r2 = (sun.util.calendar.LocalGregorianCalendar) $r1;

        <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal> = $r2;

        $r3 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.Gregorian getGregorianCalendar()>();

        <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal> = $r3;

        $r4 = new sun.util.calendar.Era;

        specialinvoke $r4.<sun.util.calendar.Era: void <init>(java.lang.String,java.lang.String,long,boolean)>("BeforeMeiji", "BM", -9223372036854775808L, 0);

        <java.util.JapaneseImperialCalendar: sun.util.calendar.Era BEFORE_MEIJI_ERA> = $r4;

        $r5 = newarray (int)[17];

        $r5[0] = 0;

        $r5[1] = -292275055;

        $r5[2] = 0;

        $r5[3] = 1;

        $r5[4] = 0;

        $r5[5] = 1;

        $r5[6] = 1;

        $r5[7] = 1;

        $r5[8] = 1;

        $r5[9] = 0;

        $r5[10] = 0;

        $r5[11] = 0;

        $r5[12] = 0;

        $r5[13] = 0;

        $r5[14] = 0;

        $r5[15] = -46800000;

        $r5[16] = 0;

        <java.util.JapaneseImperialCalendar: int[] MIN_VALUES> = $r5;

        $r6 = newarray (int)[17];

        $r6[0] = 0;

        $r6[1] = 0;

        $r6[2] = 0;

        $r6[3] = 0;

        $r6[4] = 4;

        $r6[5] = 28;

        $r6[6] = 0;

        $r6[7] = 7;

        $r6[8] = 4;

        $r6[9] = 1;

        $r6[10] = 11;

        $r6[11] = 23;

        $r6[12] = 59;

        $r6[13] = 59;

        $r6[14] = 999;

        $r6[15] = 50400000;

        $r6[16] = 1200000;

        <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES> = $r6;

        $r7 = newarray (int)[17];

        $r7[0] = 0;

        $r7[1] = 292278994;

        $r7[2] = 11;

        $r7[3] = 53;

        $r7[4] = 6;

        $r7[5] = 31;

        $r7[6] = 366;

        $r7[7] = 7;

        $r7[8] = 6;

        $r7[9] = 1;

        $r7[10] = 11;

        $r7[11] = 23;

        $r7[12] = 59;

        $r7[13] = 59;

        $r7[14] = 999;

        $r7[15] = 50400000;

        $r7[16] = 7200000;

        <java.util.JapaneseImperialCalendar: int[] MAX_VALUES> = $r7;

        $r8 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l0 = virtualinvoke $r8.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.Era[] getEras()>();

        $i0 = lengthof l0;

        l1 = $i0 + 1;

        $r9 = newarray (sun.util.calendar.Era)[l1];

        <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras> = $r9;

        $r10 = newarray (long)[l1];

        <java.util.JapaneseImperialCalendar: long[] sinceFixedDates> = $r10;

        l2#183 = 0;

        $r11 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;

        $r12 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        $r13 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era BEFORE_MEIJI_ERA>;

        $r14 = virtualinvoke $r13.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $l1 = virtualinvoke $r12.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>($r14);

        $r11[l2#183] = $l1;

        $r15 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        l2#192 = l2#183 + 1;

        $r16 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era BEFORE_MEIJI_ERA>;

        $r15[l2#183] = $r16;

        l3#195 = l0;

        l4#198 = lengthof l3#195;

        l5#200 = 0;

     label03:
        if l5#200 >= l4#198 goto label04;

        l6#206 = l3#195[l5#200];

        l7#209 = virtualinvoke l6#206.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $r17 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;

        $r18 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        $l2 = virtualinvoke $r18.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(l7#209);

        $r17[l2#192] = $l2;

        $r19 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i3 = l2#192;

        l2#192 = l2#192 + 1;

        $r19[$i3] = l6#206;

        l5#200 = l5#200 + 1;

        goto label03;

     label04:
        $r20 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;

        $r21 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i4 = lengthof $r21;

        $i5 = $i4 - 1;

        $r22 = <java.util.JapaneseImperialCalendar: int[] MAX_VALUES>;

        $r22[0] = $i5;

        $r20[0] = $i5;

        l3#231 = 2147483647;

        l4#233 = 2147483647;

        $r23 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        $r24 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        l5#237 = virtualinvoke $r23.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r24);

        l6#239 = 1;

     label05:
        $r25 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i6 = lengthof $r25;

        if l6#239 >= $i6 goto label10;

        $r26 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;

        l7#246 = $r26[l6#239];

        $r27 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r28 = $r27[l6#239];

        l9 = virtualinvoke $r28.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $i7 = virtualinvoke l9.<sun.util.calendar.CalendarDate: int getYear()>();

        virtualinvoke l5#237.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i7, 1, 1);

        $r30 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        l10#260 = virtualinvoke $r30.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(l5#237);

        $b8 = l7#246 cmp l10#260;

        if $b8 == 0 goto label06;

        $l9 = l7#246 - l10#260;

        $i10 = (int) $l9;

        $i11 = $i10 + 1;

        l4#233 = staticinvoke <java.lang.Math: int min(int,int)>($i11, l4#233);

     label06:
        $i12 = virtualinvoke l9.<sun.util.calendar.CalendarDate: int getYear()>();

        virtualinvoke l5#237.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i12, 12, 31);

        $r32 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        l10#281 = virtualinvoke $r32.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(l5#237);

        $b13 = l7#246 cmp l10#281;

        if $b13 == 0 goto label07;

        $l14 = l10#281 - l7#246;

        $i15 = (int) $l14;

        $i16 = $i15 + 1;

        l4#233 = staticinvoke <java.lang.Math: int min(int,int)>($i16, l4#233);

     label07:
        $l17 = l7#246 - 1L;

        l12 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>($l17);

        l13#299 = virtualinvoke l12.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();

        $i18 = virtualinvoke l12.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();

        if $i18 != 1 goto label08;

        $i19 = virtualinvoke l12.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();

        if $i19 == 1 goto label09;

     label08:
        l13#299 = l13#299 + -1;

     label09:
        l3#231 = staticinvoke <java.lang.Math: int min(int,int)>(l13#299, l3#231);

        l6#239 = l6#239 + 1;

        goto label05;

     label10:
        $r33 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;

        $r33[1] = l3#231;

        $r34 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;

        $r34[6] = l4#233;

        return;
    }

    private static sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)
    {
        long l0;
        sun.util.calendar.LocalGregorianCalendar$Date l2;
        sun.util.calendar.LocalGregorianCalendar $r0, $r2;
        java.util.TimeZone $r1;

        l0 := @parameter0: long;

        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r1 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        l2 = virtualinvoke $r0.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>($r1);

        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        virtualinvoke $r2.<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(l2, l0);

        return l2;
    }

    void <init>(java.util.TimeZone, java.util.Locale)
    {
        java.util.JapaneseImperialCalendar l0;
        java.util.TimeZone l1;
        java.util.Locale l2;
        sun.util.calendar.LocalGregorianCalendar $r0;
        sun.util.calendar.LocalGregorianCalendar$Date $r1;
        long $l0;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: java.util.TimeZone;

        l2 := @parameter1: java.util.Locale;

        specialinvoke l0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>(l1, l2);

        l0.<java.util.JapaneseImperialCalendar: long cachedFixedDate> = -9223372036854775808L;

        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r1 = virtualinvoke $r0.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>(l1);

        l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void setTimeInMillis(long)>($l0);

        return;
    }

    protected void computeFields()
    {
        java.util.JapaneseImperialCalendar l0;
        int l2, l1#7, $i0, $i3, $i4;
        boolean l1#2, $z0, $z1;
        long $l1;
        byte $b2;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1#2 = 0;

        $z0 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isPartiallyNormalized()>();

        if $z0 == 0 goto label3;

        l1#7 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getSetStateFields()>();

        $i0 = l1#7 ^ -1;

        l2 = $i0 & 131071;

        if l2 != 0 goto label1;

        $l1 = l0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;

        $b2 = $l1 cmp -9223372036854775808L;

        if $b2 != 0 goto label2;

     label1:
        $i3 = l1#7 & 98304;

        $i4 = specialinvoke l0.<java.util.JapaneseImperialCalendar: int computeFields(int,int)>(l2, $i3);

        l1#7 = l1#7 | $i4;

        $z1 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if l1#7 == 131071 goto label2;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label2:
        goto label4;

     label3:
        l1#7 = 131071;

        specialinvoke l0.<java.util.JapaneseImperialCalendar: int computeFields(int,int)>(l1#7, 0);

     label4:
        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void setFieldsComputed(int)>(l1#7);

        return;
    }

    private int computeFields(int, int)
    {
        java.util.JapaneseImperialCalendar l0;
        int l1, l2, l8, l9, l11, l12, l3#2, $i2, $i3, $i4, $i5, $i6, $i7, $i8, l7#75, $i14, l7#90, l10#144, $i24, $i25, $i26, $i27, l13#177, $i28, $i29, l14#194, $i30, l14#203, $i31, $i32, $i33, $i34, $i35, $i36, l13#259, $i37, $i39, l15#279, $i40, $i42, $i49, $i50, $i51, l20#338, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i62, l25#452, $i64, $i67, $i68, l24#487, $i69, $i70, $i72, l26#522, $i74, $i77;
        java.util.TimeZone l4, $r25;
        int[] $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r18, $r19, $r23;
        boolean $z0, $z1, $z2, l14#265, $z3, $z4, $z6, $z8;
        sun.util.calendar.ZoneInfo $r2;
        long $l0, $l1, $l9, l5#71, $l10, $l11, l5#82, $l12, $l13, $l15, $l17, $l18, $l19, $l20, l5#115, $l21, l16#272, $l38, $l41, $l43, $l44, $l45, $l46, $l47, $l48, l18#321, l21#343, l23#355, l21#434, $l61, l23#447, $l63, $l65, l22#482, $l71, l24#517, $l73, $l75;
        byte $b16, $b22, $b23, $b66, $b76;
        sun.util.calendar.LocalGregorianCalendar $r11, $r24, $r26, $r27, $r37, $r38, $r44, $r45, $r53, $r60, $r61;
        sun.util.calendar.LocalGregorianCalendar$Date $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22, l18#289, $r28, $r29, l25#346, $r30, $r40, $r46, $r47, l21#466, $r49;
        sun.util.calendar.Era[] $r31, $r39, $r54, $r56;
        sun.util.calendar.Era $r32, $r41, $r55, $r57;
        sun.util.calendar.CalendarDate l26#374, $r33, $r35, l26#410, $r42, $r51, l25#492;
        java.lang.Object $r48;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3#2 = 0;

        l4 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();

        $r0 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        if $r0 != null goto label01;

        $r1 = newarray (int)[2];

        l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets> = $r1;

     label01:
        if l2 == 98304 goto label03;

        $z0 = l4 instanceof sun.util.calendar.ZoneInfo;

        if $z0 == 0 goto label02;

        $r2 = (sun.util.calendar.ZoneInfo) l4;

        $l0 = l0.<java.util.JapaneseImperialCalendar: long time>;

        $r3 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        l3#2 = virtualinvoke $r2.<sun.util.calendar.ZoneInfo: int getOffsets(long,int[])>($l0, $r3);

        goto label03;

     label02:
        $l1 = l0.<java.util.JapaneseImperialCalendar: long time>;

        l3#2 = virtualinvoke l4.<java.util.TimeZone: int getOffset(long)>($l1);

        $r4 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i2 = virtualinvoke l4.<java.util.TimeZone: int getRawOffset()>();

        $r4[0] = $i2;

        $r5 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $r6 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i3 = $r6[0];

        $i4 = l3#2 - $i3;

        $r5[1] = $i4;

     label03:
        if l2 == 0 goto label06;

        $z1 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l2, 15);

        if $z1 == 0 goto label04;

        $r7 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i5 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(15);

        $r7[0] = $i5;

     label04:
        $z2 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l2, 16);

        if $z2 == 0 goto label05;

        $r8 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i6 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(16);

        $r8[1] = $i6;

     label05:
        $r9 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i7 = $r9[0];

        $r10 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i8 = $r10[1];

        l3#2 = $i7 + $i8;

     label06:
        $l9 = (long) l3#2;

        l5#71 = $l9 / 86400000L;

        l7#75 = l3#2 % 86400000;

        $l10 = l0.<java.util.JapaneseImperialCalendar: long time>;

        $l11 = $l10 / 86400000L;

        l5#82 = l5#71 + $l11;

        $l12 = l0.<java.util.JapaneseImperialCalendar: long time>;

        $l13 = $l12 % 86400000L;

        $i14 = (int) $l13;

        l7#90 = l7#75 + $i14;

        $l15 = (long) l7#90;

        $b16 = $l15 cmp 86400000L;

        if $b16 < 0 goto label07;

        $l17 = (long) l7#90;

        $l18 = $l17 - 86400000L;

        l7#90 = (int) $l18;

        l5#82 = l5#82 + 1L;

        goto label08;

     label07:
        if l7#90 >= 0 goto label08;

        $l19 = (long) l7#90;

        $l20 = $l19 + 86400000L;

        l7#90 = (int) $l20;

        l5#82 = l5#82 - 1L;

        goto label07;

     label08:
        l5#115 = l5#82 + 719163L;

        $l21 = l0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;

        $b22 = l5#115 cmp $l21;

        if $b22 != 0 goto label09;

        $b23 = l5#115 cmp 0L;

        if $b23 >= 0 goto label10;

     label09:
        $r11 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r12 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        virtualinvoke $r11.<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>($r12, l5#115);

        l0.<java.util.JapaneseImperialCalendar: long cachedFixedDate> = l5#115;

     label10:
        $r13 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        l8 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>($r13);

        $r14 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        l9 = virtualinvoke $r14.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(0, l8);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(1, l9);

        l10#144 = l1 | 3;

        $r15 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $i24 = virtualinvoke $r15.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();

        l11 = $i24 - 1;

        $r16 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        l12 = virtualinvoke $r16.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();

        $i25 = l1 & 164;

        if $i25 == 0 goto label11;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(2, l11);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(5, l12);

        $r17 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $i26 = virtualinvoke $r17.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfWeek()>();

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(7, $i26);

        l10#144 = l10#144 | 164;

     label11:
        $i27 = l1 & 32256;

        if $i27 == 0 goto label14;

        if l7#90 == 0 goto label12;

        l13#177 = l7#90 / 3600000;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(11, l13#177);

        $i28 = l13#177 / 12;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(9, $i28);

        $i29 = l13#177 % 12;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(10, $i29);

        l14#194 = l7#90 % 3600000;

        $i30 = l14#194 / 60000;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(12, $i30);

        l14#203 = l14#194 % 60000;

        $i31 = l14#203 / 1000;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(13, $i31);

        $i32 = l14#203 % 1000;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(14, $i32);

        goto label13;

     label12:
        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(11, 0);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(9, 0);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(10, 0);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(12, 0);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(13, 0);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(14, 0);

     label13:
        l10#144 = l10#144 | 32256;

     label14:
        $i33 = l1 & 98304;

        if $i33 == 0 goto label15;

        $r18 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i34 = $r18[0];

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(15, $i34);

        $r19 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i35 = $r19[1];

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(16, $i35);

        l10#144 = l10#144 | 98304;

     label15:
        $i36 = l1 & 344;

        if $i36 == 0 goto label35;

        $r20 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        l13#259 = virtualinvoke $r20.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        $r21 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $i37 = virtualinvoke $r21.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        l14#265 = specialinvoke l0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i37);

        if l14#265 == 0 goto label16;

        $r22 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        l16#272 = specialinvoke l0.<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r22, l5#115);

        $l38 = l5#115 - l16#272;

        $i39 = (int) $l38;

        l15#279 = $i39 + 1;

        goto label18;

     label16:
        $r23 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;

        $i40 = $r23[1];

        if l13#259 != $i40 goto label17;

        $r24 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r25 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();

        l18#289 = virtualinvoke $r24.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r25);

        $r26 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l16#272 = virtualinvoke $r26.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(l18#289);

        $l41 = l5#115 - l16#272;

        $i42 = (int) $l41;

        l15#279 = $i42 + 1;

        goto label18;

     label17:
        $r27 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r28 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $l43 = virtualinvoke $r27.<sun.util.calendar.LocalGregorianCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>($r28);

        l15#279 = (int) $l43;

        $l44 = (long) l15#279;

        $l45 = l5#115 - $l44;

        l16#272 = $l45 + 1L;

     label18:
        if l14#265 == 0 goto label19;

        $r29 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $l46 = specialinvoke l0.<java.util.JapaneseImperialCalendar: long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r29, l5#115);

        goto label20;

     label19:
        $l47 = (long) l12;

        $l48 = l5#115 - $l47;

        $l46 = $l48 + 1L;

     label20:
        l18#321 = $l46;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(6, l15#279);

        $i49 = l12 - 1;

        $i50 = $i49 / 7;

        $i51 = $i50 + 1;

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(8, $i51);

        l20#338 = specialinvoke l0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l16#272, l5#115);

        if l20#338 != 0 goto label28;

        l21#343 = l16#272 - 1L;

        l25#346 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>(l21#343);

        if l14#265 != 0 goto label21;

        $i52 = virtualinvoke l25#346.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        $z3 = specialinvoke l0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i52);

        if $z3 != 0 goto label21;

        l23#355 = l16#272 - 365L;

        $z4 = virtualinvoke l25#346.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();

        if $z4 == 0 goto label27;

        l23#355 = l23#355 - 1L;

        goto label27;

     label21:
        if l14#265 == 0 goto label26;

        $r30 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $i53 = virtualinvoke $r30.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();

        if $i53 != 1 goto label25;

        if l8 <= 4 goto label23;

        $r31 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i54 = l8 - 1;

        $r32 = $r31[$i54];

        l26#374 = virtualinvoke $r32.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $i55 = virtualinvoke l26#374.<sun.util.calendar.CalendarDate: int getYear()>();

        if l13#259 != $i55 goto label22;

        $i56 = virtualinvoke l26#374.<sun.util.calendar.CalendarDate: int getMonth()>();

        $r33 = virtualinvoke l25#346.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>($i56);

        $i57 = virtualinvoke l26#374.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

        virtualinvoke $r33.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i57);

     label22:
        goto label24;

     label23:
        $r35 = virtualinvoke l25#346.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>(1);

        virtualinvoke $r35.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);

     label24:
        $r37 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        virtualinvoke $r37.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(l25#346);

        $r38 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l23#355 = virtualinvoke $r38.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(l25#346);

        goto label27;

     label25:
        l23#355 = l16#272 - 365L;

        $z6 = virtualinvoke l25#346.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();

        if $z6 == 0 goto label27;

        l23#355 = l23#355 - 1L;

        goto label27;

     label26:
        $r39 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r40 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $i58 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>($r40);

        $r41 = $r39[$i58];

        l26#410 = virtualinvoke $r41.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $i59 = virtualinvoke l26#410.<sun.util.calendar.CalendarDate: int getMonth()>();

        $r42 = virtualinvoke l25#346.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>($i59);

        $i60 = virtualinvoke l26#410.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

        virtualinvoke $r42.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i60);

        $r44 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        virtualinvoke $r44.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(l25#346);

        $r45 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l23#355 = virtualinvoke $r45.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(l25#346);

     label27:
        l20#338 = specialinvoke l0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l23#355, l21#343);

        goto label34;

     label28:
        if l14#265 != 0 goto label31;

        if l20#338 < 52 goto label34;

        l21#434 = l16#272 + 365L;

        $r46 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $z8 = virtualinvoke $r46.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();

        if $z8 == 0 goto label29;

        l21#434 = l21#434 + 1L;

     label29:
        $l61 = l21#434 + 6L;

        $i62 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

        l23#447 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l61, $i62);

        $l63 = l23#447 - l21#434;

        l25#452 = (int) $l63;

        $i64 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();

        if l25#452 < $i64 goto label30;

        $l65 = l23#447 - 7L;

        $b66 = l5#115 cmp $l65;

        if $b66 < 0 goto label30;

        l20#338 = 1;

     label30:
        goto label34;

     label31:
        $r47 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $r48 = virtualinvoke $r47.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();

        l21#466 = (sun.util.calendar.LocalGregorianCalendar$Date) $r48;

        $r49 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        $i67 = virtualinvoke $r49.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();

        if $i67 != 1 goto label32;

        virtualinvoke l21#466.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date addYear(int)>(1);

        $r51 = virtualinvoke l21#466.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>(1);

        virtualinvoke $r51.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);

        $r53 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l22#482 = virtualinvoke $r53.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(l21#466);

        goto label33;

     label32:
        $i68 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(l21#466);

        l24#487 = $i68 + 1;

        $r54 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r55 = $r54[l24#487];

        l25#492 = virtualinvoke $r55.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $r56 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r57 = $r56[l24#487];

        virtualinvoke l21#466.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>($r57);

        $i69 = virtualinvoke l25#492.<sun.util.calendar.CalendarDate: int getMonth()>();

        $i70 = virtualinvoke l25#492.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

        virtualinvoke l21#466.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>(1, $i69, $i70);

        $r60 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        virtualinvoke $r60.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(l21#466);

        $r61 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l22#482 = virtualinvoke $r61.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(l21#466);

     label33:
        $l71 = l22#482 + 6L;

        $i72 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

        l24#517 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l71, $i72);

        $l73 = l24#517 - l22#482;

        l26#522 = (int) $l73;

        $i74 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();

        if l26#522 < $i74 goto label34;

        $l75 = l24#517 - 7L;

        $b76 = l5#115 cmp $l75;

        if $b76 < 0 goto label34;

        l20#338 = 1;

     label34:
        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(3, l20#338);

        $i77 = specialinvoke l0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l18#321, l5#115);

        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(4, $i77);

        l10#144 = l10#144 | 344;

     label35:
        return l10#144;
    }

    private static int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)
    {
        sun.util.calendar.LocalGregorianCalendar$Date l0;
        sun.util.calendar.Era l1, $r2;
        sun.util.calendar.Era[] $r0, $r1;
        int $i0, l2#7;

        l0 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;

        l1 = virtualinvoke l0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();

        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i0 = lengthof $r0;

        l2#7 = $i0 - 1;

     label1:
        if l2#7 <= 0 goto label3;

        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r2 = $r1[l2#7];

        if $r2 != l1 goto label2;

        return l2#7;

     label2:
        l2#7 = l2#7 + -1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isTransitionYear(int)
    {
        java.util.JapaneseImperialCalendar l0;
        int l1, l3, $i0, l2#5;
        sun.util.calendar.Era[] $r0, $r1;
        sun.util.calendar.Era $r2;
        sun.util.calendar.CalendarDate $r3;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: int;

        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i0 = lengthof $r0;

        l2#5 = $i0 - 1;

     label1:
        if l2#5 <= 0 goto label4;

        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r2 = $r1[l2#5];

        $r3 = virtualinvoke $r2.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        l3 = virtualinvoke $r3.<sun.util.calendar.CalendarDate: int getYear()>();

        if l1 != l3 goto label2;

        return 1;

     label2:
        if l1 <= l3 goto label3;

        goto label4;

     label3:
        l2#5 = l2#5 + -1;

        goto label1;

     label4:
        return 0;
    }

    private long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date, long)
    {
        java.util.JapaneseImperialCalendar l0;
        sun.util.calendar.LocalGregorianCalendar$Date l1;
        long l2, l7, $l3;
        sun.util.calendar.CalendarDate l6;
        sun.util.calendar.Era $r0, $r2;
        int $i0, l5#10, $i2;
        sun.util.calendar.Era[] $r1;
        sun.util.calendar.Gregorian $r3, $r4, $r7;
        byte $b1;
        java.util.TimeZone $r5;
        sun.util.calendar.Gregorian$Date l5#26;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;

        l2 := @parameter1: long;

        virtualinvoke l1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();

        $r0 = virtualinvoke l1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();

        if $r0 == null goto label4;

        $i0 = virtualinvoke l1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();

        if $i0 != 1 goto label4;

        l5#10 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(l1);

     label1:
        if l5#10 <= 0 goto label4;

        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r2 = $r1[l5#10];

        l6 = virtualinvoke $r2.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $r3 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        l7 = virtualinvoke $r3.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(l6);

        $b1 = l7 cmp l2;

        if $b1 <= 0 goto label2;

        goto label3;

     label2:
        return l7;

     label3:
        l5#10 = l5#10 + -1;

        goto label1;

     label4:
        $r4 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        $r5 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        l5#26 = virtualinvoke $r4.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r5);

        $i2 = virtualinvoke l1.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        virtualinvoke l5#26.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i2, 1, 1);

        $r7 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;

        $l3 = virtualinvoke $r7.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(l5#26);

        return $l3;
    }

    private long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date, long)
    {
        java.util.JapaneseImperialCalendar l0;
        sun.util.calendar.LocalGregorianCalendar$Date l1;
        long l2, l5, $l2, $l3, $l4;
        int l4, $i1;
        long[] $r0;
        byte $b0;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;

        l2 := @parameter1: long;

        l4 = staticinvoke <java.util.JapaneseImperialCalendar: int getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(l1);

        if l4 == -1 goto label1;

        $r0 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;

        l5 = $r0[l4];

        $b0 = l5 cmp l2;

        if $b0 > 0 goto label1;

        return l5;

     label1:
        $i1 = virtualinvoke l1.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();

        $l2 = (long) $i1;

        $l3 = l2 - $l2;

        $l4 = $l3 + 1L;

        return $l4;
    }

    private int getWeekNumber(long, long)
    {
        java.util.JapaneseImperialCalendar l0;
        long l1, l3, $l0, l5#7, $l2, $l4;
        int l7, l8, $i1, $i3, $i5, $i6, $i7, $i8;
        boolean $z0;
        java.lang.AssertionError $r0;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: long;

        l3 := @parameter1: long;

        $l0 = l1 + 6L;

        $i1 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

        l5#7 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l0, $i1);

        $l2 = l5#7 - l1;

        l7 = (int) $l2;

        $z0 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if l7 <= 7 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        $i3 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();

        if l7 < $i3 goto label2;

        l5#7 = l5#7 - 7L;

     label2:
        $l4 = l3 - l5#7;

        l8 = (int) $l4;

        if l8 < 0 goto label3;

        $i5 = l8 / 7;

        $i6 = $i5 + 1;

        return $i6;

     label3:
        $i7 = staticinvoke <sun.util.calendar.CalendarUtils: int floorDivide(int,int)>(l8, 7);

        $i8 = $i7 + 1;

        return $i8;
    }

    private static int getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)
    {
        sun.util.calendar.LocalGregorianCalendar$Date l0;
        int l1#3, $i0, $i1, $i2, $i3, $i4, $i5, l1#23, $i6, $i7, $i8, $i9;
        sun.util.calendar.Era[] $r0, $r2, $r3;
        sun.util.calendar.Era $r1, $r4;
        sun.util.calendar.CalendarDate l2#8, l2#27;

        l0 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;

        l1#3 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(l0);

        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r1 = $r0[l1#3];

        l2#8 = virtualinvoke $r1.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $i0 = virtualinvoke l2#8.<sun.util.calendar.CalendarDate: int getYear()>();

        $i1 = virtualinvoke l0.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        if $i0 != $i1 goto label1;

        $i2 = virtualinvoke l2#8.<sun.util.calendar.CalendarDate: int getMonth()>();

        $i3 = virtualinvoke l0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();

        if $i2 != $i3 goto label1;

        return l1#3;

     label1:
        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i4 = lengthof $r2;

        $i5 = $i4 - 1;

        if l1#3 >= $i5 goto label2;

        $r3 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        l1#23 = l1#3 + 1;

        $r4 = $r3[l1#23];

        l2#27 = virtualinvoke $r4.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $i6 = virtualinvoke l2#27.<sun.util.calendar.CalendarDate: int getYear()>();

        $i7 = virtualinvoke l0.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        if $i6 != $i7 goto label2;

        $i8 = virtualinvoke l2#27.<sun.util.calendar.CalendarDate: int getMonth()>();

        $i9 = virtualinvoke l0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();

        if $i8 != $i9 goto label2;

        return l1#23;

     label2:
        return -1;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.util.JapaneseImperialCalendar l0;
        java.util.TimeZone l1;
        sun.util.calendar.LocalGregorianCalendar$Date $r0;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 = specialinvoke l0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r0 = l0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;

        virtualinvoke $r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(l1);

        return l1;
    }

    protected void computeTime()
    {
        java.util.JapaneseImperialCalendar l0;
        java.util.TimeZone l10;
        int l11, l12, l14, l1#9, l2#15, $i0, $i1, l1#37, l3#44, $i2, l2#51, $i3, $i4, $i6, $i8, $i9, $i11, $i13, $i15, $i22, $i26, $i27, $i28, $i29, $i30, $i32, $i33, l13#231, $i34, $i35, $i36, $i37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int[] $r0, $r1, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r26;
        java.lang.IllegalArgumentException $r2, $r19;
        java.lang.String $r3, $r21, $r28;
        sun.util.calendar.Era[] $r5;
        long l4#65, $l5, l4#75, $l7, $l10, l4#96, $l12, l4#103, l4#107, $l14, l4#114, l4#118, $l16, l4#125, l6#129, l4#133, $l18, l6#149, $l19, $l20, l8#157, $l23, $l24, $l31, l8#218;
        byte $b17;
        sun.util.calendar.ZoneInfo $r8;
        java.lang.StringBuilder $r20, $r22, $r23, $r24, $r25, $r27;

        l0 := @this: java.util.JapaneseImperialCalendar;

        $z0 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isLenient()>();

        if $z0 != 0 goto label05;

        $r0 = l0.<java.util.JapaneseImperialCalendar: int[] originalFields>;

        if $r0 != null goto label01;

        $r1 = newarray (int)[17];

        l0.<java.util.JapaneseImperialCalendar: int[] originalFields> = $r1;

     label01:
        l1#9 = 0;

     label02:
        if l1#9 >= 17 goto label05;

        l2#15 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(l1#9);

        $z1 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isExternallySet(int)>(l1#9);

        if $z1 == 0 goto label04;

        $i0 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(l1#9);

        if l2#15 < $i0 goto label03;

        $i1 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(l1#9);

        if l2#15 <= $i1 goto label04;

     label03:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <java.util.JapaneseImperialCalendar: java.lang.String getFieldName(int)>(l1#9);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label04:
        $r4 = l0.<java.util.JapaneseImperialCalendar: int[] originalFields>;

        $r4[l1#9] = l2#15;

        l1#9 = l1#9 + 1;

        goto label02;

     label05:
        l1#37 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int selectFields()>();

        $z2 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(0);

        if $z2 == 0 goto label08;

        l3#44 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(0);

        $z3 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(1);

        if $z3 == 0 goto label06;

        $i2 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);

        goto label07;

     label06:
        $i2 = 1;

     label07:
        l2#51 = $i2;

        goto label10;

     label08:
        $z4 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(1);

        if $z4 == 0 goto label09;

        $r5 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $i3 = lengthof $r5;

        l3#44 = $i3 - 1;

        l2#51 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);

        goto label10;

     label09:
        l3#44 = 3;

        l2#51 = 45;

     label10:
        l4#65 = 0L;

        $z5 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l1#37, 11);

        if $z5 == 0 goto label11;

        $i4 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(11);

        $l5 = (long) $i4;

        l4#75 = l4#65 + $l5;

        goto label12;

     label11:
        $i6 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(10);

        $l7 = (long) $i6;

        l4#75 = l4#65 + $l7;

        $z6 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l1#37, 9);

        if $z6 == 0 goto label12;

        $i8 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(9);

        $i9 = 12 * $i8;

        $l10 = (long) $i9;

        l4#75 = l4#75 + $l10;

     label12:
        l4#96 = l4#75 * 60L;

        $i11 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(12);

        $l12 = (long) $i11;

        l4#103 = l4#96 + $l12;

        l4#107 = l4#103 * 60L;

        $i13 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(13);

        $l14 = (long) $i13;

        l4#114 = l4#107 + $l14;

        l4#118 = l4#114 * 1000L;

        $i15 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(14);

        $l16 = (long) $i15;

        l4#125 = l4#118 + $l16;

        l6#129 = l4#125 / 86400000L;

        l4#133 = l4#125 % 86400000L;

     label13:
        $b17 = l4#133 cmp 0L;

        if $b17 >= 0 goto label14;

        l4#133 = l4#133 + 86400000L;

        l6#129 = l6#129 - 1L;

        goto label13;

     label14:
        $l18 = specialinvoke l0.<java.util.JapaneseImperialCalendar: long getFixedDate(int,int,int)>(l3#44, l2#51, l1#37);

        l6#149 = l6#129 + $l18;

        $l19 = l6#149 - 719163L;

        $l20 = $l19 * 86400000L;

        l8#157 = $l20 + l4#133;

        l10 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();

        $r6 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        if $r6 != null goto label15;

        $r7 = newarray (int)[2];

        l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets> = $r7;

     label15:
        l11 = l1#37 & 98304;

        if l11 == 98304 goto label17;

        $z7 = l10 instanceof sun.util.calendar.ZoneInfo;

        if $z7 == 0 goto label16;

        $r8 = (sun.util.calendar.ZoneInfo) l10;

        $r9 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        virtualinvoke $r8.<sun.util.calendar.ZoneInfo: int getOffsetsByWall(long,int[])>(l8#157, $r9);

        goto label17;

     label16:
        $i22 = virtualinvoke l10.<java.util.TimeZone: int getRawOffset()>();

        $l23 = (long) $i22;

        $l24 = l8#157 - $l23;

        $r10 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        virtualinvoke l10.<java.util.TimeZone: int getOffsets(long,int[])>($l24, $r10);

     label17:
        if l11 == 0 goto label19;

        $z8 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l11, 15);

        if $z8 == 0 goto label18;

        $r11 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i26 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(15);

        $r11[0] = $i26;

     label18:
        $z9 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l11, 16);

        if $z9 == 0 goto label19;

        $r12 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i27 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(16);

        $r12[1] = $i27;

     label19:
        $r13 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i28 = $r13[0];

        $r14 = l0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;

        $i29 = $r14[1];

        $i30 = $i28 + $i29;

        $l31 = (long) $i30;

        l8#218 = l8#157 - $l31;

        l0.<java.util.JapaneseImperialCalendar: long time> = l8#218;

        $i32 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getSetStateFields()>();

        $i33 = l1#37 | $i32;

        l12 = specialinvoke l0.<java.util.JapaneseImperialCalendar: int computeFields(int,int)>($i33, l11);

        $z10 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isLenient()>();

        if $z10 != 0 goto label23;

        l13#231 = 0;

     label20:
        if l13#231 >= 17 goto label23;

        $z11 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isExternallySet(int)>(l13#231);

        if $z11 != 0 goto label21;

        goto label22;

     label21:
        $r15 = l0.<java.util.JapaneseImperialCalendar: int[] originalFields>;

        $i34 = $r15[l13#231];

        $i35 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(l13#231);

        if $i34 == $i35 goto label22;

        l14 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(l13#231);

        $r16 = l0.<java.util.JapaneseImperialCalendar: int[] originalFields>;

        $r17 = l0.<java.util.JapaneseImperialCalendar: int[] fields>;

        $r18 = l0.<java.util.JapaneseImperialCalendar: int[] fields>;

        $i36 = lengthof $r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r17, 0, $i36);

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = staticinvoke <java.util.JapaneseImperialCalendar: java.lang.String getFieldName(int)>(l13#231);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l14);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r26 = l0.<java.util.JapaneseImperialCalendar: int[] originalFields>;

        $i37 = $r26[l13#231];

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r19;

     label22:
        l13#231 = l13#231 + 1;

        goto label20;

     label23:
        virtualinvoke l0.<java.util.JapaneseImperialCalendar: void setFieldsNormalized(int)>(l12);

        return;
    }

    public int getMinimum(int)
    {
        java.util.JapaneseImperialCalendar l0;
        int l1, $i0;
        int[] $r0;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: int;

        $r0 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;

        $i0 = $r0[l1];

        return $i0;
    }

    public int getMaximum(int)
    {
        java.util.JapaneseImperialCalendar l0;
        int l1, $i0, $i1, $i2, $i3;
        sun.util.calendar.LocalGregorianCalendar$Date l2;
        sun.util.calendar.LocalGregorianCalendar $r0;
        java.util.TimeZone $r1;
        int[] $r2, $r3;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: int;

        lookupswitch(l1)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r1 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();

        l2 = virtualinvoke $r0.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r1);

        $r2 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;

        $i0 = $r2[1];

        $i1 = virtualinvoke l2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;

     label2:
        $r3 = <java.util.JapaneseImperialCalendar: int[] MAX_VALUES>;

        $i3 = $r3[l1];

        return $i3;
    }

    private long getFixedDate(int, int, int)
    {
        java.util.JapaneseImperialCalendar l0;
        int l1, l3, l2#1, l4#3, l5#5, $i0, $i1, $i2, $i3, $i4, l7#63, $i5, $i6, $i10, $i12, $i16, $i17, $i18, $i19, l9#161, l10#170, $i21, $i25, $i26, $i27, l11#193, $i31, $i32, $i35, $i37, l11#246, $i40, $i42;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int[] l6#25, $r2;
        sun.util.calendar.Era[] $r0, $r8;
        sun.util.calendar.Era $r1, $r9;
        sun.util.calendar.CalendarDate l6#42;
        sun.util.calendar.LocalGregorianCalendar $r3, $r5, $r12, $r13;
        java.util.TimeZone $r4, $r6;
        sun.util.calendar.LocalGregorianCalendar$Date l6#58, l6#74;
        long l7#94, $l7, l7#110, $l8, $l9, l9#124, $l11, $l13, $l15, $l20, $l22, $l23, $l24, $l28, $l29, $l30, $l33, l7#219, $l34, l9#229, $l36, $l38, $l41, $l43, $l44, $l45;
        byte $b14, $b39;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: int;

        l2#1 := @parameter1: int;

        l3 := @parameter2: int;

        l4#3 = 0;

        l5#5 = 1;

        $z0 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 2);

        if $z0 == 0 goto label02;

        l4#3 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(2);

        if l4#3 <= 11 goto label01;

        $i0 = l4#3 / 12;

        l2#1 = l2#1 + $i0;

        l4#3 = l4#3 % 12;

        goto label03;

     label01:
        if l4#3 >= 0 goto label03;

        l6#25 = newarray (int)[1];

        $i1 = staticinvoke <sun.util.calendar.CalendarUtils: int floorDivide(int,int,int[])>(l4#3, 12, l6#25);

        l2#1 = l2#1 + $i1;

        l4#3 = l6#25[0];

        goto label03;

     label02:
        if l2#1 != 1 goto label03;

        if l1 == 0 goto label03;

        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r1 = $r0[l1];

        l6#42 = virtualinvoke $r1.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();

        $i2 = virtualinvoke l6#42.<sun.util.calendar.CalendarDate: int getMonth()>();

        l4#3 = $i2 - 1;

        l5#5 = virtualinvoke l6#42.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

     label03:
        $r2 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;

        $i3 = $r2[1];

        if l2#1 != $i3 goto label05;

        $r3 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r4 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();

        l6#58 = virtualinvoke $r3.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r4);

        $i4 = virtualinvoke l6#58.<sun.util.calendar.CalendarDate: int getMonth()>();

        l7#63 = $i4 - 1;

        if l4#3 >= l7#63 goto label04;

        l4#3 = l7#63;

     label04:
        if l4#3 != l7#63 goto label05;

        l5#5 = virtualinvoke l6#58.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

     label05:
        $r5 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        $r6 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;

        l6#74 = virtualinvoke $r5.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>($r6);

        if l1 <= 0 goto label06;

        $r8 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;

        $r9 = $r8[l1];

        goto label07;

     label06:
        $r9 = null;

     label07:
        virtualinvoke l6#74.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>($r9);

        $i5 = l4#3 + 1;

        virtualinvoke l6#74.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>(l2#1, $i5, l5#5);

        $r12 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        virtualinvoke $r12.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(l6#74);

        $r13 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;

        l7#94 = virtualinvoke $r13.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(l6#74);

        $z2 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 2);

        if $z2 == 0 goto label18;

        $z3 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 5);

        if $z3 == 0 goto label08;

        $z4 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(5);

        if $z4 == 0 goto label23;

        $i6 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);

        $l7 = (long) $i6;

        l7#110 = l7#94 + $l7;

        $l8 = (long) l5#5;

        l7#94 = l7#110 - $l8;

        goto label23;

     label08:
        $z5 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 4);

        if $z5 == 0 goto label11;

        $l9 = l7#94 + 6L;

        $i10 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

        l9#124 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l9, $i10);

        $l11 = l9#124 - l7#94;

        $i12 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();

        $l13 = (long) $i12;

        $b14 = $l11 cmp $l13;

        if $b14 < 0 goto label09;

        l9#124 = l9#124 - 7L;

     label09:
        $z6 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 7);

        if $z6 == 0 goto label10;

        $l15 = l9#124 + 6L;

        $i16 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);

        l9#124 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l15, $i16);

     label10:
        $i17 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(4);

        $i18 = $i17 - 1;

        $i19 = 7 * $i18;

        $l20 = (long) $i19;

        l7#94 = l9#124 + $l20;

        goto label23;

     label11:
        $z7 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 7);

        if $z7 == 0 goto label12;

        l9#161 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);

        goto label13;

     label12:
        l9#161 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

     label13:
        $z8 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 8);

        if $z8 == 0 goto label14;

        l10#170 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(8);

        goto label15;

     label14:
        l10#170 = 1;

     label15:
        if l10#170 < 0 goto label16;

        $i21 = 7 * l10#170;

        $l22 = (long) $i21;

        $l23 = l7#94 + $l22;

        $l24 = $l23 - 1L;

        l7#94 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l24, l9#161);

        goto label17;

     label16:
        $i25 = specialinvoke l0.<java.util.JapaneseImperialCalendar: int monthLength(int,int)>(l4#3, l2#1);

        $i26 = l10#170 + 1;

        $i27 = 7 * $i26;

        l11#193 = $i25 + $i27;

        $l28 = (long) l11#193;

        $l29 = l7#94 + $l28;

        $l30 = $l29 - 1L;

        l7#94 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l30, l9#161);

     label17:
        goto label23;

     label18:
        $z9 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 6);

        if $z9 == 0 goto label20;

        $i31 = virtualinvoke l6#74.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();

        $z10 = specialinvoke l0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i31);

        if $z10 == 0 goto label19;

        l7#94 = specialinvoke l0.<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>(l6#74, l7#94);

     label19:
        $i32 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(6);

        $l33 = (long) $i32;

        l7#219 = l7#94 + $l33;

        l7#94 = l7#219 - 1L;

        goto label23;

     label20:
        $l34 = l7#94 + 6L;

        $i35 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

        l9#229 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l34, $i35);

        $l36 = l9#229 - l7#94;

        $i37 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();

        $l38 = (long) $i37;

        $b39 = $l36 cmp $l38;

        if $b39 < 0 goto label21;

        l9#229 = l9#229 - 7L;

     label21:
        $z11 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(l3, 7);

        if $z11 == 0 goto label22;

        l11#246 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);

        $i40 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

        if l11#246 == $i40 goto label22;

        $l41 = l9#229 + 6L;

        l9#229 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l41, l11#246);

     label22:
        $i42 = virtualinvoke l0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(3);

        $l43 = (long) $i42;

        $l44 = $l43 - 1L;

        $l45 = 7L * $l44;

        l7#94 = l9#229 + $l45;

     label23:
        return l7#94;
    }

    private int monthLength(int, int)
    {
        java.util.JapaneseImperialCalendar l0;
        int l1, l2, $i0;
        boolean $z0;
        int[] $r0, $r1;

        l0 := @this: java.util.JapaneseImperialCalendar;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        $z0 = staticinvoke <sun.util.calendar.CalendarUtils: boolean isGregorianLeapYear(int)>(l2);

        if $z0 == 0 goto label1;

        $r0 = <java.util.GregorianCalendar: int[] LEAP_MONTH_LENGTH>;

        $i0 = $r0[l1];

        goto label2;

     label1:
        $r1 = <java.util.GregorianCalendar: int[] MONTH_LENGTH>;

        $i0 = $r1[l1];

     label2:
        return $i0;
    }


