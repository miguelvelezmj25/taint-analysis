digraph getMaxEncodedLength {
"this := @this: kanzi.function.NullFunction {1040541667}" -> "srcLen := @parameter0: int {277834707}";
"srcLen := @parameter0: int {277834707}" -> "return srcLen {2026606914}";
}

digraph forward {
"this := @this: kanzi.function.NullFunction {439791648}" -> "input := @parameter0: kanzi.SliceByteArray {725404841}";
"input := @parameter0: kanzi.SliceByteArray {725404841}" -> "output := @parameter1: kanzi.SliceByteArray {1650263841}";
"output := @parameter1: kanzi.SliceByteArray {1650263841}" -> "$z0 = staticinvoke <kanzi.function.NullFunction: boolean doCopy(kanzi.SliceByteArray,kanzi.SliceByteArray)>(input, output) {1370089561}";
"$z0 = staticinvoke <kanzi.function.NullFunction: boolean doCopy(kanzi.SliceByteArray,kanzi.SliceByteArray)>(input, output) {1370089561}" -> "return $z0 {760087995}";
}

digraph doCopy {
"input := @parameter0: kanzi.SliceByteArray {202442750}" -> "output := @parameter1: kanzi.SliceByteArray {666223560}";
"output := @parameter1: kanzi.SliceByteArray {666223560}" -> "$z0 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(input) {1142368937}";
"$z0 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(input) {1142368937}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {126162136}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {126162136}" -> "if $z0 == 0 goto return 0 {1295321696}";
"if $z0 == 0 goto return 0 {1295321696}" -> "$z1 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(output) {535981650}";
"if $z0 == 0 goto return 0 {1295321696}" -> "return 0 {918886233}";
"$z1 = staticinvoke <kanzi.SliceByteArray: boolean isValid(kanzi.SliceByteArray)>(output) {535981650}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1401045317}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1401045317}" -> "if $z1 != 0 goto count = input.<kanzi.SliceByteArray: int length> {1649233255}";
"if $z1 != 0 goto count = input.<kanzi.SliceByteArray: int length> {1649233255}" -> "return 0 {918886233}";
"if $z1 != 0 goto count = input.<kanzi.SliceByteArray: int length> {1649233255}" -> "count = input.<kanzi.SliceByteArray: int length> {1523854451}";
"count = input.<kanzi.SliceByteArray: int length> {1523854451}" -> "$i0 = output.<kanzi.SliceByteArray: int length> {539107868}";
"$i0 = output.<kanzi.SliceByteArray: int length> {539107868}" -> "$i1 = output.<kanzi.SliceByteArray: int index> {805748050}";
"$i1 = output.<kanzi.SliceByteArray: int index> {805748050}" -> "$i2 = $i0 - $i1 {17128332}";
"$i2 = $i0 - $i1 {17128332}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1294886833}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1294886833}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {216506168}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {216506168}" -> "if $i2 >= count goto $r0 = input.<kanzi.SliceByteArray: byte[] array> {436518552}";
"if $i2 >= count goto $r0 = input.<kanzi.SliceByteArray: byte[] array> {436518552}" -> "return 0 {874483197}";
"if $i2 >= count goto $r0 = input.<kanzi.SliceByteArray: byte[] array> {436518552}" -> "$r0 = input.<kanzi.SliceByteArray: byte[] array> {955419704}";
"$r0 = input.<kanzi.SliceByteArray: byte[] array> {955419704}" -> "$r1 = output.<kanzi.SliceByteArray: byte[] array> {79088604}";
"$r1 = output.<kanzi.SliceByteArray: byte[] array> {79088604}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {2092752244}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {2092752244}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {168809310}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {168809310}" -> "if $r0 != $r1 goto $r2 = input.<kanzi.SliceByteArray: byte[] array> {1811266873}";
"if $r0 != $r1 goto $r2 = input.<kanzi.SliceByteArray: byte[] array> {1811266873}" -> "$i3 = input.<kanzi.SliceByteArray: int index> {2109749344}";
"if $r0 != $r1 goto $r2 = input.<kanzi.SliceByteArray: byte[] array> {1811266873}" -> "$r2 = input.<kanzi.SliceByteArray: byte[] array> {2042352136}";
"$i3 = input.<kanzi.SliceByteArray: int index> {2109749344}" -> "$i4 = output.<kanzi.SliceByteArray: int index> {155223184}";
"$i4 = output.<kanzi.SliceByteArray: int index> {155223184}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {627750952}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {627750952}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {1646431481}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {1646431481}" -> "if $i3 == $i4 goto $i7 = input.<kanzi.SliceByteArray: int index> {493343100}";
"if $i3 == $i4 goto $i7 = input.<kanzi.SliceByteArray: int index> {493343100}" -> "$r2 = input.<kanzi.SliceByteArray: byte[] array> {2042352136}";
"if $i3 == $i4 goto $i7 = input.<kanzi.SliceByteArray: int index> {493343100}" -> "$i7 = input.<kanzi.SliceByteArray: int index> {1601154299}";
"$r2 = input.<kanzi.SliceByteArray: byte[] array> {2042352136}" -> "$i5 = input.<kanzi.SliceByteArray: int index> {1469939308}";
"$i5 = input.<kanzi.SliceByteArray: int index> {1469939308}" -> "$r3 = output.<kanzi.SliceByteArray: byte[] array> {926805659}";
"$r3 = output.<kanzi.SliceByteArray: byte[] array> {926805659}" -> "$i6 = output.<kanzi.SliceByteArray: int index> {1226581891}";
"$i6 = output.<kanzi.SliceByteArray: int index> {1226581891}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, $r3, $i6, count) {1109700438}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, $r3, $i6, count) {1109700438}" -> "$i7 = input.<kanzi.SliceByteArray: int index> {1601154299}";
"$i7 = input.<kanzi.SliceByteArray: int index> {1601154299}" -> "$i8 = $i7 + count {925909043}";
"$i8 = $i7 + count {925909043}" -> "input.<kanzi.SliceByteArray: int index> = $i8 {908934011}";
"input.<kanzi.SliceByteArray: int index> = $i8 {908934011}" -> "$i9 = output.<kanzi.SliceByteArray: int index> {778589030}";
"$i9 = output.<kanzi.SliceByteArray: int index> {778589030}" -> "$i10 = $i9 + count {1608616691}";
"$i10 = $i9 + count {1608616691}" -> "output.<kanzi.SliceByteArray: int index> = $i10 {566004678}";
"output.<kanzi.SliceByteArray: int index> = $i10 {566004678}" -> "return 1 {906007992}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {2092752244}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1401045317}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {627750952}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count) {216506168}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1) {168809310}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {126162136}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4) {1646431481}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {1294886833}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: kanzi.function.NullFunction {1371935596}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {119858870}";
"specialinvoke this.<java.lang.Object: void <init>()>() {119858870}" -> "return {1721292877}";
}


