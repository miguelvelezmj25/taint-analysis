    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "java/util/zip/Deflater";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.util.zip.Deflater: boolean $assertionsDisabled> = $z1;

        staticinvoke <java.util.zip.Deflater: void initIDs()>();

        return;
    }

    public void setStrategy(int)
    {
        java.util.zip.Deflater l0;
        int l1, $i0;
        java.util.zip.ZStreamRef l2, $r1;
        java.lang.Throwable l3, $r2;
        java.lang.IllegalArgumentException $r0;

        l0 := @this: java.util.zip.Deflater;

        l1 := @parameter0: int;

        tableswitch(l1)
        {
            case 0: goto label01;
            case 1: goto label01;
            case 2: goto label01;
            default: goto label02;
        };

     label01:
        goto label03;

     label02:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label03:
        $r1 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l2 = $r1;

        entermonitor $r1;

     label04:
        $i0 = l0.<java.util.zip.Deflater: int strategy>;

        if $i0 == l1 goto label05;

        l0.<java.util.zip.Deflater: int strategy> = l1;

        l0.<java.util.zip.Deflater: boolean setParams> = 1;

     label05:
        exitmonitor l2;

     label06:
        goto label10;

     label07:
        $r2 := @caughtexception;

     label08:
        l3 = $r2;

        exitmonitor l2;

     label09:
        throw l3;

     label10:
        return;

        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void end()
    {
        java.util.zip.Deflater l0;
        java.util.zip.ZStreamRef l1, $r0, $r1, $r2;
        long l2;
        java.lang.Throwable l4, $r3;
        byte $b0;

        l0 := @this: java.util.zip.Deflater;

        $r0 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l2 = virtualinvoke $r1.<java.util.zip.ZStreamRef: long address()>();

        $r2 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        virtualinvoke $r2.<java.util.zip.ZStreamRef: void clear()>();

        $b0 = l2 cmp 0L;

        if $b0 == 0 goto label2;

        staticinvoke <java.util.zip.Deflater: void end(long)>(l2);

        l0.<java.util.zip.Deflater: byte[] buf> = null;

     label2:
        exitmonitor l1;

     label3:
        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        l4 = $r3;

        exitmonitor l1;

     label6:
        throw l4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void <init>(int)
    {
        java.util.zip.Deflater l0;
        int l1;

        l0 := @this: java.util.zip.Deflater;

        l1 := @parameter0: int;

        specialinvoke l0.<java.util.zip.Deflater: void <init>(int,boolean)>(l1, 0);

        return;
    }

    protected void finalize()
    {
        java.util.zip.Deflater l0;

        l0 := @this: java.util.zip.Deflater;

        virtualinvoke l0.<java.util.zip.Deflater: void end()>();

        return;
    }

    public void <init>(int, boolean)
    {
        java.util.zip.Deflater l0;
        int l1;
        boolean l2;
        byte[] $r0;
        java.util.zip.ZStreamRef $r1;
        long $l0;

        l0 := @this: java.util.zip.Deflater;

        l1 := @parameter0: int;

        l2 := @parameter1: boolean;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $r0 = newarray (byte)[0];

        l0.<java.util.zip.Deflater: byte[] buf> = $r0;

        l0.<java.util.zip.Deflater: int level> = l1;

        l0.<java.util.zip.Deflater: int strategy> = 0;

        $r1 = new java.util.zip.ZStreamRef;

        $l0 = staticinvoke <java.util.zip.Deflater: long init(int,int,boolean)>(l1, 0, l2);

        specialinvoke $r1.<java.util.zip.ZStreamRef: void <init>(long)>($l0);

        l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef> = $r1;

        return;
    }

    public int getTotalIn()
    {
        java.util.zip.Deflater l0;
        long $l0;
        int $i1;

        l0 := @this: java.util.zip.Deflater;

        $l0 = virtualinvoke l0.<java.util.zip.Deflater: long getBytesRead()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public long getBytesRead()
    {
        java.util.zip.Deflater l0;
        java.util.zip.ZStreamRef l1, $r0;
        java.lang.Throwable l2, $r1;
        long $l0;

        l0 := @this: java.util.zip.Deflater;

        $r0 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        specialinvoke l0.<java.util.zip.Deflater: void ensureOpen()>();

        $l0 = l0.<java.util.zip.Deflater: long bytesRead>;

        exitmonitor l1;

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

     label4:
        l2 = $r1;

        exitmonitor l1;

     label5:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void ensureOpen()
    {
        java.util.zip.Deflater l0;
        boolean $z0, $z1;
        java.util.zip.ZStreamRef $r0, $r2;
        java.lang.AssertionError $r1;
        long $l0;
        byte $b1;
        java.lang.NullPointerException $r3;

        l0 := @this: java.util.zip.Deflater;

        $z0 = <java.util.zip.Deflater: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r0);

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        $l0 = virtualinvoke $r2.<java.util.zip.ZStreamRef: long address()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Deflater has been closed");

        throw $r3;

     label2:
        return;
    }

    public boolean finished()
    {
        java.util.zip.Deflater l0;
        java.util.zip.ZStreamRef l1, $r0;
        java.lang.Throwable l2, $r1;
        boolean $z0;

        l0 := @this: java.util.zip.Deflater;

        $r0 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $z0 = l0.<java.util.zip.Deflater: boolean finished>;

        exitmonitor l1;

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

     label4:
        l2 = $r1;

        exitmonitor l1;

     label5:
        throw l2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int deflate(byte[], int, int)
    {
        java.util.zip.Deflater l0;
        byte[] l1;
        int l2, l3, $i0;

        l0 := @this: java.util.zip.Deflater;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $i0 = virtualinvoke l0.<java.util.zip.Deflater: int deflate(byte[],int,int,int)>(l1, l2, l3, 0);

        return $i0;
    }

    public int deflate(byte[], int, int, int)
    {
        java.util.zip.Deflater l0;
        byte[] l1;
        int l2, l3, l4, l6, l7, $i0, $i1, $i7, $i8;
        java.util.zip.ZStreamRef l5, $r2, $r3;
        java.lang.Throwable l8, $r7;
        java.lang.NullPointerException $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        long $l2, $l3, $l4, $l5, $l6, $l9, $l10;
        java.lang.IllegalArgumentException $r6;

        l0 := @this: java.util.zip.Deflater;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        if l1 != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>()>();

        throw $r0;

     label1:
        if l2 < 0 goto label2;

        if l3 < 0 goto label2;

        $i0 = lengthof l1;

        $i1 = $i0 - l3;

        if l2 <= $i1 goto label3;

     label2:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label3:
        $r2 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l5 = $r2;

        entermonitor $r2;

     label4:
        specialinvoke l0.<java.util.zip.Deflater: void ensureOpen()>();

        if l4 == 0 goto label5;

        if l4 == 2 goto label5;

        if l4 != 3 goto label7;

     label5:
        l6 = l0.<java.util.zip.Deflater: int len>;

        $r3 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        $l2 = virtualinvoke $r3.<java.util.zip.ZStreamRef: long address()>();

        l7 = specialinvoke l0.<java.util.zip.Deflater: int deflateBytes(long,byte[],int,int,int)>($l2, l1, l2, l3, l4);

        $l3 = l0.<java.util.zip.Deflater: long bytesWritten>;

        $l4 = (long) l7;

        $l5 = $l3 + $l4;

        l0.<java.util.zip.Deflater: long bytesWritten> = $l5;

        $l6 = l0.<java.util.zip.Deflater: long bytesRead>;

        $i7 = l0.<java.util.zip.Deflater: int len>;

        $i8 = l6 - $i7;

        $l9 = (long) $i8;

        $l10 = $l6 + $l9;

        l0.<java.util.zip.Deflater: long bytesRead> = $l10;

        exitmonitor l5;

     label6:
        return l7;

     label7:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label8:
        $r7 := @caughtexception;

        l8 = $r7;

        exitmonitor l5;

     label9:
        throw l8;

        catch java.lang.Throwable from label4 to label6 with label8;
        catch java.lang.Throwable from label7 to label9 with label8;
    }

    public void finish()
    {
        java.util.zip.Deflater l0;
        java.util.zip.ZStreamRef l1, $r0;
        java.lang.Throwable l2, $r1;

        l0 := @this: java.util.zip.Deflater;

        $r0 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        l0.<java.util.zip.Deflater: boolean finish> = 1;

        exitmonitor l1;

     label2:
        goto label6;

     label3:
        $r1 := @caughtexception;

     label4:
        l2 = $r1;

        exitmonitor l1;

     label5:
        throw l2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean needsInput()
    {
        java.util.zip.Deflater l0;
        java.util.zip.ZStreamRef l1, $r0;
        java.lang.Throwable l2, $r1;
        int $i0;
        boolean $z0;

        l0 := @this: java.util.zip.Deflater;

        $r0 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $i0 = l0.<java.util.zip.Deflater: int len>;

        if $i0 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor l1;

     label4:
        return $z0;

     label5:
        $r1 := @caughtexception;

     label6:
        l2 = $r1;

        exitmonitor l1;

     label7:
        throw l2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setInput(byte[], int, int)
    {
        java.util.zip.Deflater l0;
        byte[] l1;
        int l2, l3, $i0, $i1;
        java.util.zip.ZStreamRef l4, $r2;
        java.lang.Throwable l5, $r3;
        java.lang.NullPointerException $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;

        l0 := @this: java.util.zip.Deflater;

        l1 := @parameter0: byte[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        if l1 != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>()>();

        throw $r0;

     label1:
        if l2 < 0 goto label2;

        if l3 < 0 goto label2;

        $i0 = lengthof l1;

        $i1 = $i0 - l3;

        if l2 <= $i1 goto label3;

     label2:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label3:
        $r2 = l0.<java.util.zip.Deflater: java.util.zip.ZStreamRef zsRef>;

        l4 = $r2;

        entermonitor $r2;

     label4:
        l0.<java.util.zip.Deflater: byte[] buf> = l1;

        l0.<java.util.zip.Deflater: int off> = l2;

        l0.<java.util.zip.Deflater: int len> = l3;

        exitmonitor l4;

     label5:
        goto label9;

     label6:
        $r3 := @caughtexception;

     label7:
        l5 = $r3;

        exitmonitor l4;

     label8:
        throw l5;

     label9:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }


