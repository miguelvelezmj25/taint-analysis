digraph <clinit> {
"$r0 = class \"com/sleepycat/je/dbi/DupKeyData\" {430308639}" -> "$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {664628048}";
"$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {664628048}" -> "if $z0 != 0 goto $z1 = 0 {2042841608}";
"if $z0 != 0 goto $z1 = 0 {2042841608}" -> "$z1 = 1 {1127331300}";
"if $z0 != 0 goto $z1 = 0 {2042841608}" -> "$z1 = 0 {969004938}";
"$z1 = 1 {1127331300}" -> "goto [?= <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1] {1967842712}";
"goto [?= <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1] {1967842712}" -> "<com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {1521572272}";
"$z1 = 0 {969004938}" -> "<com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {1521572272}";
"<com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> = $z1 {1521572272}" -> "return {341924247}";
}

digraph replaceData {
"twoPartKey := @parameter0: byte[] {1788439324}" -> "newData := @parameter1: byte[] {936587159}";
"newData := @parameter1: byte[] {936587159}" -> "$i0 = lengthof twoPartKey {1938066300}";
"$i0 = lengthof twoPartKey {1938066300}" -> "$i1 = $i0 - 1 {1399944124}";
"$i1 = $i0 - 1 {1399944124}" -> "origKeySize = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {978580851}";
"origKeySize = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {978580851}" -> "if origKeySize != -1 goto $i3 = origKeySize {1974131540}";
"if origKeySize != -1 goto $i3 = origKeySize {1974131540}" -> "$i2 = lengthof twoPartKey {245786826}";
"if origKeySize != -1 goto $i3 = origKeySize {1974131540}" -> "$i3 = origKeySize {90989489}";
"$i2 = lengthof twoPartKey {245786826}" -> "$i3 = $i2 - 1 {1378610759}";
"$i3 = $i2 - 1 {1378610759}" -> "goto [?= keySize = $i3] {951172181}";
"goto [?= keySize = $i3] {951172181}" -> "keySize = $i3 {1043106806}";
"$i3 = origKeySize {90989489}" -> "keySize = $i3 {1043106806}";
"keySize = $i3 {1043106806}" -> "$i4 = lengthof newData {1235283195}";
"$i4 = lengthof newData {1235283195}" -> "$r0 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(twoPartKey, 0, keySize, newData, 0, $i4) {293085374}";
"$r0 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(twoPartKey, 0, keySize, newData, 0, $i4) {293085374}" -> "return $r0 {1221602844}";
}

digraph combine {
"key := @parameter0: byte[] {814263201}" -> "keyOff := @parameter1: int {1377619144}";
"keyOff := @parameter1: int {1377619144}" -> "keySize := @parameter2: int {1074037354}";
"keySize := @parameter2: int {1074037354}" -> "data := @parameter3: byte[] {1172451075}";
"data := @parameter3: byte[] {1172451075}" -> "dataOff := @parameter4: int {858867745}";
"dataOff := @parameter4: int {858867745}" -> "dataSize := @parameter5: int {1887385424}";
"dataSize := @parameter5: int {1887385424}" -> "keySizeLen = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(keySize) {915094701}";
"keySizeLen = staticinvoke <com.sleepycat.util.PackedInteger: int getWriteIntLength(int)>(keySize) {915094701}" -> "$i0 = keySizeLen + keySize {1588969309}";
"$i0 = keySizeLen + keySize {1588969309}" -> "$i1 = $i0 + dataSize {1658311735}";
"$i1 = $i0 + dataSize {1658311735}" -> "buf = newarray (byte)[$i1] {981088659}";
"buf = newarray (byte)[$i1] {981088659}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, keyOff, buf, 0, keySize) {1482186538}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, keyOff, buf, 0, keySize) {1482186538}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, dataOff, buf, keySize, dataSize) {391376701}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, dataOff, buf, keySize, dataSize) {391376701}" -> "$i2 = keySize + dataSize {1348578431}";
"$i2 = keySize + dataSize {1348578431}" -> "nextOff = staticinvoke <com.sleepycat.util.PackedInteger: int writeReverseInt(byte[],int,int)>(buf, $i2, keySize) {1493530002}";
"nextOff = staticinvoke <com.sleepycat.util.PackedInteger: int writeReverseInt(byte[],int,int)>(buf, $i2, keySize) {1493530002}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1574334097}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1574334097}" -> "if $z0 != 0 goto return buf {1730351647}";
"if $z0 != 0 goto return buf {1730351647}" -> "$i3 = lengthof buf {774043681}";
"if $z0 != 0 goto return buf {1730351647}" -> "return buf {472913994}";
"$i3 = lengthof buf {774043681}" -> "if nextOff == $i3 goto return buf {1366209552}";
"if nextOff == $i3 goto return buf {1366209552}" -> "$r0 = new java.lang.AssertionError {1286985321}";
"if nextOff == $i3 goto return buf {1366209552}" -> "return buf {472913994}";
"$r0 = new java.lang.AssertionError {1286985321}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1075209008}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1075209008}" -> "throw $r0 {1694273814}";
}

digraph getKeyLength {
"buf := @parameter0: byte[] {1666109974}" -> "off := @parameter1: int {214798439}";
"off := @parameter1: int {214798439}" -> "len := @parameter2: int {13485323}";
"len := @parameter2: int {13485323}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {102094791}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {102094791}" -> "if $z0 != 0 goto $i2 = off + len {543923401}";
"if $z0 != 0 goto $i2 = off + len {543923401}" -> "$i0 = lengthof buf {1896544516}";
"if $z0 != 0 goto $i2 = off + len {543923401}" -> "$i2 = off + len {296528500}";
"$i0 = lengthof buf {1896544516}" -> "$i1 = off + len {1588765307}";
"$i1 = off + len {1588765307}" -> "if $i0 >= $i1 goto $i2 = off + len {1008836965}";
"if $i0 >= $i1 goto $i2 = off + len {1008836965}" -> "$r0 = new java.lang.AssertionError {1270370138}";
"if $i0 >= $i1 goto $i2 = off + len {1008836965}" -> "$i2 = off + len {296528500}";
"$r0 = new java.lang.AssertionError {1270370138}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1897597728}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1897597728}" -> "throw $r0 {1082177263}";
"$i2 = off + len {296528500}" -> "$i3 = $i2 - 1 {1383203169}";
"$i3 = $i2 - 1 {1383203169}" -> "keyLen = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {1101853414}";
"keyLen = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {1101853414}" -> "$z1 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {60263099}";
"$z1 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {60263099}" -> "if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1443904099}";
"if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1443904099}" -> "if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {831025704}";
"if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1443904099}" -> "$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1601603072}";
"if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {831025704}" -> "$r1 = new java.lang.AssertionError {1721533784}";
"if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {831025704}" -> "$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1601603072}";
"$r1 = new java.lang.AssertionError {1721533784}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {799621210}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {799621210}" -> "throw $r1 {1564638901}";
"$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1601603072}" -> "if $z2 != 0 goto return keyLen {2081186763}";
"if $z2 != 0 goto return keyLen {2081186763}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {1471882699}";
"if $z2 != 0 goto return keyLen {2081186763}" -> "return keyLen {46178437}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {1471882699}" -> "if keyLen <= len goto return keyLen {678358140}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {1471882699}" -> "$r2 = new java.lang.AssertionError {645206471}";
"if keyLen <= len goto return keyLen {678358140}" -> "$r2 = new java.lang.AssertionError {645206471}";
"if keyLen <= len goto return keyLen {678358140}" -> "return keyLen {46178437}";
"$r2 = new java.lang.AssertionError {645206471}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1350418679}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {1350418679}" -> "throw $r2 {263183240}";
}

digraph getKey {
"buf := @parameter0: byte[] {970906188}" -> "off := @parameter1: int {206495849}";
"off := @parameter1: int {206495849}" -> "len := @parameter2: int {1219623695}";
"len := @parameter2: int {1219623695}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {605322529}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {605322529}" -> "if $z0 != 0 goto $i2 = off + len {832243281}";
"if $z0 != 0 goto $i2 = off + len {832243281}" -> "$i0 = lengthof buf {1036320159}";
"if $z0 != 0 goto $i2 = off + len {832243281}" -> "$i2 = off + len {1113675257}";
"$i0 = lengthof buf {1036320159}" -> "$i1 = off + len {1494469045}";
"$i1 = off + len {1494469045}" -> "if $i0 >= $i1 goto $i2 = off + len {2027659766}";
"if $i0 >= $i1 goto $i2 = off + len {2027659766}" -> "$r0 = new java.lang.AssertionError {1606310973}";
"if $i0 >= $i1 goto $i2 = off + len {2027659766}" -> "$i2 = off + len {1113675257}";
"$r0 = new java.lang.AssertionError {1606310973}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {882764880}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {882764880}" -> "throw $r0 {292306724}";
"$i2 = off + len {1113675257}" -> "$i3 = $i2 - 1 {1668721518}";
"$i3 = $i2 - 1 {1668721518}" -> "keyLen = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {1042500469}";
"keyLen = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {1042500469}" -> "$z1 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1759033860}";
"$z1 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1759033860}" -> "if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1315328426}";
"if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1315328426}" -> "if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {456231940}";
"if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1315328426}" -> "$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1693369857}";
"if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {456231940}" -> "$r1 = new java.lang.AssertionError {1738962377}";
"if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {456231940}" -> "$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1693369857}";
"$r1 = new java.lang.AssertionError {1738962377}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {661916853}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {661916853}" -> "throw $r1 {808646131}";
"$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1693369857}" -> "if $z2 != 0 goto key = newarray (byte)[keyLen] {1911538195}";
"if $z2 != 0 goto key = newarray (byte)[keyLen] {1911538195}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {1363384174}";
"if $z2 != 0 goto key = newarray (byte)[keyLen] {1911538195}" -> "key = newarray (byte)[keyLen] {1371713111}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {1363384174}" -> "if keyLen <= len goto key = newarray (byte)[keyLen] {1903302784}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {1363384174}" -> "$r2 = new java.lang.AssertionError {1019681063}";
"if keyLen <= len goto key = newarray (byte)[keyLen] {1903302784}" -> "$r2 = new java.lang.AssertionError {1019681063}";
"if keyLen <= len goto key = newarray (byte)[keyLen] {1903302784}" -> "key = newarray (byte)[keyLen] {1371713111}";
"$r2 = new java.lang.AssertionError {1019681063}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {911534601}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {911534601}" -> "throw $r2 {1468219995}";
"key = newarray (byte)[keyLen] {1371713111}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, key, 0, keyLen) {913571190}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, off, key, 0, keyLen) {913571190}" -> "return key {1369244364}";
}

digraph split {
"twoPartKey := @parameter0: com.sleepycat.je.DatabaseEntry {1503273393}" -> "paramKey := @parameter1: com.sleepycat.je.DatabaseEntry {236358459}";
"paramKey := @parameter1: com.sleepycat.je.DatabaseEntry {236358459}" -> "paramData := @parameter2: com.sleepycat.je.DatabaseEntry {1360600984}";
"paramData := @parameter2: com.sleepycat.je.DatabaseEntry {1360600984}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {620389678}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {620389678}" -> "if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1279334571}";
"if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1279334571}" -> "$i0 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: int getOffset()>() {813905942}";
"if $z0 != 0 goto $r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1279334571}" -> "$r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {734202281}";
"$i0 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: int getOffset()>() {813905942}" -> "if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1202190397}";
"if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1202190397}" -> "$r0 = new java.lang.AssertionError {57091106}";
"if $i0 == 0 goto $r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1202190397}" -> "$r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {734202281}";
"$r0 = new java.lang.AssertionError {57091106}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1858724287}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1858724287}" -> "throw $r0 {1412800112}";
"$r1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {734202281}" -> "$i1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: int getSize()>() {1922566237}";
"$i1 = virtualinvoke twoPartKey.<com.sleepycat.je.DatabaseEntry: int getSize()>() {1922566237}" -> "staticinvoke <com.sleepycat.je.dbi.DupKeyData: void split(byte[],int,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>($r1, $i1, paramKey, paramData) {963552566}";
"staticinvoke <com.sleepycat.je.dbi.DupKeyData: void split(byte[],int,com.sleepycat.je.DatabaseEntry,com.sleepycat.je.DatabaseEntry)>($r1, $i1, paramKey, paramData) {963552566}" -> "return {849939660}";
}

digraph split {
"twoPartKey := @parameter0: byte[] {1356496795}" -> "twoPartKeySize := @parameter1: int {967972402}";
"twoPartKeySize := @parameter1: int {967972402}" -> "paramKey := @parameter2: com.sleepycat.je.DatabaseEntry {789857163}";
"paramKey := @parameter2: com.sleepycat.je.DatabaseEntry {789857163}" -> "paramData := @parameter3: com.sleepycat.je.DatabaseEntry {552855191}";
"paramData := @parameter3: com.sleepycat.je.DatabaseEntry {552855191}" -> "$i0 = twoPartKeySize - 1 {542509906}";
"$i0 = twoPartKeySize - 1 {542509906}" -> "keySize = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i0) {2141679684}";
"keySize = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i0) {2141679684}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1874589817}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1874589817}" -> "if $z0 != 0 goto (branch) {1288343388}";
"if $z0 != 0 goto (branch) {1288343388}" -> "if keySize != -1 goto (branch) {674119087}";
"if $z0 != 0 goto (branch) {1288343388}" -> "if paramKey == null goto (branch) {1137922989}";
"if keySize != -1 goto (branch) {674119087}" -> "$r0 = new java.lang.AssertionError {814151577}";
"if keySize != -1 goto (branch) {674119087}" -> "if paramKey == null goto (branch) {1137922989}";
"$r0 = new java.lang.AssertionError {814151577}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2136780999}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2136780999}" -> "throw $r0 {642136518}";
"if paramKey == null goto (branch) {1137922989}" -> "keyBuf = newarray (byte)[keySize] {1876766523}";
"if paramKey == null goto (branch) {1137922989}" -> "if paramData == null goto return {1597440171}";
"keyBuf = newarray (byte)[keySize] {1876766523}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, 0, keyBuf, 0, keySize) {904638891}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, 0, keyBuf, 0, keySize) {904638891}" -> "if keySize == 0 goto staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1948309947}";
"if keySize == 0 goto staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1948309947}" -> "$z1 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {356483414}";
"if keySize == 0 goto staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {1948309947}" -> "staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {359737925}";
"$z1 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {356483414}" -> "if $z1 == 0 goto virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {2080112237}";
"if $z1 == 0 goto virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {2080112237}" -> "staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {359737925}";
"if $z1 == 0 goto virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {2080112237}" -> "virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {988439035}";
"staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramKey, keyBuf) {359737925}" -> "goto [?= (branch)] {836609552}";
"goto [?= (branch)] {836609552}" -> "if paramData == null goto return {1597440171}";
"virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(keyBuf, 0, keySize) {988439035}" -> "if paramData == null goto return {1597440171}";
"if paramData == null goto return {1597440171}" -> "$i1 = twoPartKeySize - 1 {724269768}";
"if paramData == null goto return {1597440171}" -> "return {746071651}";
"$i1 = twoPartKeySize - 1 {724269768}" -> "keySizeLen = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey, $i1) {476501117}";
"keySizeLen = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey, $i1) {476501117}" -> "$i2 = twoPartKeySize - keySize {95616912}";
"$i2 = twoPartKeySize - keySize {95616912}" -> "dataSize = $i2 - keySizeLen {1974545200}";
"dataSize = $i2 - keySizeLen {1974545200}" -> "dataBuf = newarray (byte)[dataSize] {1230058774}";
"dataBuf = newarray (byte)[dataSize] {1230058774}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, keySize, dataBuf, 0, dataSize) {2023212337}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey, keySize, dataBuf, 0, dataSize) {2023212337}" -> "if dataSize == 0 goto staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1936224802}";
"if dataSize == 0 goto staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1936224802}" -> "$z2 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {1334163667}";
"if dataSize == 0 goto staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1936224802}" -> "staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1782691078}";
"$z2 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: boolean getPartial()>() {1334163667}" -> "if $z2 == 0 goto virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1541618170}";
"if $z2 == 0 goto virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1541618170}" -> "staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1782691078}";
"if $z2 == 0 goto virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {1541618170}" -> "virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {308220584}";
"staticinvoke <com.sleepycat.je.tree.LN: void setEntry(com.sleepycat.je.DatabaseEntry,byte[])>(paramData, dataBuf) {1782691078}" -> "goto [?= return] {674196829}";
"goto [?= return] {674196829}" -> "return {746071651}";
"virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>(dataBuf, 0, dataSize) {308220584}" -> "return {746071651}";
}

digraph removeData {
"twoPartKey := @parameter0: byte[] {1129600791}" -> "$i0 = lengthof twoPartKey {900815934}";
"$i0 = lengthof twoPartKey {900815934}" -> "$i1 = $i0 - 1 {2025189136}";
"$i1 = $i0 - 1 {2025189136}" -> "keySize = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {2072858035}";
"keySize = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey, $i1) {2072858035}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {739762365}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {739762365}" -> "if $z0 != 0 goto $r1 = new com.sleepycat.je.DatabaseEntry {1002338055}";
"if $z0 != 0 goto $r1 = new com.sleepycat.je.DatabaseEntry {1002338055}" -> "if keySize != -1 goto $r1 = new com.sleepycat.je.DatabaseEntry {557008716}";
"if $z0 != 0 goto $r1 = new com.sleepycat.je.DatabaseEntry {1002338055}" -> "$r1 = new com.sleepycat.je.DatabaseEntry {1258531405}";
"if keySize != -1 goto $r1 = new com.sleepycat.je.DatabaseEntry {557008716}" -> "$r0 = new java.lang.AssertionError {1769806370}";
"if keySize != -1 goto $r1 = new com.sleepycat.je.DatabaseEntry {557008716}" -> "$r1 = new com.sleepycat.je.DatabaseEntry {1258531405}";
"$r0 = new java.lang.AssertionError {1769806370}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1906058600}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1906058600}" -> "throw $r0 {1252918576}";
"$r1 = new com.sleepycat.je.DatabaseEntry {1258531405}" -> "$r2 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] makePrefixKey(byte[],int,int)>(twoPartKey, 0, keySize) {222003357}";
"$r2 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] makePrefixKey(byte[],int,int)>(twoPartKey, 0, keySize) {222003357}" -> "specialinvoke $r1.<com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r2) {962296867}";
"specialinvoke $r1.<com.sleepycat.je.DatabaseEntry: void <init>(byte[])>($r2) {962296867}" -> "return $r1 {1666543574}";
}

digraph makePrefixKey {
"key := @parameter0: byte[] {155115797}" -> "keyOff := @parameter1: int {795365868}";
"keyOff := @parameter1: int {795365868}" -> "keySize := @parameter2: int {607328087}";
"keySize := @parameter2: int {607328087}" -> "$i0 = keySize + 1 {811777569}";
"$i0 = keySize + 1 {811777569}" -> "buf = newarray (byte)[$i0] {1091514712}";
"buf = newarray (byte)[$i0] {1091514712}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, 0, buf, 0, keySize) {2025463407}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(key, 0, buf, 0, keySize) {2025463407}" -> "buf[keySize] = -1 {1431360038}";
"buf[keySize] = -1 {1431360038}" -> "return buf {783466774}";
}

digraph compareMainKey {
"keyBytes1 := @parameter0: byte[] {437964702}" -> "keyBytes2 := @parameter1: byte[] {257968309}";
"keyBytes2 := @parameter1: byte[] {257968309}" -> "btreeComparator := @parameter2: java.util.Comparator {1946258705}";
"btreeComparator := @parameter2: java.util.Comparator {1946258705}" -> "$i0 = lengthof keyBytes2 {759338395}";
"$i0 = lengthof keyBytes2 {759338395}" -> "$i1 = $i0 - 1 {642675554}";
"$i1 = $i0 - 1 {642675554}" -> "origKeySize2 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes2, $i1) {812811854}";
"origKeySize2 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes2, $i1) {812811854}" -> "if origKeySize2 != -1 goto $i3 = origKeySize2 {1796826961}";
"if origKeySize2 != -1 goto $i3 = origKeySize2 {1796826961}" -> "$i2 = lengthof keyBytes2 {1003043594}";
"if origKeySize2 != -1 goto $i3 = origKeySize2 {1796826961}" -> "$i3 = origKeySize2 {831828774}";
"$i2 = lengthof keyBytes2 {1003043594}" -> "$i3 = $i2 - 1 {1649363062}";
"$i3 = $i2 - 1 {1649363062}" -> "goto [?= keySize2 = $i3] {1131925801}";
"goto [?= keySize2 = $i3] {1131925801}" -> "keySize2 = $i3 {252604284}";
"$i3 = origKeySize2 {831828774}" -> "keySize2 = $i3 {252604284}";
"keySize2 = $i3 {252604284}" -> "$i4 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(keyBytes1, keyBytes2, 0, keySize2, btreeComparator) {838994309}";
"$i4 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: int compareMainKey(byte[],byte[],int,int,java.util.Comparator)>(keyBytes1, keyBytes2, 0, keySize2, btreeComparator) {838994309}" -> "return $i4 {1706182366}";
}

digraph compareMainKey {
"keyBytes1 := @parameter0: byte[] {338556646}" -> "keyBytes2 := @parameter1: byte[] {7422723}";
"keyBytes2 := @parameter1: byte[] {7422723}" -> "keyOff2 := @parameter2: int {823807182}";
"keyOff2 := @parameter2: int {823807182}" -> "keySize2 := @parameter3: int {492960713}";
"keySize2 := @parameter3: int {492960713}" -> "btreeComparator := @parameter4: java.util.Comparator {1817841359}";
"btreeComparator := @parameter4: java.util.Comparator {1817841359}" -> "$i0 = lengthof keyBytes1 {521527839}";
"$i0 = lengthof keyBytes1 {521527839}" -> "$i1 = $i0 - 1 {576310120}";
"$i1 = $i0 - 1 {576310120}" -> "origKeySize1 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes1, $i1) {296113268}";
"origKeySize1 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(keyBytes1, $i1) {296113268}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {1897703899}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1897703899}" -> "$i2 = lengthof keyBytes1 {1773448795}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {1897703899}" -> "$i3 = origKeySize1 {919150757}";
"$i2 = lengthof keyBytes1 {1773448795}" -> "$i3 = $i2 - 1 {2060095351}";
"$i3 = $i2 - 1 {2060095351}" -> "goto [?= keySize1 = $i3] {2059640784}";
"goto [?= keySize1 = $i3] {2059640784}" -> "keySize1 = $i3 {324624969}";
"$i3 = origKeySize1 {919150757}" -> "keySize1 = $i3 {324624969}";
"keySize1 = $i3 {324624969}" -> "if btreeComparator != null goto key1 = newarray (byte)[keySize1] {171018464}";
"if btreeComparator != null goto key1 = newarray (byte)[keySize1] {171018464}" -> "keyCmp#20 = staticinvoke <com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(keyBytes1, 0, keySize1, keyBytes2, keyOff2, keySize2) {1371027877}";
"if btreeComparator != null goto key1 = newarray (byte)[keySize1] {171018464}" -> "key1 = newarray (byte)[keySize1] {600352825}";
"keyCmp#20 = staticinvoke <com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(keyBytes1, 0, keySize1, keyBytes2, keyOff2, keySize2) {1371027877}" -> "goto [?= return keyCmp#20] {118383262}";
"goto [?= return keyCmp#20] {118383262}" -> "return keyCmp#20 {627700298}";
"key1 = newarray (byte)[keySize1] {600352825}" -> "key2 = newarray (byte)[keySize2] {1918371530}";
"key2 = newarray (byte)[keySize2] {1918371530}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes1, 0, key1, 0, keySize1) {57263927}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes1, 0, key1, 0, keySize1) {57263927}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes2, keyOff2, key2, 0, keySize2) {1704442372}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(keyBytes2, keyOff2, key2, 0, keySize2) {1704442372}" -> "keyCmp#20 = interfaceinvoke btreeComparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {208582764}";
"keyCmp#20 = interfaceinvoke btreeComparator.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {208582764}" -> "return keyCmp#20 {627700298}";
}

digraph combine {
"paramKey := @parameter0: com.sleepycat.je.DatabaseEntry {1049008077}" -> "paramData := @parameter1: com.sleepycat.je.DatabaseEntry {580113881}";
"paramData := @parameter1: com.sleepycat.je.DatabaseEntry {580113881}" -> "$r0 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1499291546}";
"$r0 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1499291546}" -> "$i0 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: int getOffset()>() {2045161829}";
"$i0 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: int getOffset()>() {2045161829}" -> "$i1 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: int getSize()>() {1079018747}";
"$i1 = virtualinvoke paramKey.<com.sleepycat.je.DatabaseEntry: int getSize()>() {1079018747}" -> "$r1 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1133562283}";
"$r1 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: byte[] getData()>() {1133562283}" -> "$i2 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: int getOffset()>() {766037181}";
"$i2 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: int getOffset()>() {766037181}" -> "$i3 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: int getSize()>() {1589593663}";
"$i3 = virtualinvoke paramData.<com.sleepycat.je.DatabaseEntry: int getSize()>() {1589593663}" -> "buf = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) {1779764714}";
"buf = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) {1779764714}" -> "$r2 = new com.sleepycat.je.DatabaseEntry {1312759849}";
"$r2 = new com.sleepycat.je.DatabaseEntry {1312759849}" -> "specialinvoke $r2.<com.sleepycat.je.DatabaseEntry: void <init>(byte[])>(buf) {1281757795}";
"specialinvoke $r2.<com.sleepycat.je.DatabaseEntry: void <init>(byte[])>(buf) {1281757795}" -> "return $r2 {2079284654}";
}

digraph combine {
"key := @parameter0: byte[] {71839781}" -> "data := @parameter1: byte[] {36849274}";
"data := @parameter1: byte[] {36849274}" -> "$i0 = lengthof key {1902947117}";
"$i0 = lengthof key {1902947117}" -> "$i1 = lengthof data {1848760249}";
"$i1 = lengthof data {1848760249}" -> "$r0 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(key, 0, $i0, data, 0, $i1) {1403168263}";
"$r0 = staticinvoke <com.sleepycat.je.dbi.DupKeyData: byte[] combine(byte[],int,int,byte[],int,int)>(key, 0, $i0, data, 0, $i1) {1403168263}" -> "return $r0 {1746213502}";
}

digraph getData {
"buf := @parameter0: byte[] {1517379844}" -> "off := @parameter1: int {714913819}";
"off := @parameter1: int {714913819}" -> "len := @parameter2: int {1044748241}";
"len := @parameter2: int {1044748241}" -> "$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {665469729}";
"$z0 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {665469729}" -> "if $z0 != 0 goto $i2 = off + len {634831831}";
"if $z0 != 0 goto $i2 = off + len {634831831}" -> "$i0 = lengthof buf {347575427}";
"if $z0 != 0 goto $i2 = off + len {634831831}" -> "$i2 = off + len {50330119}";
"$i0 = lengthof buf {347575427}" -> "$i1 = off + len {2115356881}";
"$i1 = off + len {2115356881}" -> "if $i0 >= $i1 goto $i2 = off + len {1511312343}";
"if $i0 >= $i1 goto $i2 = off + len {1511312343}" -> "$r0 = new java.lang.AssertionError {1349120355}";
"if $i0 >= $i1 goto $i2 = off + len {1511312343}" -> "$i2 = off + len {50330119}";
"$r0 = new java.lang.AssertionError {1349120355}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2124190701}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {2124190701}" -> "throw $r0 {44742042}";
"$i2 = off + len {50330119}" -> "$i3 = $i2 - 1 {1454142819}";
"$i3 = $i2 - 1 {1454142819}" -> "keyLen = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {2049795557}";
"keyLen = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(buf, $i3) {2049795557}" -> "$z1 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1327435950}";
"$z1 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1327435950}" -> "if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1897665773}";
"if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1897665773}" -> "if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {50338043}";
"if $z1 != 0 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1897665773}" -> "$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1580754930}";
"if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {50338043}" -> "$r1 = new java.lang.AssertionError {313188106}";
"if keyLen != -1 goto $z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {50338043}" -> "$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1580754930}";
"$r1 = new java.lang.AssertionError {313188106}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {434814260}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {434814260}" -> "throw $r1 {439269682}";
"$z2 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1580754930}" -> "if $z2 != 0 goto $i4 = off + len {1380253027}";
"if $z2 != 0 goto $i4 = off + len {1380253027}" -> "if keyLen < 0 goto $r2 = new java.lang.AssertionError {1904420056}";
"if $z2 != 0 goto $i4 = off + len {1380253027}" -> "$i4 = off + len {2059298418}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {1904420056}" -> "if keyLen <= len goto $i4 = off + len {1480700971}";
"if keyLen < 0 goto $r2 = new java.lang.AssertionError {1904420056}" -> "$r2 = new java.lang.AssertionError {806157855}";
"if keyLen <= len goto $i4 = off + len {1480700971}" -> "$r2 = new java.lang.AssertionError {806157855}";
"if keyLen <= len goto $i4 = off + len {1480700971}" -> "$i4 = off + len {2059298418}";
"$r2 = new java.lang.AssertionError {806157855}" -> "specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {390719272}";
"specialinvoke $r2.<java.lang.AssertionError: void <init>()>() {390719272}" -> "throw $r2 {1123875078}";
"$i4 = off + len {2059298418}" -> "$i5 = $i4 - 1 {1788720341}";
"$i5 = $i4 - 1 {1788720341}" -> "keyLenSize = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, $i5) {1691767899}";
"keyLenSize = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(buf, $i5) {1691767899}" -> "$i6 = len - keyLen {1238447744}";
"$i6 = len - keyLen {1238447744}" -> "dataLen = $i6 - keyLenSize {740234796}";
"dataLen = $i6 - keyLenSize {740234796}" -> "$z3 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {760636541}";
"$z3 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {760636541}" -> "if $z3 != 0 goto $z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {166606010}";
"if $z3 != 0 goto $z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {166606010}" -> "if dataLen > 0 goto $z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1666195845}";
"if $z3 != 0 goto $z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {166606010}" -> "$z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {608042658}";
"if dataLen > 0 goto $z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1666195845}" -> "$r3 = new java.lang.AssertionError {2101068830}";
"if dataLen > 0 goto $z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {1666195845}" -> "$z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {608042658}";
"$r3 = new java.lang.AssertionError {2101068830}" -> "specialinvoke $r3.<java.lang.AssertionError: void <init>()>() {1698400323}";
"specialinvoke $r3.<java.lang.AssertionError: void <init>()>() {1698400323}" -> "throw $r3 {117821800}";
"$z4 = <com.sleepycat.je.dbi.DupKeyData: boolean $assertionsDisabled> {608042658}" -> "if $z4 != 0 goto data = newarray (byte)[dataLen] {1649711502}";
"if $z4 != 0 goto data = newarray (byte)[dataLen] {1649711502}" -> "$i7 = keyLen + dataLen {959463574}";
"if $z4 != 0 goto data = newarray (byte)[dataLen] {1649711502}" -> "data = newarray (byte)[dataLen] {1845021505}";
"$i7 = keyLen + dataLen {959463574}" -> "if $i7 <= len goto data = newarray (byte)[dataLen] {123902441}";
"if $i7 <= len goto data = newarray (byte)[dataLen] {123902441}" -> "$r4 = new java.lang.AssertionError {1862067713}";
"if $i7 <= len goto data = newarray (byte)[dataLen] {123902441}" -> "data = newarray (byte)[dataLen] {1845021505}";
"$r4 = new java.lang.AssertionError {1862067713}" -> "specialinvoke $r4.<java.lang.AssertionError: void <init>()>() {1529176911}";
"specialinvoke $r4.<java.lang.AssertionError: void <init>()>() {1529176911}" -> "throw $r4 {1209730067}";
"data = newarray (byte)[dataLen] {1845021505}" -> "$i8 = off + keyLen {2139732950}";
"$i8 = off + keyLen {2139732950}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, $i8, data, 0, dataLen) {908542695}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(buf, $i8, data, 0, dataLen) {908542695}" -> "return data {784705952}";
}


