    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r1, $r2, $r3;
        com.sleepycat.je.log.FileManager$1 $r4;
        com.sleepycat.je.log.FileManager$2 $r5;
        java.lang.String $r6, $r7;
        com.sleepycat.je.log.FileManager$6 $r8;

        $r0 = class "com/sleepycat/je/log/FileManager";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.log.FileManager: boolean $assertionsDisabled> = $z1;

        <com.sleepycat.je.log.FileManager: long WRITE_COUNT> = 0L;

        <com.sleepycat.je.log.FileManager: long STOP_ON_WRITE_COUNT> = 9223372036854775807L;

        <com.sleepycat.je.log.FileManager: long N_BAD_WRITES> = 9223372036854775807L;

        <com.sleepycat.je.log.FileManager: boolean THROW_ON_WRITE> = 0;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = ".del";

        <com.sleepycat.je.log.FileManager: java.lang.String[] DEL_SUFFIXES> = $r1;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = ".jdb";

        <com.sleepycat.je.log.FileManager: java.lang.String[] JE_SUFFIXES> = $r2;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = ".jdb";

        $r3[1] = ".del";

        <com.sleepycat.je.log.FileManager: java.lang.String[] JE_AND_DEL_SUFFIXES> = $r3;

        $r4 = new com.sleepycat.je.log.FileManager$1;

        specialinvoke $r4.<com.sleepycat.je.log.FileManager$1: void <init>()>();

        <com.sleepycat.je.log.FileManager: java.util.Comparator fileComparator> = $r4;

        $r5 = new com.sleepycat.je.log.FileManager$2;

        specialinvoke $r5.<com.sleepycat.je.log.FileManager$2: void <init>()>();

        <com.sleepycat.je.log.FileManager: java.util.Comparator stringComparator> = $r5;

        <com.sleepycat.je.log.FileManager: java.lang.String RRET_PROPERTY_NAME> = "je.logwrite.exception.testing";

        $r6 = <com.sleepycat.je.log.FileManager: java.lang.String RRET_PROPERTY_NAME>;

        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7);

        if $r7 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        <com.sleepycat.je.log.FileManager: boolean LOGWRITE_EXCEPTION_TESTING> = $z2;

        $r8 = new com.sleepycat.je.log.FileManager$6;

        specialinvoke $r8.<com.sleepycat.je.log.FileManager$6: void <init>()>();

        <com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileFactory fileFactory> = $r8;

        return;
    }

    public void <init>(com.sleepycat.je.dbi.EnvironmentImpl, java.io.File, boolean) throws com.sleepycat.je.EnvironmentLockedException
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.io.File dbEnvHome;
        boolean readOnly, isReadOnly, success#25, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, success#292;
        com.sleepycat.je.dbi.DbConfigManager configManager;
        java.lang.String stopOnWriteCountName, stopOnWriteCountProp, stopOnWriteActionName, stopOnWriteActionProp, $r71, $r77, $r80, $r91;
        java.lang.NumberFormatException e, $r85;
        java.lang.Boolean logFileDeleteDetect;
        java.io.IOException l5, l12, $r95, $r97;
        java.lang.Throwable l11, $r96;
        com.sleepycat.je.utilint.StatGroup $r0, $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56;
        com.sleepycat.je.utilint.LongStat $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52;
        com.sleepycat.je.utilint.StatDefinition $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57;
        com.sleepycat.je.utilint.IntStat $r25, $r28;
        com.sleepycat.je.utilint.LongMaxZeroStat $r55;
        com.sleepycat.je.config.LongConfigParam $r58;
        long $l0, $l5, $l7, $l8;
        com.sleepycat.je.config.BooleanConfigParam $r59, $r61, $r62, $r92;
        com.sleepycat.je.config.IntConfigParam $r60, $r64;
        int $i1, $i2, $i3, $i4, $i6, $i9, $i10;
        com.sleepycat.je.config.DurationConfigParam $r63;
        java.io.File[] $r65, $r94;
        java.lang.IllegalArgumentException $r66, $r86, $r87;
        java.lang.StringBuilder $r67, $r68, $r69, $r70, $r75, $r76, $r78, $r79, $r88, $r89, $r90;
        com.sleepycat.je.EnvironmentLockedException $r72;
        com.sleepycat.je.log.FileManager$FileCache $r81;
        java.util.HashMap $r82;
        java.util.Map $r83;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r84;
        com.sleepycat.je.log.FileDeletionDetector $r93;

        this := @this: com.sleepycat.je.log.FileManager;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        dbEnvHome := @parameter1: java.io.File;

        readOnly := @parameter2: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.log.FileManager: boolean syncAtFileEnd> = 1;

        this.<com.sleepycat.je.log.FileManager: boolean includeDeletedFiles> = 0;

        this.<com.sleepycat.je.log.FileManager: boolean VERIFY_CHECKSUMS> = 0;

        this.<com.sleepycat.je.log.FileManager: long lastFileNumberTouched> = -1L;

        this.<com.sleepycat.je.log.FileManager: long lastFileTouchedOffset> = 0L;

        this.<com.sleepycat.je.log.FileManager: int logWriteExceptionCounter> = 0;

        this.<com.sleepycat.je.log.FileManager: boolean logWriteExceptionThrown> = 0;

        this.<com.sleepycat.je.log.FileManager: java.util.Random logWriteExceptionRandom> = null;

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome> = dbEnvHome;

        this.<com.sleepycat.je.log.FileManager: boolean readOnly> = readOnly;

        success#25 = 0;

        $r0 = new com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r0.<com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("FileManager", "FileManager statistics");

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats> = $r0;

        $r1 = new com.sleepycat.je.utilint.LongStat;

        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r3 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_RANDOM_READS>;

        specialinvoke $r1.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r2, $r3);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomReads> = $r1;

        $r4 = new com.sleepycat.je.utilint.LongStat;

        $r5 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r6 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_RANDOM_WRITES>;

        specialinvoke $r4.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r5, $r6);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomWrites> = $r4;

        $r7 = new com.sleepycat.je.utilint.LongStat;

        $r8 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r9 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_SEQUENTIAL_READS>;

        specialinvoke $r7.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r8, $r9);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialReads> = $r7;

        $r10 = new com.sleepycat.je.utilint.LongStat;

        $r11 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r12 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_SEQUENTIAL_WRITES>;

        specialinvoke $r10.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r11, $r12);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialWrites> = $r10;

        $r13 = new com.sleepycat.je.utilint.LongStat;

        $r14 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r15 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_RANDOM_READ_BYTES>;

        specialinvoke $r13.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r14, $r15);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomReadBytes> = $r13;

        $r16 = new com.sleepycat.je.utilint.LongStat;

        $r17 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r18 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_RANDOM_WRITE_BYTES>;

        specialinvoke $r16.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r17, $r18);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomWriteBytes> = $r16;

        $r19 = new com.sleepycat.je.utilint.LongStat;

        $r20 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r21 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_SEQUENTIAL_READ_BYTES>;

        specialinvoke $r19.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r20, $r21);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialReadBytes> = $r19;

        $r22 = new com.sleepycat.je.utilint.LongStat;

        $r23 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r24 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_SEQUENTIAL_WRITE_BYTES>;

        specialinvoke $r22.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r23, $r24);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialWriteBytes> = $r22;

        $r25 = new com.sleepycat.je.utilint.IntStat;

        $r26 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r27 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_FILE_OPENS>;

        specialinvoke $r25.<com.sleepycat.je.utilint.IntStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r26, $r27);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.IntStat nFileOpens> = $r25;

        $r28 = new com.sleepycat.je.utilint.IntStat;

        $r29 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r30 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_OPEN_FILES>;

        specialinvoke $r28.<com.sleepycat.je.utilint.IntStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r29, $r30);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.IntStat nOpenFiles> = $r28;

        $r31 = new com.sleepycat.je.utilint.LongStat;

        $r32 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r33 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_BYTES_READ_FROM_WRITEQUEUE>;

        specialinvoke $r31.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r32, $r33);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nBytesReadFromWriteQueue> = $r31;

        $r34 = new com.sleepycat.je.utilint.LongStat;

        $r35 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r36 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_BYTES_WRITTEN_FROM_WRITEQUEUE>;

        specialinvoke $r34.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r35, $r36);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nBytesWrittenFromWriteQueue> = $r34;

        $r37 = new com.sleepycat.je.utilint.LongStat;

        $r38 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r39 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_READS_FROM_WRITEQUEUE>;

        specialinvoke $r37.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r38, $r39);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nReadsFromWriteQueue> = $r37;

        $r40 = new com.sleepycat.je.utilint.LongStat;

        $r41 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r42 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_WRITES_FROM_WRITEQUEUE>;

        specialinvoke $r40.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r41, $r42);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nWritesFromWriteQueue> = $r40;

        $r43 = new com.sleepycat.je.utilint.LongStat;

        $r44 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r45 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_WRITEQUEUE_OVERFLOW>;

        specialinvoke $r43.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r44, $r45);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nWriteQueueOverflow> = $r43;

        $r46 = new com.sleepycat.je.utilint.LongStat;

        $r47 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r48 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_WRITEQUEUE_OVERFLOW_FAILURES>;

        specialinvoke $r46.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r47, $r48);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nWriteQueueOverflowFailures> = $r46;

        $r49 = new com.sleepycat.je.utilint.LongStat;

        $r50 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r51 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition FILEMGR_LOG_FSYNCS>;

        specialinvoke $r49.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r50, $r51);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nLogFSyncs> = $r49;

        $r52 = new com.sleepycat.je.utilint.LongStat;

        $r53 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r54 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition GRPCMGR_FSYNC_TIME>;

        specialinvoke $r52.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r53, $r54);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nFSyncTime> = $r52;

        $r55 = new com.sleepycat.je.utilint.LongMaxZeroStat;

        $r56 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $r57 = <com.sleepycat.je.log.LogStatDefinition: com.sleepycat.je.utilint.StatDefinition GRPCMGR_FSYNC_MAX_TIME>;

        specialinvoke $r55.<com.sleepycat.je.utilint.LongMaxZeroStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r56, $r57);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongMaxZeroStat nFSyncMaxTime> = $r55;

     label01:
        configManager = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r58 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.LongConfigParam LOG_FILE_MAX>;

        $l0 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: long getLong(com.sleepycat.je.config.LongConfigParam)>($r58);

        this.<com.sleepycat.je.log.FileManager: long maxFileSize> = $l0;

        $r59 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam LOG_USE_WRITE_QUEUE>;

        $z0 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r59);

        this.<com.sleepycat.je.log.FileManager: boolean useWriteQueue> = $z0;

        $r60 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_WRITE_QUEUE_SIZE>;

        $i1 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r60);

        this.<com.sleepycat.je.log.FileManager: int writeQueueSize> = $i1;

        $r61 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam LOG_USE_ODSYNC>;

        $z1 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r61);

        this.<com.sleepycat.je.log.FileManager: boolean useODSYNC> = $z1;

        $r62 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam LOG_VERIFY_CHECKSUMS>;

        $z2 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r62);

        this.<com.sleepycat.je.log.FileManager: boolean VERIFY_CHECKSUMS> = $z2;

        $r63 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam LOG_FSYNC_TIME_LIMIT>;

        $i2 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r63);

        this.<com.sleepycat.je.log.FileManager: int fSyncTimeLimit> = $i2;

        $r64 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_N_DATA_DIRECTORIES>;

        $i3 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r64);

        this.<com.sleepycat.je.log.FileManager: int nDataDirs> = $i3;

        $i4 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 == 0 goto label02;

        $r65 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.io.File[] gatherDataDirs()>();

        this.<com.sleepycat.je.log.FileManager: java.io.File[] dbEnvDataDirs> = $r65;

        goto label03;

     label02:
        specialinvoke this.<com.sleepycat.je.log.FileManager: void checkNoDataDirs()>();

        this.<com.sleepycat.je.log.FileManager: java.io.File[] dbEnvDataDirs> = null;

     label03:
        $z3 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label09;

        $z4 = virtualinvoke dbEnvHome.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label04;

        $r66 = new java.lang.IllegalArgumentException;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Environment home ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dbEnvHome);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r71);

        throw $r66;

     label04:
        $z5 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isArbiter()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label05;

        $z6 = 0;

        goto label06;

     label05:
        $z6 = readOnly;

     label06:
        isReadOnly = $z6;

        $z7 = virtualinvoke this.<com.sleepycat.je.log.FileManager: boolean lockEnvironment(boolean,boolean)>(isReadOnly, 0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label09;

        $r72 = new com.sleepycat.je.EnvironmentLockedException;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The environment cannot be locked for ");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isReadOnly);

        if isReadOnly == 0 goto label07;

        $r77 = "shared";

        goto label08;

     label07:
        $r77 = "single writer";

     label08:
        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" access.");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r72.<com.sleepycat.je.EnvironmentLockedException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(envImpl, $r80);

        throw $r72;

     label09:
        $r81 = new com.sleepycat.je.log.FileManager$FileCache;

        specialinvoke $r81.<com.sleepycat.je.log.FileManager$FileCache: void <init>(com.sleepycat.je.dbi.DbConfigManager)>(configManager);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache> = $r81;

        this.<com.sleepycat.je.log.FileManager: long currentFileNum> = 0L;

        $l5 = this.<com.sleepycat.je.log.FileManager: long currentFileNum>;

        $i6 = staticinvoke <com.sleepycat.je.log.FileManager: int firstLogEntryOffset()>();

        $l7 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long makeLsn(long,int)>($l5, $i6);

        this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn> = $l7;

        this.<com.sleepycat.je.log.FileManager: long lastUsedLsn> = -1L;

        $r82 = new java.util.HashMap;

        specialinvoke $r82.<java.util.HashMap: void <init>()>();

        $r83 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r82);

        this.<com.sleepycat.je.log.FileManager: java.util.Map perFileLastUsedLsn> = $r83;

        this.<com.sleepycat.je.log.FileManager: long prevOffset> = 0L;

        $r84 = new com.sleepycat.je.log.FileManager$LogEndFileDescriptor;

        specialinvoke $r84.<com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void <init>(com.sleepycat.je.log.FileManager)>(this);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog> = $r84;

        this.<com.sleepycat.je.log.FileManager: boolean forceNewFile> = 0;

        stopOnWriteCountName = "je.debug.stopOnWriteCount";

        stopOnWriteCountProp = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("je.debug.stopOnWriteCount");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stopOnWriteCountProp);

        if stopOnWriteCountProp == null goto label13;

     label10:
        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(stopOnWriteCountProp);

        <com.sleepycat.je.log.FileManager: long STOP_ON_WRITE_COUNT> = $l8;

     label11:
        goto label13;

     label12:
        $r85 := @caughtexception;

        e = $r85;

        $r86 = new java.lang.IllegalArgumentException;

        specialinvoke $r86.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Could not parse: je.debug.stopOnWriteCount", e);

        throw $r86;

     label13:
        stopOnWriteActionName = "je.debug.stopOnWriteAction";

        stopOnWriteActionProp = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("je.debug.stopOnWriteAction");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(stopOnWriteActionProp);

        if stopOnWriteActionProp == null goto label16;

        $i9 = virtualinvoke stopOnWriteActionProp.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("throw");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        if $i9 != 0 goto label14;

        <com.sleepycat.je.log.FileManager: boolean THROW_ON_WRITE> = 1;

        goto label16;

     label14:
        $i10 = virtualinvoke stopOnWriteActionProp.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("stop");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        if $i10 != 0 goto label15;

        <com.sleepycat.je.log.FileManager: boolean THROW_ON_WRITE> = 0;

        goto label16;

     label15:
        $r87 = new java.lang.IllegalArgumentException;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown value for: je.debug.stopOnWriteAction");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(stopOnWriteActionProp);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r87.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r91);

        throw $r87;

     label16:
        $r92 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam LOG_DETECT_FILE_DELETE>;

        $z8 = virtualinvoke configManager.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r92);

        logFileDeleteDetect = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $z9 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 != 0 goto label17;

        $z10 = virtualinvoke logFileDeleteDetect.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label17;

        $r93 = new com.sleepycat.je.log.FileDeletionDetector;

        $r94 = this.<com.sleepycat.je.log.FileManager: java.io.File[] dbEnvDataDirs>;

        specialinvoke $r93.<com.sleepycat.je.log.FileDeletionDetector: void <init>(java.io.File,java.io.File[],com.sleepycat.je.dbi.EnvironmentImpl)>(dbEnvHome, $r94, envImpl);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd> = $r93;

        goto label18;

     label17:
        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd> = null;

     label18:
        success#292 = 1;

     label19:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#292);

        if success#292 != 0 goto label30;

     label20:
        virtualinvoke this.<com.sleepycat.je.log.FileManager: void close()>();

     label21:
        goto label30;

     label22:
        $r95 := @caughtexception;

        l5 = $r95;

        goto label30;

     label23:
        $r96 := @caughtexception;

     label24:
        l11 = $r96;

     label25:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#25);

        if success#25 != 0 goto label29;

     label26:
        virtualinvoke this.<com.sleepycat.je.log.FileManager: void close()>();

     label27:
        goto label29;

     label28:
        $r97 := @caughtexception;

        l12 = $r97;

     label29:
        throw l11;

     label30:
        return;

        catch java.lang.NumberFormatException from label10 to label11 with label12;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label01 to label19 with label23;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public static int firstLogEntryOffset()
    {
        int $i0, $i1;

        $i0 = staticinvoke <com.sleepycat.je.log.FileHeader: int entrySize()>();

        $i1 = $i0 + 14;

        return $i1;
    }

    static int access$1100(com.sleepycat.je.log.FileManager)
    {
        com.sleepycat.je.log.FileManager x0;
        int $i0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        $i0 = x0.<com.sleepycat.je.log.FileManager: int writeQueueSize>;

        return $i0;
    }

    static boolean access$1000(com.sleepycat.je.log.FileManager)
    {
        com.sleepycat.je.log.FileManager x0;
        boolean $z0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        $z0 = x0.<com.sleepycat.je.log.FileManager: boolean useWriteQueue>;

        return $z0;
    }

    public java.io.File[] gatherDataDirs()
    {
        com.sleepycat.je.log.FileManager this;
        java.io.File[] dataDirs;
        java.lang.String[] l4, dataDirNames#7;
        int l5, subdirNum, $i0, $i1, $i2, $i3, ddNum#36, $i4, l6#44, $i5;
        java.lang.String fn, subdirNumStr, $r4, $r11, $r15, $r20, $r28, $r34, $r40;
        java.io.File dataDir, $r0, $r22, $r23;
        java.lang.NumberFormatException E, $r36;
        com.sleepycat.je.log.FileManager$4 $r1;
        java.lang.StringBuilder $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r16, $r17, $r18, $r19, $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r33, $r37, $r38, $r39;
        com.sleepycat.je.config.IntConfigParam $r3;
        com.sleepycat.je.EnvironmentFailureException $r12, $r21, $r29, $r35, $r41;
        boolean $z0, $z1;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        $r1 = new com.sleepycat.je.log.FileManager$4;

        specialinvoke $r1.<com.sleepycat.je.log.FileManager$4: void <init>(com.sleepycat.je.log.FileManager)>(this);

        dataDirNames#7 = virtualinvoke $r0.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dataDirNames#7);

        if dataDirNames#7 == null goto label01;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(dataDirNames#7);

        goto label02;

     label01:
        dataDirNames#7 = newarray (java.lang.String)[0];

     label02:
        $i0 = lengthof dataDirNames#7;

        $i1 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i0 == $i1 goto label03;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_N_DATA_DIRECTORIES>;

        $r4 = virtualinvoke $r3.<com.sleepycat.je.config.IntConfigParam: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was set and expected to find ");

        $i2 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data directories, but found ");

        $i3 = lengthof dataDirNames#7;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r11);

        throw $r12;

     label03:
        ddNum#36 = 1;

        $i4 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        dataDirs = newarray (java.io.File)[$i4];

        l4 = dataDirNames#7;

        l5 = lengthof l4;

        l6#44 = 0;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#44);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l5);

        if l6#44 >= l5 goto label12;

        fn = l4[l6#44];

        subdirNumStr = virtualinvoke fn.<java.lang.String: java.lang.String substring(int)>(4);

     label05:
        subdirNum = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(subdirNumStr);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subdirNum);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(ddNum#36);

        if subdirNum == ddNum#36 goto label06;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected to find data subdir: data");

        $r15 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String paddedDirNum(int)>(ddNum#36);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found data");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(subdirNumStr);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r20);

        throw $r21;

     label06:
        $r22 = new java.io.File;

        $r23 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, fn);

        dataDir = $r22;

        $z0 = virtualinvoke dataDir.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label07;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data dir: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dataDir);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist.");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r28);

        throw $r29;

     label07:
        $z1 = virtualinvoke dataDir.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label08;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data dir: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dataDir);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r34);

        throw $r35;

     label08:
        $i5 = ddNum#36 - 1;

        dataDirs[$i5] = dataDir;

     label09:
        goto label11;

     label10:
        $r36 := @caughtexception;

        E = $r36;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal data subdir: data");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(subdirNumStr);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r40);

        throw $r41;

     label11:
        ddNum#36 = ddNum#36 + 1;

        l6#44 = l6#44 + 1;

        goto label04;

     label12:
        return dataDirs;

        catch java.lang.NumberFormatException from label05 to label09 with label10;
    }

    private void checkNoDataDirs()
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String[] dataDirNames;
        java.io.File $r0;
        com.sleepycat.je.log.FileManager$3 $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r5, $r6, $r7, $r8;
        com.sleepycat.je.config.IntConfigParam $r3;
        java.lang.String $r4, $r9;
        com.sleepycat.je.EnvironmentFailureException $r10;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        $r1 = new com.sleepycat.je.log.FileManager$3;

        specialinvoke $r1.<com.sleepycat.je.log.FileManager$3: void <init>(com.sleepycat.je.log.FileManager)>(this);

        dataDirNames = virtualinvoke $r0.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dataDirNames);

        if dataDirNames == null goto label1;

        $i0 = lengthof dataDirNames;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_N_DATA_DIRECTORIES>;

        $r4 = virtualinvoke $r3.<com.sleepycat.je.config.IntConfigParam: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not set and expected to find no data directories, but found ");

        $i1 = lengthof dataDirNames;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data directories instead.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r9);

        throw $r10;

     label1:
        return;
    }

    public boolean lockEnvironment(boolean, boolean)
    {
        com.sleepycat.je.log.FileManager this;
        boolean rdOnly, exclusive, $z0;
        java.io.RandomAccessFile $r0, $r1, $r6;
        java.io.File $r2, $r3;
        com.sleepycat.je.log.FileManager$FileMode $r4;
        java.lang.String $r5;
        java.nio.channels.FileChannel $r7, $r8, $r11, $r13;
        java.nio.channels.FileLock $r9, $r10, $r12, $r14, $r15;
        java.lang.Throwable $r16, e#53, $r17, e#56;
        com.sleepycat.je.EnvironmentFailureException $r18;
        com.sleepycat.je.dbi.EnvironmentImpl $r19;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r20;

        this := @this: com.sleepycat.je.log.FileManager;

        rdOnly := @parameter0: boolean;

        exclusive := @parameter1: boolean;

     label01:
        $z0 = virtualinvoke this.<com.sleepycat.je.log.FileManager: boolean checkEnvHomePermissions(boolean)>(rdOnly);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

     label02:
        return 1;

     label03:
        $r0 = this.<com.sleepycat.je.log.FileManager: java.io.RandomAccessFile lockFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label04;

        $r1 = new java.io.RandomAccessFile;

        $r2 = new java.io.File;

        $r3 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "je.lck");

        $r4 = <com.sleepycat.je.log.FileManager$FileMode: com.sleepycat.je.log.FileManager$FileMode READWRITE_MODE>;

        $r5 = virtualinvoke $r4.<com.sleepycat.je.log.FileManager$FileMode: java.lang.String getModeValue()>();

        specialinvoke $r1.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r2, $r5);

        this.<com.sleepycat.je.log.FileManager: java.io.RandomAccessFile lockFile> = $r1;

     label04:
        $r6 = this.<com.sleepycat.je.log.FileManager: java.io.RandomAccessFile lockFile>;

        $r7 = virtualinvoke $r6.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel> = $r7;

     label05:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(exclusive);

        if exclusive == 0 goto label08;

        $r8 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel>;

        $r9 = virtualinvoke $r8.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock(long,long,boolean)>(1L, 1L, 0);

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock> = $r9;

        $r10 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 != null goto label07;

     label06:
        return 0;

     label07:
        return 1;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rdOnly);

        if rdOnly == 0 goto label09;

        $r11 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel>;

        $r12 = virtualinvoke $r11.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock(long,long,boolean)>(1L, 1L, 1);

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock envLock> = $r12;

        goto label10;

     label09:
        $r13 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel>;

        $r14 = virtualinvoke $r13.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock(long,long,boolean)>(0L, 1L, 0);

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock envLock> = $r14;

     label10:
        $r15 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock envLock>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r15);

        if $r15 != null goto label12;

     label11:
        return 0;

     label12:
        return 1;

     label13:
        $r16 := @caughtexception;

     label14:
        e#53 = $r16;

     label15:
        return 0;

     label16:
        $r17 := @caughtexception;

        e#56 = $r17;

        $r18 = new com.sleepycat.je.EnvironmentFailureException;

        $r19 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r20 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        specialinvoke $r18.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r19, $r20, e#56);

        throw $r18;

        catch java.nio.channels.OverlappingFileLockException from label05 to label06 with label13;
        catch java.nio.channels.OverlappingFileLockException from label08 to label11 with label13;
        catch java.io.IOException from label01 to label02 with label16;
        catch java.io.IOException from label03 to label06 with label16;
        catch java.io.IOException from label08 to label11 with label16;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public void close() throws java.io.IOException
    {
        com.sleepycat.je.log.FileManager this;
        java.nio.channels.FileLock $r0, $r1, $r2, $r3;
        java.nio.channels.FileChannel $r4, $r5;
        java.io.RandomAccessFile $r6, $r7;
        com.sleepycat.je.log.FileDeletionDetector $r8, $r9;

        this := @this: com.sleepycat.je.log.FileManager;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void stopFileCacheWarmer()>();

        $r0 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock envLock>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock envLock>;

        virtualinvoke $r1.<java.nio.channels.FileLock: void release()>();

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock envLock> = null;

     label1:
        $r2 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 == null goto label2;

        $r3 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock>;

        virtualinvoke $r3.<java.nio.channels.FileLock: void release()>();

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock> = null;

     label2:
        $r4 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r4 == null goto label3;

        $r5 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel>;

        virtualinvoke $r5.<java.nio.channels.FileChannel: void close()>();

        this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileChannel channel> = null;

     label3:
        $r6 = this.<com.sleepycat.je.log.FileManager: java.io.RandomAccessFile lockFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r6 == null goto label4;

        $r7 = this.<com.sleepycat.je.log.FileManager: java.io.RandomAccessFile lockFile>;

        virtualinvoke $r7.<java.io.RandomAccessFile: void close()>();

        this.<com.sleepycat.je.log.FileManager: java.io.RandomAccessFile lockFile> = null;

     label4:
        $r8 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8);

        if $r8 == null goto label5;

        $r9 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd>;

        virtualinvoke $r9.<com.sleepycat.je.log.FileDeletionDetector: void close()>();

     label5:
        return;
    }

    private void stopFileCacheWarmer()
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.FileCacheWarmer fcw;

        this := @this: com.sleepycat.je.log.FileManager;

        fcw = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileCacheWarmer fileCacheWarmer>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fcw);

        if fcw != null goto label1;

        return;

     label1:
        virtualinvoke fcw.<com.sleepycat.je.log.FileCacheWarmer: void shutdown()>();

        virtualinvoke this.<com.sleepycat.je.log.FileManager: void clearFileCacheWarmer()>();

        return;
    }

    void clearFileCacheWarmer()
    {
        com.sleepycat.je.log.FileManager this;

        this := @this: com.sleepycat.je.log.FileManager;

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileCacheWarmer fileCacheWarmer> = null;

        return;
    }

    public boolean checkEnvHomePermissions(boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        boolean rdOnly, $z0, $z1;
        int $i0;
        java.io.File $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        rdOnly := @parameter0: boolean;

        $i0 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        $z0 = specialinvoke this.<com.sleepycat.je.log.FileManager: boolean checkEnvHomePermissionsSingleEnvDir(java.io.File,boolean)>($r0, rdOnly);

        return $z0;

     label1:
        $z1 = specialinvoke this.<com.sleepycat.je.log.FileManager: boolean checkEnvHomePermissionsMultiEnvDir(boolean)>(rdOnly);

        return $z1;
    }

    private boolean checkEnvHomePermissionsSingleEnvDir(java.io.File, boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.File dbEnvHome;
        boolean rdOnly, envDirIsReadOnly, $z0, $z1;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        this := @this: com.sleepycat.je.log.FileManager;

        dbEnvHome := @parameter0: java.io.File;

        rdOnly := @parameter1: boolean;

        $z0 = virtualinvoke dbEnvHome.<java.io.File: boolean canWrite()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        envDirIsReadOnly = $z1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(envDirIsReadOnly);

        if envDirIsReadOnly == 0 goto label3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rdOnly);

        if rdOnly != 0 goto label3;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Environment directory ");

        $r3 = virtualinvoke dbEnvHome.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not writable, but the Environment was opened for read-write access.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label3:
        return envDirIsReadOnly;
    }

    private boolean checkEnvHomePermissionsMultiEnvDir(boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        boolean rdOnly, $z0;
        java.io.File[] l2;
        int l3, l4#6;
        java.io.File dbEnvDir;

        this := @this: com.sleepycat.je.log.FileManager;

        rdOnly := @parameter0: boolean;

        l2 = this.<com.sleepycat.je.log.FileManager: java.io.File[] dbEnvDataDirs>;

        l3 = lengthof l2;

        l4#6 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        if l4#6 >= l3 goto label3;

        dbEnvDir = l2[l4#6];

        $z0 = specialinvoke this.<com.sleepycat.je.log.FileManager: boolean checkEnvHomePermissionsSingleEnvDir(java.io.File,boolean)>(dbEnvDir, rdOnly);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        l4#6 = l4#6 + 1;

        goto label1;

     label3:
        return 1;
    }

    private java.lang.String paddedDirNum(int)
    {
        com.sleepycat.je.log.FileManager this;
        int dirNum, len, $i0;
        java.lang.String paddedStr, $r3;
        java.lang.StringBuilder $r0, $r1, $r2;

        this := @this: com.sleepycat.je.log.FileManager;

        dirNum := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("000");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(dirNum);

        paddedStr = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        len = virtualinvoke paddedStr.<java.lang.String: int length()>();

        $i0 = len - 3;

        $r3 = virtualinvoke paddedStr.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r3;
    }

    public void clear() throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.FileManager$FileCache l1, $r0, $r1;
        java.lang.Throwable l2, $r2;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r3;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        staticinvoke <com.sleepycat.je.log.FileManager$FileCache: void access$600(com.sleepycat.je.log.FileManager$FileCache)>($r1);

        exitmonitor l1;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        l2 = $r2;

        exitmonitor l1;

     label5:
        throw l2;

     label6:
        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        virtualinvoke $r3.<com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void close()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean filesExist()
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String[] $r0, names;
        int $i0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_SUFFIXES>;

        names = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNames(java.lang.String[])>($r0);

        $i0 = lengthof names;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.lang.String[] listFileNames(java.lang.String[])
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String[] suffixes, $r1;
        com.sleepycat.je.log.JEFileFilter fileFilter, $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        suffixes := @parameter0: java.lang.String[];

        $r0 = new com.sleepycat.je.log.JEFileFilter;

        specialinvoke $r0.<com.sleepycat.je.log.JEFileFilter: void <init>(java.lang.String[])>(suffixes);

        fileFilter = $r0;

        $r1 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNamesInternal(com.sleepycat.je.log.JEFileFilter)>(fileFilter);

        return $r1;
    }

    private java.lang.String[] listFileNamesInternal(com.sleepycat.je.log.JEFileFilter)
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.JEFileFilter fileFilter;
        int $i0;
        java.lang.String[] $r0, $r1;

        this := @this: com.sleepycat.je.log.FileManager;

        fileFilter := @parameter0: com.sleepycat.je.log.JEFileFilter;

        $i0 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        $r0 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNamesInternalSingleDir(com.sleepycat.je.log.JEFileFilter)>(fileFilter);

        return $r0;

     label1:
        $r1 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNamesInternalMultiDirs(com.sleepycat.je.log.JEFileFilter)>(fileFilter);

        return $r1;
    }

    private java.lang.String[] listFileNamesInternalSingleDir(com.sleepycat.je.log.JEFileFilter)
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.JEFileFilter fileFilter;
        java.io.File $r0;
        java.lang.String[] fileNames#4;

        this := @this: com.sleepycat.je.log.FileManager;

        fileFilter := @parameter0: com.sleepycat.je.log.JEFileFilter;

        $r0 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        fileNames#4 = virtualinvoke $r0.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>(fileFilter);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fileNames#4);

        if fileNames#4 == null goto label1;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(fileNames#4);

        goto label2;

     label1:
        fileNames#4 = newarray (java.lang.String)[0];

     label2:
        return fileNames#4;
    }

    private java.lang.String[] listFileNamesInternalMultiDirs(com.sleepycat.je.log.JEFileFilter)
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.JEFileFilter filter;
        java.lang.String[][] files, l6#72;
        java.io.File[] l5;
        java.io.File envDir;
        java.lang.String envDirName, dataDirName, envFile, $r1, $r6, $r9, $r11;
        java.lang.String[] 'ret', envFiles, l10, $r0, $r2, $r3, $r8, $r12, $r13;
        int l11, $i0, nTotalFiles#5, i#7, l6#12, l7#14, $i1, $i2, j#35, $i3, $i4, i#70, l7#75, l8#77, l12#87, $i5;
        java.lang.StringBuilder $r4, $r5, $r7, $r10;
        java.util.Comparator $r14;

        this := @this: com.sleepycat.je.log.FileManager;

        filter := @parameter0: com.sleepycat.je.log.JEFileFilter;

        $i0 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        files = newarray (java.lang.String[])[$i0];

        nTotalFiles#5 = 0;

        i#7 = 0;

        l5 = this.<com.sleepycat.je.log.FileManager: java.io.File[] dbEnvDataDirs>;

        l6#12 = lengthof l5;

        l7#14 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6#12);

        if l7#14 >= l6#12 goto label4;

        envDir = l5[l7#14];

        $r0 = virtualinvoke envDir.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>(filter);

        files[i#7] = $r0;

        envDirName = virtualinvoke envDir.<java.io.File: java.lang.String toString()>();

        $r1 = <java.io.File: java.lang.String separator>;

        $i1 = virtualinvoke envDirName.<java.lang.String: int lastIndexOf(java.lang.String)>($r1);

        $i2 = $i1 + 1;

        dataDirName = virtualinvoke envDirName.<java.lang.String: java.lang.String substring(int)>($i2);

        j#35 = 0;

     label2:
        $r2 = files[i#7];

        $i3 = lengthof $r2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#35);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if j#35 >= $i3 goto label3;

        $r3 = files[i#7];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dataDirName);

        $r6 = <java.io.File: java.lang.String separator>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = files[i#7];

        $r9 = $r8[j#35];

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[j#35] = $r11;

        j#35 = j#35 + 1;

        goto label2;

     label3:
        $r12 = files[i#7];

        $i4 = lengthof $r12;

        nTotalFiles#5 = nTotalFiles#5 + $i4;

        i#7 = i#7 + 1;

        l7#14 = l7#14 + 1;

        goto label1;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nTotalFiles#5);

        if nTotalFiles#5 != 0 goto label5;

        $r13 = newarray (java.lang.String)[0];

        return $r13;

     label5:
        'ret' = newarray (java.lang.String)[nTotalFiles#5];

        i#70 = 0;

        l6#72 = files;

        l7#75 = lengthof l6#72;

        l8#77 = 0;

     label6:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#77);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#75);

        if l8#77 >= l7#75 goto label9;

        envFiles = l6#72[l8#77];

        l10 = envFiles;

        l11 = lengthof l10;

        l12#87 = 0;

     label7:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l12#87);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l11);

        if l12#87 >= l11 goto label8;

        envFile = l10[l12#87];

        $i5 = i#70;

        i#70 = i#70 + 1;

        'ret'[$i5] = envFile;

        l12#87 = l12#87 + 1;

        goto label7;

     label8:
        l8#77 = l8#77 + 1;

        goto label6;

     label9:
        $r14 = <com.sleepycat.je.log.FileManager: java.util.Comparator stringComparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>('ret', $r14);

        return 'ret';
    }

    void writeLogBuffer(com.sleepycat.je.log.LogBuffer, boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.LogBuffer fullBuffer;
        boolean flushWriteQueue, $z0, $z1, $z2, $z3, $z4, $z5;
        long firstLsn, $l1, $l2, $l3, $l5, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15;
        java.io.RandomAccessFile file;
        java.nio.ByteBuffer data;
        com.sleepycat.je.dbi.EnvironmentImpl $r0, $r1, $r17, $r20;
        byte $b0, $b4, $b8;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r2;
        int $i6;
        java.lang.AssertionError $r3, $r21;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r6, $r9, $r12, $r14;
        java.nio.channels.ClosedChannelException $r15, e#72;
        com.sleepycat.je.ThreadInterruptedException $r16;
        java.io.IOException $r18, e#79;
        com.sleepycat.je.LogWriteException $r19;

        this := @this: com.sleepycat.je.log.FileManager;

        fullBuffer := @parameter0: com.sleepycat.je.log.LogBuffer;

        flushWriteQueue := @parameter1: boolean;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: void checkIfInvalid()>();

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $z0 = virtualinvoke $r1.<com.sleepycat.je.dbi.EnvironmentImpl: boolean mayNotWrite()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        firstLsn = virtualinvoke fullBuffer.<com.sleepycat.je.log.LogBuffer: long getFirstLsn()>();

        $b0 = firstLsn cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 == 0 goto label9;

        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $l1 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(firstLsn);

        file = staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.io.RandomAccessFile access$200(com.sleepycat.je.log.FileManager$LogEndFileDescriptor,long,boolean)>($r2, $l1, 1);

        data = virtualinvoke fullBuffer.<com.sleepycat.je.log.LogBuffer: java.nio.ByteBuffer getDataBuffer()>();

     label2:
        $z1 = <com.sleepycat.je.log.FileManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke fullBuffer.<com.sleepycat.je.log.LogBuffer: boolean getRewriteAllowed()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label3;

        $l2 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(firstLsn);

        $l3 = virtualinvoke file.<java.io.RandomAccessFile: long length()>();

        $b4 = $l2 cmp $l3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 >= 0 goto label3;

        $l5 = virtualinvoke file.<java.io.RandomAccessFile: long length()>();

        $i6 = staticinvoke <com.sleepycat.je.log.FileManager: int firstLogEntryOffset()>();

        $l7 = (long) $i6;

        $b8 = $l5 cmp $l7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 == 0 goto label3;

        $r3 = new java.lang.AssertionError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileManager would overwrite non-empty file 0x");

        $l9 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(firstLsn);

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l9);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lsnOffset=0x");

        $l10 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(firstLsn);

        $r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l10);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileLength=0x");

        $l11 = virtualinvoke file.<java.io.RandomAccessFile: long length()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l11);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r3;

     label3:
        $z3 = <com.sleepycat.je.log.FileManager: boolean LOGWRITE_EXCEPTION_TESTING>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label4;

        $l12 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(firstLsn);

        $l13 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(firstLsn);

        specialinvoke this.<com.sleepycat.je.log.FileManager: void generateLogWriteException(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long)>(file, data, $l12, $l13);

     label4:
        $l14 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(firstLsn);

        $l15 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(firstLsn);

        specialinvoke this.<com.sleepycat.je.log.FileManager: int writeToFile(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long,boolean)>(file, data, $l14, $l15, flushWriteQueue);

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        e#72 = $r15;

        $r16 = new com.sleepycat.je.ThreadInterruptedException;

        $r17 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r16.<com.sleepycat.je.ThreadInterruptedException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.Throwable)>($r17, "File closed, may be due to thread interrupt", e#72);

        throw $r16;

     label7:
        $r18 := @caughtexception;

        e#79 = $r18;

        $r19 = new com.sleepycat.je.LogWriteException;

        $r20 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r19.<com.sleepycat.je.LogWriteException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Throwable)>($r20, e#79);

        throw $r19;

     label8:
        $z4 = <com.sleepycat.je.log.FileManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 != 0 goto label9;

        $z5 = staticinvoke <com.sleepycat.je.dbi.EnvironmentImpl: boolean maybeForceYield()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label9;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label9:
        return;

        catch java.nio.channels.ClosedChannelException from label2 to label5 with label6;
        catch java.io.IOException from label2 to label5 with label7;
    }

    private void generateLogWriteException(java.io.RandomAccessFile, java.nio.ByteBuffer, long, long) throws com.sleepycat.je.DatabaseException, java.io.IOException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file;
        java.nio.ByteBuffer data, buf;
        long destOffset, fileNum, $l3;
        int len, $i0, $i1, $i2, $i4, $i5, $i6;
        byte[] a;
        boolean $z0;
        java.lang.Exception $r0;
        java.util.Random $r2, $r3, $r4, $r5;
        java.io.IOException $r7;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        data := @parameter1: java.nio.ByteBuffer;

        destOffset := @parameter2: long;

        fileNum := @parameter3: long;

        $z0 = this.<com.sleepycat.je.log.FileManager: boolean logWriteExceptionThrown>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>("Write after LogWriteException");

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

     label1:
        $i0 = this.<com.sleepycat.je.log.FileManager: int logWriteExceptionCounter>;

        $i1 = $i0 + 1;

        this.<com.sleepycat.je.log.FileManager: int logWriteExceptionCounter> = $i1;

        $i2 = this.<com.sleepycat.je.log.FileManager: int logWriteExceptionCounter>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 < 100 goto label2;

        this.<com.sleepycat.je.log.FileManager: int logWriteExceptionCounter> = 0;

     label2:
        $r2 = this.<com.sleepycat.je.log.FileManager: java.util.Random logWriteExceptionRandom>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 != null goto label3;

        $r3 = new java.util.Random;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r3.<java.util.Random: void <init>(long)>($l3);

        this.<com.sleepycat.je.log.FileManager: java.util.Random logWriteExceptionRandom> = $r3;

     label3:
        $i4 = this.<com.sleepycat.je.log.FileManager: int logWriteExceptionCounter>;

        $r4 = this.<com.sleepycat.je.log.FileManager: java.util.Random logWriteExceptionRandom>;

        $i5 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>(100);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i4 != $i5 goto label5;

        $r5 = this.<com.sleepycat.je.log.FileManager: java.util.Random logWriteExceptionRandom>;

        $i6 = virtualinvoke data.<java.nio.ByteBuffer: int remaining()>();

        len = virtualinvoke $r5.<java.util.Random: int nextInt(int)>($i6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        if len <= 0 goto label4;

        a = newarray (byte)[len];

        virtualinvoke data.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(a, 0, len);

        buf = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(a);

        specialinvoke this.<com.sleepycat.je.log.FileManager: int writeToFile(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long,boolean)>(file, buf, destOffset, fileNum, 0);

     label4:
        this.<com.sleepycat.je.log.FileManager: boolean logWriteExceptionThrown> = 1;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Randomly generated for testing");

        throw $r7;

     label5:
        return;
    }

    private int writeToFile(java.io.RandomAccessFile, java.nio.ByteBuffer, long, long, boolean) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file, l13;
        java.nio.ByteBuffer data;
        long destOffset, fileNum, $l1, $l3, $l4, $l5, $l7, $l8, $l17, $l18;
        boolean flushWriteQueue, fsyncLatchAcquired, totalBytesWritten#2, $z0, enqueueSuccess#45, $z1, $z2, $z3;
        int pos, size, $i0, $i9, $i10, $i11, $i12, $i13, $i14, $i16, totalBytesWritten#118;
        java.lang.Throwable l14, l15, $r14, $r17;
        byte $b2, $b6;
        com.sleepycat.je.utilint.LongStat $r0, $r1, $r2, $r3;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r4, $r6, $r8, $r10, $r15, $r18;
        java.util.concurrent.locks.ReentrantLock $r5, $r9, $r16, $r19;
        byte[] $r7, $r12, $r13;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        data := @parameter1: java.nio.ByteBuffer;

        destOffset := @parameter2: long;

        fileNum := @parameter3: long;

        flushWriteQueue := @parameter4: boolean;

        totalBytesWritten#2 = 0;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void bumpWriteCount(java.lang.String)>("write");

        pos = virtualinvoke data.<java.nio.ByteBuffer: int position()>();

        $i0 = virtualinvoke data.<java.nio.ByteBuffer: int limit()>();

        size = $i0 - pos;

        $l1 = this.<com.sleepycat.je.log.FileManager: long lastFileNumberTouched>;

        $b2 = $l1 cmp fileNum;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 != 0 goto label01;

        $l3 = this.<com.sleepycat.je.log.FileManager: long lastFileTouchedOffset>;

        $l4 = destOffset - $l3;

        $l5 = staticinvoke <java.lang.Math: long abs(long)>($l4);

        $b6 = $l5 cmp 1048576L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 >= 0 goto label01;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialWrites>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.LongStat: void increment()>();

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialWriteBytes>;

        $l7 = (long) size;

        virtualinvoke $r1.<com.sleepycat.je.utilint.LongStat: void add(long)>($l7);

        goto label02;

     label01:
        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomWrites>;

        virtualinvoke $r2.<com.sleepycat.je.utilint.LongStat: void increment()>();

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomWriteBytes>;

        $l8 = (long) size;

        virtualinvoke $r3.<com.sleepycat.je.utilint.LongStat: void add(long)>($l8);

     label02:
        $z0 = this.<com.sleepycat.je.log.FileManager: boolean VERIFY_CHECKSUMS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void verifyChecksums(java.nio.ByteBuffer,long,java.lang.String)>(data, destOffset, "pre-write");

     label03:
        $r4 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $r5 = staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock access$300(com.sleepycat.je.log.FileManager$LogEndFileDescriptor)>($r4);

        fsyncLatchAcquired = virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>();

        enqueueSuccess#45 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fsyncLatchAcquired);

        if fsyncLatchAcquired != 0 goto label04;

        $z1 = this.<com.sleepycat.je.log.FileManager: boolean useWriteQueue>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label04;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(flushWriteQueue);

        if flushWriteQueue != 0 goto label04;

        $r6 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $r7 = virtualinvoke data.<java.nio.ByteBuffer: byte[] array()>();

        $i9 = virtualinvoke data.<java.nio.ByteBuffer: int arrayOffset()>();

        $i10 = pos + $i9;

        enqueueSuccess#45 = virtualinvoke $r6.<com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean enqueueWrite(long,byte[],long,int,int)>(fileNum, $r7, destOffset, $i10, size);

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(enqueueSuccess#45);

        if enqueueSuccess#45 != 0 goto label17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fsyncLatchAcquired);

        if fsyncLatchAcquired != 0 goto label05;

        $r8 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $r9 = staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock access$300(com.sleepycat.je.log.FileManager$LogEndFileDescriptor)>($r8);

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label05:
        $z2 = this.<com.sleepycat.je.log.FileManager: boolean useWriteQueue>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label06;

        $r10 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void access$400(com.sleepycat.je.log.FileManager$LogEndFileDescriptor)>($r10);

     label06:
        l13 = file;

        entermonitor file;

     label07:
        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>(destOffset);

        $r12 = virtualinvoke data.<java.nio.ByteBuffer: byte[] array()>();

        $i11 = virtualinvoke data.<java.nio.ByteBuffer: int arrayOffset()>();

        $i12 = pos + $i11;

        virtualinvoke file.<java.io.RandomAccessFile: void write(byte[],int,int)>($r12, $i12, size);

        $z3 = this.<com.sleepycat.je.log.FileManager: boolean VERIFY_CHECKSUMS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label08;

        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>(destOffset);

        $r13 = virtualinvoke data.<java.nio.ByteBuffer: byte[] array()>();

        $i13 = virtualinvoke data.<java.nio.ByteBuffer: int arrayOffset()>();

        $i14 = pos + $i13;

        virtualinvoke file.<java.io.RandomAccessFile: int read(byte[],int,int)>($r13, $i14, size);

        specialinvoke this.<com.sleepycat.je.log.FileManager: void verifyChecksums(java.nio.ByteBuffer,long,java.lang.String)>(data, destOffset, "post-write");

     label08:
        exitmonitor l13;

     label09:
        goto label13;

     label10:
        $r14 := @caughtexception;

     label11:
        l14 = $r14;

        exitmonitor l13;

     label12:
        throw l14;

     label13:
        $r15 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $r16 = staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock access$300(com.sleepycat.je.log.FileManager$LogEndFileDescriptor)>($r15);

        virtualinvoke $r16.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label17;

     label14:
        $r17 := @caughtexception;

     label15:
        l15 = $r17;

     label16:
        $r18 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $r19 = staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: java.util.concurrent.locks.ReentrantLock access$300(com.sleepycat.je.log.FileManager$LogEndFileDescriptor)>($r18);

        virtualinvoke $r19.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw l15;

     label17:
        $i16 = pos + size;

        virtualinvoke data.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i16);

        totalBytesWritten#118 = size;

        this.<com.sleepycat.je.log.FileManager: long lastFileNumberTouched> = fileNum;

        $l17 = (long) size;

        $l18 = destOffset + $l17;

        this.<com.sleepycat.je.log.FileManager: long lastFileTouchedOffset> = $l18;

        return totalBytesWritten#118;

        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label05 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private void bumpWriteCount(java.lang.String) throws java.io.IOException
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String debugMsg, $r6;
        long $l0, $l1, $l2, $l3, $l5, $l6, $l7, $l9;
        byte $b4, $b8;
        boolean $z0;
        java.io.IOException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.Runtime $r7;

        this := @this: com.sleepycat.je.log.FileManager;

        debugMsg := @parameter0: java.lang.String;

        $l1 = <com.sleepycat.je.log.FileManager: long WRITE_COUNT>;

        $l2 = $l1 + 1L;

        <com.sleepycat.je.log.FileManager: long WRITE_COUNT> = $l2;

        $l3 = <com.sleepycat.je.log.FileManager: long STOP_ON_WRITE_COUNT>;

        $b4 = $l2 cmp $l3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 < 0 goto label2;

        $l5 = <com.sleepycat.je.log.FileManager: long WRITE_COUNT>;

        $l6 = <com.sleepycat.je.log.FileManager: long STOP_ON_WRITE_COUNT>;

        $l0 = <com.sleepycat.je.log.FileManager: long N_BAD_WRITES>;

        $l7 = $l6 + $l0;

        $b8 = $l5 cmp $l7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 >= 0 goto label2;

        $z0 = <com.sleepycat.je.log.FileManager: boolean THROW_ON_WRITE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = new java.io.IOException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException generated for testing: ");

        $l9 = <com.sleepycat.je.log.FileManager: long WRITE_COUNT>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(debugMsg);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label1:
        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r7.<java.lang.Runtime: void halt(int)>(255);

     label2:
        return;
    }

    private void verifyChecksums(java.nio.ByteBuffer, long, java.lang.String)
    {
        com.sleepycat.je.log.FileManager this;
        java.nio.ByteBuffer entryBuffer;
        long lsn;
        java.lang.String comment, $r9;
        int curPos, recStartPos, $i0, $i1, $i2, $i3, $i4;
        com.sleepycat.je.log.LogEntryHeader header, $r0;
        com.sleepycat.je.log.ChecksumException e, $r2;
        java.io.PrintStream $r3, $r10, $r11, $r12;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        this := @this: com.sleepycat.je.log.FileManager;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        lsn := @parameter1: long;

        comment := @parameter2: java.lang.String;

        curPos = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

     label1:
        $i0 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int remaining()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label2;

        recStartPos = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $r0 = new com.sleepycat.je.log.LogEntryHeader;

        specialinvoke $r0.<com.sleepycat.je.log.LogEntryHeader: void <init>(java.nio.ByteBuffer,int,long)>(entryBuffer, 14, lsn);

        header = $r0;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void verifyChecksum(java.nio.ByteBuffer,com.sleepycat.je.log.LogEntryHeader,long,java.lang.String)>(entryBuffer, header, lsn, comment);

        $i1 = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $i2 = recStartPos + $i1;

        $i3 = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i4 = $i2 + $i3;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

        goto label1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChecksumException: (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(comment);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("start stack trace");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke e.<com.sleepycat.je.log.ChecksumException: void printStackTrace(java.io.PrintStream)>($r11);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("end stack trace");

     label4:
        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(curPos);

        return;

        catch com.sleepycat.je.log.ChecksumException from label1 to label2 with label3;
    }

    private void verifyChecksum(java.nio.ByteBuffer, com.sleepycat.je.log.LogEntryHeader, long, java.lang.String) throws com.sleepycat.je.log.ChecksumException
    {
        com.sleepycat.je.log.FileManager this;
        java.nio.ByteBuffer entryBuffer;
        com.sleepycat.je.log.LogEntryHeader header;
        long lsn, $l2;
        java.lang.String comment, $r6;
        int headerSizeMinusChecksum, itemStart, itemSize, $i0, $i1;
        com.sleepycat.je.log.ChecksumValidator $r0, validator#5;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        this := @this: com.sleepycat.je.log.FileManager;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        header := @parameter1: com.sleepycat.je.log.LogEntryHeader;

        lsn := @parameter2: long;

        comment := @parameter3: java.lang.String;

        $r0 = new com.sleepycat.je.log.ChecksumValidator;

        specialinvoke $r0.<com.sleepycat.je.log.ChecksumValidator: void <init>()>();

        validator#5 = $r0;

        headerSizeMinusChecksum = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: int getSizeMinusChecksum()>();

        itemStart = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $i0 = itemStart - headerSizeMinusChecksum;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        virtualinvoke validator#5.<com.sleepycat.je.log.ChecksumValidator: void update(java.nio.ByteBuffer,int)>(entryBuffer, headerSizeMinusChecksum);

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(itemStart);

        itemSize = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i1 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int remaining()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(itemSize);

        if $i1 >= itemSize goto label1;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t verify checksum (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(comment);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;

     label1:
        virtualinvoke validator#5.<com.sleepycat.je.log.ChecksumValidator: void update(java.nio.ByteBuffer,int)>(entryBuffer, itemSize);

        $l2 = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: long getChecksum()>();

        virtualinvoke validator#5.<com.sleepycat.je.log.ChecksumValidator: void validate(long,long)>($l2, lsn);

        return;
    }

    static com.sleepycat.je.dbi.EnvironmentImpl access$1200(com.sleepycat.je.log.FileManager)
    {
        com.sleepycat.je.log.FileManager x0;
        com.sleepycat.je.dbi.EnvironmentImpl $r0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        $r0 = x0.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        return $r0;
    }

    static void access$1300(com.sleepycat.je.log.FileManager, java.nio.ByteBuffer, long, java.lang.String)
    {
        com.sleepycat.je.log.FileManager x0;
        java.nio.ByteBuffer x1;
        long x2;
        java.lang.String x3;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        x1 := @parameter1: java.nio.ByteBuffer;

        x2 := @parameter2: long;

        x3 := @parameter3: java.lang.String;

        specialinvoke x0.<com.sleepycat.je.log.FileManager: void verifyChecksums(java.nio.ByteBuffer,long,java.lang.String)>(x1, x2, x3);

        return;
    }

    static com.sleepycat.je.log.FileHandle access$1500(com.sleepycat.je.log.FileManager, long, com.sleepycat.je.log.FileManager$FileMode) throws java.io.FileNotFoundException, com.sleepycat.je.log.ChecksumException
    {
        com.sleepycat.je.log.FileManager x0;
        long x1;
        com.sleepycat.je.log.FileManager$FileMode x2;
        com.sleepycat.je.log.FileHandle $r0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        x1 := @parameter1: long;

        x2 := @parameter2: com.sleepycat.je.log.FileManager$FileMode;

        $r0 = specialinvoke x0.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileHandle makeFileHandle(long,com.sleepycat.je.log.FileManager$FileMode)>(x1, x2);

        return $r0;
    }

    static com.sleepycat.je.log.FileManager$FileMode access$1400(com.sleepycat.je.log.FileManager)
    {
        com.sleepycat.je.log.FileManager x0;
        com.sleepycat.je.log.FileManager$FileMode $r0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        $r0 = specialinvoke x0.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileMode getAppropriateReadWriteMode()>();

        return $r0;
    }

    private com.sleepycat.je.log.FileManager$FileMode getAppropriateReadWriteMode()
    {
        com.sleepycat.je.log.FileManager this;
        boolean $z0;
        com.sleepycat.je.log.FileManager$FileMode $r0, $r1;

        this := @this: com.sleepycat.je.log.FileManager;

        $z0 = this.<com.sleepycat.je.log.FileManager: boolean useODSYNC>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = <com.sleepycat.je.log.FileManager$FileMode: com.sleepycat.je.log.FileManager$FileMode READWRITE_ODSYNC_MODE>;

        return $r0;

     label1:
        $r1 = <com.sleepycat.je.log.FileManager$FileMode: com.sleepycat.je.log.FileManager$FileMode READWRITE_MODE>;

        return $r1;
    }

    private com.sleepycat.je.log.FileHandle makeFileHandle(long, com.sleepycat.je.log.FileManager$FileMode) throws java.io.FileNotFoundException, com.sleepycat.je.log.ChecksumException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        com.sleepycat.je.log.FileManager$FileMode mode;
        com.sleepycat.je.log.FileHandle fileHandle, $r0;
        com.sleepycat.je.dbi.EnvironmentImpl $r1;
        java.lang.String $r2;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        mode := @parameter1: com.sleepycat.je.log.FileManager$FileMode;

        $r0 = new com.sleepycat.je.log.FileHandle;

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r2 = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileNumberString(long)>(fileNum);

        specialinvoke $r0.<com.sleepycat.je.log.FileHandle: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,long,java.lang.String)>($r1, fileNum, $r2);

        fileHandle = $r0;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void openFileHandle(com.sleepycat.je.log.FileHandle,com.sleepycat.je.log.FileManager$FileMode,com.sleepycat.je.log.FileHandle)>(fileHandle, mode, null);

        return fileHandle;
    }

    private static java.lang.String getFileNumberString(long)
    {
        long fileNum;
        java.lang.String $r0, $r1;

        fileNum := @parameter0: long;

        $r0 = staticinvoke <com.sleepycat.je.utilint.HexFormatter: java.lang.String formatLong(long)>(fileNum);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(10);

        return $r1;
    }

    private void openFileHandle(com.sleepycat.je.log.FileHandle, com.sleepycat.je.log.FileManager$FileMode, com.sleepycat.je.log.FileHandle) throws java.io.FileNotFoundException, com.sleepycat.je.log.ChecksumException
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.log.FileHandle fileHandle, existingHandle;
        com.sleepycat.je.log.FileManager$FileMode mode;
        long fileNum, lastLsn, $l0, $l2, headerPrevOffset#74, $l6;
        java.lang.String[] fileNames, l11;
        int l12, l13#20, logVersion#46, logVersion#57;
        java.lang.String fileName2, fileName#11, $r3, $r13, $r16, $r23, $r34, $r39;
        java.io.FileNotFoundException e, FNFE#15, $r4;
        com.sleepycat.je.log.FileHeader fileHeader, $r25;
        java.lang.Throwable l17, $r26, e#137, $r27, e#140, $r40;
        com.sleepycat.je.utilint.IntStat $r0;
        java.io.RandomAccessFile newFile#9;
        boolean success#13, $z0, success#52, $z1, $z2, success#132;
        com.sleepycat.je.log.FileManager$FileFactory $r1;
        java.io.File $r2;
        java.lang.AssertionError $r5;
        byte $b1, $b3, $b4, $b5;
        java.util.Map $r6, $r19;
        java.lang.Long $r7, $r9;
        java.lang.Object $r8;
        com.sleepycat.je.dbi.EnvironmentImpl $r10, $r29;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r22, $r31, $r32, $r33, $r36, $r37, $r38;
        com.sleepycat.je.EnvironmentFailureException $r24, $r28;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r30;
        com.sleepycat.je.DatabaseException $r35, e#155;

        this := @this: com.sleepycat.je.log.FileManager;

        fileHandle := @parameter0: com.sleepycat.je.log.FileHandle;

        mode := @parameter1: com.sleepycat.je.log.FileManager$FileMode;

        existingHandle := @parameter2: com.sleepycat.je.log.FileHandle;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.IntStat nFileOpens>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.IntStat: void increment()>();

        fileNum = virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: long getFileNum()>();

        fileNames = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] getFullFileNames(long)>(fileNum);

        newFile#9 = null;

        fileName#11 = null;

        success#13 = 0;

     label01:
        FNFE#15 = null;

        l11 = fileNames;

        l12 = lengthof l11;

        l13#20 = 0;

     label02:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l13#20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l12);

        if l13#20 >= l12 goto label07;

        fileName2 = l11[l13#20];

        fileName#11 = fileName2;

     label03:
        $r1 = <com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileFactory fileFactory>;

        $r2 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        $r3 = virtualinvoke mode.<com.sleepycat.je.log.FileManager$FileMode: java.lang.String getModeValue()>();

        newFile#9 = interfaceinvoke $r1.<com.sleepycat.je.log.FileManager$FileFactory: java.io.RandomAccessFile createFile(java.io.File,java.lang.String,java.lang.String)>($r2, fileName#11, $r3);

     label04:
        goto label07;

     label05:
        $r4 := @caughtexception;

        e = $r4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(FNFE#15);

        if FNFE#15 != null goto label06;

        FNFE#15 = e;

     label06:
        l13#20 = l13#20 + 1;

        goto label02;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newFile#9);

        if newFile#9 != null goto label09;

        $z0 = <com.sleepycat.je.log.FileManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label08;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(FNFE#15);

        if FNFE#15 != null goto label08;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label08:
        throw FNFE#15;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(existingHandle);

        if existingHandle == null goto label12;

        logVersion#46 = virtualinvoke existingHandle.<com.sleepycat.je.log.FileHandle: int getLogVersion()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion#46);

        if logVersion#46 <= 0 goto label12;

        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void init(java.io.RandomAccessFile,int)>(newFile#9, logVersion#46);

        success#52 = 1;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#52);

        if success#52 != 0 goto label11;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void closeFileInErrorCase(java.io.RandomAccessFile)>(newFile#9);

     label11:
        return;

     label12:
        logVersion#57 = 14;

        $l0 = virtualinvoke newFile#9.<java.io.RandomAccessFile: long length()>();

        $b1 = $l0 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 != 0 goto label15;

        $z1 = virtualinvoke mode.<com.sleepycat.je.log.FileManager$FileMode: boolean isWritable()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label16;

        $r6 = this.<com.sleepycat.je.log.FileManager: java.util.Map perFileLastUsedLsn>;

        $l2 = fileNum - 1L;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7);

        $r9 = (java.lang.Long) $r8;

        lastLsn = staticinvoke <com.sleepycat.je.utilint.DbLsn: long longToLsn(java.lang.Long)>($r9);

        headerPrevOffset#74 = 0L;

        $b3 = lastLsn cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 == 0 goto label13;

        headerPrevOffset#74 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>(lastLsn);

     label13:
        $b4 = headerPrevOffset#74 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 != 0 goto label14;

        $b5 = fileNum cmp 1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        if $b5 <= 0 goto label14;

        $z2 = this.<com.sleepycat.je.log.FileManager: boolean syncAtFileEnd>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label14;

        $r10 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zero prevOffset fileNum=0x");

        $r13 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(fileNum);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastLsn=");

        $r16 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(lastLsn);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" perFileLastUsedLsn=");

        $r19 = this.<com.sleepycat.je.log.FileManager: java.util.Map perFileLastUsedLsn>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileLen=");

        $l6 = virtualinvoke newFile#9.<java.io.RandomAccessFile: long length()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r10, $r23);

        throw $r24;

     label14:
        $r25 = new com.sleepycat.je.log.FileHeader;

        specialinvoke $r25.<com.sleepycat.je.log.FileHeader: void <init>(long,long)>(fileNum, headerPrevOffset#74);

        fileHeader = $r25;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void writeFileHeader(java.io.RandomAccessFile,java.lang.String,com.sleepycat.je.log.FileHeader,long)>(newFile#9, fileName#11, fileHeader, fileNum);

        goto label16;

     label15:
        logVersion#57 = specialinvoke this.<com.sleepycat.je.log.FileManager: int readAndValidateFileHeader(java.io.RandomAccessFile,java.lang.String,long)>(newFile#9, fileName#11, fileNum);

     label16:
        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void init(java.io.RandomAccessFile,int)>(newFile#9, logVersion#57);

        success#132 = 1;

     label17:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#132);

        if success#132 != 0 goto label25;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void closeFileInErrorCase(java.io.RandomAccessFile)>(newFile#9);

        goto label25;

     label18:
        $r26 := @caughtexception;

     label19:
        e#137 = $r26;

        throw e#137;

     label20:
        $r27 := @caughtexception;

        e#140 = $r27;

        $r28 = new com.sleepycat.je.EnvironmentFailureException;

        $r29 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r30 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_READ>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open file ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName#11);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r29, $r30, $r34, e#140);

        throw $r28;

     label21:
        $r35 := @caughtexception;

        e#155 = $r35;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void closeFileInErrorCase(java.io.RandomAccessFile)>(newFile#9);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open file ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName#11);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke e#155.<com.sleepycat.je.DatabaseException: void addErrorMessage(java.lang.String)>($r39);

        throw e#155;

     label22:
        $r40 := @caughtexception;

        l17 = $r40;

     label23:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#13);

        if success#13 != 0 goto label24;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void closeFileInErrorCase(java.io.RandomAccessFile)>(newFile#9);

     label24:
        throw l17;

     label25:
        return;

        catch java.io.FileNotFoundException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label01 to label10 with label18;
        catch java.io.FileNotFoundException from label12 to label17 with label18;
        catch java.io.IOException from label01 to label10 with label20;
        catch java.io.IOException from label12 to label17 with label20;
        catch com.sleepycat.je.DatabaseException from label01 to label10 with label21;
        catch com.sleepycat.je.DatabaseException from label12 to label17 with label21;
        catch java.lang.Throwable from label01 to label10 with label22;
        catch java.lang.Throwable from label12 to label17 with label22;
        catch java.lang.Throwable from label19 to label23 with label22;
    }

    java.lang.String[] getFullFileNames(long)
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        int nSuffixes, i#8;
        java.lang.String[] 'ret', $r0, $r1, $r4;
        boolean $z0;
        java.lang.String $r2, $r3, $r5;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        $z0 = this.<com.sleepycat.je.log.FileManager: boolean includeDeletedFiles>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r0 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_AND_DEL_SUFFIXES>;

        nSuffixes = lengthof $r0;

        'ret' = newarray (java.lang.String)[nSuffixes];

        i#8 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nSuffixes);

        if i#8 >= nSuffixes goto label2;

        $r1 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_AND_DEL_SUFFIXES>;

        $r2 = $r1[i#8];

        $r3 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String getFullFileName(long,java.lang.String)>(fileNum, $r2);

        'ret'[i#8] = $r3;

        i#8 = i#8 + 1;

        goto label1;

     label2:
        return 'ret';

     label3:
        $r4 = newarray (java.lang.String)[1];

        $r5 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String getFullFileName(long,java.lang.String)>(fileNum, ".jdb");

        $r4[0] = $r5;

        return $r4;
    }

    private void closeFileInErrorCase(java.io.RandomAccessFile)
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file;
        java.lang.Exception l2, $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(file);

        if file == null goto label2;

        virtualinvoke file.<java.io.RandomAccessFile: void close()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        l2 = $r0;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void writeFileHeader(java.io.RandomAccessFile, java.lang.String, com.sleepycat.je.log.FileHeader, long) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file;
        java.lang.String fileName, $r21;
        com.sleepycat.je.log.FileHeader header;
        long fileNum;
        com.sleepycat.je.log.entry.FileHeaderEntry headerLogEntry, $r2;
        java.nio.ByteBuffer headerBuf;
        int bytesWritten, $i0, $i1;
        com.sleepycat.je.dbi.EnvironmentImpl $r0, $r1, $r4, $r8, $r11, $r13;
        boolean $z0, $z1;
        com.sleepycat.je.log.LogEntryType $r3;
        com.sleepycat.je.log.LogManager $r5;
        java.nio.channels.ClosedChannelException $r6, e#29;
        com.sleepycat.je.ThreadInterruptedException $r7;
        java.io.IOException $r9, e#37;
        com.sleepycat.je.LogWriteException $r10;
        com.sleepycat.je.EnvironmentFailureException $r12;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        fileName := @parameter1: java.lang.String;

        header := @parameter2: com.sleepycat.je.log.FileHeader;

        fileNum := @parameter3: long;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: void checkIfInvalid()>();

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $z0 = virtualinvoke $r1.<com.sleepycat.je.dbi.EnvironmentImpl: boolean mayNotWrite()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new com.sleepycat.je.log.entry.FileHeaderEntry;

        $r3 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        specialinvoke $r2.<com.sleepycat.je.log.entry.FileHeaderEntry: void <init>(com.sleepycat.je.log.LogEntryType,com.sleepycat.je.log.FileHeader)>($r3, header);

        headerLogEntry = $r2;

        $r4 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r5 = virtualinvoke $r4.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        headerBuf = virtualinvoke $r5.<com.sleepycat.je.log.LogManager: java.nio.ByteBuffer putIntoBuffer(com.sleepycat.je.log.entry.LogEntry,long)>(headerLogEntry, 0L);

     label2:
        $z1 = <com.sleepycat.je.log.FileManager: boolean LOGWRITE_EXCEPTION_TESTING>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void generateLogWriteException(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long)>(file, headerBuf, 0L, fileNum);

     label3:
        bytesWritten = specialinvoke this.<com.sleepycat.je.log.FileManager: int writeToFile(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long,boolean)>(file, headerBuf, 0L, fileNum, 1);

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        e#29 = $r6;

        $r7 = new com.sleepycat.je.ThreadInterruptedException;

        $r8 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r7.<com.sleepycat.je.ThreadInterruptedException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.Throwable)>($r8, "Channel closed, may be due to thread interrupt", e#29);

        throw $r7;

     label6:
        $r9 := @caughtexception;

        e#37 = $r9;

        $r10 = new com.sleepycat.je.LogWriteException;

        $r11 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r10.<com.sleepycat.je.LogWriteException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Throwable)>($r11, e#37);

        throw $r10;

     label7:
        $i0 = interfaceinvoke headerLogEntry.<com.sleepycat.je.log.entry.LogEntry: int getSize()>();

        $i1 = $i0 + 14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytesWritten);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if bytesWritten == $i1 goto label8;

        $r12 = new com.sleepycat.je.EnvironmentFailureException;

        $r13 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r14 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was created with an incomplete header. Only ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(bytesWritten);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes were written.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r13, $r14, $r21);

        throw $r12;

     label8:
        return;

        catch java.nio.channels.ClosedChannelException from label2 to label4 with label5;
        catch java.io.IOException from label2 to label4 with label6;
    }

    private int readAndValidateFileHeader(java.io.RandomAccessFile, java.lang.String, long) throws com.sleepycat.je.log.ChecksumException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file;
        java.lang.String fileName;
        long fileNum, $l0;
        com.sleepycat.je.log.LogManager logManager;
        com.sleepycat.je.log.entry.LogEntry headerEntry;
        com.sleepycat.je.log.FileHeader header;
        com.sleepycat.je.dbi.EnvironmentImpl $r0, $r2;
        java.lang.Object $r1;
        int $i1;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        fileName := @parameter1: java.lang.String;

        fileNum := @parameter2: long;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        logManager = virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        $l0 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long makeLsn(long,int)>(fileNum, 0);

        headerEntry = virtualinvoke logManager.<com.sleepycat.je.log.LogManager: com.sleepycat.je.log.entry.LogEntry getLogEntryAllowChecksumException(long,java.io.RandomAccessFile,int)>($l0, file, -1);

        $r1 = interfaceinvoke headerEntry.<com.sleepycat.je.log.entry.LogEntry: java.lang.Object getMainItem()>();

        header = (com.sleepycat.je.log.FileHeader) $r1;

        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $i1 = virtualinvoke header.<com.sleepycat.je.log.FileHeader: int validate(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,long)>($r2, fileName, fileNum);

        return $i1;
    }

    public java.lang.String getFullFileName(long, java.lang.String)
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        java.lang.String suffix, $r2, $r4, $r6;
        java.io.File dbEnvDataDir;
        java.lang.StringBuilder $r0, $r1, $r3, $r5;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        suffix := @parameter1: java.lang.String;

        dbEnvDataDir = specialinvoke this.<com.sleepycat.je.log.FileManager: java.io.File getDataDir(long)>(fileNum);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dbEnvDataDir);

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileName(long,java.lang.String)>(fileNum, suffix);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String getFileName(long, java.lang.String)
    {
        long fileNum;
        java.lang.String suffix, $r1, $r4;
        java.lang.StringBuilder $r0, $r2, $r3;

        fileNum := @parameter0: long;

        suffix := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileNumberString(long)>(fileNum);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private java.io.File getDataDir(long)
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum, $l2, $l3;
        int $i0, $i1, $i4;
        java.io.File $r0;
        java.io.File[] $r1;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        $i0 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.FileManager: java.io.File dbEnvHome>;

        goto label2;

     label1:
        $r1 = this.<com.sleepycat.je.log.FileManager: java.io.File[] dbEnvDataDirs>;

        $i1 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        $l2 = (long) $i1;

        $l3 = fileNum % $l2;

        $i4 = (int) $l3;

        $r0 = $r1[$i4];

     label2:
        return $r0;
    }

    long getPrevEntryOffset()
    {
        com.sleepycat.je.log.FileManager this;
        long $l0;

        this := @this: com.sleepycat.je.log.FileManager;

        $l0 = this.<com.sleepycat.je.log.FileManager: long prevOffset>;

        return $l0;
    }

    public long getLastUsedLsn()
    {
        com.sleepycat.je.log.FileManager this;
        long $l0;

        this := @this: com.sleepycat.je.log.FileManager;

        $l0 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        return $l0;
    }

    boolean bumpLsn(long)
    {
        com.sleepycat.je.log.FileManager this;
        long size, $l0, $l1, $l2, $l3, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l14, $l15, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25;
        boolean flippedFiles#2, $z0;
        byte $b4, $b8, $b16;
        java.util.Map $r1;
        java.lang.Long $r2, $r3;
        int $i13;

        this := @this: com.sleepycat.je.log.FileManager;

        size := @parameter0: long;

        flippedFiles#2 = 0;

        $z0 = this.<com.sleepycat.je.log.FileManager: boolean forceNewFile>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $l0 = this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn>;

        $l1 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>($l0);

        $l2 = $l1 + size;

        $l3 = this.<com.sleepycat.je.log.FileManager: long maxFileSize>;

        $b4 = $l2 cmp $l3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 <= 0 goto label3;

     label1:
        this.<com.sleepycat.je.log.FileManager: boolean forceNewFile> = 0;

        $l5 = this.<com.sleepycat.je.log.FileManager: long currentFileNum>;

        $l6 = $l5 + 1L;

        this.<com.sleepycat.je.log.FileManager: long currentFileNum> = $l6;

        $l7 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $b8 = $l7 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 == 0 goto label2;

        $r1 = this.<com.sleepycat.je.log.FileManager: java.util.Map perFileLastUsedLsn>;

        $l9 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $l10 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l9);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        $l11 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label2:
        this.<com.sleepycat.je.log.FileManager: long prevOffset> = 0L;

        $l12 = this.<com.sleepycat.je.log.FileManager: long currentFileNum>;

        $i13 = staticinvoke <com.sleepycat.je.log.FileManager: int firstLogEntryOffset()>();

        $l14 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long makeLsn(long,int)>($l12, $i13);

        this.<com.sleepycat.je.log.FileManager: long lastUsedLsn> = $l14;

        flippedFiles#2 = 1;

        goto label6;

     label3:
        $l15 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $b16 = $l15 cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b16);

        if $b16 != 0 goto label4;

        this.<com.sleepycat.je.log.FileManager: long prevOffset> = 0L;

        goto label5;

     label4:
        $l17 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $l18 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>($l17);

        this.<com.sleepycat.je.log.FileManager: long prevOffset> = $l18;

     label5:
        $l19 = this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn>;

        this.<com.sleepycat.je.log.FileManager: long lastUsedLsn> = $l19;

     label6:
        $l20 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $l21 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l20);

        $l22 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        $l23 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>($l22);

        $l24 = $l23 + size;

        $l25 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long makeLsn(long,long)>($l21, $l24);

        this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn> = $l25;

        return flippedFiles#2;
    }

    public void forceNewLogFile()
    {
        com.sleepycat.je.log.FileManager this;

        this := @this: com.sleepycat.je.log.FileManager;

        this.<com.sleepycat.je.log.FileManager: boolean forceNewFile> = 1;

        return;
    }

    com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)
    {
        com.sleepycat.je.log.FileManager this;
        com.sleepycat.je.StatsConfig config;
        com.sleepycat.je.utilint.StatGroup copyStats, $r3;
        com.sleepycat.je.utilint.IntStat $r0;
        com.sleepycat.je.log.FileManager$FileCache $r1;
        int $i0;
        java.lang.Integer $r2;
        boolean $z0;

        this := @this: com.sleepycat.je.log.FileManager;

        config := @parameter0: com.sleepycat.je.StatsConfig;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.IntStat nOpenFiles>;

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        $i0 = staticinvoke <com.sleepycat.je.log.FileManager$FileCache: int access$700(com.sleepycat.je.log.FileManager$FileCache)>($r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r0.<com.sleepycat.je.utilint.IntStat: void set(java.lang.Integer)>($r2);

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.StatGroup stats>;

        $z0 = virtualinvoke config.<com.sleepycat.je.StatsConfig: boolean getClear()>();

        copyStats = virtualinvoke $r3.<com.sleepycat.je.utilint.StatGroup: com.sleepycat.je.utilint.StatGroup cloneGroup(boolean)>($z0);

        return copyStats;
    }

    public long getNextLsn()
    {
        com.sleepycat.je.log.FileManager this;
        long $l0;

        this := @this: com.sleepycat.je.log.FileManager;

        $l0 = this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn>;

        return $l0;
    }

    void syncLogEnd() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.IOException e, $r1;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r0;
        com.sleepycat.je.LogWriteException $r2;
        com.sleepycat.je.dbi.EnvironmentImpl $r3;

        this := @this: com.sleepycat.je.log.FileManager;

     label1:
        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        staticinvoke <com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void access$500(com.sleepycat.je.log.FileManager$LogEndFileDescriptor)>($r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = new com.sleepycat.je.LogWriteException;

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r2.<com.sleepycat.je.LogWriteException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.Throwable)>($r3, "IOException during fsync", e);

        throw $r2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static int access$1700(com.sleepycat.je.log.FileManager)
    {
        com.sleepycat.je.log.FileManager x0;
        int $i0;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        $i0 = x0.<com.sleepycat.je.log.FileManager: int fSyncTimeLimit>;

        return $i0;
    }

    static void access$1600(com.sleepycat.je.log.FileManager, java.lang.String) throws java.io.IOException
    {
        com.sleepycat.je.log.FileManager x0;
        java.lang.String x1;

        x0 := @parameter0: com.sleepycat.je.log.FileManager;

        x1 := @parameter1: java.lang.String;

        specialinvoke x0.<com.sleepycat.je.log.FileManager: void bumpWriteCount(java.lang.String)>(x1);

        return;
    }

    public java.lang.Long getNumFromName(java.lang.String)
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String fileName, fileNumber, name#2, $r0;
        int $i0, $i1, $i2, $i3;
        long $l4;
        java.lang.Long $r1;

        this := @this: com.sleepycat.je.log.FileManager;

        fileName := @parameter0: java.lang.String;

        name#2 = fileName;

        $i0 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label1;

        $r0 = <java.io.File: java.lang.String separator>;

        $i1 = virtualinvoke name#2.<java.lang.String: int lastIndexOf(java.lang.String)>($r0);

        $i2 = $i1 + 1;

        name#2 = virtualinvoke name#2.<java.lang.String: java.lang.String substring(int)>($i2);

     label1:
        $i3 = virtualinvoke name#2.<java.lang.String: int indexOf(java.lang.String)>(".");

        fileNumber = virtualinvoke name#2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(fileNumber, 16);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        return $r1;
    }

    public java.lang.String[] listFileNames(long, long)
    {
        com.sleepycat.je.log.FileManager this;
        long minFileNumber, maxFileNumber;
        java.lang.String[] $r0, $r2;
        com.sleepycat.je.log.JEFileFilter fileFilter, $r1;

        this := @this: com.sleepycat.je.log.FileManager;

        minFileNumber := @parameter0: long;

        maxFileNumber := @parameter1: long;

        $r1 = new com.sleepycat.je.log.JEFileFilter;

        $r0 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_SUFFIXES>;

        specialinvoke $r1.<com.sleepycat.je.log.JEFileFilter: void <init>(java.lang.String[],long,long)>($r0, minFileNumber, maxFileNumber);

        fileFilter = $r1;

        $r2 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNamesInternal(com.sleepycat.je.log.JEFileFilter)>(fileFilter);

        return $r2;
    }

    public boolean isFileValid(long)
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum, $l0;
        java.lang.String fileName;
        java.io.File file, $r1;
        byte $b1;
        com.sleepycat.je.dbi.EnvironmentImpl $r0;
        boolean $z0, $z1;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        $l0 = this.<com.sleepycat.je.log.FileManager: long currentFileNum>;

        $b1 = fileNum cmp $l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 == 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        fileName = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String getFullFileName(long,java.lang.String)>(fileNum, ".jdb");

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(fileName);

        file = $r1;

        $z1 = virtualinvoke file.<java.io.File: boolean exists()>();

        return $z1;
    }

    public void releaseExclusiveLock() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.IOException e, $r3;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r0;
        java.nio.channels.FileLock $r1, $r2;
        com.sleepycat.je.EnvironmentFailureException $r4;
        com.sleepycat.je.dbi.EnvironmentImpl $r5;

        this := @this: com.sleepycat.je.log.FileManager;

     label1:
        $r1 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label2;

        $r2 = this.<com.sleepycat.je.log.FileManager: java.nio.channels.FileLock exclLock>;

        virtualinvoke $r2.<java.nio.channels.FileLock: void release()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new com.sleepycat.je.EnvironmentFailureException;

        $r5 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r0 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        specialinvoke $r4.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r5, $r0, e);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean deleteFile(long) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        java.lang.String fileName, relativeFileName, $r2;
        int index, $i0;
        java.io.File file, $r4;
        java.lang.String[] $r0;
        com.sleepycat.je.log.FileDeletionDetector $r1, $r3;
        boolean $z0, $z1;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        $r0 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] getFullFileNames(long)>(fileNum);

        fileName = $r0[0];

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $z0 = virtualinvoke fileName.<java.lang.String: boolean endsWith(java.lang.String)>(".jdb");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r2 = <java.io.File: java.lang.String separator>;

        $i0 = virtualinvoke fileName.<java.lang.String: int lastIndexOf(java.lang.String)>($r2);

        index = $i0 + 1;

        relativeFileName = virtualinvoke fileName.<java.lang.String: java.lang.String substring(int)>(index);

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd>;

        virtualinvoke $r3.<com.sleepycat.je.log.FileDeletionDetector: void addDeletedFile(java.lang.String)>(relativeFileName);

     label1:
        specialinvoke this.<com.sleepycat.je.log.FileManager: void clearFileCache(long)>(fileNum);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(fileName);

        file = $r4;

        $z1 = virtualinvoke file.<java.io.File: boolean delete()>();

        return $z1;
    }

    public java.io.File renameFile(long, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        java.lang.String newSuffix, subDir, oldName, newName, generation#19, $r6;
        java.io.File oldDir, oldFile, newDir, newFile, $r0, $r1, $r2, $r12;
        boolean success, $z0, $z1;
        int repeatNum#21;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        com.sleepycat.je.log.FileDeletionDetector $r10, $r11;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        newSuffix := @parameter1: java.lang.String;

        subDir := @parameter2: java.lang.String;

        oldDir = specialinvoke this.<com.sleepycat.je.log.FileManager: java.io.File getDataDir(long)>(fileNum);

        oldName = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileName(long)>(fileNum);

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(oldDir, oldName);

        oldFile = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(subDir);

        if subDir == null goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(oldDir, subDir);

        goto label2;

     label1:
        $r1 = oldDir;

     label2:
        newDir = $r1;

        newName = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileName(long,java.lang.String)>(fileNum, newSuffix);

        generation#19 = "";

        repeatNum#21 = 0;

     label3:
        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newName);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(generation#19);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(newDir, $r6);

        newFile = $r2;

        $z0 = virtualinvoke newFile.<java.io.File: boolean exists()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        repeatNum#21 = repeatNum#21 + 1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(repeatNum#21);

        generation#19 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label4:
        $r10 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 == null goto label5;

        $z1 = virtualinvoke oldName.<java.lang.String: boolean endsWith(java.lang.String)>(".jdb");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label5;

        $r11 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileDeletionDetector fdd>;

        virtualinvoke $r11.<com.sleepycat.je.log.FileDeletionDetector: void addDeletedFile(java.lang.String)>(oldName);

     label5:
        specialinvoke this.<com.sleepycat.je.log.FileManager: void clearFileCache(long)>(fileNum);

        success = virtualinvoke oldFile.<java.io.File: boolean renameTo(java.io.File)>(newFile);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success);

        if success == 0 goto label6;

        $r12 = newFile;

        goto label7;

     label6:
        $r12 = null;

     label7:
        return $r12;
    }

    public static java.lang.String getFileName(long)
    {
        long fileNum;
        java.lang.String $r0;

        fileNum := @parameter0: long;

        $r0 = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileName(long,java.lang.String)>(fileNum, ".jdb");

        return $r0;
    }

    private void clearFileCache(long) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        com.sleepycat.je.log.FileManager$FileCache l3, $r0, $r1;
        java.lang.Throwable l4, $r2;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        staticinvoke <com.sleepycat.je.log.FileManager$FileCache: void access$900(com.sleepycat.je.log.FileManager$FileCache,long)>($r1, fileNum);

        exitmonitor l3;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        l4 = $r2;

        exitmonitor l3;

     label5:
        throw l4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.sleepycat.je.log.FileHandle getFileHandle(long) throws java.io.FileNotFoundException, com.sleepycat.je.log.ChecksumException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum, $l0, $l1;
        java.lang.Long fileId;
        com.sleepycat.je.log.FileManager$FileCache l6, $r0, $r1, $r2;
        java.lang.Throwable l7, l8, $r3, $r5;
        com.sleepycat.je.log.FileHandle existingHandle, fileHandle#9;
        boolean newHandle#11, $z0;
        com.sleepycat.je.log.FileManager$FileMode $r4, $r9;
        com.sleepycat.je.log.FileManager$5 $r6;
        com.sleepycat.je.dbi.EnvironmentImpl $r7, $r14;
        java.lang.String $r8;
        java.io.RandomAccessFile $r10;
        java.io.FileNotFoundException $r11, e#69;
        java.io.IOException $r12, e#72;
        com.sleepycat.je.EnvironmentFailureException $r13;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r15;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        fileId = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fileNum);

     label01:
        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        fileHandle#9 = staticinvoke <com.sleepycat.je.log.FileManager$FileCache: com.sleepycat.je.log.FileHandle access$000(com.sleepycat.je.log.FileManager$FileCache,java.lang.Long)>($r0, fileId);

        newHandle#11 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fileHandle#9);

        if fileHandle#9 != null goto label08;

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        l6 = $r1;

        entermonitor $r1;

     label02:
        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        fileHandle#9 = staticinvoke <com.sleepycat.je.log.FileManager$FileCache: com.sleepycat.je.log.FileHandle access$000(com.sleepycat.je.log.FileManager$FileCache,java.lang.Long)>($r2, fileId);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fileHandle#9);

        if fileHandle#9 != null goto label03;

        newHandle#11 = 1;

        fileHandle#9 = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileHandle addFileHandle(java.lang.Long)>(fileId);

     label03:
        exitmonitor l6;

     label04:
        goto label08;

     label05:
        $r3 := @caughtexception;

     label06:
        l7 = $r3;

        exitmonitor l6;

     label07:
        throw l7;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(newHandle#11);

        if newHandle#11 == 0 goto label16;

     label09:
        $r4 = <com.sleepycat.je.log.FileManager$FileMode: com.sleepycat.je.log.FileManager$FileMode READ_MODE>;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void openFileHandle(com.sleepycat.je.log.FileHandle,com.sleepycat.je.log.FileManager$FileMode,com.sleepycat.je.log.FileHandle)>(fileHandle#9, $r4, null);

     label10:
        if 1 != 0 goto label15;

        virtualinvoke fileHandle#9.<com.sleepycat.je.log.FileHandle: void release()>();

        specialinvoke this.<com.sleepycat.je.log.FileManager: void clearFileCache(long)>(fileNum);

        goto label15;

     label11:
        $r5 := @caughtexception;

     label12:
        l8 = $r5;

     label13:
        if 0 != 0 goto label14;

        virtualinvoke fileHandle#9.<com.sleepycat.je.log.FileHandle: void release()>();

        specialinvoke this.<com.sleepycat.je.log.FileManager: void clearFileCache(long)>(fileNum);

     label14:
        throw l8;

     label15:
        goto label17;

     label16:
        $z0 = virtualinvoke fileHandle#9.<com.sleepycat.je.log.FileHandle: boolean latchNoWait()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label17;

        existingHandle = fileHandle#9;

        $r6 = new com.sleepycat.je.log.FileManager$5;

        $r7 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $l0 = virtualinvoke fileId.<java.lang.Long: long longValue()>();

        $l1 = virtualinvoke fileId.<java.lang.Long: long longValue()>();

        $r8 = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileNumberString(long)>($l1);

        specialinvoke $r6.<com.sleepycat.je.log.FileManager$5: void <init>(com.sleepycat.je.log.FileManager,com.sleepycat.je.dbi.EnvironmentImpl,long,java.lang.String)>(this, $r7, $l0, $r8);

        fileHandle#9 = $r6;

        $r9 = <com.sleepycat.je.log.FileManager$FileMode: com.sleepycat.je.log.FileManager$FileMode READ_MODE>;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void openFileHandle(com.sleepycat.je.log.FileHandle,com.sleepycat.je.log.FileManager$FileMode,com.sleepycat.je.log.FileHandle)>(fileHandle#9, $r9, existingHandle);

     label17:
        $r10 = virtualinvoke fileHandle#9.<com.sleepycat.je.log.FileHandle: java.io.RandomAccessFile getFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 != null goto label18;

        virtualinvoke fileHandle#9.<com.sleepycat.je.log.FileHandle: void release()>();

        goto label01;

     label18:
        goto label21;

     label19:
        $r11 := @caughtexception;

        e#69 = $r11;

        throw e#69;

     label20:
        $r12 := @caughtexception;

        e#72 = $r12;

        $r13 = new com.sleepycat.je.EnvironmentFailureException;

        $r14 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r15 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_READ>;

        specialinvoke $r13.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r14, $r15, e#72);

        throw $r13;

     label21:
        return fileHandle#9;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.io.FileNotFoundException from label01 to label18 with label19;
        catch java.io.IOException from label01 to label18 with label20;
    }

    private com.sleepycat.je.log.FileHandle addFileHandle(java.lang.Long) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.Long fileNum;
        com.sleepycat.je.log.FileHandle fileHandle, $r0;
        com.sleepycat.je.dbi.EnvironmentImpl $r1;
        long $l0, $l1;
        java.lang.String $r2;
        com.sleepycat.je.log.FileManager$FileCache $r3;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: java.lang.Long;

        $r0 = new com.sleepycat.je.log.FileHandle;

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $l0 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $l1 = virtualinvoke fileNum.<java.lang.Long: long longValue()>();

        $r2 = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileNumberString(long)>($l1);

        specialinvoke $r0.<com.sleepycat.je.log.FileHandle: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,long,java.lang.String)>($r1, $l0, $r2);

        fileHandle = $r0;

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileCache fileCache>;

        staticinvoke <com.sleepycat.je.log.FileManager$FileCache: void access$100(com.sleepycat.je.log.FileManager$FileCache,java.lang.Long,com.sleepycat.je.log.FileHandle)>($r3, fileNum, fileHandle);

        virtualinvoke fileHandle.<com.sleepycat.je.log.FileHandle: void latch()>();

        return fileHandle;
    }

    public java.lang.Long getLastFileNum()
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.Long $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.Long getFileNum(boolean)>(0);

        return $r0;
    }

    private java.lang.Long getFileNum(boolean)
    {
        com.sleepycat.je.log.FileManager this;
        boolean first;
        java.lang.String[] names, $r0;
        int $i0, index#8, $i1;
        java.lang.String $r1;
        java.lang.Long $r2;

        this := @this: com.sleepycat.je.log.FileManager;

        first := @parameter0: boolean;

        $r0 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_SUFFIXES>;

        names = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNames(java.lang.String[])>($r0);

        $i0 = lengthof names;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        return null;

     label1:
        index#8 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(first);

        if first != 0 goto label2;

        $i1 = lengthof names;

        index#8 = $i1 - 1;

     label2:
        $r1 = names[index#8];

        $r2 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.Long getNumFromName(java.lang.String)>($r1);

        return $r2;
    }

    void readFromFile(java.io.RandomAccessFile, java.nio.ByteBuffer, long, long) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file;
        java.nio.ByteBuffer readBuffer;
        long offset, fileNo;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        readBuffer := @parameter1: java.nio.ByteBuffer;

        offset := @parameter2: long;

        fileNo := @parameter3: long;

        virtualinvoke this.<com.sleepycat.je.log.FileManager: boolean readFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long,boolean)>(file, readBuffer, offset, fileNo, 1);

        return;
    }

    boolean readFromFile(java.io.RandomAccessFile, java.nio.ByteBuffer, long, long, boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file;
        java.nio.ByteBuffer readBuffer;
        long offset, fileNo, $l0;
        boolean dataKnownToBeInFile, $z0, $z1, readThisFile#11, $z3;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r0;
        byte $b1;
        java.lang.Throwable $r1, e#26, $r4, e#34;
        com.sleepycat.je.ThreadInterruptedException $r2;
        com.sleepycat.je.dbi.EnvironmentImpl $r3, $r6;
        com.sleepycat.je.EnvironmentFailureException $r5;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r7;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        readBuffer := @parameter1: java.nio.ByteBuffer;

        offset := @parameter2: long;

        fileNo := @parameter3: long;

        dataKnownToBeInFile := @parameter4: boolean;

     label01:
        $z0 = this.<com.sleepycat.je.log.FileManager: boolean useWriteQueue>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        $z1 = virtualinvoke $r0.<com.sleepycat.je.log.FileManager$LogEndFileDescriptor: boolean checkWriteCache(java.nio.ByteBuffer,long,long)>(readBuffer, offset, fileNo);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label03;

     label02:
        return 1;

     label03:
        readThisFile#11 = 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dataKnownToBeInFile);

        if dataKnownToBeInFile != 0 goto label06;

        $l0 = virtualinvoke file.<java.io.RandomAccessFile: long length()>();

        $b1 = offset cmp $l0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 >= 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        readThisFile#11 = $z3;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(readThisFile#11);

        if readThisFile#11 == 0 goto label08;

        specialinvoke this.<com.sleepycat.je.log.FileManager: void readFromFileInternal(java.io.RandomAccessFile,java.nio.ByteBuffer,long,long)>(file, readBuffer, offset, fileNo);

     label07:
        return 1;

     label08:
        return 0;

     label09:
        $r1 := @caughtexception;

        e#26 = $r1;

        $r2 = new com.sleepycat.je.ThreadInterruptedException;

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        specialinvoke $r2.<com.sleepycat.je.ThreadInterruptedException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,java.lang.Throwable)>($r3, "Channel closed, may be due to thread interrupt", e#26);

        throw $r2;

     label10:
        $r4 := @caughtexception;

        e#34 = $r4;

        $r5 = new com.sleepycat.je.EnvironmentFailureException;

        $r6 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r7 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_READ>;

        specialinvoke $r5.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r6, $r7, e#34);

        throw $r5;

        catch java.nio.channels.ClosedChannelException from label01 to label02 with label09;
        catch java.nio.channels.ClosedChannelException from label03 to label07 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label07 with label10;
    }

    private void readFromFileInternal(java.io.RandomAccessFile, java.nio.ByteBuffer, long, long) throws java.io.IOException
    {
        com.sleepycat.je.log.FileManager this;
        java.io.RandomAccessFile file, l7;
        java.nio.ByteBuffer readBuffer;
        long offset, fileNum, $l1, $l3, $l4, $l5, $l7, $l8, $l12, $l13;
        int pos, size, bytesRead, $i0, $i9, $i10, $i11;
        java.lang.Throwable l11, $r7;
        byte $b2, $b6;
        com.sleepycat.je.utilint.LongStat $r1, $r2, $r3, $r4;
        byte[] $r5;

        this := @this: com.sleepycat.je.log.FileManager;

        file := @parameter0: java.io.RandomAccessFile;

        readBuffer := @parameter1: java.nio.ByteBuffer;

        offset := @parameter2: long;

        fileNum := @parameter3: long;

        l7 = file;

        entermonitor file;

     label1:
        pos = virtualinvoke readBuffer.<java.nio.ByteBuffer: int position()>();

        $i0 = virtualinvoke readBuffer.<java.nio.ByteBuffer: int limit()>();

        size = $i0 - pos;

        $l1 = this.<com.sleepycat.je.log.FileManager: long lastFileNumberTouched>;

        $b2 = $l1 cmp fileNum;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 != 0 goto label2;

        $l3 = this.<com.sleepycat.je.log.FileManager: long lastFileTouchedOffset>;

        $l4 = offset - $l3;

        $l5 = staticinvoke <java.lang.Math: long abs(long)>($l4);

        $b6 = $l5 cmp 1048576L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 >= 0 goto label2;

        $r1 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialReads>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.LongStat: void increment()>();

        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nSequentialReadBytes>;

        $l7 = (long) size;

        virtualinvoke $r2.<com.sleepycat.je.utilint.LongStat: void add(long)>($l7);

        goto label3;

     label2:
        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomReads>;

        virtualinvoke $r3.<com.sleepycat.je.utilint.LongStat: void increment()>();

        $r4 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nRandomReadBytes>;

        $l8 = (long) size;

        virtualinvoke $r4.<com.sleepycat.je.utilint.LongStat: void add(long)>($l8);

     label3:
        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>(offset);

        $r5 = virtualinvoke readBuffer.<java.nio.ByteBuffer: byte[] array()>();

        $i9 = virtualinvoke readBuffer.<java.nio.ByteBuffer: int arrayOffset()>();

        $i10 = pos + $i9;

        bytesRead = virtualinvoke file.<java.io.RandomAccessFile: int read(byte[],int,int)>($r5, $i10, size);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bytesRead);

        if bytesRead <= 0 goto label4;

        $i11 = pos + bytesRead;

        virtualinvoke readBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i11);

     label4:
        this.<com.sleepycat.je.log.FileManager: long lastFileNumberTouched> = fileNum;

        $l12 = (long) bytesRead;

        $l13 = offset + $l12;

        this.<com.sleepycat.je.log.FileManager: long lastFileTouchedOffset> = $l13;

        exitmonitor l7;

     label5:
        goto label9;

     label6:
        $r7 := @caughtexception;

     label7:
        l11 = $r7;

        exitmonitor l7;

     label8:
        throw l11;

     label9:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public long getCurrentFileNum()
    {
        com.sleepycat.je.log.FileManager this;
        long $l0;

        this := @this: com.sleepycat.je.log.FileManager;

        $l0 = this.<com.sleepycat.je.log.FileManager: long currentFileNum>;

        return $l0;
    }

    public void makeInvisible(long, java.util.List)
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum, $l1, $l2, $l4, $l5, $l6, $l7, $l8, $l9;
        java.util.List lsns;
        java.io.RandomAccessFile file;
        java.util.Iterator l6;
        java.lang.Long lsn;
        int entryFlagsOffset, $i0;
        byte flags, newFlags, $b3;
        java.lang.Throwable l11, $r46;
        java.io.IOException e, $r30, e#97, $r38, e#112, $r47;
        com.sleepycat.je.log.FileManager$FileMode $r0;
        com.sleepycat.je.log.FileHandle handle#10;
        com.sleepycat.je.log.ChecksumException $r1, e#12;
        com.sleepycat.je.EnvironmentFailureException $r2, $r11, $r20, $r31, $r39, $r48;
        com.sleepycat.je.dbi.EnvironmentImpl $r3, $r12, $r21, $r32, $r40, $r49;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r4, $r13, $r22, $r33, $r41, $r50;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r14, $r15, $r16, $r17, $r23, $r24, $r26, $r27, $r28, $r34, $r35, $r36, $r42, $r43, $r44, $r51, $r52, $r53;
        java.lang.String $r9, $r18, $r25, $r29, $r37, $r45, $r54;
        java.io.FileNotFoundException $r10, e#29;
        boolean $z0;
        java.lang.Object $r19;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        lsns := @parameter1: java.util.List;

        $i0 = interfaceinvoke lsns.<java.util.List: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label01;

        return;

     label01:
        $r0 = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileMode getAppropriateReadWriteMode()>();

        handle#10 = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileHandle makeFileHandle(long,com.sleepycat.je.log.FileManager$FileMode)>(fileNum, $r0);

     label02:
        goto label05;

     label03:
        $r1 := @caughtexception;

        e#12 = $r1;

        $r2 = new com.sleepycat.je.EnvironmentFailureException;

        $r3 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r4 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_CHECKSUM>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening file ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for invisible marking ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r3, $r4, $r9, e#12);

        throw $r2;

     label04:
        $r10 := @caughtexception;

        e#29 = $r10;

        $r11 = new com.sleepycat.je.EnvironmentFailureException;

        $r12 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r13 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_FILE_NOT_FOUND>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening file ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for invisible marking ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r12, $r13, $r18, e#29);

        throw $r11;

     label05:
        file = virtualinvoke handle#10.<com.sleepycat.je.log.FileHandle: java.io.RandomAccessFile getFile()>();

     label06:
        l6 = interfaceinvoke lsns.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label09;

        $r19 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        lsn = (java.lang.Long) $r19;

        $l1 = virtualinvoke lsn.<java.lang.Long: long longValue()>();

        $l2 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l1);

        $b3 = $l2 cmp fileNum;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 == 0 goto label08;

        $r20 = new com.sleepycat.je.EnvironmentFailureException;

        $r21 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r22 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason UNEXPECTED_STATE>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LSN of ");

        $l4 = virtualinvoke lsn.<java.lang.Long: long longValue()>();

        $r25 = staticinvoke <com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>($l4);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not match file number");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>($r21, $r22, $r29);

        throw $r20;

     label08:
        $l5 = virtualinvoke lsn.<java.lang.Long: long longValue()>();

        $l6 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileOffset(long)>($l5);

        $l7 = $l6 + 5L;

        entryFlagsOffset = (int) $l7;

        $l8 = (long) entryFlagsOffset;

        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>($l8);

        flags = virtualinvoke file.<java.io.RandomAccessFile: byte readByte()>();

        newFlags = staticinvoke <com.sleepycat.je.log.LogEntryHeader: byte makeInvisible(byte)>(flags);

        $l9 = (long) entryFlagsOffset;

        virtualinvoke file.<java.io.RandomAccessFile: void seek(long)>($l9);

        virtualinvoke file.<java.io.RandomAccessFile: void writeByte(int)>(newFlags);

        goto label07;

     label09:
        virtualinvoke file.<java.io.RandomAccessFile: void close()>();

     label10:
        goto label19;

     label11:
        $r30 := @caughtexception;

        e#97 = $r30;

        $r31 = new com.sleepycat.je.EnvironmentFailureException;

        $r32 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r33 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing after invisibility cloaking: file ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r32, $r33, $r37, e#97);

        throw $r31;

     label12:
        $r38 := @caughtexception;

     label13:
        e#112 = $r38;

        $r39 = new com.sleepycat.je.EnvironmentFailureException;

        $r40 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r41 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flipping invisibility in file ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r40, $r41, $r45, e#112);

        throw $r39;

     label14:
        $r46 := @caughtexception;

        l11 = $r46;

     label15:
        virtualinvoke file.<java.io.RandomAccessFile: void close()>();

     label16:
        goto label18;

     label17:
        $r47 := @caughtexception;

        e = $r47;

        $r48 = new com.sleepycat.je.EnvironmentFailureException;

        $r49 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r50 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing after invisibility cloaking: file ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r49, $r50, $r54, e);

        throw $r48;

     label18:
        throw l11;

     label19:
        return;

        catch com.sleepycat.je.log.ChecksumException from label01 to label02 with label03;
        catch java.io.FileNotFoundException from label01 to label02 with label04;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label06 to label09 with label12;
        catch java.lang.Throwable from label06 to label09 with label14;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label15 with label14;
    }

    public void force(java.util.Set)
    {
        com.sleepycat.je.log.FileManager this;
        java.util.Set fileNums;
        java.util.Iterator l2;
        long fileNum;
        com.sleepycat.je.log.FileHandle handle;
        java.lang.Throwable l7, $r37;
        java.io.IOException e, $r5, e#26, $r29, e#71, $r38;
        boolean $z0;
        java.lang.Object $r0;
        java.lang.Long $r1;
        java.io.RandomAccessFile file#10;
        com.sleepycat.je.log.FileManager$FileMode $r2;
        java.nio.channels.FileChannel $r3;
        com.sleepycat.je.utilint.LongStat $r4;
        com.sleepycat.je.EnvironmentFailureException $r6, $r14, $r22, $r30, $r39;
        com.sleepycat.je.dbi.EnvironmentImpl $r7, $r15, $r23, $r31, $r40;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r8, $r16, $r24, $r32, $r41;
        java.lang.StringBuilder $r9, $r10, $r11, $r17, $r18, $r19, $r25, $r26, $r27, $r33, $r34, $r35, $r42, $r43, $r44;
        java.lang.String $r12, $r20, $r28, $r36, $r45;
        java.io.FileNotFoundException $r13, e#41;
        com.sleepycat.je.log.ChecksumException $r21, e#56;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNums := @parameter0: java.util.Set;

        l2 = interfaceinvoke fileNums.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label18;

        $r0 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.Long) $r0;

        fileNum = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        file#10 = null;

     label02:
        $r2 = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileMode getAppropriateReadWriteMode()>();

        handle = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileHandle makeFileHandle(long,com.sleepycat.je.log.FileManager$FileMode)>(fileNum, $r2);

        file#10 = virtualinvoke handle.<com.sleepycat.je.log.FileHandle: java.io.RandomAccessFile getFile()>();

        $r3 = virtualinvoke file#10.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        virtualinvoke $r3.<java.nio.channels.FileChannel: void force(boolean)>(0);

        $r4 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.utilint.LongStat nLogFSyncs>;

        virtualinvoke $r4.<com.sleepycat.je.utilint.LongStat: void increment()>();

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(file#10);

        if file#10 == null goto label17;

     label04:
        virtualinvoke file#10.<java.io.RandomAccessFile: void close()>();

     label05:
        goto label17;

     label06:
        $r5 := @caughtexception;

        e#26 = $r5;

        $r6 = new com.sleepycat.je.EnvironmentFailureException;

        $r7 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r8 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invisible fsyncing file ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r7, $r8, $r12, e#26);

        throw $r6;

     label07:
        $r13 := @caughtexception;

     label08:
        e#41 = $r13;

        $r14 = new com.sleepycat.je.EnvironmentFailureException;

        $r15 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r16 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_FILE_NOT_FOUND>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invisible fsyncing file ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r15, $r16, $r20, e#41);

        throw $r14;

     label09:
        $r21 := @caughtexception;

        e#56 = $r21;

        $r22 = new com.sleepycat.je.EnvironmentFailureException;

        $r23 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r24 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_CHECKSUM>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invisible fsyncing file ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r23, $r24, $r28, e#56);

        throw $r22;

     label10:
        $r29 := @caughtexception;

        e#71 = $r29;

        $r30 = new com.sleepycat.je.EnvironmentFailureException;

        $r31 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r32 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invisible fsyncing file ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r31, $r32, $r36, e#71);

        throw $r30;

     label11:
        $r37 := @caughtexception;

        l7 = $r37;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(file#10);

        if file#10 == null goto label16;

     label13:
        virtualinvoke file#10.<java.io.RandomAccessFile: void close()>();

     label14:
        goto label16;

     label15:
        $r38 := @caughtexception;

        e = $r38;

        $r39 = new com.sleepycat.je.EnvironmentFailureException;

        $r40 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r41 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_WRITE>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invisible fsyncing file ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileNum);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String,java.lang.Throwable)>($r40, $r41, $r45, e);

        throw $r39;

     label16:
        throw l7;

     label17:
        goto label01;

     label18:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label02 to label03 with label07;
        catch com.sleepycat.je.log.ChecksumException from label02 to label03 with label09;
        catch java.io.IOException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label08 to label12 with label11;
    }

    public void startFileCacheWarmer(long)
    {
        com.sleepycat.je.log.FileManager this;
        long recoveryStartLsn, $l0;
        com.sleepycat.je.dbi.DbConfigManager cm;
        int warmUpSize, bufSize;
        boolean $z0;
        com.sleepycat.je.log.FileCacheWarmer $r0, $r5, $r7;
        java.lang.AssertionError $r1;
        com.sleepycat.je.dbi.EnvironmentImpl $r2, $r6;
        com.sleepycat.je.config.IntConfigParam $r3, $r4;

        this := @this: com.sleepycat.je.log.FileManager;

        recoveryStartLsn := @parameter0: long;

        $z0 = <com.sleepycat.je.log.FileManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileCacheWarmer fileCacheWarmer>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        cm = virtualinvoke $r2.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager getConfigManager()>();

        $r3 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_FILE_WARM_UP_SIZE>;

        warmUpSize = virtualinvoke cm.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(warmUpSize);

        if warmUpSize != 0 goto label2;

        return;

     label2:
        $r4 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam LOG_FILE_WARM_UP_BUF_SIZE>;

        bufSize = virtualinvoke cm.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r4);

        $r5 = new com.sleepycat.je.log.FileCacheWarmer;

        $r6 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $l0 = this.<com.sleepycat.je.log.FileManager: long lastUsedLsn>;

        specialinvoke $r5.<com.sleepycat.je.log.FileCacheWarmer: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,long,long,int,int)>($r6, recoveryStartLsn, $l0, warmUpSize, bufSize);

        this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileCacheWarmer fileCacheWarmer> = $r5;

        $r7 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileCacheWarmer fileCacheWarmer>;

        virtualinvoke $r7.<com.sleepycat.je.log.FileCacheWarmer: void start()>();

        return;
    }

    public void setLastPosition(long, long, long)
    {
        com.sleepycat.je.log.FileManager this;
        long nextAvailableLsn, lastUsedLsn, prevOffset, $l0, $l1, $l2;
        java.util.Map $r0;
        java.lang.Long $r1, $r2;

        this := @this: com.sleepycat.je.log.FileManager;

        nextAvailableLsn := @parameter0: long;

        lastUsedLsn := @parameter1: long;

        prevOffset := @parameter2: long;

        this.<com.sleepycat.je.log.FileManager: long lastUsedLsn> = lastUsedLsn;

        $r0 = this.<com.sleepycat.je.log.FileManager: java.util.Map perFileLastUsedLsn>;

        $l0 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>(lastUsedLsn);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(lastUsedLsn);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn> = nextAvailableLsn;

        $l1 = this.<com.sleepycat.je.log.FileManager: long nextAvailableLsn>;

        $l2 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long getFileNumber(long)>($l1);

        this.<com.sleepycat.je.log.FileManager: long currentFileNum> = $l2;

        this.<com.sleepycat.je.log.FileManager: long prevOffset> = prevOffset;

        return;
    }

    public java.lang.Long[] getAllFileNumbers()
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String[] names, $r0;
        java.lang.Long[] nums;
        java.lang.String name, $r8;
        long num, $l4, $l6, $l7;
        int dbEnvDataDirsIdx, $i0, i#8, $i1, $i2, $i3, $i5, $i9;
        java.lang.Long $r1;
        byte $b8;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        com.sleepycat.je.EnvironmentFailureException $r9;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_SUFFIXES>;

        names = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNames(java.lang.String[])>($r0);

        $i0 = lengthof names;

        nums = newarray (java.lang.Long)[$i0];

        i#8 = 0;

     label1:
        $i1 = lengthof nums;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if i#8 >= $i1 goto label3;

        name = names[i#8];

        $r1 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.Long getNumFromName(java.lang.String)>(name);

        nums[i#8] = $r1;

        num = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $i2 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 == 0 goto label2;

        $i3 = specialinvoke this.<com.sleepycat.je.log.FileManager: int getDataDirIndexFromName(java.lang.String)>(name);

        dbEnvDataDirsIdx = $i3 - 1;

        $l4 = (long) dbEnvDataDirsIdx;

        $i5 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        $l6 = (long) $i5;

        $l7 = num % $l6;

        $b8 = $l4 cmp $l7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b8);

        if $b8 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found file ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it should have been in data directory ");

        $i9 = dbEnvDataDirsIdx + 1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Perhaps it was moved or restored incorrectly?");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r8);

        throw $r9;

     label2:
        i#8 = i#8 + 1;

        goto label1;

     label3:
        return nums;
    }

    private int getDataDirIndexFromName(java.lang.String)
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.String fileName, dataDir, $r0, $r1, $r2;
        int dataDirEnd, $i0, $i1, $i2, $i3;
        java.lang.Integer $r3;

        this := @this: com.sleepycat.je.log.FileManager;

        fileName := @parameter0: java.lang.String;

        $i0 = this.<com.sleepycat.je.log.FileManager: int nDataDirs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label1;

        return -1;

     label1:
        $r0 = <java.io.File: java.lang.String separator>;

        dataDirEnd = virtualinvoke fileName.<java.lang.String: int lastIndexOf(java.lang.String)>($r0);

        dataDir = virtualinvoke fileName.<java.lang.String: java.lang.String substring(int,int)>(0, dataDirEnd);

        $r1 = "data";

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = virtualinvoke dataDir.<java.lang.String: java.lang.String substring(int)>($i1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i3;
    }

    public java.lang.Long getFirstFileNum()
    {
        com.sleepycat.je.log.FileManager this;
        java.lang.Long $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        $r0 = specialinvoke this.<com.sleepycat.je.log.FileManager: java.lang.Long getFileNum(boolean)>(1);

        return $r0;
    }

    public java.lang.Long getFollowingFileNum(long, boolean)
    {
        com.sleepycat.je.log.FileManager this;
        long curFile, tryFile#9;
        boolean forward, $z0, foundTarget#38;
        java.lang.String tryName, searchName, $r4;
        java.lang.String[] names, $r2;
        byte $b0, $b1;
        java.io.File $r0;
        java.lang.Long $r1, $r5;
        java.util.Comparator $r3;
        int foundIdx#36, foundIdx#41, $i2, $i3;

        this := @this: com.sleepycat.je.log.FileManager;

        curFile := @parameter0: long;

        forward := @parameter1: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(forward);

        if forward == 0 goto label02;

        $b0 = curFile cmp 9223372036854775807L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label01;

        return null;

     label01:
        tryFile#9 = curFile + 1L;

        goto label04;

     label02:
        $b1 = curFile cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 > 0 goto label03;

        return null;

     label03:
        tryFile#9 = curFile - 1L;

     label04:
        tryName = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String getFullFileName(long,java.lang.String)>(tryFile#9, ".jdb");

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(tryName);

        $z0 = virtualinvoke $r0.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label05;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(tryFile#9);

        return $r1;

     label05:
        $r2 = <com.sleepycat.je.log.FileManager: java.lang.String[] JE_SUFFIXES>;

        names = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String[] listFileNames(java.lang.String[])>($r2);

        searchName = staticinvoke <com.sleepycat.je.log.FileManager: java.lang.String getFileName(long,java.lang.String)>(curFile, ".jdb");

        $r3 = <com.sleepycat.je.log.FileManager: java.util.Comparator stringComparator>;

        foundIdx#36 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator)>(names, searchName, $r3);

        foundTarget#38 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(foundIdx#36);

        if foundIdx#36 < 0 goto label07;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(forward);

        if forward == 0 goto label06;

        foundIdx#41 = foundIdx#36 + 1;

        goto label08;

     label06:
        foundIdx#41 = foundIdx#36 + -1;

        goto label08;

     label07:
        $i2 = foundIdx#36 + 1;

        foundIdx#41 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(forward);

        if forward != 0 goto label08;

        foundIdx#41 = foundIdx#41 + -1;

     label08:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(forward);

        if forward == 0 goto label09;

        $i3 = lengthof names;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(foundIdx#41);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if foundIdx#41 >= $i3 goto label09;

        foundTarget#38 = 1;

        goto label10;

     label09:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(forward);

        if forward != 0 goto label10;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(foundIdx#41);

        if foundIdx#41 <= -1 goto label10;

        foundTarget#38 = 1;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(foundTarget#38);

        if foundTarget#38 == 0 goto label11;

        $r4 = names[foundIdx#41];

        $r5 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.Long getNumFromName(java.lang.String)>($r4);

        return $r5;

     label11:
        return null;
    }

    long getFileHeaderPrevOffset(long) throws com.sleepycat.je.log.ChecksumException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum, $l0, $l1;
        com.sleepycat.je.log.entry.LogEntry headerEntry;
        com.sleepycat.je.log.FileHeader header;
        java.io.FileNotFoundException e, $r3;
        com.sleepycat.je.dbi.EnvironmentImpl $r0, $r5;
        com.sleepycat.je.log.LogManager $r1;
        java.lang.Object $r2;
        com.sleepycat.je.EnvironmentFailureException $r4;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r6;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

     label1:
        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        $l0 = staticinvoke <com.sleepycat.je.utilint.DbLsn: long makeLsn(long,int)>(fileNum, 0);

        headerEntry = virtualinvoke $r1.<com.sleepycat.je.log.LogManager: com.sleepycat.je.log.entry.LogEntry getLogEntryAllowChecksumException(long)>($l0);

        $r2 = interfaceinvoke headerEntry.<com.sleepycat.je.log.entry.LogEntry: java.lang.Object getMainItem()>();

        header = (com.sleepycat.je.log.FileHeader) $r2;

        $l1 = virtualinvoke header.<com.sleepycat.je.log.FileHeader: long getLastEntryInPrevFileOffset()>();

     label2:
        return $l1;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new com.sleepycat.je.EnvironmentFailureException;

        $r5 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r6 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_FILE_NOT_FOUND>;

        specialinvoke $r4.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r5, $r6, e);

        throw $r4;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public java.lang.String getFullFileName(long)
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        java.lang.String $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        $r0 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.lang.String getFullFileName(long,java.lang.String)>(fileNum, ".jdb");

        return $r0;
    }

    void syncLogEndAndFinishFile() throws com.sleepycat.je.DatabaseException, java.io.IOException
    {
        com.sleepycat.je.log.FileManager this;
        boolean $z0;
        com.sleepycat.je.log.FileManager$LogEndFileDescriptor $r0;

        this := @this: com.sleepycat.je.log.FileManager;

        $z0 = this.<com.sleepycat.je.log.FileManager: boolean syncAtFileEnd>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        virtualinvoke this.<com.sleepycat.je.log.FileManager: void syncLogEnd()>();

     label1:
        $r0 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$LogEndFileDescriptor endOfLog>;

        virtualinvoke $r0.<com.sleepycat.je.log.FileManager$LogEndFileDescriptor: void close()>();

        return;
    }

    public boolean renameFile(long, java.lang.String) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum;
        java.lang.String newSuffix;
        java.io.File $r0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        newSuffix := @parameter1: java.lang.String;

        $r0 = virtualinvoke this.<com.sleepycat.je.log.FileManager: java.io.File renameFile(long,java.lang.String,java.lang.String)>(fileNum, newSuffix, null);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void truncateSingleFile(long, long) throws java.io.IOException, com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.log.FileManager this;
        long fileNum, offset;
        com.sleepycat.je.log.FileHandle handle;
        java.io.RandomAccessFile file;
        java.lang.Throwable l7, $r3;
        com.sleepycat.je.log.ChecksumException e, $r4;
        com.sleepycat.je.log.FileManager$FileMode $r0;
        java.nio.channels.FileChannel $r1;
        boolean $z0;
        com.sleepycat.je.EnvironmentFailureException $r5;
        com.sleepycat.je.dbi.EnvironmentImpl $r6;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r7;

        this := @this: com.sleepycat.je.log.FileManager;

        fileNum := @parameter0: long;

        offset := @parameter1: long;

     label01:
        $r0 = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileManager$FileMode getAppropriateReadWriteMode()>();

        handle = specialinvoke this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.log.FileHandle makeFileHandle(long,com.sleepycat.je.log.FileManager$FileMode)>(fileNum, $r0);

        file = virtualinvoke handle.<com.sleepycat.je.log.FileHandle: java.io.RandomAccessFile getFile()>();

     label02:
        $r1 = virtualinvoke file.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        virtualinvoke $r1.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(offset);

     label03:
        virtualinvoke file.<java.io.RandomAccessFile: void close()>();

        goto label07;

     label04:
        $r3 := @caughtexception;

     label05:
        l7 = $r3;

     label06:
        virtualinvoke file.<java.io.RandomAccessFile: void close()>();

        throw l7;

     label07:
        $z0 = virtualinvoke handle.<com.sleepycat.je.log.FileHandle: boolean isOldHeaderVersion()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label08;

        this.<com.sleepycat.je.log.FileManager: boolean forceNewFile> = 1;

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        e = $r4;

        $r5 = new com.sleepycat.je.EnvironmentFailureException;

        $r6 = this.<com.sleepycat.je.log.FileManager: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r7 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_CHECKSUM>;

        specialinvoke $r5.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r6, $r7, e);

        throw $r5;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch com.sleepycat.je.log.ChecksumException from label01 to label08 with label09;
    }


