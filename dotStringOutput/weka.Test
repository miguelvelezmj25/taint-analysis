digraph main {
"args#1 := @parameter0: java.lang.String[] {223362488}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>() {209212864}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>() {209212864}" -> "$r0 = <java.lang.System: java.io.PrintStream out> {1381582003}";
"$r0 = <java.lang.System: java.io.PrintStream out> {1381582003}" -> "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Original\") {974022363}";
"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Original\") {974022363}" -> "$r1 = args#1[0] {683294901}";
"$r1 = args#1[0] {683294901}" -> "$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1) {1632355271}";
"$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1) {1632355271}" -> "$z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>() {358237026}";
"$z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>() {358237026}" -> "$z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFOLDS(boolean)>($z0) {1622239628}";
"$z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFOLDS(boolean)>($z0) {1622239628}" -> "<weka.Test: boolean FOLDS> = $z1 {452211399}";
"<weka.Test: boolean FOLDS> = $z1 {452211399}" -> "$r3 = args#1[1] {160330209}";
"$r3 = args#1[1] {160330209}" -> "$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3) {852957213}";
"$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3) {852957213}" -> "$z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>() {1667619397}";
"$z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>() {1667619397}" -> "$z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBINARYSPLITS(boolean)>($z2) {1158854207}";
"$z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBINARYSPLITS(boolean)>($z2) {1158854207}" -> "<weka.Test: boolean BINARYSPLITS> = $z3 {1063900677}";
"<weka.Test: boolean BINARYSPLITS> = $z3 {1063900677}" -> "$r5 = args#1[2] {679319404}";
"$r5 = args#1[2] {679319404}" -> "$r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5) {1498785176}";
"$r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5) {1498785176}" -> "$z4 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>() {1292199097}";
"$z4 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>() {1292199097}" -> "$z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCONFIDENCEFACTOR(boolean)>($z4) {1177083408}";
"$z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCONFIDENCEFACTOR(boolean)>($z4) {1177083408}" -> "<weka.Test: boolean CONFIDENCEFACTOR> = $z5 {44754766}";
"<weka.Test: boolean CONFIDENCEFACTOR> = $z5 {44754766}" -> "$r7 = args#1[3] {272231781}";
"$r7 = args#1[3] {272231781}" -> "$r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r7) {1174202555}";
"$r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r7) {1174202555}" -> "$z6 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>() {214815529}";
"$z6 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>() {214815529}" -> "$z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDONOTMAKESPLITPOINTACTUALVALUE(boolean)>($z6) {394181462}";
"$z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDONOTMAKESPLITPOINTACTUALVALUE(boolean)>($z6) {394181462}" -> "<weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> = $z7 {1223900697}";
"<weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> = $z7 {1223900697}" -> "$r9 = args#1[4] {1788396085}";
"$r9 = args#1[4] {1788396085}" -> "$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) {994720393}";
"$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) {994720393}" -> "$z8 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() {351924146}";
"$z8 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() {351924146}" -> "$z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMINNUM(boolean)>($z8) {1866441786}";
"$z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMINNUM(boolean)>($z8) {1866441786}" -> "<weka.Test: boolean MINNUM> = $z9 {1125800578}";
"<weka.Test: boolean MINNUM> = $z9 {1125800578}" -> "$r11 = args#1[5] {1614623986}";
"$r11 = args#1[5] {1614623986}" -> "$r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11) {1902296125}";
"$r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11) {1902296125}" -> "$z10 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() {757092965}";
"$z10 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() {757092965}" -> "$z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREDUCEDERRORPRUNING(boolean)>($z10) {1433297339}";
"$z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREDUCEDERRORPRUNING(boolean)>($z10) {1433297339}" -> "<weka.Test: boolean REDUCEDERRORPRUNING> = $z11 {1551713600}";
"<weka.Test: boolean REDUCEDERRORPRUNING> = $z11 {1551713600}" -> "$r13 = args#1[6] {826511176}";
"$r13 = args#1[6] {826511176}" -> "$r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) {128097125}";
"$r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) {128097125}" -> "$z12 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() {1796863390}";
"$z12 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() {1796863390}" -> "$z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSEED(boolean)>($z12) {1309131984}";
"$z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSEED(boolean)>($z12) {1309131984}" -> "<weka.Test: boolean SEED> = $z13 {1662204823}";
"<weka.Test: boolean SEED> = $z13 {1662204823}" -> "$r15 = args#1[7] {607726782}";
"$r15 = args#1[7] {607726782}" -> "$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15) {1577874477}";
"$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15) {1577874477}" -> "$z14 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>() {1629719082}";
"$z14 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>() {1629719082}" -> "$z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUNPRUNED(boolean)>($z14) {2000689346}";
"$z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUNPRUNED(boolean)>($z14) {2000689346}" -> "<weka.Test: boolean UNPRUNED> = $z15 {443647560}";
"<weka.Test: boolean UNPRUNED> = $z15 {443647560}" -> "$r17 = args#1[8] {765398444}";
"$r17 = args#1[8] {765398444}" -> "$r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r17) {1003130257}";
"$r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r17) {1003130257}" -> "$z16 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>() {363124291}";
"$z16 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>() {363124291}" -> "$z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUSEMDL(boolean)>($z16) {992324492}";
"$z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUSEMDL(boolean)>($z16) {992324492}" -> "<weka.Test: boolean USEMDL> = $z17 {1845637929}";
"<weka.Test: boolean USEMDL> = $z17 {1845637929}" -> "$r19 = args#1[9] {604107203}";
"$r19 = args#1[9] {604107203}" -> "$r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r19) {1533351185}";
"$r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r19) {1533351185}" -> "$z18 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>() {102288229}";
"$z18 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>() {102288229}" -> "$z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBATCHSIZE(boolean)>($z18) {1176012386}";
"$z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBATCHSIZE(boolean)>($z18) {1176012386}" -> "<weka.Test: boolean BATCHSIZE> = $z19 {1841096843}";
"<weka.Test: boolean BATCHSIZE> = $z19 {1841096843}" -> "$r21 = args#1[10] {1554559186}";
"$r21 = args#1[10] {1554559186}" -> "$r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r21) {1457185660}";
"$r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r21) {1457185660}" -> "$z20 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>() {1568600866}";
"$z20 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>() {1568600866}" -> "$z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNOCHECKCAPABILITIES(boolean)>($z20) {186574941}";
"$z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNOCHECKCAPABILITIES(boolean)>($z20) {186574941}" -> "<weka.Test: boolean NOCHECKCAPABILITIES> = $z21 {313128908}";
"<weka.Test: boolean NOCHECKCAPABILITIES> = $z21 {313128908}" -> "$r23 = args#1[11] {1157917219}";
"$r23 = args#1[11] {1157917219}" -> "$r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r23) {407827160}";
"$r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r23) {407827160}" -> "$z22 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>() {1120055344}";
"$z22 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>() {1120055344}" -> "$z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNUMDECIMAL(boolean)>($z22) {1517578179}";
"$z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNUMDECIMAL(boolean)>($z22) {1517578179}" -> "<weka.Test: boolean NUMDECIMAL> = $z23 {1019698140}";
"<weka.Test: boolean NUMDECIMAL> = $z23 {1019698140}" -> "args#78 = newarray (java.lang.String)[2] {2111306480}";
"args#78 = newarray (java.lang.String)[2] {2111306480}" -> "args#78[0] = \"-t\" {1953048520}";
"args#78[0] = \"-t\" {1953048520}" -> "args#78[1] = \"/Users/mvelezce/Documents/Programming/Machine Learning/Projects/turtlebot-configurations-validity/datasets/dataset_cross_validation.arff\" {1799027327}";
"args#78[1] = \"/Users/mvelezce/Documents/Programming/Machine Learning/Projects/turtlebot-configurations-validity/datasets/dataset_cross_validation.arff\" {1799027327}" -> "folds#86 = 3 {1866984502}";
"folds#86 = 3 {1866984502}" -> "binarySplits#88 = 0 {1175924472}";
"binarySplits#88 = 0 {1175924472}" -> "confidenceFactor#90 = 0.25F {1959337127}";
"confidenceFactor#90 = 0.25F {1959337127}" -> "doNotMakeSplitPointActualValue#92 = 0 {1787305833}";
"doNotMakeSplitPointActualValue#92 = 0 {1787305833}" -> "minNumObj#94 = 2 {873601874}";
"minNumObj#94 = 2 {873601874}" -> "reducedErrorPruning#96 = 0 {1714582475}";
"reducedErrorPruning#96 = 0 {1714582475}" -> "seed#98 = 1 {145397392}";
"seed#98 = 1 {145397392}" -> "unpruned#100 = 0 {616976221}";
"unpruned#100 = 0 {616976221}" -> "useMDL#102 = 0 {373162012}";
"useMDL#102 = 0 {373162012}" -> "batchSize#104 = \"100\" {1274053275}";
"batchSize#104 = \"100\" {1274053275}" -> "noCheckCapabilities#106 = 0 {1371056265}";
"noCheckCapabilities#106 = 0 {1371056265}" -> "numDecimal#108 = 2 {1349304678}";
"numDecimal#108 = 2 {1349304678}" -> "$z24 = <weka.Test: boolean FOLDS> {1149556482}";
"$z24 = <weka.Test: boolean FOLDS> {1149556482}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z24) {1066273913}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z24) {1066273913}" -> "if $z24 == 0 goto $z25 = <weka.Test: boolean BINARYSPLITS> {1123179289}";
"if $z24 == 0 goto $z25 = <weka.Test: boolean BINARYSPLITS> {1123179289}" -> "folds#86 = 10 {1709140178}";
"if $z24 == 0 goto $z25 = <weka.Test: boolean BINARYSPLITS> {1123179289}" -> "$z25 = <weka.Test: boolean BINARYSPLITS> {125931436}";
"folds#86 = 10 {1709140178}" -> "$z25 = <weka.Test: boolean BINARYSPLITS> {125931436}";
"$z25 = <weka.Test: boolean BINARYSPLITS> {125931436}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z25) {1419734471}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z25) {1419734471}" -> "if $z25 == 0 goto $z26 = <weka.Test: boolean CONFIDENCEFACTOR> {1467688662}";
"if $z25 == 0 goto $z26 = <weka.Test: boolean CONFIDENCEFACTOR> {1467688662}" -> "binarySplits#88 = 1 {1844951053}";
"if $z25 == 0 goto $z26 = <weka.Test: boolean CONFIDENCEFACTOR> {1467688662}" -> "$z26 = <weka.Test: boolean CONFIDENCEFACTOR> {1719711472}";
"binarySplits#88 = 1 {1844951053}" -> "$z26 = <weka.Test: boolean CONFIDENCEFACTOR> {1719711472}";
"$z26 = <weka.Test: boolean CONFIDENCEFACTOR> {1719711472}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26) {266007098}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26) {266007098}" -> "if $z26 == 0 goto $z27 = <weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> {1749246304}";
"if $z26 == 0 goto $z27 = <weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> {1749246304}" -> "confidenceFactor#90 = 0.25F {1293635036}";
"if $z26 == 0 goto $z27 = <weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> {1749246304}" -> "$z27 = <weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> {776951225}";
"confidenceFactor#90 = 0.25F {1293635036}" -> "$z27 = <weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> {776951225}";
"$z27 = <weka.Test: boolean DONOTMAKESPLITPOINTACTUALVALUE> {776951225}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z27) {875096867}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z27) {875096867}" -> "if $z27 == 0 goto $z28 = <weka.Test: boolean MINNUM> {1576298865}";
"if $z27 == 0 goto $z28 = <weka.Test: boolean MINNUM> {1576298865}" -> "doNotMakeSplitPointActualValue#92 = 1 {845137534}";
"if $z27 == 0 goto $z28 = <weka.Test: boolean MINNUM> {1576298865}" -> "$z28 = <weka.Test: boolean MINNUM> {1718206225}";
"doNotMakeSplitPointActualValue#92 = 1 {845137534}" -> "$z28 = <weka.Test: boolean MINNUM> {1718206225}";
"$z28 = <weka.Test: boolean MINNUM> {1718206225}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z28) {1783539445}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z28) {1783539445}" -> "if $z28 == 0 goto $z29 = <weka.Test: boolean REDUCEDERRORPRUNING> {405339468}";
"if $z28 == 0 goto $z29 = <weka.Test: boolean REDUCEDERRORPRUNING> {405339468}" -> "minNumObj#94 = 10 {430771282}";
"if $z28 == 0 goto $z29 = <weka.Test: boolean REDUCEDERRORPRUNING> {405339468}" -> "$z29 = <weka.Test: boolean REDUCEDERRORPRUNING> {848800065}";
"minNumObj#94 = 10 {430771282}" -> "$z29 = <weka.Test: boolean REDUCEDERRORPRUNING> {848800065}";
"$z29 = <weka.Test: boolean REDUCEDERRORPRUNING> {848800065}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z29) {257725635}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z29) {257725635}" -> "if $z29 == 0 goto $z30 = <weka.Test: boolean SEED> {1829429442}";
"if $z29 == 0 goto $z30 = <weka.Test: boolean SEED> {1829429442}" -> "reducedErrorPruning#96 = 1 {593713369}";
"if $z29 == 0 goto $z30 = <weka.Test: boolean SEED> {1829429442}" -> "$z30 = <weka.Test: boolean SEED> {749805653}";
"reducedErrorPruning#96 = 1 {593713369}" -> "$z30 = <weka.Test: boolean SEED> {749805653}";
"$z30 = <weka.Test: boolean SEED> {749805653}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z30) {1219072306}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z30) {1219072306}" -> "if $z30 == 0 goto $z31 = <weka.Test: boolean UNPRUNED> {369613297}";
"if $z30 == 0 goto $z31 = <weka.Test: boolean UNPRUNED> {369613297}" -> "seed#98 = 10 {368463320}";
"if $z30 == 0 goto $z31 = <weka.Test: boolean UNPRUNED> {369613297}" -> "$z31 = <weka.Test: boolean UNPRUNED> {820016315}";
"seed#98 = 10 {368463320}" -> "$z31 = <weka.Test: boolean UNPRUNED> {820016315}";
"$z31 = <weka.Test: boolean UNPRUNED> {820016315}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z31) {272294207}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z31) {272294207}" -> "if $z31 == 0 goto $z32 = <weka.Test: boolean USEMDL> {411106055}";
"if $z31 == 0 goto $z32 = <weka.Test: boolean USEMDL> {411106055}" -> "unpruned#100 = 1 {1078132268}";
"if $z31 == 0 goto $z32 = <weka.Test: boolean USEMDL> {411106055}" -> "$z32 = <weka.Test: boolean USEMDL> {1941180211}";
"unpruned#100 = 1 {1078132268}" -> "$z32 = <weka.Test: boolean USEMDL> {1941180211}";
"$z32 = <weka.Test: boolean USEMDL> {1941180211}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z32) {1362475269}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z32) {1362475269}" -> "if $z32 == 0 goto $z33 = <weka.Test: boolean BATCHSIZE> {1827904129}";
"if $z32 == 0 goto $z33 = <weka.Test: boolean BATCHSIZE> {1827904129}" -> "useMDL#102 = 1 {861843691}";
"if $z32 == 0 goto $z33 = <weka.Test: boolean BATCHSIZE> {1827904129}" -> "$z33 = <weka.Test: boolean BATCHSIZE> {1614867492}";
"useMDL#102 = 1 {861843691}" -> "$z33 = <weka.Test: boolean BATCHSIZE> {1614867492}";
"$z33 = <weka.Test: boolean BATCHSIZE> {1614867492}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z33) {2094929912}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z33) {2094929912}" -> "if $z33 == 0 goto $z34 = <weka.Test: boolean NOCHECKCAPABILITIES> {278349119}";
"if $z33 == 0 goto $z34 = <weka.Test: boolean NOCHECKCAPABILITIES> {278349119}" -> "batchSize#104 = \"10\" {1720465299}";
"if $z33 == 0 goto $z34 = <weka.Test: boolean NOCHECKCAPABILITIES> {278349119}" -> "$z34 = <weka.Test: boolean NOCHECKCAPABILITIES> {21677738}";
"batchSize#104 = \"10\" {1720465299}" -> "$z34 = <weka.Test: boolean NOCHECKCAPABILITIES> {21677738}";
"$z34 = <weka.Test: boolean NOCHECKCAPABILITIES> {21677738}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z34) {1492308347}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z34) {1492308347}" -> "if $z34 == 0 goto $z35 = <weka.Test: boolean NUMDECIMAL> {727631105}";
"if $z34 == 0 goto $z35 = <weka.Test: boolean NUMDECIMAL> {727631105}" -> "noCheckCapabilities#106 = 1 {349624490}";
"if $z34 == 0 goto $z35 = <weka.Test: boolean NUMDECIMAL> {727631105}" -> "$z35 = <weka.Test: boolean NUMDECIMAL> {1140728588}";
"noCheckCapabilities#106 = 1 {349624490}" -> "$z35 = <weka.Test: boolean NUMDECIMAL> {1140728588}";
"$z35 = <weka.Test: boolean NUMDECIMAL> {1140728588}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z35) {2021271888}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z35) {2021271888}" -> "if $z35 == 0 goto $r25 = new weka.classifiers.rules.PART {517308607}";
"if $z35 == 0 goto $r25 = new weka.classifiers.rules.PART {517308607}" -> "numDecimal#108 = 5 {632538072}";
"if $z35 == 0 goto $r25 = new weka.classifiers.rules.PART {517308607}" -> "$r25 = new weka.classifiers.rules.PART {392655393}";
"numDecimal#108 = 5 {632538072}" -> "$r25 = new weka.classifiers.rules.PART {392655393}";
"$r25 = new weka.classifiers.rules.PART {392655393}" -> "specialinvoke $r25.<weka.classifiers.rules.PART: void <init>()>() {819070632}";
"specialinvoke $r25.<weka.classifiers.rules.PART: void <init>()>() {819070632}" -> "part = $r25 {656286554}";
"part = $r25 {656286554}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setBinarySplits(boolean)>(binarySplits#88) {571346498}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setBinarySplits(boolean)>(binarySplits#88) {571346498}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setConfidenceFactor(float)>(confidenceFactor#90) {1772427455}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setConfidenceFactor(float)>(confidenceFactor#90) {1772427455}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setDoNotMakeSplitPointActualValue(boolean)>(doNotMakeSplitPointActualValue#92) {1696008860}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setDoNotMakeSplitPointActualValue(boolean)>(doNotMakeSplitPointActualValue#92) {1696008860}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setMinNumObj(int)>(minNumObj#94) {600328246}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setMinNumObj(int)>(minNumObj#94) {600328246}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setNumFolds(int)>(folds#86) {901568571}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setNumFolds(int)>(folds#86) {901568571}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setReducedErrorPruning(boolean)>(reducedErrorPruning#96) {1750875901}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setReducedErrorPruning(boolean)>(reducedErrorPruning#96) {1750875901}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setSeed(int)>(seed#98) {1090230992}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setSeed(int)>(seed#98) {1090230992}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setUnpruned(boolean)>(unpruned#100) {1086033756}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setUnpruned(boolean)>(unpruned#100) {1086033756}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setUseMDLcorrection(boolean)>(useMDL#102) {406714558}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setUseMDLcorrection(boolean)>(useMDL#102) {406714558}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setBatchSize(java.lang.String)>(batchSize#104) {97801138}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setBatchSize(java.lang.String)>(batchSize#104) {97801138}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setDoNotCheckCapabilities(boolean)>(noCheckCapabilities#106) {1188925388}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setDoNotCheckCapabilities(boolean)>(noCheckCapabilities#106) {1188925388}" -> "virtualinvoke part.<weka.classifiers.rules.PART: void setNumDecimalPlaces(int)>(numDecimal#108) {898861992}";
"virtualinvoke part.<weka.classifiers.rules.PART: void setNumDecimalPlaces(int)>(numDecimal#108) {898861992}" -> "staticinvoke <weka.classifiers.rules.PART: void runClassifier(weka.classifiers.Classifier,java.lang.String[])>(part, args#78) {2027563143}";
"staticinvoke <weka.classifiers.rules.PART: void runClassifier(weka.classifiers.Classifier,java.lang.String[])>(part, args#78) {2027563143}" -> "return {1371349759}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z24) {1066273913}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z27) {875096867}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z32) {1362475269}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z34) {1492308347}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z28) {1783539445}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z29) {257725635}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z33) {2094929912}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26) {266007098}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z30) {1219072306}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z35) {2021271888}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z25) {1419734471}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z31) {272294207}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: weka.Test {1659757675}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {761379073}";
"specialinvoke this.<java.lang.Object: void <init>()>() {761379073}" -> "return {539151994}";
}


