digraph <clinit> {
"$r0 = newarray (byte)[0] {2032090417}" -> "<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {32965559}";
"<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {32965559}" -> "<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1835450181}";
"<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1835450181}" -> "return {1829822829}";
}

digraph getByteLength {
"chars := @parameter0: char[] {766499461}" -> "$i0 = lengthof chars {376420911}";
"$i0 = lengthof chars {376420911}" -> "$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {880839931}";
"$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {880839931}" -> "return $i1 {993261356}";
}

digraph getByteLength {
"chars := @parameter0: char[] {1031795606}" -> "offset := @parameter1: int {2117011955}";
"offset := @parameter1: int {2117011955}" -> "length#1 := @parameter2: int {369156565}";
"length#1 := @parameter2: int {369156565}" -> "len#3 = 0 {1512495866}";
"len#3 = 0 {1512495866}" -> "length#7 = length#1 + offset {215406408}";
"length#7 = length#1 + offset {215406408}" -> "i#9 = offset {691786680}";
"i#9 = offset {691786680}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1635707179}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1635707179}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1306673319}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1306673319}" -> "if i#9 >= length#7 goto return len#3 {286856126}";
"if i#9 >= length#7 goto return len#3 {286856126}" -> "c = chars[i#9] {32687226}";
"if i#9 >= length#7 goto return len#3 {286856126}" -> "return len#3 {351398261}";
"c = chars[i#9] {32687226}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {275039476}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {275039476}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {55378214}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {55378214}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1342296439}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {55378214}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {105205858}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1342296439}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {785768975}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {785768975}" -> "len#3 = len#3 + 1 {1174045378}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {785768975}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {105205858}";
"len#3 = len#3 + 1 {1174045378}" -> "goto [?= i#9 = i#9 + 1] {253426832}";
"goto [?= i#9 = i#9 + 1] {253426832}" -> "i#9 = i#9 + 1 {1807112061}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {105205858}" -> "if c <= 2047 goto len#3 = len#3 + 2 {1740767593}";
"if c <= 2047 goto len#3 = len#3 + 2 {1740767593}" -> "len#3 = len#3 + 3 {1063554941}";
"if c <= 2047 goto len#3 = len#3 + 2 {1740767593}" -> "len#3 = len#3 + 2 {470340828}";
"len#3 = len#3 + 3 {1063554941}" -> "goto [?= i#9 = i#9 + 1] {288749445}";
"goto [?= i#9 = i#9 + 1] {288749445}" -> "i#9 = i#9 + 1 {1807112061}";
"len#3 = len#3 + 2 {470340828}" -> "i#9 = i#9 + 1 {1807112061}";
"i#9 = i#9 + 1 {1807112061}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {1890722321}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {1890722321}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1635707179}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {275039476}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1306673319}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1635707179}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {105205858}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1342296439}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph charsToBytes {
"chars := @parameter0: char[] {837509766}" -> "charOffset := @parameter1: int {1795403693}";
"charOffset := @parameter1: int {1795403693}" -> "bytes := @parameter2: byte[] {480559647}";
"bytes := @parameter2: byte[] {480559647}" -> "byteOffset#1 := @parameter3: int {1990317692}";
"byteOffset#1 := @parameter3: int {1990317692}" -> "charLength#2 := @parameter4: int {837515237}";
"charLength#2 := @parameter4: int {837515237}" -> "charLength#6 = charLength#2 + charOffset {1706748990}";
"charLength#6 = charLength#2 + charOffset {1706748990}" -> "i#8 = charOffset {180374440}";
"i#8 = charOffset {180374440}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {836505633}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {836505633}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {498503736}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {498503736}" -> "if i#8 >= charLength#6 goto return {780273746}";
"if i#8 >= charLength#6 goto return {780273746}" -> "c = chars[i#8] {1984496076}";
"if i#8 >= charLength#6 goto return {780273746}" -> "return {1199738563}";
"c = chars[i#8] {1984496076}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1683649295}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1683649295}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1251092142}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1251092142}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {903232189}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1251092142}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {713552524}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {903232189}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {798831425}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {798831425}" -> "$i0 = byteOffset#1 {1491892486}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {798831425}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {713552524}";
"$i0 = byteOffset#1 {1491892486}" -> "byteOffset#1 = byteOffset#1 + 1 {700003048}";
"byteOffset#1 = byteOffset#1 + 1 {700003048}" -> "$b1 = (byte) c {784770419}";
"$b1 = (byte) c {784770419}" -> "bytes[$i0] = $b1 {1309211697}";
"bytes[$i0] = $b1 {1309211697}" -> "goto [?= i#8 = i#8 + 1] {1627579254}";
"goto [?= i#8 = i#8 + 1] {1627579254}" -> "i#8 = i#8 + 1 {1321756817}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {713552524}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {675438294}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {675438294}" -> "byteOffset#26 = byteOffset#1 + 1 {1942928321}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {675438294}" -> "byteOffset#58 = byteOffset#1 + 1 {214502197}";
"byteOffset#26 = byteOffset#1 + 1 {1942928321}" -> "$c2 = c >> 12 {517672481}";
"$c2 = c >> 12 {517672481}" -> "$c3 = $c2 & 15 {762083635}";
"$c3 = $c2 & 15 {762083635}" -> "$c4 = 224 | $c3 {266871220}";
"$c4 = 224 | $c3 {266871220}" -> "$b5 = (byte) $c4 {1233423470}";
"$b5 = (byte) $c4 {1233423470}" -> "bytes[byteOffset#1] = $b5 {794822091}";
"bytes[byteOffset#1] = $b5 {794822091}" -> "byteOffset#37 = byteOffset#26 + 1 {1118446215}";
"byteOffset#37 = byteOffset#26 + 1 {1118446215}" -> "$c6 = c >> 6 {1805166177}";
"$c6 = c >> 6 {1805166177}" -> "$c7 = $c6 & 63 {1784907546}";
"$c7 = $c6 & 63 {1784907546}" -> "$c8 = 128 | $c7 {979963361}";
"$c8 = 128 | $c7 {979963361}" -> "$b9 = (byte) $c8 {351018851}";
"$b9 = (byte) $c8 {351018851}" -> "bytes[byteOffset#26] = $b9 {644444650}";
"bytes[byteOffset#26] = $b9 {644444650}" -> "byteOffset#1 = byteOffset#37 + 1 {1448309940}";
"byteOffset#1 = byteOffset#37 + 1 {1448309940}" -> "$c10 = c >> 0 {604654089}";
"$c10 = c >> 0 {604654089}" -> "$c11 = $c10 & 63 {845791629}";
"$c11 = $c10 & 63 {845791629}" -> "$c12 = 128 | $c11 {1351664018}";
"$c12 = 128 | $c11 {1351664018}" -> "$b13 = (byte) $c12 {641500043}";
"$b13 = (byte) $c12 {641500043}" -> "bytes[byteOffset#37] = $b13 {1985776986}";
"bytes[byteOffset#37] = $b13 {1985776986}" -> "goto [?= i#8 = i#8 + 1] {172314549}";
"goto [?= i#8 = i#8 + 1] {172314549}" -> "i#8 = i#8 + 1 {1321756817}";
"byteOffset#58 = byteOffset#1 + 1 {214502197}" -> "$c14 = c >> 6 {1035231595}";
"$c14 = c >> 6 {1035231595}" -> "$c15 = $c14 & 31 {714317247}";
"$c15 = $c14 & 31 {714317247}" -> "$c16 = 192 | $c15 {1365660665}";
"$c16 = 192 | $c15 {1365660665}" -> "$b17 = (byte) $c16 {1338494855}";
"$b17 = (byte) $c16 {1338494855}" -> "bytes[byteOffset#1] = $b17 {295291748}";
"bytes[byteOffset#1] = $b17 {295291748}" -> "byteOffset#1 = byteOffset#58 + 1 {889319676}";
"byteOffset#1 = byteOffset#58 + 1 {889319676}" -> "$c18 = c >> 0 {1614700540}";
"$c18 = c >> 0 {1614700540}" -> "$c19 = $c18 & 63 {772797271}";
"$c19 = $c18 & 63 {772797271}" -> "$c20 = 128 | $c19 {1658041364}";
"$c20 = 128 | $c19 {1658041364}" -> "$b21 = (byte) $c20 {1887491597}";
"$b21 = (byte) $c20 {1887491597}" -> "bytes[byteOffset#58] = $b21 {529315196}";
"bytes[byteOffset#58] = $b21 {529315196}" -> "i#8 = i#8 + 1 {1321756817}";
"i#8 = i#8 + 1 {1321756817}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {834934344}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {834934344}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {836505633}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1683649295}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {498503736}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {836505633}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {713552524}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {903232189}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getZeroTerminatedByteLength {
"bytes := @parameter0: byte[] {2113178575}" -> "offset#1 := @parameter1: int {743808341}";
"offset#1 := @parameter1: int {743808341}" -> "len#3 = 0 {160581593}";
"len#3 = 0 {160581593}" -> "$i0 = offset#1 {756724844}";
"$i0 = offset#1 {756724844}" -> "offset#1 = offset#1 + 1 {917344921}";
"offset#1 = offset#1 + 1 {917344921}" -> "$b1 = bytes[$i0] {705143511}";
"$b1 = bytes[$i0] {705143511}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {900187879}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {900187879}" -> "if $b1 == 0 goto return len#3 {1184877445}";
"if $b1 == 0 goto return len#3 {1184877445}" -> "len#3 = len#3 + 1 {1054781166}";
"if $b1 == 0 goto return len#3 {1184877445}" -> "return len#3 {1262543789}";
"len#3 = len#3 + 1 {1054781166}" -> "goto [?= $i0 = offset#1] {1690163958}";
"goto [?= $i0 = offset#1] {1690163958}" -> "$i0 = offset#1 {756724844}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {900187879}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToString {
"bytes := @parameter0: byte[] {1584846181}" -> "offset := @parameter1: int {923925673}";
"offset := @parameter1: int {923925673}" -> "length := @parameter2: int {1446075184}";
"length := @parameter2: int {1446075184}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {714396873}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {714396873}" -> "if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {920497666}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {920497666}" -> "$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1793690418}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {920497666}" -> "charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {639544647}";
"$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1793690418}" -> "return $r0 {610192799}";
"charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {639544647}" -> "chars = newarray (char)[charLen] {1337086792}";
"chars = newarray (char)[charLen] {1337086792}" -> "staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {745613739}";
"staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {745613739}" -> "$r1 = new java.lang.String {1770683806}";
"$r1 = new java.lang.String {1770683806}" -> "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {282483222}";
"specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {282483222}" -> "return $r1 {85942946}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {714396873}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToChars {
"bytes := @parameter0: byte[] {221464993}" -> "byteOffset#1 := @parameter1: int {140932835}";
"byteOffset#1 := @parameter1: int {140932835}" -> "chars := @parameter2: char[] {802051867}";
"chars := @parameter2: char[] {802051867}" -> "charOffset#2 := @parameter3: int {1090221973}";
"charOffset#2 := @parameter3: int {1090221973}" -> "len#3 := @parameter4: int {512475538}";
"len#3 := @parameter4: int {512475538}" -> "isByteLen := @parameter5: boolean {1879636510}";
"isByteLen := @parameter5: boolean {1879636510}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {154930117}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {154930117}" -> "if isByteLen == 0 goto $i1 = charOffset#2 {1947079436}";
"if isByteLen == 0 goto $i1 = charOffset#2 {1947079436}" -> "$i1 = byteOffset#1 {1939419889}";
"if isByteLen == 0 goto $i1 = charOffset#2 {1947079436}" -> "$i1 = charOffset#2 {982894175}";
"$i1 = byteOffset#1 {1939419889}" -> "goto [?= len#8 = len#3 + $i1] {367893782}";
"goto [?= len#8 = len#3 + $i1] {367893782}" -> "len#8 = len#3 + $i1 {78878713}";
"$i1 = charOffset#2 {982894175}" -> "len#8 = len#3 + $i1 {78878713}";
"len#8 = len#3 + $i1 {78878713}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {268679255}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {268679255}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1769744780}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1769744780}" -> "$i2 = byteOffset#1 {1851729013}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1769744780}" -> "$i2 = charOffset#2 {1996377738}";
"$i2 = byteOffset#1 {1851729013}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {1993042456}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {1993042456}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {139359568}";
"$i2 = charOffset#2 {1996377738}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {139359568}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {139359568}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {838650612}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {838650612}" -> "if $i2 >= len#8 goto return byteOffset#1 {1764611745}";
"if $i2 >= len#8 goto return byteOffset#1 {1764611745}" -> "$i3 = byteOffset#1 {1083536945}";
"if $i2 >= len#8 goto return byteOffset#1 {1764611745}" -> "return byteOffset#1 {2108414383}";
"$i3 = byteOffset#1 {1083536945}" -> "byteOffset#1 = byteOffset#1 + 1 {265309450}";
"byteOffset#1 = byteOffset#1 + 1 {265309450}" -> "$b4 = bytes[$i3] {147790479}";
"$b4 = bytes[$i3] {147790479}" -> "char1 = $b4 & 255 {93265434}";
"char1 = $b4 & 255 {93265434}" -> "$s5 = char1 & 255 {1189625218}";
"$s5 = char1 & 255 {1189625218}" -> "$s6 = $s5 >> 4 {896125624}";
"$s6 = $s5 >> 4 {896125624}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {44524936}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {44524936}" -> "tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {611269535}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {611269535}" -> "$i7 = charOffset#2 {1280114823}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {611269535}" -> "$r2 = new java.lang.IllegalArgumentException {1664185933}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {611269535}" -> "$i9 = byteOffset#1 {1826646236}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {611269535}" -> "byteOffset#50 = byteOffset#1 + 1 {262334090}";
"$i7 = charOffset#2 {1280114823}" -> "charOffset#2 = charOffset#2 + 1 {923418556}";
"charOffset#2 = charOffset#2 + 1 {923418556}" -> "$c8 = (char) char1 {227739550}";
"$c8 = (char) char1 {227739550}" -> "chars[$i7] = $c8 {1795309135}";
"chars[$i7] = $c8 {1795309135}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {602295919}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {602295919}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {268679255}";
"$i9 = byteOffset#1 {1826646236}" -> "byteOffset#1 = byteOffset#1 + 1 {384488265}";
"byteOffset#1 = byteOffset#1 + 1 {384488265}" -> "char2#29 = bytes[$i9] {1084829897}";
"char2#29 = bytes[$i9] {1084829897}" -> "$s10 = char2#29 & 192 {1526831034}";
"$s10 = char2#29 & 192 {1526831034}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {92447927}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {92447927}" -> "if $s10 == 128 goto $i11 = charOffset#2 {485024642}";
"if $s10 == 128 goto $i11 = charOffset#2 {485024642}" -> "$r0 = new java.lang.IllegalArgumentException {1160387124}";
"if $s10 == 128 goto $i11 = charOffset#2 {485024642}" -> "$i11 = charOffset#2 {763878577}";
"$r0 = new java.lang.IllegalArgumentException {1160387124}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {2127627468}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {2127627468}" -> "throw $r0 {629021799}";
"$i11 = charOffset#2 {763878577}" -> "charOffset#2 = charOffset#2 + 1 {1527143081}";
"charOffset#2 = charOffset#2 + 1 {1527143081}" -> "$s12 = char1 & 31 {1189949260}";
"$s12 = char1 & 31 {1189949260}" -> "$i13 = $s12 << 6 {895569302}";
"$i13 = $s12 << 6 {895569302}" -> "$b14 = char2#29 & 63 {2114772130}";
"$b14 = char2#29 & 63 {2114772130}" -> "$i15 = $i13 | $b14 {756840224}";
"$i15 = $i13 | $b14 {756840224}" -> "$c16 = (char) $i15 {389588928}";
"$c16 = (char) $i15 {389588928}" -> "chars[$i11] = $c16 {655452189}";
"chars[$i11] = $c16 {655452189}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1071667601}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1071667601}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {268679255}";
"byteOffset#50 = byteOffset#1 + 1 {262334090}" -> "char2#52 = bytes[byteOffset#1] {527706638}";
"char2#52 = bytes[byteOffset#1] {527706638}" -> "byteOffset#1 = byteOffset#50 + 1 {2007762214}";
"byteOffset#1 = byteOffset#50 + 1 {2007762214}" -> "char3 = bytes[byteOffset#50] {538287543}";
"char3 = bytes[byteOffset#50] {538287543}" -> "$s17 = char2#52 & 192 {1631591550}";
"$s17 = char2#52 & 192 {1631591550}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1484234029}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1484234029}" -> "if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1676674013}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1676674013}" -> "$s18 = char3 & 192 {1064751140}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1676674013}" -> "$r1 = new java.lang.IllegalArgumentException {790823728}";
"$s18 = char3 & 192 {1064751140}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {1212165512}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {1212165512}" -> "if $s18 == 128 goto $i19 = charOffset#2 {1615283672}";
"if $s18 == 128 goto $i19 = charOffset#2 {1615283672}" -> "$r1 = new java.lang.IllegalArgumentException {790823728}";
"if $s18 == 128 goto $i19 = charOffset#2 {1615283672}" -> "$i19 = charOffset#2 {127289501}";
"$r1 = new java.lang.IllegalArgumentException {790823728}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {615729925}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {615729925}" -> "throw $r1 {2122359758}";
"$i19 = charOffset#2 {127289501}" -> "charOffset#2 = charOffset#2 + 1 {969129993}";
"charOffset#2 = charOffset#2 + 1 {969129993}" -> "$s20 = char1 & 15 {1447080417}";
"$s20 = char1 & 15 {1447080417}" -> "$i21 = $s20 << 12 {119923546}";
"$i21 = $s20 << 12 {119923546}" -> "$b22 = char2#52 & 63 {1607027498}";
"$b22 = char2#52 & 63 {1607027498}" -> "$i23 = $b22 << 6 {1007140534}";
"$i23 = $b22 << 6 {1007140534}" -> "$i24 = $i21 | $i23 {1201286224}";
"$i24 = $i21 | $i23 {1201286224}" -> "$b25 = char3 & 63 {1448244395}";
"$b25 = char3 & 63 {1448244395}" -> "$i26 = $b25 << 0 {1869671991}";
"$i26 = $b25 << 0 {1869671991}" -> "$i27 = $i24 | $i26 {874381076}";
"$i27 = $i24 | $i26 {874381076}" -> "$c28 = (char) $i27 {1907307024}";
"$c28 = (char) $i27 {1907307024}" -> "chars[$i19] = $c28 {1357289066}";
"chars[$i19] = $c28 {1357289066}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {948951831}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {948951831}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {268679255}";
"$r2 = new java.lang.IllegalArgumentException {1664185933}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {255293781}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {255293781}" -> "throw $r2 {1235639495}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {44524936}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {838650612}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {268679255}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {154930117}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1484234029}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {92447927}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {1212165512}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {139359568}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getCharLength {
"bytes := @parameter0: byte[] {198953749}" -> "offset#1 := @parameter1: int {1370702723}";
"offset#1 := @parameter1: int {1370702723}" -> "length#2 := @parameter2: int {1909001753}";
"length#2 := @parameter2: int {1909001753}" -> "charCount#4 = 0 {2093667597}";
"charCount#4 = 0 {2093667597}" -> "length#8 = length#2 + offset#1 {1972621252}";
"length#8 = length#2 + offset#1 {1972621252}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1688462032}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1688462032}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {14255516}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {14255516}" -> "if offset#1 >= length#8 goto return charCount#4 {58720073}";
"if offset#1 >= length#8 goto return charCount#4 {58720073}" -> "$b0 = bytes[offset#1] {1691476766}";
"if offset#1 >= length#8 goto return charCount#4 {58720073}" -> "return charCount#4 {402005113}";
"$b0 = bytes[offset#1] {1691476766}" -> "$s1 = $b0 & 255 {1058982647}";
"$s1 = $b0 & 255 {1058982647}" -> "$s2 = $s1 >> 4 {822141720}";
"$s2 = $s1 >> 4 {822141720}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {861873445}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {861873445}" -> "tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1872575327}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1872575327}" -> "offset#1 = offset#1 + 1 {639438121}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1872575327}" -> "$r0 = new java.lang.IllegalArgumentException {1424887683}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1872575327}" -> "offset#1 = offset#1 + 2 {1531458822}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1872575327}" -> "offset#1 = offset#1 + 3 {330534958}";
"offset#1 = offset#1 + 1 {639438121}" -> "goto [?= charCount#4 = charCount#4 + 1] {1835406225}";
"goto [?= charCount#4 = charCount#4 + 1] {1835406225}" -> "charCount#4 = charCount#4 + 1 {105698844}";
"offset#1 = offset#1 + 2 {1531458822}" -> "goto [?= charCount#4 = charCount#4 + 1] {1569303283}";
"goto [?= charCount#4 = charCount#4 + 1] {1569303283}" -> "charCount#4 = charCount#4 + 1 {105698844}";
"offset#1 = offset#1 + 3 {330534958}" -> "goto [?= charCount#4 = charCount#4 + 1] {1318384466}";
"goto [?= charCount#4 = charCount#4 + 1] {1318384466}" -> "charCount#4 = charCount#4 + 1 {105698844}";
"$r0 = new java.lang.IllegalArgumentException {1424887683}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1268593557}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1268593557}" -> "throw $r0 {586827735}";
"charCount#4 = charCount#4 + 1 {105698844}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {1164032283}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {1164032283}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1688462032}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1688462032}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {14255516}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {861873445}"[fontcolor="blue", penwidth=3, color="blue"];
}


