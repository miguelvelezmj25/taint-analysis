    public static java.util.ArrayList getPluginMetrics()
    {
        java.util.Set pluginMetrics;
        java.util.Iterator l2;
        java.lang.String metric, $r1, $r5;
        java.lang.Object impl, $r3;
        java.lang.Exception ex, $r7;
        java.util.ArrayList pluginMetricsList#2, $r2;
        java.lang.Class $r0, $r4;
        boolean $z0, $z1;
        weka.classifiers.evaluation.AbstractEvaluationMetric $r6;

        pluginMetricsList#2 = null;

        $r0 = class "weka/classifiers/evaluation/AbstractEvaluationMetric";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        pluginMetrics = staticinvoke <weka.core.PluginManager: java.util.Set getPluginNamesOfType(java.lang.String)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pluginMetrics);

        if pluginMetrics == null goto label6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        pluginMetricsList#2 = $r2;

        l2 = interfaceinvoke pluginMetrics.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        metric = (java.lang.String) $r3;

     label2:
        $r4 = class "weka/classifiers/evaluation/AbstractEvaluationMetric";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        impl = staticinvoke <weka.core.PluginManager: java.lang.Object getPluginInstance(java.lang.String,java.lang.String)>($r5, metric);

        $z1 = impl instanceof weka.classifiers.evaluation.AbstractEvaluationMetric;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        $r6 = (weka.classifiers.evaluation.AbstractEvaluationMetric) impl;

        virtualinvoke pluginMetricsList#2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        ex = $r7;

        virtualinvoke ex.<java.lang.Exception: void printStackTrace()>();

     label5:
        goto label1;

     label6:
        return pluginMetricsList#2;

        catch java.lang.Exception from label2 to label3 with label4;
    }


