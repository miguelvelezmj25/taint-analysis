digraph <clinit> {
"$r0 = newarray (byte)[0] {158922634}" -> "<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1825134217}";
"<berkeley.com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1825134217}" -> "<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {870792334}";
"<berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {870792334}" -> "return {2104318431}";
}

digraph getByteLength {
"chars := @parameter0: char[] {1862356771}" -> "$i0 = lengthof chars {1722820698}";
"$i0 = lengthof chars {1722820698}" -> "$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {718151034}";
"$i1 = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {718151034}" -> "return $i1 {1306943716}";
}

digraph getByteLength {
"chars := @parameter0: char[] {1670276433}" -> "offset := @parameter1: int {1827816530}";
"offset := @parameter1: int {1827816530}" -> "length#1 := @parameter2: int {1258038733}";
"length#1 := @parameter2: int {1258038733}" -> "len#3 = 0 {1338942391}";
"len#3 = 0 {1338942391}" -> "length#7 = length#1 + offset {607962859}";
"length#7 = length#1 + offset {607962859}" -> "i#9 = offset {1514367501}";
"i#9 = offset {1514367501}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1205356782}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1205356782}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1631655056}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1631655056}" -> "if i#9 >= length#7 goto return len#3 {882430817}";
"if i#9 >= length#7 goto return len#3 {882430817}" -> "c = chars[i#9] {995042681}";
"if i#9 >= length#7 goto return len#3 {882430817}" -> "return len#3 {1048243776}";
"c = chars[i#9] {995042681}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1482981717}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1482981717}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {220305397}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {220305397}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {417970049}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {220305397}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {885125766}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {417970049}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1232676025}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1232676025}" -> "len#3 = len#3 + 1 {1214684252}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1232676025}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {885125766}";
"len#3 = len#3 + 1 {1214684252}" -> "goto [?= i#9 = i#9 + 1] {1072188338}";
"goto [?= i#9 = i#9 + 1] {1072188338}" -> "i#9 = i#9 + 1 {1821720915}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {885125766}" -> "if c <= 2047 goto len#3 = len#3 + 2 {1689161156}";
"if c <= 2047 goto len#3 = len#3 + 2 {1689161156}" -> "len#3 = len#3 + 3 {426176312}";
"if c <= 2047 goto len#3 = len#3 + 2 {1689161156}" -> "len#3 = len#3 + 2 {2084910002}";
"len#3 = len#3 + 3 {426176312}" -> "goto [?= i#9 = i#9 + 1] {1460657851}";
"goto [?= i#9 = i#9 + 1] {1460657851}" -> "i#9 = i#9 + 1 {1821720915}";
"len#3 = len#3 + 2 {2084910002}" -> "i#9 = i#9 + 1 {1821720915}";
"i#9 = i#9 + 1 {1821720915}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {1118072022}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {1118072022}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1205356782}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1482981717}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {1205356782}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1631655056}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {417970049}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {885125766}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph charsToBytes {
"chars := @parameter0: char[] {306313129}" -> "charOffset := @parameter1: int {1021289778}";
"charOffset := @parameter1: int {1021289778}" -> "bytes := @parameter2: byte[] {1011310331}";
"bytes := @parameter2: byte[] {1011310331}" -> "byteOffset#1 := @parameter3: int {637162139}";
"byteOffset#1 := @parameter3: int {637162139}" -> "charLength#2 := @parameter4: int {850747217}";
"charLength#2 := @parameter4: int {850747217}" -> "charLength#6 = charLength#2 + charOffset {1119660430}";
"charLength#6 = charLength#2 + charOffset {1119660430}" -> "i#8 = charOffset {931129038}";
"i#8 = charOffset {931129038}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {616920323}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {616920323}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {522974943}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {522974943}" -> "if i#8 >= charLength#6 goto return {1160567581}";
"if i#8 >= charLength#6 goto return {1160567581}" -> "c = chars[i#8] {803973833}";
"if i#8 >= charLength#6 goto return {1160567581}" -> "return {2067596296}";
"c = chars[i#8] {803973833}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1335316094}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1335316094}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {701032844}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {701032844}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1081432034}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {701032844}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1253478123}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1081432034}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1296292911}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1296292911}" -> "$i0 = byteOffset#1 {1163133994}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1296292911}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1253478123}";
"$i0 = byteOffset#1 {1163133994}" -> "byteOffset#1 = byteOffset#1 + 1 {232051024}";
"byteOffset#1 = byteOffset#1 + 1 {232051024}" -> "$b1 = (byte) c {1454755813}";
"$b1 = (byte) c {1454755813}" -> "bytes[$i0] = $b1 {2109790770}";
"bytes[$i0] = $b1 {2109790770}" -> "goto [?= i#8 = i#8 + 1] {220634405}";
"goto [?= i#8 = i#8 + 1] {220634405}" -> "i#8 = i#8 + 1 {2066439172}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1253478123}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {310384514}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {310384514}" -> "byteOffset#26 = byteOffset#1 + 1 {1121208787}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {310384514}" -> "byteOffset#58 = byteOffset#1 + 1 {1706424237}";
"byteOffset#26 = byteOffset#1 + 1 {1121208787}" -> "$c2 = c >> 12 {880842379}";
"$c2 = c >> 12 {880842379}" -> "$c3 = $c2 & 15 {117408818}";
"$c3 = $c2 & 15 {117408818}" -> "$c4 = 224 | $c3 {1927166681}";
"$c4 = 224 | $c3 {1927166681}" -> "$b5 = (byte) $c4 {1121636039}";
"$b5 = (byte) $c4 {1121636039}" -> "bytes[byteOffset#1] = $b5 {1829999269}";
"bytes[byteOffset#1] = $b5 {1829999269}" -> "byteOffset#37 = byteOffset#26 + 1 {320842}";
"byteOffset#37 = byteOffset#26 + 1 {320842}" -> "$c6 = c >> 6 {183177069}";
"$c6 = c >> 6 {183177069}" -> "$c7 = $c6 & 63 {1032164872}";
"$c7 = $c6 & 63 {1032164872}" -> "$c8 = 128 | $c7 {81206135}";
"$c8 = 128 | $c7 {81206135}" -> "$b9 = (byte) $c8 {1444277479}";
"$b9 = (byte) $c8 {1444277479}" -> "bytes[byteOffset#26] = $b9 {1569951063}";
"bytes[byteOffset#26] = $b9 {1569951063}" -> "byteOffset#1 = byteOffset#37 + 1 {160197450}";
"byteOffset#1 = byteOffset#37 + 1 {160197450}" -> "$c10 = c >> 0 {456388416}";
"$c10 = c >> 0 {456388416}" -> "$c11 = $c10 & 63 {557118791}";
"$c11 = $c10 & 63 {557118791}" -> "$c12 = 128 | $c11 {676496109}";
"$c12 = 128 | $c11 {676496109}" -> "$b13 = (byte) $c12 {748630344}";
"$b13 = (byte) $c12 {748630344}" -> "bytes[byteOffset#37] = $b13 {173097604}";
"bytes[byteOffset#37] = $b13 {173097604}" -> "goto [?= i#8 = i#8 + 1] {206110788}";
"goto [?= i#8 = i#8 + 1] {206110788}" -> "i#8 = i#8 + 1 {2066439172}";
"byteOffset#58 = byteOffset#1 + 1 {1706424237}" -> "$c14 = c >> 6 {1040139425}";
"$c14 = c >> 6 {1040139425}" -> "$c15 = $c14 & 31 {356806063}";
"$c15 = $c14 & 31 {356806063}" -> "$c16 = 192 | $c15 {210486430}";
"$c16 = 192 | $c15 {210486430}" -> "$b17 = (byte) $c16 {1268138978}";
"$b17 = (byte) $c16 {1268138978}" -> "bytes[byteOffset#1] = $b17 {526459843}";
"bytes[byteOffset#1] = $b17 {526459843}" -> "byteOffset#1 = byteOffset#58 + 1 {41113537}";
"byteOffset#1 = byteOffset#58 + 1 {41113537}" -> "$c18 = c >> 0 {846737591}";
"$c18 = c >> 0 {846737591}" -> "$c19 = $c18 & 63 {1989812785}";
"$c19 = $c18 & 63 {1989812785}" -> "$c20 = 128 | $c19 {827063769}";
"$c20 = 128 | $c19 {827063769}" -> "$b21 = (byte) $c20 {1111854799}";
"$b21 = (byte) $c20 {1111854799}" -> "bytes[byteOffset#58] = $b21 {1543988767}";
"bytes[byteOffset#58] = $b21 {1543988767}" -> "i#8 = i#8 + 1 {2066439172}";
"i#8 = i#8 + 1 {2066439172}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {367051661}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {367051661}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {616920323}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {522974943}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1253478123}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {616920323}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1081432034}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1335316094}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getZeroTerminatedByteLength {
"bytes := @parameter0: byte[] {1855100553}" -> "offset#1 := @parameter1: int {512993173}";
"offset#1 := @parameter1: int {512993173}" -> "len#3 = 0 {573375096}";
"len#3 = 0 {573375096}" -> "$i0 = offset#1 {322035521}";
"$i0 = offset#1 {322035521}" -> "offset#1 = offset#1 + 1 {1497702813}";
"offset#1 = offset#1 + 1 {1497702813}" -> "$b1 = bytes[$i0] {1654217617}";
"$b1 = bytes[$i0] {1654217617}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {1425447720}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {1425447720}" -> "if $b1 == 0 goto return len#3 {261418571}";
"if $b1 == 0 goto return len#3 {261418571}" -> "len#3 = len#3 + 1 {314766127}";
"if $b1 == 0 goto return len#3 {261418571}" -> "return len#3 {1649980033}";
"len#3 = len#3 + 1 {314766127}" -> "goto [?= $i0 = offset#1] {1660641571}";
"goto [?= $i0 = offset#1] {1660641571}" -> "$i0 = offset#1 {322035521}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {1425447720}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToString {
"bytes := @parameter0: byte[] {848050277}" -> "offset := @parameter1: int {2082625124}";
"offset := @parameter1: int {2082625124}" -> "length := @parameter2: int {1798236209}";
"length := @parameter2: int {1798236209}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {1125090602}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {1125090602}" -> "if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1126367345}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1126367345}" -> "$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1599080260}";
"if length != 0 goto charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1126367345}" -> "charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1416299977}";
"$r0 = <berkeley.com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1599080260}" -> "return $r0 {1422659946}";
"charLen = staticinvoke <berkeley.com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1416299977}" -> "chars = newarray (char)[charLen] {1578551193}";
"chars = newarray (char)[charLen] {1578551193}" -> "staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {586158250}";
"staticinvoke <berkeley.com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {586158250}" -> "$r1 = new java.lang.String {376678003}";
"$r1 = new java.lang.String {376678003}" -> "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {126819128}";
"specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {126819128}" -> "return $r1 {210053708}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {1125090602}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToChars {
"bytes := @parameter0: byte[] {556764073}" -> "byteOffset#1 := @parameter1: int {23523197}";
"byteOffset#1 := @parameter1: int {23523197}" -> "chars := @parameter2: char[] {241280696}";
"chars := @parameter2: char[] {241280696}" -> "charOffset#2 := @parameter3: int {354499016}";
"charOffset#2 := @parameter3: int {354499016}" -> "len#3 := @parameter4: int {905341208}";
"len#3 := @parameter4: int {905341208}" -> "isByteLen := @parameter5: boolean {1539570333}";
"isByteLen := @parameter5: boolean {1539570333}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {781738339}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {781738339}" -> "if isByteLen == 0 goto $i1 = charOffset#2 {826304440}";
"if isByteLen == 0 goto $i1 = charOffset#2 {826304440}" -> "$i1 = byteOffset#1 {657164923}";
"if isByteLen == 0 goto $i1 = charOffset#2 {826304440}" -> "$i1 = charOffset#2 {2066606349}";
"$i1 = byteOffset#1 {657164923}" -> "goto [?= len#8 = len#3 + $i1] {1681199980}";
"goto [?= len#8 = len#3 + $i1] {1681199980}" -> "len#8 = len#3 + $i1 {845221730}";
"$i1 = charOffset#2 {2066606349}" -> "len#8 = len#3 + $i1 {845221730}";
"len#8 = len#3 + $i1 {845221730}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1042359756}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1042359756}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1785872237}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1785872237}" -> "$i2 = byteOffset#1 {850077632}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1785872237}" -> "$i2 = charOffset#2 {1749670804}";
"$i2 = byteOffset#1 {850077632}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {134948072}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {134948072}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {470780807}";
"$i2 = charOffset#2 {1749670804}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {470780807}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {470780807}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {2092989685}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {2092989685}" -> "if $i2 >= len#8 goto return byteOffset#1 {2026219559}";
"if $i2 >= len#8 goto return byteOffset#1 {2026219559}" -> "$i3 = byteOffset#1 {260772987}";
"if $i2 >= len#8 goto return byteOffset#1 {2026219559}" -> "return byteOffset#1 {35013781}";
"$i3 = byteOffset#1 {260772987}" -> "byteOffset#1 = byteOffset#1 + 1 {1153325853}";
"byteOffset#1 = byteOffset#1 + 1 {1153325853}" -> "$b4 = bytes[$i3] {300894013}";
"$b4 = bytes[$i3] {300894013}" -> "char1 = $b4 & 255 {1968612989}";
"char1 = $b4 & 255 {1968612989}" -> "$s5 = char1 & 255 {487708384}";
"$s5 = char1 & 255 {487708384}" -> "$s6 = $s5 >> 4 {1415814838}";
"$s6 = $s5 >> 4 {1415814838}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {1319867524}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {1319867524}" -> "tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1365287340}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1365287340}" -> "$i7 = charOffset#2 {946402043}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1365287340}" -> "$r2 = new java.lang.IllegalArgumentException {1983809570}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1365287340}" -> "$i9 = byteOffset#1 {1472676896}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1365287340}" -> "byteOffset#50 = byteOffset#1 + 1 {1314399782}";
"$i7 = charOffset#2 {946402043}" -> "charOffset#2 = charOffset#2 + 1 {1890999662}";
"charOffset#2 = charOffset#2 + 1 {1890999662}" -> "$c8 = (char) char1 {929813637}";
"$c8 = (char) char1 {929813637}" -> "chars[$i7] = $c8 {1970577963}";
"chars[$i7] = $c8 {1970577963}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {777526487}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {777526487}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1042359756}";
"$i9 = byteOffset#1 {1472676896}" -> "byteOffset#1 = byteOffset#1 + 1 {124965129}";
"byteOffset#1 = byteOffset#1 + 1 {124965129}" -> "char2#29 = bytes[$i9] {838418951}";
"char2#29 = bytes[$i9] {838418951}" -> "$s10 = char2#29 & 192 {343217097}";
"$s10 = char2#29 & 192 {343217097}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1489419599}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1489419599}" -> "if $s10 == 128 goto $i11 = charOffset#2 {1585010457}";
"if $s10 == 128 goto $i11 = charOffset#2 {1585010457}" -> "$r0 = new java.lang.IllegalArgumentException {404681629}";
"if $s10 == 128 goto $i11 = charOffset#2 {1585010457}" -> "$i11 = charOffset#2 {1660145105}";
"$r0 = new java.lang.IllegalArgumentException {404681629}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {2012016877}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {2012016877}" -> "throw $r0 {1673109654}";
"$i11 = charOffset#2 {1660145105}" -> "charOffset#2 = charOffset#2 + 1 {1921524474}";
"charOffset#2 = charOffset#2 + 1 {1921524474}" -> "$s12 = char1 & 31 {1048859348}";
"$s12 = char1 & 31 {1048859348}" -> "$i13 = $s12 << 6 {10976910}";
"$i13 = $s12 << 6 {10976910}" -> "$b14 = char2#29 & 63 {1681467430}";
"$b14 = char2#29 & 63 {1681467430}" -> "$i15 = $i13 | $b14 {786395983}";
"$i15 = $i13 | $b14 {786395983}" -> "$c16 = (char) $i15 {252779427}";
"$c16 = (char) $i15 {252779427}" -> "chars[$i11] = $c16 {1541814163}";
"chars[$i11] = $c16 {1541814163}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1983077585}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1983077585}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1042359756}";
"byteOffset#50 = byteOffset#1 + 1 {1314399782}" -> "char2#52 = bytes[byteOffset#1] {421265267}";
"char2#52 = bytes[byteOffset#1] {421265267}" -> "byteOffset#1 = byteOffset#50 + 1 {1610007010}";
"byteOffset#1 = byteOffset#50 + 1 {1610007010}" -> "char3 = bytes[byteOffset#50] {621343541}";
"char3 = bytes[byteOffset#50] {621343541}" -> "$s17 = char2#52 & 192 {1428477418}";
"$s17 = char2#52 & 192 {1428477418}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1138331794}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1138331794}" -> "if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1035506074}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1035506074}" -> "$s18 = char3 & 192 {1226519762}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1035506074}" -> "$r1 = new java.lang.IllegalArgumentException {64688878}";
"$s18 = char3 & 192 {1226519762}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {829652592}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {829652592}" -> "if $s18 == 128 goto $i19 = charOffset#2 {387761200}";
"if $s18 == 128 goto $i19 = charOffset#2 {387761200}" -> "$r1 = new java.lang.IllegalArgumentException {64688878}";
"if $s18 == 128 goto $i19 = charOffset#2 {387761200}" -> "$i19 = charOffset#2 {405959401}";
"$r1 = new java.lang.IllegalArgumentException {64688878}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {300127919}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {300127919}" -> "throw $r1 {1622146535}";
"$i19 = charOffset#2 {405959401}" -> "charOffset#2 = charOffset#2 + 1 {367647150}";
"charOffset#2 = charOffset#2 + 1 {367647150}" -> "$s20 = char1 & 15 {2082877972}";
"$s20 = char1 & 15 {2082877972}" -> "$i21 = $s20 << 12 {531015067}";
"$i21 = $s20 << 12 {531015067}" -> "$b22 = char2#52 & 63 {172612860}";
"$b22 = char2#52 & 63 {172612860}" -> "$i23 = $b22 << 6 {542010736}";
"$i23 = $b22 << 6 {542010736}" -> "$i24 = $i21 | $i23 {873421152}";
"$i24 = $i21 | $i23 {873421152}" -> "$b25 = char3 & 63 {1254166903}";
"$b25 = char3 & 63 {1254166903}" -> "$i26 = $b25 << 0 {1519996027}";
"$i26 = $b25 << 0 {1519996027}" -> "$i27 = $i24 | $i26 {2103413982}";
"$i27 = $i24 | $i26 {2103413982}" -> "$c28 = (char) $i27 {1071079595}";
"$c28 = (char) $i27 {1071079595}" -> "chars[$i19] = $c28 {1743565154}";
"chars[$i19] = $c28 {1743565154}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {2005324656}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {2005324656}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1042359756}";
"$r2 = new java.lang.IllegalArgumentException {1983809570}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {1888330984}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {1888330984}" -> "throw $r2 {827450586}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1042359756}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {470780807}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {2092989685}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {781738339}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {1319867524}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1489419599}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {829652592}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1138331794}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getCharLength {
"bytes := @parameter0: byte[] {157178412}" -> "offset#1 := @parameter1: int {248536972}";
"offset#1 := @parameter1: int {248536972}" -> "length#2 := @parameter2: int {2101096429}";
"length#2 := @parameter2: int {2101096429}" -> "charCount#4 = 0 {1618852382}";
"charCount#4 = 0 {1618852382}" -> "length#8 = length#2 + offset#1 {1654645065}";
"length#8 = length#2 + offset#1 {1654645065}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1407174674}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1407174674}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1094875481}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1094875481}" -> "if offset#1 >= length#8 goto return charCount#4 {2006271701}";
"if offset#1 >= length#8 goto return charCount#4 {2006271701}" -> "$b0 = bytes[offset#1] {1846535298}";
"if offset#1 >= length#8 goto return charCount#4 {2006271701}" -> "return charCount#4 {959024605}";
"$b0 = bytes[offset#1] {1846535298}" -> "$s1 = $b0 & 255 {852215197}";
"$s1 = $b0 & 255 {852215197}" -> "$s2 = $s1 >> 4 {1002919162}";
"$s2 = $s1 >> 4 {1002919162}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {1801986047}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {1801986047}" -> "tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {95122830}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {95122830}" -> "offset#1 = offset#1 + 1 {1772142475}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {95122830}" -> "$r0 = new java.lang.IllegalArgumentException {302412005}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {95122830}" -> "offset#1 = offset#1 + 2 {772562537}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {95122830}" -> "offset#1 = offset#1 + 3 {484830277}";
"offset#1 = offset#1 + 1 {1772142475}" -> "goto [?= charCount#4 = charCount#4 + 1] {795717626}";
"goto [?= charCount#4 = charCount#4 + 1] {795717626}" -> "charCount#4 = charCount#4 + 1 {671213463}";
"offset#1 = offset#1 + 2 {772562537}" -> "goto [?= charCount#4 = charCount#4 + 1] {1884637475}";
"goto [?= charCount#4 = charCount#4 + 1] {1884637475}" -> "charCount#4 = charCount#4 + 1 {671213463}";
"offset#1 = offset#1 + 3 {484830277}" -> "goto [?= charCount#4 = charCount#4 + 1] {1580565084}";
"goto [?= charCount#4 = charCount#4 + 1] {1580565084}" -> "charCount#4 = charCount#4 + 1 {671213463}";
"$r0 = new java.lang.IllegalArgumentException {302412005}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {2079618398}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {2079618398}" -> "throw $r0 {161562398}";
"charCount#4 = charCount#4 + 1 {671213463}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {1643568071}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {1643568071}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1407174674}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1094875481}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {1407174674}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {1801986047}"[fontcolor="blue", penwidth=3, color="blue"];
}


