    public void write(byte[]) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.ZipTest$1 this;
        byte[] b;
        int i#2, $i0;
        byte input#9;
        short input#13;
        java.util.ArrayList $r0;
        java.lang.Integer $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.ZipTest$1;

        b := @parameter0: byte[];

        i#2 = 0;

     label1:
        $i0 = lengthof b;

        if i#2 >= $i0 goto label2;

        input#9 = b[i#2];

        input#13 = input#9 & 255;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.ZipTest$1: java.util.ArrayList val$fileBuffer>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(input#13);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        i#2 = i#2 + 1;

        goto label1;

     label2:
        return;
    }

    void <init>(java.util.ArrayList)
    {
        edu.cmu.cs.mvelezce.zip.ZipTest$1 this;
        java.util.ArrayList l1;

        this := @this: edu.cmu.cs.mvelezce.zip.ZipTest$1;

        l1 := @parameter0: java.util.ArrayList;

        this.<edu.cmu.cs.mvelezce.zip.ZipTest$1: java.util.ArrayList val$fileBuffer> = l1;

        specialinvoke this.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.ZipTest$1 this;
        int arg0, $i0;
        java.util.ArrayList $r0;
        java.lang.Integer $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.ZipTest$1;

        arg0 := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.ZipTest$1: java.util.ArrayList val$fileBuffer>;

        $i0 = arg0 & 255;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }


