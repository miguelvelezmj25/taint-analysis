    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;
        com.sleepycat.je.txn.LockUpgrade $r2, $r3, $r4, $r6, $r8, $r10;
        com.sleepycat.je.txn.LockType $r5, $r7, $r9, $r11;
        com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException $r12, $r14, $r16;
        com.sleepycat.je.PreloadStatus $r13, $r15, $r17;

        $r0 = class "com/sleepycat/je/dbi/EnvironmentImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled> = $z1;

        <com.sleepycat.je.dbi.EnvironmentImpl: boolean forcedYield> = 0;

        <com.sleepycat.je.dbi.EnvironmentImpl: int threadLocalReferenceCount> = 0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("je.disable.java.adler32");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 != null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        <com.sleepycat.je.dbi.EnvironmentImpl: boolean USE_JAVA5_ADLER32> = $z2;

        $r2 = <com.sleepycat.je.txn.LockUpgrade: com.sleepycat.je.txn.LockUpgrade ILLEGAL>;

        virtualinvoke $r2.<com.sleepycat.je.txn.LockUpgrade: void setUpgrade(com.sleepycat.je.txn.LockType)>(null);

        $r3 = <com.sleepycat.je.txn.LockUpgrade: com.sleepycat.je.txn.LockUpgrade EXISTING>;

        virtualinvoke $r3.<com.sleepycat.je.txn.LockUpgrade: void setUpgrade(com.sleepycat.je.txn.LockType)>(null);

        $r4 = <com.sleepycat.je.txn.LockUpgrade: com.sleepycat.je.txn.LockUpgrade WRITE_PROMOTE>;

        $r5 = <com.sleepycat.je.txn.LockType: com.sleepycat.je.txn.LockType WRITE>;

        virtualinvoke $r4.<com.sleepycat.je.txn.LockUpgrade: void setUpgrade(com.sleepycat.je.txn.LockType)>($r5);

        $r6 = <com.sleepycat.je.txn.LockUpgrade: com.sleepycat.je.txn.LockUpgrade RANGE_READ_IMMED>;

        $r7 = <com.sleepycat.je.txn.LockType: com.sleepycat.je.txn.LockType RANGE_READ>;

        virtualinvoke $r6.<com.sleepycat.je.txn.LockUpgrade: void setUpgrade(com.sleepycat.je.txn.LockType)>($r7);

        $r8 = <com.sleepycat.je.txn.LockUpgrade: com.sleepycat.je.txn.LockUpgrade RANGE_WRITE_IMMED>;

        $r9 = <com.sleepycat.je.txn.LockType: com.sleepycat.je.txn.LockType RANGE_WRITE>;

        virtualinvoke $r8.<com.sleepycat.je.txn.LockUpgrade: void setUpgrade(com.sleepycat.je.txn.LockType)>($r9);

        $r10 = <com.sleepycat.je.txn.LockUpgrade: com.sleepycat.je.txn.LockUpgrade RANGE_WRITE_PROMOTE>;

        $r11 = <com.sleepycat.je.txn.LockType: com.sleepycat.je.txn.LockType RANGE_WRITE>;

        virtualinvoke $r10.<com.sleepycat.je.txn.LockUpgrade: void setUpgrade(com.sleepycat.je.txn.LockType)>($r11);

        $r12 = new com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException;

        $r13 = <com.sleepycat.je.PreloadStatus: com.sleepycat.je.PreloadStatus EXCEEDED_TIME>;

        specialinvoke $r12.<com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException: void <init>(com.sleepycat.je.PreloadStatus)>($r13);

        <com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException TIME_EXCEEDED_PRELOAD_EXCEPTION> = $r12;

        $r14 = new com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException;

        $r15 = <com.sleepycat.je.PreloadStatus: com.sleepycat.je.PreloadStatus FILLED_CACHE>;

        specialinvoke $r14.<com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException: void <init>(com.sleepycat.je.PreloadStatus)>($r15);

        <com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException MEMORY_EXCEEDED_PRELOAD_EXCEPTION> = $r14;

        $r16 = new com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException;

        $r17 = <com.sleepycat.je.PreloadStatus: com.sleepycat.je.PreloadStatus USER_HALT_REQUEST>;

        specialinvoke $r16.<com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException: void <init>(com.sleepycat.je.PreloadStatus)>($r17);

        <com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException USER_HALT_REQUEST_PRELOAD_EXCEPTION> = $r16;

        return;
    }

    public void <init>(java.io.File, com.sleepycat.je.EnvironmentConfig, com.sleepycat.je.dbi.EnvironmentImpl) throws com.sleepycat.je.EnvironmentNotFoundException, com.sleepycat.je.EnvironmentLockedException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this, sharedCacheEnv;
        java.io.File envHome;
        com.sleepycat.je.EnvironmentConfig envConfig;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        envHome := @parameter0: java.io.File;

        envConfig := @parameter1: com.sleepycat.je.EnvironmentConfig;

        sharedCacheEnv := @parameter2: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void <init>(java.io.File,com.sleepycat.je.EnvironmentConfig,com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.RepConfigProxy)>(envHome, envConfig, sharedCacheEnv, null);

        return;
    }

    protected void <init>(java.io.File, com.sleepycat.je.EnvironmentConfig, com.sleepycat.je.dbi.EnvironmentImpl, com.sleepycat.je.dbi.RepConfigProxy) throws com.sleepycat.je.EnvironmentNotFoundException, com.sleepycat.je.EnvironmentLockedException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this, sharedCacheEnv;
        java.io.File envHome;
        com.sleepycat.je.EnvironmentConfig envConfig;
        com.sleepycat.je.dbi.RepConfigProxy repConfigProxy;
        java.lang.Throwable l6, $r128;
        java.util.concurrent.atomic.AtomicInteger $r0, $r1;
        java.lang.Object $r2, $r3, $r7;
        com.sleepycat.je.EnvironmentFailureException $r4;
        java.util.concurrent.atomic.AtomicReference $r5, $r6;
        java.util.ArrayList $r8, $r74;
        boolean success#59, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, success#394;
        com.sleepycat.je.dbi.StartupTracker $r9, $r10;
        com.sleepycat.je.dbi.StartupTracker$Phase $r11;
        com.sleepycat.je.dbi.DbEnvState $r12;
        com.sleepycat.je.latch.Latch $r13;
        com.sleepycat.je.utilint.StatGroup $r14, $r16, $r19, $r22, $r25, $r28, $r30, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71;
        com.sleepycat.je.utilint.LongStat $r15;
        com.sleepycat.je.utilint.StatDefinition $r17, $r20, $r23, $r26, $r29, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72;
        long $l0, $l1, $l3, $l5;
        com.sleepycat.je.utilint.AtomicLongStat $r18, $r21, $r24, $r27, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70;
        com.sleepycat.je.dbi.DbConfigManager $r73, $r83, $r86, $r104, $r106, $r110, $r123;
        java.util.logging.Formatter $r75, $r77;
        com.sleepycat.je.util.ConsoleHandler $r76;
        java.util.logging.FileHandler $r78;
        java.util.logging.Handler $r79;
        java.lang.Class $r80;
        java.util.logging.Logger $r81;
        com.sleepycat.je.dbi.MemoryBudget $r82;
        com.sleepycat.je.log.FileManager $r84, $r85;
        com.sleepycat.je.config.BooleanConfigParam $r87, $r124;
        com.sleepycat.je.EnvironmentNotFoundException $r88;
        java.lang.StringBuilder $r89, $r90, $r91;
        java.lang.String $r92, $r93;
        com.sleepycat.je.log.LogManager $r94;
        com.sleepycat.je.dbi.INList $r95;
        com.sleepycat.je.txn.TxnManager $r96;
        com.sleepycat.je.statcap.StatManager $r97, $r114, $r121;
        java.lang.AssertionError $r98;
        com.sleepycat.je.evictor.Evictor $r99, $r101;
        com.sleepycat.je.evictor.OffHeapCache $r100, $r102;
        com.sleepycat.je.recovery.Checkpointer $r103;
        com.sleepycat.je.incomp.INCompressor $r105;
        com.sleepycat.je.config.DurationConfigParam $r107, $r111;
        int $i2, $i4;
        com.sleepycat.je.cleaner.Cleaner $r108;
        com.sleepycat.je.statcap.StatCapture $r109;
        com.sleepycat.je.CustomStats $r112;
        java.util.SortedSet $r113;
        com.sleepycat.je.log.LogFlusher $r115;
        com.sleepycat.je.util.verify.DataVerifier $r116;
        com.sleepycat.je.dbi.NodeSequence $r117, $r120;
        com.sleepycat.je.dbi.DbTree $r118;
        java.util.concurrent.locks.ReentrantReadWriteLock $r119;
        java.lang.Integer $r122;
        com.sleepycat.je.statcap.EnvStatsLogger $r125, $r126, $r127;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        envHome := @parameter0: java.io.File;

        envConfig := @parameter1: com.sleepycat.je.EnvironmentConfig;

        sharedCacheEnv := @parameter2: com.sleepycat.je.dbi.EnvironmentImpl;

        repConfigProxy := @parameter3: com.sleepycat.je.dbi.RepConfigProxy;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicInteger openCount> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicInteger backupCount> = $r1;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean allowBlindOps> = 0;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean allowBlindPuts> = 0;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int maxEmbeddedLN> = -1;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean initializedSuccessfully> = 0;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean needRepConvert> = 0;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn> = -1L;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ExceptionListener exceptionListener> = null;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ProgressListener recoveryProgressListener> = null;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.ClassLoader classLoader> = null;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.PreloadConfig dupConvertPreloadConfig> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object backgroundTrackingMutex> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object backgroundSleepMutex> = $r3;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean didFullThreadDump> = 0;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean noComparators> = 0;

        $r4 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException makeJavaErrorWrapper()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException preallocatedEFE> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE> = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference wedgedEFE> = $r6;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMBeanRegistered> = 0;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object statSynchronizer> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.ArrayList mBeanRegList> = $r8;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger> = null;

        success#59 = 0;

        $r9 = new com.sleepycat.je.dbi.StartupTracker;

        specialinvoke $r9.<com.sleepycat.je.dbi.StartupTracker: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker> = $r9;

        $r10 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker>;

        $r11 = <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase TOTAL_ENV_OPEN>;

        virtualinvoke $r10.<com.sleepycat.je.dbi.StartupTracker: void start(com.sleepycat.je.dbi.StartupTracker$Phase)>($r11);

     label01:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome> = envHome;

        $r12 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INIT>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState> = $r12;

        $r13 = staticinvoke <com.sleepycat.je.latch.LatchFactory: com.sleepycat.je.latch.Latch createExclusiveLatch(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,boolean)>(this, "MapTreeRoot", 0);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch> = $r13;

        $r14 = new com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r14.<com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Environment", "General environment wide statistics.");

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats> = $r14;

        $r15 = new com.sleepycat.je.utilint.LongStat;

        $r16 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats>;

        $r17 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition ENV_RELATCHES_REQUIRED>;

        specialinvoke $r15.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r16, $r17);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.LongStat relatchesRequired> = $r15;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long creationTime> = $l0;

        $r18 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r19 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats>;

        $r20 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition ENV_BIN_DELTA_GETS>;

        specialinvoke $r18.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r19, $r20);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaGets> = $r18;

        $r21 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r22 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats>;

        $r23 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition ENV_BIN_DELTA_INSERTS>;

        specialinvoke $r21.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r22, $r23);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaInserts> = $r21;

        $r24 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r25 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats>;

        $r26 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition ENV_BIN_DELTA_UPDATES>;

        specialinvoke $r24.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r25, $r26);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaUpdates> = $r24;

        $r27 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r28 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats>;

        $r29 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition ENV_BIN_DELTA_DELETES>;

        specialinvoke $r27.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r28, $r29);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaDeletes> = $r27;

        $r30 = new com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r30.<com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Op", "Thoughput statistics for JE calls.");

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats> = $r30;

        $r31 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r32 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r33 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_SEARCH>;

        specialinvoke $r31.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r32, $r33);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priSearchOps> = $r31;

        $r34 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r35 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r36 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_SEARCH_FAIL>;

        specialinvoke $r34.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r35, $r36);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priSearchFailOps> = $r34;

        $r37 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r38 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r39 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_SEC_SEARCH>;

        specialinvoke $r37.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r38, $r39);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secSearchOps> = $r37;

        $r40 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r41 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r42 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_SEC_SEARCH_FAIL>;

        specialinvoke $r40.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r41, $r42);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secSearchFailOps> = $r40;

        $r43 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r44 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r45 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_POSITION>;

        specialinvoke $r43.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r44, $r45);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priPositionOps> = $r43;

        $r46 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r47 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r48 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_SEC_POSITION>;

        specialinvoke $r46.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r47, $r48);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secPositionOps> = $r46;

        $r49 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r50 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r51 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_INSERT>;

        specialinvoke $r49.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r50, $r51);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priInsertOps> = $r49;

        $r52 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r53 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r54 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_INSERT_FAIL>;

        specialinvoke $r52.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r53, $r54);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priInsertFailOps> = $r52;

        $r55 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r56 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r57 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_SEC_INSERT>;

        specialinvoke $r55.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r56, $r57);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secInsertOps> = $r55;

        $r58 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r59 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r60 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_UPDATE>;

        specialinvoke $r58.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r59, $r60);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priUpdateOps> = $r58;

        $r61 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r62 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r63 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_SEC_UPDATE>;

        specialinvoke $r61.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r62, $r63);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secUpdateOps> = $r61;

        $r64 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r65 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r66 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_DELETE>;

        specialinvoke $r64.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r65, $r66);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priDeleteOps> = $r64;

        $r67 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r68 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r69 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_PRI_DELETE_FAIL>;

        specialinvoke $r67.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r68, $r69);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priDeleteFailOps> = $r67;

        $r70 = new com.sleepycat.je.utilint.AtomicLongStat;

        $r71 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $r72 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition THROUGHPUT_SEC_DELETE>;

        specialinvoke $r70.<com.sleepycat.je.utilint.AtomicLongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>($r71, $r72);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secDeleteOps> = $r70;

        $r73 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager initConfigManager(com.sleepycat.je.EnvironmentConfig,com.sleepycat.je.dbi.RepConfigProxy)>(envConfig, repConfigProxy);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager> = $r73;

        $r74 = new java.util.ArrayList;

        specialinvoke $r74.<java.util.ArrayList: void <init>()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.List configObservers> = $r74;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void addConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)>(this);

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void initConfigParams(com.sleepycat.je.EnvironmentConfig,com.sleepycat.je.dbi.RepConfigProxy)>(envConfig, repConfigProxy);

        $r75 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Formatter initFormatter()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Formatter formatter> = $r75;

        $r76 = new com.sleepycat.je.util.ConsoleHandler;

        $r77 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Formatter formatter>;

        specialinvoke $r76.<com.sleepycat.je.util.ConsoleHandler: void <init>(java.util.logging.Formatter,com.sleepycat.je.dbi.EnvironmentImpl)>($r77, this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.ConsoleHandler consoleHandler> = $r76;

        $r78 = specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.FileHandler initFileHandler()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.FileHandler fileHandler> = $r78;

        $r79 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: java.util.logging.Handler getLoggingHandler()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Handler configuredHandler> = $r79;

        $r80 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r81 = staticinvoke <com.sleepycat.je.utilint.LoggerUtils: java.util.logging.Logger getLogger(java.lang.Class)>($r80);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger envLogger> = $r81;

        $r82 = new com.sleepycat.je.dbi.MemoryBudget;

        $r83 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        specialinvoke $r82.<com.sleepycat.je.dbi.MemoryBudget: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.DbConfigManager)>(this, sharedCacheEnv, $r83);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget> = $r82;

        $r84 = new com.sleepycat.je.log.FileManager;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        specialinvoke $r84.<com.sleepycat.je.log.FileManager: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.io.File,boolean)>(this, envHome, $z0);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager> = $r84;

        $z1 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: boolean getAllowCreate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label02;

        $r85 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        $z2 = virtualinvoke $r85.<com.sleepycat.je.log.FileManager: boolean filesExist()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label02;

        $r86 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r87 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_SETUP_LOGGER>;

        $z3 = virtualinvoke $r86.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r87);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label02;

        $r88 = new com.sleepycat.je.EnvironmentNotFoundException;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Home directory: ");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(envHome);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r88.<com.sleepycat.je.EnvironmentNotFoundException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(this, $r92);

        throw $r88;

     label02:
        $r93 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: java.lang.String getNodeName()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String optionalNodeName> = $r93;

        $r94 = new com.sleepycat.je.log.LogManager;

        $z4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        specialinvoke $r94.<com.sleepycat.je.log.LogManager: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,boolean)>(this, $z4);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager> = $r94;

        $r95 = new com.sleepycat.je.dbi.INList;

        specialinvoke $r95.<com.sleepycat.je.dbi.INList: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.INList inMemoryINs> = $r95;

        $r96 = new com.sleepycat.je.txn.TxnManager;

        specialinvoke $r96.<com.sleepycat.je.txn.TxnManager: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager> = $r96;

        $r97 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatManager createStatManager()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatManager statManager> = $r97;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sharedCacheEnv);

        if sharedCacheEnv == null goto label04;

        $z5 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label03;

        $z6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label03;

        $r98 = new java.lang.AssertionError;

        specialinvoke $r98.<java.lang.AssertionError: void <init>()>();

        throw $r98;

     label03:
        $r99 = sharedCacheEnv.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor> = $r99;

        $r100 = sharedCacheEnv.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache> = $r100;

        goto label05;

     label04:
        $r101 = new com.sleepycat.je.evictor.Evictor;

        specialinvoke $r101.<com.sleepycat.je.evictor.Evictor: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor> = $r101;

        $r102 = new com.sleepycat.je.evictor.OffHeapCache;

        specialinvoke $r102.<com.sleepycat.je.evictor.OffHeapCache: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache> = $r102;

     label05:
        $r103 = new com.sleepycat.je.recovery.Checkpointer;

        $r104 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $l1 = staticinvoke <com.sleepycat.je.recovery.Checkpointer: long getWakeupPeriod(com.sleepycat.je.dbi.DbConfigManager)>($r104);

        specialinvoke $r103.<com.sleepycat.je.recovery.Checkpointer: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,long,java.lang.String)>(this, $l1, "Checkpointer");

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer> = $r103;

        $r105 = new com.sleepycat.je.incomp.INCompressor;

        $r106 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r107 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam COMPRESSOR_WAKEUP_INTERVAL>;

        $i2 = virtualinvoke $r106.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r107);

        $l3 = (long) $i2;

        specialinvoke $r105.<com.sleepycat.je.incomp.INCompressor: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,long,java.lang.String)>(this, $l3, "INCompressor");

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor> = $r105;

        $r108 = new com.sleepycat.je.cleaner.Cleaner;

        specialinvoke $r108.<com.sleepycat.je.cleaner.Cleaner: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(this, "Cleaner");

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner> = $r108;

        $r109 = new com.sleepycat.je.statcap.StatCapture;

        $r110 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r111 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam STATS_COLLECT_INTERVAL>;

        $i4 = virtualinvoke $r110.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r111);

        $l5 = (long) $i4;

        $r112 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: com.sleepycat.je.CustomStats getCustomStats()>();

        $r113 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.SortedSet getStatCaptureProjections()>();

        $r114 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatManager statManager>;

        specialinvoke $r109.<com.sleepycat.je.statcap.StatCapture: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String,long,com.sleepycat.je.CustomStats,java.util.SortedSet,com.sleepycat.je.statcap.StatManager)>(this, "StatCapture", $l5, $r112, $r113, $r114);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatCapture statCapture> = $r109;

        $r115 = new com.sleepycat.je.log.LogFlusher;

        specialinvoke $r115.<com.sleepycat.je.log.LogFlusher: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogFlusher logFlusher> = $r115;

        $r116 = new com.sleepycat.je.util.verify.DataVerifier;

        specialinvoke $r116.<com.sleepycat.je.util.verify.DataVerifier: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.util.verify.DataVerifier dataVerifier> = $r116;

        $r117 = new com.sleepycat.je.dbi.NodeSequence;

        specialinvoke $r117.<com.sleepycat.je.dbi.NodeSequence: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.NodeSequence nodeSequence> = $r117;

        $r118 = new com.sleepycat.je.dbi.DbTree;

        $z7 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReplicated()>();

        $z8 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean getPreserveVLSN()>();

        specialinvoke $r118.<com.sleepycat.je.dbi.DbTree: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,boolean,boolean)>(this, $z7, $z8);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree> = $r118;

        $r119 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r119.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)>(0);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.locks.ReentrantReadWriteLock secondaryAssociationLock> = $r119;

        $r120 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.NodeSequence nodeSequence>;

        virtualinvoke $r120.<com.sleepycat.je.dbi.NodeSequence: void initRealNodeId()>();

        $r121 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatManager statManager>;

        $r122 = virtualinvoke $r121.<com.sleepycat.je.statcap.StatManager: java.lang.Integer registerStatContext()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Integer statKey> = $r122;

        $z9 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 != 0 goto label06;

        $z10 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 != 0 goto label06;

        $r123 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r124 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam STATS_COLLECT>;

        $z11 = virtualinvoke $r123.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r124);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label06;

        $r125 = new com.sleepycat.je.statcap.EnvStatsLogger;

        specialinvoke $r125.<com.sleepycat.je.statcap.EnvStatsLogger: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger> = $r125;

        $r126 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void addConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)>($r126);

        $r127 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        virtualinvoke $r127.<com.sleepycat.je.statcap.EnvStatsLogger: void log()>();

     label06:
        success#394 = 1;

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#394);

        if success#394 != 0 goto label12;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void clearFileManager()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

        goto label12;

     label08:
        $r128 := @caughtexception;

     label09:
        l6 = $r128;

     label10:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#59);

        if success#59 != 0 goto label11;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void clearFileManager()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

     label11:
        throw l6;

     label12:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static boolean maybeForceYield()
    {
        boolean $z0;

        $z0 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean forcedYield>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        staticinvoke <java.lang.Thread: void yield()>();

     label1:
        return 1;
    }

    protected com.sleepycat.je.dbi.DbConfigManager initConfigManager(com.sleepycat.je.EnvironmentConfig, com.sleepycat.je.dbi.RepConfigProxy)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.EnvironmentConfig envConfig;
        com.sleepycat.je.dbi.RepConfigProxy repParams;
        com.sleepycat.je.dbi.DbConfigManager $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        envConfig := @parameter0: com.sleepycat.je.EnvironmentConfig;

        repParams := @parameter1: com.sleepycat.je.dbi.RepConfigProxy;

        $r0 = new com.sleepycat.je.dbi.DbConfigManager;

        specialinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: void <init>(com.sleepycat.je.EnvironmentConfig)>(envConfig);

        return $r0;
    }

    public synchronized void addConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.EnvConfigObserver o;
        java.util.List $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        o := @parameter0: com.sleepycat.je.dbi.EnvConfigObserver;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.List configObservers>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(o);

        return;
    }

    protected void initConfigParams(com.sleepycat.je.EnvironmentConfig, com.sleepycat.je.dbi.RepConfigProxy)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.EnvironmentConfig envConfig;
        com.sleepycat.je.dbi.RepConfigProxy repConfigProxy;
        com.sleepycat.je.dbi.DbConfigManager $r0, $r2, $r5, $r8, $r10, $r12, $r14, $r16, $r18, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41;
        com.sleepycat.je.config.BooleanConfigParam $r1, $r3, $r6, $r9, $r11, $r13, $r15, $r19, $r22, $r34, $r36, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.IllegalArgumentException $r7;
        com.sleepycat.je.config.IntConfigParam $r17, $r24, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.sleepycat.je.config.DurationConfigParam $r26, $r28, $r30, $r32, $r42;
        long $l8;
        com.sleepycat.je.ProgressListener $r43;
        java.lang.ClassLoader $r44;
        com.sleepycat.je.PreloadConfig $r45;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        envConfig := @parameter0: com.sleepycat.je.EnvironmentConfig;

        repConfigProxy := @parameter1: com.sleepycat.je.dbi.RepConfigProxy;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r1 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_FORCED_YIELD>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r1);

        <com.sleepycat.je.dbi.EnvironmentImpl: boolean forcedYield> = $z0;

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r3 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_INIT_TXN>;

        $z1 = virtualinvoke $r2.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r3);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isTransactional> = $z1;

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r6 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_INIT_LOCKING>;

        $z2 = virtualinvoke $r5.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isNoLocking> = $z3;

        $z4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isTransactional>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label3;

        $z5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isNoLocking>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set \'je.env.isNoLocking\' and \'je.env.isTransactional\';");

        throw $r7;

     label3:
        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r9 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_RDONLY>;

        $z6 = virtualinvoke $r8.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r9);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly> = $z6;

        $r10 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r11 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam LOG_MEMORY_ONLY>;

        $z7 = virtualinvoke $r10.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r11);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly> = $z7;

        $r12 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r13 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_DB_EVICTION>;

        $z8 = virtualinvoke $r12.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r13);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean dbEviction> = $z8;

        $r14 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r15 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam OFFHEAP_CHECKSUM>;

        $z9 = virtualinvoke $r14.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r15);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean useOffHeapChecksums> = $z9;

        $r16 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r17 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam ADLER32_CHUNK_SIZE>;

        $i0 = virtualinvoke $r16.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r17);

        <com.sleepycat.je.dbi.EnvironmentImpl: int adler32ChunkSize> = $i0;

        $r18 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r19 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_SHARED_CACHE>;

        $z10 = virtualinvoke $r18.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r19);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache> = $z10;

        $r21 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r22 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam JE_LOGGING_DBLOG>;

        $z11 = virtualinvoke $r21.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r22);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 != 0 goto label4;

        $z12 = 1;

        goto label5;

     label4:
        $z12 = 0;

     label5:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean dbLoggingDisabled> = $z12;

        $r23 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r24 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam TREE_COMPACT_MAX_KEY_LENGTH>;

        $i1 = virtualinvoke $r23.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r24);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int compactMaxKeyLength> = $i1;

        $r25 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r26 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam ENV_LATCH_TIMEOUT>;

        $i2 = virtualinvoke $r25.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r26);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int latchTimeoutMs> = $i2;

        $r27 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r28 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam ENV_TTL_CLOCK_TOLERANCE>;

        $i3 = virtualinvoke $r27.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r28);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int ttlClockTolerance> = $i3;

        $r29 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r30 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam ENV_TTL_MAX_TXN_TIME>;

        $i4 = virtualinvoke $r29.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r30);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int ttlMaxTxnTime> = $i4;

        $r31 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r32 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam ENV_TTL_LN_PURGE_DELAY>;

        $i5 = virtualinvoke $r31.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r32);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int ttlLnPurgeDelay> = $i5;

        $r33 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r34 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam BIN_DELTA_BLIND_OPS>;

        $z13 = virtualinvoke $r33.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r34);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean allowBlindOps> = $z13;

        $r35 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r36 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam BIN_DELTA_BLIND_PUTS>;

        $z14 = virtualinvoke $r35.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r36);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean allowBlindPuts> = $z14;

        $r37 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r38 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam TREE_MAX_EMBEDDED_LN>;

        $i6 = virtualinvoke $r37.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r38);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int maxEmbeddedLN> = $i6;

        $r39 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r40 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam LOCK_DEADLOCK_DETECT>;

        $z15 = virtualinvoke $r39.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r40);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean deadlockDetection> = $z15;

        $r41 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r42 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam LOCK_DEADLOCK_DETECT_DELAY>;

        $i7 = virtualinvoke $r41.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r42);

        $l8 = (long) $i7;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long deadlockDetectionDelay> = $l8;

        $r43 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: com.sleepycat.je.ProgressListener getRecoveryProgressListener()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ProgressListener recoveryProgressListener> = $r43;

        $r44 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: java.lang.ClassLoader getClassLoader()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.ClassLoader classLoader> = $r44;

        $r45 = virtualinvoke envConfig.<com.sleepycat.je.EnvironmentConfig: com.sleepycat.je.PreloadConfig getDupConvertPreloadConfig()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.PreloadConfig dupConvertPreloadConfig> = $r45;

        return;
    }

    protected java.util.logging.Formatter initFormatter()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.TracerFormatter $r0;
        java.lang.String $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = new com.sleepycat.je.utilint.TracerFormatter;

        $r1 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String getName()>();

        specialinvoke $r0.<com.sleepycat.je.utilint.TracerFormatter: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    private java.util.logging.FileHandler initFileHandler() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean setupLoggers, $z0, $z1;
        java.lang.String handlerName, logFilePattern, logLimit, logCount, $r13, $r17, $r24;
        java.io.IOException e, $r20;
        com.sleepycat.je.dbi.DbConfigManager $r0;
        com.sleepycat.je.config.BooleanConfigParam $r1;
        java.io.File $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r21, $r22, $r23;
        int limit#27, count#40;
        com.sleepycat.je.util.FileHandler $r18;
        java.util.logging.Formatter $r19;
        com.sleepycat.je.EnvironmentFailureException $r25;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r1 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_SETUP_LOGGER>;

        setupLoggers = virtualinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r1);

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 == null goto label1;

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $z1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(setupLoggers);

        if setupLoggers != 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = class "com/sleepycat/je/util/FileHandler";

        handlerName = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("je.info");

        logFilePattern = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        limit#27 = 10000000;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(handlerName);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".limit");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        logLimit = staticinvoke <com.sleepycat.je.utilint.LoggerUtils: java.lang.String getLoggerProperty(java.lang.String)>($r13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logLimit);

        if logLimit == null goto label3;

        limit#27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(logLimit);

     label3:
        count#40 = 10;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(handlerName);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".count");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        logCount = staticinvoke <com.sleepycat.je.utilint.LoggerUtils: java.lang.String getLoggerProperty(java.lang.String)>($r17);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logCount);

        if logCount == null goto label4;

        count#40 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(logCount);

     label4:
        $r18 = new com.sleepycat.je.util.FileHandler;

        $r19 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Formatter formatter>;

        specialinvoke $r18.<com.sleepycat.je.util.FileHandler: void <init>(java.lang.String,int,int,java.util.logging.Formatter,com.sleepycat.je.dbi.EnvironmentImpl)>(logFilePattern, limit#27, count#40, $r19, this);

     label5:
        return $r18;

     label6:
        $r20 := @caughtexception;

        e = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem creating output files in: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(logFilePattern);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedException(java.lang.String,java.lang.Exception)>($r24, e);

        throw $r25;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public com.sleepycat.je.statcap.StatManager createStatManager()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.statcap.StatManager $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = new com.sleepycat.je.statcap.StatManager;

        specialinvoke $r0.<com.sleepycat.je.statcap.StatManager: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        return $r0;
    }

    public java.util.SortedSet getStatCaptureProjections()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.statcap.StatCaptureDefinitions $r0;
        java.util.SortedSet $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = new com.sleepycat.je.statcap.StatCaptureDefinitions;

        specialinvoke $r0.<com.sleepycat.je.statcap.StatCaptureDefinitions: void <init>()>();

        $r1 = virtualinvoke $r0.<com.sleepycat.je.statcap.StatCaptureDefinitions: java.util.SortedSet getStatisticProjections()>();

        return $r1;
    }

    public boolean isReplicated()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return 0;
    }

    public boolean getPreserveVLSN()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return 0;
    }

    public boolean isReadOnly()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        return $z0;
    }

    public boolean isMemOnly()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly>;

        return $z0;
    }

    private void clearFileManager() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.log.FileManager $r0, $r1, $r3;
        java.lang.Throwable $r2, l1#6, $r4, l1#10;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r1.<com.sleepycat.je.log.FileManager: void clear()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        l1#6 = $r2;

     label4:
        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r3.<com.sleepycat.je.log.FileManager: void close()>();

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        l1#10 = $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void closeHandlers()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.logging.ConsoleHandler $r0, $r1;
        java.util.logging.FileHandler $r2, $r3;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.ConsoleHandler consoleHandler>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.ConsoleHandler consoleHandler>;

        virtualinvoke $r1.<java.util.logging.ConsoleHandler: void close()>();

     label1:
        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.FileHandler fileHandler>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 == null goto label2;

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.FileHandler fileHandler>;

        virtualinvoke $r3.<java.util.logging.FileHandler: void close()>();

     label2:
        return;
    }

    public com.sleepycat.je.dbi.DbConfigManager getConfigManager()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbConfigManager $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        return $r0;
    }

    public java.lang.String getName()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.String $r0, $r2, $r3;
        java.io.File $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String optionalNodeName>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;

     label1:
        $r3 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String getOptionalNodeName()>();

        return $r3;
    }

    public java.lang.String getOptionalNodeName()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.String $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String optionalNodeName>;

        return $r0;
    }

    public boolean getSharedCache()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache>;

        return $z0;
    }

    public boolean isArbiter()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return 0;
    }

    public java.lang.String makeDaemonThreadName(java.lang.String)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.String daemonName, $r0, $r4, $r7;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        daemonName := @parameter0: java.lang.String;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String optionalNodeName>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return daemonName;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(daemonName);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String optionalNodeName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public com.sleepycat.je.log.FileManager getFileManager()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.log.FileManager $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        return $r0;
    }

    public boolean isNoLocking()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isNoLocking>;

        return $z0;
    }

    public com.sleepycat.je.dbi.MemoryBudget getMemoryBudget()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.MemoryBudget $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        return $r0;
    }

    public java.io.File getEnvironmentHome()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.io.File $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        return $r0;
    }

    public com.sleepycat.je.EnvironmentConfig cloneConfig()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbConfigManager $r0;
        com.sleepycat.je.EnvironmentConfig $r1, $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: com.sleepycat.je.EnvironmentConfig getEnvironmentConfig()>();

        $r2 = virtualinvoke $r1.<com.sleepycat.je.EnvironmentConfig: com.sleepycat.je.EnvironmentConfig clone()>();

        return $r2;
    }

    public com.sleepycat.je.log.LogManager getLogManager()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.log.LogManager $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        return $r0;
    }

    public void checkIfInvalid() throws com.sleepycat.je.EnvironmentFailureException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.EnvironmentFailureException efe, $r5, $r11;
        com.sleepycat.je.dbi.DbEnvState $r0, $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.AssertionError $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r1 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INVALID>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r0 == $r1 goto label1;

        return;

     label1:
        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        efe = (com.sleepycat.je.EnvironmentFailureException) $r3;

        $z0 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(efe);

        if efe != null goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        virtualinvoke efe.<com.sleepycat.je.EnvironmentFailureException: void setAlreadyThrown(boolean)>(1);

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException preallocatedEFE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(efe);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if efe != $r5 goto label3;

        virtualinvoke efe.<com.sleepycat.je.EnvironmentFailureException: java.lang.Throwable fillInStackTrace()>();

        throw efe;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Environment must be closed, caused by: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(efe);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke efe.<com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException wrapSelf(java.lang.String)>($r10);

        throw $r11;
    }

    public void checkImmutablePropsForEquality(java.util.Properties) throws java.lang.IllegalArgumentException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.Properties handleConfigProps;
        com.sleepycat.je.dbi.DbConfigManager $r0;
        com.sleepycat.je.EnvironmentConfig $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        handleConfigProps := @parameter0: java.util.Properties;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: com.sleepycat.je.EnvironmentConfig getEnvironmentConfig()>();

        staticinvoke <com.sleepycat.je.DbInternal: void checkImmutablePropsForEquality(com.sleepycat.je.EnvironmentMutableConfig,java.util.Properties)>($r1, handleConfigProps);

        return;
    }

    void incOpenCount()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.atomic.AtomicInteger $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicInteger openCount>;

        virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }

    public synchronized boolean finishInit(com.sleepycat.je.EnvironmentConfig) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.EnvironmentConfig envConfig;
        boolean doRecovery, l4, $z0, success#5, recoverySuccess#12, $z1, recoverySuccess#22, $z2, $z3, $z4;
        com.sleepycat.je.recovery.RecoveryManager recoveryManager, $r2;
        java.lang.Throwable l6, l8, $r11, $r35;
        com.sleepycat.je.dbi.DbConfigManager $r0, $r19, $r21, $r23, $r27, $r29;
        com.sleepycat.je.config.BooleanConfigParam $r1, $r20;
        com.sleepycat.je.log.LogManager $r4, $r12;
        com.sleepycat.je.log.FileManager $r5, $r13;
        java.io.IOException $r6, e#28, $r14, e#47;
        com.sleepycat.je.EnvironmentFailureException $r7, $r10, $r15, $r18;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r8, $r16;
        java.lang.Exception $r9, e#36, $r17, e#55;
        com.sleepycat.je.config.DurationConfigParam $r22, $r24;
        int $i0, $i2;
        long $l1, $l3, $l4;
        com.sleepycat.je.dbi.MemoryBudget $r25;
        com.sleepycat.je.dbi.DbTree $r26;
        com.sleepycat.je.Environment $r28;
        com.sleepycat.je.evictor.Evictor $r30, $r36;
        com.sleepycat.je.dbi.StartupTracker $r31, $r33, $r37, $r39;
        com.sleepycat.je.dbi.StartupTracker$Phase $r32, $r38;
        com.sleepycat.je.RecoveryProgress $r34, $r40;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        envConfig := @parameter0: com.sleepycat.je.EnvironmentConfig;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean initializedSuccessfully>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label01;

        return 0;

     label01:
        success#5 = 0;

     label02:
        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r1 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_RECOVERY>;

        doRecovery = virtualinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(doRecovery);

        if doRecovery == 0 goto label19;

        recoverySuccess#12 = 0;

     label03:
        $r2 = new com.sleepycat.je.recovery.RecoveryManager;

        specialinvoke $r2.<com.sleepycat.je.recovery.RecoveryManager: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        recoveryManager = $r2;

        $z1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        virtualinvoke recoveryManager.<com.sleepycat.je.recovery.RecoveryManager: com.sleepycat.je.recovery.RecoveryInfo recover(boolean)>($z1);

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void postRecoveryConversion()>();

        recoverySuccess#22 = 1;

     label04:
        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        virtualinvoke $r4.<com.sleepycat.je.log.LogManager: void flushSync()>();

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r5.<com.sleepycat.je.log.FileManager: void clear()>();

     label05:
        goto label18;

     label06:
        $r6 := @caughtexception;

        e#28 = $r6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(recoverySuccess#22);

        if recoverySuccess#22 == 0 goto label07;

        $r7 = new com.sleepycat.je.EnvironmentFailureException;

        $r8 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        specialinvoke $r7.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>(this, $r8, e#28);

        throw $r7;

     label07:
        goto label18;

     label08:
        $r9 := @caughtexception;

        e#36 = $r9;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(recoverySuccess#22);

        if recoverySuccess#22 == 0 goto label09;

        $r10 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedException(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Exception)>(this, e#36);

        throw $r10;

     label09:
        goto label18;

     label10:
        $r11 := @caughtexception;

     label11:
        l6 = $r11;

     label12:
        $r12 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        virtualinvoke $r12.<com.sleepycat.je.log.LogManager: void flushSync()>();

        $r13 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r13.<com.sleepycat.je.log.FileManager: void clear()>();

     label13:
        goto label17;

     label14:
        $r14 := @caughtexception;

        e#47 = $r14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(recoverySuccess#12);

        if recoverySuccess#12 == 0 goto label15;

        $r15 = new com.sleepycat.je.EnvironmentFailureException;

        $r16 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason LOG_INTEGRITY>;

        specialinvoke $r15.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>(this, $r16, e#47);

        throw $r15;

     label15:
        goto label17;

     label16:
        $r17 := @caughtexception;

        e#55 = $r17;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(recoverySuccess#12);

        if recoverySuccess#12 == 0 goto label17;

        $r18 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedException(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Exception)>(this, e#55);

        throw $r18;

     label17:
        throw l6;

     label18:
        goto label20;

     label19:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly> = 1;

        $r19 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r20 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_COMPARATORS_REQUIRED>;

        $z2 = virtualinvoke $r19.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r20);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label20;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean noComparators> = 1;

     label20:
        $r21 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r22 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam LOCK_TIMEOUT>;

        $i0 = virtualinvoke $r21.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r22);

        $l1 = (long) $i0;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long lockTimeout> = $l1;

        $r23 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r24 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam TXN_TIMEOUT>;

        $i2 = virtualinvoke $r23.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r24);

        $l3 = (long) $i2;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long txnTimeout> = $l3;

        $r25 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        $r26 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        $l4 = virtualinvoke $r26.<com.sleepycat.je.dbi.DbTree: long getTreeAdminMemory()>();

        virtualinvoke $r25.<com.sleepycat.je.dbi.MemoryBudget: void initCacheMemoryUsage(long)>($l4);

        $r27 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void envConfigUpdate(com.sleepycat.je.dbi.DbConfigManager,com.sleepycat.je.EnvironmentMutableConfig)>($r27, envConfig);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean initializedSuccessfully> = 1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(doRecovery);

        if doRecovery == 0 goto label21;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void convertDupDatabases()>();

        $r28 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment createInternalEnvironment()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment envInternal> = $r28;

     label21:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void open()>();

        $r29 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void runOrPauseDaemons(com.sleepycat.je.dbi.DbConfigManager)>($r29);

        success#5 = 1;

        l4 = 1;

     label22:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#5);

        if success#5 != 0 goto label23;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void clearFileManager()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

     label23:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#5);

        if success#5 != 0 goto label24;

        $z3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label24;

        $r30 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r30.<com.sleepycat.je.evictor.Evictor: void removeSharedCacheEnv(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

     label24:
        $r31 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker>;

        $r32 = <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase TOTAL_ENV_OPEN>;

        virtualinvoke $r31.<com.sleepycat.je.dbi.StartupTracker: void stop(com.sleepycat.je.dbi.StartupTracker$Phase)>($r32);

        $r33 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker>;

        $r34 = <com.sleepycat.je.RecoveryProgress: com.sleepycat.je.RecoveryProgress RECOVERY_FINISHED>;

        virtualinvoke $r33.<com.sleepycat.je.dbi.StartupTracker: void setProgress(com.sleepycat.je.RecoveryProgress)>($r34);

        return l4;

     label25:
        $r35 := @caughtexception;

     label26:
        l8 = $r35;

     label27:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#5);

        if success#5 != 0 goto label28;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void clearFileManager()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

     label28:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(success#5);

        if success#5 != 0 goto label29;

        $z4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label29;

        $r36 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r36.<com.sleepycat.je.evictor.Evictor: void removeSharedCacheEnv(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

     label29:
        $r37 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker>;

        $r38 = <com.sleepycat.je.dbi.StartupTracker$Phase: com.sleepycat.je.dbi.StartupTracker$Phase TOTAL_ENV_OPEN>;

        virtualinvoke $r37.<com.sleepycat.je.dbi.StartupTracker: void stop(com.sleepycat.je.dbi.StartupTracker$Phase)>($r38);

        $r39 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker>;

        $r40 = <com.sleepycat.je.RecoveryProgress: com.sleepycat.je.RecoveryProgress RECOVERY_FINISHED>;

        virtualinvoke $r39.<com.sleepycat.je.dbi.StartupTracker: void setProgress(com.sleepycat.je.RecoveryProgress)>($r40);

        throw l8;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label02 to label22 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public static int getAdler32ChunkSize()
    {
        int $i0;

        $i0 = <com.sleepycat.je.dbi.EnvironmentImpl: int adler32ChunkSize>;

        return $i0;
    }

    protected void postRecoveryConversion()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return;
    }

    public void envConfigUpdate(com.sleepycat.je.dbi.DbConfigManager, com.sleepycat.je.EnvironmentMutableConfig)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbConfigManager mgr;
        com.sleepycat.je.EnvironmentMutableConfig newConfig;
        java.util.logging.Level newConsoleHandlerLevel, newFileHandlerLevel;
        com.sleepycat.je.config.IntConfigParam $r0, $r1;
        int $i0, $i1, $i2;
        com.sleepycat.je.config.DurationConfigParam $r2;
        long $l3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.sleepycat.je.config.ConfigParam $r3, $r6;
        java.lang.String $r4, $r7;
        java.util.logging.ConsoleHandler $r5;
        java.util.logging.FileHandler $r8, $r9;
        com.sleepycat.je.ExceptionListener $r10;
        com.sleepycat.je.CacheMode $r11;
        com.sleepycat.je.config.BooleanConfigParam $r12, $r13, $r14;
        com.sleepycat.je.statcap.EnvStatsLogger $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        mgr := @parameter0: com.sleepycat.je.dbi.DbConfigManager;

        newConfig := @parameter1: com.sleepycat.je.EnvironmentMutableConfig;

        $r0 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam ENV_BACKGROUND_READ_LIMIT>;

        $i0 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r0);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadLimit> = $i0;

        $r1 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.IntConfigParam ENV_BACKGROUND_WRITE_LIMIT>;

        $i1 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: int getInt(com.sleepycat.je.config.IntConfigParam)>($r1);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundWriteLimit> = $i1;

        $r2 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.DurationConfigParam ENV_BACKGROUND_SLEEP_INTERVAL>;

        $i2 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: int getDuration(com.sleepycat.je.config.DurationConfigParam)>($r2);

        $l3 = (long) $i2;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundSleepInterval> = $l3;

        $z0 = virtualinvoke newConfig.<com.sleepycat.je.EnvironmentMutableConfig: boolean isConfigParamSet(java.lang.String)>("com.sleepycat.je.util.ConsoleHandler.level");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r3 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.ConfigParam JE_CONSOLE_LEVEL>;

        $r4 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(com.sleepycat.je.config.ConfigParam)>($r3);

        newConsoleHandlerLevel = staticinvoke <java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>($r4);

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.ConsoleHandler consoleHandler>;

        virtualinvoke $r5.<java.util.logging.ConsoleHandler: void setLevel(java.util.logging.Level)>(newConsoleHandlerLevel);

     label1:
        $z1 = virtualinvoke newConfig.<com.sleepycat.je.EnvironmentMutableConfig: boolean isConfigParamSet(java.lang.String)>("com.sleepycat.je.util.FileHandler.level");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r6 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.ConfigParam JE_FILE_LEVEL>;

        $r7 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(com.sleepycat.je.config.ConfigParam)>($r6);

        newFileHandlerLevel = staticinvoke <java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>($r7);

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.FileHandler fileHandler>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8);

        if $r8 == null goto label2;

        $r9 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.FileHandler fileHandler>;

        virtualinvoke $r9.<java.util.logging.FileHandler: void setLevel(java.util.logging.Level)>(newFileHandlerLevel);

     label2:
        $r10 = virtualinvoke newConfig.<com.sleepycat.je.EnvironmentMutableConfig: com.sleepycat.je.ExceptionListener getExceptionListener()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ExceptionListener exceptionListener> = $r10;

        $r11 = virtualinvoke newConfig.<com.sleepycat.je.EnvironmentMutableConfig: com.sleepycat.je.CacheMode getCacheMode()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.CacheMode cacheMode> = $r11;

        $r12 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_EXPIRATION_ENABLED>;

        $z2 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r12);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean expirationEnabled> = $z2;

        $r13 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_EXPOSE_USER_DATA>;

        $z3 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r13);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean exposeUserData> = $z3;

        $r14 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam STATS_COLLECT>;

        $z4 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r14);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label3;

        $r15 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r15);

        if $r15 != null goto label5;

        $z5 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label5;

        $z6 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 != 0 goto label5;

        $r16 = new com.sleepycat.je.statcap.EnvStatsLogger;

        specialinvoke $r16.<com.sleepycat.je.statcap.EnvStatsLogger: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger> = $r16;

        $r17 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void addConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)>($r17);

        $r18 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        virtualinvoke $r18.<com.sleepycat.je.statcap.EnvStatsLogger: void log()>();

        goto label5;

     label3:
        $r19 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r19);

        if $r19 == null goto label4;

        $r20 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger>;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void removeConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)>($r20);

     label4:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.EnvStatsLogger envStatLogger> = null;

     label5:
        $z7 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isValid()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label6;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void runOrPauseDaemons(com.sleepycat.je.dbi.DbConfigManager)>(mgr);

     label6:
        return;
    }

    private void convertDupDatabases()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.tree.dupConvert.DupConvert dupConvert, $r1;
        com.sleepycat.je.dbi.DbTree $r0, $r2, $r3;
        boolean $z0;
        com.sleepycat.je.log.LogManager $r4;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.dbi.DbTree: boolean getDupsConverted()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new com.sleepycat.je.tree.dupConvert.DupConvert;

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        specialinvoke $r1.<com.sleepycat.je.tree.dupConvert.DupConvert: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.DbTree)>(this, $r2);

        dupConvert = $r1;

        virtualinvoke dupConvert.<com.sleepycat.je.tree.dupConvert.DupConvert: void convertDatabases()>();

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        virtualinvoke $r3.<com.sleepycat.je.dbi.DbTree: void setDupsConverted()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void logMapTreeRoot()>();

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        virtualinvoke $r4.<com.sleepycat.je.log.LogManager: void flushSync()>();

        return;
    }

    protected com.sleepycat.je.Environment createInternalEnvironment()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.EnvironmentImpl$InternalEnvironment $r0;
        java.io.File $r1;
        com.sleepycat.je.EnvironmentConfig $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = new com.sleepycat.je.dbi.EnvironmentImpl$InternalEnvironment;

        $r1 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File getEnvironmentHome()>();

        $r2 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentConfig cloneConfig()>();

        specialinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl$InternalEnvironment: void <init>(java.io.File,com.sleepycat.je.EnvironmentConfig,com.sleepycat.je.dbi.EnvironmentImpl)>($r1, $r2, this);

        return $r0;
    }

    public void open()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReference $r0;
        java.lang.Object $r1;
        java.lang.AssertionError $r2;
        com.sleepycat.je.dbi.DbEnvState $r3;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        $r1 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r3 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState OPEN>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState> = $r3;

        return;
    }

    private void runOrPauseDaemons(com.sleepycat.je.dbi.DbConfigManager)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbConfigManager mgr;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.sleepycat.je.incomp.INCompressor $r0;
        com.sleepycat.je.config.BooleanConfigParam $r1, $r3, $r5, $r7;
        com.sleepycat.je.cleaner.Cleaner $r2;
        com.sleepycat.je.recovery.Checkpointer $r4;
        com.sleepycat.je.statcap.StatCapture $r6;
        com.sleepycat.je.log.LogFlusher $r8;
        com.sleepycat.je.util.verify.DataVerifier $r9;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        mgr := @parameter0: com.sleepycat.je.dbi.DbConfigManager;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        $r1 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_RUN_INCOMPRESSOR>;

        $z1 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r1);

        virtualinvoke $r0.<com.sleepycat.je.incomp.INCompressor: void runOrPause(boolean)>($z1);

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        $r3 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_RUN_CLEANER>;

        $z2 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label2;

        $z3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMemOnly>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        virtualinvoke $r2.<com.sleepycat.je.cleaner.Cleaner: void runOrPause(boolean)>($z4);

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        $r5 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_RUN_CHECKPOINTER>;

        $z5 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r5);

        virtualinvoke $r4.<com.sleepycat.je.recovery.Checkpointer: void runOrPause(boolean)>($z5);

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatCapture statCapture>;

        $r7 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam STATS_COLLECT>;

        $z6 = virtualinvoke mgr.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r7);

        virtualinvoke $r6.<com.sleepycat.je.statcap.StatCapture: void runOrPause(boolean)>($z6);

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogFlusher logFlusher>;

        virtualinvoke $r8.<com.sleepycat.je.log.LogFlusher: void configFlushTask(com.sleepycat.je.dbi.DbConfigManager)>(mgr);

        $r9 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.util.verify.DataVerifier dataVerifier>;

        virtualinvoke $r9.<com.sleepycat.je.util.verify.DataVerifier: void configVerifyTask(com.sleepycat.je.dbi.DbConfigManager)>(mgr);

        return;
    }

    public com.sleepycat.je.txn.TxnManager getTxnManager()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.txn.TxnManager $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager>;

        return $r0;
    }

    public void logMapTreeRoot() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void logMapTreeRoot(long)>(-1L);

        return;
    }

    public void logMapTreeRoot(long) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long ifBeforeLsn, $l1, $l3;
        java.lang.Throwable l3, $r7;
        com.sleepycat.je.latch.Latch $r0, $r6, $r8;
        byte $b0;
        int $i2;
        com.sleepycat.je.log.LogManager $r1;
        com.sleepycat.je.log.LogEntryType $r2;
        com.sleepycat.je.dbi.DbTree $r3;
        com.sleepycat.je.log.entry.SingleItemEntry $r4;
        com.sleepycat.je.log.ReplicationContext $r5;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        ifBeforeLsn := @parameter0: long;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r0.<com.sleepycat.je.latch.Latch: void acquireExclusive()>();

     label1:
        $b0 = ifBeforeLsn cmp -1L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 == 0 goto label2;

        $l1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn>;

        $i2 = staticinvoke <com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l1, ifBeforeLsn);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 >= 0 goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        $r2 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DBTREE>;

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        $r4 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(com.sleepycat.je.log.LogEntryType,com.sleepycat.je.log.Loggable)>($r2, $r3);

        $r5 = <com.sleepycat.je.log.ReplicationContext: com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        $l3 = virtualinvoke $r1.<com.sleepycat.je.log.LogManager: long log(com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.ReplicationContext)>($r4, $r5);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn> = $l3;

     label3:
        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r6.<com.sleepycat.je.latch.Latch: void release()>();

        goto label5;

     label4:
        $r7 := @caughtexception;

        l3 = $r7;

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r8.<com.sleepycat.je.latch.Latch: void release()>();

        throw l3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public boolean mayNotWrite()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvState $r0, $r1, $r2, $r3;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r1 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INVALID>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r0 == $r1 goto label1;

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r3 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r2 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public com.sleepycat.je.utilint.VLSN assignVLSNs(com.sleepycat.je.log.entry.LogEntry)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.log.entry.LogEntry entry;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        entry := @parameter0: com.sleepycat.je.log.entry.LogEntry;

        return null;
    }

    public void invalidate(java.lang.Error)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.Error e;
        com.sleepycat.je.EnvironmentFailureException l2, $r0, $r1, $r3, $r6;
        java.lang.Throwable l3, $r2, $r5;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        e := @parameter0: java.lang.Error;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException preallocatedEFE>;

        l2 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException preallocatedEFE>;

        $r2 = virtualinvoke $r1.<com.sleepycat.je.EnvironmentFailureException: java.lang.Throwable getCause()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r2 != null goto label2;

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException preallocatedEFE>;

        virtualinvoke $r3.<com.sleepycat.je.EnvironmentFailureException: java.lang.Throwable initCause(java.lang.Throwable)>(e);

     label2:
        exitmonitor l2;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        l3 = $r5;

        exitmonitor l2;

     label6:
        throw l3;

     label7:
        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.EnvironmentFailureException preallocatedEFE>;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void invalidate(com.sleepycat.je.EnvironmentFailureException)>($r6);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void invalidate(com.sleepycat.je.EnvironmentFailureException)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.EnvironmentFailureException e;
        java.util.concurrent.atomic.AtomicReference $r0, $r1;
        boolean $z1;
        com.sleepycat.je.EnvironmentWedgedException $r2;
        com.sleepycat.je.dbi.DbEnvState $r3, $r4, $r5;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        e := @parameter0: com.sleepycat.je.EnvironmentFailureException;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, e);

        $z1 = e instanceof com.sleepycat.je.EnvironmentWedgedException;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference wedgedEFE>;

        $r2 = (com.sleepycat.je.EnvironmentWedgedException) e;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r2);

     label1:
        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r4 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r3 == $r4 goto label2;

        $r5 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INVALID>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState> = $r5;

     label2:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void requestShutdownDaemons()>();

        return;
    }

    public void requestShutdownDaemons()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.incomp.INCompressor $r0;
        boolean $z0;
        com.sleepycat.je.evictor.Evictor $r1;
        com.sleepycat.je.evictor.OffHeapCache $r2;
        com.sleepycat.je.recovery.Checkpointer $r3;
        com.sleepycat.je.cleaner.Cleaner $r4;
        com.sleepycat.je.statcap.StatCapture $r5;
        com.sleepycat.je.log.LogFlusher $r6;
        com.sleepycat.je.util.verify.DataVerifier $r7;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean closing> = 1;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        virtualinvoke $r0.<com.sleepycat.je.incomp.INCompressor: void requestShutdown()>();

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r1.<com.sleepycat.je.evictor.Evictor: void requestShutdown()>();

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        virtualinvoke $r2.<com.sleepycat.je.evictor.OffHeapCache: void requestShutdown()>();

     label1:
        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        virtualinvoke $r3.<com.sleepycat.je.recovery.Checkpointer: void requestShutdown()>();

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        virtualinvoke $r4.<com.sleepycat.je.cleaner.Cleaner: void requestShutdown()>();

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatCapture statCapture>;

        virtualinvoke $r5.<com.sleepycat.je.statcap.StatCapture: void requestShutdown()>();

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogFlusher logFlusher>;

        virtualinvoke $r6.<com.sleepycat.je.log.LogFlusher: void requestShutdown()>();

        $r7 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.util.verify.DataVerifier dataVerifier>;

        virtualinvoke $r7.<com.sleepycat.je.util.verify.DataVerifier: void requestShutdown()>();

        return;
    }

    public java.util.Collection getRepStatGroups(com.sleepycat.je.StatsConfig, java.lang.Integer)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.StatsConfig config;
        java.lang.Integer statkey;
        java.lang.UnsupportedOperationException $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.StatsConfig;

        statkey := @parameter1: java.lang.Integer;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Standalone Environment doesn\'t support replication statistics.");

        throw $r0;
    }

    public com.sleepycat.je.EnvironmentStats loadStatsInternal(com.sleepycat.je.StatsConfig) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.StatsConfig config;
        com.sleepycat.je.EnvironmentStats stats, $r0;
        java.lang.Object l3, $r1;
        java.lang.Throwable l4, $r21;
        com.sleepycat.je.incomp.INCompressor $r2;
        com.sleepycat.je.utilint.StatGroup $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r19, $r20;
        com.sleepycat.je.recovery.Checkpointer $r4;
        com.sleepycat.je.cleaner.Cleaner $r6;
        com.sleepycat.je.log.LogManager $r8;
        com.sleepycat.je.dbi.MemoryBudget $r10;
        com.sleepycat.je.evictor.Evictor $r12;
        com.sleepycat.je.evictor.OffHeapCache $r14;
        com.sleepycat.je.txn.TxnManager $r16;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.StatsConfig;

        $r0 = new com.sleepycat.je.EnvironmentStats;

        specialinvoke $r0.<com.sleepycat.je.EnvironmentStats: void <init>()>();

        stats = $r0;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object statSynchronizer>;

        l3 = $r1;

        entermonitor $r1;

     label1:
        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        $r3 = virtualinvoke $r2.<com.sleepycat.je.incomp.INCompressor: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setINCompStats(com.sleepycat.je.utilint.StatGroup)>($r3);

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        $r5 = virtualinvoke $r4.<com.sleepycat.je.recovery.Checkpointer: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setCkptStats(com.sleepycat.je.utilint.StatGroup)>($r5);

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        $r7 = virtualinvoke $r6.<com.sleepycat.je.cleaner.Cleaner: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setCleanerStats(com.sleepycat.je.utilint.StatGroup)>($r7);

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        $r9 = virtualinvoke $r8.<com.sleepycat.je.log.LogManager: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setLogStats(com.sleepycat.je.utilint.StatGroup)>($r9);

        $r10 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        $r11 = virtualinvoke $r10.<com.sleepycat.je.dbi.MemoryBudget: com.sleepycat.je.utilint.StatGroup loadStats()>();

        $r12 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        $r13 = virtualinvoke $r12.<com.sleepycat.je.evictor.Evictor: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setMBAndEvictorStats(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatGroup)>($r11, $r13);

        $r14 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        $r15 = virtualinvoke $r14.<com.sleepycat.je.evictor.OffHeapCache: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setOffHeapStats(com.sleepycat.je.utilint.StatGroup)>($r15);

        $r16 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager>;

        $r17 = virtualinvoke $r16.<com.sleepycat.je.txn.TxnManager: com.sleepycat.je.utilint.StatGroup loadStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setLockStats(com.sleepycat.je.utilint.StatGroup)>($r17);

        $r18 = specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup loadEnvImplStats(com.sleepycat.je.StatsConfig)>(config);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setEnvStats(com.sleepycat.je.utilint.StatGroup)>($r18);

        $r19 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup thrputStats>;

        $z0 = virtualinvoke config.<com.sleepycat.je.StatsConfig: boolean getClear()>();

        $r20 = virtualinvoke $r19.<com.sleepycat.je.utilint.StatGroup: com.sleepycat.je.utilint.StatGroup cloneGroup(boolean)>($z0);

        virtualinvoke stats.<com.sleepycat.je.EnvironmentStats: void setThroughputStats(com.sleepycat.je.utilint.StatGroup)>($r20);

        exitmonitor l3;

     label2:
        goto label6;

     label3:
        $r21 := @caughtexception;

     label4:
        l4 = $r21;

        exitmonitor l3;

     label5:
        throw l4;

     label6:
        return stats;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private com.sleepycat.je.utilint.StatGroup loadEnvImplStats(com.sleepycat.je.StatsConfig)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.StatsConfig config;
        com.sleepycat.je.utilint.StatGroup 'ret', $r1;
        com.sleepycat.je.utilint.StatDefinition $r0;
        com.sleepycat.je.utilint.LongStat ct, $r2;
        boolean $z0;
        long $l0;
        java.lang.Long $r3;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.StatsConfig;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.StatGroup envStats>;

        $z0 = virtualinvoke config.<com.sleepycat.je.StatsConfig: boolean getClear()>();

        'ret' = virtualinvoke $r1.<com.sleepycat.je.utilint.StatGroup: com.sleepycat.je.utilint.StatGroup cloneGroup(boolean)>($z0);

        $r2 = new com.sleepycat.je.utilint.LongStat;

        $r0 = <com.sleepycat.je.dbi.DbiStatDefinition: com.sleepycat.je.utilint.StatDefinition ENV_CREATION_TIME>;

        specialinvoke $r2.<com.sleepycat.je.utilint.LongStat: void <init>(com.sleepycat.je.utilint.StatGroup,com.sleepycat.je.utilint.StatDefinition)>('ret', $r0);

        ct = $r2;

        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long creationTime>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke ct.<com.sleepycat.je.utilint.LongStat: void set(java.lang.Long)>($r3);

        return 'ret';
    }

    public com.sleepycat.je.dbi.INList getInMemoryINs()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.INList $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.INList inMemoryINs>;

        return $r0;
    }

    public boolean isValid()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvState $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r0 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState OPEN>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r1 != $r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sleepycat.je.cleaner.ExpirationProfile getExpirationProfile()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.cleaner.Cleaner $r0;
        com.sleepycat.je.cleaner.ExpirationProfile $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.cleaner.Cleaner: com.sleepycat.je.cleaner.ExpirationProfile getExpirationProfile()>();

        return $r1;
    }

    public com.sleepycat.je.cleaner.UtilizationTracker getUtilizationTracker()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.cleaner.Cleaner $r0;
        com.sleepycat.je.cleaner.UtilizationTracker $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.cleaner.Cleaner: com.sleepycat.je.cleaner.UtilizationTracker getUtilizationTracker()>();

        return $r1;
    }

    public void updateBackgroundWrites(int, int)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int writeSize, logBufferSize, limit, writeCount, $i6, $i7, $i9;
        java.lang.Object l4, $r0;
        java.lang.Throwable l6, $r5;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l8, $l10, $l11, $l12;
        boolean $z0;
        byte $b13;
        java.lang.AssertionError $r4;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        writeSize := @parameter0: int;

        logBufferSize := @parameter1: int;

        limit = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundWriteLimit>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit);

        if limit <= 0 goto label7;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object backgroundTrackingMutex>;

        l4 = $r0;

        entermonitor $r0;

     label1:
        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundWriteBytes>;

        $l1 = (long) writeSize;

        $l2 = $l0 + $l1;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundWriteBytes> = $l2;

        $l3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundWriteBytes>;

        $l4 = (long) logBufferSize;

        $l5 = $l3 / $l4;

        writeCount = (int) $l5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(writeCount);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit);

        if writeCount < limit goto label2;

        $i6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog>;

        $i7 = $i6 + 1;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog> = $i7;

        $l8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundWriteBytes>;

        $i9 = limit * logBufferSize;

        $l10 = (long) $i9;

        $l11 = $l8 - $l10;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundWriteBytes> = $l11;

        $z0 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $l12 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundWriteBytes>;

        $b13 = $l12 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b13);

        if $b13 >= 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        exitmonitor l4;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        l6 = $r5;

        exitmonitor l4;

     label6:
        throw l6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public com.sleepycat.je.cleaner.Cleaner getCleaner()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.cleaner.Cleaner $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        return $r0;
    }

    public com.sleepycat.je.recovery.Checkpointer getCheckpointer()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.recovery.Checkpointer $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        return $r0;
    }

    public void registerVLSN(com.sleepycat.je.log.LogItem)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.log.LogItem logItem;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        logItem := @parameter0: com.sleepycat.je.log.LogItem;

        return;
    }

    public com.sleepycat.je.PreloadConfig getDupConvertPreloadConfig()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.PreloadConfig $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.PreloadConfig dupConvertPreloadConfig>;

        return $r0;
    }

    public java.util.logging.Logger getLogger()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.logging.Logger $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger envLogger>;

        return $r0;
    }

    public synchronized void removeConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.EnvConfigObserver o;
        java.util.List $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        o := @parameter0: com.sleepycat.je.dbi.EnvConfigObserver;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.List configObservers>;

        interfaceinvoke $r0.<java.util.List: boolean remove(java.lang.Object)>(o);

        return;
    }

    public com.sleepycat.je.ProgressListener getRecoveryProgressListener()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.ProgressListener $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ProgressListener recoveryProgressListener>;

        return $r0;
    }

    void alertEvictor()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.evictor.Evictor $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r0.<com.sleepycat.je.evictor.Evictor: void alert()>();

        return;
    }

    public boolean isInInit()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvState $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r0 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INIT>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r1 != $r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sleepycat.je.ExceptionListener getExceptionListener()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.ExceptionListener $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.ExceptionListener exceptionListener>;

        return $r0;
    }

    public com.sleepycat.je.EnvironmentFailureException getInvalidatingException()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.atomic.AtomicReference $r0;
        java.lang.Object $r1;
        com.sleepycat.je.EnvironmentFailureException $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        $r1 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r2 = (com.sleepycat.je.EnvironmentFailureException) $r1;

        return $r2;
    }

    public com.sleepycat.je.evictor.Evictor getEvictor()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.evictor.Evictor $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        return $r0;
    }

    public java.util.concurrent.atomic.AtomicReference getInvalidatingExceptionReference()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.atomic.AtomicReference $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        return $r0;
    }

    public synchronized void registerMBean(com.sleepycat.je.Environment) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.Environment env;
        boolean $z0;
        java.lang.String $r0, $r1, $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        env := @parameter0: com.sleepycat.je.Environment;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMBeanRegistered>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("JEMonitor");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String getMonitorClassName()>();

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void doRegisterMBean(java.lang.String,com.sleepycat.je.Environment)>($r1, env);

        $r2 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String getDiagnosticsClassName()>();

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void doRegisterMBean(java.lang.String,com.sleepycat.je.Environment)>($r2, env);

     label1:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isMBeanRegistered> = 1;

     label2:
        return;
    }

    protected java.lang.String getMonitorClassName()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return "com.sleepycat.je.jmx.JEMonitor";
    }

    private void doRegisterMBean(java.lang.String, com.sleepycat.je.Environment) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this, $r5;
        java.lang.String className;
        com.sleepycat.je.Environment env;
        java.lang.Class newClass;
        com.sleepycat.je.dbi.EnvironmentImpl$MBeanRegistrar mBeanReg;
        java.lang.Exception e, $r3;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        com.sleepycat.je.EnvironmentFailureException $r4;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        className := @parameter0: java.lang.String;

        env := @parameter1: com.sleepycat.je.Environment;

     label1:
        newClass = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className);

        $r1 = virtualinvoke newClass.<java.lang.Class: java.lang.Object newInstance()>();

        mBeanReg = (com.sleepycat.je.dbi.EnvironmentImpl$MBeanRegistrar) $r1;

        interfaceinvoke mBeanReg.<com.sleepycat.je.dbi.EnvironmentImpl$MBeanRegistrar: void doRegister(com.sleepycat.je.Environment)>(env);

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.ArrayList mBeanRegList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(mBeanReg);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new com.sleepycat.je.EnvironmentFailureException;

        $r5 = staticinvoke <com.sleepycat.je.DbInternal: com.sleepycat.je.dbi.EnvironmentImpl getNonNullEnvImpl(com.sleepycat.je.Environment)>(env);

        $r0 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason MONITOR_REGISTRATION>;

        specialinvoke $r4.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.Throwable)>($r5, $r0, e);

        throw $r4;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.lang.String getDiagnosticsClassName()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return "com.sleepycat.je.jmx.JEDiagnostics";
    }

    public java.lang.ClassLoader getClassLoader()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.ClassLoader $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.ClassLoader classLoader>;

        return $r0;
    }

    public boolean isTransactional()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isTransactional>;

        return $z0;
    }

    public com.sleepycat.je.txn.Txn createRepUserTxn(com.sleepycat.je.TransactionConfig)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.TransactionConfig config;
        com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.TransactionConfig;

        $r0 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("Should not be called on a non replicated environment");

        throw $r0;
    }

    public com.sleepycat.je.txn.ThreadLocker createRepThreadLocker()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("Should not be called on a non replicated environment");

        throw $r0;
    }

    public void checkOpen() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvState $r0, $r1;
        java.lang.IllegalStateException $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void checkIfInvalid()>();

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r1 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r0 != $r1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempt to use a Environment that has been closed.");

        throw $r2;

     label1:
        return;
    }

    public void criticalEviction(boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean backgroundIO;
        com.sleepycat.je.evictor.Evictor $r0;
        com.sleepycat.je.evictor.OffHeapCache $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        backgroundIO := @parameter0: boolean;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r0.<com.sleepycat.je.evictor.Evictor: void doCriticalEviction(boolean)>(backgroundIO);

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        virtualinvoke $r1.<com.sleepycat.je.evictor.OffHeapCache: void doCriticalEviction(boolean)>(backgroundIO);

        return;
    }

    public com.sleepycat.je.dbi.DbTree getDbTree()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbTree $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        return $r0;
    }

    public static int getThreadLocalReferenceCount()
    {
        int $i0;

        $i0 = <com.sleepycat.je.dbi.EnvironmentImpl: int threadLocalReferenceCount>;

        return $i0;
    }

    public com.sleepycat.je.evictor.OffHeapCache getOffHeapCache()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.evictor.OffHeapCache $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        return $r0;
    }

    public long specialEviction()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.cleaner.Cleaner $r0;
        com.sleepycat.je.cleaner.UtilizationTracker $r1;
        long $l0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.cleaner.Cleaner: com.sleepycat.je.cleaner.UtilizationTracker getUtilizationTracker()>();

        $l0 = virtualinvoke $r1.<com.sleepycat.je.cleaner.UtilizationTracker: long evictMemory()>();

        return $l0;
    }

    public com.sleepycat.je.cleaner.UtilizationProfile getUtilizationProfile()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.cleaner.Cleaner $r0;
        com.sleepycat.je.cleaner.UtilizationProfile $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.cleaner.Cleaner: com.sleepycat.je.cleaner.UtilizationProfile getUtilizationProfile()>();

        return $r1;
    }

    public long getTxnTimeout()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long $l0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long txnTimeout>;

        return $l0;
    }

    public long getLockTimeout()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long $l0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long lockTimeout>;

        return $l0;
    }

    public void addToCompressorQueue(java.util.Collection)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.Collection binRefs;
        com.sleepycat.je.incomp.INCompressor $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        binRefs := @parameter0: java.util.Collection;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        virtualinvoke $r0.<com.sleepycat.je.incomp.INCompressor: void addMultipleBinRefsToQueue(java.util.Collection)>(binRefs);

        return;
    }

    public boolean isDbLoggingDisabled()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean dbLoggingDisabled>;

        return $z0;
    }

    public void close() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvPool $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = staticinvoke <com.sleepycat.je.dbi.DbEnvPool: com.sleepycat.je.dbi.DbEnvPool getInstance()>();

        virtualinvoke $r0.<com.sleepycat.je.dbi.DbEnvPool: void closeEnvironment(com.sleepycat.je.dbi.EnvironmentImpl,boolean,boolean)>(this, 1, 0);

        return;
    }

    boolean decOpenCount()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.atomic.AtomicInteger $r0;
        int $i0;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicInteger openCount>;

        $i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    synchronized void doClose(boolean, boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean doCheckpoint, isAbnormalClose, checkpointHappened#62, $z0;
        java.io.StringWriter errorStringWriter, $r0;
        java.io.PrintWriter errors, $r1;
        com.sleepycat.je.CheckpointConfig ckptConfig, $r26;
        com.sleepycat.je.DatabaseException e, $r29;
        java.lang.Throwable l8, $r50;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r9, $r10, $r12, $r13, $r32, $r33, $r35;
        java.io.File $r4, $r11, $r34;
        java.lang.String $r7, $r14, $r36, $r60;
        java.util.logging.Logger $r8, $r31;
        com.sleepycat.je.dbi.DbEnvState $r15, $r17, $r22, $r23, $r46, $r47, $r49, $r51;
        com.sleepycat.je.dbi.DbEnvState[] $r16;
        java.lang.Exception $r18, e#39, $r21, e#56, $r30, e#96, $r38, e#117, $r40, e#125, $r42, e#133, $r48, e#151;
        int $i0, $i4;
        com.sleepycat.je.log.LogManager $r24, $r37;
        long $l1, $l2;
        com.sleepycat.je.log.FileManager $r25, $r39, $r41;
        byte $b3;
        com.sleepycat.je.dbi.DbTree $r43;
        com.sleepycat.je.cleaner.Cleaner $r44;
        com.sleepycat.je.dbi.INList $r45;
        java.util.concurrent.atomic.AtomicReference $r52, $r54, $r58;
        java.lang.Object $r53, $r55, $r59;
        com.sleepycat.je.EnvironmentWedgedException $r56;
        java.lang.StringBuffer $r57;
        com.sleepycat.je.EnvironmentFailureException $r61;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        doCheckpoint := @parameter0: boolean;

        isAbnormalClose := @parameter1: boolean;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeInternalEnvHandle(boolean)>(isAbnormalClose);

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        errorStringWriter = $r0;

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>(errorStringWriter);

        errors = $r1;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Close of environment ");

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" started");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.sleepycat.je.log.Trace: void traceLazily(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(this, $r7);

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger envLogger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Close of environment ");

        $r11 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" started");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void fine(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r8, this, $r14);

        $r15 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r16 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState[] VALID_FOR_CLOSE>;

        $r17 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        virtualinvoke $r15.<com.sleepycat.je.dbi.DbEnvState: void checkState(com.sleepycat.je.dbi.DbEnvState[],com.sleepycat.je.dbi.DbEnvState)>($r16, $r17);

     label02:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void setupClose(java.io.PrintWriter)>(errors);

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

        e#39 = $r18;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#39, "releasing resources");

     label05:
        $i0 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: int getBackupCount()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label06;

        virtualinvoke errors.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\nThere are backups in progress so the ");

        virtualinvoke errors.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Environment should not have been closed.");

        virtualinvoke errors.<java.io.PrintWriter: void println()>();

     label06:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void requestShutdownDaemons()>();

     label07:
        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void unregisterMBean()>();

     label08:
        goto label10;

     label09:
        $r21 := @caughtexception;

        e#56 = $r21;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#56, "unregistering MBean");

     label10:
        checkpointHappened#62 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(doCheckpoint);

        if doCheckpoint == 0 goto label15;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label15;

        $r22 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r23 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INVALID>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r22);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r23);

        if $r22 == $r23 goto label15;

        $r24 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        $l1 = virtualinvoke $r24.<com.sleepycat.je.log.LogManager: long getLastLsnAtRecovery()>();

        $r25 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        $l2 = virtualinvoke $r25.<com.sleepycat.je.log.FileManager: long getLastUsedLsn()>();

        $b3 = $l1 cmp $l2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b3);

        if $b3 == 0 goto label15;

        $r26 = new com.sleepycat.je.CheckpointConfig;

        specialinvoke $r26.<com.sleepycat.je.CheckpointConfig: void <init>()>();

        ckptConfig = $r26;

        virtualinvoke ckptConfig.<com.sleepycat.je.CheckpointConfig: com.sleepycat.je.CheckpointConfig setForce(boolean)>(1);

        virtualinvoke ckptConfig.<com.sleepycat.je.CheckpointConfig: com.sleepycat.je.CheckpointConfig setMinimizeRecoveryTime(boolean)>(1);

     label11:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void invokeCheckpoint(com.sleepycat.je.CheckpointConfig,java.lang.String)>(ckptConfig, "close");

     label12:
        goto label14;

     label13:
        $r29 := @caughtexception;

        e = $r29;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e, "performing checkpoint");

     label14:
        checkpointHappened#62 = 1;

     label15:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void postCheckpointClose(boolean)>(checkpointHappened#62);

     label16:
        goto label18;

     label17:
        $r30 := @caughtexception;

        e#96 = $r30;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#96, "after checkpoint");

     label18:
        $r31 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.logging.Logger envLogger>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to shutdown daemons for Env ");

        $r34 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.io.File envHome>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.sleepycat.je.utilint.LoggerUtils: void fine(java.util.logging.Logger,com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r31, this, $r36);

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void shutdownDaemons()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isAbnormalClose);

        if isAbnormalClose != 0 goto label22;

     label19:
        $r37 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        virtualinvoke $r37.<com.sleepycat.je.log.LogManager: void flushSync()>();

     label20:
        goto label22;

     label21:
        $r38 := @caughtexception;

        e#117 = $r38;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#117, "flushing log manager");

     label22:
        $r39 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r39.<com.sleepycat.je.log.FileManager: void clear()>();

     label23:
        goto label25;

     label24:
        $r40 := @caughtexception;

        e#125 = $r40;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#125, "clearing file manager");

     label25:
        $r41 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r41.<com.sleepycat.je.log.FileManager: void close()>();

     label26:
        goto label28;

     label27:
        $r42 := @caughtexception;

        e#133 = $r42;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#133, "closing file manager");

     label28:
        $r43 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        virtualinvoke $r43.<com.sleepycat.je.dbi.DbTree: void close()>();

        $r44 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        virtualinvoke $r44.<com.sleepycat.je.cleaner.Cleaner: void close()>();

        $r45 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.INList inMemoryINs>;

        virtualinvoke $r45.<com.sleepycat.je.dbi.INList: void clear()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isAbnormalClose);

        if isAbnormalClose != 0 goto label32;

        $r46 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r47 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState INVALID>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r46);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r47);

        if $r46 == $r47 goto label32;

     label29:
        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void checkLeaks()>();

     label30:
        goto label32;

     label31:
        $r48 := @caughtexception;

        e#151 = $r48;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void appendException(java.io.PrintWriter,java.lang.Exception,java.lang.String)>(errors, e#151, "performing validity checks");

     label32:
        $r49 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState> = $r49;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void clearFileManager()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

        goto label36;

     label33:
        $r50 := @caughtexception;

     label34:
        l8 = $r50;

     label35:
        $r51 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState> = $r51;

        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void clearFileManager()>();

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

        throw l8;

     label36:
        $r52 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference wedgedEFE>;

        $r53 = virtualinvoke $r52.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r53);

        if $r53 == null goto label37;

        $r54 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference wedgedEFE>;

        $r55 = virtualinvoke $r54.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r56 = (com.sleepycat.je.EnvironmentWedgedException) $r55;

        throw $r56;

     label37:
        $r57 = virtualinvoke errorStringWriter.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $i4 = virtualinvoke $r57.<java.lang.StringBuffer: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 <= 0 goto label38;

        $r58 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        $r59 = virtualinvoke $r58.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r59);

        if $r59 != null goto label38;

        $r60 = virtualinvoke errorStringWriter.<java.io.StringWriter: java.lang.String toString()>();

        $r61 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r60);

        throw $r61;

     label38:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
        catch com.sleepycat.je.DatabaseException from label11 to label12 with label13;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Throwable from label01 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    private synchronized void closeInternalEnvHandle(boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean isAbnormalClose;
        com.sleepycat.je.Environment savedEnvInternal, $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        isAbnormalClose := @parameter0: boolean;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment envInternal>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isAbnormalClose);

        if isAbnormalClose == 0 goto label2;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment envInternal> = null;

        goto label3;

     label2:
        savedEnvInternal = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment envInternal>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment envInternal> = null;

        staticinvoke <com.sleepycat.je.DbInternal: void closeInternalHandle(com.sleepycat.je.Environment)>(savedEnvInternal);

     label3:
        return;
    }

    protected synchronized void setupClose(java.io.PrintWriter) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.io.PrintWriter errors;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        errors := @parameter0: java.io.PrintWriter;

        return;
    }

    protected void appendException(java.io.PrintWriter, java.lang.Exception, java.lang.String)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.io.PrintWriter pw;
        java.lang.Exception e;
        java.lang.String doingWhat, $r4;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        pw := @parameter0: java.io.PrintWriter;

        e := @parameter1: java.lang.Exception;

        doingWhat := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nException ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(doingWhat);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke pw.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r4);

        virtualinvoke e.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(pw);

        virtualinvoke pw.<java.io.PrintWriter: void println()>();

        return;
    }

    protected int getBackupCount()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.atomic.AtomicInteger $r0;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicInteger backupCount>;

        $i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    private synchronized void unregisterMBean() throws java.lang.Exception
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.Iterator l1;
        com.sleepycat.je.dbi.EnvironmentImpl$MBeanRegistrar mBeanReg;
        java.util.ArrayList $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.ArrayList mBeanRegList>;

        l1 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        mBeanReg = (com.sleepycat.je.dbi.EnvironmentImpl$MBeanRegistrar) $r1;

        interfaceinvoke mBeanReg.<com.sleepycat.je.dbi.EnvironmentImpl$MBeanRegistrar: void doUnregister()>();

        goto label1;

     label2:
        return;
    }

    public void invokeCheckpoint(com.sleepycat.je.CheckpointConfig, java.lang.String)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.CheckpointConfig config;
        java.lang.String invokingSource;
        com.sleepycat.je.recovery.Checkpointer $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.CheckpointConfig;

        invokingSource := @parameter1: java.lang.String;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        virtualinvoke $r0.<com.sleepycat.je.recovery.Checkpointer: void doCheckpoint(com.sleepycat.je.CheckpointConfig,java.lang.String)>(config, invokingSource);

        return;
    }

    protected synchronized void postCheckpointClose(boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean checkpointed;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        checkpointed := @parameter0: boolean;

        return;
    }

    public void shutdownDaemons()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.Object l1, $r1;
        java.lang.Throwable l2, $r11;
        com.sleepycat.je.statcap.StatCapture $r0;
        com.sleepycat.je.incomp.INCompressor $r2;
        com.sleepycat.je.cleaner.Cleaner $r3;
        com.sleepycat.je.recovery.Checkpointer $r4;
        boolean $z0;
        com.sleepycat.je.evictor.Evictor $r5, $r7;
        com.sleepycat.je.evictor.OffHeapCache $r6, $r8;
        com.sleepycat.je.log.LogFlusher $r9;
        com.sleepycat.je.util.verify.DataVerifier $r10;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.statcap.StatCapture statCapture>;

        virtualinvoke $r0.<com.sleepycat.je.statcap.StatCapture: void shutdown()>();

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object statSynchronizer>;

        l1 = $r1;

        entermonitor $r1;

     label1:
        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        virtualinvoke $r2.<com.sleepycat.je.incomp.INCompressor: void shutdown()>();

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.cleaner.Cleaner cleaner>;

        virtualinvoke $r3.<com.sleepycat.je.cleaner.Cleaner: void shutdown()>();

        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        virtualinvoke $r4.<com.sleepycat.je.recovery.Checkpointer: void shutdown()>();

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean sharedCache>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r5.<com.sleepycat.je.evictor.Evictor: void removeSharedCacheEnv(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        virtualinvoke $r6.<com.sleepycat.je.evictor.OffHeapCache: long clearCache(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        goto label3;

     label2:
        $r7 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r7.<com.sleepycat.je.evictor.Evictor: void shutdown()>();

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        virtualinvoke $r8.<com.sleepycat.je.evictor.OffHeapCache: void shutdown()>();

     label3:
        $r9 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogFlusher logFlusher>;

        virtualinvoke $r9.<com.sleepycat.je.log.LogFlusher: void shutdown()>();

        $r10 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.util.verify.DataVerifier dataVerifier>;

        virtualinvoke $r10.<com.sleepycat.je.util.verify.DataVerifier: void shutdown()>();

        exitmonitor l1;

     label4:
        goto label8;

     label5:
        $r11 := @caughtexception;

     label6:
        l2 = $r11;

        exitmonitor l1;

     label7:
        throw l2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void checkLeaks() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.StatsConfig statsConfig, $r2;
        com.sleepycat.je.LockStats lockStat;
        com.sleepycat.je.TransactionStats txnStat;
        com.sleepycat.je.TransactionStats$Active[] active, l6;
        int l7, $i0, $i1, $i2, $i3, l8#56, $i4;
        com.sleepycat.je.TransactionStats$Active element;
        long memoryUsage;
        com.sleepycat.je.dbi.DbConfigManager $r0;
        com.sleepycat.je.config.BooleanConfigParam $r1;
        boolean $z0, clean#6, $z1, assertionsEnabled#91, $z2;
        java.io.PrintStream $r4, $r12, $r18, $r19, $r20, $r23, $r28;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r13, $r14, $r15, $r16, $r24, $r25, $r26;
        java.lang.String $r9, $r17, $r21, $r27;
        com.sleepycat.je.txn.TxnManager $r10;
        com.sleepycat.je.txn.LockManager $r11;
        com.sleepycat.je.dbi.MemoryBudget $r22, $r29;
        byte $b5;
        com.sleepycat.je.utilint.StatGroup $r30;
        java.lang.AssertionError $r31;
        com.sleepycat.je.EnvironmentFailureException $r32;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbConfigManager configManager>;

        $r1 = <com.sleepycat.je.config.EnvironmentParams: com.sleepycat.je.config.BooleanConfigParam ENV_CHECK_LEAKS>;

        $z0 = virtualinvoke $r0.<com.sleepycat.je.dbi.DbConfigManager: boolean getBoolean(com.sleepycat.je.config.BooleanConfigParam)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        clean#6 = 1;

        $r2 = new com.sleepycat.je.StatsConfig;

        specialinvoke $r2.<com.sleepycat.je.StatsConfig: void <init>()>();

        statsConfig = $r2;

        virtualinvoke statsConfig.<com.sleepycat.je.StatsConfig: com.sleepycat.je.StatsConfig setFast(boolean)>(0);

        lockStat = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.LockStats lockStat(com.sleepycat.je.StatsConfig)>(statsConfig);

        $i0 = virtualinvoke lockStat.<com.sleepycat.je.LockStats: int getNTotalLocks()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label2;

        clean#6 = 0;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem: ");

        $i1 = virtualinvoke lockStat.<com.sleepycat.je.LockStats: int getNTotalLocks()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" locks left");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager>;

        $r11 = virtualinvoke $r10.<com.sleepycat.je.txn.TxnManager: com.sleepycat.je.txn.LockManager getLockManager()>();

        virtualinvoke $r11.<com.sleepycat.je.txn.LockManager: void dump()>();

     label2:
        txnStat = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.TransactionStats txnStat(com.sleepycat.je.StatsConfig)>(statsConfig);

        $i2 = virtualinvoke txnStat.<com.sleepycat.je.TransactionStats: int getNActive()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 == 0 goto label4;

        clean#6 = 0;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem: ");

        $i3 = virtualinvoke txnStat.<com.sleepycat.je.TransactionStats: int getNActive()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txns left");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

        active = virtualinvoke txnStat.<com.sleepycat.je.TransactionStats: com.sleepycat.je.TransactionStats$Active[] getActiveTxns()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(active);

        if active == null goto label4;

        l6 = active;

        l7 = lengthof l6;

        l8#56 = 0;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l8#56);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7);

        if l8#56 >= l7 goto label4;

        element = l6[l8#56];

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.Object)>(element);

        l8#56 = l8#56 + 1;

        goto label3;

     label4:
        $z1 = <com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label5;

        $i4 = staticinvoke <com.sleepycat.je.latch.LatchSupport: int nBtreeLatchesHeld()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 <= 0 goto label5;

        clean#6 = 0;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Some latches held at env close.");

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r21 = staticinvoke <com.sleepycat.je.latch.LatchSupport: java.lang.String btreeLatchesHeldToString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label5:
        $r22 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        memoryUsage = virtualinvoke $r22.<com.sleepycat.je.dbi.MemoryBudget: long getVariableCacheUsage()>();

        $b5 = memoryUsage cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        if $b5 == 0 goto label6;

        clean#6 = 0;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Local Cache Usage = ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(memoryUsage);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r28 = <java.lang.System: java.io.PrintStream err>;

        $r29 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        $r30 = virtualinvoke $r29.<com.sleepycat.je.dbi.MemoryBudget: com.sleepycat.je.utilint.StatGroup loadStats()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.Object)>($r30);

     label6:
        assertionsEnabled#91 = 0;

        $z2 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label7;

        assertionsEnabled#91 = 1;

        if 1 != 0 goto label7;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label7:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(clean#6);

        if clean#6 != 0 goto label8;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(assertionsEnabled#91);

        if assertionsEnabled#91 == 0 goto label8;

        $r32 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("Lock, transaction, latch or memory left behind at environment close");

        throw $r32;

     label8:
        return;
    }

    public synchronized com.sleepycat.je.LockStats lockStat(com.sleepycat.je.StatsConfig) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.StatsConfig config;
        com.sleepycat.je.txn.TxnManager $r0;
        com.sleepycat.je.LockStats $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.StatsConfig;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.txn.TxnManager: com.sleepycat.je.LockStats lockStat(com.sleepycat.je.StatsConfig)>(config);

        return $r1;
    }

    public synchronized com.sleepycat.je.TransactionStats txnStat(com.sleepycat.je.StatsConfig)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.StatsConfig config;
        com.sleepycat.je.txn.TxnManager $r0;
        com.sleepycat.je.TransactionStats $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        config := @parameter0: com.sleepycat.je.StatsConfig;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.txn.TxnManager: com.sleepycat.je.TransactionStats txnStat(com.sleepycat.je.StatsConfig)>(config);

        return $r1;
    }

    public com.sleepycat.je.dbi.NodeSequence getNodeSequence()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.NodeSequence $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.NodeSequence nodeSequence>;

        return $r0;
    }

    public long getRootLsn()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long $l0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn>;

        return $l0;
    }

    public void preCheckpointEndFlush()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return;
    }

    public void sleepAfterBackgroundIO()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.lang.InterruptedException e, $r1;
        java.lang.Throwable l3, l4, $r5, $r8;
        int $i0, $i2, $i3, $i4;
        java.lang.Object $r0, l1#6, $r6, l1#24;
        long $l1;
        java.lang.Thread $r2;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.TestHook $r3;
        java.lang.AssertionError $r4;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= 0 goto label17;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object backgroundSleepMutex>;

        l1#6 = $r0;

        entermonitor $r0;

     label01:
        $l1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long backgroundSleepInterval>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label02:
        goto label04;

     label03:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

     label04:
        $z0 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label05;

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.TestHook backgroundSleepHook>;

        $z1 = staticinvoke <com.sleepycat.je.utilint.TestHookExecute: boolean doHookIfSet(com.sleepycat.je.utilint.TestHook)>($r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label05;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label05:
        exitmonitor l1#6;

     label06:
        goto label10;

     label07:
        $r5 := @caughtexception;

     label08:
        l3 = $r5;

        exitmonitor l1#6;

     label09:
        throw l3;

     label10:
        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object backgroundTrackingMutex>;

        l1#24 = $r6;

        entermonitor $r6;

     label11:
        $i2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 <= 0 goto label12;

        $i3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog>;

        $i4 = $i3 - 1;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog> = $i4;

     label12:
        exitmonitor l1#24;

     label13:
        goto label17;

     label14:
        $r8 := @caughtexception;

     label15:
        l4 = $r8;

        exitmonitor l1#24;

     label16:
        throw l4;

     label17:
        return;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void awaitVLSNConsistency()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return;
    }

    public void daemonEviction(boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean backgroundIO;
        com.sleepycat.je.evictor.Evictor $r0;
        com.sleepycat.je.evictor.OffHeapCache $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        backgroundIO := @parameter0: boolean;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r0.<com.sleepycat.je.evictor.Evictor: void doDaemonEviction(boolean)>(backgroundIO);

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        virtualinvoke $r1.<com.sleepycat.je.evictor.OffHeapCache: void doDaemonEviction(boolean)>(backgroundIO);

        return;
    }

    public void vlsnHeadTruncate(com.sleepycat.je.utilint.VLSN, long)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.VLSN lastVLSN;
        long deleteFileNum;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        lastVLSN := @parameter0: com.sleepycat.je.utilint.VLSN;

        deleteFileNum := @parameter1: long;

        return;
    }

    public java.util.NavigableSet getUnprotectedFileSet(java.util.NavigableSet, java.lang.StringBuilder)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.NavigableSet files, $r4;
        java.lang.StringBuilder msg;
        com.sleepycat.je.utilint.TestHook $r0, $r2;
        java.lang.Object $r3;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        files := @parameter0: java.util.NavigableSet;

        msg := @parameter1: java.lang.StringBuilder;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.TestHook cleanerBarrierHoook>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        virtualinvoke msg.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Used cleanerBarrierHoook.");

        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.TestHook cleanerBarrierHoook>;

        $r3 = interfaceinvoke $r2.<com.sleepycat.je.utilint.TestHook: java.lang.Object getHookValue()>();

        $r4 = interfaceinvoke files.<java.util.NavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>($r3, 0);

        return $r4;

     label1:
        return files;
    }

    public int getTtlLnPurgeDelay()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int ttlLnPurgeDelay>;

        return $i0;
    }

    public boolean expiresWithin(long, long)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long expirationTime, withinMs;
        boolean $z0, $z1, $z2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        expirationTime := @parameter0: long;

        withinMs := @parameter1: long;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean expirationEnabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.sleepycat.je.dbi.TTL: boolean expiresWithin(long,long)>(expirationTime, withinMs);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void closeAfterInvalid() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvPool $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = staticinvoke <com.sleepycat.je.dbi.DbEnvPool: com.sleepycat.je.dbi.DbEnvPool getInstance()>();

        virtualinvoke $r0.<com.sleepycat.je.dbi.DbEnvPool: void closeEnvironmentAfterInvalid(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        return;
    }

    public synchronized void doCloseAfterInvalid()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvState $r0;
        java.lang.Exception $r1, l1#3;
        com.sleepycat.je.log.FileManager $r2, $r4;
        java.lang.Throwable $r3, l1#8, $r5, l1#12;
        java.util.concurrent.atomic.AtomicReference $r6, $r8;
        java.lang.Object $r7, $r9;
        com.sleepycat.je.EnvironmentWedgedException $r10;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

     label01:
        specialinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void unregisterMBean()>();

     label02:
        goto label04;

     label03:
        $r1 := @caughtexception;

        l1#3 = $r1;

     label04:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void shutdownDaemons()>();

     label05:
        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r2.<com.sleepycat.je.log.FileManager: void clear()>();

     label06:
        goto label08;

     label07:
        $r3 := @caughtexception;

        l1#8 = $r3;

     label08:
        $r4 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.FileManager fileManager>;

        virtualinvoke $r4.<com.sleepycat.je.log.FileManager: void close()>();

     label09:
        goto label11;

     label10:
        $r5 := @caughtexception;

        l1#12 = $r5;

     label11:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void closeHandlers()>();

        $r0 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState> = $r0;

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference wedgedEFE>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r7);

        if $r7 == null goto label12;

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference wedgedEFE>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r10 = (com.sleepycat.je.EnvironmentWedgedException) $r9;

        throw $r10;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public com.sleepycat.je.OperationFailureException createLockPreemptedException(com.sleepycat.je.txn.Locker, java.lang.Throwable)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.txn.Locker locker;
        java.lang.Throwable cause;
        com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        locker := @parameter0: com.sleepycat.je.txn.Locker;

        cause := @parameter1: java.lang.Throwable;

        $r0 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("Should not be called on a non replicated environment");

        throw $r0;
    }

    public boolean getDeadlockDetection()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean deadlockDetection>;

        return $z0;
    }

    public long getDeadlockDetectionDelay()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long $l0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long deadlockDetectionDelay>;

        return $l0;
    }

    public com.sleepycat.je.Environment getInternalEnvHandle()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.Environment $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.Environment envInternal>;

        return $r0;
    }

    public com.sleepycat.je.PreloadStats preload(com.sleepycat.je.dbi.DatabaseImpl[], com.sleepycat.je.PreloadConfig) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl[] dbImpls;
        com.sleepycat.je.PreloadConfig config;
        long maxMillisecs, targetTime#4, $l1, cacheBudget#19, $l3, maxBytes#28, $l6;
        boolean useOffHeapCache, $z0;
        com.sleepycat.je.PreloadStats pstats, $r11;
        com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor callback, $r12;
        int nDbs, i#68;
        long[] rootLsns;
        com.sleepycat.je.dbi.EnvironmentImpl$PreloadLSNTreeWalker walker, $r15;
        com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException HPE, $r16;
        java.lang.Error E, $r19;
        byte $b0, $b2, $b4, $b5;
        com.sleepycat.je.dbi.MemoryBudget $r0;
        com.sleepycat.je.evictor.OffHeapCache $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        com.sleepycat.je.dbi.EnvironmentImpl$1 $r10;
        com.sleepycat.je.dbi.DatabaseImpl $r13;
        com.sleepycat.je.tree.Tree $r14;
        com.sleepycat.je.PreloadStatus $r17;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpls := @parameter0: com.sleepycat.je.dbi.DatabaseImpl[];

        config := @parameter1: com.sleepycat.je.PreloadConfig;

     label01:
        maxMillisecs = virtualinvoke config.<com.sleepycat.je.PreloadConfig: long getMaxMillisecs()>();

        targetTime#4 = 9223372036854775807L;

        $b0 = maxMillisecs cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 <= 0 goto label02;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        targetTime#4 = $l1 + maxMillisecs;

        $b2 = targetTime#4 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 >= 0 goto label02;

        targetTime#4 = 9223372036854775807L;

     label02:
        useOffHeapCache = 0;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        cacheBudget#19 = virtualinvoke $r0.<com.sleepycat.je.dbi.MemoryBudget: long getMaxMemory()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(useOffHeapCache);

        if useOffHeapCache == 0 goto label03;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        $l3 = virtualinvoke $r1.<com.sleepycat.je.evictor.OffHeapCache: long getMaxMemory()>();

        cacheBudget#19 = cacheBudget#19 + $l3;

     label03:
        maxBytes#28 = virtualinvoke config.<com.sleepycat.je.PreloadConfig: long getMaxBytes()>();

        $b4 = maxBytes#28 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b4);

        if $b4 != 0 goto label04;

        maxBytes#28 = cacheBudget#19;

        goto label05;

     label04:
        $b5 = maxBytes#28 cmp cacheBudget#19;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        if $b5 <= 0 goto label05;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxBytes parameter to preload() was specified as ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(maxBytes#28);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes but the maximum total cache size is only ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cacheBudget#19);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label05:
        $r10 = new com.sleepycat.je.dbi.EnvironmentImpl$1;

        specialinvoke $r10.<com.sleepycat.je.dbi.EnvironmentImpl$1: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(dbImpls, $r10);

        $r11 = new com.sleepycat.je.PreloadStats;

        specialinvoke $r11.<com.sleepycat.je.PreloadStats: void <init>()>();

        pstats = $r11;

        $r12 = new com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor;

        specialinvoke $r12.<com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,long,boolean,long,com.sleepycat.je.PreloadStats,com.sleepycat.je.PreloadConfig)>(this, maxBytes#28, useOffHeapCache, targetTime#4, pstats, config);

        callback = $r12;

        nDbs = lengthof dbImpls;

        rootLsns = newarray (long)[nDbs];

        i#68 = 0;

     label06:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#68);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(nDbs);

        if i#68 >= nDbs goto label07;

        $r13 = dbImpls[i#68];

        $r14 = virtualinvoke $r13.<com.sleepycat.je.dbi.DatabaseImpl: com.sleepycat.je.tree.Tree getTree()>();

        $l6 = virtualinvoke $r14.<com.sleepycat.je.tree.Tree: long getRootLsn()>();

        rootLsns[i#68] = $l6;

        i#68 = i#68 + 1;

        goto label06;

     label07:
        $r15 = new com.sleepycat.je.dbi.EnvironmentImpl$PreloadLSNTreeWalker;

        specialinvoke $r15.<com.sleepycat.je.dbi.EnvironmentImpl$PreloadLSNTreeWalker: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.DatabaseImpl[],long[],boolean,com.sleepycat.je.dbi.SortedLSNTreeWalker$TreeNodeProcessor,com.sleepycat.je.PreloadConfig)>(this, dbImpls, rootLsns, useOffHeapCache, callback, config);

        walker = $r15;

     label08:
        virtualinvoke walker.<com.sleepycat.je.dbi.SortedLSNTreeWalker: void walk()>();

        virtualinvoke callback.<com.sleepycat.je.dbi.EnvironmentImpl$PreloadProcessor: void close()>();

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        HPE = $r16;

        $r17 = virtualinvoke HPE.<com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException: com.sleepycat.je.PreloadStatus getStatus()>();

        virtualinvoke pstats.<com.sleepycat.je.PreloadStats: void setStatus(com.sleepycat.je.PreloadStatus)>($r17);

     label11:
        $z0 = <com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label12;

        staticinvoke <com.sleepycat.je.latch.LatchSupport: void expectBtreeLatchesHeld(int)>(0);

     label12:
        return pstats;

     label13:
        $r19 := @caughtexception;

        E = $r19;

        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void invalidate(java.lang.Error)>(E);

        throw E;

        catch com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException from label08 to label09 with label10;
        catch java.lang.Error from label01 to label12 with label13;
    }

    public com.sleepycat.je.dbi.StartupTracker getStartupTracker()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.StartupTracker $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.StartupTracker startupTracker>;

        return $r0;
    }

    public void invokeEvictor()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.evictor.Evictor $r0;
        com.sleepycat.je.evictor.OffHeapCache $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.Evictor evictor>;

        virtualinvoke $r0.<com.sleepycat.je.evictor.Evictor: void doManualEvict()>();

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        virtualinvoke $r1.<com.sleepycat.je.evictor.OffHeapCache: void doManualEvict()>();

        return;
    }

    public com.sleepycat.je.txn.Txn createReplayTxn(long)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long txnId;
        com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        txnId := @parameter0: long;

        $r0 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>("Should not be called on a non replicated environment");

        throw $r0;
    }

    static com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException access$500()
    {
        com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException $r0;

        $r0 = <com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException USER_HALT_REQUEST_PRELOAD_EXCEPTION>;

        return $r0;
    }

    static com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException access$400()
    {
        com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException $r0;

        $r0 = <com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException MEMORY_EXCEEDED_PRELOAD_EXCEPTION>;

        return $r0;
    }

    static com.sleepycat.je.evictor.OffHeapCache access$300(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl x0;
        com.sleepycat.je.evictor.OffHeapCache $r0;

        x0 := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = x0.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.evictor.OffHeapCache offHeapCache>;

        return $r0;
    }

    static com.sleepycat.je.dbi.MemoryBudget access$200(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl x0;
        com.sleepycat.je.dbi.MemoryBudget $r0;

        x0 := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = x0.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.MemoryBudget memoryBudget>;

        return $r0;
    }

    static com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException access$100()
    {
        com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException $r0;

        $r0 = <com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.EnvironmentImpl$HaltPreloadException TIME_EXCEEDED_PRELOAD_EXCEPTION>;

        return $r0;
    }

    public void handleRestoreRequired(com.sleepycat.je.log.entry.RestoreRequired)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.log.entry.RestoreRequired restoreRequired;
        com.sleepycat.je.EnvironmentFailureException $r0;
        com.sleepycat.je.dbi.EnvironmentFailureReason $r1;
        java.lang.String $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        restoreRequired := @parameter0: com.sleepycat.je.log.entry.RestoreRequired;

        $r0 = new com.sleepycat.je.EnvironmentFailureException;

        $r1 = <com.sleepycat.je.dbi.EnvironmentFailureReason: com.sleepycat.je.dbi.EnvironmentFailureReason UNEXPECTED_STATE>;

        $r2 = virtualinvoke restoreRequired.<com.sleepycat.je.log.entry.RestoreRequired: java.lang.String toString()>();

        specialinvoke $r0.<com.sleepycat.je.EnvironmentFailureException: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentFailureReason,java.lang.String)>(this, $r1, $r2);

        throw $r0;
    }

    public void preRecoveryCheckpointInit(com.sleepycat.je.recovery.RecoveryInfo)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.recovery.RecoveryInfo recoveryInfo;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        recoveryInfo := @parameter0: com.sleepycat.je.recovery.RecoveryInfo;

        return;
    }

    public void flushLog(boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean fsync;
        com.sleepycat.je.log.LogManager $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        fsync := @parameter0: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(fsync);

        if fsync == 0 goto label1;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        virtualinvoke $r0.<com.sleepycat.je.log.LogManager: void flushSync()>();

        goto label2;

     label1:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        virtualinvoke $r1.<com.sleepycat.je.log.LogManager: void flushNoSync()>();

     label2:
        return;
    }

    public void readMapTreeFromLog(long) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long rootLsn;
        java.lang.Throwable l3, $r11;
        com.sleepycat.je.dbi.DbTree $r0, $r1, $r4, $r5, $r6, $r7, $r8;
        com.sleepycat.je.log.LogManager $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;
        com.sleepycat.je.latch.Latch $r9, $r10, $r12;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        rootLsn := @parameter0: long;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        virtualinvoke $r1.<com.sleepycat.je.dbi.DbTree: void close()>();

     label1:
        $r2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        $r3 = virtualinvoke $r2.<com.sleepycat.je.log.LogManager: java.lang.Object getEntryHandleFileNotFound(long)>(rootLsn);

        $r4 = (com.sleepycat.je.dbi.DbTree) $r3;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree> = $r4;

        $r5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        $z0 = virtualinvoke $r5.<com.sleepycat.je.dbi.DbTree: boolean isReplicated()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean getAllowRepConvert()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        virtualinvoke $r6.<com.sleepycat.je.dbi.DbTree: void setIsReplicated()>();

        $r7 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        virtualinvoke $r7.<com.sleepycat.je.dbi.DbTree: void setIsRepConverted()>();

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean needRepConvert> = 1;

     label2:
        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        virtualinvoke $r8.<com.sleepycat.je.dbi.DbTree: void initExistingEnvironment(com.sleepycat.je.dbi.EnvironmentImpl)>(this);

        $r9 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r9.<com.sleepycat.je.latch.Latch: void acquireExclusive()>();

     label3:
        this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn> = rootLsn;

     label4:
        $r10 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r10.<com.sleepycat.je.latch.Latch: void release()>();

        goto label6;

     label5:
        $r11 := @caughtexception;

        l3 = $r11;

        $r12 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r12.<com.sleepycat.je.latch.Latch: void release()>();

        throw l3;

     label6:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean getAllowRepConvert()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return 0;
    }

    public void checkRulesForExistingEnv(boolean, boolean) throws java.lang.UnsupportedOperationException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean dbTreeReplicatedBit, dbTreePreserveVLSN, $z0, $z1, $z2;
        java.lang.UnsupportedOperationException $r0;
        java.lang.IllegalArgumentException $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbTreeReplicatedBit := @parameter0: boolean;

        dbTreePreserveVLSN := @parameter1: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(dbTreeReplicatedBit);

        if dbTreeReplicatedBit == 0 goto label1;

        $z0 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This environment was previously opened for replication. It cannot be re-opened for in read/write mode for non-replicated operation.");

        throw $r0;

     label1:
        $z1 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean getPreserveVLSN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReadOnly()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("je.rep.preserveRecordVersion parameter may not be true in a read-write, non-replicated environment");

        throw $r1;

     label2:
        return;
    }

    public boolean isClosing()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean closing>;

        return $z0;
    }

    public int getLatchTimeoutMs()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int latchTimeoutMs>;

        return $i0;
    }

    public boolean getDidFullThreadDump()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean didFullThreadDump>;

        return $z0;
    }

    public void setDidFullThreadDump(boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean val;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        val := @parameter0: boolean;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean didFullThreadDump> = val;

        return;
    }

    public boolean expiresWithin(int, boolean, long)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int expiration;
        boolean hours, $z0, $z1, $z2;
        long withinMs;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        expiration := @parameter0: int;

        hours := @parameter1: boolean;

        withinMs := @parameter2: long;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean expirationEnabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.sleepycat.je.dbi.TTL: boolean expiresWithin(int,boolean,long)>(expiration, hours, withinMs);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int getTtlMaxTxnTime()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int ttlMaxTxnTime>;

        return $i0;
    }

    public int getMaxEmbeddedLN()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int maxEmbeddedLN>;

        return $i0;
    }

    public void incBinDeltaInserts()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.AtomicLongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaInserts>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        return;
    }

    public void incBinDeltaUpdates()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.AtomicLongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaUpdates>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        return;
    }

    public void incBinDeltaDeletes()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.AtomicLongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaDeletes>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        return;
    }

    public void lazyCompress(com.sleepycat.je.tree.IN, boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.tree.IN in;
        boolean compressDirtySlots;
        com.sleepycat.je.incomp.INCompressor $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        in := @parameter0: com.sleepycat.je.tree.IN;

        compressDirtySlots := @parameter1: boolean;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        virtualinvoke $r0.<com.sleepycat.je.incomp.INCompressor: void lazyCompress(com.sleepycat.je.tree.IN,boolean)>(in, compressDirtySlots);

        return;
    }

    public boolean isExpired(int, boolean)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int expiration;
        boolean hours, $z0, $z1, $z2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        expiration := @parameter0: int;

        hours := @parameter1: boolean;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean expirationEnabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.sleepycat.je.dbi.TTL: boolean isExpired(int,boolean)>(expiration, hours);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void incRelatchesRequired()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.LongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.LongStat relatchesRequired>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.LongStat: void increment()>();

        return;
    }

    public boolean isClosed()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DbEnvState $r0, $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbEnvState envState>;

        $r0 = <com.sleepycat.je.dbi.DbEnvState: com.sleepycat.je.dbi.DbEnvState CLOSED>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r1 != $r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean wasInvalidated()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.atomic.AtomicReference $r0;
        java.lang.Object $r1;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.atomic.AtomicReference invalidatingEFE>;

        $r1 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sleepycat.je.log.Provisional coordinateWithCheckpoint(com.sleepycat.je.dbi.DatabaseImpl, int, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        int targetLevel;
        com.sleepycat.je.tree.IN parent;
        com.sleepycat.je.recovery.Checkpointer $r0;
        com.sleepycat.je.log.Provisional $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        targetLevel := @parameter1: int;

        parent := @parameter2: com.sleepycat.je.tree.IN;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.recovery.Checkpointer checkpointer>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.recovery.Checkpointer: com.sleepycat.je.log.Provisional coordinateEvictionWithCheckpoint(com.sleepycat.je.dbi.DatabaseImpl,int,com.sleepycat.je.tree.IN)>(dbImpl, targetLevel, parent);

        return $r1;
    }

    public boolean useOffHeapChecksums()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean useOffHeapChecksums>;

        return $z0;
    }

    public boolean getCacheVLSN()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return 0;
    }

    public void lazyCompress(com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.tree.IN in;
        com.sleepycat.je.tree.BIN bin;
        boolean $z0, $z1, $z2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        in := @parameter0: com.sleepycat.je.tree.IN;

        $z0 = virtualinvoke in.<com.sleepycat.je.tree.IN: boolean isBIN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        return;

     label1:
        bin = (com.sleepycat.je.tree.BIN) in;

        $z1 = virtualinvoke bin.<com.sleepycat.je.tree.BIN: boolean shouldLogDelta()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        virtualinvoke this.<com.sleepycat.je.dbi.EnvironmentImpl: void lazyCompress(com.sleepycat.je.tree.IN,boolean)>(bin, $z2);

        return;
    }

    public void addToCompressorQueue(com.sleepycat.je.tree.BIN)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.tree.BIN bin;
        com.sleepycat.je.incomp.INCompressor $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        bin := @parameter0: com.sleepycat.je.tree.BIN;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.incomp.INCompressor inCompressor>;

        virtualinvoke $r0.<com.sleepycat.je.incomp.INCompressor: void addBinToQueue(com.sleepycat.je.tree.BIN)>(bin);

        return;
    }

    public int getTtlClockTolerance()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int ttlClockTolerance>;

        return $i0;
    }

    public int getCompactMaxKeyLength()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int $i0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int compactMaxKeyLength>;

        return $i0;
    }

    public boolean allowBlindPuts()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean allowBlindPuts>;

        return $z0;
    }

    public boolean allowBlindOps()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean allowBlindOps>;

        return $z0;
    }

    public boolean getNoComparators()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean noComparators>;

        return $z0;
    }

    public void incDeleteFailOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0;
        com.sleepycat.je.utilint.AtomicLongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priDeleteFailOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        return;
    }

    public com.sleepycat.je.CacheMode getDefaultCacheMode()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.CacheMode $r0, $r1, $r2;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.CacheMode cacheMode>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.CacheMode cacheMode>;

        return $r1;

     label1:
        $r2 = <com.sleepycat.je.CacheMode: com.sleepycat.je.CacheMode DEFAULT>;

        return $r2;
    }

    public void incPositionOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secPositionOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priPositionOps>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label3:
        return;
    }

    public void incBinDeltaGets()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.utilint.AtomicLongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat binDeltaGets>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        return;
    }

    public void incSearchFailOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secSearchFailOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priSearchFailOps>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label3:
        return;
    }

    public void incSearchOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secSearchOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priSearchOps>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label3:
        return;
    }

    public void incDeleteOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secDeleteOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priDeleteOps>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label3:
        return;
    }

    public java.util.concurrent.locks.ReentrantReadWriteLock getSecondaryAssociationLock()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        java.util.concurrent.locks.ReentrantReadWriteLock $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.util.concurrent.locks.ReentrantReadWriteLock secondaryAssociationLock>;

        return $r0;
    }

    public com.sleepycat.je.txn.Txn txnBegin(com.sleepycat.je.Transaction, com.sleepycat.je.TransactionConfig) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.Transaction parent;
        com.sleepycat.je.TransactionConfig txnConfig;
        com.sleepycat.je.txn.TxnManager $r0;
        com.sleepycat.je.txn.Txn $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        parent := @parameter0: com.sleepycat.je.Transaction;

        txnConfig := @parameter1: com.sleepycat.je.TransactionConfig;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.txn.TxnManager txnManager>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.txn.TxnManager: com.sleepycat.je.txn.Txn txnBegin(com.sleepycat.je.Transaction,com.sleepycat.je.TransactionConfig)>(parent, txnConfig);

        return $r1;
    }

    public boolean getExposeUserData()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean exposeUserData>;

        return $z0;
    }

    public void rewriteMapTreeRoot(long) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        long cleanerTargetLsn, $l0, $l2;
        java.lang.Throwable l3, $r7;
        com.sleepycat.je.latch.Latch $r0, $r6, $r8;
        int $i1;
        com.sleepycat.je.log.LogManager $r1;
        com.sleepycat.je.log.LogEntryType $r2;
        com.sleepycat.je.dbi.DbTree $r3;
        com.sleepycat.je.log.entry.SingleItemEntry $r4;
        com.sleepycat.je.log.ReplicationContext $r5;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        cleanerTargetLsn := @parameter0: long;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r0.<com.sleepycat.je.latch.Latch: void acquireExclusive()>();

     label1:
        $l0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn>;

        $i1 = staticinvoke <com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>(cleanerTargetLsn, $l0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 != 0 goto label2;

        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager logManager>;

        $r2 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_DBTREE>;

        $r3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree dbMapTree>;

        $r4 = staticinvoke <com.sleepycat.je.log.entry.SingleItemEntry: com.sleepycat.je.log.entry.SingleItemEntry create(com.sleepycat.je.log.LogEntryType,com.sleepycat.je.log.Loggable)>($r2, $r3);

        $r5 = <com.sleepycat.je.log.ReplicationContext: com.sleepycat.je.log.ReplicationContext NO_REPLICATE>;

        $l2 = virtualinvoke $r1.<com.sleepycat.je.log.LogManager: long log(com.sleepycat.je.log.entry.LogEntry,com.sleepycat.je.log.ReplicationContext)>($r4, $r5);

        this.<com.sleepycat.je.dbi.EnvironmentImpl: long mapTreeRootLsn> = $l2;

     label2:
        $r6 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r6.<com.sleepycat.je.latch.Latch: void release()>();

        goto label4;

     label3:
        $r7 := @caughtexception;

        l3 = $r7;

        $r8 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.latch.Latch mapTreeRootLatch>;

        interfaceinvoke $r8.<com.sleepycat.je.latch.Latch: void release()>();

        throw l3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void updateBackgroundReads(int)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        int nReads, limit, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object l3, $r0;
        java.lang.Throwable l4, $r5;
        boolean $z0;
        java.lang.AssertionError $r4;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        nReads := @parameter0: int;

        limit = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadLimit>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit);

        if limit <= 0 goto label7;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: java.lang.Object backgroundTrackingMutex>;

        l3 = $r0;

        entermonitor $r0;

     label1:
        $i0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadCount>;

        $i1 = $i0 + nReads;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadCount> = $i1;

        $i2 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadCount>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(limit);

        if $i2 < limit goto label2;

        $i3 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog>;

        $i4 = $i3 + 1;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundSleepBacklog> = $i4;

        $i5 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadCount>;

        $i6 = $i5 - limit;

        this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadCount> = $i6;

        $z0 = <com.sleepycat.je.dbi.EnvironmentImpl: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $i7 = this.<com.sleepycat.je.dbi.EnvironmentImpl: int backgroundReadCount>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        if $i7 >= 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        exitmonitor l3;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        l4 = $r5;

        exitmonitor l3;

     label6:
        throw l4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void incInsertFailOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priInsertFailOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label2:
        return;
    }

    public void incInsertOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secInsertOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priInsertOps>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label3:
        return;
    }

    public void incUpdateOps(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0, $z1;
        com.sleepycat.je.utilint.AtomicLongStat $r0, $r1;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isInternalDb()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke dbImpl.<com.sleepycat.je.dbi.DatabaseImpl: boolean isKnownSecondary()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat secUpdateOps>;

        virtualinvoke $r0.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

        goto label3;

     label2:
        $r1 = this.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.utilint.AtomicLongStat priUpdateOps>;

        virtualinvoke $r1.<com.sleepycat.je.utilint.AtomicLongStat: void increment()>();

     label3:
        return;
    }

    public void checkTTLAvailable()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        return;
    }

    public boolean getDbEviction()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.dbi.EnvironmentImpl: boolean dbEviction>;

        return $z0;
    }

    public com.sleepycat.je.recovery.VLSNRecoveryProxy getVLSNProxy()
    {
        com.sleepycat.je.dbi.EnvironmentImpl this;
        com.sleepycat.je.dbi.EnvironmentImpl$NoopVLSNProxy $r0;

        this := @this: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = new com.sleepycat.je.dbi.EnvironmentImpl$NoopVLSNProxy;

        specialinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl$NoopVLSNProxy: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,com.sleepycat.je.dbi.EnvironmentImpl$1)>(this, null);

        return $r0;
    }


