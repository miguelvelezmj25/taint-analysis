    public boolean apply(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.SliceIntArray src, dst;
        int $i0;
        boolean $z0;

        this := @this: kanzi.filter.seam.ContextResizer;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        $i0 = this.<kanzi.filter.seam.ContextResizer: int scalingFactor>;

        if $i0 >= 0 goto label1;

        $z0 = specialinvoke this.<kanzi.filter.seam.ContextResizer: boolean shrink_(kanzi.SliceIntArray,kanzi.SliceIntArray)>(src, dst);

        goto label2;

     label1:
        $z0 = specialinvoke this.<kanzi.filter.seam.ContextResizer: boolean expand_(kanzi.SliceIntArray,kanzi.SliceIntArray)>(src, dst);

     label2:
        return $z0;
    }

    private boolean shrink_(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.SliceIntArray src, dst, input#4, output#6, $r0, $r2, $r3, $r5, $r6, $r7;
        int processed#2, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        int[] $r1, $r4, $r8, $r9, $r10, $r11, $r12;
        kanzi.filter.seam.Geodesic[] geodesics#50, geodesics#78;

        this := @this: kanzi.filter.seam.ContextResizer;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        processed#2 = 0;

        input#4 = src;

        output#6 = dst;

        $i0 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label4;

        $i2 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label2;

        $r0 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $r1 = $r0.<kanzi.SliceIntArray: int[] array>;

        $i4 = lengthof $r1;

        $i5 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i6 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i7 = $i5 * $i6;

        if $i4 >= $i7 goto label1;

        $r2 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $i8 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i9 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i10 = $i8 * $i9;

        $r2.<kanzi.SliceIntArray: int length> = $i10;

        $r3 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $r4 = $r3.<kanzi.SliceIntArray: int[] array>;

        $i11 = lengthof $r4;

        $r5 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $i12 = $r5.<kanzi.SliceIntArray: int length>;

        if $i11 >= $i12 goto label1;

        $r6 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $r7 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $i13 = $r7.<kanzi.SliceIntArray: int length>;

        $r8 = newarray (int)[$i13];

        $r6.<kanzi.SliceIntArray: int[] array> = $r8;

     label1:
        output#6 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

     label2:
        geodesics#50 = virtualinvoke this.<kanzi.filter.seam.ContextResizer: kanzi.filter.seam.Geodesic[] computeGeodesics(kanzi.SliceIntArray,int)>(input#4, 2);

        $i14 = lengthof geodesics#50;

        if $i14 <= 0 goto label3;

        $i15 = lengthof geodesics#50;

        processed#2 = processed#2 + $i15;

        virtualinvoke this.<kanzi.filter.seam.ContextResizer: boolean removeGeodesics(kanzi.filter.seam.Geodesic[],kanzi.SliceIntArray,kanzi.SliceIntArray,int)>(geodesics#50, input#4, output#6, 2);

     label3:
        $i16 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i17 = $i16 & 1;

        if $i17 == 0 goto label4;

        input#4 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        output#6 = dst;

     label4:
        $i18 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i19 = $i18 & 1;

        if $i19 == 0 goto label5;

        geodesics#78 = virtualinvoke this.<kanzi.filter.seam.ContextResizer: kanzi.filter.seam.Geodesic[] computeGeodesics(kanzi.SliceIntArray,int)>(input#4, 1);

        $i20 = lengthof geodesics#78;

        if $i20 <= 0 goto label5;

        $i21 = lengthof geodesics#78;

        processed#2 = processed#2 + $i21;

        virtualinvoke this.<kanzi.filter.seam.ContextResizer: boolean removeGeodesics(kanzi.filter.seam.Geodesic[],kanzi.SliceIntArray,kanzi.SliceIntArray,int)>(geodesics#78, input#4, output#6, 1);

     label5:
        if processed#2 != 0 goto label6;

        $r9 = src.<kanzi.SliceIntArray: int[] array>;

        $r10 = dst.<kanzi.SliceIntArray: int[] array>;

        if $r9 == $r10 goto label6;

        $r11 = src.<kanzi.SliceIntArray: int[] array>;

        $i22 = src.<kanzi.SliceIntArray: int index>;

        $r12 = dst.<kanzi.SliceIntArray: int[] array>;

        $i23 = dst.<kanzi.SliceIntArray: int index>;

        $i24 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i25 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i26 = $i24 * $i25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i22, $r12, $i23, $i26);

     label6:
        return 1;
    }

    public kanzi.filter.seam.Geodesic[] computeGeodesics(kanzi.SliceIntArray, int)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.SliceIntArray source;
        int dir, dim, searches, $i0, $i1, $i2, $i3, $i4, $i5, n#29, i#31, j#39, $i6;
        int[] firstPositions;
        kanzi.filter.seam.Geodesic[] $r0, $r1, $r2;

        this := @this: kanzi.filter.seam.ContextResizer;

        source := @parameter0: kanzi.SliceIntArray;

        dir := @parameter1: int;

        $i0 = dir & 2;

        if $i0 != 0 goto label1;

        $i1 = dir & 1;

        if $i1 != 0 goto label1;

        $r0 = newarray (kanzi.filter.seam.Geodesic)[0];

        return $r0;

     label1:
        $i2 = dir & 2;

        if $i2 == 0 goto label2;

        $i3 = dir & 1;

        if $i3 == 0 goto label2;

        $r1 = newarray (kanzi.filter.seam.Geodesic)[0];

        return $r1;

     label2:
        if dir != 1 goto label3;

        $i4 = this.<kanzi.filter.seam.ContextResizer: int height>;

        goto label4;

     label3:
        $i4 = this.<kanzi.filter.seam.ContextResizer: int width>;

     label4:
        dim = $i4;

        $i5 = this.<kanzi.filter.seam.ContextResizer: int maxSearches>;

        searches = staticinvoke <java.lang.Math: int min(int,int)>(dim, $i5);

        firstPositions = newarray (int)[searches];

        n#29 = 0;

        i#31 = 0;

     label5:
        if n#29 >= searches goto label8;

        if i#31 >= 24 goto label8;

        j#39 = i#31 & 7;

     label6:
        if n#29 >= searches goto label7;

        if j#39 >= dim goto label7;

        $i6 = n#29;

        n#29 = n#29 + 1;

        firstPositions[$i6] = j#39;

        j#39 = j#39 + 8;

        goto label6;

     label7:
        i#31 = i#31 + 3;

        goto label5;

     label8:
        $r2 = specialinvoke this.<kanzi.filter.seam.ContextResizer: kanzi.filter.seam.Geodesic[] computeGeodesics_(kanzi.SliceIntArray,int,int[],int)>(source, dir, firstPositions, searches);

        return $r2;
    }

    private kanzi.filter.seam.Geodesic[] computeGeodesics_(kanzi.SliceIntArray, int, int[], int)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.SliceIntArray source;
        int dir, nbGeodesics, maxGeo, startCostIdx, startBestLinePos, geoLength4, searches#1, $i0, geoLength#18, dim#21, inc#24, incLine#26, $i1, $i2, $i3, $i4, $i5, maxCost#60, i#64, bestLinePos#75, costIdx#79, $i6, pos#89, $i7, $i8, $i9, bestCost#105, idx#110, linePos#114, cost#119, $i10, idx#135, linePos#139, cost#145, $i11, $i12, $i13, $i14, $i15, startLine#181, k#188, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, startLine#220, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, startLine#254, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, startLine#288, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, k#323, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, k#356, $i72, $i73, $i74, $i75, $i76, startLine#375, $i77, $i78, $i79, $i80, $i81, $i82, startLine#394, $i83, $i84, $i85, $i86, $i87, $i88, startLine#413, $i89, $i90, $i91, $i92, $i93, $i94, k#433, $i95, $i96, $i97, $i98, $i99, $i100;
        int[] firstPositions, costs_, gp, lp, $r0, $r2, $r6, $r8;
        kanzi.filter.seam.GeodesicSortedQueue queue, $r4;
        kanzi.filter.seam.Geodesic newLast, geodesic#53, last#55, $r5;
        kanzi.filter.seam.Geodesic[] $r1, $r24, $r25;
        boolean $z0, $z1;

        this := @this: kanzi.filter.seam.ContextResizer;

        source := @parameter0: kanzi.SliceIntArray;

        dir := @parameter1: int;

        firstPositions := @parameter2: int[];

        searches#1 := @parameter3: int;

        if searches#1 == 0 goto label01;

        if source == null goto label01;

        $r0 = source.<kanzi.SliceIntArray: int[] array>;

        if $r0 == null goto label01;

        if firstPositions != null goto label02;

     label01:
        $r1 = newarray (kanzi.filter.seam.Geodesic)[0];

        return $r1;

     label02:
        $i0 = lengthof firstPositions;

        if searches#1 <= $i0 goto label03;

        searches#1 = lengthof firstPositions;

     label03:
        if dir != 1 goto label04;

        geoLength#18 = this.<kanzi.filter.seam.ContextResizer: int width>;

        dim#21 = this.<kanzi.filter.seam.ContextResizer: int height>;

        inc#24 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        incLine#26 = 1;

        goto label05;

     label04:
        geoLength#18 = this.<kanzi.filter.seam.ContextResizer: int height>;

        dim#21 = this.<kanzi.filter.seam.ContextResizer: int width>;

        inc#24 = 1;

        incLine#26 = this.<kanzi.filter.seam.ContextResizer: int stride>;

     label05:
        $r2 = this.<kanzi.filter.seam.ContextResizer: int[] costs>;

        specialinvoke this.<kanzi.filter.seam.ContextResizer: int[] calculateCosts(kanzi.SliceIntArray,int[])>(source, $r2);

        $i1 = this.<kanzi.filter.seam.ContextResizer: int scalingFactor>;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = dim#21 * $i2;

        nbGeodesics = $i3 / 1000;

        if nbGeodesics <= searches#1 goto label06;

        $i4 = searches#1;

        goto label07;

     label06:
        $i4 = nbGeodesics;

     label07:
        maxGeo = $i4;

        $r4 = new kanzi.filter.seam.GeodesicSortedQueue;

        specialinvoke $r4.<kanzi.filter.seam.GeodesicSortedQueue: void <init>(int)>(maxGeo);

        queue = $r4;

        geodesic#53 = null;

        last#55 = null;

        $i5 = this.<kanzi.filter.seam.ContextResizer: int maxAvgGeoPixCost>;

        maxCost#60 = geoLength#18 * $i5;

        costs_ = this.<kanzi.filter.seam.ContextResizer: int[] costs>;

        i#64 = 0;

     label08:
        if i#64 >= searches#1 goto label34;

        if geodesic#53 != null goto label09;

        $r5 = new kanzi.filter.seam.Geodesic;

        specialinvoke $r5.<kanzi.filter.seam.Geodesic: void <init>(int,int)>(dir, geoLength#18);

        geodesic#53 = $r5;

     label09:
        bestLinePos#75 = firstPositions[i#64];

        costIdx#79 = inc#24 * bestLinePos#75;

        $r6 = geodesic#53.<kanzi.filter.seam.Geodesic: int[] positions>;

        $r6[0] = bestLinePos#75;

        $i6 = costs_[costIdx#79];

        geodesic#53.<kanzi.filter.seam.Geodesic: int cost> = $i6;

        pos#89 = 1;

     label10:
        if pos#89 >= geoLength#18 goto label22;

        costIdx#79 = costIdx#79 + incLine#26;

        startCostIdx = costIdx#79;

        startBestLinePos = bestLinePos#75;

        $i7 = costs_[startCostIdx];

        $i8 = $i7 & -2147483648;

        if $i8 != 0 goto label11;

        $i9 = costs_[startCostIdx];

        goto label12;

     label11:
        $i9 = 268435455;

     label12:
        bestCost#105 = $i9;

        if bestCost#105 <= 0 goto label16;

        idx#110 = startCostIdx - inc#24;

        linePos#114 = startBestLinePos - 1;

     label13:
        if linePos#114 < 0 goto label16;

        cost#119 = costs_[idx#110];

        $i10 = cost#119 & -2147483648;

        if $i10 == 0 goto label14;

        goto label15;

     label14:
        if cost#119 >= bestCost#105 goto label16;

        bestCost#105 = cost#119;

        bestLinePos#75 = linePos#114;

        costIdx#79 = idx#110;

        goto label16;

     label15:
        idx#110 = idx#110 - inc#24;

        linePos#114 = linePos#114 + -1;

        goto label13;

     label16:
        if bestCost#105 <= 0 goto label21;

        idx#135 = startCostIdx + inc#24;

        linePos#139 = startBestLinePos + 1;

     label17:
        if linePos#139 >= dim#21 goto label20;

        cost#145 = costs_[idx#135];

        $i11 = cost#145 & -2147483648;

        if $i11 == 0 goto label18;

        goto label19;

     label18:
        if cost#145 >= bestCost#105 goto label20;

        bestCost#105 = cost#145;

        bestLinePos#75 = linePos#139;

        costIdx#79 = idx#135;

        goto label20;

     label19:
        idx#135 = idx#135 + inc#24;

        linePos#139 = linePos#139 + 1;

        goto label17;

     label20:
        $i12 = geodesic#53.<kanzi.filter.seam.Geodesic: int cost>;

        $i13 = $i12 + bestCost#105;

        geodesic#53.<kanzi.filter.seam.Geodesic: int cost> = $i13;

        $i14 = geodesic#53.<kanzi.filter.seam.Geodesic: int cost>;

        if $i14 < maxCost#60 goto label21;

        goto label22;

     label21:
        $r8 = geodesic#53.<kanzi.filter.seam.Geodesic: int[] positions>;

        $r8[pos#89] = bestLinePos#75;

        pos#89 = pos#89 + 1;

        goto label10;

     label22:
        $i15 = geodesic#53.<kanzi.filter.seam.Geodesic: int cost>;

        if $i15 >= maxCost#60 goto label32;

        newLast = virtualinvoke queue.<kanzi.filter.seam.GeodesicSortedQueue: kanzi.filter.seam.Geodesic add(kanzi.filter.seam.Geodesic)>(geodesic#53);

        if nbGeodesics <= 1 goto label31;

        geoLength4 = geoLength#18 & -4;

        startLine#181 = 0;

        gp = geodesic#53.<kanzi.filter.seam.Geodesic: int[] positions>;

        if last#55 == null goto label27;

        lp = last#55.<kanzi.filter.seam.Geodesic: int[] positions>;

        k#188 = 0;

     label23:
        if k#188 >= geoLength4 goto label24;

        $i16 = gp[k#188];

        $i17 = inc#24 * $i16;

        $i18 = startLine#181 + $i17;

        $i19 = costs_[$i18];

        $i20 = $i19 | -2147483648;

        costs_[$i18] = $i20;

        $i21 = lp[k#188];

        $i22 = inc#24 * $i21;

        $i23 = startLine#181 + $i22;

        $i24 = costs_[$i23];

        $i25 = $i24 & 2147483647;

        costs_[$i23] = $i25;

        startLine#220 = startLine#181 + incLine#26;

        $i26 = k#188 + 1;

        $i27 = gp[$i26];

        $i28 = inc#24 * $i27;

        $i29 = startLine#220 + $i28;

        $i30 = costs_[$i29];

        $i31 = $i30 | -2147483648;

        costs_[$i29] = $i31;

        $i32 = k#188 + 1;

        $i33 = lp[$i32];

        $i34 = inc#24 * $i33;

        $i35 = startLine#220 + $i34;

        $i36 = costs_[$i35];

        $i37 = $i36 & 2147483647;

        costs_[$i35] = $i37;

        startLine#254 = startLine#220 + incLine#26;

        $i38 = k#188 + 2;

        $i39 = gp[$i38];

        $i40 = inc#24 * $i39;

        $i41 = startLine#254 + $i40;

        $i42 = costs_[$i41];

        $i43 = $i42 | -2147483648;

        costs_[$i41] = $i43;

        $i44 = k#188 + 2;

        $i45 = lp[$i44];

        $i46 = inc#24 * $i45;

        $i47 = startLine#254 + $i46;

        $i48 = costs_[$i47];

        $i49 = $i48 & 2147483647;

        costs_[$i47] = $i49;

        startLine#288 = startLine#254 + incLine#26;

        $i50 = k#188 + 3;

        $i51 = gp[$i50];

        $i52 = inc#24 * $i51;

        $i53 = startLine#288 + $i52;

        $i54 = costs_[$i53];

        $i55 = $i54 | -2147483648;

        costs_[$i53] = $i55;

        $i56 = k#188 + 3;

        $i57 = lp[$i56];

        $i58 = inc#24 * $i57;

        $i59 = startLine#288 + $i58;

        $i60 = costs_[$i59];

        $i61 = $i60 & 2147483647;

        costs_[$i59] = $i61;

        startLine#181 = startLine#288 + incLine#26;

        k#188 = k#188 + 4;

        goto label23;

     label24:
        k#323 = geoLength4;

     label25:
        if k#323 >= geoLength#18 goto label26;

        $i62 = gp[k#323];

        $i63 = inc#24 * $i62;

        $i64 = startLine#181 + $i63;

        $i65 = costs_[$i64];

        $i66 = $i65 | -2147483648;

        costs_[$i64] = $i66;

        $i67 = lp[k#323];

        $i68 = inc#24 * $i67;

        $i69 = startLine#181 + $i68;

        $i70 = costs_[$i69];

        $i71 = $i70 & 2147483647;

        costs_[$i69] = $i71;

        startLine#181 = startLine#181 + incLine#26;

        k#323 = k#323 + 1;

        goto label25;

     label26:
        goto label31;

     label27:
        k#356 = 0;

     label28:
        if k#356 >= geoLength4 goto label29;

        $i72 = gp[k#356];

        $i73 = inc#24 * $i72;

        $i74 = startLine#181 + $i73;

        $i75 = costs_[$i74];

        $i76 = $i75 | -2147483648;

        costs_[$i74] = $i76;

        startLine#375 = startLine#181 + incLine#26;

        $i77 = k#356 + 1;

        $i78 = gp[$i77];

        $i79 = inc#24 * $i78;

        $i80 = startLine#375 + $i79;

        $i81 = costs_[$i80];

        $i82 = $i81 | -2147483648;

        costs_[$i80] = $i82;

        startLine#394 = startLine#375 + incLine#26;

        $i83 = k#356 + 2;

        $i84 = gp[$i83];

        $i85 = inc#24 * $i84;

        $i86 = startLine#394 + $i85;

        $i87 = costs_[$i86];

        $i88 = $i87 | -2147483648;

        costs_[$i86] = $i88;

        startLine#413 = startLine#394 + incLine#26;

        $i89 = k#356 + 3;

        $i90 = gp[$i89];

        $i91 = inc#24 * $i90;

        $i92 = startLine#413 + $i91;

        $i93 = costs_[$i92];

        $i94 = $i93 | -2147483648;

        costs_[$i92] = $i94;

        startLine#181 = startLine#413 + incLine#26;

        k#356 = k#356 + 4;

        goto label28;

     label29:
        k#433 = geoLength4;

     label30:
        if k#433 >= geoLength#18 goto label31;

        $i95 = gp[k#433];

        $i96 = inc#24 * $i95;

        $i97 = startLine#181 + $i96;

        $i98 = costs_[$i97];

        $i99 = $i98 | -2147483648;

        costs_[$i97] = $i99;

        startLine#181 = startLine#181 + incLine#26;

        k#433 = k#433 + 1;

        goto label30;

     label31:
        geodesic#53 = last#55;

        $z0 = virtualinvoke queue.<kanzi.filter.seam.GeodesicSortedQueue: boolean isFull()>();

        if $z0 == 0 goto label32;

        last#55 = newLast;

        maxCost#60 = newLast.<kanzi.filter.seam.Geodesic: int cost>;

     label32:
        if maxCost#60 != 0 goto label33;

        $z1 = virtualinvoke queue.<kanzi.filter.seam.GeodesicSortedQueue: boolean isFull()>();

        if $z1 != 1 goto label33;

        goto label34;

     label33:
        i#64 = i#64 + 1;

        goto label08;

     label34:
        $i100 = virtualinvoke queue.<kanzi.filter.seam.GeodesicSortedQueue: int size()>();

        $r24 = newarray (kanzi.filter.seam.Geodesic)[$i100];

        $r25 = virtualinvoke queue.<kanzi.filter.seam.GeodesicSortedQueue: kanzi.filter.seam.Geodesic[] toArray(kanzi.filter.seam.Geodesic[])>($r24);

        return $r25;
    }

    private int[] calculateCosts(kanzi.SliceIntArray, int[])
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.SliceIntArray source, $r4, $r6;
        int[] costs_;
        byte sobelMode, $b0;
        kanzi.filter.SobelFilter[] gradientFilters;
        kanzi.filter.ParallelFilter pf, $r2;
        int area, c, i#10, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, j#83, $i25, $i26, $i27, $i28, $i29, $i30, i#117, $i31, $i32, $i33, $i34, $i35;
        kanzi.filter.SobelFilter gradientFilter, $r1, $r5;
        boolean $z0;
        java.util.concurrent.ExecutorService $r0, $r3;

        this := @this: kanzi.filter.seam.ContextResizer;

        source := @parameter0: kanzi.SliceIntArray;

        costs_ := @parameter1: int[];

        $z0 = this.<kanzi.filter.seam.ContextResizer: boolean fastMode>;

        if $z0 != 1 goto label01;

        $b0 = 1;

        goto label02;

     label01:
        $b0 = 3;

     label02:
        sobelMode = $b0;

        $r0 = this.<kanzi.filter.seam.ContextResizer: java.util.concurrent.ExecutorService pool>;

        if $r0 == null goto label07;

        gradientFilters = newarray (kanzi.filter.SobelFilter)[4];

        i#10 = 0;

     label03:
        $i1 = lengthof gradientFilters;

        if i#10 >= $i1 goto label04;

        $r1 = new kanzi.filter.SobelFilter;

        $i2 = this.<kanzi.filter.seam.ContextResizer: int width>;

        $i3 = $i2 + 2;

        $i4 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i5 = lengthof gradientFilters;

        $i6 = $i4 / $i5;

        $i7 = $i6 + 2;

        $i8 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        specialinvoke $r1.<kanzi.filter.SobelFilter: void <init>(int,int,int,int,int,int,boolean)>($i3, $i7, $i8, 3, sobelMode, 1, 0);

        gradientFilters[i#10] = $r1;

        i#10 = i#10 + 1;

        goto label03;

     label04:
        $r2 = new kanzi.filter.ParallelFilter;

        $i9 = this.<kanzi.filter.seam.ContextResizer: int width>;

        $i10 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i11 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $r3 = this.<kanzi.filter.seam.ContextResizer: java.util.concurrent.ExecutorService pool>;

        specialinvoke $r2.<kanzi.filter.ParallelFilter: void <init>(int,int,int,java.util.concurrent.ExecutorService,kanzi.IntFilter[],int)>($i9, $i10, $i11, $r3, gradientFilters, 1);

        pf = $r2;

        $r4 = new kanzi.SliceIntArray;

        specialinvoke $r4.<kanzi.SliceIntArray: void <init>(int[],int)>(costs_, 0);

        interfaceinvoke pf.<kanzi.IntFilter: boolean apply(kanzi.SliceIntArray,kanzi.SliceIntArray)>(source, $r4);

        $i12 = this.<kanzi.filter.seam.ContextResizer: int width>;

        $i13 = this.<kanzi.filter.seam.ContextResizer: int width>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(costs_, $i12, costs_, 0, $i13);

        $i14 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i15 = $i14 - 2;

        $i16 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i17 = $i15 * $i16;

        $i18 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i19 = $i18 - 1;

        $i20 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i21 = $i19 * $i20;

        $i22 = this.<kanzi.filter.seam.ContextResizer: int width>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(costs_, $i17, costs_, $i21, $i22);

        $i23 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i24 = this.<kanzi.filter.seam.ContextResizer: int height>;

        area = $i23 * $i24;

        j#83 = 0;

     label05:
        if j#83 >= area goto label06;

        $i25 = j#83 + 1;

        $i26 = costs_[$i25];

        costs_[j#83] = $i26;

        $i27 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        j#83 = j#83 + $i27;

        goto label05;

     label06:
        goto label08;

     label07:
        $r5 = new kanzi.filter.SobelFilter;

        $i28 = this.<kanzi.filter.seam.ContextResizer: int width>;

        $i29 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i30 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        specialinvoke $r5.<kanzi.filter.SobelFilter: void <init>(int,int,int,int,int,int,boolean)>($i28, $i29, $i30, 3, sobelMode, 1, 1);

        gradientFilter = $r5;

        $r6 = new kanzi.SliceIntArray;

        specialinvoke $r6.<kanzi.SliceIntArray: void <init>(int[],int)>(costs_, 0);

        virtualinvoke gradientFilter.<kanzi.filter.SobelFilter: boolean apply(kanzi.SliceIntArray,kanzi.SliceIntArray)>(source, $r6);

     label08:
        i#117 = 0;

     label09:
        $i31 = lengthof costs_;

        if i#117 >= $i31 goto label12;

        c = costs_[i#117];

        $i32 = i#117;

        if c >= 5 goto label10;

        $i33 = 0;

        goto label11;

     label10:
        $i34 = c * c;

        $i35 = $i34 >> 8;

        $i33 = c + $i35;

     label11:
        costs_[$i32] = $i33;

        i#117 = i#117 + 1;

        goto label09;

     label12:
        return costs_;
    }

    public boolean removeGeodesics(kanzi.filter.seam.Geodesic[], kanzi.SliceIntArray, kanzi.SliceIntArray, int)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.filter.seam.Geodesic[] geodesics;
        kanzi.SliceIntArray source, destination;
        int dir, endPosIdx, newPos, len, len, $i0, $i1, $i2, $i3, $i4, srcStart#24, dstStart#27, $i5, endj#35, endLine#38, incIdx#41, incStart#43, color#45, j#55, k#61, $i6, srcIdx#81, dstIdx#83, posIdx#85, pos#87, $i7, $i8, srcIdx#157, dstIdx#161, $i9, srcIdx#173, $i10, dstIdx#179;
        int[] src, dst, linePositions, $r1;
        kanzi.filter.seam.Geodesic $r0;
        kanzi.IntSorter $r2;
        boolean $z1;

        this := @this: kanzi.filter.seam.ContextResizer;

        geodesics := @parameter0: kanzi.filter.seam.Geodesic[];

        source := @parameter1: kanzi.SliceIntArray;

        destination := @parameter2: kanzi.SliceIntArray;

        dir := @parameter3: int;

        $i0 = dir & 2;

        if $i0 != 0 goto label01;

        $i1 = dir & 1;

        if $i1 != 0 goto label01;

        return 0;

     label01:
        $i2 = dir & 2;

        if $i2 == 0 goto label02;

        $i3 = dir & 1;

        if $i3 == 0 goto label02;

        return 0;

     label02:
        $i4 = lengthof geodesics;

        if $i4 != 0 goto label03;

        return 1;

     label03:
        src = source.<kanzi.SliceIntArray: int[] array>;

        dst = destination.<kanzi.SliceIntArray: int[] array>;

        srcStart#24 = source.<kanzi.SliceIntArray: int index>;

        dstStart#27 = destination.<kanzi.SliceIntArray: int index>;

        $i5 = lengthof geodesics;

        linePositions = newarray (int)[$i5];

        if dir != 1 goto label04;

        endj#35 = this.<kanzi.filter.seam.ContextResizer: int width>;

        endLine#38 = this.<kanzi.filter.seam.ContextResizer: int height>;

        incIdx#41 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        incStart#43 = 1;

        color#45 = -16776961;

        goto label05;

     label04:
        endj#35 = this.<kanzi.filter.seam.ContextResizer: int height>;

        endLine#38 = this.<kanzi.filter.seam.ContextResizer: int width>;

        incIdx#41 = 1;

        incStart#43 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        color#45 = -65536;

     label05:
        j#55 = 0;

     label06:
        if j#55 >= endj#35 goto label18;

        endPosIdx = lengthof linePositions;

        k#61 = 0;

     label07:
        if k#61 >= endPosIdx goto label08;

        $r0 = geodesics[k#61];

        $r1 = $r0.<kanzi.filter.seam.Geodesic: int[] positions>;

        $i6 = $r1[j#55];

        linePositions[k#61] = $i6;

        k#61 = k#61 + 1;

        goto label07;

     label08:
        if endPosIdx <= 1 goto label09;

        $r2 = this.<kanzi.filter.seam.ContextResizer: kanzi.IntSorter sorter>;

        interfaceinvoke $r2.<kanzi.IntSorter: boolean sort(int[],int,int)>(linePositions, 0, endPosIdx);

     label09:
        srcIdx#81 = srcStart#24;

        dstIdx#83 = dstStart#27;

        posIdx#85 = 0;

        pos#87 = 0;

     label10:
        if posIdx#85 >= endPosIdx goto label15;

        newPos = linePositions[posIdx#85];

        if newPos <= pos#87 goto label13;

        len = newPos - pos#87;

        if dir != 2 goto label11;

        if len < 32 goto label11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(src, srcIdx#81, dst, dstIdx#83, len);

        srcIdx#81 = srcIdx#81 + len;

        dstIdx#83 = dstIdx#83 + len;

        goto label12;

     label11:
        staticinvoke <kanzi.filter.seam.ContextResizer: void copy(int[],int,int[],int,int,int)>(src, srcIdx#81, dst, dstIdx#83, len, incIdx#41);

        $i7 = len * incIdx#41;

        srcIdx#81 = srcIdx#81 + $i7;

        $i8 = len * incIdx#41;

        dstIdx#83 = dstIdx#83 + $i8;

     label12:
        pos#87 = newPos;

     label13:
        $z1 = this.<kanzi.filter.seam.ContextResizer: boolean debug>;

        if $z1 != 1 goto label14;

        dst[dstIdx#83] = color#45;

        dstIdx#83 = dstIdx#83 + incIdx#41;

     label14:
        pos#87 = pos#87 + 1;

        srcIdx#81 = srcIdx#81 + incIdx#41;

        posIdx#85 = posIdx#85 + 1;

        goto label10;

     label15:
        len = endLine#38 - pos#87;

        if dir != 2 goto label16;

        if len < 32 goto label16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(src, srcIdx#81, dst, dstIdx#83, len);

        srcIdx#157 = srcIdx#81 + len;

        dstIdx#161 = dstIdx#83 + len;

        goto label17;

     label16:
        staticinvoke <kanzi.filter.seam.ContextResizer: void copy(int[],int,int[],int,int,int)>(src, srcIdx#81, dst, dstIdx#83, len, incIdx#41);

        $i9 = len * incIdx#41;

        srcIdx#173 = srcIdx#81 + $i9;

        $i10 = len * incIdx#41;

        dstIdx#179 = dstIdx#83 + $i10;

     label17:
        srcStart#24 = srcStart#24 + incStart#43;

        dstStart#27 = dstStart#27 + incStart#43;

        j#55 = j#55 + 1;

        goto label06;

     label18:
        return 1;
    }

    private static void copy(int[], int, int[], int, int, int)
    {
        int[] src, dst;
        int len, inc1, len4, inc2, inc3, inc4, srcIdx#1, dstIdx#2, i#16, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i#58, $i10;

        src := @parameter0: int[];

        srcIdx#1 := @parameter1: int;

        dst := @parameter2: int[];

        dstIdx#2 := @parameter3: int;

        len := @parameter4: int;

        inc1 := @parameter5: int;

        len4 = len & -4;

        inc2 = inc1 + inc1;

        inc3 = inc2 + inc1;

        inc4 = inc3 + inc1;

        i#16 = 0;

     label1:
        if i#16 >= len4 goto label2;

        $i0 = src[srcIdx#1];

        dst[dstIdx#2] = $i0;

        $i1 = dstIdx#2 + inc1;

        $i2 = srcIdx#1 + inc1;

        $i3 = src[$i2];

        dst[$i1] = $i3;

        $i4 = dstIdx#2 + inc2;

        $i5 = srcIdx#1 + inc2;

        $i6 = src[$i5];

        dst[$i4] = $i6;

        $i7 = dstIdx#2 + inc3;

        $i8 = srcIdx#1 + inc3;

        $i9 = src[$i8];

        dst[$i7] = $i9;

        dstIdx#2 = dstIdx#2 + inc4;

        srcIdx#1 = srcIdx#1 + inc4;

        i#16 = i#16 + 4;

        goto label1;

     label2:
        i#58 = len4;

     label3:
        if i#58 >= len goto label4;

        $i10 = src[srcIdx#1];

        dst[dstIdx#2] = $i10;

        dstIdx#2 = dstIdx#2 + inc1;

        srcIdx#1 = srcIdx#1 + inc1;

        i#58 = i#58 + 1;

        goto label3;

     label4:
        return;
    }

    private boolean expand_(kanzi.SliceIntArray, kanzi.SliceIntArray)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.SliceIntArray src, dst, input#4, output#6, $r0, $r2, $r3, $r5, $r6, $r7;
        int processed#2, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        int[] $r1, $r4, $r8, $r9, $r10, $r11, $r12;
        kanzi.filter.seam.Geodesic[] geodesics#50, geodesics#78;

        this := @this: kanzi.filter.seam.ContextResizer;

        src := @parameter0: kanzi.SliceIntArray;

        dst := @parameter1: kanzi.SliceIntArray;

        processed#2 = 0;

        input#4 = src;

        output#6 = dst;

        $i0 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label4;

        $i2 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label2;

        $r0 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $r1 = $r0.<kanzi.SliceIntArray: int[] array>;

        $i4 = lengthof $r1;

        $i5 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i6 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i7 = $i5 * $i6;

        if $i4 >= $i7 goto label1;

        $r2 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $i8 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i9 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i10 = $i8 * $i9;

        $r2.<kanzi.SliceIntArray: int length> = $i10;

        $r3 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $r4 = $r3.<kanzi.SliceIntArray: int[] array>;

        $i11 = lengthof $r4;

        $r5 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $i12 = $r5.<kanzi.SliceIntArray: int length>;

        if $i11 >= $i12 goto label1;

        $r6 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $r7 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        $i13 = $r7.<kanzi.SliceIntArray: int length>;

        $r8 = newarray (int)[$i13];

        $r6.<kanzi.SliceIntArray: int[] array> = $r8;

     label1:
        output#6 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

     label2:
        geodesics#50 = virtualinvoke this.<kanzi.filter.seam.ContextResizer: kanzi.filter.seam.Geodesic[] computeGeodesics(kanzi.SliceIntArray,int)>(input#4, 2);

        $i14 = lengthof geodesics#50;

        if $i14 <= 0 goto label3;

        $i15 = lengthof geodesics#50;

        processed#2 = processed#2 + $i15;

        virtualinvoke this.<kanzi.filter.seam.ContextResizer: boolean addGeodesics(kanzi.filter.seam.Geodesic[],kanzi.SliceIntArray,kanzi.SliceIntArray,int)>(geodesics#50, input#4, output#6, 2);

     label3:
        $i16 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i17 = $i16 & 1;

        if $i17 == 0 goto label4;

        input#4 = this.<kanzi.filter.seam.ContextResizer: kanzi.SliceIntArray buffer>;

        output#6 = dst;

     label4:
        $i18 = this.<kanzi.filter.seam.ContextResizer: int direction>;

        $i19 = $i18 & 1;

        if $i19 == 0 goto label5;

        geodesics#78 = virtualinvoke this.<kanzi.filter.seam.ContextResizer: kanzi.filter.seam.Geodesic[] computeGeodesics(kanzi.SliceIntArray,int)>(input#4, 1);

        $i20 = lengthof geodesics#78;

        if $i20 <= 0 goto label5;

        $i21 = lengthof geodesics#78;

        processed#2 = processed#2 + $i21;

        virtualinvoke this.<kanzi.filter.seam.ContextResizer: boolean addGeodesics(kanzi.filter.seam.Geodesic[],kanzi.SliceIntArray,kanzi.SliceIntArray,int)>(geodesics#78, input#4, output#6, 1);

     label5:
        if processed#2 != 0 goto label6;

        $r9 = src.<kanzi.SliceIntArray: int[] array>;

        $r10 = dst.<kanzi.SliceIntArray: int[] array>;

        if $r9 == $r10 goto label6;

        $r11 = src.<kanzi.SliceIntArray: int[] array>;

        $i22 = src.<kanzi.SliceIntArray: int index>;

        $r12 = dst.<kanzi.SliceIntArray: int[] array>;

        $i23 = dst.<kanzi.SliceIntArray: int index>;

        $i24 = this.<kanzi.filter.seam.ContextResizer: int height>;

        $i25 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        $i26 = $i24 * $i25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i22, $r12, $i23, $i26);

     label6:
        return 1;
    }

    public boolean addGeodesics(kanzi.filter.seam.Geodesic[], kanzi.SliceIntArray, kanzi.SliceIntArray, int)
    {
        kanzi.filter.seam.ContextResizer this;
        kanzi.filter.seam.Geodesic[] geodesics;
        kanzi.SliceIntArray source, destination;
        int dir, endPosIdx, newPos, len, len, $i0, $i1, $i2, $i3, $i4, srcStart#24, dstStart#27, $i5, endj#35, endi#38, incStart#40, incIdx#43, color#45, j#57, k#62, $i6, posIdx#82, srcIdx#84, dstIdx#86, pos#88, $i7, $i8, $i9, srcIdx#160, dstIdx#164, $i10, srcIdx#176, $i11, dstIdx#182;
        int[] src, dst, linePositions, $r1;
        kanzi.filter.seam.Geodesic $r0;
        kanzi.IntSorter $r2;
        boolean $z1;

        this := @this: kanzi.filter.seam.ContextResizer;

        geodesics := @parameter0: kanzi.filter.seam.Geodesic[];

        source := @parameter1: kanzi.SliceIntArray;

        destination := @parameter2: kanzi.SliceIntArray;

        dir := @parameter3: int;

        $i0 = dir & 2;

        if $i0 != 0 goto label01;

        $i1 = dir & 1;

        if $i1 != 0 goto label01;

        return 0;

     label01:
        $i2 = dir & 2;

        if $i2 == 0 goto label02;

        $i3 = dir & 1;

        if $i3 == 0 goto label02;

        return 0;

     label02:
        $i4 = lengthof geodesics;

        if $i4 != 0 goto label03;

        return 1;

     label03:
        src = source.<kanzi.SliceIntArray: int[] array>;

        dst = destination.<kanzi.SliceIntArray: int[] array>;

        srcStart#24 = source.<kanzi.SliceIntArray: int index>;

        dstStart#27 = destination.<kanzi.SliceIntArray: int index>;

        $i5 = lengthof geodesics;

        linePositions = newarray (int)[$i5];

        if dir != 1 goto label04;

        endj#35 = this.<kanzi.filter.seam.ContextResizer: int width>;

        endi#38 = this.<kanzi.filter.seam.ContextResizer: int height>;

        incStart#40 = 1;

        incIdx#43 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        color#45 = -16776961;

        goto label05;

     label04:
        endj#35 = this.<kanzi.filter.seam.ContextResizer: int height>;

        endi#38 = this.<kanzi.filter.seam.ContextResizer: int width>;

        incStart#40 = this.<kanzi.filter.seam.ContextResizer: int stride>;

        incIdx#43 = 1;

        color#45 = -65536;

     label05:
        j#57 = endj#35 - 1;

     label06:
        if j#57 < 0 goto label19;

        endPosIdx = lengthof linePositions;

        k#62 = 0;

     label07:
        if k#62 >= endPosIdx goto label08;

        $r0 = geodesics[k#62];

        $r1 = $r0.<kanzi.filter.seam.Geodesic: int[] positions>;

        $i6 = $r1[j#57];

        linePositions[k#62] = $i6;

        k#62 = k#62 + 1;

        goto label07;

     label08:
        if endPosIdx <= 1 goto label09;

        $r2 = this.<kanzi.filter.seam.ContextResizer: kanzi.IntSorter sorter>;

        interfaceinvoke $r2.<kanzi.IntSorter: boolean sort(int[],int,int)>(linePositions, 0, endPosIdx);

     label09:
        posIdx#82 = 0;

        srcIdx#84 = srcStart#24;

        dstIdx#86 = dstStart#27;

        pos#88 = 0;

     label10:
        if posIdx#82 >= endPosIdx goto label16;

        newPos = linePositions[posIdx#82];

        if newPos <= pos#88 goto label13;

        len = newPos - pos#88;

        if dir != 2 goto label11;

        if len < 32 goto label11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(src, srcIdx#84, dst, dstIdx#86, len);

        srcIdx#84 = srcIdx#84 + len;

        dstIdx#86 = dstIdx#86 + len;

        goto label12;

     label11:
        staticinvoke <kanzi.filter.seam.ContextResizer: void copy(int[],int,int[],int,int,int)>(src, srcIdx#84, dst, dstIdx#86, len, incIdx#43);

        $i7 = len * incIdx#43;

        srcIdx#84 = srcIdx#84 + $i7;

        $i8 = len * incIdx#43;

        dstIdx#86 = dstIdx#86 + $i8;

     label12:
        pos#88 = newPos;

     label13:
        $z1 = this.<kanzi.filter.seam.ContextResizer: boolean debug>;

        if $z1 != 1 goto label14;

        dst[dstIdx#86] = color#45;

        goto label15;

     label14:
        $i9 = src[srcIdx#84];

        dst[dstIdx#86] = $i9;

     label15:
        pos#88 = pos#88 + 1;

        dstIdx#86 = dstIdx#86 + incIdx#43;

        posIdx#82 = posIdx#82 + 1;

        goto label10;

     label16:
        len = endi#38 - pos#88;

        if dir != 2 goto label17;

        if len < 32 goto label17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(src, srcIdx#84, dst, dstIdx#86, len);

        srcIdx#160 = srcIdx#84 + len;

        dstIdx#164 = dstIdx#86 + len;

        goto label18;

     label17:
        staticinvoke <kanzi.filter.seam.ContextResizer: void copy(int[],int,int[],int,int,int)>(src, srcIdx#84, dst, dstIdx#86, len, incIdx#43);

        $i10 = len * incIdx#43;

        srcIdx#176 = srcIdx#84 + $i10;

        $i11 = len * incIdx#43;

        dstIdx#182 = dstIdx#86 + $i11;

     label18:
        srcStart#24 = srcStart#24 + incStart#40;

        dstStart#27 = dstStart#27 + incStart#40;

        j#57 = j#57 + -1;

        goto label06;

     label19:
        return 1;
    }


