    void <init>()
    {
        org.unix4j.find.util.RelativePathBase$3 this;

        this := @this: org.unix4j.find.util.RelativePathBase$3;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.StringBuilder appendPrefixForChildren(java.lang.StringBuilder, java.io.File, boolean)
    {
        org.unix4j.find.util.RelativePathBase$3 this;
        java.lang.StringBuilder result;
        java.io.File baseDir;
        boolean directChildOfBase;

        this := @this: org.unix4j.find.util.RelativePathBase$3;

        result := @parameter0: java.lang.StringBuilder;

        baseDir := @parameter1: java.io.File;

        directChildOfBase := @parameter2: boolean;

        return result;
    }

    public java.lang.StringBuilder appendPrefixToCommonAncestor(java.lang.StringBuilder, java.io.File, int)
    {
        org.unix4j.find.util.RelativePathBase$3 this;
        java.lang.StringBuilder result;
        java.io.File baseDir;
        int levelsToCommonAncestor, i#2;

        this := @this: org.unix4j.find.util.RelativePathBase$3;

        result := @parameter0: java.lang.StringBuilder;

        baseDir := @parameter1: java.io.File;

        levelsToCommonAncestor := @parameter2: int;

        i#2 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(levelsToCommonAncestor);

        if i#2 >= levelsToCommonAncestor goto label2;

        virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("../");

        i#2 = i#2 + 1;

        goto label1;

     label2:
        return result;
    }

    public java.lang.StringBuilder appendPathForBaseDir(java.lang.StringBuilder, java.io.File)
    {
        org.unix4j.find.util.RelativePathBase$3 this;
        java.lang.StringBuilder result, $r0;
        java.io.File baseDir;

        this := @this: org.unix4j.find.util.RelativePathBase$3;

        result := @parameter0: java.lang.StringBuilder;

        baseDir := @parameter1: java.io.File;

        $r0 = virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        return $r0;
    }


