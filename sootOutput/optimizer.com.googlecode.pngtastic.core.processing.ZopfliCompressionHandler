    public void <init>(optimizer.com.googlecode.pngtastic.core.Logger)
    {
        optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.Logger log;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler;

        nop;

        log := @parameter0: optimizer.com.googlecode.pngtastic.core.Logger;

        nop;

        specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: void <init>(optimizer.com.googlecode.pngtastic.core.Logger,int)>(log, 15);

        nop;

        return;
    }

    public void <init>(optimizer.com.googlecode.pngtastic.core.Logger, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.Logger log;
        int iterations;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli $r0;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options $r1;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting $r2;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler;

        nop;

        log := @parameter0: optimizer.com.googlecode.pngtastic.core.Logger;

        nop;

        iterations := @parameter1: int;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: optimizer.com.googlecode.pngtastic.core.Logger log> = log;

        nop;

        $r0 = new optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli;

        nop;

        specialinvoke $r0.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli: void <init>(int)>(8388608);

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli zopfli> = $r0;

        nop;

        $r1 = new optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options;

        nop;

        $r2 = <optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting FIRST>;

        nop;

        specialinvoke $r1.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options: void <init>(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options$BlockSplitting,int)>($r2, iterations);

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options> = $r1;

        nop;

        return;
    }

    public byte[] deflate(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, java.lang.Integer, boolean) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler this;
        optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.lang.Integer compressionLevel, $r7;
        boolean concurrent;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer result;
        java.io.ByteArrayOutputStream byteArrayOutputStream, $r3;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli $r0;
        optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options $r1;
        byte[] $r2, $r4, $r8;
        int $i0, $i1, $i2;
        optimizer.com.googlecode.pngtastic.core.Logger $r5;
        java.lang.Object[] $r6;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler;

        nop;

        inflatedImageData := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        nop;

        compressionLevel := @parameter1: java.lang.Integer;

        nop;

        concurrent := @parameter2: boolean;

        nop;

        $r0 = this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli zopfli>;

        nop;

        $r1 = this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options options>;

        nop;

        $r2 = virtualinvoke inflatedImageData.<optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream: byte[] toByteArray()>();

        nop;

        result = virtualinvoke $r0.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Zopfli: optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer compress(optimizer.com.googlecode.pngtastic.core.processing.zopfli.Options,byte[])>($r1, $r2);

        nop;

        $r3 = new java.io.ByteArrayOutputStream;

        nop;

        $i0 = virtualinvoke result.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: int getSize()>();

        nop;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        nop;

        byteArrayOutputStream = $r3;

        nop;

        $r4 = virtualinvoke result.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: byte[] getData()>();

        nop;

        $i1 = virtualinvoke result.<optimizer.com.googlecode.pngtastic.core.processing.zopfli.Buffer: int getSize()>();

        nop;

        virtualinvoke byteArrayOutputStream.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        nop;

        $r5 = this.<optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler: optimizer.com.googlecode.pngtastic.core.Logger log>;

        nop;

        $r6 = newarray (java.lang.Object)[1];

        nop;

        $i2 = virtualinvoke byteArrayOutputStream.<java.io.ByteArrayOutputStream: int size()>();

        nop;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        nop;

        $r6[0] = $r7;

        nop;

        virtualinvoke $r5.<optimizer.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Compression strategy: zopfli, bytes=%d", $r6);

        nop;

        $r8 = virtualinvoke byteArrayOutputStream.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        nop;

        return $r8;
    }

    public java.lang.String encodeBytes(byte[])
    {
        optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler this;
        byte[] bytes;
        java.lang.String $r0;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.ZopfliCompressionHandler;

        nop;

        bytes := @parameter0: byte[];

        nop;

        $r0 = staticinvoke <optimizer.com.googlecode.pngtastic.core.processing.Base64: java.lang.String encodeBytes(byte[])>(bytes);

        nop;

        return $r0;
    }


