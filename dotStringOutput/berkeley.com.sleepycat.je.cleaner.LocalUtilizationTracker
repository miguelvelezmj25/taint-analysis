digraph <init> {
"this := @this: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker {1901024873}" -> "env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl {675166126}";
"env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl {675166126}" -> "$r0 = new java.util.IdentityHashMap {988849971}";
"$r0 = new java.util.IdentityHashMap {988849971}" -> "specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>() {784988942}";
"specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>() {784988942}" -> "specialinvoke this.<berkeley.com.sleepycat.je.cleaner.BaseLocalUtilizationTracker: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.Map)>(env, $r0) {289343707}";
"specialinvoke this.<berkeley.com.sleepycat.je.cleaner.BaseLocalUtilizationTracker: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.util.Map)>(env, $r0) {289343707}" -> "return {1117107807}";
}

digraph countObsoleteNodeInexact {
"this := @this: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker {2029760135}" -> "lsn := @parameter0: long {391274031}";
"lsn := @parameter0: long {391274031}" -> "type := @parameter1: berkeley.com.sleepycat.je.log.LogEntryType {694370303}";
"type := @parameter1: berkeley.com.sleepycat.je.log.LogEntryType {694370303}" -> "size := @parameter2: int {529770371}";
"size := @parameter2: int {529770371}" -> "db := @parameter3: berkeley.com.sleepycat.je.dbi.DatabaseImpl {1787337061}";
"db := @parameter3: berkeley.com.sleepycat.je.dbi.DatabaseImpl {1787337061}" -> "virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: void countObsolete(long,java.lang.Object,berkeley.com.sleepycat.je.log.LogEntryType,int,boolean,boolean,boolean,boolean)>(lsn, db, type, size, 1, 1, 0, 0) {1734916324}";
"virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: void countObsolete(long,java.lang.Object,berkeley.com.sleepycat.je.log.LogEntryType,int,boolean,boolean,boolean,boolean)>(lsn, db, type, size, 1, 1, 0, 0) {1734916324}" -> "return {966488778}";
}

digraph getTrackedDbs {
"this := @this: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker {309870826}" -> "$r0 = virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: java.util.Map getDatabaseMap()>() {94142290}";
"$r0 = virtualinvoke this.<berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker: java.util.Map getDatabaseMap()>() {94142290}" -> "$r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>() {1429405723}";
"$r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>() {1429405723}" -> "return $r1 {1797045168}";
}

digraph transferToUtilizationTracker {
"this := @this: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker {321856453}" -> "l1 := @parameter0: berkeley.com.sleepycat.je.cleaner.UtilizationTracker {1034733708}";
"l1 := @parameter0: berkeley.com.sleepycat.je.cleaner.UtilizationTracker {1034733708}" -> "specialinvoke this.<berkeley.com.sleepycat.je.cleaner.BaseLocalUtilizationTracker: void transferToUtilizationTracker(berkeley.com.sleepycat.je.cleaner.UtilizationTracker)>(l1) {1622861103}";
"specialinvoke this.<berkeley.com.sleepycat.je.cleaner.BaseLocalUtilizationTracker: void transferToUtilizationTracker(berkeley.com.sleepycat.je.cleaner.UtilizationTracker)>(l1) {1622861103}" -> "return {1122400518}";
}

digraph databaseKeyToDatabaseImpl {
"this := @this: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker {1997984027}" -> "databaseKey := @parameter0: java.lang.Object {813790682}";
"databaseKey := @parameter0: java.lang.Object {813790682}" -> "$r0 = (berkeley.com.sleepycat.je.dbi.DatabaseImpl) databaseKey {773785531}";
"$r0 = (berkeley.com.sleepycat.je.dbi.DatabaseImpl) databaseKey {773785531}" -> "return $r0 {353077255}";
}

digraph releaseDatabaseImpl {
"this := @this: berkeley.com.sleepycat.je.cleaner.LocalUtilizationTracker {1595373899}" -> "db := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl {584648511}";
"db := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl {584648511}" -> "return {375974702}";
}


