    public static com.sleepycat.je.log.entry.INLogEntry create(java.lang.Class)
    {
        java.lang.Class INClass;
        com.sleepycat.je.log.entry.INLogEntry $r0;

        INClass := @parameter0: java.lang.Class;

        $r0 = new com.sleepycat.je.log.entry.INLogEntry;

        specialinvoke $r0.<com.sleepycat.je.log.entry.INLogEntry: void <init>(java.lang.Class)>(INClass);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/sleepycat/je/log/entry/INLogEntry";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(java.lang.Class)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        java.lang.Class INClass;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        INClass := @parameter0: java.lang.Class;

        specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: void <init>(java.lang.Class)>(INClass);

        return;
    }

    public volatile void setLogType(com.sleepycat.je.log.LogEntryType)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.log.LogEntryType l1;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        l1 := @parameter0: com.sleepycat.je.log.LogEntryType;

        specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: void setLogType(com.sleepycat.je.log.LogEntryType)>(l1);

        return;
    }

    public volatile com.sleepycat.je.log.entry.LogEntry clone()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.log.entry.LogEntry $r0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: com.sleepycat.je.log.entry.LogEntry clone()>();

        return $r0;
    }

    public void readEntry(com.sleepycat.je.dbi.EnvironmentImpl, com.sleepycat.je.log.LogEntryHeader, java.nio.ByteBuffer)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        com.sleepycat.je.log.LogEntryHeader header;
        java.nio.ByteBuffer entryBuffer, $r0;
        int logVersion;
        boolean version6OrLater, $z0, $z1;
        java.lang.AssertionError $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        com.sleepycat.je.EnvironmentFailureException $r7;
        com.sleepycat.je.dbi.DatabaseId $r8, $r9, $r13, $r14;
        long $l0, $l1, $l2;
        com.sleepycat.je.log.Loggable $r10;
        com.sleepycat.je.tree.IN $r11, $r12;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        header := @parameter1: com.sleepycat.je.log.LogEntryHeader;

        entryBuffer := @parameter2: java.nio.ByteBuffer;

        $z0 = <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        logVersion = virtualinvoke header.<com.sleepycat.je.log.LogEntryHeader: int getVersion()>();

        if logVersion < 6 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        version6OrLater = $z1;

        if logVersion >= 2 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to read from log file with version ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(logVersion);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", which is not supported any more");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r6);

        throw $r7;

     label4:
        if version6OrLater == 0 goto label6;

        $r8 = new com.sleepycat.je.dbi.DatabaseId;

        specialinvoke $r8.<com.sleepycat.je.dbi.DatabaseId: void <init>()>();

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId> = $r8;

        $r9 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId>;

        virtualinvoke $r9.<com.sleepycat.je.dbi.DatabaseId: void readFromLog(java.nio.ByteBuffer,int)>(entryBuffer, logVersion);

        $l0 = staticinvoke <com.sleepycat.je.log.LogUtils: long readLong(java.nio.ByteBuffer,boolean)>(entryBuffer, 0);

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn> = $l0;

        if logVersion < 8 goto label5;

        $l1 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(entryBuffer);

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn> = $l1;

        goto label6;

     label5:
        this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn> = -1L;

     label6:
        $r10 = virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.log.Loggable newInstanceOfType()>();

        $r11 = (com.sleepycat.je.tree.IN) $r10;

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in> = $r11;

        $r12 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        specialinvoke this.<com.sleepycat.je.log.entry.INLogEntry: void readMainItem(com.sleepycat.je.tree.IN,java.nio.ByteBuffer,int)>($r12, entryBuffer, logVersion);

        if version6OrLater != 0 goto label7;

        $r13 = new com.sleepycat.je.dbi.DatabaseId;

        specialinvoke $r13.<com.sleepycat.je.dbi.DatabaseId: void <init>()>();

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId> = $r13;

        $r14 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId>;

        virtualinvoke $r14.<com.sleepycat.je.dbi.DatabaseId: void readFromLog(java.nio.ByteBuffer,int)>(entryBuffer, logVersion);

        $l2 = staticinvoke <com.sleepycat.je.log.LogUtils: long readLong(java.nio.ByteBuffer,boolean)>(entryBuffer, 1);

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn> = $l2;

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn> = -1L;

     label7:
        return;
    }

    public volatile java.lang.Object getMainItem()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.tree.IN $r0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN getMainItem()>();

        return $r0;
    }

    public com.sleepycat.je.tree.IN getMainItem()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        boolean $z0;
        java.nio.ByteBuffer $r0;
        java.lang.AssertionError $r1;
        com.sleepycat.je.tree.IN $r2;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $z0 = <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        return $r2;
    }

    private void readMainItem(com.sleepycat.je.tree.IN, java.nio.ByteBuffer, int)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.tree.IN in;
        java.nio.ByteBuffer entryBuffer;
        int logVersion;
        boolean $z0, $z1;
        java.lang.AssertionError $r0;
        long $l0, $l1;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        in := @parameter0: com.sleepycat.je.tree.IN;

        entryBuffer := @parameter1: java.nio.ByteBuffer;

        logVersion := @parameter2: int;

        $z0 = virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: boolean isBINDelta()>();

        if $z0 == 0 goto label3;

        $z1 = <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        if logVersion >= 9 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        virtualinvoke in.<com.sleepycat.je.tree.IN: void readFromLog(java.nio.ByteBuffer,int,boolean)>(entryBuffer, logVersion, 1);

        if logVersion != 9 goto label2;

        $l0 = staticinvoke <com.sleepycat.je.log.LogUtils: long readPackedLong(java.nio.ByteBuffer)>(entryBuffer);

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn> = $l0;

     label2:
        $l1 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn>;

        virtualinvoke in.<com.sleepycat.je.tree.IN: void setLastFullLsn(long)>($l1);

        goto label4;

     label3:
        virtualinvoke in.<com.sleepycat.je.tree.IN: void readFromLog(java.nio.ByteBuffer,int)>(entryBuffer, logVersion);

     label4:
        return;
    }

    public boolean isBINDelta()
    {
        com.sleepycat.je.log.entry.INLogEntry this;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        return 0;
    }

    public void <init>(com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.tree.IN in;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        in := @parameter0: com.sleepycat.je.tree.IN;

        specialinvoke this.<com.sleepycat.je.log.entry.INLogEntry: void <init>(com.sleepycat.je.tree.IN,boolean)>(in, 0);

        return;
    }

    void <init>(com.sleepycat.je.tree.IN, boolean)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.tree.IN in;
        boolean isBINDelta;
        com.sleepycat.je.log.LogEntryType $r1;
        com.sleepycat.je.dbi.DatabaseImpl $r2;
        com.sleepycat.je.dbi.DatabaseId $r3;
        long $l0, $l1;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        in := @parameter0: com.sleepycat.je.tree.IN;

        isBINDelta := @parameter1: boolean;

        specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: void <init>()>();

        if isBINDelta == 0 goto label1;

        $r1 = <com.sleepycat.je.log.LogEntryType: com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        goto label2;

     label1:
        $r1 = virtualinvoke in.<com.sleepycat.je.tree.IN: com.sleepycat.je.log.LogEntryType getLogType()>();

     label2:
        virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: void setLogType(com.sleepycat.je.log.LogEntryType)>($r1);

        $r2 = virtualinvoke in.<com.sleepycat.je.tree.IN: com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        $r3 = virtualinvoke $r2.<com.sleepycat.je.dbi.DatabaseImpl: com.sleepycat.je.dbi.DatabaseId getId()>();

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId> = $r3;

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in> = in;

        this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes> = null;

        $l0 = virtualinvoke in.<com.sleepycat.je.tree.IN: long getLastFullLsn()>();

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn> = $l0;

        $l1 = virtualinvoke in.<com.sleepycat.je.tree.IN: long getLastDeltaLsn()>();

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn> = $l1;

        return;
    }

    public long getPrevFullLsn()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        long $l0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $l0 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn>;

        return $l0;
    }

    public long getPrevDeltaLsn()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        long $l0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $l0 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn>;

        return $l0;
    }

    public void <init>(java.nio.ByteBuffer, long, long, com.sleepycat.je.log.LogEntryType, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        java.nio.ByteBuffer bytes;
        long lastFullLsn, lastDeltaLsn;
        com.sleepycat.je.log.LogEntryType logEntryType;
        com.sleepycat.je.tree.IN parent;
        com.sleepycat.je.dbi.DatabaseImpl $r0;
        com.sleepycat.je.dbi.DatabaseId $r1;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        bytes := @parameter0: java.nio.ByteBuffer;

        lastFullLsn := @parameter1: long;

        lastDeltaLsn := @parameter2: long;

        logEntryType := @parameter3: com.sleepycat.je.log.LogEntryType;

        parent := @parameter4: com.sleepycat.je.tree.IN;

        specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: void <init>()>();

        virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: void setLogType(com.sleepycat.je.log.LogEntryType)>(logEntryType);

        $r0 = virtualinvoke parent.<com.sleepycat.je.tree.IN: com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        $r1 = virtualinvoke $r0.<com.sleepycat.je.dbi.DatabaseImpl: com.sleepycat.je.dbi.DatabaseId getId()>();

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId> = $r1;

        this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in> = null;

        this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes> = bytes;

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn> = lastFullLsn;

        this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn> = lastDeltaLsn;

        return;
    }

    public boolean isPreSerialized()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        java.nio.ByteBuffer $r0;
        boolean $z0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile java.lang.Object getResolvedItem(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.dbi.DatabaseImpl l1;
        java.lang.Object $r0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        l1 := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $r0 = specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: java.lang.Object getResolvedItem(com.sleepycat.je.dbi.DatabaseImpl)>(l1);

        return $r0;
    }

    public volatile void postLogWork(com.sleepycat.je.log.LogEntryHeader, long, com.sleepycat.je.utilint.VLSN)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.log.LogEntryHeader l1;
        long l2;
        com.sleepycat.je.utilint.VLSN l4;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        l1 := @parameter0: com.sleepycat.je.log.LogEntryHeader;

        l2 := @parameter1: long;

        l4 := @parameter2: com.sleepycat.je.utilint.VLSN;

        specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: void postLogWork(com.sleepycat.je.log.LogEntryHeader,long,com.sleepycat.je.utilint.VLSN)>(l1, l2, l4);

        return;
    }

    public volatile boolean isImmediatelyObsolete(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.dbi.DatabaseImpl l1;
        boolean $z0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        l1 := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: boolean isImmediatelyObsolete(com.sleepycat.je.dbi.DatabaseImpl)>(l1);

        return $z0;
    }

    public volatile com.sleepycat.je.log.LogEntryType getLogType()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.log.LogEntryType $r0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = specialinvoke this.<com.sleepycat.je.log.entry.BaseEntry: com.sleepycat.je.log.LogEntryType getLogType()>();

        return $r0;
    }

    public void writeEntry(java.nio.ByteBuffer)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        java.nio.ByteBuffer destBuffer, $r1, $r2, $r3, $r5;
        int pos;
        com.sleepycat.je.dbi.DatabaseId $r0;
        long $l0, $l1;
        com.sleepycat.je.tree.IN $r7;
        boolean $z0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        destBuffer := @parameter0: java.nio.ByteBuffer;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId>;

        virtualinvoke $r0.<com.sleepycat.je.dbi.DatabaseId: void writeToLog(java.nio.ByteBuffer)>(destBuffer);

        $l0 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn>;

        staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(destBuffer, $l0);

        $l1 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn>;

        staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(destBuffer, $l1);

        $r1 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r1 == null goto label1;

        $r2 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        pos = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r3 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        virtualinvoke destBuffer.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r3);

        $r5 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(pos);

        goto label2;

     label1:
        $r7 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        $z0 = virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: boolean isBINDelta()>();

        virtualinvoke $r7.<com.sleepycat.je.tree.IN: void writeToLog(java.nio.ByteBuffer,boolean)>(destBuffer, $z0);

     label2:
        return;
    }

    public com.sleepycat.je.tree.BIN getBINWithExpiration()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        java.nio.ByteBuffer $r0, $r2, $r3, $r5, $r6;
        com.sleepycat.je.tree.BIN $r1, bin#5, $r8, bin#34, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sleepycat.je.tree.IN $r9, $r11;
        java.lang.AssertionError $r10;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label4;

        $r1 = new com.sleepycat.je.tree.BIN;

        specialinvoke $r1.<com.sleepycat.je.tree.BIN: void <init>()>();

        bin#5 = $r1;

        $r2 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        $z0 = virtualinvoke bin#5.<com.sleepycat.je.tree.BIN: boolean mayHaveExpirationValues(java.nio.ByteBuffer,int)>($r2, 14);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer mark()>();

        $r5 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        specialinvoke this.<com.sleepycat.je.log.entry.INLogEntry: void readMainItem(com.sleepycat.je.tree.IN,java.nio.ByteBuffer,int)>(bin#5, $r5, 14);

        $r6 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer reset()>();

        $z1 = virtualinvoke bin#5.<com.sleepycat.je.tree.BIN: boolean hasExpirationValues()>();

        if $z1 == 0 goto label2;

        $r8 = bin#5;

        goto label3;

     label2:
        $r8 = null;

     label3:
        return $r8;

     label4:
        $z2 = <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled>;

        if $z2 != 0 goto label5;

        $r9 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        $z3 = virtualinvoke $r9.<com.sleepycat.je.tree.IN: boolean isBIN()>();

        if $z3 != 0 goto label5;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label5:
        $r11 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        bin#34 = (com.sleepycat.je.tree.BIN) $r11;

        $z4 = virtualinvoke bin#34.<com.sleepycat.je.tree.BIN: boolean hasExpirationValues()>();

        if $z4 == 0 goto label6;

        $r12 = bin#34;

        goto label7;

     label6:
        $r12 = null;

     label7:
        return $r12;
    }

    public int getSize()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        java.nio.ByteBuffer $r0, $r1;
        int inSize#6, $i0, $i1, $i3, $i4, $i6, $i7;
        com.sleepycat.je.tree.IN $r2;
        boolean $z0;
        com.sleepycat.je.dbi.DatabaseId $r3;
        long $l2, $l5;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        inSize#6 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        goto label2;

     label1:
        $r2 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        $z0 = virtualinvoke this.<com.sleepycat.je.log.entry.INLogEntry: boolean isBINDelta()>();

        inSize#6 = virtualinvoke $r2.<com.sleepycat.je.tree.IN: int getLogSize(boolean)>($z0);

     label2:
        $r3 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId>;

        $i0 = virtualinvoke $r3.<com.sleepycat.je.dbi.DatabaseId: int getLogSize()>();

        $i1 = inSize#6 + $i0;

        $l2 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevFullLsn>;

        $i3 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedLongLogSize(long)>($l2);

        $i4 = $i1 + $i3;

        $l5 = this.<com.sleepycat.je.log.entry.INLogEntry: long prevDeltaLsn>;

        $i6 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedLongLogSize(long)>($l5);

        $i7 = $i4 + $i6;

        return $i7;
    }

    public com.sleepycat.je.dbi.DatabaseId getDbId()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.dbi.DatabaseId $r0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.dbi.DatabaseId dbId>;

        return $r0;
    }

    public long getNodeId()
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        boolean $z0;
        java.nio.ByteBuffer $r0;
        java.lang.AssertionError $r1;
        com.sleepycat.je.tree.IN $r2;
        long $l0;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        $z0 = <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        $l0 = virtualinvoke $r2.<com.sleepycat.je.tree.IN: long getNodeId()>();

        return $l0;
    }

    public com.sleepycat.je.tree.IN getIN(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.log.entry.INLogEntry this;
        com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        boolean $z0;
        java.nio.ByteBuffer $r0;
        java.lang.AssertionError $r1;
        com.sleepycat.je.tree.IN $r2;

        this := @this: com.sleepycat.je.log.entry.INLogEntry;

        dbImpl := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        $z0 = <com.sleepycat.je.log.entry.INLogEntry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = this.<com.sleepycat.je.log.entry.INLogEntry: java.nio.ByteBuffer inBytes>;

        if $r0 == null goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $r2 = this.<com.sleepycat.je.log.entry.INLogEntry: com.sleepycat.je.tree.IN in>;

        return $r2;
    }


