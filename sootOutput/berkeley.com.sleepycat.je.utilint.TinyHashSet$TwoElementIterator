    public boolean hasNext()
    {
        berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator this;
        boolean $z0, $z1, $z2;

        this := @this: berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator;

        $z0 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem1>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $z1 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem2>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.Object next()
    {
        berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator this;
        boolean $z0, $z1;
        java.lang.Object $r0, $r1;
        java.util.NoSuchElementException $r2;

        this := @this: berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator;

        $z0 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem1>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem1> = 1;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: java.lang.Object elem1>;

        return $r0;

     label1:
        $z1 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem2>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem2> = 1;

        $r1 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: java.lang.Object elem2>;

        return $r1;

     label2:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;
    }

    void <init>(berkeley.com.sleepycat.je.utilint.TinyHashSet, java.lang.Object, java.lang.Object)
    {
        berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator this;
        berkeley.com.sleepycat.je.utilint.TinyHashSet parent;
        java.lang.Object elem1, elem2;
        boolean $z0, $z1;

        this := @this: berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator;

        parent := @parameter0: berkeley.com.sleepycat.je.utilint.TinyHashSet;

        elem1 := @parameter1: java.lang.Object;

        elem2 := @parameter2: java.lang.Object;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: berkeley.com.sleepycat.je.utilint.TinyHashSet parent> = parent;

        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: java.lang.Object elem1> = elem1;

        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: java.lang.Object elem2> = elem2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(elem1);

        if elem1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem1> = $z0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(elem2);

        if elem2 != null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem2> = $z1;

        return;
    }

    public void remove()
    {
        berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator this;
        boolean $z0, $z1;
        java.lang.Object $r0, $r3;
        berkeley.com.sleepycat.je.utilint.TinyHashSet $r1, $r4;

        this := @this: berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator;

        $z0 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem2>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: java.lang.Object elem2>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: berkeley.com.sleepycat.je.utilint.TinyHashSet parent>;

        staticinvoke <berkeley.com.sleepycat.je.utilint.TinyHashSet: java.lang.Object access$002(berkeley.com.sleepycat.je.utilint.TinyHashSet,java.lang.Object)>($r1, null);

        return;

     label1:
        $z1 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: boolean returnedElem1>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        $r3 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: java.lang.Object elem1>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label2;

        $r4 = this.<berkeley.com.sleepycat.je.utilint.TinyHashSet$TwoElementIterator: berkeley.com.sleepycat.je.utilint.TinyHashSet parent>;

        staticinvoke <berkeley.com.sleepycat.je.utilint.TinyHashSet: java.lang.Object access$102(berkeley.com.sleepycat.je.utilint.TinyHashSet,java.lang.Object)>($r4, null);

        return;

     label2:
        staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: void assertState(boolean)>(0);

        return;
    }


