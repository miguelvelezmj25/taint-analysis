    public void cleanup()
    {
        weka.classifiers.trees.j48.C45ModelSelection this;

        this := @this: weka.classifiers.trees.j48.C45ModelSelection;

        this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData> = null;

        return;
    }

    public void <init>(int, weka.core.Instances, boolean, boolean)
    {
        weka.classifiers.trees.j48.C45ModelSelection this;
        int minNoObj;
        weka.core.Instances allData;
        boolean useMDLcorrection, doNotMakeSplitPointActualValue;

        this := @this: weka.classifiers.trees.j48.C45ModelSelection;

        minNoObj := @parameter0: int;

        allData := @parameter1: weka.core.Instances;

        useMDLcorrection := @parameter2: boolean;

        doNotMakeSplitPointActualValue := @parameter3: boolean;

        specialinvoke this.<weka.classifiers.trees.j48.ModelSelection: void <init>()>();

        this.<weka.classifiers.trees.j48.C45ModelSelection: int m_minNoObj> = minNoObj;

        this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData> = allData;

        this.<weka.classifiers.trees.j48.C45ModelSelection: boolean m_useMDLcorrection> = useMDLcorrection;

        this.<weka.classifiers.trees.j48.C45ModelSelection: boolean m_doNotMakeSplitPointActualValue> = doNotMakeSplitPointActualValue;

        return;
    }

    public final weka.classifiers.trees.j48.ClassifierSplitModel selectModel(weka.core.Instances)
    {
        weka.classifiers.trees.j48.C45ModelSelection this;
        weka.core.Instances data, $r3, $r5, $r9, $r12, $r22, $r23;
        weka.classifiers.trees.j48.Distribution checkDistribution, $r21, tmp$1740358318;
        java.util.Enumeration enu;
        weka.core.Attribute attribute, $r10, $r11;
        weka.classifiers.trees.j48.C45Split[] currentModel;
        double sumOfWeights, averageInfoGain#6, $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, averageInfoGain#126, minResult#128, $d13, $d14, $d15;
        java.lang.Throwable e, $r25;
        weka.classifiers.trees.j48.C45Split bestModel#2, $r7, $r8, $r13, $r14, $r16, $r17, $r18, $r19, tmp$1132159638;
        int validModels#8, $i0, $i1, $i2, $i3, $i4, $i5, i#62, $i6, $i7, $i8, $i9, $i10, i#130, $i11, $i12, $i14;
        boolean multiVal#10, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        weka.classifiers.trees.j48.NoSplit noSplitModel#17, tmp$747550427;
        java.lang.Object $r4;
        byte $b13;
        java.lang.Exception tmp$142271863;

        this := @this: weka.classifiers.trees.j48.C45ModelSelection;

        data := @parameter0: weka.core.Instances;

        bestModel#2 = null;

        averageInfoGain#6 = 0.0;

        validModels#8 = 0;

        multiVal#10 = 1;

     label01:
        tmp$1740358318 = new weka.classifiers.trees.j48.Distribution;

        specialinvoke tmp$1740358318.<weka.classifiers.trees.j48.Distribution: void <init>(weka.core.Instances)>(data);

        checkDistribution = tmp$1740358318;

        tmp$747550427 = new weka.classifiers.trees.j48.NoSplit;

        specialinvoke tmp$747550427.<weka.classifiers.trees.j48.NoSplit: void <init>(weka.classifiers.trees.j48.Distribution)>(checkDistribution);

        noSplitModel#17 = tmp$747550427;

        $d0 = virtualinvoke checkDistribution.<weka.classifiers.trees.j48.Distribution: double total()>();

        $i0 = this.<weka.classifiers.trees.j48.C45ModelSelection: int m_minNoObj>;

        $i1 = 2 * $i0;

        $d1 = (double) $i1;

        $z0 = staticinvoke <weka.core.Utils: boolean sm(double,double)>($d0, $d1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label02;

        $d2 = virtualinvoke checkDistribution.<weka.classifiers.trees.j48.Distribution: double total()>();

        $i2 = virtualinvoke checkDistribution.<weka.classifiers.trees.j48.Distribution: int maxClass()>();

        $d3 = virtualinvoke checkDistribution.<weka.classifiers.trees.j48.Distribution: double perClass(int)>($i2);

        $z1 = staticinvoke <weka.core.Utils: boolean eq(double,double)>($d2, $d3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label03;

     label02:
        return noSplitModel#17;

     label03:
        $r3 = this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r3 == null goto label06;

        enu = virtualinvoke data.<weka.core.Instances: java.util.Enumeration enumerateAttributes()>();

     label04:
        $z2 = interfaceinvoke enu.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label06;

        $r4 = interfaceinvoke enu.<java.util.Enumeration: java.lang.Object nextElement()>();

        attribute = (weka.core.Attribute) $r4;

        $z3 = virtualinvoke attribute.<weka.core.Attribute: boolean isNumeric()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label05;

        $i3 = virtualinvoke attribute.<weka.core.Attribute: int numValues()>();

        $d4 = (double) $i3;

        $r5 = this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData>;

        $i4 = virtualinvoke $r5.<weka.core.Instances: int numInstances()>();

        $d5 = (double) $i4;

        $d6 = 0.3 * $d5;

        $z4 = staticinvoke <weka.core.Utils: boolean sm(double,double)>($d4, $d6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label04;

     label05:
        multiVal#10 = 0;

        goto label06;

     label06:
        $i5 = virtualinvoke data.<weka.core.Instances: int numAttributes()>();

        currentModel = newarray (weka.classifiers.trees.j48.C45Split)[$i5];

        sumOfWeights = virtualinvoke data.<weka.core.Instances: double sumOfWeights()>();

        i#62 = 0;

     label07:
        $i6 = virtualinvoke data.<weka.core.Instances: int numAttributes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#62);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6);

        if i#62 >= $i6 goto label12;

        $i7 = virtualinvoke data.<weka.core.Instances: int classIndex()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#62);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        if i#62 == $i7 goto label10;

        tmp$1132159638 = new weka.classifiers.trees.j48.C45Split;

        $i8 = this.<weka.classifiers.trees.j48.C45ModelSelection: int m_minNoObj>;

        $z5 = this.<weka.classifiers.trees.j48.C45ModelSelection: boolean m_useMDLcorrection>;

        specialinvoke tmp$1132159638.<weka.classifiers.trees.j48.C45Split: void <init>(int,int,double,boolean)>(i#62, $i8, sumOfWeights, $z5);

        currentModel[i#62] = tmp$1132159638;

        $r7 = currentModel[i#62];

        virtualinvoke $r7.<weka.classifiers.trees.j48.C45Split: void buildClassifier(weka.core.Instances)>(data);

        $r8 = currentModel[i#62];

        $z6 = virtualinvoke $r8.<weka.classifiers.trees.j48.C45Split: boolean checkModel()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label11;

        $r9 = this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r9);

        if $r9 == null goto label09;

        $r10 = virtualinvoke data.<weka.core.Instances: weka.core.Attribute attribute(int)>(i#62);

        $z7 = virtualinvoke $r10.<weka.core.Attribute: boolean isNumeric()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 != 0 goto label08;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(multiVal#10);

        if multiVal#10 != 0 goto label08;

        $r11 = virtualinvoke data.<weka.core.Instances: weka.core.Attribute attribute(int)>(i#62);

        $i9 = virtualinvoke $r11.<weka.core.Attribute: int numValues()>();

        $d7 = (double) $i9;

        $r12 = this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData>;

        $i10 = virtualinvoke $r12.<weka.core.Instances: int numInstances()>();

        $d8 = (double) $i10;

        $d9 = 0.3 * $d8;

        $z8 = staticinvoke <weka.core.Utils: boolean sm(double,double)>($d7, $d9);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label11;

     label08:
        $r13 = currentModel[i#62];

        $d10 = virtualinvoke $r13.<weka.classifiers.trees.j48.C45Split: double infoGain()>();

        averageInfoGain#6 = averageInfoGain#6 + $d10;

        validModels#8 = validModels#8 + 1;

        goto label11;

     label09:
        $r14 = currentModel[i#62];

        $d11 = virtualinvoke $r14.<weka.classifiers.trees.j48.C45Split: double infoGain()>();

        averageInfoGain#6 = averageInfoGain#6 + $d11;

        validModels#8 = validModels#8 + 1;

        goto label11;

     label10:
        currentModel[i#62] = null;

     label11:
        i#62 = i#62 + 1;

        goto label07;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(validModels#8);

        if validModels#8 != 0 goto label14;

     label13:
        return noSplitModel#17;

     label14:
        $d12 = (double) validModels#8;

        averageInfoGain#126 = averageInfoGain#6 / $d12;

        minResult#128 = 0.0;

        i#130 = 0;

     label15:
        $i11 = virtualinvoke data.<weka.core.Instances: int numAttributes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#130);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11);

        if i#130 >= $i11 goto label17;

        $i12 = virtualinvoke data.<weka.core.Instances: int classIndex()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#130);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12);

        if i#130 == $i12 goto label16;

        $r16 = currentModel[i#130];

        $z9 = virtualinvoke $r16.<weka.classifiers.trees.j48.C45Split: boolean checkModel()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label16;

        $r17 = currentModel[i#130];

        $d13 = virtualinvoke $r17.<weka.classifiers.trees.j48.C45Split: double infoGain()>();

        $d14 = averageInfoGain#126 - 0.001;

        $b13 = $d13 cmpl $d14;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b13);

        if $b13 < 0 goto label16;

        $r18 = currentModel[i#130];

        $d15 = virtualinvoke $r18.<weka.classifiers.trees.j48.C45Split: double gainRatio()>();

        $z10 = staticinvoke <weka.core.Utils: boolean gr(double,double)>($d15, minResult#128);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label16;

        bestModel#2 = currentModel[i#130];

        $r19 = currentModel[i#130];

        minResult#128 = virtualinvoke $r19.<weka.classifiers.trees.j48.C45Split: double gainRatio()>();

     label16:
        i#130 = i#130 + 1;

        goto label15;

     label17:
        $z11 = staticinvoke <weka.core.Utils: boolean eq(double,double)>(minResult#128, 0.0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        if $z11 == 0 goto label19;

     label18:
        return noSplitModel#17;

     label19:
        $r21 = virtualinvoke bestModel#2.<weka.classifiers.trees.j48.C45Split: weka.classifiers.trees.j48.Distribution distribution()>();

        $i14 = virtualinvoke bestModel#2.<weka.classifiers.trees.j48.C45Split: int attIndex()>();

        virtualinvoke $r21.<weka.classifiers.trees.j48.Distribution: void addInstWithUnknown(weka.core.Instances,int)>(data, $i14);

        $r22 = this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r22);

        if $r22 == null goto label20;

        $z12 = this.<weka.classifiers.trees.j48.C45ModelSelection: boolean m_doNotMakeSplitPointActualValue>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z12);

        if $z12 != 0 goto label20;

        $r23 = this.<weka.classifiers.trees.j48.C45ModelSelection: weka.core.Instances m_allData>;

        virtualinvoke bestModel#2.<weka.classifiers.trees.j48.C45Split: void setSplitPoint(weka.core.Instances)>($r23);

     label20:
        return bestModel#2;

     label21:
        $r25 := @caughtexception;

        e = $r25;

        tmp$142271863 = (java.lang.Exception) e;

        virtualinvoke tmp$142271863.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label13 with label21;
        catch java.lang.Exception from label14 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public final weka.classifiers.trees.j48.ClassifierSplitModel selectModel(weka.core.Instances, weka.core.Instances)
    {
        weka.classifiers.trees.j48.C45ModelSelection this;
        weka.core.Instances train, test;
        weka.classifiers.trees.j48.ClassifierSplitModel $r0;

        this := @this: weka.classifiers.trees.j48.C45ModelSelection;

        train := @parameter0: weka.core.Instances;

        test := @parameter1: weka.core.Instances;

        $r0 = virtualinvoke this.<weka.classifiers.trees.j48.C45ModelSelection: weka.classifiers.trees.j48.ClassifierSplitModel selectModel(weka.core.Instances)>(train);

        return $r0;
    }


