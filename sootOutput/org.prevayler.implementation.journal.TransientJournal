    public void <init>()
    {
        org.prevayler.implementation.journal.TransientJournal this;
        java.util.ArrayList $r0;

        this := @this: org.prevayler.implementation.journal.TransientJournal;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal> = $r0;

        this.<org.prevayler.implementation.journal.TransientJournal: boolean _initialTransactionInitialized> = 0;

        return;
    }

    public void append(org.prevayler.implementation.TransactionGuide)
    {
        org.prevayler.implementation.journal.TransientJournal this;
        org.prevayler.implementation.TransactionGuide guide;
        java.lang.Throwable l2, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r0;
        long $l0, $l2, $l3;
        java.util.List $r1, $r2;
        int $i1;
        org.prevayler.implementation.TransactionTimestamp $r3, $r4;

        this := @this: org.prevayler.implementation.journal.TransientJournal;

        guide := @parameter0: org.prevayler.implementation.TransactionGuide;

        $z0 = this.<org.prevayler.implementation.journal.TransientJournal: boolean _initialTransactionInitialized>;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Journal.update() has to be called at least once before Journal.journal().");

        throw $r0;

     label1:
        virtualinvoke guide.<org.prevayler.implementation.TransactionGuide: void startTurn()>();

     label2:
        $l0 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $r1 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        virtualinvoke guide.<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>($l3);

        $r2 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $r3 = virtualinvoke guide.<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp timestamp()>();

        $r4 = virtualinvoke $r3.<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        virtualinvoke guide.<org.prevayler.implementation.TransactionGuide: void endTurn()>();

        goto label5;

     label4:
        $r5 := @caughtexception;

        l2 = $r5;

        virtualinvoke guide.<org.prevayler.implementation.TransactionGuide: void endTurn()>();

        throw l2;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public synchronized long nextTransaction()
    {
        org.prevayler.implementation.journal.TransientJournal this;
        boolean $z0;
        java.lang.IllegalStateException $r0;
        long $l0, $l2, $l3;
        java.util.List $r1;
        int $i1;

        this := @this: org.prevayler.implementation.journal.TransientJournal;

        $z0 = this.<org.prevayler.implementation.journal.TransientJournal: boolean _initialTransactionInitialized>;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("update() must be called at least once");

        throw $r0;

     label1:
        $l0 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $r1 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        return $l3;
    }

    public synchronized void update(org.prevayler.implementation.publishing.TransactionSubscriber, long) throws java.io.IOException
    {
        org.prevayler.implementation.journal.TransientJournal this;
        org.prevayler.implementation.publishing.TransactionSubscriber subscriber;
        long initialTransaction, recoveringTransaction, $l0, $l2, $l3, $l4, $l6, $l8, $l9, $l10, $l12, $l13, $l14, $l16;
        org.prevayler.implementation.TransactionTimestamp entry;
        boolean $z0;
        byte $b1, $b15;
        java.io.IOException $r0, $r9, $r21;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r15, $r16, $r22, $r23, $r24, $r25, $r26;
        java.lang.String $r7, $r17, $r27;
        int i#32, $i5, $i7, $i11;
        java.util.List $r8, $r14, $r18, $r19;
        java.lang.Object $r20;

        this := @this: org.prevayler.implementation.journal.TransientJournal;

        subscriber := @parameter0: org.prevayler.implementation.publishing.TransactionSubscriber;

        initialTransaction := @parameter1: long;

        $z0 = this.<org.prevayler.implementation.journal.TransientJournal: boolean _initialTransactionInitialized>;

        if $z0 != 0 goto label1;

        this.<org.prevayler.implementation.journal.TransientJournal: boolean _initialTransactionInitialized> = 1;

        this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction> = initialTransaction;

        return;

     label1:
        $l0 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $b1 = initialTransaction cmp $l0;

        if $b1 >= 0 goto label2;

        $r0 = new java.io.IOException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to recover transaction ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(initialTransaction);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". The oldest recoverable transaction is ");

        $l2 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label2:
        $l3 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $l4 = initialTransaction - $l3;

        i#32 = (int) $l4;

        $r8 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $i5 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i#32 <= $i5 goto label3;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The transaction journal has not yet reached transaction ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(initialTransaction);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". The last logged transaction was ");

        $l6 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $r14 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $i7 = interfaceinvoke $r14.<java.util.List: int size()>();

        $l8 = (long) $i7;

        $l9 = $l6 + $l8;

        $l10 = $l9 - 1L;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label3:
        $r18 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $i11 = interfaceinvoke $r18.<java.util.List: int size()>();

        if i#32 == $i11 goto label5;

        $r19 = this.<org.prevayler.implementation.journal.TransientJournal: java.util.List journal>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i#32);

        entry = (org.prevayler.implementation.TransactionTimestamp) $r20;

        $l12 = this.<org.prevayler.implementation.journal.TransientJournal: long _initialTransaction>;

        $l13 = (long) i#32;

        recoveringTransaction = $l12 + $l13;

        $l14 = virtualinvoke entry.<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>();

        $b15 = $l14 cmp recoveringTransaction;

        if $b15 == 0 goto label4;

        $r21 = new java.io.IOException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(recoveringTransaction);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $l16 = virtualinvoke entry.<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label4:
        interfaceinvoke subscriber.<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>(entry);

        i#32 = i#32 + 1;

        goto label3;

     label5:
        return;
    }


