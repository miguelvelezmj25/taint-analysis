    static void <clinit>()
    {
        weka.core.logging.Logger$Level $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        weka.core.logging.Logger$Level[] $r8;

        $r0 = new weka.core.logging.Logger$Level;

        specialinvoke $r0.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("ALL", 0, 0);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level ALL> = $r0;

        $r1 = new weka.core.logging.Logger$Level;

        specialinvoke $r1.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("FINEST", 1, 1);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level FINEST> = $r1;

        $r2 = new weka.core.logging.Logger$Level;

        specialinvoke $r2.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("FINER", 2, 2);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level FINER> = $r2;

        $r3 = new weka.core.logging.Logger$Level;

        specialinvoke $r3.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("FINE", 3, 3);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level FINE> = $r3;

        $r4 = new weka.core.logging.Logger$Level;

        specialinvoke $r4.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("INFO", 4, 4);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level INFO> = $r4;

        $r5 = new weka.core.logging.Logger$Level;

        specialinvoke $r5.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("WARNING", 5, 5);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level WARNING> = $r5;

        $r6 = new weka.core.logging.Logger$Level;

        specialinvoke $r6.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("SEVERE", 6, 6);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level SEVERE> = $r6;

        $r7 = new weka.core.logging.Logger$Level;

        specialinvoke $r7.<weka.core.logging.Logger$Level: void <init>(java.lang.String,int,int)>("OFF", 7, 10);

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level OFF> = $r7;

        $r8 = newarray (weka.core.logging.Logger$Level)[8];

        $r9 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level ALL>;

        $r8[0] = $r9;

        $r10 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level FINEST>;

        $r8[1] = $r10;

        $r11 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level FINER>;

        $r8[2] = $r11;

        $r12 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level FINE>;

        $r8[3] = $r12;

        $r13 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level INFO>;

        $r8[4] = $r13;

        $r14 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level WARNING>;

        $r8[5] = $r14;

        $r15 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level SEVERE>;

        $r8[6] = $r15;

        $r16 = <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level OFF>;

        $r8[7] = $r16;

        <weka.core.logging.Logger$Level: weka.core.logging.Logger$Level[] $VALUES> = $r8;

        return;
    }

    public int getOrder()
    {
        weka.core.logging.Logger$Level this;
        int $i0;

        this := @this: weka.core.logging.Logger$Level;

        $i0 = this.<weka.core.logging.Logger$Level: int m_Order>;

        return $i0;
    }

    private void <init>(java.lang.String, int, int)
    {
        weka.core.logging.Logger$Level this;
        java.lang.String l1;
        int l2, order;

        this := @this: weka.core.logging.Logger$Level;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        order := @parameter2: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<weka.core.logging.Logger$Level: int m_Order> = order;

        return;
    }


