    static void <clinit>()
    {
        berkeley.com.sleepycat.je.utilint.StatDefinition $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r28, $r30, $r31, $r33, $r35, $r37, $r39;
        berkeley.com.sleepycat.je.utilint.StatDefinition$StatType $r12, $r20, $r25, $r27, $r29, $r32, $r34, $r36, $r38, $r40;

        $r0 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r0.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nEvictionRuns", "Number of eviction runs, an indicator of the eviction activity level.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_EVICTION_RUNS> = $r0;

        $r1 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r1.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesTargeted", "Number of nodes selected as eviction targets. An eviction target may actually be evicted, or skipped, or put back to the LRU, potentially after partial eviction or BIN-delta mutation is done on it.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_TARGETED> = $r1;

        $r2 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r2.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesEvicted", "Number of target nodes evicted from the cache. This includes dirty nodes, root nodes, etc.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_EVICTED> = $r2;

        $r3 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r3.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nRootNodesEvicted", "Number of database root nodes evicted.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_ROOT_NODES_EVICTED> = $r3;

        $r4 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r4.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nDirtyNodesEvicted", "Number of dirty target nodes logged and evicted. Can be used to determine how much logging and its associated costs (cleaning, etc) are being caused by eviction");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_DIRTY_NODES_EVICTED> = $r4;

        $r5 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r5.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nLNsEvicted", "Number of LNs evicted as a result of BIN stripping.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_LNS_EVICTED> = $r5;

        $r6 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r6.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesStripped", "Number of target BINs whose child LNs were evicted (stripped). After a BIN is stripped, it is put back to the LRU.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_STRIPPED> = $r6;

        $r7 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r7.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesMutated", "Number of target BINs mutated to BIN-deltas. After a BIN is mutated, it is put back to the LRU.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_MUTATED> = $r7;

        $r8 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r8.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesPutBack", "Number of nodes back into the LRU without any action taken on them. For example, a target BIN will immediately be put back if it has cursors on it, or is pinned, or is marked \"hot\", or none of it LNs are evictable");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_PUT_BACK> = $r8;

        $r9 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r9.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesMovedToDirtyLRU", "Number of nodes moved from the mixed/priority-1 to the dirty/priority-2 LRU.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_MOVED_TO_PRI2_LRU> = $r9;

        $r10 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r10.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nNodesSkipped", "Number of nodes removed from the LRU without any action taken on them. For example, a node will be skipped if it has already been evicted by another thread.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_NODES_SKIPPED> = $r10;

        $r11 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r12 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r11.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nSharedCacheEnvironments", "Number of Environments sharing the cache.", $r12);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition EVICTOR_SHARED_CACHE_ENVS> = $r11;

        $r13 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r13.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nLNsFetch", "Number of LNs (data records) requested by btree operations. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LN_FETCH> = $r13;

        $r14 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r14.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nUpperINsFetch", "Number of Upper INs (non-bottom internal nodes) requested by btree operations. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition UPPER_IN_FETCH> = $r14;

        $r15 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r15.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nBINsFetch", "Number of BINs (bottom internal nodes) requested by btree operations. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition BIN_FETCH> = $r15;

        $r16 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r16.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nLNsFetchMiss", "Number of LNs (data records) requested by btree operations that were not in cache. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LN_FETCH_MISS> = $r16;

        $r17 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r17.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nUpperINsFetchMiss", "Number of Upper INs (non-bottom internal nodes) requested by btree operations that were not in cache. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition UPPER_IN_FETCH_MISS> = $r17;

        $r18 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r18.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nBINsFetchMiss", "Number of full BINs (bottom internal nodes) and BIN-deltas fetched to satisfy btree operations. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition BIN_FETCH_MISS> = $r18;

        $r19 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r20 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r19.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nBINsFetchMissRatio", "The BIN fetch miss ratio (nBINsFetchMiss / nBINsFetch)", $r20);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition BIN_FETCH_MISS_RATIO> = $r19;

        $r21 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r21.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nBINDeltasFetchMiss", "Number of BIN-deltas (partial BINs) fetched to satisfy btree operations. Can be used to gauge cache hit/miss ratios.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition BIN_DELTA_FETCH_MISS> = $r21;

        $r22 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r22.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nBinDeltaBlindOps", "The number of operations performed blindly in BIN deltas");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition BIN_DELTA_BLIND_OPS> = $r22;

        $r23 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r23.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nFullBINsMiss", "Number of times a BIN-delta had to be mutated to a full BIN (and as a result a full BIN had to be read in from the log).");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition FULL_BIN_MISS> = $r23;

        $r24 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r25 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r24.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nCachedUpperINs", "Number of upper INs (non-bottom internal nodes) in cache. The cache holds INs and BINS, so this indicates the proportion used by each type of node. When used on shared environment caches, will only be visible via StatConfig.setFast(false)", $r25);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CACHED_UPPER_INS> = $r24;

        $r26 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r27 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r26.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nCachedBINs", "Number of BINs (bottom internal nodes) in cache. The cache holds INs and BINS, so this indicates the proportion used by each type of node. When used on shared environment caches, will only be visible via StatConfig.setFast(false)", $r27);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CACHED_BINS> = $r26;

        $r28 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r29 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r28.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nCachedBINDeltas", "Number of BIN-deltas (partial BINs) in cache. This is a subset of the nCachedBINs value.", $r29);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CACHED_BIN_DELTAS> = $r28;

        $r30 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        specialinvoke $r30.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String)>("nThreadUnavailable", "Number of eviction tasks that were submitted to the background evictor pool, but were refused because all eviction threads were busy. The user may want to change the size of the evictor pool through the je.evictor.*threads properties.");

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition THREAD_UNAVAILABLE> = $r30;

        $r31 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r32 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r31.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nINSparseTarget", "Number of INs that use a compact sparse array representation to point to child nodes in the cache.", $r32);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CACHED_IN_SPARSE_TARGET> = $r31;

        $r33 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r34 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r33.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nINNoTarget", "Number of INs that use a compact representation when none of its child nodes arein the cache.", $r34);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CACHED_IN_NO_TARGET> = $r33;

        $r35 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r36 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r35.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("nINCompactKey", "Number of INs that use a compact key representation to minimize the key object representation overhead.", $r36);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition CACHED_IN_COMPACT_KEY> = $r35;

        $r37 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r38 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r37.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("lruMixedSize", "Number of INs in the mixed/priority-1 LRU ", $r38);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition PRI1_LRU_SIZE> = $r37;

        $r39 = new berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r40 = <berkeley.com.sleepycat.je.utilint.StatDefinition$StatType: berkeley.com.sleepycat.je.utilint.StatDefinition$StatType CUMULATIVE>;

        specialinvoke $r39.<berkeley.com.sleepycat.je.utilint.StatDefinition: void <init>(java.lang.String,java.lang.String,berkeley.com.sleepycat.je.utilint.StatDefinition$StatType)>("lruDirtySize", "Number of INs in the dirty/priority-2 LRU ", $r40);

        <berkeley.com.sleepycat.je.evictor.EvictorStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition PRI2_LRU_SIZE> = $r39;

        return;
    }


