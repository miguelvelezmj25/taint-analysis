    public void count(counter.com.googlecode.pngtastic.core.PngImage) throws java.io.IOException
    {
        counter.com.googlecode.pngtastic.core.PngColorCounter this;
        counter.com.googlecode.pngtastic.core.PngImage image;
        long start, width, height, elapsed, $l3, $l4, $l11;
        java.util.Iterator itChunks;
        counter.com.googlecode.pngtastic.core.PngChunk chunk;
        counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        int scanlineLength, $i1, $i2, $i5, $i7, $i8, $i9, $i10, $i12;
        java.util.List originalScanlines, colors, results, $r4, $r6;
        counter.com.googlecode.pngtastic.core.Logger $r0, $r2;
        java.lang.Object[] $r1, $r3;
        short $s0, $s6;
        float $f0, $f1;
        double $d0, $d1;
        counter.com.googlecode.pngtastic.core.processing.PngInterlaceHandler $r5;
        counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult $r7;
        java.lang.String $r8;

        this := @this: counter.com.googlecode.pngtastic.core.PngColorCounter;

        image := @parameter0: counter.com.googlecode.pngtastic.core.PngImage;

        $r0 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.Logger log>;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<counter.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("=== COUNTING ===", $r1);

        $s0 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: short getInterlace()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s0);

        if $s0 != 1 goto label1;

        $i1 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: int getSampleBitCount()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 >= 8 goto label1;

        $r2 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.Logger log>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r2.<counter.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("not supported", $r3);

        return;

     label1:
        start = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: java.util.List getChunks()>();

        itChunks = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        chunk = virtualinvoke this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.PngChunk processHeadChunks(counter.com.googlecode.pngtastic.core.PngImage,boolean,java.util.Iterator)>(null, 0, itChunks);

        inflatedImageData = virtualinvoke this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream getInflatedImageData(counter.com.googlecode.pngtastic.core.PngChunk,java.util.Iterator)>(chunk, itChunks);

        width = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: long getWidth()>();

        height = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: long getHeight()>();

        $i2 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: int getSampleBitCount()>();

        $l3 = (long) $i2;

        $l4 = width * $l3;

        $f0 = (float) $l4;

        $f1 = $f0 / 8.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i5 = (int) $d1;

        scanlineLength = $i5 + 1;

        $s6 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: short getInterlace()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6);

        if $s6 != 1 goto label2;

        $r5 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.processing.PngInterlaceHandler pngInterlaceHandler>;

        $i7 = (int) width;

        $i8 = (int) height;

        $i9 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: int getSampleBitCount()>();

        $r6 = interfaceinvoke $r5.<counter.com.googlecode.pngtastic.core.processing.PngInterlaceHandler: java.util.List deInterlace(int,int,int,counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream)>($i7, $i8, $i9, inflatedImageData);

        goto label3;

     label2:
        $i10 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: int getSampleBitCount()>();

        $r6 = virtualinvoke this.<counter.com.googlecode.pngtastic.core.PngColorCounter: java.util.List getScanlines(counter.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream,int,int,long)>(inflatedImageData, $i10, scanlineLength, height);

     label3:
        originalScanlines = $r6;

        colors = specialinvoke this.<counter.com.googlecode.pngtastic.core.PngColorCounter: java.util.List getColors(counter.com.googlecode.pngtastic.core.PngImage,java.util.List,long)>(image, originalScanlines, start);

        results = specialinvoke this.<counter.com.googlecode.pngtastic.core.PngColorCounter: java.util.List getMergedColors(counter.com.googlecode.pngtastic.core.PngImage,java.util.List,long)>(image, colors, start);

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        elapsed = $l11 - start;

        $r7 = new counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult;

        $r8 = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: java.lang.String getFileName()>();

        $i12 = interfaceinvoke colors.<java.util.List: int size()>();

        specialinvoke $r7.<counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult: void <init>(java.lang.String,long,long,int,java.util.List,long)>($r8, width, height, $i12, results, elapsed);

        this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult colorCounterResult> = $r7;

        return;
    }

    public counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult getResult()
    {
        counter.com.googlecode.pngtastic.core.PngColorCounter this;
        counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult $r0;

        this := @this: counter.com.googlecode.pngtastic.core.PngColorCounter;

        $r0 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.PngColorCounter$ColorCounterResult colorCounterResult>;

        return $r0;
    }

    private java.util.List getColors(counter.com.googlecode.pngtastic.core.PngImage, java.util.List, long) throws java.io.IOException
    {
        counter.com.googlecode.pngtastic.core.PngColorCounter this;
        counter.com.googlecode.pngtastic.core.PngImage original;
        java.util.List rows;
        long start, $l1, $l3, $l4, $l5, $l7, $l29, $l30, $l31;
        java.util.LinkedHashMap colors, $r0;
        counter.com.googlecode.pngtastic.core.PngImageType imageType;
        int sampleSize, sampleCount, offset, minFreq, y#9, $i8, $i9, $i10, x#56, $i12, $i13, $i14, $i15, $i16, $i17, $i18, r#115, g#118, b#121, r#133, g#136, b#139, $i20, $i21, r#167, g#170, b#173, a#176, r#188, g#191, b#194, a#197, $i23, $i24, $i25, $i26, $i27, $i32, $i33, $i34;
        java.util.Iterator l9, it, l10;
        byte[] row;
        java.io.ByteArrayInputStream ins, $r8;
        java.io.DataInputStream dis, $r9;
        counter.com.googlecode.pngtastic.core.PngPixel pixel, pixel, $r14, $r21, pixel#130, $r22, $r25, $r28, pixel#185, $r29, $r32;
        java.lang.Integer count, $r18, count#152, $r26, count#214, $r33, $r38, $r42, $r45, $r50;
        java.util.Map$Entry entry;
        java.util.ArrayList results, $r46;
        short $s0, r#71, g#78, b#85, $s19, $s22;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1, $r15, $r23, $r30, $r40, $r41, $r48, $r49;
        byte $b2, $b6, $b28;
        counter.com.googlecode.pngtastic.core.PngException $r2, $r20;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        int[] $r10;
        counter.com.googlecode.pngtastic.core.PngChunk $r11, $r12, $r13;
        java.lang.IllegalArgumentException $r35;
        counter.com.googlecode.pngtastic.core.Logger $r36, $r43;
        java.lang.Object[] $r37, $r44;
        double $d0, $d1, $d2, $d3;
        java.util.Set $r39, $r47;

        this := @this: counter.com.googlecode.pngtastic.core.PngColorCounter;

        original := @parameter0: counter.com.googlecode.pngtastic.core.PngImage;

        rows := @parameter1: java.util.List;

        start := @parameter2: long;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        colors = $r0;

        $s0 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: short getColorType()>();

        imageType = staticinvoke <counter.com.googlecode.pngtastic.core.PngImageType: counter.com.googlecode.pngtastic.core.PngImageType forColorType(int)>($s0);

        sampleSize = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: int getSampleBitCount()>();

        y#9 = 0;

        l9 = interfaceinvoke rows.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label21;

        $r1 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        row = (byte[]) $r1;

        $l1 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout>;

        $b2 = $l1 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b2);

        if $b2 <= 0 goto label02;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l3 - start;

        $l5 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout>;

        $b6 = $l4 cmp $l5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        if $b6 <= 0 goto label02;

        $r2 = new counter.com.googlecode.pngtastic.core.PngException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reached ");

        $l7 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms timeout");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<counter.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label02:
        $i8 = lengthof row;

        $i9 = $i8 - 1;

        $i10 = $i9 * 8;

        sampleCount = $i10 / sampleSize;

        $r8 = new java.io.ByteArrayInputStream;

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>(row);

        ins = $r8;

        $r9 = new java.io.DataInputStream;

        specialinvoke $r9.<java.io.DataInputStream: void <init>(java.io.InputStream)>(ins);

        dis = $r9;

        virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        x#56 = 0;

     label03:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#56);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(sampleCount);

        if x#56 >= sampleCount goto label20;

        $r10 = <counter.com.googlecode.pngtastic.core.PngColorCounter$1: int[] $SwitchMap$counter$com$googlecode$pngtastic$core$PngImageType>;

        $i12 = virtualinvoke imageType.<counter.com.googlecode.pngtastic.core.PngImageType: int ordinal()>();

        $i13 = $r10[$i12];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        tableswitch($i13)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label13;
            default: goto label18;
        };

     label04:
        $i14 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        offset = $i14 * 3;

        $r11 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: counter.com.googlecode.pngtastic.core.PngChunk getPalette()>();

        r#71 = virtualinvoke $r11.<counter.com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>(offset);

        $r12 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: counter.com.googlecode.pngtastic.core.PngChunk getPalette()>();

        $i15 = offset + 1;

        g#78 = virtualinvoke $r12.<counter.com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>($i15);

        $r13 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: counter.com.googlecode.pngtastic.core.PngChunk getPalette()>();

        $i16 = offset + 2;

        b#85 = virtualinvoke $r13.<counter.com.googlecode.pngtastic.core.PngChunk: short getUnsignedByte(int)>($i16);

        $r14 = new counter.com.googlecode.pngtastic.core.PngPixel;

        specialinvoke $r14.<counter.com.googlecode.pngtastic.core.PngPixel: void <init>(int,int,int,int,int,boolean)>(x#56, y#9, r#71, g#78, b#85, 1);

        pixel = $r14;

        $r15 = interfaceinvoke colors.<java.util.Map: java.lang.Object get(java.lang.Object)>(pixel);

        count = (java.lang.Integer) $r15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count);

        if count != null goto label05;

        $i17 = 1;

        goto label06;

     label05:
        $i18 = virtualinvoke count.<java.lang.Integer: int intValue()>();

        $i17 = $i18 + 1;

     label06:
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        interfaceinvoke colors.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(pixel, $r18);

        goto label19;

     label07:
        $r20 = new counter.com.googlecode.pngtastic.core.PngException;

        specialinvoke $r20.<counter.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>("Greyscale images not supported");

        throw $r20;

     label08:
        $s19 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: short getBitDepth()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s19);

        if $s19 != 8 goto label09;

        r#115 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        g#118 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        b#121 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        $r21 = new counter.com.googlecode.pngtastic.core.PngPixel;

        specialinvoke $r21.<counter.com.googlecode.pngtastic.core.PngPixel: void <init>(int,int,int,int,int,boolean)>(x#56, y#9, r#115, g#118, b#121, 1);

        pixel#130 = $r21;

        goto label10;

     label09:
        r#133 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        g#136 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        b#139 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        $r22 = new counter.com.googlecode.pngtastic.core.PngPixel;

        specialinvoke $r22.<counter.com.googlecode.pngtastic.core.PngPixel: void <init>(int,int,int,int,int,boolean)>(x#56, y#9, r#133, g#136, b#139, 0);

        pixel#130 = $r22;

     label10:
        $r23 = interfaceinvoke colors.<java.util.Map: java.lang.Object get(java.lang.Object)>(pixel#130);

        count#152 = (java.lang.Integer) $r23;

        $r25 = pixel#130;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#152);

        if count#152 != null goto label11;

        $i20 = 1;

        goto label12;

     label11:
        $i21 = virtualinvoke count#152.<java.lang.Integer: int intValue()>();

        $i20 = $i21 + 1;

     label12:
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        interfaceinvoke colors.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26);

        goto label19;

     label13:
        $s22 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: short getBitDepth()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s22);

        if $s22 != 8 goto label14;

        r#167 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        g#170 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        b#173 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        a#176 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedByte()>();

        $r28 = new counter.com.googlecode.pngtastic.core.PngPixel;

        specialinvoke $r28.<counter.com.googlecode.pngtastic.core.PngPixel: void <init>(int,int,int,int,int,int)>(x#56, y#9, r#167, g#170, b#173, a#176);

        pixel#185 = $r28;

        goto label15;

     label14:
        r#188 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        g#191 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        b#194 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        a#197 = virtualinvoke dis.<java.io.DataInputStream: int readUnsignedShort()>();

        $r29 = new counter.com.googlecode.pngtastic.core.PngPixel;

        specialinvoke $r29.<counter.com.googlecode.pngtastic.core.PngPixel: void <init>(int,int,int,int,int,int)>(x#56, y#9, r#188, g#191, b#194, a#197);

        pixel#185 = $r29;

     label15:
        $i23 = virtualinvoke pixel#185.<counter.com.googlecode.pngtastic.core.PngPixel: int getAlpha()>();

        $i24 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: int minAlpha>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i23);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i24);

        if $i23 <= $i24 goto label19;

        $r30 = interfaceinvoke colors.<java.util.Map: java.lang.Object get(java.lang.Object)>(pixel#185);

        count#214 = (java.lang.Integer) $r30;

        $r32 = pixel#185;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(count#214);

        if count#214 != null goto label16;

        $i25 = 1;

        goto label17;

     label16:
        $i26 = virtualinvoke count#214.<java.lang.Integer: int intValue()>();

        $i25 = $i26 + 1;

     label17:
        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        interfaceinvoke colors.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

        goto label19;

     label18:
        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r35;

     label19:
        x#56 = x#56 + 1;

        goto label03;

     label20:
        y#9 = y#9 + 1;

        goto label01;

     label21:
        $r36 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.Logger log>;

        $r37 = newarray (java.lang.Object)[1];

        $i27 = interfaceinvoke colors.<java.util.Map: int size()>();

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        $r37[0] = $r38;

        virtualinvoke $r36.<counter.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Full color count=%d", $r37);

        $d0 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: double freqThreshold>;

        $b28 = $d0 cmpl 0.0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b28);

        if $b28 <= 0 goto label24;

        $l29 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: long getWidth()>();

        $l30 = virtualinvoke original.<counter.com.googlecode.pngtastic.core.PngImage: long getHeight()>();

        $l31 = $l29 * $l30;

        $d1 = (double) $l31;

        $d2 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: double freqThreshold>;

        $d3 = $d1 * $d2;

        minFreq = (int) $d3;

        $r39 = interfaceinvoke colors.<java.util.Map: java.util.Set entrySet()>();

        it = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();

     label22:
        $z1 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label24;

        $r40 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r40;

        $r41 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r42 = (java.lang.Integer) $r41;

        $i32 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i32);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(minFreq);

        if $i32 >= minFreq goto label23;

        interfaceinvoke it.<java.util.Iterator: void remove()>();

     label23:
        goto label22;

     label24:
        $r43 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.Logger log>;

        $r44 = newarray (java.lang.Object)[1];

        $i33 = interfaceinvoke colors.<java.util.Map: int size()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i33);

        $r44[0] = $r45;

        virtualinvoke $r43.<counter.com.googlecode.pngtastic.core.Logger: void debug(java.lang.String,java.lang.Object[])>("Filtered color count=%d", $r44);

        $r46 = new java.util.ArrayList;

        $r47 = interfaceinvoke colors.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r46.<java.util.ArrayList: void <init>(java.util.Collection)>($r47);

        results = $r46;

        l10 = interfaceinvoke results.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z2 = interfaceinvoke l10.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label26;

        $r48 = interfaceinvoke l10.<java.util.Iterator: java.lang.Object next()>();

        pixel = (counter.com.googlecode.pngtastic.core.PngPixel) $r48;

        $r49 = interfaceinvoke colors.<java.util.Map: java.lang.Object get(java.lang.Object)>(pixel);

        $r50 = (java.lang.Integer) $r49;

        $i34 = virtualinvoke $r50.<java.lang.Integer: int intValue()>();

        virtualinvoke pixel.<counter.com.googlecode.pngtastic.core.PngPixel: void setFreq(int)>($i34);

        goto label25;

     label26:
        return results;
    }

    private java.util.List getMergedColors(counter.com.googlecode.pngtastic.core.PngImage, java.util.List, long)
    {
        counter.com.googlecode.pngtastic.core.PngColorCounter this;
        counter.com.googlecode.pngtastic.core.PngImage image;
        java.util.List colors;
        long start, $l0, $l2, $l3, $l4, $l6;
        short bits;
        java.util.ArrayList copy, results, $r0, $r9;
        java.util.Iterator l7, it, l8;
        counter.com.googlecode.pngtastic.core.PngPixel pa, pb, p;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r1, $r8, $r10;
        byte $b1, $b5, $b7;
        counter.com.googlecode.pngtastic.core.PngException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        double $d0, $d1;
        int $i8, $i9;

        this := @this: counter.com.googlecode.pngtastic.core.PngColorCounter;

        image := @parameter0: counter.com.googlecode.pngtastic.core.PngImage;

        colors := @parameter1: java.util.List;

        start := @parameter2: long;

        bits = virtualinvoke image.<counter.com.googlecode.pngtastic.core.PngImage: short getBitDepth()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(colors);

        copy = $r0;

        l7 = interfaceinvoke colors.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label08;

        $r1 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        pa = (counter.com.googlecode.pngtastic.core.PngPixel) $r1;

        $l0 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout>;

        $b1 = $l0 cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1);

        if $b1 <= 0 goto label02;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - start;

        $l4 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout>;

        $b5 = $l3 cmp $l4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        if $b5 <= 0 goto label02;

        $r2 = new counter.com.googlecode.pngtastic.core.PngException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reached ");

        $l6 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms timeout");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<counter.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label02:
        $z1 = virtualinvoke pa.<counter.com.googlecode.pngtastic.core.PngPixel: boolean isDuplicate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label07;

        it = interfaceinvoke copy.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label07;

        $r8 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        pb = (counter.com.googlecode.pngtastic.core.PngPixel) $r8;

        $z3 = virtualinvoke pb.<counter.com.googlecode.pngtastic.core.PngPixel: boolean isDuplicate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label04;

        interfaceinvoke it.<java.util.Iterator: void remove()>();

        goto label06;

     label04:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pa);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pb);

        if pa == pb goto label06;

        $d0 = virtualinvoke pa.<counter.com.googlecode.pngtastic.core.PngPixel: double rgbaDistance(counter.com.googlecode.pngtastic.core.PngPixel,int)>(pb, bits);

        $d1 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: double distThreshold>;

        $b7 = $d0 cmpg $d1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b7);

        if $b7 >= 0 goto label06;

        $i8 = virtualinvoke pa.<counter.com.googlecode.pngtastic.core.PngPixel: int getFreq()>();

        $i9 = virtualinvoke pb.<counter.com.googlecode.pngtastic.core.PngPixel: int getFreq()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        if $i8 <= $i9 goto label05;

        virtualinvoke pb.<counter.com.googlecode.pngtastic.core.PngPixel: void setDuplicate(boolean)>(1);

        interfaceinvoke it.<java.util.Iterator: void remove()>();

        goto label06;

     label05:
        virtualinvoke pa.<counter.com.googlecode.pngtastic.core.PngPixel: void setDuplicate(boolean)>(1);

     label06:
        goto label03;

     label07:
        goto label01;

     label08:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        results = $r9;

        l8 = interfaceinvoke colors.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label11;

        $r10 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        p = (counter.com.googlecode.pngtastic.core.PngPixel) $r10;

        $z5 = virtualinvoke p.<counter.com.googlecode.pngtastic.core.PngPixel: boolean isDuplicate()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label10;

        interfaceinvoke results.<java.util.List: boolean add(java.lang.Object)>(p);

     label10:
        goto label09;

     label11:
        return results;
    }

    public void <init>(java.lang.String, double, double, int, long)
    {
        counter.com.googlecode.pngtastic.core.PngColorCounter this;
        java.lang.String logLevel;
        double distThreshold, freqThreshold;
        int minAlpha;
        long timeout;
        counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler $r0;
        counter.com.googlecode.pngtastic.core.Logger $r1;
        counter.com.googlecode.pngtastic.core.processing.PngFilterHandler $r2;

        this := @this: counter.com.googlecode.pngtastic.core.PngColorCounter;

        logLevel := @parameter0: java.lang.String;

        distThreshold := @parameter1: double;

        freqThreshold := @parameter2: double;

        minAlpha := @parameter3: int;

        timeout := @parameter4: long;

        specialinvoke this.<counter.com.googlecode.pngtastic.core.PngProcessor: void <init>(java.lang.String)>(logLevel);

        this.<counter.com.googlecode.pngtastic.core.PngColorCounter: double distThreshold> = distThreshold;

        this.<counter.com.googlecode.pngtastic.core.PngColorCounter: double freqThreshold> = freqThreshold;

        this.<counter.com.googlecode.pngtastic.core.PngColorCounter: int minAlpha> = minAlpha;

        this.<counter.com.googlecode.pngtastic.core.PngColorCounter: long timeout> = timeout;

        $r0 = new counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler;

        $r1 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.Logger log>;

        $r2 = this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.processing.PngFilterHandler pngFilterHandler>;

        specialinvoke $r0.<counter.com.googlecode.pngtastic.core.processing.PngtasticInterlaceHandler: void <init>(counter.com.googlecode.pngtastic.core.Logger,counter.com.googlecode.pngtastic.core.processing.PngFilterHandler)>($r1, $r2);

        this.<counter.com.googlecode.pngtastic.core.PngColorCounter: counter.com.googlecode.pngtastic.core.processing.PngInterlaceHandler pngInterlaceHandler> = $r0;

        return;
    }


