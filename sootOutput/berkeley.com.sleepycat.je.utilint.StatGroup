    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/utilint/StatGroup";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.utilint.StatGroup: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this;
        java.lang.String groupName, groupDescription;
        java.util.HashMap $r0;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        groupName := @parameter0: java.lang.String;

        groupDescription := @parameter1: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        specialinvoke this.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String,java.util.Map)>(groupName, groupDescription, $r0);

        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.util.Map)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this;
        java.lang.String groupName, groupDescription;
        java.util.Map values, $r0;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        groupName := @parameter0: java.lang.String;

        groupDescription := @parameter1: java.lang.String;

        values := @parameter2: java.util.Map;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String groupName> = groupName;

        this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String groupDescription> = groupDescription;

        $r0 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>(values);

        this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats> = $r0;

        return;
    }

    void register(berkeley.com.sleepycat.je.utilint.Stat)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this;
        berkeley.com.sleepycat.je.utilint.Stat oneStat, prev;
        java.util.Map $r0;
        berkeley.com.sleepycat.je.utilint.StatDefinition $r1, $r8;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.AssertionError $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r10;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        oneStat := @parameter0: berkeley.com.sleepycat.je.utilint.Stat;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r1 = virtualinvoke oneStat.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.StatDefinition getDefinition()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, oneStat);

        prev = (berkeley.com.sleepycat.je.utilint.Stat) $r2;

        $z0 = <berkeley.com.sleepycat.je.utilint.StatGroup: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(prev);

        if prev == null goto label1;

        $r3 = new java.lang.AssertionError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prev = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(prev);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oneStat=");

        $r8 = virtualinvoke oneStat.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.StatDefinition getDefinition()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r3;

     label1:
        return;
    }

    public berkeley.com.sleepycat.je.utilint.StatGroup computeInterval(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this, baseGroup, $r12;
        java.util.HashMap intervalValues, $r0;
        java.util.Iterator l3;
        java.util.Map$Entry entry;
        berkeley.com.sleepycat.je.utilint.StatDefinition definition;
        berkeley.com.sleepycat.je.utilint.Stat statValue, baseStat, $r8, $r10;
        java.util.Map $r1, $r6;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r5, $r7;
        java.lang.String $r13, $r14;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        baseGroup := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        intervalValues = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        l3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        definition = (berkeley.com.sleepycat.je.utilint.StatDefinition) $r4;

        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        statValue = (berkeley.com.sleepycat.je.utilint.Stat) $r5;

        $r6 = baseGroup.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(definition);

        baseStat = (berkeley.com.sleepycat.je.utilint.Stat) $r7;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(baseStat);

        if baseStat != null goto label2;

        $r8 = virtualinvoke statValue.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.Stat copy()>();

        interfaceinvoke intervalValues.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(definition, $r8);

        goto label3;

     label2:
        $r10 = virtualinvoke statValue.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.Stat computeInterval(berkeley.com.sleepycat.je.utilint.Stat)>(baseStat);

        interfaceinvoke intervalValues.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(definition, $r10);

     label3:
        goto label1;

     label4:
        $r12 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        $r13 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String groupName>;

        $r14 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String groupDescription>;

        specialinvoke $r12.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r13, $r14, intervalValues);

        return $r12;
    }

    public berkeley.com.sleepycat.je.utilint.StatGroup cloneGroup(boolean)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this, $r12;
        boolean clear, $z0;
        java.util.HashMap copyValues, $r0;
        java.util.Map l3, $r1, $r2;
        java.util.Iterator l4;
        berkeley.com.sleepycat.je.utilint.Stat s, $r6, $r9;
        java.lang.Throwable l6, $r11;
        java.util.Collection $r3;
        java.lang.Object $r4;
        berkeley.com.sleepycat.je.utilint.StatDefinition $r5, $r8;
        java.lang.String $r13, $r14;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        clear := @parameter0: boolean;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        copyValues = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        l3 = $r1;

        entermonitor $r1;

     label01:
        $r2 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        l4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label05;

        $r4 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        s = (berkeley.com.sleepycat.je.utilint.Stat) $r4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(clear);

        if clear == 0 goto label03;

        $r5 = virtualinvoke s.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.StatDefinition getDefinition()>();

        $r6 = virtualinvoke s.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.Stat copyAndClear()>();

        interfaceinvoke copyValues.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label04;

     label03:
        $r8 = virtualinvoke s.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.StatDefinition getDefinition()>();

        $r9 = virtualinvoke s.<berkeley.com.sleepycat.je.utilint.Stat: berkeley.com.sleepycat.je.utilint.Stat copy()>();

        interfaceinvoke copyValues.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

     label04:
        goto label02;

     label05:
        exitmonitor l3;

     label06:
        goto label10;

     label07:
        $r11 := @caughtexception;

     label08:
        l6 = $r11;

        exitmonitor l3;

     label09:
        throw l6;

     label10:
        $r12 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        $r13 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String groupName>;

        $r14 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.lang.String groupDescription>;

        specialinvoke $r12.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r13, $r14, copyValues);

        return $r12;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void addAll(berkeley.com.sleepycat.je.utilint.StatGroup)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this, other;
        java.util.Iterator l2;
        java.util.Map$Entry entry;
        berkeley.com.sleepycat.je.utilint.StatDefinition definition;
        java.util.Map l6, $r0, $r4, $r5, $r7;
        berkeley.com.sleepycat.je.utilint.Stat localStat, additionalValue;
        java.lang.Throwable l7, $r10;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2, $r3, $r6, $r8, $r11;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        other := @parameter0: berkeley.com.sleepycat.je.utilint.StatGroup;

        $r0 = other.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        l2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label10;

        $r2 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $r2;

        $r3 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        definition = (berkeley.com.sleepycat.je.utilint.StatDefinition) $r3;

        $r4 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        l6 = $r4;

        entermonitor $r4;

     label02:
        $r5 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(definition);

        localStat = (berkeley.com.sleepycat.je.utilint.Stat) $r6;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(localStat);

        if localStat != null goto label04;

        $r7 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r8 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(definition, $r8);

        exitmonitor l6;

     label03:
        goto label01;

     label04:
        exitmonitor l6;

     label05:
        goto label09;

     label06:
        $r10 := @caughtexception;

     label07:
        l7 = $r10;

        exitmonitor l6;

     label08:
        throw l7;

     label09:
        $r11 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        additionalValue = (berkeley.com.sleepycat.je.utilint.Stat) $r11;

        virtualinvoke localStat.<berkeley.com.sleepycat.je.utilint.Stat: void add(berkeley.com.sleepycat.je.utilint.Stat)>(additionalValue);

        goto label01;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void clear()
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this;
        java.util.Map l1, $r0, $r1;
        java.util.Iterator l2;
        berkeley.com.sleepycat.je.utilint.Stat s;
        java.lang.Throwable l4, $r4;
        java.util.Collection $r2;
        boolean $z0;
        java.lang.Object $r3;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        l2 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        s = (berkeley.com.sleepycat.je.utilint.Stat) $r3;

        virtualinvoke s.<berkeley.com.sleepycat.je.utilint.Stat: void clear()>();

        goto label2;

     label3:
        exitmonitor l1;

     label4:
        goto label8;

     label5:
        $r4 := @caughtexception;

     label6:
        l4 = $r4;

        exitmonitor l1;

     label7:
        throw l4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public berkeley.com.sleepycat.je.TransactionStats$Active[] getActiveTxnArray(berkeley.com.sleepycat.je.utilint.StatDefinition)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this;
        berkeley.com.sleepycat.je.utilint.StatDefinition definition;
        berkeley.com.sleepycat.je.utilint.ActiveTxnArrayStat s;
        java.util.Map $r0;
        java.lang.Object $r1;
        berkeley.com.sleepycat.je.TransactionStats$Active[] $r2;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        definition := @parameter0: berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(definition);

        s = (berkeley.com.sleepycat.je.utilint.ActiveTxnArrayStat) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(s);

        if s != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke s.<berkeley.com.sleepycat.je.utilint.ActiveTxnArrayStat: berkeley.com.sleepycat.je.TransactionStats$Active[] get()>();

        return $r2;
    }

    public int getInt(berkeley.com.sleepycat.je.utilint.StatDefinition)
    {
        berkeley.com.sleepycat.je.utilint.StatGroup this;
        berkeley.com.sleepycat.je.utilint.StatDefinition definition;
        berkeley.com.sleepycat.je.utilint.Stat s;
        java.util.Map $r0;
        java.lang.Object $r1;
        int retval#8;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.utilint.IntStat $r2;
        java.lang.Integer $r3, $r5;
        berkeley.com.sleepycat.je.utilint.AtomicIntStat $r4;
        java.lang.AssertionError $r6;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.Class $r9;
        java.lang.String $r10, $r12;

        this := @this: berkeley.com.sleepycat.je.utilint.StatGroup;

        definition := @parameter0: berkeley.com.sleepycat.je.utilint.StatDefinition;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.StatGroup: java.util.Map stats>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(definition);

        s = (berkeley.com.sleepycat.je.utilint.Stat) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(s);

        if s != null goto label1;

        retval#8 = 0;

        goto label5;

     label1:
        $z0 = s instanceof berkeley.com.sleepycat.je.utilint.IntStat;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r2 = (berkeley.com.sleepycat.je.utilint.IntStat) s;

        $r3 = virtualinvoke $r2.<berkeley.com.sleepycat.je.utilint.IntStat: java.lang.Integer get()>();

        retval#8 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        goto label5;

     label2:
        $z1 = s instanceof berkeley.com.sleepycat.je.utilint.AtomicIntStat;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label3;

        $r4 = (berkeley.com.sleepycat.je.utilint.AtomicIntStat) s;

        $r5 = virtualinvoke $r4.<berkeley.com.sleepycat.je.utilint.AtomicIntStat: java.lang.Integer get()>();

        retval#8 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        goto label5;

     label3:
        $z2 = <berkeley.com.sleepycat.je.utilint.StatGroup: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label4;

        $r6 = new java.lang.AssertionError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal error calling getInt with unexpected stat type: ");

        $r9 = virtualinvoke s.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r6;

     label4:
        retval#8 = 0;

     label5:
        return retval#8;
    }


