    public static java.lang.String fromUTF8(byte[])
    {
        byte[] bytes;
        java.io.UnsupportedEncodingException e, $r1;
        java.lang.String $r0;
        java.lang.RuntimeException $r2;

        bytes := @parameter0: byte[];

     label1:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>(bytes, "UTF-8");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e);

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0, $r1;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <com.sleepycat.utilint.StringUtils: java.nio.charset.Charset ASCII> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.sleepycat.utilint.StringUtils: java.nio.charset.Charset UTF8> = $r1;

        return;
    }

    public static byte[] toUTF8(java.lang.String)
    {
        java.lang.String str;
        java.io.UnsupportedEncodingException e, $r1;
        byte[] $r0;
        java.lang.RuntimeException $r2;

        str := @parameter0: java.lang.String;

     label1:
        $r0 = virtualinvoke str.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        e = $r1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(e);

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }


