digraph writeToLog {
"bf := @parameter0: byte[] {972102645}" -> "buffer := @parameter1: java.nio.ByteBuffer {840163169}";
"buffer := @parameter1: java.nio.ByteBuffer {840163169}" -> "staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writeByteArray(java.nio.ByteBuffer,byte[])>(buffer, bf) {1907171382}";
"staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writeByteArray(java.nio.ByteBuffer,byte[])>(buffer, bf) {1907171382}" -> "return {1690952724}";
}

digraph <clinit> {
"$r0 = class \"berkeley/com/sleepycat/je/tree/BINDeltaBloomFilter\" {1578292459}" -> "$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {1704355066}";
"$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() {1704355066}" -> "if $z0 != 0 goto $z1 = 0 {1764077541}";
"if $z0 != 0 goto $z1 = 0 {1764077541}" -> "$z1 = 1 {1187985997}";
"if $z0 != 0 goto $z1 = 0 {1764077541}" -> "$z1 = 0 {1481973611}";
"$z1 = 1 {1187985997}" -> "goto [?= <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1] {246549491}";
"goto [?= <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1] {246549491}" -> "<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1 {483121411}";
"$z1 = 0 {1481973611}" -> "<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1 {483121411}";
"<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> = $z1 {483121411}" -> "return {602510725}";
}

digraph add {
"bf := @parameter0: byte[] {1107936532}" -> "key := @parameter1: byte[] {1192663352}";
"key := @parameter1: byte[] {1192663352}" -> "hc := @parameter2: berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {846582152}";
"hc := @parameter2: berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {846582152}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {1333739878}";
"staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {1333739878}" -> "l3 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {332112358}";
"l3 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {332112358}" -> "l4 = lengthof l3 {2118874324}";
"l4 = lengthof l3 {2118874324}" -> "l5#8 = 0 {1510136614}";
"l5#8 = 0 {1510136614}" -> "if l5#8 >= l4 goto return {1407418516}";
"if l5#8 >= l4 goto return {1407418516}" -> "idx = l3[l5#8] {130288470}";
"if l5#8 >= l4 goto return {1407418516}" -> "return {1155166332}";
"idx = l3[l5#8] {130288470}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: void setBit(byte[],int)>(bf, idx) {1386278873}";
"staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: void setBit(byte[],int)>(bf, idx) {1386278873}" -> "l5#8 = l5#8 + 1 {1973010528}";
"l5#8 = l5#8 + 1 {1973010528}" -> "goto [?= (branch)] {1519920284}";
"goto [?= (branch)] {1519920284}" -> "if l5#8 >= l4 goto return {1407418516}";
}

digraph getByteSize {
"numKeys := @parameter0: int {1545602518}" -> "$z0 = <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {2057614352}";
"$z0 = <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {2057614352}" -> "if $z0 != 0 goto nbits = numKeys * 8 {414750411}";
"if $z0 != 0 goto nbits = numKeys * 8 {414750411}" -> "if numKeys > 0 goto nbits = numKeys * 8 {960094582}";
"if $z0 != 0 goto nbits = numKeys * 8 {414750411}" -> "nbits = numKeys * 8 {82437048}";
"if numKeys > 0 goto nbits = numKeys * 8 {960094582}" -> "$r0 = new java.lang.AssertionError {1717749365}";
"if numKeys > 0 goto nbits = numKeys * 8 {960094582}" -> "nbits = numKeys * 8 {82437048}";
"$r0 = new java.lang.AssertionError {1717749365}" -> "specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1509864019}";
"specialinvoke $r0.<java.lang.AssertionError: void <init>()>() {1509864019}" -> "throw $r0 {694126199}";
"nbits = numKeys * 8 {82437048}" -> "$i0 = nbits + 7 {1263358359}";
"$i0 = nbits + 7 {1263358359}" -> "$i1 = $i0 / 8 {686725822}";
"$i1 = $i0 / 8 {686725822}" -> "return $i1 {1995794804}";
}

digraph setBit {
"bf := @parameter0: byte[] {866627167}" -> "idx := @parameter1: int {1317118529}";
"idx := @parameter1: int {1317118529}" -> "$i0 = idx / 8 {498925932}";
"$i0 = idx / 8 {498925932}" -> "$b1 = bf[$i0] {818514109}";
"$b1 = bf[$i0] {818514109}" -> "$i2 = idx % 8 {1357197195}";
"$i2 = idx % 8 {1357197195}" -> "$i3 = 1 << $i2 {117548774}";
"$i3 = 1 << $i2 {117548774}" -> "$i4 = $b1 | $i3 {737288719}";
"$i4 = $b1 | $i3 {737288719}" -> "$b5 = (byte) $i4 {1254473965}";
"$b5 = (byte) $i4 {1254473965}" -> "bf[$i0] = $b5 {858072905}";
"bf[$i0] = $b5 {858072905}" -> "return {966361437}";
}

digraph hash {
"bf := @parameter0: byte[] {1099836139}" -> "key := @parameter1: byte[] {1672771078}";
"key := @parameter1: byte[] {1672771078}" -> "hc := @parameter2: berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {278667220}";
"hc := @parameter2: berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {278667220}" -> "$z0 = <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {50370622}";
"$z0 = <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean $assertionsDisabled> {50370622}" -> "if $z0 != 0 goto $r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {251320101}";
"if $z0 != 0 goto $r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {251320101}" -> "$r0 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {467251880}";
"if $z0 != 0 goto $r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {251320101}" -> "$r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {270541964}";
"$r0 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {467251880}" -> "$i0 = lengthof $r0 {480188549}";
"$i0 = lengthof $r0 {480188549}" -> "if $i0 == 3 goto $r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {739522901}";
"if $i0 == 3 goto $r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {739522901}" -> "$r1 = new java.lang.AssertionError {1210795874}";
"if $i0 == 3 goto $r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {739522901}" -> "$r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {270541964}";
"$r1 = new java.lang.AssertionError {1210795874}" -> "specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {657625700}";
"specialinvoke $r1.<java.lang.AssertionError: void <init>()>() {657625700}" -> "throw $r1 {719440198}";
"$r2 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {270541964}" -> "$l1 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: long initFNVvalue> {842432000}";
"$l1 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: long initFNVvalue> {842432000}" -> "$l2 = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(key, $l1) {10270173}";
"$l2 = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(key, $l1) {10270173}" -> "virtualinvoke $r2.<java.util.Random: void setSeed(long)>($l2) {1817300866}";
"virtualinvoke $r2.<java.util.Random: void setSeed(long)>($l2) {1817300866}" -> "$i3 = lengthof bf {1465539651}";
"$i3 = lengthof bf {1465539651}" -> "numBits = $i3 * 8 {1823261289}";
"numBits = $i3 * 8 {1823261289}" -> "if numBits > 1024 goto $r7 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {288715942}";
"if numBits > 1024 goto $r7 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {288715942}" -> "$r3 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {931818532}";
"if numBits > 1024 goto $r7 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {288715942}" -> "$r7 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {471879255}";
"$r3 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {931818532}" -> "hash#23 = virtualinvoke $r3.<java.util.Random: int nextInt()>() {342364650}";
"hash#23 = virtualinvoke $r3.<java.util.Random: int nextInt()>() {342364650}" -> "$r4 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1124582220}";
"$r4 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1124582220}" -> "$i4 = hash#23 & 1023 {1822342271}";
"$i4 = hash#23 & 1023 {1822342271}" -> "$i5 = $i4 % numBits {1897869698}";
"$i5 = $i4 % numBits {1897869698}" -> "$r4[0] = $i5 {1230082721}";
"$r4[0] = $i5 {1230082721}" -> "hash#35 = hash#23 >> 10 {1984574950}";
"hash#35 = hash#23 >> 10 {1984574950}" -> "$r5 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {909712274}";
"$r5 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {909712274}" -> "$i6 = hash#35 & 1023 {902200873}";
"$i6 = hash#35 & 1023 {902200873}" -> "$i7 = $i6 % numBits {99482163}";
"$i7 = $i6 % numBits {99482163}" -> "$r5[1] = $i7 {643382420}";
"$r5[1] = $i7 {643382420}" -> "hash#47 = hash#35 >> 10 {1479904149}";
"hash#47 = hash#35 >> 10 {1479904149}" -> "$r6 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1809393819}";
"$r6 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1809393819}" -> "$i8 = hash#47 & 1023 {1045814743}";
"$i8 = hash#47 & 1023 {1045814743}" -> "$i9 = $i8 % numBits {551733593}";
"$i9 = $i8 % numBits {551733593}" -> "$r6[2] = $i9 {1767376207}";
"$r6[2] = $i9 {1767376207}" -> "goto [?= return] {2046023382}";
"goto [?= return] {2046023382}" -> "return {971996247}";
"$r7 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {471879255}" -> "$r8 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {254309327}";
"$r8 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {254309327}" -> "$i10 = virtualinvoke $r8.<java.util.Random: int nextInt()>() {300205707}";
"$i10 = virtualinvoke $r8.<java.util.Random: int nextInt()>() {300205707}" -> "$l11 = (long) $i10 {2120741388}";
"$l11 = (long) $i10 {2120741388}" -> "$l12 = $l11 & 4294967295L {470148727}";
"$l12 = $l11 & 4294967295L {470148727}" -> "$l13 = (long) numBits {2062362274}";
"$l13 = (long) numBits {2062362274}" -> "$l14 = $l12 % $l13 {1146744508}";
"$l14 = $l12 % $l13 {1146744508}" -> "$i15 = (int) $l14 {2002558494}";
"$i15 = (int) $l14 {2002558494}" -> "$r7[0] = $i15 {908949588}";
"$r7[0] = $i15 {908949588}" -> "$r9 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {776054299}";
"$r9 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {776054299}" -> "$r10 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1908114212}";
"$r10 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1908114212}" -> "$i16 = virtualinvoke $r10.<java.util.Random: int nextInt()>() {1391039094}";
"$i16 = virtualinvoke $r10.<java.util.Random: int nextInt()>() {1391039094}" -> "$l17 = (long) $i16 {483656433}";
"$l17 = (long) $i16 {483656433}" -> "$l18 = $l17 & 4294967295L {865698415}";
"$l18 = $l17 & 4294967295L {865698415}" -> "$l19 = (long) numBits {285376668}";
"$l19 = (long) numBits {285376668}" -> "$l20 = $l18 % $l19 {1002423638}";
"$l20 = $l18 % $l19 {1002423638}" -> "$i21 = (int) $l20 {1145742004}";
"$i21 = (int) $l20 {1145742004}" -> "$r9[1] = $i21 {127281657}";
"$r9[1] = $i21 {127281657}" -> "$r11 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1204141974}";
"$r11 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {1204141974}" -> "$r12 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1210468621}";
"$r12 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: java.util.Random rng> {1210468621}" -> "$i22 = virtualinvoke $r12.<java.util.Random: int nextInt()>() {586507920}";
"$i22 = virtualinvoke $r12.<java.util.Random: int nextInt()>() {586507920}" -> "$l23 = (long) $i22 {723617068}";
"$l23 = (long) $i22 {723617068}" -> "$l24 = $l23 & 4294967295L {391591453}";
"$l24 = $l23 & 4294967295L {391591453}" -> "$l25 = (long) numBits {959507851}";
"$l25 = (long) numBits {959507851}" -> "$l26 = $l24 % $l25 {1327575304}";
"$l26 = $l24 % $l25 {1327575304}" -> "$i27 = (int) $l26 {1634205999}";
"$i27 = (int) $l26 {1634205999}" -> "$r11[2] = $i27 {126715288}";
"$r11[2] = $i27 {126715288}" -> "return {971996247}";
}

digraph hashFNV {
"key := @parameter0: byte[] {704389114}" -> "initValue := @parameter1: long {1773083871}";
"initValue := @parameter1: long {1773083871}" -> "hash#2 = initValue {1846322700}";
"hash#2 = initValue {1846322700}" -> "l5 = key {783914653}";
"l5 = key {783914653}" -> "l6 = lengthof l5 {720945617}";
"l6 = lengthof l5 {720945617}" -> "l7#7 = 0 {661143681}";
"l7#7 = 0 {661143681}" -> "if l7#7 >= l6 goto return hash#2 {2123729392}";
"if l7#7 >= l6 goto return hash#2 {2123729392}" -> "b = l5[l7#7] {777505909}";
"if l7#7 >= l6 goto return hash#2 {2123729392}" -> "return hash#2 {682216853}";
"b = l5[l7#7] {777505909}" -> "$l0 = hash#2 * 16777619L {2124099688}";
"$l0 = hash#2 * 16777619L {2124099688}" -> "hash#18 = $l0 & -1L {376349797}";
"hash#18 = $l0 & -1L {376349797}" -> "$l1 = (long) b {1010140169}";
"$l1 = (long) b {1010140169}" -> "hash#2 = hash#18 ^ $l1 {1619043195}";
"hash#2 = hash#18 ^ $l1 {1619043195}" -> "l7#7 = l7#7 + 1 {1482622446}";
"l7#7 = l7#7 + 1 {1482622446}" -> "goto [?= (branch)] {1213908768}";
"goto [?= (branch)] {1213908768}" -> "if l7#7 >= l6 goto return hash#2 {2123729392}";
}

digraph access$000 {
"x0 := @parameter0: byte[] {538386261}" -> "x1 := @parameter1: long {1284913807}";
"x1 := @parameter1: long {1284913807}" -> "$l0 = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(x0, x1) {1523029586}";
"$l0 = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: long hashFNV(byte[],long)>(x0, x1) {1523029586}" -> "return $l0 {794397492}";
}

digraph getLogSize {
"numKeys := @parameter0: int {1181347550}" -> "nbytes = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: int getByteSize(int)>(numKeys) {143792957}";
"nbytes = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: int getByteSize(int)>(numKeys) {143792957}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(nbytes) {792089089}";
"$i0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>(nbytes) {792089089}" -> "$i1 = $i0 + nbytes {1789856580}";
"$i1 = $i0 + nbytes {1789856580}" -> "return $i1 {1997859402}";
}

digraph getLogSize {
"bf := @parameter0: byte[] {1137228280}" -> "$i0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getByteArrayLogSize(byte[])>(bf) {1464653037}";
"$i0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getByteArrayLogSize(byte[])>(bf) {1464653037}" -> "return $i0 {1364045957}";
}

digraph readFromLog {
"buffer := @parameter0: java.nio.ByteBuffer {1752760798}" -> "entryVersion := @parameter1: int {1670610382}";
"entryVersion := @parameter1: int {1670610382}" -> "$r0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: byte[] readByteArray(java.nio.ByteBuffer,boolean)>(buffer, 0) {1006886851}";
"$r0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: byte[] readByteArray(java.nio.ByteBuffer,boolean)>(buffer, 0) {1006886851}" -> "return $r0 {2077527575}";
}

digraph getMemorySize {
"bf := @parameter0: byte[] {1287967155}" -> "$i0 = lengthof bf {1009438142}";
"$i0 = lengthof bf {1009438142}" -> "$i1 = staticinvoke <berkeley.com.sleepycat.je.dbi.MemoryBudget: int byteArraySize(int)>($i0) {1443482305}";
"$i1 = staticinvoke <berkeley.com.sleepycat.je.dbi.MemoryBudget: int byteArraySize(int)>($i0) {1443482305}" -> "return $i1 {1841148895}";
}

digraph contains {
"bf := @parameter0: byte[] {9015716}" -> "key := @parameter1: byte[] {1801542941}";
"key := @parameter1: byte[] {1801542941}" -> "$r0 = new berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {190714172}";
"$r0 = new berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext {190714172}" -> "specialinvoke $r0.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: void <init>()>() {1884628536}";
"specialinvoke $r0.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: void <init>()>() {1884628536}" -> "hc = $r0 {273527440}";
"hc = $r0 {273527440}" -> "staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {1511688893}";
"staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: void hash(byte[],byte[],berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext)>(bf, key, hc) {1511688893}" -> "l3 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {763740071}";
"l3 = hc.<berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter$HashContext: int[] hashes> {763740071}" -> "l4 = lengthof l3 {2095635989}";
"l4 = lengthof l3 {2095635989}" -> "l5#10 = 0 {1513961417}";
"l5#10 = 0 {1513961417}" -> "if l5#10 >= l4 goto return 1 {1198611542}";
"if l5#10 >= l4 goto return 1 {1198611542}" -> "idx = l3[l5#10] {1521329701}";
"if l5#10 >= l4 goto return 1 {1198611542}" -> "return 1 {278394907}";
"idx = l3[l5#10] {1521329701}" -> "$z0 = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean getBit(byte[],int)>(bf, idx) {316252578}";
"$z0 = staticinvoke <berkeley.com.sleepycat.je.tree.BINDeltaBloomFilter: boolean getBit(byte[],int)>(bf, idx) {316252578}" -> "if $z0 != 0 goto l5#10 = l5#10 + 1 {636662098}";
"if $z0 != 0 goto l5#10 = l5#10 + 1 {636662098}" -> "return 0 {566736718}";
"if $z0 != 0 goto l5#10 = l5#10 + 1 {636662098}" -> "l5#10 = l5#10 + 1 {2127349349}";
"l5#10 = l5#10 + 1 {2127349349}" -> "goto [?= (branch)] {1317310671}";
"goto [?= (branch)] {1317310671}" -> "if l5#10 >= l4 goto return 1 {1198611542}";
}

digraph getBit {
"bf := @parameter0: byte[] {1802650938}" -> "idx := @parameter1: int {416303247}";
"idx := @parameter1: int {416303247}" -> "$i0 = idx / 8 {15218137}";
"$i0 = idx / 8 {15218137}" -> "$b1 = bf[$i0] {1277003262}";
"$b1 = bf[$i0] {1277003262}" -> "$i2 = idx % 8 {1029072920}";
"$i2 = idx % 8 {1029072920}" -> "$i3 = 1 << $i2 {1581032390}";
"$i3 = 1 << $i2 {1581032390}" -> "$i4 = $b1 & $i3 {1102122142}";
"$i4 = $b1 & $i3 {1102122142}" -> "if $i4 == 0 goto $z0 = 0 {1814328671}";
"if $i4 == 0 goto $z0 = 0 {1814328671}" -> "$z0 = 1 {1648150123}";
"if $i4 == 0 goto $z0 = 0 {1814328671}" -> "$z0 = 0 {272193855}";
"$z0 = 1 {1648150123}" -> "goto [?= return $z0] {1495628665}";
"goto [?= return $z0] {1495628665}" -> "return $z0 {1610107114}";
"$z0 = 0 {272193855}" -> "return $z0 {1610107114}";
}


