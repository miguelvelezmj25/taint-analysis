    public void <init>(int, boolean, int, int, java.lang.String, java.lang.String, boolean, int, java.util.Map, java.util.concurrent.ExecutorService)
    {
        kanzi.app.BlockCompressor this;
        int verbose, blockSize, level, jobs, $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean force, checksum, $z0, $z1, $z2, $z4, $z5;
        java.lang.String entropy, transform, tranformAndCodec, k, $r4, $r6, strTransf#33, strCodec#37, $r8, $r12, $r26;
        java.util.Map map;
        java.util.concurrent.ExecutorService threadPool, $r15, $r17;
        java.lang.Boolean bForce, bChecksum;
        java.lang.String[] tokens;
        java.lang.Integer iBlockSize;
        kanzi.io.ByteFunctionFactory bff, $r10;
        kanzi.app.InfoPrinter$Type $r0;
        java.io.PrintStream $r1;
        java.util.Iterator l17;
        java.lang.Object $r3, $r5, $r21;
        short $s3;
        java.util.ArrayList $r18;
        kanzi.app.InfoPrinter $r19;
        java.util.Set $r20;
        java.lang.StringBuilder $r22, $r23, $r24, $r25;

        nop;

        this := @this: kanzi.app.BlockCompressor;

        nop;

        verbose := @parameter0: int;

        nop;

        force := @parameter1: boolean;

        nop;

        blockSize := @parameter2: int;

        nop;

        level := @parameter3: int;

        nop;

        entropy := @parameter4: java.lang.String;

        nop;

        transform := @parameter5: java.lang.String;

        nop;

        checksum := @parameter6: boolean;

        nop;

        jobs := @parameter7: int;

        nop;

        map := @parameter8: java.util.Map;

        nop;

        threadPool := @parameter9: java.util.concurrent.ExecutorService;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        this.<kanzi.app.BlockCompressor: int level> = level;

        nop;

        this.<kanzi.app.BlockCompressor: int verbosity> = verbose;

        nop;

        bForce = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(force);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bForce);

        nop;

        if bForce != null goto label01;

        nop;

        $z0 = 0;

        nop;

        goto label02;

     label01:
        nop;

        $z0 = virtualinvoke bForce.<java.lang.Boolean: boolean booleanValue()>();

     label02:
        nop;

        this.<kanzi.app.BlockCompressor: boolean overwrite> = $z0;

        nop;

        $r3 = interfaceinvoke map.<java.util.Map: java.lang.Object remove(java.lang.Object)>("inputName");

        nop;

        $r4 = (java.lang.String) $r3;

        nop;

        this.<kanzi.app.BlockCompressor: java.lang.String inputName> = $r4;

        nop;

        $r5 = interfaceinvoke map.<java.util.Map: java.lang.Object remove(java.lang.Object)>("outputName");

        nop;

        $r6 = (java.lang.String) $r5;

        nop;

        this.<kanzi.app.BlockCompressor: java.lang.String outputName> = $r6;

        nop;

        $i0 = this.<kanzi.app.BlockCompressor: int level>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 < 0 goto label03;

        nop;

        $i1 = this.<kanzi.app.BlockCompressor: int level>;

        nop;

        tranformAndCodec = staticinvoke <kanzi.app.BlockCompressor: java.lang.String getTransformAndCodec(int)>($i1);

        nop;

        tokens = virtualinvoke tranformAndCodec.<java.lang.String: java.lang.String[] split(java.lang.String)>("&");

        nop;

        strTransf#33 = tokens[0];

        nop;

        strCodec#37 = tokens[1];

        nop;

        goto label04;

     label03:
        nop;

        strTransf#33 = transform;

        nop;

        strCodec#37 = entropy;

     label04:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(strCodec#37);

        nop;

        if strCodec#37 != null goto label05;

        nop;

        $r8 = "ANS0";

        nop;

        goto label06;

     label05:
        nop;

        $r8 = strCodec#37;

     label06:
        nop;

        this.<kanzi.app.BlockCompressor: java.lang.String codec> = $r8;

        nop;

        iBlockSize = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(blockSize);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(iBlockSize);

        nop;

        if iBlockSize != null goto label07;

        nop;

        $i2 = 1048576;

        nop;

        goto label08;

     label07:
        nop;

        $i2 = virtualinvoke iBlockSize.<java.lang.Integer: int intValue()>();

     label08:
        nop;

        this.<kanzi.app.BlockCompressor: int blockSize> = $i2;

        nop;

        $r10 = new kanzi.io.ByteFunctionFactory;

        nop;

        specialinvoke $r10.<kanzi.io.ByteFunctionFactory: void <init>()>();

        nop;

        bff = $r10;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(strTransf#33);

        nop;

        if strTransf#33 != null goto label09;

        nop;

        $r12 = "BWT+RANK+ZRLT";

        nop;

        goto label10;

     label09:
        nop;

        $s3 = virtualinvoke bff.<kanzi.io.ByteFunctionFactory: short getType(java.lang.String)>(strTransf#33);

        nop;

        $r12 = virtualinvoke bff.<kanzi.io.ByteFunctionFactory: java.lang.String getName(short)>($s3);

     label10:
        nop;

        this.<kanzi.app.BlockCompressor: java.lang.String transform> = $r12;

        nop;

        bChecksum = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(checksum);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bChecksum);

        nop;

        if bChecksum != null goto label11;

        nop;

        $z1 = 0;

        nop;

        goto label12;

     label11:
        nop;

        $z1 = virtualinvoke bChecksum.<java.lang.Boolean: boolean booleanValue()>();

     label12:
        nop;

        this.<kanzi.app.BlockCompressor: boolean checksum> = $z1;

        nop;

        this.<kanzi.app.BlockCompressor: int jobs> = jobs;

        nop;

        $i4 = this.<kanzi.app.BlockCompressor: int jobs>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        nop;

        if $i4 >= 2 goto label13;

        nop;

        $r15 = null;

        nop;

        goto label15;

     label13:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(threadPool);

        nop;

        if threadPool != null goto label14;

        nop;

        $r15 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        nop;

        goto label15;

     label14:
        nop;

        $r15 = threadPool;

     label15:
        nop;

        this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool> = $r15;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(threadPool);

        nop;

        if threadPool != null goto label16;

        nop;

        $r17 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r17);

        nop;

        if $r17 == null goto label16;

        nop;

        $z2 = 1;

        nop;

        goto label17;

     label16:
        nop;

        $z2 = 0;

     label17:
        nop;

        this.<kanzi.app.BlockCompressor: boolean ownPool> = $z2;

        nop;

        $r18 = new java.util.ArrayList;

        nop;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(10);

        nop;

        this.<kanzi.app.BlockCompressor: java.util.List listeners> = $r18;

        nop;

        $i5 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        nop;

        if $i5 <= 2 goto label18;

        nop;

        $r19 = new kanzi.app.InfoPrinter;

        nop;

        $i6 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        $r0 = <kanzi.app.InfoPrinter$Type: kanzi.app.InfoPrinter$Type ENCODING>;

        nop;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        nop;

        specialinvoke $r19.<kanzi.app.InfoPrinter: void <init>(int,kanzi.app.InfoPrinter$Type,java.io.PrintStream)>($i6, $r0, $r1);

        nop;

        virtualinvoke this.<kanzi.app.BlockCompressor: boolean addListener(kanzi.Listener)>($r19);

     label18:
        nop;

        $i7 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        if $i7 <= 0 goto label22;

        nop;

        $i8 = interfaceinvoke map.<java.util.Map: int size()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        nop;

        if $i8 <= 0 goto label22;

        nop;

        $r20 = interfaceinvoke map.<java.util.Map: java.util.Set keySet()>();

        nop;

        l17 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        nop;

        $z4 = interfaceinvoke l17.<java.util.Iterator: boolean hasNext()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        nop;

        if $z4 == 0 goto label22;

        nop;

        $r21 = interfaceinvoke l17.<java.util.Iterator: java.lang.Object next()>();

        nop;

        k = (java.lang.String) $r21;

        nop;

        $r22 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring invalid option [");

        nop;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(k);

        nop;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        nop;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        $i9 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        nop;

        if $i9 <= 0 goto label20;

        nop;

        $z5 = 1;

        nop;

        goto label21;

     label20:
        nop;

        $z5 = 0;

     label21:
        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r26, $z5);

        nop;

        goto label19;

     label22:
        nop;

        return;
    }

    private static void printOut(java.lang.String, boolean)
    {
        java.lang.String msg;
        boolean print;
        java.io.PrintStream $r0;

        nop;

        msg := @parameter0: java.lang.String;

        nop;

        print := @parameter1: boolean;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(print);

        nop;

        if print != 1 goto label1;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(msg);

        nop;

        if msg == null goto label1;

        nop;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        nop;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(msg);

     label1:
        nop;

        return;
    }

    private static java.lang.String getTransformAndCodec(int)
    {
        int level;

        nop;

        level := @parameter0: int;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(level);

        nop;

        tableswitch(level)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        nop;

        return "NONE&NONE";

     label2:
        nop;

        return "TEXT+LZ4&HUFFMAN";

     label3:
        nop;

        return "BWT+RANK+ZRLT&ANS0";

     label4:
        nop;

        return "BWT+RANK+ZRLT&FPAQ";

     label5:
        nop;

        return "BWT&CM";

     label6:
        nop;

        return "RLT+TEXT&TPAQ";

     label7:
        nop;

        return "Unknown&Unknown";
    }

    public final boolean addListener(kanzi.Listener)
    {
        kanzi.app.BlockCompressor this;
        kanzi.Listener bl;
        java.util.List $r0;
        boolean $z0;

        nop;

        this := @this: kanzi.app.BlockCompressor;

        nop;

        bl := @parameter0: kanzi.Listener;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bl);

        nop;

        if bl == null goto label1;

        nop;

        $r0 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(bl);

        nop;

        goto label2;

     label1:
        nop;

        $z0 = 0;

     label2:
        nop;

        return $z0;
    }

    public java.lang.Integer call()
    {
        kanzi.app.BlockCompressor this;
        java.lang.String etransform, ecodec, $r3, $r6, $r9, $r12, $r17, $r21, $r25, $r29, $r30, $r31, $r32, $r37, $r38, $r39, $r40, $r45, $r49, $r54, $r56, $r57, $r59, $r61, $r67, $r71, $r86, $r88, $r98, $r100, $r106, $r109, $r111, $r114, $r116, $r121, $r124, $r126, $r143, $r146, $r148, $r155, $r160, $r171, $r175, $r180, $r186, $r188, $r198, $r202;
        java.io.File output, tmp$1437606163;
        java.nio.file.Path path1, path2, $r69, $r73;
        java.util.HashMap ctx, tmp$305908918;
        java.util.Iterator l4;
        kanzi.Listener bl;
        kanzi.SliceByteArray sa, tmp$1742712050;
        kanzi.Event evt, evt, tmp$429237996, tmp$1250689932;
        kanzi.Listener[] array, array, $r135, $r210;
        long before, after, delta, $l16, $l18, $l19, $l20, $l23, $l24, $l25, $l26, $l29;
        int len, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, read#304, $i12, $i13, $i14, $i15, $i17, $i21, $i27, $i28, $i30;
        java.io.IOException l8, l12, $r149, l10#359, $r152, $r156, l10#386, $r161, l10#401, $r163;
        java.lang.Throwable l11, $r102, e#252, $r157, e#389, $r162;
        float f, $f0, $f1;
        boolean $z0, printFlag#5, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, printFlag#300, $z17, $z18, $z19;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r14, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28, $r34, $r35, $r36, $r42, $r43, $r44, $r47, $r48, $r51, $r52, $r53, $r55, $r97, $r99, $r105, $r107, $r108, $r110, $r120, $r122, $r123, $r125, $r142, $r144, $r145, $r168, $r169, $r170, $r173, $r174, $r177, $r179, $r183, $r187, $r190, $r191, $r192, $r194, $r195, $r196, $r197, $r200, $r201, tmp$1198862651, tmp$1494189314, tmp$196353782, tmp$1375734919, tmp$749205233, tmp$485924686, tmp$1889497191, tmp$276989210, tmp$413008789, tmp$386977672, tmp$1981932439, tmp$953649544, tmp$1030464587, tmp$2046046212, tmp$1411671174, tmp$1515041234, tmp$1570599026, tmp$1713920902, tmp$723420883, tmp$993823277;
        java.lang.Object os#138, $r92, $r115;
        java.io.PrintStream $r62, $r64, $r74, $r95, $r103, $r118, $r140, $r147, $r154, $r158, $r159, $r164;
        java.lang.Integer $r63, $r65, $r75, $r78, $r84, $r101, $r112, $r127, l9#355, l9#382, l9#397, $r165, $r212;
        java.nio.file.FileSystem $r66, $r70;
        java.lang.String[] $r68, $r72;
        java.lang.Boolean $r80;
        java.util.concurrent.ExecutorService $r82;
        java.util.List $r91, $r130, $r133, $r134, $r204, $r208, $r209;
        kanzi.io.CompressedOutputStream $r93, $r150, $r178, $r181, $r193, $r207, tmp$1110594174;
        java.lang.Exception $r94, e#239, $r117, e#279, $r139, e#338, tmp$1208776561, tmp$971333176;
        byte[] $r129, $r138, $r151;
        kanzi.Event$Type $r132, $r206;
        java.lang.Object[] $r136, $r184, $r211;
        java.io.InputStream $r137, tmp$1090209591;
        kanzi.io.IOException $r153, e#375;
        java.lang.Float $r185;
        byte $b22;
        kanzi.io.NullOutputStream tmp$646203215;
        java.io.FileOutputStream tmp$1826943973;
        java.io.FileInputStream tmp$1706321605;
        java.io.OutputStream tmp$647245454, tmp$301904392, tmp$722624003, tmp$1656317498, tmp$155081431, tmp$1839434194;

        nop;

        this := @this: kanzi.app.BlockCompressor;

        nop;

        $i0 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if $i0 <= 2 goto label01;

        nop;

        $z0 = 1;

        nop;

        goto label02;

     label01:
        nop;

        $z0 = 0;

     label02:
        nop;

        printFlag#5 = $z0;

        nop;

        $i1 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if $i1 < 1 goto label03;

        nop;

        $z1 = 1;

        nop;

        goto label04;

     label03:
        nop;

        $z1 = 0;

     label04:
        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("Kanzi 1.2 (C) 2017,  Frederic Langlet", $z1);

        nop;

        tmp$1198862651 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1198862651.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r2 = virtualinvoke tmp$1198862651.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input file name set to \'");

        nop;

        $r3 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        nop;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        nop;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        nop;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r6, printFlag#5);

        nop;

        tmp$1494189314 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1494189314.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r8 = virtualinvoke tmp$1494189314.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output file name set to \'");

        nop;

        $r9 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        nop;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        nop;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        nop;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r12, printFlag#5);

        nop;

        tmp$196353782 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$196353782.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r14 = virtualinvoke tmp$196353782.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block size set to ");

        nop;

        $i2 = this.<kanzi.app.BlockCompressor: int blockSize>;

        nop;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        nop;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        nop;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r17, printFlag#5);

        nop;

        tmp$1375734919 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1375734919.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r19 = virtualinvoke tmp$1375734919.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verbosity set to ");

        nop;

        $i3 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        nop;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r21, printFlag#5);

        nop;

        tmp$749205233 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$749205233.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r23 = virtualinvoke tmp$749205233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Overwrite set to ");

        nop;

        $z2 = this.<kanzi.app.BlockCompressor: boolean overwrite>;

        nop;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        nop;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r25, printFlag#5);

        nop;

        tmp$485924686 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$485924686.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r27 = virtualinvoke tmp$485924686.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checksum set to ");

        nop;

        $z3 = this.<kanzi.app.BlockCompressor: boolean checksum>;

        nop;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        nop;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r29, printFlag#5);

        nop;

        $i4 = this.<kanzi.app.BlockCompressor: int level>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        nop;

        if $i4 >= 0 goto label09;

        nop;

        $r30 = "NONE";

        nop;

        $r31 = this.<kanzi.app.BlockCompressor: java.lang.String transform>;

        nop;

        $z4 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        nop;

        if $z4 == 0 goto label05;

        nop;

        $r32 = "no";

        nop;

        goto label06;

     label05:
        nop;

        $r32 = this.<kanzi.app.BlockCompressor: java.lang.String transform>;

     label06:
        nop;

        etransform = $r32;

        nop;

        tmp$1889497191 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1889497191.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r34 = virtualinvoke tmp$1889497191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        nop;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(etransform);

        nop;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transform (stage 1)");

        nop;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r37, printFlag#5);

        nop;

        $r38 = "NONE";

        nop;

        $r39 = this.<kanzi.app.BlockCompressor: java.lang.String codec>;

        nop;

        $z5 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        nop;

        if $z5 == 0 goto label07;

        nop;

        $r40 = "no";

        nop;

        goto label08;

     label07:
        nop;

        $r40 = this.<kanzi.app.BlockCompressor: java.lang.String codec>;

     label08:
        nop;

        ecodec = $r40;

        nop;

        tmp$276989210 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$276989210.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r42 = virtualinvoke tmp$276989210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        nop;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ecodec);

        nop;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entropy codec (stage 2)");

        nop;

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r45, printFlag#5);

        nop;

        goto label10;

     label09:
        nop;

        tmp$413008789 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$413008789.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r47 = virtualinvoke tmp$413008789.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compression level set to ");

        nop;

        $i5 = this.<kanzi.app.BlockCompressor: int level>;

        nop;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        nop;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r49, printFlag#5);

     label10:
        nop;

        $i6 = this.<kanzi.app.BlockCompressor: int jobs>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6);

        nop;

        if $i6 <= 0 goto label13;

        nop;

        tmp$386977672 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$386977672.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r51 = virtualinvoke tmp$386977672.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        nop;

        $i7 = this.<kanzi.app.BlockCompressor: int jobs>;

        nop;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        nop;

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" job");

        nop;

        $i8 = this.<kanzi.app.BlockCompressor: int jobs>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        nop;

        if $i8 <= 1 goto label11;

        nop;

        $r54 = "s";

        nop;

        goto label12;

     label11:
        nop;

        $r54 = "";

     label12:
        nop;

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        nop;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r56, printFlag#5);

     label13:
        nop;

        $r57 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        nop;

        $z6 = virtualinvoke $r57.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NONE");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        nop;

        if $z6 == 0 goto label14;

        nop;

        tmp$646203215 = new kanzi.io.NullOutputStream;

        nop;

        specialinvoke tmp$646203215.<kanzi.io.NullOutputStream: void <init>()>();

        nop;

        os#138 = tmp$646203215;

        nop;

        goto label22;

     label14:
        nop;

        $r59 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        nop;

        $z7 = virtualinvoke $r59.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STDOUT");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        nop;

        if $z7 == 0 goto label15;

        nop;

        os#138 = <java.lang.System: java.io.PrintStream out>;

        nop;

        goto label22;

     label15:
        nop;

        tmp$1437606163 = new java.io.File;

        nop;

        $r61 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        nop;

        specialinvoke tmp$1437606163.<java.io.File: void <init>(java.lang.String)>($r61);

        nop;

        output = tmp$1437606163;

        nop;

        $z8 = virtualinvoke output.<java.io.File: boolean exists()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        nop;

        if $z8 == 0 goto label21;

        nop;

        $z9 = virtualinvoke output.<java.io.File: boolean isDirectory()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        nop;

        if $z9 == 0 goto label17;

        nop;

        $r62 = <java.lang.System: java.io.PrintStream err>;

        nop;

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("The output file is a directory");

        nop;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-6);

     label16:
        nop;

        return $r63;

     label17:
        nop;

        $z10 = this.<kanzi.app.BlockCompressor: boolean overwrite>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        nop;

        if $z10 != 0 goto label19;

        nop;

        $r64 = <java.lang.System: java.io.PrintStream err>;

        nop;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("The output file exists and the \'overwrite\' command line option has not been provided");

        nop;

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7);

     label18:
        nop;

        return $r65;

     label19:
        nop;

        $r66 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        nop;

        $r67 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        nop;

        $r68 = newarray (java.lang.String)[0];

        nop;

        $r69 = virtualinvoke $r66.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r67, $r68);

        nop;

        path1 = interfaceinvoke $r69.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        nop;

        $r70 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        nop;

        $r71 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        nop;

        $r72 = newarray (java.lang.String)[0];

        nop;

        $r73 = virtualinvoke $r70.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r71, $r72);

        nop;

        path2 = interfaceinvoke $r73.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        nop;

        $z11 = interfaceinvoke path1.<java.nio.file.Path: boolean equals(java.lang.Object)>(path2);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z11);

        nop;

        if $z11 == 0 goto label21;

        nop;

        $r74 = <java.lang.System: java.io.PrintStream err>;

        nop;

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>("The input and output files must be different");

        nop;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

     label20:
        nop;

        return $r75;

     label21:
        nop;

        tmp$1826943973 = new java.io.FileOutputStream;

        nop;

        specialinvoke tmp$1826943973.<java.io.FileOutputStream: void <init>(java.io.File)>(output);

        nop;

        os#138 = tmp$1826943973;

     label22:
        nop;

        tmp$305908918 = new java.util.HashMap;

        nop;

        specialinvoke tmp$305908918.<java.util.HashMap: void <init>()>();

        nop;

        ctx = tmp$305908918;

        nop;

        $i9 = this.<kanzi.app.BlockCompressor: int blockSize>;

        nop;

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        nop;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("blockSize", $r78);

        nop;

        $z12 = this.<kanzi.app.BlockCompressor: boolean checksum>;

        nop;

        $r80 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);

        nop;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("checksum", $r80);

        nop;

        $r82 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        nop;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pool", $r82);

        nop;

        $i10 = this.<kanzi.app.BlockCompressor: int jobs>;

        nop;

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        nop;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jobs", $r84);

        nop;

        $r86 = this.<kanzi.app.BlockCompressor: java.lang.String codec>;

        nop;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("codec", $r86);

        nop;

        $r88 = this.<kanzi.app.BlockCompressor: java.lang.String transform>;

        nop;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("transform", $r88);

        nop;

        tmp$1110594174 = new kanzi.io.CompressedOutputStream;

        nop;

        tmp$647245454 = (java.io.OutputStream) os#138;

        nop;

        specialinvoke tmp$1110594174.<kanzi.io.CompressedOutputStream: void <init>(java.io.OutputStream,java.util.Map)>(tmp$647245454, ctx);

        nop;

        this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos> = tmp$1110594174;

        nop;

        $r91 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        l4 = interfaceinvoke $r91.<java.util.List: java.util.Iterator iterator()>();

     label23:
        nop;

        $z13 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z13);

        nop;

        if $z13 == 0 goto label24;

        nop;

        $r92 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        nop;

        bl = (kanzi.Listener) $r92;

        nop;

        $r93 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        virtualinvoke $r93.<kanzi.io.CompressedOutputStream: boolean addListener(kanzi.Listener)>(bl);

        nop;

        goto label23;

     label24:
        nop;

        goto label27;

     label25:
        nop;

        $r94 := @caughtexception;

        nop;

        e#239 = $r94;

        nop;

        $r95 = <java.lang.System: java.io.PrintStream err>;

        nop;

        tmp$1981932439 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1981932439.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r97 = virtualinvoke tmp$1981932439.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create compressed stream: ");

        nop;

        $r98 = virtualinvoke e#239.<java.lang.Exception: java.lang.String getMessage()>();

        nop;

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        nop;

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>($r100);

        nop;

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-4);

     label26:
        nop;

        return $r101;

     label27:
        nop;

        goto label29;

     label28:
        nop;

        $r102 := @caughtexception;

        nop;

        e#252 = $r102;

        nop;

        $r103 = <java.lang.System: java.io.PrintStream err>;

        nop;

        tmp$953649544 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$953649544.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r105 = virtualinvoke tmp$953649544.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open output file \'");

        nop;

        $r106 = this.<kanzi.app.BlockCompressor: java.lang.String outputName>;

        nop;

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        nop;

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for writing: ");

        nop;

        tmp$1208776561 = (java.lang.Exception) e#252;

        nop;

        $r109 = virtualinvoke tmp$1208776561.<java.lang.Exception: java.lang.String getMessage()>();

        nop;

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        nop;

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r103.<java.io.PrintStream: void println(java.lang.String)>($r111);

        nop;

        $r112 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

        nop;

        return $r112;

     label29:
        nop;

        $r114 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        nop;

        $z15 = virtualinvoke $r114.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STDIN");

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        nop;

        if $z15 == 0 goto label30;

        nop;

        $r115 = <java.lang.System: java.io.InputStream in>;

        nop;

        goto label31;

     label30:
        nop;

        tmp$1706321605 = new java.io.FileInputStream;

        nop;

        $r115 = tmp$1706321605;

        nop;

        $r116 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        nop;

        specialinvoke tmp$1706321605.<java.io.FileInputStream: void <init>(java.lang.String)>($r116);

     label31:
        nop;

        tmp$1090209591 = (java.io.InputStream) $r115;

        nop;

        this.<kanzi.app.BlockCompressor: java.io.InputStream is> = tmp$1090209591;

     label32:
        nop;

        goto label34;

     label33:
        nop;

        $r117 := @caughtexception;

        nop;

        e#279 = $r117;

        nop;

        $r118 = <java.lang.System: java.io.PrintStream err>;

        nop;

        tmp$1030464587 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1030464587.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r120 = virtualinvoke tmp$1030464587.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open input file \'");

        nop;

        $r121 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        nop;

        $r122 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        nop;

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        nop;

        $r124 = virtualinvoke e#279.<java.lang.Exception: java.lang.String getMessage()>();

        nop;

        $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124);

        nop;

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r118.<java.io.PrintStream: void println(java.lang.String)>($r126);

        nop;

        $r127 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        nop;

        return $r127;

     label34:
        nop;

        $i11 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11);

        nop;

        if $i11 <= 1 goto label35;

        nop;

        $z16 = 1;

        nop;

        goto label36;

     label35:
        nop;

        $z16 = 0;

     label36:
        nop;

        printFlag#300 = $z16;

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("Encoding ...", printFlag#300);

        nop;

        read#304 = 0;

        nop;

        tmp$1742712050 = new kanzi.SliceByteArray;

        nop;

        $r129 = newarray (byte)[32768];

        nop;

        specialinvoke tmp$1742712050.<kanzi.SliceByteArray: void <init>(byte[],int)>($r129, 0);

        nop;

        sa = tmp$1742712050;

        nop;

        $r130 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $i12 = interfaceinvoke $r130.<java.util.List: int size()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12);

        nop;

        if $i12 <= 0 goto label37;

        nop;

        tmp$429237996 = new kanzi.Event;

        nop;

        $r132 = <kanzi.Event$Type: kanzi.Event$Type COMPRESSION_START>;

        nop;

        specialinvoke tmp$429237996.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r132, -1, 0L);

        nop;

        evt = tmp$429237996;

        nop;

        $r133 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $r134 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $i13 = interfaceinvoke $r134.<java.util.List: int size()>();

        nop;

        $r135 = newarray (kanzi.Listener)[$i13];

        nop;

        $r136 = interfaceinvoke $r133.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r135);

        nop;

        array = (kanzi.Listener[]) $r136;

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label37:
        nop;

        before = staticinvoke <java.lang.System: long nanoTime()>();

     label38:
        nop;

        $r137 = this.<kanzi.app.BlockCompressor: java.io.InputStream is>;

        nop;

        $r138 = sa.<kanzi.SliceByteArray: byte[] array>;

        nop;

        $i14 = sa.<kanzi.SliceByteArray: int length>;

        nop;

        len = virtualinvoke $r137.<java.io.InputStream: int read(byte[],int,int)>($r138, 0, $i14);

     label39:
        nop;

        goto label46;

     label40:
        nop;

        $r139 := @caughtexception;

        nop;

        e#338 = $r139;

        nop;

        $r140 = <java.lang.System: java.io.PrintStream err>;

        nop;

        tmp$2046046212 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$2046046212.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r142 = virtualinvoke tmp$2046046212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read block from file \'");

        nop;

        $r143 = this.<kanzi.app.BlockCompressor: java.lang.String inputName>;

        nop;

        $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143);

        nop;

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        nop;

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r140.<java.io.PrintStream: void print(java.lang.String)>($r146);

        nop;

        $r147 = <java.lang.System: java.io.PrintStream err>;

        nop;

        $r148 = virtualinvoke e#338.<java.lang.Exception: java.lang.String getMessage()>();

        nop;

        virtualinvoke $r147.<java.io.PrintStream: void println(java.lang.String)>($r148);

        nop;

        l9#355 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-11);

     label41:
        nop;

        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label42:
        nop;

        tmp$301904392 = (java.io.OutputStream) os#138;

        nop;

        virtualinvoke tmp$301904392.<java.io.OutputStream: void close()>();

     label43:
        nop;

        goto label45;

     label44:
        nop;

        $r149 := @caughtexception;

        nop;

        l10#359 = $r149;

     label45:
        nop;

        return l9#355;

     label46:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len);

        nop;

        if len > 0 goto label47;

        nop;

        goto label48;

     label47:
        nop;

        read#304 = read#304 + len;

        nop;

        $r150 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        $r151 = sa.<kanzi.SliceByteArray: byte[] array>;

        nop;

        virtualinvoke $r150.<kanzi.io.CompressedOutputStream: void write(byte[],int,int)>($r151, 0, len);

        nop;

        goto label38;

     label48:
        nop;

        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label49:
        nop;

        tmp$722624003 = (java.io.OutputStream) os#138;

        nop;

        virtualinvoke tmp$722624003.<java.io.OutputStream: void close()>();

     label50:
        nop;

        goto label73;

     label51:
        nop;

        $r152 := @caughtexception;

        nop;

        l8 = $r152;

        nop;

        goto label73;

     label52:
        nop;

        $r153 := @caughtexception;

     label53:
        nop;

        e#375 = $r153;

        nop;

        $r154 = <java.lang.System: java.io.PrintStream err>;

        nop;

        $r155 = virtualinvoke e#375.<kanzi.io.IOException: java.lang.String getMessage()>();

        nop;

        virtualinvoke $r154.<java.io.PrintStream: void println(java.lang.String)>($r155);

        nop;

        $i15 = virtualinvoke e#375.<kanzi.io.IOException: int getErrorCode()>();

        nop;

        l9#382 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

     label54:
        nop;

        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label55:
        nop;

        tmp$1656317498 = (java.io.OutputStream) os#138;

        nop;

        virtualinvoke tmp$1656317498.<java.io.OutputStream: void close()>();

     label56:
        nop;

        goto label58;

     label57:
        nop;

        $r156 := @caughtexception;

        nop;

        l10#386 = $r156;

     label58:
        nop;

        return l9#382;

     label59:
        nop;

        $r157 := @caughtexception;

     label60:
        nop;

        e#389 = $r157;

        nop;

        $r158 = <java.lang.System: java.io.PrintStream err>;

        nop;

        virtualinvoke $r158.<java.io.PrintStream: void println(java.lang.String)>("An unexpected condition happened. Exiting ...");

        nop;

        $r159 = <java.lang.System: java.io.PrintStream err>;

        nop;

        tmp$971333176 = (java.lang.Exception) e#389;

        nop;

        $r160 = virtualinvoke tmp$971333176.<java.lang.Exception: java.lang.String getMessage()>();

        nop;

        virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>($r160);

        nop;

        l9#397 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-127);

     label61:
        nop;

        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label62:
        nop;

        tmp$155081431 = (java.io.OutputStream) os#138;

        nop;

        virtualinvoke tmp$155081431.<java.io.OutputStream: void close()>();

     label63:
        nop;

        goto label65;

     label64:
        nop;

        $r161 := @caughtexception;

        nop;

        l10#401 = $r161;

     label65:
        nop;

        return l9#397;

     label66:
        nop;

        $r162 := @caughtexception;

     label67:
        nop;

        l11 = $r162;

     label68:
        nop;

        virtualinvoke this.<kanzi.app.BlockCompressor: void dispose()>();

     label69:
        nop;

        tmp$1839434194 = (java.io.OutputStream) os#138;

        nop;

        virtualinvoke tmp$1839434194.<java.io.OutputStream: void close()>();

     label70:
        nop;

        goto label72;

     label71:
        nop;

        $r163 := @caughtexception;

        nop;

        l12 = $r163;

     label72:
        nop;

        throw l11;

     label73:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(read#304);

        nop;

        if read#304 != 0 goto label74;

        nop;

        $r164 = <java.lang.System: java.io.PrintStream out>;

        nop;

        virtualinvoke $r164.<java.io.PrintStream: void println(java.lang.String)>("Empty input file ... nothing to do");

        nop;

        $r165 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-128);

        nop;

        return $r165;

     label74:
        nop;

        after = staticinvoke <java.lang.System: long nanoTime()>();

        nop;

        $l16 = after - before;

        nop;

        delta = $l16 / 1000000L;

        nop;

        $i17 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        nop;

        if $i17 < 1 goto label75;

        nop;

        $z17 = 1;

        nop;

        goto label76;

     label75:
        nop;

        $z17 = 0;

     label76:
        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("", $z17);

        nop;

        tmp$1411671174 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1411671174.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r168 = virtualinvoke tmp$1411671174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding:          ");

        nop;

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delta);

        nop;

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        nop;

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r171, printFlag#300);

        nop;

        tmp$1515041234 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1515041234.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r173 = virtualinvoke tmp$1515041234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input size:        ");

        nop;

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(read#304);

        nop;

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r175, printFlag#300);

        nop;

        tmp$1570599026 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1570599026.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r177 = virtualinvoke tmp$1570599026.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output size:       ");

        nop;

        $r178 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        $l18 = virtualinvoke $r178.<kanzi.io.CompressedOutputStream: long getWritten()>();

        nop;

        $r179 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        nop;

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r180, printFlag#300);

        nop;

        $r181 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        $l19 = virtualinvoke $r181.<kanzi.io.CompressedOutputStream: long getWritten()>();

        nop;

        $f0 = (float) $l19;

        nop;

        $f1 = (float) read#304;

        nop;

        f = $f0 / $f1;

        nop;

        tmp$1713920902 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$1713920902.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r183 = virtualinvoke tmp$1713920902.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ratio:             ");

        nop;

        $r184 = newarray (java.lang.Object)[1];

        nop;

        $r185 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f);

        nop;

        $r184[0] = $r185;

        nop;

        $r186 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$.6f", $r184);

        nop;

        $r187 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r186);

        nop;

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r188, printFlag#300);

        nop;

        tmp$723420883 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$723420883.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r190 = virtualinvoke tmp$723420883.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding: ");

        nop;

        $r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(read#304);

        nop;

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        nop;

        $r193 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        $l20 = virtualinvoke $r193.<kanzi.io.CompressedOutputStream: long getWritten()>();

        nop;

        $r194 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        nop;

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes in ");

        nop;

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delta);

        nop;

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        nop;

        $r198 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        $i21 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i21);

        nop;

        if $i21 != 1 goto label77;

        nop;

        $z18 = 1;

        nop;

        goto label78;

     label77:
        nop;

        $z18 = 0;

     label78:
        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r198, $z18);

        nop;

        $b22 = delta cmp 0L;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b22);

        nop;

        if $b22 <= 0 goto label79;

        nop;

        tmp$993823277 = new java.lang.StringBuilder;

        nop;

        specialinvoke tmp$993823277.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r200 = virtualinvoke tmp$993823277.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throughput (KB/s): ");

        nop;

        $l23 = (long) read#304;

        nop;

        $l24 = $l23 * 1000L;

        nop;

        $l25 = $l24 >> 10;

        nop;

        $l26 = $l25 / delta;

        nop;

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l26);

        nop;

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>($r202, printFlag#300);

     label79:
        nop;

        $i27 = this.<kanzi.app.BlockCompressor: int verbosity>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i27);

        nop;

        if $i27 < 1 goto label80;

        nop;

        $z19 = 1;

        nop;

        goto label81;

     label80:
        nop;

        $z19 = 0;

     label81:
        nop;

        staticinvoke <kanzi.app.BlockCompressor: void printOut(java.lang.String,boolean)>("", $z19);

        nop;

        $r204 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $i28 = interfaceinvoke $r204.<java.util.List: int size()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i28);

        nop;

        if $i28 <= 0 goto label82;

        nop;

        tmp$1250689932 = new kanzi.Event;

        nop;

        $r206 = <kanzi.Event$Type: kanzi.Event$Type COMPRESSION_END>;

        nop;

        $r207 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        $l29 = virtualinvoke $r207.<kanzi.io.CompressedOutputStream: long getWritten()>();

        nop;

        specialinvoke tmp$1250689932.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r206, -1, $l29);

        nop;

        evt = tmp$1250689932;

        nop;

        $r208 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $r209 = this.<kanzi.app.BlockCompressor: java.util.List listeners>;

        nop;

        $i30 = interfaceinvoke $r209.<java.util.List: int size()>();

        nop;

        $r210 = newarray (kanzi.Listener)[$i30];

        nop;

        $r211 = interfaceinvoke $r208.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r210);

        nop;

        array = (kanzi.Listener[]) $r211;

        nop;

        staticinvoke <kanzi.app.BlockCompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label82:
        nop;

        $r212 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        nop;

        return $r212;

        catch java.lang.Exception from label22 to label24 with label25;
        catch java.lang.Exception from label13 to label16 with label28;
        catch java.lang.Exception from label17 to label18 with label28;
        catch java.lang.Exception from label19 to label20 with label28;
        catch java.lang.Exception from label21 to label26 with label28;
        catch java.lang.Exception from label29 to label32 with label33;
        catch java.lang.Exception from label38 to label39 with label40;
        catch java.io.IOException from label42 to label43 with label44;
        catch java.io.IOException from label49 to label50 with label51;
        catch kanzi.io.IOException from label38 to label41 with label52;
        catch kanzi.io.IOException from label46 to label48 with label52;
        catch java.io.IOException from label55 to label56 with label57;
        catch java.lang.Exception from label38 to label41 with label59;
        catch java.lang.Exception from label46 to label48 with label59;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.lang.Throwable from label38 to label41 with label66;
        catch java.lang.Throwable from label46 to label48 with label66;
        catch java.lang.Throwable from label53 to label54 with label66;
        catch java.lang.Throwable from label60 to label61 with label66;
        catch java.io.IOException from label69 to label70 with label71;
        catch java.lang.Throwable from label67 to label68 with label66;
    }

    public void dispose()
    {
        kanzi.app.BlockCompressor this;
        java.io.IOException l1, ioe, $r2, $r5;
        java.io.InputStream $r0, $r1;
        kanzi.io.CompressedOutputStream $r3, $r4;
        java.io.PrintStream $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        java.util.concurrent.ExecutorService $r12, $r13;
        boolean $z0;

        nop;

        this := @this: kanzi.app.BlockCompressor;

     label1:
        nop;

        $r0 = this.<kanzi.app.BlockCompressor: java.io.InputStream is>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        nop;

        if $r0 == null goto label2;

        nop;

        $r1 = this.<kanzi.app.BlockCompressor: java.io.InputStream is>;

        nop;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label2:
        nop;

        goto label4;

     label3:
        nop;

        $r2 := @caughtexception;

        nop;

        l1 = $r2;

     label4:
        nop;

        $r3 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        nop;

        if $r3 == null goto label5;

        nop;

        $r4 = this.<kanzi.app.BlockCompressor: kanzi.io.CompressedOutputStream cos>;

        nop;

        virtualinvoke $r4.<kanzi.io.CompressedOutputStream: void close()>();

     label5:
        nop;

        goto label7;

     label6:
        nop;

        $r5 := @caughtexception;

        nop;

        ioe = $r5;

        nop;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        nop;

        $r7 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compression failure: ");

        nop;

        $r9 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();

        nop;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        nop;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

        nop;

        staticinvoke <java.lang.System: void exit(int)>(-12);

     label7:
        nop;

        $r12 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r12);

        nop;

        if $r12 == null goto label8;

        nop;

        $z0 = this.<kanzi.app.BlockCompressor: boolean ownPool>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 != 1 goto label8;

        nop;

        $r13 = this.<kanzi.app.BlockCompressor: java.util.concurrent.ExecutorService pool>;

        nop;

        interfaceinvoke $r13.<java.util.concurrent.ExecutorService: void shutdown()>();

     label8:
        nop;

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    static void notifyListeners(kanzi.Listener[], kanzi.Event)
    {
        kanzi.Listener[] listeners, l2;
        kanzi.Event evt;
        int l3, l4#5;
        kanzi.Listener bl;
        java.lang.Exception l6, $r0;

        nop;

        listeners := @parameter0: kanzi.Listener[];

        nop;

        evt := @parameter1: kanzi.Event;

        nop;

        l2 = listeners;

        nop;

        l3 = lengthof l2;

        nop;

        l4#5 = 0;

     label1:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l4#5);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3);

        nop;

        if l4#5 >= l3 goto label6;

        nop;

        bl = l2[l4#5];

     label2:
        nop;

        interfaceinvoke bl.<kanzi.Listener: void processEvent(kanzi.Event)>(evt);

     label3:
        nop;

        goto label5;

     label4:
        nop;

        $r0 := @caughtexception;

        nop;

        l6 = $r0;

     label5:
        nop;

        l4#5 = l4#5 + 1;

        nop;

        goto label1;

     label6:
        nop;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }


