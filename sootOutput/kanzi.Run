    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        java.util.HashMap map, $r14;
        java.lang.Exception e, $r18;
        int code, blockSize#48;
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, entropy#52, transform#54, $r22, $r24;
        java.lang.Boolean $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, force#46, checksum#56, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        byte verbose#44, level#50;
        kanzi.app.BlockCompressor bc#82, $r17;
        java.io.PrintStream $r19;
        java.lang.StringBuilder $r20, $r21, $r23;
        java.lang.Integer $r25;

        nop;

        args := @parameter0: java.lang.String[];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        nop;

        $r0 = args[0];

        nop;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        nop;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERBOSE(boolean)>($z0);

        nop;

        <kanzi.Run: boolean VERBOSE> = $z1;

        nop;

        $r2 = args[1];

        nop;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        nop;

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFORCE(boolean)>($z2);

        nop;

        <kanzi.Run: boolean FORCE> = $z3;

        nop;

        $r4 = args[2];

        nop;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r4);

        nop;

        $z4 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBLOCKSIZE(boolean)>($z4);

        nop;

        <kanzi.Run: boolean BLOCKSIZE> = $z5;

        nop;

        $r6 = args[3];

        nop;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        nop;

        $z6 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLEVEL(boolean)>($z6);

        nop;

        <kanzi.Run: boolean LEVEL> = $z7;

        nop;

        $r8 = args[4];

        nop;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        nop;

        $z8 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionENTROPY(boolean)>($z8);

        nop;

        <kanzi.Run: boolean ENTROPY> = $z9;

        nop;

        $r10 = args[5];

        nop;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        nop;

        $z10 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionTRANSFORM(boolean)>($z10);

        nop;

        <kanzi.Run: boolean TRANSFORM> = $z11;

        nop;

        $r12 = args[6];

        nop;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        nop;

        $z12 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        nop;

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCHECKSUM(boolean)>($z12);

        nop;

        <kanzi.Run: boolean CHECKSUM> = $z13;

        nop;

        verbose#44 = 0;

        nop;

        force#46 = 0;

        nop;

        blockSize#48 = 1048576;

        nop;

        level#50 = 0;

        nop;

        entropy#52 = "Huffman";

        nop;

        transform#54 = "BWT+MTFT+ZRLT";

        nop;

        checksum#56 = 0;

        nop;

        $z14 = <kanzi.Run: boolean VERBOSE>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z14);

        nop;

        if $z14 == 0 goto label01;

        nop;

        verbose#44 = 4;

     label01:
        nop;

        $z15 = <kanzi.Run: boolean FORCE>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z15);

        nop;

        if $z15 == 0 goto label02;

        nop;

        force#46 = 1;

     label02:
        nop;

        $z16 = <kanzi.Run: boolean BLOCKSIZE>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z16);

        nop;

        if $z16 == 0 goto label03;

        nop;

        blockSize#48 = 1073741824;

     label03:
        nop;

        $z17 = <kanzi.Run: boolean LEVEL>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z17);

        nop;

        if $z17 == 0 goto label04;

        nop;

        level#50 = 5;

     label04:
        nop;

        $z18 = <kanzi.Run: boolean ENTROPY>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z18);

        nop;

        if $z18 == 0 goto label05;

        nop;

        entropy#52 = "PAQ";

     label05:
        nop;

        $z19 = <kanzi.Run: boolean TRANSFORM>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z19);

        nop;

        if $z19 == 0 goto label06;

        nop;

        transform#54 = "LZ4";

     label06:
        nop;

        $z20 = <kanzi.Run: boolean CHECKSUM>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20);

        nop;

        if $z20 == 0 goto label07;

        nop;

        checksum#56 = 1;

     label07:
        nop;

        $r14 = new java.util.HashMap;

        nop;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        nop;

        map = $r14;

        nop;

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("inputName", "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/kanzi/src/main/resources/rt.jar");

        nop;

        interfaceinvoke map.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("outputName", "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/kanzi/src/main/resources/rt.knz");

        nop;

        bc#82 = null;

     label08:
        nop;

        $r17 = new kanzi.app.BlockCompressor;

        nop;

        specialinvoke $r17.<kanzi.app.BlockCompressor: void <init>(int,boolean,int,int,java.lang.String,java.lang.String,boolean,int,java.util.Map,java.util.concurrent.ExecutorService)>(verbose#44, force#46, blockSize#48, level#50, entropy#52, transform#54, checksum#56, 1, map, null);

        nop;

        bc#82 = $r17;

     label09:
        nop;

        goto label11;

     label10:
        nop;

        $r18 := @caughtexception;

        nop;

        e = $r18;

        nop;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        nop;

        $r20 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create the compressor: ");

        nop;

        $r22 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        nop;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        nop;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);

        nop;

        staticinvoke <java.lang.System: void exit(int)>(-4);

     label11:
        nop;

        $r25 = virtualinvoke bc#82.<kanzi.app.BlockCompressor: java.lang.Integer call()>();

        nop;

        code = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(code);

        nop;

        if code == 0 goto label12;

        nop;

        virtualinvoke bc#82.<kanzi.app.BlockCompressor: void dispose()>();

     label12:
        nop;

        staticinvoke <java.lang.System: void exit(int)>(code);

        nop;

        return;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    public void <init>()
    {
        kanzi.Run this;

        nop;

        this := @this: kanzi.Run;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        return;
    }


