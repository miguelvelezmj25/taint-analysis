digraph <init> {
"this := @this: com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {135254299}" -> "btreeComparator := @parameter0: java.util.Comparator {1236904625}";
"btreeComparator := @parameter0: java.util.Comparator {1236904625}" -> "dupComparator := @parameter1: java.util.Comparator {939565628}";
"dupComparator := @parameter1: java.util.Comparator {939565628}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1022175050}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1022175050}" -> "this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {375548603}";
"this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> = btreeComparator {375548603}" -> "this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {1356173324}";
"this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> = dupComparator {1356173324}" -> "return {1441210143}";
}

digraph compare {
"this := @this: com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {56698419}" -> "l1 := @parameter0: java.lang.Object {1705704891}";
"l1 := @parameter0: java.lang.Object {1705704891}" -> "l2 := @parameter1: java.lang.Object {2086896368}";
"l2 := @parameter1: java.lang.Object {2086896368}" -> "$r0 = (byte[]) l1 {1075642013}";
"$r0 = (byte[]) l1 {1075642013}" -> "$r1 = (byte[]) l2 {1575102504}";
"$r1 = (byte[]) l2 {1575102504}" -> "$i0 = virtualinvoke this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {2058210591}";
"$i0 = virtualinvoke this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: int compare(byte[],byte[])>($r0, $r1) {2058210591}" -> "return $i0 {1327990499}";
}

digraph compare {
"this := @this: com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator {1670142490}" -> "twoPartKey1 := @parameter0: byte[] {1669764042}";
"twoPartKey1 := @parameter0: byte[] {1669764042}" -> "twoPartKey2 := @parameter1: byte[] {1261357750}";
"twoPartKey2 := @parameter1: byte[] {1261357750}" -> "$i0 = lengthof twoPartKey1 {865842849}";
"$i0 = lengthof twoPartKey1 {865842849}" -> "$i1 = $i0 - 1 {184341226}";
"$i1 = $i0 - 1 {184341226}" -> "origKeySize1 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {2051990167}";
"origKeySize1 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey1, $i1) {2051990167}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {926991457}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {926991457}" -> "if origKeySize1 != -1 goto $i3 = origKeySize1 {678552045}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {678552045}" -> "$i2 = lengthof twoPartKey1 {2064922760}";
"if origKeySize1 != -1 goto $i3 = origKeySize1 {678552045}" -> "$i3 = origKeySize1 {1979393667}";
"$i2 = lengthof twoPartKey1 {2064922760}" -> "$i3 = $i2 - 1 {1038360459}";
"$i3 = $i2 - 1 {1038360459}" -> "goto [?= keySize1 = $i3] {804363149}";
"goto [?= keySize1 = $i3] {804363149}" -> "keySize1 = $i3 {501984510}";
"$i3 = origKeySize1 {1979393667}" -> "keySize1 = $i3 {501984510}";
"keySize1 = $i3 {501984510}" -> "$i4 = lengthof twoPartKey2 {1694955816}";
"$i4 = lengthof twoPartKey2 {1694955816}" -> "$i5 = $i4 - 1 {817091639}";
"$i5 = $i4 - 1 {817091639}" -> "origKeySize2 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {816046983}";
"origKeySize2 = staticinvoke <com.sleepycat.util.PackedInteger: int readReverseInt(byte[],int)>(twoPartKey2, $i5) {816046983}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1817224251}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1817224251}" -> "if origKeySize2 != -1 goto $i7 = origKeySize2 {655977231}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {655977231}" -> "$i6 = lengthof twoPartKey2 {1789563058}";
"if origKeySize2 != -1 goto $i7 = origKeySize2 {655977231}" -> "$i7 = origKeySize2 {1038214321}";
"$i6 = lengthof twoPartKey2 {1789563058}" -> "$i7 = $i6 - 1 {1139051578}";
"$i7 = $i6 - 1 {1139051578}" -> "goto [?= keySize2 = $i7] {57723757}";
"goto [?= keySize2 = $i7] {57723757}" -> "keySize2 = $i7 {997524741}";
"$i7 = origKeySize2 {1038214321}" -> "keySize2 = $i7 {997524741}";
"keySize2 = $i7 {997524741}" -> "$r0 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {212678051}";
"$r0 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {212678051}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {503757820}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {503757820}" -> "if $r0 != null goto key1 = newarray (byte)[keySize1] {1852294024}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {1852294024}" -> "keyCmp#34 = staticinvoke <com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {1094270049}";
"if $r0 != null goto key1 = newarray (byte)[keySize1] {1852294024}" -> "key1 = newarray (byte)[keySize1] {572524495}";
"keyCmp#34 = staticinvoke <com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, 0, keySize1, twoPartKey2, 0, keySize2) {1094270049}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34)] {573246561}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34)] {573246561}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1957024801}";
"key1 = newarray (byte)[keySize1] {572524495}" -> "key2 = newarray (byte)[keySize2] {708370191}";
"key2 = newarray (byte)[keySize2] {708370191}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {45902292}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, 0, key1, 0, keySize1) {45902292}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {1320105322}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, 0, key2, 0, keySize2) {1320105322}" -> "$r1 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {910035757}";
"$r1 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator btreeComparator> {910035757}" -> "keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {691487020}";
"keyCmp#34 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(key1, key2) {691487020}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1957024801}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1957024801}" -> "if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {86409788}";
"if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {86409788}" -> "return keyCmp#34 {1266949336}";
"if keyCmp#34 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {86409788}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1461135417}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1461135417}" -> "if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1220385495}";
"if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1220385495}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {490588865}";
"if origKeySize1 == -1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1220385495}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2009766767}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {490588865}" -> "if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {552737237}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {552737237}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2009766767}";
"if origKeySize2 != -1 goto $i9 = lengthof twoPartKey1 {552737237}" -> "$i9 = lengthof twoPartKey1 {562429318}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2009766767}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {16521595}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {16521595}" -> "if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {813412317}";
"if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {813412317}" -> "return 0 {1845857330}";
"if origKeySize1 != origKeySize2 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {813412317}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {329371578}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {329371578}" -> "if origKeySize1 != -1 goto $b8 = 1 {341210388}";
"if origKeySize1 != -1 goto $b8 = 1 {341210388}" -> "$b8 = -1 {1450188720}";
"if origKeySize1 != -1 goto $b8 = 1 {341210388}" -> "$b8 = 1 {2036561041}";
"$b8 = -1 {1450188720}" -> "goto [?= return $b8] {1034867851}";
"goto [?= return $b8] {1034867851}" -> "return $b8 {1589268604}";
"$b8 = 1 {2036561041}" -> "return $b8 {1589268604}";
"$i9 = lengthof twoPartKey1 {562429318}" -> "$i10 = $i9 - 1 {790569265}";
"$i10 = $i9 - 1 {790569265}" -> "keySizeLen1 = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1257529526}";
"keySizeLen1 = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey1, $i10) {1257529526}" -> "$i11 = lengthof twoPartKey2 {791188247}";
"$i11 = lengthof twoPartKey2 {791188247}" -> "$i12 = $i11 - 1 {2081259124}";
"$i12 = $i11 - 1 {2081259124}" -> "keySizeLen2 = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {1536365384}";
"keySizeLen2 = staticinvoke <com.sleepycat.util.PackedInteger: int getReadIntLength(byte[],int)>(twoPartKey2, $i12) {1536365384}" -> "$i13 = lengthof twoPartKey1 {121810173}";
"$i13 = lengthof twoPartKey1 {121810173}" -> "$i14 = $i13 - keySize1 {947318962}";
"$i14 = $i13 - keySize1 {947318962}" -> "dataSize1 = $i14 - keySizeLen1 {647156623}";
"dataSize1 = $i14 - keySizeLen1 {647156623}" -> "$i15 = lengthof twoPartKey2 {262447163}";
"$i15 = lengthof twoPartKey2 {262447163}" -> "$i16 = $i15 - keySize2 {1678020169}";
"$i16 = $i15 - keySize2 {1678020169}" -> "dataSize2 = $i16 - keySizeLen2 {764544508}";
"dataSize2 = $i16 - keySizeLen2 {764544508}" -> "$r2 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {2036458717}";
"$r2 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {2036458717}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1146649482}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1146649482}" -> "if $r2 != null goto data1 = newarray (byte)[dataSize1] {827001270}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {827001270}" -> "dataCmp#99 = staticinvoke <com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {1378874471}";
"if $r2 != null goto data1 = newarray (byte)[dataSize1] {827001270}" -> "data1 = newarray (byte)[dataSize1] {446213304}";
"dataCmp#99 = staticinvoke <com.sleepycat.je.tree.Key: int compareUnsignedBytes(byte[],int,int,byte[],int,int)>(twoPartKey1, keySize1, dataSize1, twoPartKey2, keySize2, dataSize2) {1378874471}" -> "goto [?= return dataCmp#99] {1580034294}";
"goto [?= return dataCmp#99] {1580034294}" -> "return dataCmp#99 {1979988657}";
"data1 = newarray (byte)[dataSize1] {446213304}" -> "data2 = newarray (byte)[dataSize2] {1259059972}";
"data2 = newarray (byte)[dataSize2] {1259059972}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {23053593}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey1, keySize1, data1, 0, dataSize1) {23053593}" -> "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {2090669860}";
"staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(twoPartKey2, keySize2, data2, 0, dataSize2) {2090669860}" -> "$r3 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1087145396}";
"$r3 = this.<com.sleepycat.je.dbi.DupKeyData$TwoPartKeyComparator: java.util.Comparator duplicateComparator> {1087145396}" -> "dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1659619917}";
"dataCmp#99 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(data1, data2) {1659619917}" -> "return dataCmp#99 {1979988657}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {16521595}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {926991457}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {1817224251}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize2) {490588865}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {503757820}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {1461135417}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {2009766767}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(keyCmp#34) {1957024801}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(origKeySize1) {329371578}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2) {1146649482}"[fontcolor="blue", penwidth=3, color="blue"];
}


