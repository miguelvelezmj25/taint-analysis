    void <init>(org.prevayler.implementation.publishing.TransactionPublisher, org.prevayler.foundation.network.ObjectSocket) throws java.io.IOException
    {
        org.prevayler.implementation.replication.ServerConnection this;
        org.prevayler.implementation.publishing.TransactionPublisher publisher;
        org.prevayler.foundation.network.ObjectSocket remoteSocket;
        java.lang.Thread $r0;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        publisher := @parameter0: org.prevayler.implementation.publishing.TransactionPublisher;

        nop;

        remoteSocket := @parameter1: org.prevayler.foundation.network.ObjectSocket;

        nop;

        specialinvoke this.<java.lang.Thread: void <init>()>();

        nop;

        $r0 = specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: java.lang.Thread createClockTickSender()>();

        nop;

        this.<org.prevayler.implementation.replication.ServerConnection: java.lang.Thread _clockTickSender> = $r0;

        nop;

        this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.publishing.TransactionPublisher _publisher> = publisher;

        nop;

        this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote> = remoteSocket;

        nop;

        virtualinvoke this.<org.prevayler.implementation.replication.ServerConnection: void setDaemon(boolean)>(1);

        nop;

        virtualinvoke this.<org.prevayler.implementation.replication.ServerConnection: void start()>();

        nop;

        return;
    }

    private java.lang.Thread createClockTickSender()
    {
        org.prevayler.implementation.replication.ServerConnection this;
        org.prevayler.implementation.replication.ServerConnection$1 $r0;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        $r0 = new org.prevayler.implementation.replication.ServerConnection$1;

        nop;

        specialinvoke $r0.<org.prevayler.implementation.replication.ServerConnection$1: void <init>(org.prevayler.implementation.replication.ServerConnection)>(this);

        nop;

        return $r0;
    }

    public void run()
    {
        org.prevayler.implementation.replication.ServerConnection this;
        long initialTransaction;
        org.prevayler.implementation.publishing.POBox poBox, $r3;
        org.prevayler.foundation.network.ObjectSocket $r0;
        java.lang.Object $r1;
        java.lang.Long $r2;
        org.prevayler.implementation.publishing.TransactionPublisher $r4;
        java.io.IOException $r5, ex#19;
        java.lang.ClassNotFoundException $r6, ex#22;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

     label1:
        nop;

        $r0 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        $r1 = interfaceinvoke $r0.<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>();

        nop;

        $r2 = (java.lang.Long) $r1;

        nop;

        initialTransaction = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        nop;

        $r3 = new org.prevayler.implementation.publishing.POBox;

        nop;

        specialinvoke $r3.<org.prevayler.implementation.publishing.POBox: void <init>(org.prevayler.implementation.publishing.TransactionSubscriber)>(this);

        nop;

        poBox = $r3;

        nop;

        $r4 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.publishing.TransactionPublisher _publisher>;

        nop;

        interfaceinvoke $r4.<org.prevayler.implementation.publishing.TransactionPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>(poBox, initialTransaction);

        nop;

        virtualinvoke poBox.<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>();

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>("SubscriberUpToDate");

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>();

     label2:
        nop;

        virtualinvoke this.<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>();

        nop;

        goto label2;

     label3:
        nop;

        $r5 := @caughtexception;

        nop;

        ex#19 = $r5;

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void close()>();

        nop;

        goto label5;

     label4:
        nop;

        $r6 := @caughtexception;

        nop;

        ex#22 = $r6;

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void close()>();

     label5:
        nop;

        return;

        catch java.io.IOException from label1 to label3 with label3;
        catch java.lang.ClassNotFoundException from label1 to label3 with label4;
    }

    private void send(java.lang.Object)
    {
        org.prevayler.implementation.replication.ServerConnection this;
        java.lang.Object object;
        org.prevayler.foundation.network.ObjectSocket l2, $r0, $r1;
        java.io.IOException e, $r2;
        java.lang.Throwable l4, $r3;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        object := @parameter0: java.lang.Object;

        nop;

        $r0 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        l2 = $r0;

        nop;

        entermonitor $r0;

     label1:
        nop;

        $r1 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        interfaceinvoke $r1.<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>(object);

     label2:
        nop;

        goto label4;

     label3:
        nop;

        $r2 := @caughtexception;

        nop;

        e = $r2;

        nop;

        virtualinvoke e.<java.io.IOException: void printStackTrace()>();

     label4:
        nop;

        exitmonitor l2;

     label5:
        nop;

        goto label9;

     label6:
        nop;

        $r3 := @caughtexception;

     label7:
        nop;

        l4 = $r3;

        nop;

        exitmonitor l2;

     label8:
        nop;

        throw l4;

     label9:
        nop;

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void startSendingClockTicks()
    {
        org.prevayler.implementation.replication.ServerConnection this;
        java.lang.Thread $r0, $r1;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        $r0 = this.<org.prevayler.implementation.replication.ServerConnection: java.lang.Thread _clockTickSender>;

        nop;

        virtualinvoke $r0.<java.lang.Thread: void setDaemon(boolean)>(1);

        nop;

        $r1 = this.<org.prevayler.implementation.replication.ServerConnection: java.lang.Thread _clockTickSender>;

        nop;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        nop;

        return;
    }

    void publishRemoteTransaction() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.prevayler.implementation.replication.ServerConnection this;
        java.lang.RuntimeException rx, $r5;
        java.lang.Error error, $r6;
        org.prevayler.foundation.network.ObjectSocket $r0;
        java.lang.Object $r1;
        org.prevayler.implementation.Capsule $r2, $r4;
        org.prevayler.implementation.publishing.TransactionPublisher $r3;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        $r0 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        $r1 = interfaceinvoke $r0.<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>();

        nop;

        $r2 = (org.prevayler.implementation.Capsule) $r1;

        nop;

        this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.Capsule _remoteCapsule> = $r2;

     label1:
        nop;

        $r3 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.publishing.TransactionPublisher _publisher>;

        nop;

        $r4 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.Capsule _remoteCapsule>;

        nop;

        interfaceinvoke $r3.<org.prevayler.implementation.publishing.TransactionPublisher: void publish(org.prevayler.implementation.Capsule)>($r4);

     label2:
        nop;

        goto label5;

     label3:
        nop;

        $r5 := @caughtexception;

        nop;

        rx = $r5;

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>(rx);

        nop;

        goto label5;

     label4:
        nop;

        $r6 := @caughtexception;

        nop;

        error = $r6;

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>(error);

     label5:
        nop;

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }

    private synchronized void close()
    {
        org.prevayler.implementation.replication.ServerConnection this;
        java.lang.Thread $r0;
        org.prevayler.implementation.publishing.TransactionPublisher $r1;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        $r0 = this.<org.prevayler.implementation.replication.ServerConnection: java.lang.Thread _clockTickSender>;

        nop;

        virtualinvoke $r0.<java.lang.Thread: void interrupt()>();

        nop;

        virtualinvoke this.<org.prevayler.implementation.replication.ServerConnection: void interrupt()>();

        nop;

        $r1 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.publishing.TransactionPublisher _publisher>;

        nop;

        interfaceinvoke $r1.<org.prevayler.implementation.publishing.TransactionPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>(this);

        nop;

        return;
    }

    static void access$200(org.prevayler.implementation.replication.ServerConnection)
    {
        org.prevayler.implementation.replication.ServerConnection x0;

        nop;

        x0 := @parameter0: org.prevayler.implementation.replication.ServerConnection;

        nop;

        specialinvoke x0.<org.prevayler.implementation.replication.ServerConnection: void close()>();

        nop;

        return;
    }

    static org.prevayler.implementation.publishing.TransactionPublisher access$100(org.prevayler.implementation.replication.ServerConnection)
    {
        org.prevayler.implementation.replication.ServerConnection x0;
        org.prevayler.implementation.publishing.TransactionPublisher $r0;

        nop;

        x0 := @parameter0: org.prevayler.implementation.replication.ServerConnection;

        nop;

        $r0 = x0.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.publishing.TransactionPublisher _publisher>;

        nop;

        return $r0;
    }

    static org.prevayler.foundation.network.ObjectSocket access$000(org.prevayler.implementation.replication.ServerConnection)
    {
        org.prevayler.implementation.replication.ServerConnection x0;
        org.prevayler.foundation.network.ObjectSocket $r0;

        nop;

        x0 := @parameter0: org.prevayler.implementation.replication.ServerConnection;

        nop;

        $r0 = x0.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        return $r0;
    }

    public void receive(org.prevayler.implementation.TransactionTimestamp)
    {
        org.prevayler.implementation.replication.ServerConnection this;
        org.prevayler.foundation.network.ObjectSocket l2, $r4, $r5;
        java.lang.Throwable l3, $r6;
        java.io.IOException ex, $r7;
        org.prevayler.implementation.TransactionTimestamp tt#1, $r2;
        org.prevayler.implementation.Capsule $r0, $r1;
        long $l0;
        java.util.Date $r3;

        nop;

        this := @this: org.prevayler.implementation.replication.ServerConnection;

        nop;

        tt#1 := @parameter0: org.prevayler.implementation.TransactionTimestamp;

        nop;

        $r0 = virtualinvoke tt#1.<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>();

        nop;

        $r1 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.implementation.Capsule _remoteCapsule>;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        nop;

        if $r0 != $r1 goto label1;

        nop;

        $r2 = new org.prevayler.implementation.TransactionTimestamp;

        nop;

        $l0 = virtualinvoke tt#1.<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>();

        nop;

        $r3 = virtualinvoke tt#1.<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>();

        nop;

        specialinvoke $r2.<org.prevayler.implementation.TransactionTimestamp: void <init>(org.prevayler.implementation.Capsule,long,java.util.Date)>(null, $l0, $r3);

        nop;

        tt#1 = $r2;

     label1:
        nop;

        $r4 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        l2 = $r4;

        nop;

        entermonitor $r4;

     label2:
        nop;

        $r5 = this.<org.prevayler.implementation.replication.ServerConnection: org.prevayler.foundation.network.ObjectSocket _remote>;

        nop;

        interfaceinvoke $r5.<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>(tt#1);

        nop;

        exitmonitor l2;

     label3:
        nop;

        goto label7;

     label4:
        nop;

        $r6 := @caughtexception;

     label5:
        nop;

        l3 = $r6;

        nop;

        exitmonitor l2;

     label6:
        nop;

        throw l3;

     label7:
        nop;

        goto label9;

     label8:
        nop;

        $r7 := @caughtexception;

        nop;

        ex = $r7;

        nop;

        specialinvoke this.<org.prevayler.implementation.replication.ServerConnection: void close()>();

     label9:
        nop;

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.io.IOException from label1 to label7 with label8;
    }


