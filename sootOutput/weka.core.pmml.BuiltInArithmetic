    public void <init>(weka.core.pmml.BuiltInArithmetic$Operator)
    {
        weka.core.pmml.BuiltInArithmetic this;
        weka.core.pmml.BuiltInArithmetic$Operator op, $r0, $r1;
        java.lang.String $r2;

        this := @this: weka.core.pmml.BuiltInArithmetic;

        op := @parameter0: weka.core.pmml.BuiltInArithmetic$Operator;

        specialinvoke this.<weka.core.pmml.Function: void <init>()>();

        $r0 = <weka.core.pmml.BuiltInArithmetic$Operator: weka.core.pmml.BuiltInArithmetic$Operator ADDITION>;

        this.<weka.core.pmml.BuiltInArithmetic: weka.core.pmml.BuiltInArithmetic$Operator m_operator> = $r0;

        this.<weka.core.pmml.BuiltInArithmetic: weka.core.pmml.BuiltInArithmetic$Operator m_operator> = op;

        $r1 = this.<weka.core.pmml.BuiltInArithmetic: weka.core.pmml.BuiltInArithmetic$Operator m_operator>;

        $r2 = virtualinvoke $r1.<weka.core.pmml.BuiltInArithmetic$Operator: java.lang.String toString()>();

        this.<weka.core.pmml.BuiltInArithmetic: java.lang.String m_functionName> = $r2;

        return;
    }

    public weka.core.Attribute getOutputDef()
    {
        weka.core.pmml.BuiltInArithmetic this;
        weka.core.Attribute $r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        weka.core.pmml.BuiltInArithmetic$Operator $r3;
        java.lang.String $r4, $r6;

        this := @this: weka.core.pmml.BuiltInArithmetic;

        $r0 = new weka.core.Attribute;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BuiltInArithmeticResult:");

        $r3 = this.<weka.core.pmml.BuiltInArithmetic: weka.core.pmml.BuiltInArithmetic$Operator m_operator>;

        $r4 = virtualinvoke $r3.<weka.core.pmml.BuiltInArithmetic$Operator: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<weka.core.Attribute: void <init>(java.lang.String)>($r6);

        return $r0;
    }

    public void setParameterDefs(java.util.ArrayList) throws java.lang.Exception
    {
        weka.core.pmml.BuiltInArithmetic this;
        java.util.ArrayList paramDefs, $r0, $r4;
        int $i0, $i1;
        java.lang.Exception $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r7;

        this := @this: weka.core.pmml.BuiltInArithmetic;

        paramDefs := @parameter0: java.util.ArrayList;

        this.<weka.core.pmml.BuiltInArithmetic: java.util.ArrayList m_parameterDefs> = paramDefs;

        $r0 = this.<weka.core.pmml.BuiltInArithmetic: java.util.ArrayList m_parameterDefs>;

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 2 goto label1;

        $r1 = new java.lang.Exception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Arithmetic] wrong number of parameters. Recieved ");

        $r4 = this.<weka.core.pmml.BuiltInArithmetic: java.util.ArrayList m_parameterDefs>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected 2.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>($r7);

        throw $r1;

     label1:
        return;
    }

    public double getResult(double[]) throws java.lang.Exception
    {
        weka.core.pmml.BuiltInArithmetic this;
        double[] incoming;
        double result, $d0, $d1;
        java.util.ArrayList $r0, $r2;
        java.lang.Exception $r1, $r3;
        int $i0, $i1;
        weka.core.pmml.BuiltInArithmetic$Operator $r4;

        this := @this: weka.core.pmml.BuiltInArithmetic;

        incoming := @parameter0: double[];

        $r0 = this.<weka.core.pmml.BuiltInArithmetic: java.util.ArrayList m_parameterDefs>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        $r1 = new java.lang.Exception;

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>("[BuiltInArithmetic] incoming parameter structure has not been set!");

        throw $r1;

     label1:
        $r2 = this.<weka.core.pmml.BuiltInArithmetic: java.util.ArrayList m_parameterDefs>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 2 goto label2;

        $i1 = lengthof incoming;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 == 2 goto label3;

     label2:
        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("[BuiltInArithmetic] wrong number of parameters!");

        throw $r3;

     label3:
        $r4 = this.<weka.core.pmml.BuiltInArithmetic: weka.core.pmml.BuiltInArithmetic$Operator m_operator>;

        $d0 = incoming[0];

        $d1 = incoming[1];

        result = virtualinvoke $r4.<weka.core.pmml.BuiltInArithmetic$Operator: double eval(double,double)>($d0, $d1);

        return result;
    }


