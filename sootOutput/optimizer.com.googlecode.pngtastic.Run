    public static void main(java.lang.String[])
    {
        java.lang.String[] args, files#44, files#47;
        java.util.HashMap options, $r1;
        java.lang.String arg, toDir, fileSuffix, $r2, $r9, $r12, logLevel#88, compressor#90;
        int next, last#6, i#8, $i0, $i1, $i2, $i3;
        java.io.PrintStream $r0, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Object[] $r5;
        java.lang.Object $r8, $r10, $r11, $r13;
        java.lang.Boolean removeGamma#83;
        java.lang.Integer compressionLevel#86, iterations#93;
        optimizer.com.googlecode.pngtastic.PngtasticOptimizer $r14;

        args := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Original");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        options = $r1;

        last#6 = 0;

        i#8 = 0;

     label01:
        $i0 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#8 >= $i0 goto label04;

        arg = args[i#8];

        $z0 = virtualinvoke arg.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label03;

        next = i#8 + 1;

        $i1 = lengthof args;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(next);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if next >= $i1 goto label02;

        $r2 = args[next];

        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, $r2);

        last#6 = next + 1;

        goto label03;

     label02:
        interfaceinvoke options.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(arg, null);

        last#6 = next;

     label03:
        i#8 = i#8 + 1;

        goto label01;

     label04:
        $i2 = lengthof args;

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(args, last#6, $i2);

        files#44 = (java.lang.String[]) $r5;

        files#47 = newarray (java.lang.String)[1];

        files#47[0] = "/Users/mvelezce/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/pngtastic-optimizer/images/optimizer/car.png";

        $i3 = lengthof files#47;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 0 goto label05;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("No files to process");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("java -cp pngtastic-x.x.jar optimizer.com.googlecode.pngtastic.PngtasticOptimizer [options] file1 [file2 ..]\nOptions:\n  --toDir            the directory where optimized files go (will be created if it doesn\'t exist)\n  --fileSuffix       string appended to the optimized files (file.png can become file.png.optimized.png)\n  --removeGamma      remove gamma correction info if found\n  --compressionLevel the compression level; 0-9 allowed (default is to try them all by brute force)\n  --compressor       path to an alternate compressor (e.g. zopfli)\n  --iterations       number of compression iterations (useful for zopfli)\n  --logLevel         the level of logging output (none, debug, info, or error)\n");

        return;

     label05:
        $r8 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r8);

        if $r8 != null goto label06;

        $r9 = ".";

        goto label07;

     label06:
        $r10 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--toDir");

        $r9 = (java.lang.String) $r10;

     label07:
        toDir = $r9;

        $r11 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r11);

        if $r11 != null goto label08;

        $r12 = "";

        goto label09;

     label08:
        $r13 = interfaceinvoke options.<java.util.Map: java.lang.Object get(java.lang.Object)>("--fileSuffix");

        $r12 = (java.lang.String) $r13;

     label09:
        fileSuffix = $r12;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionREMOVEGAMMA(boolean)>(0);

        <optimizer.com.googlecode.pngtastic.Run: boolean REMOVEGAMMA> = $z1;

        $z2 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSIONLEVEL(boolean)>(0);

        <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSIONLEVEL> = $z2;

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSOR(boolean)>(1);

        <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSOR> = $z3;

        $z4 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionITERATIONS(boolean)>(0);

        <optimizer.com.googlecode.pngtastic.Run: boolean ITERATIONS> = $z4;

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionLOGLEVEL(boolean)>(0);

        <optimizer.com.googlecode.pngtastic.Run: boolean LOGLEVEL> = $z5;

        removeGamma#83 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        compressionLevel#86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        logLevel#88 = "none";

        compressor#90 = "none";

        iterations#93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z6 = <optimizer.com.googlecode.pngtastic.Run: boolean REMOVEGAMMA>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label10;

        removeGamma#83 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label10:
        $z7 = <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSIONLEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label11;

        compressionLevel#86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

     label11:
        $z8 = <optimizer.com.googlecode.pngtastic.Run: boolean COMPRESSOR>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label12;

        compressor#90 = "zopfli";

     label12:
        $z9 = <optimizer.com.googlecode.pngtastic.Run: boolean ITERATIONS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label13;

        iterations#93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

     label13:
        $z10 = <optimizer.com.googlecode.pngtastic.Run: boolean LOGLEVEL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label14;

        logLevel#88 = "debug";

     label14:
        $r14 = new optimizer.com.googlecode.pngtastic.PngtasticOptimizer;

        specialinvoke $r14.<optimizer.com.googlecode.pngtastic.PngtasticOptimizer: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>(toDir, files#47, fileSuffix, removeGamma#83, compressionLevel#86, compressor#90, iterations#93, logLevel#88);

        return;
    }

    public void <init>()
    {
        optimizer.com.googlecode.pngtastic.Run this;

        this := @this: optimizer.com.googlecode.pngtastic.Run;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


