    public static void main(java.lang.String[])
    {
        java.lang.String[] args, $r1;
        boolean isCheck, isMerge, isUnique, isIgnoreLeadingBlanks, isDictionaryOrder, isIgnoreCase, isNumericSort, isGeneralNumericSort, isHumanNumericSort, isMonthSort, isVersionSort, isReverse;
        java.lang.String anna, bible, big, don, shak, war, test;
        org.unix4j.sort.unix.sort.SortArguments sortArgs, $r0;
        org.unix4j.sort.unix.sort.SortCommand sort, $r2;
        org.unix4j.sort.context.DefaultExecutionContext executionContext, $r3;
        org.unix4j.sort.io.StdOutput out, $r4;
        org.unix4j.sort.processor.LineProcessor exec;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        isCheck = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsCheck(boolean)>(0);

        isMerge = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsMerge(boolean)>(0);

        isUnique = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsUnique(boolean)>(0);

        isIgnoreLeadingBlanks = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsIgnoreLeadingBlanks(boolean)>(0);

        isDictionaryOrder = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsDictionaryOrder(boolean)>(0);

        isIgnoreCase = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsIgnoreCase(boolean)>(0);

        isNumericSort = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsNumericSort(boolean)>(0);

        isGeneralNumericSort = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsGeneralNumericSort(boolean)>(0);

        isHumanNumericSort = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsHumanNumericSort(boolean)>(0);

        isMonthSort = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsMonthSort(boolean)>(0);

        isVersionSort = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsVersionSort(boolean)>(0);

        isReverse = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsReverse(boolean)>(0);

        anna = "anna.txt";

        bible = "bible.txt";

        big = "big.txt";

        don = "don.txt";

        shak = "shak.txt";

        war = "war.txt";

        test = "test.txt";

        $r0 = new org.unix4j.sort.unix.sort.SortArguments;

        specialinvoke $r0.<org.unix4j.sort.unix.sort.SortArguments: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)>(isCheck, isMerge, isUnique, isIgnoreLeadingBlanks, isDictionaryOrder, isIgnoreCase, isNumericSort, isGeneralNumericSort, isHumanNumericSort, isMonthSort, isVersionSort, isReverse);

        sortArgs = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = anna;

        $r1[1] = bible;

        $r1[2] = big;

        virtualinvoke sortArgs.<org.unix4j.sort.unix.sort.SortArguments: void setPaths(java.lang.String[])>($r1);

        $r2 = new org.unix4j.sort.unix.sort.SortCommand;

        specialinvoke $r2.<org.unix4j.sort.unix.sort.SortCommand: void <init>(org.unix4j.sort.unix.sort.SortArguments)>(sortArgs);

        sort = $r2;

        $r3 = new org.unix4j.sort.context.DefaultExecutionContext;

        specialinvoke $r3.<org.unix4j.sort.context.DefaultExecutionContext: void <init>()>();

        executionContext = $r3;

        $r4 = new org.unix4j.sort.io.StdOutput;

        specialinvoke $r4.<org.unix4j.sort.io.StdOutput: void <init>()>();

        out = $r4;

        exec = virtualinvoke sort.<org.unix4j.sort.unix.sort.SortCommand: org.unix4j.sort.processor.LineProcessor execute(org.unix4j.sort.context.ExecutionContext,org.unix4j.sort.processor.LineProcessor)>(executionContext, out);

        interfaceinvoke exec.<org.unix4j.sort.processor.LineProcessor: void finish()>();

        return;
    }

    public void <init>()
    {
        org.unix4j.sort.Main this;

        this := @this: org.unix4j.sort.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


