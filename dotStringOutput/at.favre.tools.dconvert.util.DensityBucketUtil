digraph getDensityBuckets {
"densities := @parameter0: java.util.List {1528168405}" -> "srcDimension := @parameter1: java.awt.Dimension {1487630387}";
"srcDimension := @parameter1: java.awt.Dimension {1487630387}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {2014100467}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {2014100467}" -> "scale := @parameter3: float {2003026095}";
"scale := @parameter3: float {2003026095}" -> "isNinePatch := @parameter4: boolean {2115835924}";
"isNinePatch := @parameter4: boolean {2115835924}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {1150535868}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {1150535868}" -> "if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {1334931282}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {1334931282}" -> "$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {180869447}";
"if isNinePatch == 0 goto $b0 = scale cmpl 0.0F {1334931282}" -> "$b0 = scale cmpl 0.0F {491739920}";
"$d0 = virtualinvoke srcDimension.<java.awt.Dimension: double getWidth()>() {180869447}" -> "$d1 = $d0 - 2.0 {740844136}";
"$d1 = $d0 - 2.0 {740844136}" -> "$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {2083694272}";
"$d2 = virtualinvoke srcDimension.<java.awt.Dimension: double getHeight()>() {2083694272}" -> "$d3 = $d2 - 2.0 {1772578419}";
"$d3 = $d2 - 2.0 {1772578419}" -> "virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {13289761}";
"virtualinvoke srcDimension.<java.awt.Dimension: void setSize(double,double)>($d1, $d3) {13289761}" -> "$b0 = scale cmpl 0.0F {491739920}";
"$b0 = scale cmpl 0.0F {491739920}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {1307230402}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {1307230402}" -> "if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1268386393}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1268386393}" -> "$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {275046663}";
"if $b0 >= 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1268386393}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1731950834}";
"$r0 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> {275046663}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1529456789}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1529456789}" -> "if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1997844416}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1997844416}" -> "$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {968179846}";
"if $r0 != null goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1997844416}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1731950834}";
"$z0 = args.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> {968179846}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {573292591}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {573292591}" -> "if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {250540654}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {250540654}" -> "$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {220025996}";
"if $z0 != 0 goto $r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {250540654}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1731950834}";
"$z1 = args.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> {220025996}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {662647143}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {662647143}" -> "if $z1 == 0 goto return null {507479257}";
"if $z1 == 0 goto return null {507479257}" -> "$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1731950834}";
"if $z1 == 0 goto return null {507479257}" -> "return null {459808328}";
"$r1 = <at.favre.tools.dconvert.util.DensityBucketUtil$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EScaleMode> {1731950834}" -> "$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {1835556593}";
"$r2 = args.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> {1835556593}" -> "$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {261297865}";
"$i1 = virtualinvoke $r2.<at.favre.tools.dconvert.arg.EScaleMode: int ordinal()>() {261297865}" -> "$i2 = $r1[$i1] {869466913}";
"$i2 = $r1[$i1] {869466913}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {2113129244}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {2113129244}" -> "tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {256477566}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {256477566}" -> "$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1537342877}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {256477566}" -> "$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1103617878}";
"tableswitch($i2) {     case 1: goto $r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 2: goto $r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     case 3: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale);     default: goto $r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale); } {256477566}" -> "$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {960311239}";
"$r3 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1537342877}" -> "return $r3 {344699571}";
"$r4 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsHeightDpScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {1103617878}" -> "return $r4 {987124637}";
"$r5 = staticinvoke <at.favre.tools.dconvert.util.DensityBucketUtil: java.util.Map getDensityBucketsWithFactorScale(java.util.List,java.awt.Dimension,at.favre.tools.dconvert.arg.Arguments,float)>(densities, srcDimension, args, scale) {960311239}" -> "return $r5 {76137956}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isNinePatch) {1150535868}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0) {1307230402}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {662647143}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {573292591}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {2113129244}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {1529456789}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getDensityBucketsWithFactorScale {
"densities := @parameter0: java.util.List {2072819507}" -> "srcDimension := @parameter1: java.awt.Dimension {599930514}";
"srcDimension := @parameter1: java.awt.Dimension {599930514}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1000170675}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {1000170675}" -> "scale := @parameter3: float {232258896}";
"scale := @parameter3: float {232258896}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {1831775007}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {1831775007}" -> "$d0 = (double) $i0 {1596061335}";
"$d0 = (double) $i0 {1596061335}" -> "$d1 = (double) scale {1435275275}";
"$d1 = (double) scale {1435275275}" -> "baseWidth = $d0 / $d1 {291374027}";
"baseWidth = $d0 / $d1 {291374027}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {1877924373}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {1877924373}" -> "$d2 = (double) $i1 {1029755095}";
"$d2 = (double) $i1 {1029755095}" -> "$d3 = (double) scale {1656078477}";
"$d3 = (double) scale {1656078477}" -> "baseHeight = $d2 / $d3 {305900295}";
"baseHeight = $d2 / $d3 {305900295}" -> "$r0 = new java.util.TreeMap {1590075493}";
"$r0 = new java.util.TreeMap {1590075493}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1190028946}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1190028946}" -> "bucketMap = $r0 {1851703231}";
"bucketMap = $r0 {1851703231}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {1933061693}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate3 {1933061693}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {1026408623}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate3: void <init>(at.favre.tools.dconvert.arg.Arguments,float)>(args, scale) {1026408623}" -> "predicate = $r1 {1636087615}";
"predicate = $r1 {1636087615}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {177918980}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer3 {177918980}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {2004663960}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer3: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,double,double)>(bucketMap, args, baseWidth, baseHeight) {2004663960}" -> "consumer = $r2 {1397732921}";
"consumer = $r2 {1397732921}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1157745103}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1157745103}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1405541669}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1405541669}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {377086515}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {377086515}" -> "return bucketMap {1023177480}";
}

digraph getDensityBucketsHeightDpScale {
"densities := @parameter0: java.util.List {25765797}" -> "srcDimension := @parameter1: java.awt.Dimension {166829609}";
"srcDimension := @parameter1: java.awt.Dimension {166829609}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {921227978}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {921227978}" -> "scale := @parameter3: float {2038380792}";
"scale := @parameter3: float {2038380792}" -> "$i0 = srcDimension.<java.awt.Dimension: int height> {1146415759}";
"$i0 = srcDimension.<java.awt.Dimension: int height> {1146415759}" -> "$f0 = (float) $i0 {2015886622}";
"$f0 = (float) $i0 {2015886622}" -> "scaleFactor = scale / $f0 {1497444098}";
"scaleFactor = scale / $f0 {1497444098}" -> "$i1 = srcDimension.<java.awt.Dimension: int width> {1006501638}";
"$i1 = srcDimension.<java.awt.Dimension: int width> {1006501638}" -> "$f1 = (float) $i1 {1068672712}";
"$f1 = (float) $i1 {1068672712}" -> "$f2 = scaleFactor * $f1 {1752275122}";
"$f2 = scaleFactor * $f1 {1752275122}" -> "$d0 = (double) $f2 {659066651}";
"$d0 = (double) $f2 {659066651}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {1931039035}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {1931039035}" -> "baseWidth = (int) $d1 {1588914698}";
"baseWidth = (int) $d1 {1588914698}" -> "$d2 = (double) scale {110124978}";
"$d2 = (double) scale {110124978}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {2139947472}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {2139947472}" -> "baseHeight = (int) $d3 {2109142025}";
"baseHeight = (int) $d3 {2109142025}" -> "$r0 = new java.util.TreeMap {1789065710}";
"$r0 = new java.util.TreeMap {1789065710}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1149543697}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {1149543697}" -> "bucketMap = $r0 {1942549144}";
"bucketMap = $r0 {1942549144}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {616908685}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate2 {616908685}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {1170421941}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate2: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseHeight, srcDimension) {1170421941}" -> "predicate = $r1 {380024079}";
"predicate = $r1 {380024079}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {643096416}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer2 {643096416}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1930395222}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer2: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1930395222}" -> "consumer = $r2 {758161075}";
"consumer = $r2 {758161075}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1789039574}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {1789039574}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1252130212}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {1252130212}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1804321332}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {1804321332}" -> "return bucketMap {609648285}";
}

digraph getDensityBucketsWithDpScale {
"densities := @parameter0: java.util.List {1922179202}" -> "srcDimension := @parameter1: java.awt.Dimension {1705287554}";
"srcDimension := @parameter1: java.awt.Dimension {1705287554}" -> "args := @parameter2: at.favre.tools.dconvert.arg.Arguments {229422338}";
"args := @parameter2: at.favre.tools.dconvert.arg.Arguments {229422338}" -> "scale := @parameter3: float {1962292063}";
"scale := @parameter3: float {1962292063}" -> "$i0 = srcDimension.<java.awt.Dimension: int width> {830268623}";
"$i0 = srcDimension.<java.awt.Dimension: int width> {830268623}" -> "$f0 = (float) $i0 {942894654}";
"$f0 = (float) $i0 {942894654}" -> "scaleFactor = scale / $f0 {1725065438}";
"scaleFactor = scale / $f0 {1725065438}" -> "$d0 = (double) scale {972545222}";
"$d0 = (double) scale {972545222}" -> "$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {1276565438}";
"$d1 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d0) {1276565438}" -> "baseWidth = (int) $d1 {766656797}";
"baseWidth = (int) $d1 {766656797}" -> "$i1 = srcDimension.<java.awt.Dimension: int height> {2063628883}";
"$i1 = srcDimension.<java.awt.Dimension: int height> {2063628883}" -> "$f1 = (float) $i1 {254349943}";
"$f1 = (float) $i1 {254349943}" -> "$f2 = scaleFactor * $f1 {1922675347}";
"$f2 = scaleFactor * $f1 {1922675347}" -> "$d2 = (double) $f2 {405492370}";
"$d2 = (double) $f2 {405492370}" -> "$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1619091750}";
"$d3 = virtualinvoke args.<at.favre.tools.dconvert.arg.Arguments: double round(double)>($d2) {1619091750}" -> "baseHeight = (int) $d3 {1513304308}";
"baseHeight = (int) $d3 {1513304308}" -> "$r0 = new java.util.TreeMap {835777221}";
"$r0 = new java.util.TreeMap {835777221}" -> "specialinvoke $r0.<java.util.TreeMap: void <init>()>() {525783434}";
"specialinvoke $r0.<java.util.TreeMap: void <init>()>() {525783434}" -> "bucketMap = $r0 {1792106895}";
"bucketMap = $r0 {1792106895}" -> "$r1 = new at.favre.tools.dconvert.util.MyPredicate {629715006}";
"$r1 = new at.favre.tools.dconvert.util.MyPredicate {629715006}" -> "specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {184084986}";
"specialinvoke $r1.<at.favre.tools.dconvert.util.MyPredicate: void <init>(at.favre.tools.dconvert.arg.Arguments,int,java.awt.Dimension)>(args, baseWidth, srcDimension) {184084986}" -> "predicate = $r1 {2076296573}";
"predicate = $r1 {2076296573}" -> "$r2 = new at.favre.tools.dconvert.util.MyConsumer {260600606}";
"$r2 = new at.favre.tools.dconvert.util.MyConsumer {260600606}" -> "specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1318151543}";
"specialinvoke $r2.<at.favre.tools.dconvert.util.MyConsumer: void <init>(java.util.Map,at.favre.tools.dconvert.arg.Arguments,int,int)>(bucketMap, args, baseWidth, baseHeight) {1318151543}" -> "consumer = $r2 {794493240}";
"consumer = $r2 {794493240}" -> "$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {917141937}";
"$r3 = interfaceinvoke densities.<java.util.List: java.util.stream.Stream stream()>() {917141937}" -> "$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {304377206}";
"$r4 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(predicate) {304377206}" -> "interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {749416110}";
"interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(consumer) {749416110}" -> "return bucketMap {2007968751}";
}


