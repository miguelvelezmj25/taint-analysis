    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: char[] digits> = $r0;

        return;
    }

    public void putNextEntry(edu.cmu.cs.mvelezce.zip.zipme.ZipEntry) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry, $r5;
        byte[] name, extra#165;
        java.io.UnsupportedEncodingException uee, $r8;
        java.util.Vector $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r1, $r2, $r3, $r4, $r11;
        int method#10, $i22, $i24, $i27, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        byte flags#12, $b1, $b3, $b7, $b10, $b12, $b14, $b16, $b18, $b20, $b23, $b25;
        long $l0, $l2, $l4, $l5, $l6, $l8, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l26, $l28, $l30;
        java.lang.String $r7, $r10;
        java.lang.Error $r9;
        java.io.OutputStream $r12, $r13;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r15;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        entry := @parameter0: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.util.Vector entries>;

        if $r0 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("ZipOutputStream was finished");

        throw $r1;

     label03:
        method#10 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int getMethod()>();

        flags#12 = 0;

        if method#10 != -1 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        method#10 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int defaultMethod>;

     label06:
        if method#10 != 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label23;

        $l0 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label16;

        $l2 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label11;

        $z8 = 1;

        goto label12;

     label11:
        $z8 = 0;

     label12:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label13;

        $l4 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setSize(long)>($l4);

        goto label17;

     label13:
        $l5 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $l6 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $b7 = $l5 cmp $l6;

        if $b7 == 0 goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label17;

        $r2 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Method STORED, but compressed size != size");

        throw $r2;

     label16:
        $l8 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCompressedSize(long)>($l8);

     label17:
        $l9 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $b10 = $l9 cmp 0L;

        if $b10 >= 0 goto label18;

        $z12 = 1;

        goto label19;

     label18:
        $z12 = 0;

     label19:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label20;

        $r3 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Method STORED, but size not set");

        throw $r3;

     label20:
        $l11 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $b12 = $l11 cmp 0L;

        if $b12 >= 0 goto label21;

        $z14 = 1;

        goto label22;

     label21:
        $z14 = 0;

     label22:
        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z14);

        if $z15 == 0 goto label29;

        $r4 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r4.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Method STORED, but crc not set");

        throw $r4;

     label23:
        if method#10 != 8 goto label24;

        $z16 = 1;

        goto label25;

     label24:
        $z16 = 0;

     label25:
        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z16);

        if $z17 == 0 goto label29;

        $l13 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $b14 = $l13 cmp 0L;

        if $b14 < 0 goto label26;

        $l15 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $b16 = $l15 cmp 0L;

        if $b16 < 0 goto label26;

        $l17 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $b18 = $l17 cmp 0L;

        if $b18 >= 0 goto label27;

     label26:
        $z18 = 1;

        goto label28;

     label27:
        $z18 = 0;

     label28:
        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z18);

        if $z19 == 0 goto label29;

        flags#12 = flags#12 | 8;

     label29:
        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        if $r5 == null goto label30;

        $z20 = 1;

        goto label31;

     label30:
        $z20 = 0;

     label31:
        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z20);

        if $z21 == 0 goto label32;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void closeEntry()>();

     label32:
        $l19 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getTime()>();

        $b20 = $l19 cmp 0L;

        if $b20 >= 0 goto label33;

        $z22 = 1;

        goto label34;

     label33:
        $z22 = 0;

     label34:
        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z22);

        if $z23 == 0 goto label35;

        $l21 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setTime(long)>($l21);

     label35:
        entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int flags> = flags#12;

        $i22 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset>;

        entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int offset> = $i22;

        virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setMethod(int)>(method#10);

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int curMethod> = method#10;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(long)>(67324752L);

        if method#10 != 0 goto label36;

        $b23 = 10;

        goto label37;

     label36:
        $b23 = 20;

     label37:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($b23);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(flags#12);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(method#10);

        $i24 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int getDOSTime()>();

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i24);

        $b25 = flags#12 & 8;

        if $b25 != 0 goto label38;

        $z24 = 1;

        goto label39;

     label38:
        $z24 = 0;

     label39:
        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z24);

        if $z25 == 0 goto label40;

        $l26 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $i27 = (int) $l26;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i27);

        $l28 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $i29 = (int) $l28;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i29);

        $l30 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $i31 = (int) $l30;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i31);

        goto label41;

     label40:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>(0);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>(0);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>(0);

     label41:
        $r7 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: java.lang.String getName()>();

        name = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label42:
        goto label44;

     label43:
        $r8 := @caughtexception;

        uee = $r8;

        $r9 = new java.lang.Error;

        $r10 = virtualinvoke uee.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>($r10);

        throw $r9;

     label44:
        $i32 = lengthof name;

        if $i32 <= 65535 goto label45;

        $z26 = 1;

        goto label46;

     label45:
        $z26 = 0;

     label46:
        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z26);

        if $z27 == 0 goto label47;

        $r11 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r11.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Name too long.");

        throw $r11;

     label47:
        extra#165 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: byte[] getExtra()>();

        if extra#165 != null goto label48;

        $z28 = 1;

        goto label49;

     label48:
        $z28 = 0;

     label49:
        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z28);

        if $z29 == 0 goto label50;

        extra#165 = newarray (byte)[0];

     label50:
        $i33 = lengthof name;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i33);

        $i34 = lengthof extra#165;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i34);

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>(name);

        $r13 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>(extra#165);

        $i35 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset>;

        $i36 = lengthof name;

        $i37 = 30 + $i36;

        $i38 = lengthof extra#165;

        $i39 = $i37 + $i38;

        $i40 = $i35 + $i39;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset> = $i40;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry> = entry;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook41()>();

        if method#10 != 8 goto label51;

        $z30 = 1;

        goto label52;

     label51:
        $z30 = 0;

     label52:
        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z30);

        if $z31 == 0 goto label53;

        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.Deflater def>;

        virtualinvoke $r15.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: void reset()>();

     label53:
        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size> = 0;

        return;

        catch java.io.UnsupportedEncodingException from label41 to label42 with label43;
    }

    public void closeEntry() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        int csize, $i0, $i1, $i2, $i5, $i8, $i11, $i20, $i21, $i22, $i23, $i24, $i26, $i28, $i30, $i31, $i32;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0, $r3, $r4, $r5, $r11, $r14, $r15, $r16, $r22, $r26, $r27, $r28, $r29, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r1, $r6, $r17;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r2;
        long $l3, $l6, $l7, $l9, $l12, $l13, $l15, $l16, $l17, $l19, $l25, $l27, $l29;
        byte $b4, $b10, $b14, $b18;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r18, $r19, $r20, $r21, $r23;
        java.lang.String $r13, $r24;
        java.util.Vector $r31;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        if $r0 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("No open entry");

        throw $r1;

     label03:
        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int curMethod>;

        if $i0 != 8 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void finish()>();

     label06:
        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int curMethod>;

        if $i1 != 8 goto label07;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.Deflater def>;

        $i2 = virtualinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: int getTotalOut()>();

        goto label08;

     label07:
        $i2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size>;

     label08:
        csize = $i2;

        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l3 = virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z4);

        if $z5 == 0 goto label11;

        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $i5 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size>;

        $l6 = (long) $i5;

        virtualinvoke $r4.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setSize(long)>($l6);

        goto label14;

     label11:
        $r5 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l7 = virtualinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $i8 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size>;

        $l9 = (long) $i8;

        $b10 = $l7 cmp $l9;

        if $b10 == 0 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z6);

        if $z7 == 0 goto label14;

        $r6 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size was ");

        $i11 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but I expected ");

        $r11 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l12 = virtualinvoke $r11.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label14:
        $r14 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l13 = virtualinvoke $r14.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $b14 = $l13 cmp 0L;

        if $b14 >= 0 goto label15;

        $z8 = 1;

        goto label16;

     label15:
        $z8 = 0;

     label16:
        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z8);

        if $z9 == 0 goto label17;

        $r15 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l15 = (long) csize;

        virtualinvoke $r15.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCompressedSize(long)>($l15);

        goto label20;

     label17:
        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l16 = virtualinvoke $r16.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $l17 = (long) csize;

        $b18 = $l16 cmp $l17;

        if $b18 == 0 goto label18;

        $z10 = 1;

        goto label19;

     label18:
        $z10 = 0;

     label19:
        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z10);

        if $z11 == 0 goto label20;

        $r17 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compressed size was ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(csize);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but I expected ");

        $r22 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l19 = virtualinvoke $r22.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>($r24);

        throw $r17;

     label20:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook42()>();

        $i20 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset>;

        $i21 = $i20 + csize;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset> = $i21;

        $i22 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int curMethod>;

        if $i22 != 8 goto label21;

        $r26 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $i23 = $r26.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int flags>;

        $i24 = $i23 & 8;

        if $i24 == 0 goto label21;

        $z12 = 1;

        goto label22;

     label21:
        $z12 = 0;

     label22:
        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z12);

        if $z13 == 0 goto label23;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(long)>(134695760L);

        $r27 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l25 = virtualinvoke $r27.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $i26 = (int) $l25;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i26);

        $r28 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l27 = virtualinvoke $r28.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $i28 = (int) $l27;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i28);

        $r29 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l29 = virtualinvoke $r29.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $i30 = (int) $l29;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i30);

        $i31 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset>;

        $i32 = $i31 + 16;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset> = $i32;

     label23:
        $r31 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.util.Vector entries>;

        $r32 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        virtualinvoke $r31.<java.util.Vector: void addElement(java.lang.Object)>($r32);

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry> = null;

        return;
    }

    private void writeLeInt(long) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        long value;
        int $i0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        value := @parameter0: long;

        $i0 = (int) value;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i0);

        return;
    }

    private void writeLeShort(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        int value, $i0, $i1, $i2;
        java.io.OutputStream $r0, $r1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        value := @parameter0: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        $i0 = value & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        $i1 = value >> 8;

        $i2 = $i1 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i2);

        return;
    }

    private void writeLeInt(int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        int value, $i0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        value := @parameter0: int;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(value);

        $i0 = value >> 16;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i0);

        return;
    }

    protected void hook41() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook41__role__DerivativeCompressCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook41__before__DerivativeCompressCRC()>();

     label2:
        return;
    }

    protected void hook41__role__DerivativeCompressCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void reset()>();

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook41__before__DerivativeCompressCRC()>();

        return;
    }

    protected void hook41__before__DerivativeCompressCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        return;
    }

    protected void hook42() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook42__role__DerivativeCompressCRC()>();

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook42__before__DerivativeCompressCRC()>();

     label2:
        return;
    }

    protected void hook42__role__DerivativeCompressCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0, $r1, $r3, $r12;
        long $l0, $l2, $l3, $l4, $l6, $l7;
        byte $b1, $b5;
        boolean $z0, $z1, $z2, $z3;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r2, $r4, $r8;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r5;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r14;
        java.lang.String $r9, $r13, $r15;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l0 = virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        $l2 = virtualinvoke $r2.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        virtualinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: void setCrc(long)>($l2);

        goto label6;

     label3:
        $r3 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l3 = virtualinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $r4 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        $l4 = virtualinvoke $r4.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label6;

        $r5 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crc was ");

        $r8 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        $l6 = virtualinvoke $r8.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: long getValue()>();

        $r9 = staticinvoke <edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.lang.String toHexString(long)>($l6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but I expected ");

        $r12 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        $l7 = virtualinvoke $r12.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $r13 = staticinvoke <edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.lang.String toHexString(long)>($l7);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>($r15);

        throw $r5;

     label6:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook42__before__DerivativeCompressCRC()>();

        return;
    }

    protected void hook42__before__DerivativeCompressCRC() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        return;
    }

    private static java.lang.String toHexString(long)
    {
        byte mask, $b0, $b3, $b8;
        char[] buffer, $r1;
        long num#1, $l2;
        int $i1, $i4, i#19, $i5, $i6, $i9;
        boolean $z0, $z1;
        java.lang.String $r0, $r2;
        char $c7;

        num#1 := @parameter0: long;

        $b0 = num#1 cmp 0L;

        if $b0 < 0 goto label1;

        $i1 = (int) num#1;

        $l2 = (long) $i1;

        $b3 = $l2 cmp num#1;

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $i4 = (int) num#1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        return $r0;

     label3:
        mask = 15;

        buffer = newarray (char)[64];

        i#19 = 64;

     label4:
        i#19 = i#19 + -1;

        $r1 = <edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: char[] digits>;

        $i5 = (int) num#1;

        $i6 = $i5 & mask;

        $c7 = $r1[$i6];

        buffer[i#19] = $c7;

        num#1 = num#1 >>> 4;

        $b8 = num#1 cmp 0L;

        if $b8 != 0 goto label4;

        $r2 = new java.lang.String;

        $i9 = 64 - i#19;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(buffer, i#19, $i9);

        return $r2;
    }

    public void <init>(java.io.OutputStream)
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        java.io.OutputStream out;
        edu.cmu.cs.mvelezce.zip.zipme.Deflater $r0;
        java.util.Vector $r1;
        byte[] $r2;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r3;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        out := @parameter0: java.io.OutputStream;

        $r0 = new edu.cmu.cs.mvelezce.zip.zipme.Deflater;

        specialinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.Deflater: void <init>(int,boolean)>(-1, 1);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void <init>(java.io.OutputStream,edu.cmu.cs.mvelezce.zip.zipme.Deflater)>(out, $r0);

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.util.Vector entries> = $r1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry> = null;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset> = 0;

        $r2 = newarray (byte)[0];

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: byte[] zipComment> = $r2;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int defaultMethod> = 8;

        $r3 = new edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        specialinvoke $r3.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc> = $r3;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        byte[] b;
        int off, len, $i0, $i1, $i2;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry $r0;
        boolean $z0, $z1;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r1;
        java.io.OutputStream $r2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        if $r0 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r1 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r1.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("No open entry.");

        throw $r1;

     label3:
        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int curMethod>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 8: goto label4;
            default: goto label6;
        };

     label4:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.DeflaterOutputStream: void write(byte[],int,int)>(b, off, len);

        goto label6;

     label5:
        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(b, off, len);

     label6:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook43(byte[],int,int)>(b, off, len);

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size>;

        $i2 = $i1 + len;

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int size> = $i2;

        return;
    }

    public void finish() throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        java.util.Enumeration e;
        edu.cmu.cs.mvelezce.zip.zipme.ZipEntry entry, $r1;
        int method, numEntries#11, sizeEntries#13, $i2, $i3, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        byte[] name, comment, extra#71, $r11, $r19, $r21;
        java.io.UnsupportedEncodingException uee, uee, $r7, $r12;
        java.lang.String str, $r6, $r9, $r14;
        java.util.Vector $r0, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Object $r3;
        byte $b0, $b1;
        long $l4, $l6, $l8;
        java.lang.Error $r8, $r13;
        edu.cmu.cs.mvelezce.zip.zipme.ZipException $r10, $r15;
        java.io.OutputStream $r16, $r17, $r18, $r20, $r22;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.util.Vector entries>;

        if $r0 != null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label03;

        return;

     label03:
        $r1 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.ZipEntry curEntry>;

        if $r1 == null goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z2);

        if $z3 == 0 goto label06;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void closeEntry()>();

     label06:
        numEntries#11 = 0;

        sizeEntries#13 = 0;

        $r2 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.util.Vector entries>;

        e = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label07:
        $z4 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label31;

        $r3 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>();

        entry = (edu.cmu.cs.mvelezce.zip.zipme.ZipEntry) $r3;

        method = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int getMethod()>();

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(long)>(33639248L);

        if method != 0 goto label08;

        $b0 = 10;

        goto label09;

     label08:
        $b0 = 20;

     label09:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($b0);

        if method != 0 goto label10;

        $b1 = 10;

        goto label11;

     label10:
        $b1 = 20;

     label11:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($b1);

        $i2 = entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int flags>;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i2);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(method);

        $i3 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int getDOSTime()>();

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i3);

        $l4 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCrc()>();

        $i5 = (int) $l4;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i5);

        $l6 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getCompressedSize()>();

        $i7 = (int) $l6;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i7);

        $l8 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: long getSize()>();

        $i9 = (int) $l8;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i9);

     label12:
        $r6 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: java.lang.String getName()>();

        name = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label13:
        goto label15;

     label14:
        $r7 := @caughtexception;

        uee = $r7;

        $r8 = new java.lang.Error;

        $r9 = virtualinvoke uee.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>($r9);

        throw $r8;

     label15:
        $i10 = lengthof name;

        if $i10 <= 65535 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        $z6 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z5);

        if $z6 == 0 goto label18;

        $r10 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r10.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Name too long.");

        throw $r10;

     label18:
        extra#71 = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: byte[] getExtra()>();

        if extra#71 != null goto label19;

        $z7 = 1;

        goto label20;

     label19:
        $z7 = 0;

     label20:
        $z8 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z7);

        if $z8 == 0 goto label21;

        extra#71 = newarray (byte)[0];

     label21:
        str = virtualinvoke entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: java.lang.String getComment()>();

     label22:
        if str == null goto label23;

        $r11 = virtualinvoke str.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        goto label24;

     label23:
        $r11 = newarray (byte)[0];

     label24:
        comment = $r11;

     label25:
        goto label27;

     label26:
        $r12 := @caughtexception;

        uee = $r12;

        $r13 = new java.lang.Error;

        $r14 = virtualinvoke uee.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>($r14);

        throw $r13;

     label27:
        $i11 = lengthof comment;

        if $i11 <= 65535 goto label28;

        $z9 = 1;

        goto label29;

     label28:
        $z9 = 0;

     label29:
        $z10 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z9);

        if $z10 == 0 goto label30;

        $r15 = new edu.cmu.cs.mvelezce.zip.zipme.ZipException;

        specialinvoke $r15.<edu.cmu.cs.mvelezce.zip.zipme.ZipException: void <init>(java.lang.String)>("Comment too long.");

        throw $r15;

     label30:
        $i12 = lengthof name;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i12);

        $i13 = lengthof extra#71;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i13);

        $i14 = lengthof comment;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i14);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(0);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(0);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>(0);

        $i15 = entry.<edu.cmu.cs.mvelezce.zip.zipme.ZipEntry: int offset>;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i15);

        $r16 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r16.<java.io.OutputStream: void write(byte[])>(name);

        $r17 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>(extra#71);

        $r18 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r18.<java.io.OutputStream: void write(byte[])>(comment);

        numEntries#11 = numEntries#11 + 1;

        $i16 = lengthof name;

        $i17 = 46 + $i16;

        $i18 = lengthof extra#71;

        $i19 = $i17 + $i18;

        $i20 = lengthof comment;

        $i21 = $i19 + $i20;

        sizeEntries#13 = sizeEntries#13 + $i21;

        goto label07;

     label31:
        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(long)>(101010256L);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(0);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(0);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(numEntries#11);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>(numEntries#11);

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>(sizeEntries#13);

        $i22 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: int offset>;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeInt(int)>($i22);

        $r19 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: byte[] zipComment>;

        $i23 = lengthof $r19;

        specialinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void writeLeShort(int)>($i23);

        $r20 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        $r21 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: byte[] zipComment>;

        virtualinvoke $r20.<java.io.OutputStream: void write(byte[])>($r21);

        $r22 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.io.OutputStream out>;

        virtualinvoke $r22.<java.io.OutputStream: void flush()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: java.util.Vector entries> = null;

        return;

        catch java.io.UnsupportedEncodingException from label12 to label13 with label14;
        catch java.io.UnsupportedEncodingException from label22 to label25 with label26;
    }

    protected void hook43(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        byte[] b;
        int off, len;
        boolean $z0, $z1;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $z0 = <edu.cmu.cs.mvelezce.zip.ZipMain: boolean FEATUREDerivativeCompressCRC>;

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label1;

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook43__role__DerivativeCompressCRC(byte[],int,int)>(b, off, len);

        goto label2;

     label1:
        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook43__before__DerivativeCompressCRC(byte[],int,int)>(b, off, len);

     label2:
        return;
    }

    protected void hook43__role__DerivativeCompressCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        byte[] b;
        int off, len;
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $r0 = this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: edu.cmu.cs.mvelezce.zip.zipme.CRC32 crc>;

        virtualinvoke $r0.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: void update(byte[],int,int)>(b, off, len);

        virtualinvoke this.<edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream: void hook43__before__DerivativeCompressCRC(byte[],int,int)>(b, off, len);

        return;
    }

    protected void hook43__before__DerivativeCompressCRC(byte[], int, int) throws java.io.IOException
    {
        edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream this;
        byte[] b;
        int off, len;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.ZipOutputStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        return;
    }


