    public void <init>(optimizer.com.googlecode.pngtastic.core.Logger)
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        optimizer.com.googlecode.pngtastic.core.Logger log;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        nop;

        log := @parameter0: optimizer.com.googlecode.pngtastic.core.Logger;

        nop;

        specialinvoke this.<java.lang.Object: void <init>()>();

        nop;

        this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: optimizer.com.googlecode.pngtastic.core.Logger log> = log;

        nop;

        return;
    }

    public void deFilter(byte[], byte[], int) throws optimizer.com.googlecode.pngtastic.core.PngException
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int sampleBitCount, result, $i2, $i3, $i4, $i5, $i6, previous#27, x#29, a#31, $i7, $i8, $i11, x#47, $i13, $i16, $i18, $i19, $i20, previous#69, x#71, a#73, $i21, $i22, $i29, $i30, $i31, $i33, $i34, $i35, previous#105, x#107, xp#109, $i36, $i38;
        optimizer.com.googlecode.pngtastic.core.PngFilterType filterType, previousFilterType;
        byte $b0, $b1, $b9, $b10, $b12, $b14, $b15, $b17, $b23, $b25, $b27, $b32, $b37, $b39, $b40, $b41;
        int[] $r0;
        short $s26, $s28;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        nop;

        line := @parameter0: byte[];

        nop;

        previousLine := @parameter1: byte[];

        nop;

        sampleBitCount := @parameter2: int;

        nop;

        $b0 = line[0];

        nop;

        filterType = staticinvoke <optimizer.com.googlecode.pngtastic.core.PngFilterType: optimizer.com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b0);

        nop;

        line[0] = 0;

        nop;

        $b1 = previousLine[0];

        nop;

        previousFilterType = staticinvoke <optimizer.com.googlecode.pngtastic.core.PngFilterType: optimizer.com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b1);

        nop;

        previousLine[0] = 0;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler$1: int[] $SwitchMap$optimizer$com$googlecode$pngtastic$core$PngFilterType>;

        nop;

        $i2 = virtualinvoke filterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: int ordinal()>();

        nop;

        $i3 = $r0[$i2];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        tableswitch($i3)
        {
            case 2: goto label01;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label14;
            default: goto label17;
        };

     label01:
        nop;

        $i4 = sampleBitCount / 8;

        nop;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        nop;

        $i6 = $i5 - 1;

        nop;

        previous#27 = neg $i6;

        nop;

        x#29 = 1;

        nop;

        a#31 = previous#27;

     label02:
        nop;

        $i7 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#29);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        if x#29 >= $i7 goto label05;

        nop;

        $i8 = x#29;

        nop;

        $b9 = line[x#29];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a#31);

        nop;

        if a#31 >= 0 goto label03;

        nop;

        $b10 = 0;

        nop;

        goto label04;

     label03:
        nop;

        $b10 = line[a#31];

     label04:
        nop;

        $i11 = $b9 + $b10;

        nop;

        $b12 = (byte) $i11;

        nop;

        line[$i8] = $b12;

        nop;

        x#29 = x#29 + 1;

        nop;

        a#31 = a#31 + 1;

        nop;

        goto label02;

     label05:
        nop;

        goto label17;

     label06:
        nop;

        x#47 = 1;

     label07:
        nop;

        $i13 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#47);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        nop;

        if x#47 >= $i13 goto label08;

        nop;

        $b14 = line[x#47];

        nop;

        $b15 = previousLine[x#47];

        nop;

        $i16 = $b14 + $b15;

        nop;

        $b17 = (byte) $i16;

        nop;

        line[x#47] = $b17;

        nop;

        x#47 = x#47 + 1;

        nop;

        goto label07;

     label08:
        nop;

        goto label17;

     label09:
        nop;

        $i18 = sampleBitCount / 8;

        nop;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i18);

        nop;

        $i20 = $i19 - 1;

        nop;

        previous#69 = neg $i20;

        nop;

        x#71 = 1;

        nop;

        a#73 = previous#69;

     label10:
        nop;

        $i21 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#71);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i21);

        nop;

        if x#71 >= $i21 goto label13;

        nop;

        $i22 = x#71;

        nop;

        $b23 = line[x#71];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a#73);

        nop;

        if a#73 >= 0 goto label11;

        nop;

        $b25 = 0;

        nop;

        goto label12;

     label11:
        nop;

        $b25 = line[a#73];

     label12:
        nop;

        $s26 = 255 & $b25;

        nop;

        $b27 = previousLine[x#71];

        nop;

        $s28 = 255 & $b27;

        nop;

        $i29 = $s26 + $s28;

        nop;

        $i30 = $i29 / 2;

        nop;

        $i31 = $b23 + $i30;

        nop;

        $b32 = (byte) $i31;

        nop;

        line[$i22] = $b32;

        nop;

        x#71 = x#71 + 1;

        nop;

        a#73 = a#73 + 1;

        nop;

        goto label10;

     label13:
        nop;

        goto label17;

     label14:
        nop;

        $i33 = sampleBitCount / 8;

        nop;

        $i34 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i33);

        nop;

        $i35 = $i34 - 1;

        nop;

        previous#105 = neg $i35;

        nop;

        x#107 = 1;

        nop;

        xp#109 = previous#105;

     label15:
        nop;

        $i36 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#107);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i36);

        nop;

        if x#107 >= $i36 goto label16;

        nop;

        result = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: int paethPredictor(byte[],byte[],int,int)>(line, previousLine, x#107, xp#109);

        nop;

        $b37 = line[x#107];

        nop;

        $i38 = $b37 + result;

        nop;

        $b39 = (byte) $i38;

        nop;

        line[x#107] = $b39;

        nop;

        x#107 = x#107 + 1;

        nop;

        xp#109 = xp#109 + 1;

        nop;

        goto label15;

     label16:
        nop;

        goto label17;

     label17:
        nop;

        $b40 = virtualinvoke filterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        nop;

        line[0] = $b40;

        nop;

        $b41 = virtualinvoke previousFilterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        nop;

        previousLine[0] = $b41;

        nop;

        return;
    }

    private int paethPredictor(byte[], byte[], int, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine;
        int x, xp, p, pa, pb, pc, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        short a, b, c, $s12;
        byte $b1, $b2, $b4;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        nop;

        line := @parameter0: byte[];

        nop;

        previousLine := @parameter1: byte[];

        nop;

        x := @parameter2: int;

        nop;

        xp := @parameter3: int;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(xp);

        nop;

        if xp >= 0 goto label01;

        nop;

        $b1 = 0;

        nop;

        goto label02;

     label01:
        nop;

        $b1 = line[xp];

     label02:
        nop;

        a = 255 & $b1;

        nop;

        $b2 = previousLine[x];

        nop;

        b = 255 & $b2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(xp);

        nop;

        if xp >= 0 goto label03;

        nop;

        $b4 = 0;

        nop;

        goto label04;

     label03:
        nop;

        $b4 = previousLine[xp];

     label04:
        nop;

        c = 255 & $b4;

        nop;

        $i5 = a + b;

        nop;

        p = $i5 - c;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(p);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a);

        nop;

        if p < a goto label05;

        nop;

        $i6 = p - a;

        nop;

        goto label06;

     label05:
        nop;

        $i7 = p - a;

        nop;

        $i6 = neg $i7;

     label06:
        nop;

        pa = $i6;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(p);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(b);

        nop;

        if p < b goto label07;

        nop;

        $i8 = p - b;

        nop;

        goto label08;

     label07:
        nop;

        $i9 = p - b;

        nop;

        $i8 = neg $i9;

     label08:
        nop;

        pb = $i8;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(p);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c);

        nop;

        if p < c goto label09;

        nop;

        $i10 = p - c;

        nop;

        goto label10;

     label09:
        nop;

        $i11 = p - c;

        nop;

        $i10 = neg $i11;

     label10:
        nop;

        pc = $i10;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pa);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pb);

        nop;

        if pa > pb goto label11;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pa);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pc);

        nop;

        if pa > pc goto label11;

        nop;

        return a;

     label11:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pb);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(pc);

        nop;

        if pb > pc goto label12;

        nop;

        $s12 = b;

        nop;

        goto label13;

     label12:
        nop;

        $s12 = c;

     label13:
        nop;

        return $s12;
    }

    public void applyAdaptiveFiltering(optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream, java.util.List, java.util.Map, int) throws java.io.IOException
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream inflatedImageData;
        java.util.List scanlines, $r3;
        java.util.Map filteredScanLines;
        int sampleSize, s#2, $i0, i#27, $i1, $i3;
        java.util.Iterator l9;
        java.util.Map$Entry entry;
        byte[] scanline, $r7;
        long bestSum#7, sum#19, $l4;
        optimizer.com.googlecode.pngtastic.core.PngFilterType bestFilterType#9;
        java.util.Set $r0;
        boolean $z0;
        java.lang.Object $r1, $r2, $r4, $r5, $r6;
        byte $b2, $b5, $b6;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        nop;

        inflatedImageData := @parameter0: optimizer.com.googlecode.pngtastic.core.processing.PngByteArrayOutputStream;

        nop;

        scanlines := @parameter1: java.util.List;

        nop;

        filteredScanLines := @parameter2: java.util.Map;

        nop;

        sampleSize := @parameter3: int;

        nop;

        s#2 = 0;

     label1:
        nop;

        $i0 = interfaceinvoke scanlines.<java.util.List: int size()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(s#2);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        nop;

        if s#2 >= $i0 goto label8;

        nop;

        bestSum#7 = 9223372036854775807L;

        nop;

        bestFilterType#9 = null;

        nop;

        $r0 = interfaceinvoke filteredScanLines.<java.util.Map: java.util.Set entrySet()>();

        nop;

        l9 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        nop;

        $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 == 0 goto label6;

        nop;

        $r1 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        nop;

        entry = (java.util.Map$Entry) $r1;

        nop;

        sum#19 = 0L;

        nop;

        $r2 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        nop;

        $r3 = (java.util.List) $r2;

        nop;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(s#2);

        nop;

        scanline = (byte[]) $r4;

        nop;

        i#27 = 1;

     label3:
        nop;

        $i1 = lengthof scanline;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#27);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        nop;

        if i#27 >= $i1 goto label4;

        nop;

        $b2 = scanline[i#27];

        nop;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($b2);

        nop;

        $l4 = (long) $i3;

        nop;

        sum#19 = sum#19 + $l4;

        nop;

        i#27 = i#27 + 1;

        nop;

        goto label3;

     label4:
        nop;

        $b5 = sum#19 cmp bestSum#7;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b5);

        nop;

        if $b5 >= 0 goto label5;

        nop;

        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        nop;

        bestFilterType#9 = (optimizer.com.googlecode.pngtastic.core.PngFilterType) $r5;

        nop;

        bestSum#7 = sum#19;

     label5:
        nop;

        goto label2;

     label6:
        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bestFilterType#9);

        nop;

        if bestFilterType#9 == null goto label7;

        nop;

        $r6 = interfaceinvoke scanlines.<java.util.List: java.lang.Object get(int)>(s#2);

        nop;

        $r7 = (byte[]) $r6;

        nop;

        $b6 = virtualinvoke bestFilterType#9.<optimizer.com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        nop;

        $r7[0] = $b6;

     label7:
        nop;

        s#2 = s#2 + 1;

        nop;

        goto label1;

     label8:
        nop;

        virtualinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: void applyFiltering(optimizer.com.googlecode.pngtastic.core.PngFilterType,java.util.List,int)>(null, scanlines, sampleSize);

        nop;

        return;
    }

    public void applyFiltering(optimizer.com.googlecode.pngtastic.core.PngFilterType, java.util.List, int)
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        optimizer.com.googlecode.pngtastic.core.PngFilterType filterType;
        java.util.List scanlines;
        int sampleBitCount, scanlineLength;
        java.util.Iterator l6;
        byte[] scanline, previous, $r1, previousRow#8;
        optimizer.com.googlecode.pngtastic.core.PngException e, $r4;
        java.lang.Object $r0, $r2, $r3;
        boolean $z0;
        byte $b0;
        optimizer.com.googlecode.pngtastic.core.Logger $r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        nop;

        filterType := @parameter0: optimizer.com.googlecode.pngtastic.core.PngFilterType;

        nop;

        scanlines := @parameter1: java.util.List;

        nop;

        sampleBitCount := @parameter2: int;

        nop;

        $r0 = interfaceinvoke scanlines.<java.util.List: java.lang.Object get(int)>(0);

        nop;

        $r1 = (byte[]) $r0;

        nop;

        scanlineLength = lengthof $r1;

        nop;

        previousRow#8 = newarray (byte)[scanlineLength];

        nop;

        l6 = interfaceinvoke scanlines.<java.util.List: java.util.Iterator iterator()>();

     label1:
        nop;

        $z0 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        nop;

        if $z0 == 0 goto label7;

        nop;

        $r2 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        nop;

        scanline = (byte[]) $r2;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(filterType);

        nop;

        if filterType == null goto label2;

        nop;

        $b0 = virtualinvoke filterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        nop;

        scanline[0] = $b0;

     label2:
        nop;

        $r3 = virtualinvoke scanline.<java.lang.Object: java.lang.Object clone()>();

        nop;

        previous = (byte[]) $r3;

     label3:
        nop;

        virtualinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: void filter(byte[],byte[],int)>(scanline, previousRow#8, sampleBitCount);

     label4:
        nop;

        goto label6;

     label5:
        nop;

        $r4 := @caughtexception;

        nop;

        e = $r4;

        nop;

        $r5 = this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: optimizer.com.googlecode.pngtastic.core.Logger log>;

        nop;

        $r6 = newarray (java.lang.Object)[1];

        nop;

        $r7 = virtualinvoke e.<optimizer.com.googlecode.pngtastic.core.PngException: java.lang.String getMessage()>();

        nop;

        $r6[0] = $r7;

        nop;

        virtualinvoke $r5.<optimizer.com.googlecode.pngtastic.core.Logger: void error(java.lang.String,java.lang.Object[])>("Error during filtering: %s", $r6);

     label6:
        nop;

        previousRow#8 = previous;

        nop;

        goto label1;

     label7:
        nop;

        return;

        catch optimizer.com.googlecode.pngtastic.core.PngException from label3 to label4 with label5;
    }

    public void filter(byte[], byte[], int) throws optimizer.com.googlecode.pngtastic.core.PngException
    {
        optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler this;
        byte[] line, previousLine, original#22, original#68, original#108;
        int sampleBitCount, result, $i2, $i3, $i4, $i5, $i6, previous#31, x#33, a#35, $i7, $i8, $i11, x#51, $i13, $i16, $i18, $i19, $i20, previous#77, x#79, a#81, $i21, $i22, $i25, $i30, $i31, $i32, $i34, $i35, $i36, previous#117, x#119, a#121, $i37, $i39;
        optimizer.com.googlecode.pngtastic.core.PngFilterType filterType, previousFilterType;
        byte $b0, $b1, $b9, $b10, $b12, $b14, $b15, $b17, $b23, $b26, $b28, $b33, $b38, $b40, $b41, $b42;
        int[] $r0;
        java.lang.Object $r1, $r3, $r6;
        short $s27, $s29;
        optimizer.com.googlecode.pngtastic.core.PngException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        nop;

        this := @this: optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler;

        nop;

        line := @parameter0: byte[];

        nop;

        previousLine := @parameter1: byte[];

        nop;

        sampleBitCount := @parameter2: int;

        nop;

        $b0 = line[0];

        nop;

        filterType = staticinvoke <optimizer.com.googlecode.pngtastic.core.PngFilterType: optimizer.com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b0);

        nop;

        line[0] = 0;

        nop;

        $b1 = previousLine[0];

        nop;

        previousFilterType = staticinvoke <optimizer.com.googlecode.pngtastic.core.PngFilterType: optimizer.com.googlecode.pngtastic.core.PngFilterType forValue(byte)>($b1);

        nop;

        previousLine[0] = 0;

        nop;

        $r0 = <optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler$1: int[] $SwitchMap$optimizer$com$googlecode$pngtastic$core$PngFilterType>;

        nop;

        $i2 = virtualinvoke filterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: int ordinal()>();

        nop;

        $i3 = $r0[$i2];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        nop;

        tableswitch($i3)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label07;
            case 4: goto label10;
            case 5: goto label15;
            default: goto label18;
        };

     label01:
        nop;

        goto label19;

     label02:
        nop;

        $r1 = virtualinvoke line.<java.lang.Object: java.lang.Object clone()>();

        nop;

        original#22 = (byte[]) $r1;

        nop;

        $i4 = sampleBitCount / 8;

        nop;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        nop;

        $i6 = $i5 - 1;

        nop;

        previous#31 = neg $i6;

        nop;

        x#33 = 1;

        nop;

        a#35 = previous#31;

     label03:
        nop;

        $i7 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#33);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        nop;

        if x#33 >= $i7 goto label06;

        nop;

        $i8 = x#33;

        nop;

        $b9 = original#22[x#33];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a#35);

        nop;

        if a#35 >= 0 goto label04;

        nop;

        $b10 = 0;

        nop;

        goto label05;

     label04:
        nop;

        $b10 = original#22[a#35];

     label05:
        nop;

        $i11 = $b9 - $b10;

        nop;

        $b12 = (byte) $i11;

        nop;

        line[$i8] = $b12;

        nop;

        x#33 = x#33 + 1;

        nop;

        a#35 = a#35 + 1;

        nop;

        goto label03;

     label06:
        nop;

        goto label19;

     label07:
        nop;

        x#51 = 1;

     label08:
        nop;

        $i13 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#51);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        nop;

        if x#51 >= $i13 goto label09;

        nop;

        $b14 = line[x#51];

        nop;

        $b15 = previousLine[x#51];

        nop;

        $i16 = $b14 - $b15;

        nop;

        $b17 = (byte) $i16;

        nop;

        line[x#51] = $b17;

        nop;

        x#51 = x#51 + 1;

        nop;

        goto label08;

     label09:
        nop;

        goto label19;

     label10:
        nop;

        $r3 = virtualinvoke line.<java.lang.Object: java.lang.Object clone()>();

        nop;

        original#68 = (byte[]) $r3;

        nop;

        $i18 = sampleBitCount / 8;

        nop;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i18);

        nop;

        $i20 = $i19 - 1;

        nop;

        previous#77 = neg $i20;

        nop;

        x#79 = 1;

        nop;

        a#81 = previous#77;

     label11:
        nop;

        $i21 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#79);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i21);

        nop;

        if x#79 >= $i21 goto label14;

        nop;

        $i22 = x#79;

        nop;

        $b23 = original#68[x#79];

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(a#81);

        nop;

        if a#81 >= 0 goto label12;

        nop;

        $i25 = 0;

        nop;

        goto label13;

     label12:
        nop;

        $i25 = a#81;

     label13:
        nop;

        $b26 = original#68[$i25];

        nop;

        $s27 = 255 & $b26;

        nop;

        $b28 = previousLine[x#79];

        nop;

        $s29 = 255 & $b28;

        nop;

        $i30 = $s27 + $s29;

        nop;

        $i31 = $i30 / 2;

        nop;

        $i32 = $b23 - $i31;

        nop;

        $b33 = (byte) $i32;

        nop;

        line[$i22] = $b33;

        nop;

        x#79 = x#79 + 1;

        nop;

        a#81 = a#81 + 1;

        nop;

        goto label11;

     label14:
        nop;

        goto label19;

     label15:
        nop;

        $r6 = virtualinvoke line.<java.lang.Object: java.lang.Object clone()>();

        nop;

        original#108 = (byte[]) $r6;

        nop;

        $i34 = sampleBitCount / 8;

        nop;

        $i35 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i34);

        nop;

        $i36 = $i35 - 1;

        nop;

        previous#117 = neg $i36;

        nop;

        x#119 = 1;

        nop;

        a#121 = previous#117;

     label16:
        nop;

        $i37 = lengthof line;

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#119);

        nop;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i37);

        nop;

        if x#119 >= $i37 goto label17;

        nop;

        result = specialinvoke this.<optimizer.com.googlecode.pngtastic.core.processing.PngtasticFilterHandler: int paethPredictor(byte[],byte[],int,int)>(original#108, previousLine, x#119, a#121);

        nop;

        $b38 = original#108[x#119];

        nop;

        $i39 = $b38 - result;

        nop;

        $b40 = (byte) $i39;

        nop;

        line[x#119] = $b40;

        nop;

        x#119 = x#119 + 1;

        nop;

        a#121 = a#121 + 1;

        nop;

        goto label16;

     label17:
        nop;

        goto label19;

     label18:
        nop;

        $r7 = new optimizer.com.googlecode.pngtastic.core.PngException;

        nop;

        $r8 = new java.lang.StringBuilder;

        nop;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        nop;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized filter type ");

        nop;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(filterType);

        nop;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        nop;

        specialinvoke $r7.<optimizer.com.googlecode.pngtastic.core.PngException: void <init>(java.lang.String)>($r11);

        nop;

        throw $r7;

     label19:
        nop;

        $b41 = virtualinvoke filterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        nop;

        line[0] = $b41;

        nop;

        $b42 = virtualinvoke previousFilterType.<optimizer.com.googlecode.pngtastic.core.PngFilterType: byte getValue()>();

        nop;

        previousLine[0] = $b42;

        nop;

        return;
    }


