    void <init>(com.sleepycat.je.evictor.Evictor)
    {
        com.sleepycat.je.evictor.Evictor$RootEvictor this;
        com.sleepycat.je.evictor.Evictor this$0;

        this := @this: com.sleepycat.je.evictor.Evictor$RootEvictor;

        this$0 := @parameter0: com.sleepycat.je.evictor.Evictor;

        this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.evictor.Evictor this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.evictor.Evictor$EvictionDebugStats stats> = null;

        this.<com.sleepycat.je.evictor.Evictor$RootEvictor: boolean flushed> = 0;

        this.<com.sleepycat.je.evictor.Evictor$RootEvictor: long evictedBytes> = 0L;

        return;
    }

    public com.sleepycat.je.tree.IN doWork(com.sleepycat.je.tree.ChildReference) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.evictor.Evictor$RootEvictor this;
        com.sleepycat.je.tree.ChildReference root;
        com.sleepycat.je.tree.IN rootIN, $r1;
        com.sleepycat.je.tree.Node $r0;
        boolean $z0, $z1;
        com.sleepycat.je.evictor.Evictor $r2;
        com.sleepycat.je.evictor.Evictor$EvictionSource $r3;
        com.sleepycat.je.evictor.Evictor$EvictionDebugStats $r4;
        long $l0;

        this := @this: com.sleepycat.je.evictor.Evictor$RootEvictor;

        root := @parameter0: com.sleepycat.je.tree.ChildReference;

        $r0 = virtualinvoke root.<com.sleepycat.je.tree.ChildReference: com.sleepycat.je.tree.Node getTarget()>();

        rootIN = (com.sleepycat.je.tree.IN) $r0;

        if rootIN != null goto label1;

        return null;

     label1:
        this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.tree.ChildReference rootRef> = root;

        virtualinvoke rootIN.<com.sleepycat.je.tree.IN: void latchNoUpdateLRU()>();

        $r1 = this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.tree.IN target>;

        if rootIN != $r1 goto label2;

        $z0 = virtualinvoke rootIN.<com.sleepycat.je.tree.IN: boolean isRoot()>();

        if $z0 == 0 goto label2;

        $r2 = this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.evictor.Evictor this$0>;

        $z1 = this.<com.sleepycat.je.evictor.Evictor$RootEvictor: boolean backgroundIO>;

        $r3 = this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.evictor.Evictor$EvictionSource source>;

        $r4 = this.<com.sleepycat.je.evictor.Evictor$RootEvictor: com.sleepycat.je.evictor.Evictor$EvictionDebugStats stats>;

        $l0 = staticinvoke <com.sleepycat.je.evictor.Evictor: long access$100(com.sleepycat.je.evictor.Evictor,com.sleepycat.je.evictor.Evictor$RootEvictor,com.sleepycat.je.tree.IN,com.sleepycat.je.tree.IN,int,boolean,com.sleepycat.je.evictor.Evictor$EvictionSource,com.sleepycat.je.evictor.Evictor$EvictionDebugStats)>($r2, this, null, null, -1, $z1, $r3, $r4);

        this.<com.sleepycat.je.evictor.Evictor$RootEvictor: long evictedBytes> = $l0;

        goto label3;

     label2:
        virtualinvoke rootIN.<com.sleepycat.je.tree.IN: void releaseLatch()>();

     label3:
        return null;
    }


