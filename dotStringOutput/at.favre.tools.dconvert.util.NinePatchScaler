digraph <init> {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1537672816}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {1517149724}";
"specialinvoke this.<java.lang.Object: void <init>()>() {1517149724}" -> "$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {55627778}";
"$r0 = new at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm {55627778}" -> "$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {1121715428}";
"$r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR> {1121715428}" -> "specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {1044597958}";
"specialinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ThumbnailnatorProgressiveAlgorithm: void <init>(java.lang.Object)>($r1) {1044597958}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1808322598}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> = $r0 {1808322598}" -> "return {1680381612}";
}

digraph scale {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {2109170316}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {2009508083}";
"inputImage := @parameter0: java.awt.image.BufferedImage {2009508083}" -> "dimensions := @parameter1: java.awt.Dimension {495569186}";
"dimensions := @parameter1: java.awt.Dimension {495569186}" -> "algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {2008420533}";
"algorithm := @parameter2: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm {2008420533}" -> "this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1747198746}";
"this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm algorithm> = algorithm {1747198746}" -> "trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {706634048}";
"trimmedImage#6 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage trim9PBorder(java.awt.image.BufferedImage)>(inputImage) {706634048}" -> "$i0 = dimensions.<java.awt.Dimension: int width> {842322758}";
"$i0 = dimensions.<java.awt.Dimension: int width> {842322758}" -> "$i1 = dimensions.<java.awt.Dimension: int height> {1190442837}";
"$i1 = dimensions.<java.awt.Dimension: int height> {1190442837}" -> "trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1528500401}";
"trimmedImage#14 = interfaceinvoke algorithm.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(trimmedImage#6, $i0, $i1) {1528500401}" -> "w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1457657379}";
"w = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getWidth()>() {1457657379}" -> "h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {877515736}";
"h = virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int getHeight()>() {877515736}" -> "borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {1227613657}";
"borderImage = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage generateBordersImage(java.awt.image.BufferedImage,int,int)>(inputImage, w, h) {1227613657}" -> "$i2 = w * h {1077039956}";
"$i2 = w * h {1077039956}" -> "rgbArray#28 = newarray (int)[$i2] {374835993}";
"rgbArray#28 = newarray (int)[$i2] {374835993}" -> "virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {252000465}";
"virtualinvoke trimmedImage#14.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgbArray#28, 0, w) {252000465}" -> "virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {1857517386}";
"virtualinvoke borderImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 1, w, h, rgbArray#28, 0, w) {1857517386}" -> "return borderImage {580329057}";
}

digraph trim9PBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1091449060}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {1793638904}";
"inputImage := @parameter0: java.awt.image.BufferedImage {1793638904}" -> "$r0 = new java.awt.image.BufferedImage {1881161679}";
"$r0 = new java.awt.image.BufferedImage {1881161679}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {2068512425}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {2068512425}" -> "$i1 = $i0 - 2 {524577733}";
"$i1 = $i0 - 2 {524577733}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1992161986}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1992161986}" -> "$i3 = $i2 - 2 {381209641}";
"$i3 = $i2 - 2 {381209641}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {1753875498}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i3, 2) {1753875498}" -> "trimedImage = $r0 {1367700312}";
"trimedImage = $r0 {1367700312}" -> "g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {771754112}";
"g = virtualinvoke trimedImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {771754112}" -> "$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {848183669}";
"$i4 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getWidth()>() {848183669}" -> "$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1698887451}";
"$i5 = virtualinvoke trimedImage.<java.awt.image.BufferedImage: int getHeight()>() {1698887451}" -> "$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {75070102}";
"$i6 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {75070102}" -> "$i7 = $i6 - 1 {1424331641}";
"$i7 = $i6 - 1 {1424331641}" -> "$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1506232011}";
"$i8 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1506232011}" -> "$i9 = $i8 - 1 {582263752}";
"$i9 = $i8 - 1 {582263752}" -> "virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {2025305875}";
"virtualinvoke g.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(inputImage, 0, 0, $i4, $i5, 1, 1, $i7, $i9, null) {2025305875}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {2089088352}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {2089088352}" -> "return trimedImage {305466078}";
}

digraph generateBordersImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1998447251}" -> "source := @parameter0: java.awt.image.BufferedImage {1672100397}";
"source := @parameter0: java.awt.image.BufferedImage {1672100397}" -> "trimedWidth := @parameter1: int {2001159362}";
"trimedWidth := @parameter1: int {2001159362}" -> "trimedHeight := @parameter2: int {158043855}";
"trimedHeight := @parameter2: int {158043855}" -> "$r0 = new java.awt.image.BufferedImage {446272241}";
"$r0 = new java.awt.image.BufferedImage {446272241}" -> "$i0 = trimedWidth + 2 {91465714}";
"$i0 = trimedWidth + 2 {91465714}" -> "$i1 = trimedHeight + 2 {1605822654}";
"$i1 = trimedHeight + 2 {1605822654}" -> "specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1038933829}";
"specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2) {1038933829}" -> "finalBorder = $r0 {102376250}";
"finalBorder = $r0 {102376250}" -> "$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1778733461}";
"$i2 = virtualinvoke source.<java.awt.image.BufferedImage: int getWidth()>() {1778733461}" -> "cutW = $i2 - 2 {1767891737}";
"cutW = $i2 - 2 {1767891737}" -> "$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {427247100}";
"$i3 = virtualinvoke source.<java.awt.image.BufferedImage: int getHeight()>() {427247100}" -> "cutH = $i3 - 2 {1685386656}";
"cutH = $i3 - 2 {1685386656}" -> "$r1 = new java.awt.image.BufferedImage {380491265}";
"$r1 = new java.awt.image.BufferedImage {380491265}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1870826083}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1870826083}" -> "leftBorder#23 = $r1 {2100188668}";
"leftBorder#23 = $r1 {2100188668}" -> "$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1790144903}";
"$r2 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 1, 1, cutH, null, 0, 1) {1790144903}" -> "virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1026464272}";
"virtualinvoke leftBorder#23.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r2, 0, 1) {1026464272}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {469470330}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(leftBorder#23) {469470330}" -> "leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {975055388}";
"leftBorder#47 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(leftBorder#23, 1, trimedHeight) {975055388}" -> "$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1319913304}";
"$r3 = virtualinvoke leftBorder#47.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1319913304}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {360442702}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 1, 1, trimedHeight, $r3, 0, 1) {360442702}" -> "$r4 = new java.awt.image.BufferedImage {969009214}";
"$r4 = new java.awt.image.BufferedImage {969009214}" -> "specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1069968715}";
"specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, cutH, 2) {1069968715}" -> "rightBorder#69 = $r4 {673166250}";
"rightBorder#69 = $r4 {673166250}" -> "$i4 = cutW + 1 {781799503}";
"$i4 = cutW + 1 {781799503}" -> "$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {960730470}";
"$r5 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>($i4, 1, 1, cutH, null, 0, 1) {960730470}" -> "virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1672206346}";
"virtualinvoke rightBorder#69.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, 1, cutH, $r5, 0, 1) {1672206346}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {2041333889}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(rightBorder#69) {2041333889}" -> "rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1576469269}";
"rightBorder#95 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(rightBorder#69, 1, trimedHeight) {1576469269}" -> "$i5 = trimedWidth + 1 {1009249693}";
"$i5 = trimedWidth + 1 {1009249693}" -> "$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1631445839}";
"$r6 = virtualinvoke rightBorder#95.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, 1, trimedHeight, null, 0, 1) {1631445839}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1405803993}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>($i5, 1, 1, trimedHeight, $r6, 0, 1) {1405803993}" -> "$r7 = new java.awt.image.BufferedImage {1566796660}";
"$r7 = new java.awt.image.BufferedImage {1566796660}" -> "specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {110891839}";
"specialinvoke $r7.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {110891839}" -> "topBorder#119 = $r7 {175318962}";
"topBorder#119 = $r7 {175318962}" -> "$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1250985963}";
"$r8 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, 0, cutW, 1, null, 0, cutW) {1250985963}" -> "virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {1962664132}";
"virtualinvoke topBorder#119.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r8, 0, cutW) {1962664132}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {1289494942}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(topBorder#119) {1289494942}" -> "topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1578381754}";
"topBorder#143 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(topBorder#119, trimedWidth, 1) {1578381754}" -> "$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1906674643}";
"$r9 = virtualinvoke topBorder#143.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1906674643}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {491290401}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, 0, trimedWidth, 1, $r9, 0, trimedWidth) {491290401}" -> "$r10 = new java.awt.image.BufferedImage {1080988744}";
"$r10 = new java.awt.image.BufferedImage {1080988744}" -> "specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1036549912}";
"specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(cutW, 1, 2) {1036549912}" -> "bottomBorder#165 = $r10 {490233687}";
"bottomBorder#165 = $r10 {490233687}" -> "$i6 = cutH + 1 {714300398}";
"$i6 = cutH + 1 {714300398}" -> "$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1274853545}";
"$r11 = virtualinvoke source.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(1, $i6, cutW, 1, null, 0, cutW) {1274853545}" -> "virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {299967834}";
"virtualinvoke bottomBorder#165.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, cutW, 1, $r11, 0, cutW) {299967834}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {886173090}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void verifyBorderImage(java.awt.image.BufferedImage)>(bottomBorder#165) {886173090}" -> "bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1313744958}";
"bottomBorder#191 = specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: java.awt.image.BufferedImage resizeBorder(java.awt.image.BufferedImage,int,int)>(bottomBorder#165, trimedWidth, 1) {1313744958}" -> "$i7 = trimedHeight + 1 {423190693}";
"$i7 = trimedHeight + 1 {423190693}" -> "$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1727800885}";
"$r12 = virtualinvoke bottomBorder#191.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, trimedWidth, 1, null, 0, trimedWidth) {1727800885}" -> "virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {1652302184}";
"virtualinvoke finalBorder.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(1, $i7, trimedWidth, 1, $r12, 0, trimedWidth) {1652302184}" -> "return finalBorder {1179554513}";
}

digraph verifyBorderImage {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1922581049}" -> "border := @parameter0: java.awt.image.BufferedImage {460840861}";
"border := @parameter0: java.awt.image.BufferedImage {460840861}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {326741974}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {326741974}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {626432128}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {626432128}" -> "$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {737749931}";
"$i2 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {737749931}" -> "rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {1946998268}";
"rgb = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, null, 0, $i2) {1946998268}" -> "i#12 = 0 {1823759452}";
"i#12 = 0 {1823759452}" -> "$i3 = lengthof rgb {249925902}";
"$i3 = lengthof rgb {249925902}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1386283583}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1386283583}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {2122393737}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {2122393737}" -> "if i#12 >= $i3 goto return {1090353714}";
"if i#12 >= $i3 goto return {1090353714}" -> "$i4 = rgb[i#12] {1206941980}";
"if i#12 >= $i3 goto return {1090353714}" -> "return {1349678810}";
"$i4 = rgb[i#12] {1206941980}" -> "$i5 = -16777216 & $i4 {1467477515}";
"$i5 = -16777216 & $i4 {1467477515}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {849741478}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {849741478}" -> "if $i5 == 0 goto i#12 = i#12 + 1 {1492861088}";
"if $i5 == 0 goto i#12 = i#12 + 1 {1492861088}" -> "$i6 = rgb[i#12] {635229344}";
"if $i5 == 0 goto i#12 = i#12 + 1 {1492861088}" -> "i#12 = i#12 + 1 {86079194}";
"$i6 = rgb[i#12] {635229344}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {1062328587}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {1062328587}" -> "if $i6 == -16777216 goto i#12 = i#12 + 1 {1358475756}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {1358475756}" -> "$i7 = rgb[i#12] {1638993314}";
"if $i6 == -16777216 goto i#12 = i#12 + 1 {1358475756}" -> "i#12 = i#12 + 1 {86079194}";
"$i7 = rgb[i#12] {1638993314}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1517214798}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1517214798}" -> "if $i7 == -65536 goto i#12 = i#12 + 1 {874817382}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {874817382}" -> "$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {1653771625}";
"if $i7 == -65536 goto i#12 = i#12 + 1 {874817382}" -> "i#12 = i#12 + 1 {86079194}";
"$r0 = new at.favre.tools.dconvert.exceptions.NinePatchException {1653771625}" -> "specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1646317750}";
"specialinvoke $r0.<at.favre.tools.dconvert.exceptions.NinePatchException: void <init>()>() {1646317750}" -> "throw $r0 {1940800515}";
"i#12 = i#12 + 1 {86079194}" -> "goto [?= $i3 = lengthof rgb] {875799946}";
"goto [?= $i3 = lengthof rgb] {875799946}" -> "$i3 = lengthof rgb {249925902}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {849741478}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1517214798}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3) {2122393737}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6) {1062328587}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#12) {1386283583}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph resizeBorder {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {839503739}" -> "border := @parameter0: java.awt.image.BufferedImage {310416233}";
"border := @parameter0: java.awt.image.BufferedImage {310416233}" -> "targetWidth := @parameter1: int {1061057345}";
"targetWidth := @parameter1: int {1061057345}" -> "targetHeight := @parameter2: int {258459014}";
"targetHeight := @parameter2: int {258459014}" -> "$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {108540740}";
"$i0 = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {108540740}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1616930759}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1616930759}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1722878895}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1722878895}" -> "if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1915752916}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1915752916}" -> "$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1370558851}";
"if targetWidth > $i0 goto $r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {1915752916}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {614717878}";
"$i1 = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {1370558851}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1864208892}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1864208892}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1858648107}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1858648107}" -> "if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {595395792}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {595395792}" -> "$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {614717878}";
"if targetHeight <= $i1 goto w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {595395792}" -> "w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1730574024}";
"$r0 = this.<at.favre.tools.dconvert.util.NinePatchScaler: at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm borderScalerAlgorithm> {614717878}" -> "endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {2128831504}";
"endImage = interfaceinvoke $r0.<at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm: java.awt.image.BufferedImage scale(java.awt.image.BufferedImage,int,int)>(border, targetWidth, targetHeight) {2128831504}" -> "specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {174512425}";
"specialinvoke this.<at.favre.tools.dconvert.util.NinePatchScaler: void enforceBorderColors(java.awt.image.BufferedImage)>(endImage) {174512425}" -> "return endImage {1403880849}";
"w = virtualinvoke border.<java.awt.image.BufferedImage: int getWidth()>() {1730574024}" -> "h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {153144139}";
"h = virtualinvoke border.<java.awt.image.BufferedImage: int getHeight()>() {153144139}" -> "data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {832481204}";
"data = virtualinvoke border.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, null, 0, w) {832481204}" -> "$i2 = targetWidth * targetHeight {1145372708}";
"$i2 = targetWidth * targetHeight {1145372708}" -> "newData = newarray (int)[$i2] {782653374}";
"newData = newarray (int)[$i2] {782653374}" -> "$i3 = targetWidth - 1 {2066268052}";
"$i3 = targetWidth - 1 {2066268052}" -> "$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {1419868965}";
"$i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1) {1419868965}" -> "$f0 = (float) $i4 {1243964237}";
"$f0 = (float) $i4 {1243964237}" -> "$i5 = w - 1 {876584362}";
"$i5 = w - 1 {876584362}" -> "$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {1554733044}";
"$i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1) {1554733044}" -> "$f1 = (float) $i6 {1925204621}";
"$f1 = (float) $i6 {1925204621}" -> "widthRatio = $f0 / $f1 {1678433845}";
"widthRatio = $f0 / $f1 {1678433845}" -> "$i7 = targetHeight - 1 {1605484435}";
"$i7 = targetHeight - 1 {1605484435}" -> "$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {173131310}";
"$i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 1) {173131310}" -> "$f2 = (float) $i8 {2146616137}";
"$f2 = (float) $i8 {2146616137}" -> "$i9 = h - 1 {93605175}";
"$i9 = h - 1 {93605175}" -> "$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {738775144}";
"$i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 1) {738775144}" -> "$f3 = (float) $i10 {690060011}";
"$f3 = (float) $i10 {690060011}" -> "heightRatio = $f2 / $f3 {557356304}";
"heightRatio = $f2 / $f3 {557356304}" -> "y#60 = 0 {1360587202}";
"y#60 = 0 {1360587202}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1336487891}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1336487891}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1303937974}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1303937974}" -> "if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {1476078347}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {1476078347}" -> "x#64 = 0 {929657145}";
"if y#60 >= h goto $r1 = new java.awt.image.BufferedImage {1476078347}" -> "$r1 = new java.awt.image.BufferedImage {606510984}";
"x#64 = 0 {929657145}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {234206314}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {234206314}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1677142536}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1677142536}" -> "if x#64 >= w goto y#60 = y#60 + 1 {1309813167}";
"if x#64 >= w goto y#60 = y#60 + 1 {1309813167}" -> "$i11 = y#60 * w {815934246}";
"if x#64 >= w goto y#60 = y#60 + 1 {1309813167}" -> "y#60 = y#60 + 1 {582786057}";
"$i11 = y#60 * w {815934246}" -> "$i12 = $i11 + x#64 {2044339072}";
"$i12 = $i11 + x#64 {2044339072}" -> "$i13 = data[$i12] {456471760}";
"$i13 = data[$i12] {456471760}" -> "$i14 = -16777216 & $i13 {988796811}";
"$i14 = -16777216 & $i13 {988796811}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {391303364}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {391303364}" -> "if $i14 == 0 goto x#64 = x#64 + 1 {1737079323}";
"if $i14 == 0 goto x#64 = x#64 + 1 {1737079323}" -> "$f4 = (float) x#64 {2110156241}";
"if $i14 == 0 goto x#64 = x#64 + 1 {1737079323}" -> "x#64 = x#64 + 1 {209795104}";
"$f4 = (float) x#64 {2110156241}" -> "$f5 = $f4 * widthRatio {321028654}";
"$f5 = $f4 * widthRatio {321028654}" -> "$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {1722447368}";
"$i15 = staticinvoke <java.lang.Math: int round(float)>($f5) {1722447368}" -> "$i16 = targetWidth - 1 {460231692}";
"$i16 = targetWidth - 1 {460231692}" -> "newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {702367803}";
"newX = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) {702367803}" -> "$f6 = (float) y#60 {1698965291}";
"$f6 = (float) y#60 {1698965291}" -> "$f7 = $f6 * heightRatio {483061089}";
"$f7 = $f6 * heightRatio {483061089}" -> "$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {967580343}";
"$i17 = staticinvoke <java.lang.Math: int round(float)>($f7) {967580343}" -> "$i18 = targetHeight - 1 {1179331414}";
"$i18 = targetHeight - 1 {1179331414}" -> "newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {1275177596}";
"newY = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18) {1275177596}" -> "$i19 = newY * targetWidth {826135292}";
"$i19 = newY * targetWidth {826135292}" -> "$i20 = $i19 + newX {151046135}";
"$i20 = $i19 + newX {151046135}" -> "$i21 = y#60 * w {1234573688}";
"$i21 = y#60 * w {1234573688}" -> "$i22 = $i21 + x#64 {987319098}";
"$i22 = $i21 + x#64 {987319098}" -> "$i23 = data[$i22] {1317147188}";
"$i23 = data[$i22] {1317147188}" -> "newData[$i20] = $i23 {925278021}";
"newData[$i20] = $i23 {925278021}" -> "x#64 = x#64 + 1 {209795104}";
"x#64 = x#64 + 1 {209795104}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {2096181777}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64)] {2096181777}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {234206314}";
"y#60 = y#60 + 1 {582786057}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {568587180}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60)] {568587180}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1336487891}";
"$r1 = new java.awt.image.BufferedImage {606510984}" -> "specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {2060907783}";
"specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(targetWidth, targetHeight, 2) {2060907783}" -> "img = $r1 {1137802975}";
"img = $r1 {1137802975}" -> "virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1850255256}";
"virtualinvoke img.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, targetWidth, targetHeight, newData, 0, targetWidth) {1850255256}" -> "return img {1349357247}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetHeight) {1864208892}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(y#60) {1336487891}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(x#64) {234206314}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(h) {1303937974}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(targetWidth) {1616930759}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1722878895}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {1858648107}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(w) {1677142536}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14) {391303364}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph enforceBorderColors {
"this := @this: at.favre.tools.dconvert.util.NinePatchScaler {1665498097}" -> "inputImage := @parameter0: java.awt.image.BufferedImage {891311001}";
"inputImage := @parameter0: java.awt.image.BufferedImage {891311001}" -> "g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1113185556}";
"g = virtualinvoke inputImage.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() {1113185556}" -> "$r0 = new java.awt.Color {158149530}";
"$r0 = new java.awt.Color {158149530}" -> "specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {719753484}";
"specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) {719753484}" -> "virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {1910684634}";
"virtualinvoke g.<java.awt.Graphics2D: void setBackground(java.awt.Color)>($r0) {1910684634}" -> "$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1622674030}";
"$i0 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {1622674030}" -> "$i1 = $i0 - 2 {2051847977}";
"$i1 = $i0 - 2 {2051847977}" -> "$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {543335445}";
"$i2 = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {543335445}" -> "$i3 = $i2 - 2 {817141988}";
"$i3 = $i2 - 2 {817141988}" -> "virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {2038209267}";
"virtualinvoke g.<java.awt.Graphics2D: void clearRect(int,int,int,int)>(1, 1, $i1, $i3) {2038209267}" -> "virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {389049794}";
"virtualinvoke g.<java.awt.Graphics2D: void dispose()>() {389049794}" -> "w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {409770546}";
"w = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getWidth()>() {409770546}" -> "h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1973461243}";
"h = virtualinvoke inputImage.<java.awt.image.BufferedImage: int getHeight()>() {1973461243}" -> "$i4 = w * h {574944506}";
"$i4 = w * h {574944506}" -> "rgb = newarray (int)[$i4] {1183485907}";
"rgb = newarray (int)[$i4] {1183485907}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {166801587}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {166801587}" -> "i#40 = 0 {952098959}";
"i#40 = 0 {952098959}" -> "$i5 = lengthof rgb {1654535936}";
"$i5 = lengthof rgb {1654535936}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1625740795}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1625740795}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1271148588}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1271148588}" -> "if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {627181636}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {627181636}" -> "$i6 = rgb[i#40] {1599206306}";
"if i#40 >= $i5 goto virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {627181636}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1988231040}";
"$i6 = rgb[i#40] {1599206306}" -> "$i7 = -16777216 & $i6 {1983408425}";
"$i7 = -16777216 & $i6 {1983408425}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1798474714}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1798474714}" -> "if $i7 == 0 goto i#40 = i#40 + 1 {8114785}";
"if $i7 == 0 goto i#40 = i#40 + 1 {8114785}" -> "rgb[i#40] = -16777216 {1990764108}";
"if $i7 == 0 goto i#40 = i#40 + 1 {8114785}" -> "i#40 = i#40 + 1 {212979507}";
"rgb[i#40] = -16777216 {1990764108}" -> "i#40 = i#40 + 1 {212979507}";
"i#40 = i#40 + 1 {212979507}" -> "goto [?= $i5 = lengthof rgb] {1202875528}";
"goto [?= $i5 = lengthof rgb] {1202875528}" -> "$i5 = lengthof rgb {1654535936}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, w, h, rgb, 0, w) {1988231040}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {1307856077}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, 0, 0) {1307856077}" -> "$i8 = h - 1 {388227087}";
"$i8 = h - 1 {388227087}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1347641350}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(0, $i8, 0) {1347641350}" -> "$i9 = w - 1 {554626931}";
"$i9 = w - 1 {554626931}" -> "$i10 = h - 1 {699784303}";
"$i10 = h - 1 {699784303}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {314929073}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i9, $i10, 0) {314929073}" -> "$i11 = w - 1 {957285056}";
"$i11 = w - 1 {957285056}" -> "virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1126068960}";
"virtualinvoke inputImage.<java.awt.image.BufferedImage: void setRGB(int,int,int)>($i11, 0, 0) {1126068960}" -> "return {46559553}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5) {1271148588}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7) {1798474714}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#40) {1625740795}"[fontcolor="blue", penwidth=3, color="blue"];
}


