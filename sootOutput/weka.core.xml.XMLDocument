    public void <init>() throws java.lang.Exception
    {
        weka.core.xml.XMLDocument this;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        javax.xml.xpath.XPathFactory $r1;
        javax.xml.xpath.XPath $r2;

        this := @this: weka.core.xml.XMLDocument;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilderFactory m_Factory> = null;

        this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilder m_Builder> = null;

        this.<weka.core.xml.XMLDocument: boolean m_Validating> = 0;

        this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document> = null;

        this.<weka.core.xml.XMLDocument: java.lang.String m_DocType> = null;

        this.<weka.core.xml.XMLDocument: java.lang.String m_RootNode> = null;

        this.<weka.core.xml.XMLDocument: javax.xml.xpath.XPath m_XPath> = null;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilderFactory m_Factory> = $r0;

        $r1 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance(java.lang.String)>("http://java.sun.com/jaxp/xpath/dom");

        $r2 = virtualinvoke $r1.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        this.<weka.core.xml.XMLDocument: javax.xml.xpath.XPath m_XPath> = $r2;

        virtualinvoke this.<weka.core.xml.XMLDocument: void setDocType(java.lang.String)>(null);

        virtualinvoke this.<weka.core.xml.XMLDocument: void setRootNode(java.lang.String)>(null);

        virtualinvoke this.<weka.core.xml.XMLDocument: void setValidating(boolean)>(0);

        return;
    }

    public void setDocType(java.lang.String)
    {
        weka.core.xml.XMLDocument this;
        java.lang.String docType;

        this := @this: weka.core.xml.XMLDocument;

        docType := @parameter0: java.lang.String;

        this.<weka.core.xml.XMLDocument: java.lang.String m_DocType> = docType;

        return;
    }

    public void setRootNode(java.lang.String)
    {
        weka.core.xml.XMLDocument this;
        java.lang.String rootNode;

        this := @this: weka.core.xml.XMLDocument;

        rootNode := @parameter0: java.lang.String;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(rootNode);

        if rootNode != null goto label1;

        this.<weka.core.xml.XMLDocument: java.lang.String m_RootNode> = "root";

        goto label2;

     label1:
        this.<weka.core.xml.XMLDocument: java.lang.String m_RootNode> = rootNode;

     label2:
        return;
    }

    public void setValidating(boolean) throws java.lang.Exception
    {
        weka.core.xml.XMLDocument this;
        boolean validating;
        javax.xml.parsers.DocumentBuilderFactory $r0, $r1;
        javax.xml.parsers.DocumentBuilder $r2;

        this := @this: weka.core.xml.XMLDocument;

        validating := @parameter0: boolean;

        this.<weka.core.xml.XMLDocument: boolean m_Validating> = validating;

        $r0 = this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilderFactory m_Factory>;

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(validating);

        $r1 = this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilderFactory m_Factory>;

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilder m_Builder> = $r2;

        virtualinvoke this.<weka.core.xml.XMLDocument: void clear()>();

        return;
    }

    public void clear()
    {
        weka.core.xml.XMLDocument this;
        java.lang.String $r0, $r1;

        this := @this: weka.core.xml.XMLDocument;

        $r0 = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.String getDocType()>();

        $r1 = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.String getRootNode()>();

        virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document newDocument(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    public java.lang.String getDocType()
    {
        weka.core.xml.XMLDocument this;
        java.lang.String $r0;

        this := @this: weka.core.xml.XMLDocument;

        $r0 = this.<weka.core.xml.XMLDocument: java.lang.String m_DocType>;

        return $r0;
    }

    public java.lang.String getRootNode()
    {
        weka.core.xml.XMLDocument this;
        java.lang.String $r0;

        this := @this: weka.core.xml.XMLDocument;

        $r0 = this.<weka.core.xml.XMLDocument: java.lang.String m_RootNode>;

        return $r0;
    }

    public org.w3c.dom.Document newDocument(java.lang.String, java.lang.String)
    {
        weka.core.xml.XMLDocument this;
        java.lang.String docType, rootNode;
        javax.xml.parsers.DocumentBuilder $r0;
        org.w3c.dom.Document $r1, $r2, $r3, $r6;
        org.w3c.dom.Element $r4;

        this := @this: weka.core.xml.XMLDocument;

        docType := @parameter0: java.lang.String;

        rootNode := @parameter1: java.lang.String;

        $r0 = virtualinvoke this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilder getBuilder()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document> = $r1;

        $r2 = this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document>;

        $r3 = this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(rootNode);

        interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        virtualinvoke this.<weka.core.xml.XMLDocument: void setDocType(java.lang.String)>(docType);

        $r6 = virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document getDocument()>();

        return $r6;
    }

    public javax.xml.parsers.DocumentBuilder getBuilder()
    {
        weka.core.xml.XMLDocument this;
        javax.xml.parsers.DocumentBuilder $r0;

        this := @this: weka.core.xml.XMLDocument;

        $r0 = this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilder m_Builder>;

        return $r0;
    }

    public org.w3c.dom.Document getDocument()
    {
        weka.core.xml.XMLDocument this;
        org.w3c.dom.Document $r0;

        this := @this: weka.core.xml.XMLDocument;

        $r0 = this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document>;

        return $r0;
    }

    public void write(java.io.OutputStream) throws java.lang.Exception
    {
        weka.core.xml.XMLDocument this;
        java.io.OutputStream stream;
        java.lang.String xml;
        byte[] $r0;
        int $i0;

        this := @this: weka.core.xml.XMLDocument;

        stream := @parameter0: java.io.OutputStream;

        xml = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.String toString()>();

        $r0 = virtualinvoke xml.<java.lang.String: byte[] getBytes()>();

        $i0 = virtualinvoke xml.<java.lang.String: int length()>();

        virtualinvoke stream.<java.io.OutputStream: void write(byte[],int,int)>($r0, 0, $i0);

        virtualinvoke stream.<java.io.OutputStream: void flush()>();

        return;
    }

    public java.lang.String toString()
    {
        weka.core.xml.XMLDocument this;
        java.lang.String header#2, $r0, $r3, $r10;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.StringBuffer $r6, $r9;
        org.w3c.dom.Document $r7;
        org.w3c.dom.Element $r8;

        this := @this: weka.core.xml.XMLDocument;

        header#2 = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n";

        $r0 = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.String getDocType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(header#2);

        $r3 = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.String getDocType()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        header#2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(header#2);

        $r7 = virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document getDocument()>();

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r9 = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.StringBuffer toString(java.lang.StringBuffer,org.w3c.dom.Node,int)>($r6, $r8, 0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    protected java.lang.StringBuffer toString(java.lang.StringBuffer, org.w3c.dom.Node, int)
    {
        weka.core.xml.XMLDocument this;
        java.lang.StringBuffer buf;
        org.w3c.dom.Node parent, node#76, $r38, $r40, node#139;
        int depth, i#4, n#69, $i2, $i3, n#132, $i5, $i6;
        org.w3c.dom.NamedNodeMap atts;
        org.w3c.dom.NodeList list;
        java.lang.String indent#2, $r3, $r4, $r7, $r8, $r11, $r16, $r19, $r24, $r26, $r30, $r33, $r36, $r41, $r42, $r46, $r49, $r56, $r59;
        java.lang.StringBuilder $r0, $r1, $r2, $r5, $r6, $r9, $r10, $r13, $r14, $r15, $r17, $r18, $r21, $r22, $r23, $r25, $r28, $r29, $r31, $r32, $r34, $r35, $r44, $r45, $r47, $r48, $r53, $r54, $r55, $r57, $r58;
        short $s0, $s1, $s4;
        boolean $z0, $z1, $z2;

        this := @this: weka.core.xml.XMLDocument;

        buf := @parameter0: java.lang.StringBuffer;

        parent := @parameter1: org.w3c.dom.Node;

        depth := @parameter2: int;

        indent#2 = "";

        i#4 = 0;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(depth);

        if i#4 >= depth goto label02;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent#2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        indent#2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i#4 = i#4 + 1;

        goto label01;

     label02:
        $s0 = interfaceinvoke parent.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s0);

        if $s0 != 3 goto label03;

        $r3 = interfaceinvoke parent.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label11;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent#2);

        $r7 = interfaceinvoke parent.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label11;

     label03:
        $s1 = interfaceinvoke parent.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if $s1 != 8 goto label04;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent#2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");

        $r16 = interfaceinvoke parent.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        goto label11;

     label04:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent#2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r24 = interfaceinvoke parent.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $z1 = interfaceinvoke parent.<org.w3c.dom.Node: boolean hasAttributes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label06;

        atts = interfaceinvoke parent.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        n#69 = 0;

     label05:
        $i2 = interfaceinvoke atts.<org.w3c.dom.NamedNodeMap: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#69);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if n#69 >= $i2 goto label06;

        node#76 = interfaceinvoke atts.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(n#69);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r30 = interfaceinvoke node#76.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r33 = interfaceinvoke node#76.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        n#69 = n#69 + 1;

        goto label05;

     label06:
        $z2 = interfaceinvoke parent.<org.w3c.dom.Node: boolean hasChildNodes()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label10;

        list = interfaceinvoke parent.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i3 = interfaceinvoke list.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 != 1 goto label07;

        $r38 = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $s4 = interfaceinvoke $r38.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s4);

        if $s4 != 3 goto label07;

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r40 = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r41 = interfaceinvoke $r40.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String trim()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r46 = interfaceinvoke parent.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        goto label11;

     label07:
        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        n#132 = 0;

     label08:
        $i5 = interfaceinvoke list.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#132);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if n#132 >= $i5 goto label09;

        node#139 = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(n#132);

        $i6 = depth + 1;

        virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.StringBuffer toString(java.lang.StringBuffer,org.w3c.dom.Node,int)>(buf, node#139, $i6);

        n#132 = n#132 + 1;

        goto label08;

     label09:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent#2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r56 = interfaceinvoke parent.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        goto label11;

     label10:
        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/>\n");

     label11:
        return buf;
    }

    public static java.lang.String getContent(org.w3c.dom.Element)
    {
        org.w3c.dom.Element node;
        org.w3c.dom.NodeList list;
        org.w3c.dom.Node item;
        java.lang.String result#2, $r2, $r4;
        int i#6, $i0;
        short $s1;
        java.lang.StringBuilder $r0, $r1, $r3;

        node := @parameter0: org.w3c.dom.Element;

        result#2 = "";

        list = interfaceinvoke node.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i#6 = 0;

     label1:
        $i0 = interfaceinvoke list.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#6 >= $i0 goto label3;

        item = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#6);

        $s1 = interfaceinvoke item.<org.w3c.dom.Node: short getNodeType()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s1);

        if $s1 != 3 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(result#2);

        $r2 = interfaceinvoke item.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        result#2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        i#6 = i#6 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke result#2.<java.lang.String: java.lang.String trim()>();

        return $r4;
    }

    public static java.util.Vector getChildTags(org.w3c.dom.Node)
    {
        org.w3c.dom.Node parent;
        java.util.Vector $r0;

        parent := @parameter0: org.w3c.dom.Node;

        $r0 = staticinvoke <weka.core.xml.XMLDocument: java.util.Vector getChildTags(org.w3c.dom.Node,java.lang.String)>(parent, "");

        return $r0;
    }

    public static java.util.Vector getChildTags(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.Node parent, $r1, $r2, $r5;
        java.lang.String name, $r4;
        java.util.Vector result, $r0;
        org.w3c.dom.NodeList list;
        int i#6, $i0, $i1;
        boolean $z0, $z1;
        org.w3c.dom.Element $r3, $r6;

        parent := @parameter0: org.w3c.dom.Node;

        name := @parameter1: java.lang.String;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        result = $r0;

        list = interfaceinvoke parent.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i#6 = 0;

     label1:
        $i0 = interfaceinvoke list.<org.w3c.dom.NodeList: int getLength()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#6 >= $i0 goto label5;

        $r1 = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#6);

        $z0 = $r1 instanceof org.w3c.dom.Element;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        $i1 = virtualinvoke name.<java.lang.String: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 == 0 goto label3;

        $r2 = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#6);

        $r3 = (org.w3c.dom.Element) $r2;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(name);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r5 = interfaceinvoke list.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i#6);

        $r6 = (org.w3c.dom.Element) $r5;

        virtualinvoke result.<java.util.Vector: boolean add(java.lang.Object)>($r6);

     label4:
        i#6 = i#6 + 1;

        goto label1;

     label5:
        return result;
    }

    public void setDocument(org.w3c.dom.Document)
    {
        weka.core.xml.XMLDocument this;
        org.w3c.dom.Document newDocument;

        this := @this: weka.core.xml.XMLDocument;

        newDocument := @parameter0: org.w3c.dom.Document;

        this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document> = newDocument;

        return;
    }

    public org.w3c.dom.Document read(java.lang.String) throws java.lang.Exception
    {
        weka.core.xml.XMLDocument this;
        java.lang.String xml, $r0;
        int $i0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        org.w3c.dom.Document $r3, $r5;
        java.io.File $r4;

        this := @this: weka.core.xml.XMLDocument;

        xml := @parameter0: java.lang.String;

        $r0 = virtualinvoke xml.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("<?xml");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 <= -1 goto label1;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke xml.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r3 = virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document read(java.io.InputStream)>($r1);

        return $r3;

     label1:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(xml);

        $r5 = virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document read(java.io.File)>($r4);

        return $r5;
    }

    public org.w3c.dom.Document read(java.io.InputStream) throws java.lang.Exception
    {
        weka.core.xml.XMLDocument this;
        java.io.InputStream stream;
        javax.xml.parsers.DocumentBuilder $r0;
        org.w3c.dom.Document $r1, $r2;

        this := @this: weka.core.xml.XMLDocument;

        stream := @parameter0: java.io.InputStream;

        $r0 = virtualinvoke this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilder getBuilder()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(stream);

        this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document> = $r1;

        $r2 = virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document getDocument()>();

        return $r2;
    }

    public org.w3c.dom.Document read(java.io.File) throws java.lang.Exception
    {
        weka.core.xml.XMLDocument this;
        java.io.File file;
        javax.xml.parsers.DocumentBuilder $r0;
        org.w3c.dom.Document $r1, $r2;

        this := @this: weka.core.xml.XMLDocument;

        file := @parameter0: java.io.File;

        $r0 = virtualinvoke this.<weka.core.xml.XMLDocument: javax.xml.parsers.DocumentBuilder getBuilder()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>(file);

        this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document> = $r1;

        $r2 = virtualinvoke this.<weka.core.xml.XMLDocument: org.w3c.dom.Document getDocument()>();

        return $r2;
    }

    public org.w3c.dom.NodeList findNodes(java.lang.String)
    {
        weka.core.xml.XMLDocument this;
        java.lang.String xpath;
        javax.xml.namespace.QName $r0;
        java.lang.Object $r1;
        org.w3c.dom.NodeList $r2;

        this := @this: weka.core.xml.XMLDocument;

        xpath := @parameter0: java.lang.String;

        $r0 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r1 = virtualinvoke this.<weka.core.xml.XMLDocument: java.lang.Object eval(java.lang.String,javax.xml.namespace.QName)>(xpath, $r0);

        $r2 = (org.w3c.dom.NodeList) $r1;

        return $r2;
    }

    protected java.lang.Object eval(java.lang.String, javax.xml.namespace.QName)
    {
        weka.core.xml.XMLDocument this;
        java.lang.String xpath;
        javax.xml.namespace.QName type;
        java.lang.Exception e, $r2;
        javax.xml.xpath.XPath $r0;
        org.w3c.dom.Document $r1;
        java.lang.Object result#6;

        this := @this: weka.core.xml.XMLDocument;

        xpath := @parameter0: java.lang.String;

        type := @parameter1: javax.xml.namespace.QName;

     label1:
        $r0 = this.<weka.core.xml.XMLDocument: javax.xml.xpath.XPath m_XPath>;

        $r1 = this.<weka.core.xml.XMLDocument: org.w3c.dom.Document m_Document>;

        result#6 = interfaceinvoke $r0.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>(xpath, $r1, type);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

        result#6 = null;

     label4:
        return result#6;

        catch java.lang.Exception from label1 to label2 with label3;
    }


