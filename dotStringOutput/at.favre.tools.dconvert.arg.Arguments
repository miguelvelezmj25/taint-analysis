digraph <clinit> {
"$r0 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy ROUND_HALF_UP> {1289196784}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {1092166082}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy DEFAULT_ROUNDING_STRATEGY> = $r0 {1092166082}" -> "$r1 = new java.util.HashSet {1868345553}";
"$r1 = new java.util.HashSet {1868345553}" -> "$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {904215904}";
"$r2 = newarray (at.favre.tools.dconvert.arg.EPlatform)[2] {904215904}" -> "$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {779911675}";
"$r3 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID> {779911675}" -> "$r2[0] = $r3 {544799672}";
"$r2[0] = $r3 {544799672}" -> "$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {957107370}";
"$r4 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform IOS> {957107370}" -> "$r2[1] = $r4 {1582224648}";
"$r2[1] = $r4 {1582224648}" -> "$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {742853960}";
"$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) {742853960}" -> "specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {1961457334}";
"specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5) {1961457334}" -> "<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {802885021}";
"<at.favre.tools.dconvert.arg.Arguments: java.util.Set DEFAULT_PLATFORM> = $r1 {802885021}" -> "$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {127237115}";
"$r6 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode SAME_AS_INPUT_PREF_PNG> {127237115}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {321653516}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode DEFAULT_OUT_COMPRESSION> = $r6 {321653516}" -> "$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {743412505}";
"$r7 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR> {743412505}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {1527760104}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode DEFAULT_SCALE_TYPE> = $r7 {1527760104}" -> "$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {2003384017}";
"$r8 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {2003384017}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {74331995}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_UPSCALING_QUALITY> = $r8 {74331995}" -> "$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {1424599956}";
"$r9 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3> {1424599956}" -> "<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1902386533}";
"<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm DEFAULT_DOWNSCALING_QUALITY> = $r9 {1902386533}" -> "return {1325756966}";
}

digraph getImageType {
"srcFile := @parameter0: java.io.File {1209526705}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {892389004}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(srcFile) {892389004}" -> "l2 = extension {1195765311}";
"l2 = extension {1195765311}" -> "l3#5 = -1 {1593228519}";
"l3#5 = -1 {1593228519}" -> "$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {1343842964}";
"$i0 = virtualinvoke l2.<java.lang.String: int hashCode()>() {1343842964}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1392434038}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1392434038}" -> "lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {1545022975}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {1655445751}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {1806991198}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {1588640130}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {287415819}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {1324748139}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {383439116}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {714973390}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {1193710184}";
"lookupswitch($i0) {     case 97669: goto $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\");     case 102340: goto $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\");     case 105441: goto $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\");     case 111145: goto $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\");     case 111297: goto $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\");     case 114276: goto $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\");     case 114833: goto $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\");     case 3268712: goto $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\");     case 3559925: goto $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\");     default: goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5); } {447685480}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpg\") {1806991198}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {213047793}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {213047793}" -> "if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {924272691}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {924272691}" -> "l3#5 = 0 {407364995}";
"if $z0 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {924272691}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 0 {407364995}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1354839898}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1354839898}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"jpeg\") {714973390}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1044240448}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1044240448}" -> "if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1941907744}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1941907744}" -> "l3#5 = 1 {2132656854}";
"if $z1 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1941907744}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 1 {2132656854}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {952210987}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {952210987}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"png\") {1588640130}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1662402458}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1662402458}" -> "if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1785990321}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1785990321}" -> "l3#5 = 2 {723382421}";
"if $z2 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1785990321}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 2 {723382421}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1891250397}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1891250397}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"svg\") {1324748139}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {159214227}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {159214227}" -> "if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1869344944}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1869344944}" -> "l3#5 = 3 {217193163}";
"if $z3 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1869344944}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 3 {217193163}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1913766763}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1913766763}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tif\") {383439116}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1539669705}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1539669705}" -> "if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1789678119}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1789678119}" -> "l3#5 = 4 {1301226623}";
"if $z4 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {1789678119}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 4 {1301226623}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {228449907}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {228449907}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"tiff\") {1193710184}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {644424785}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {644424785}" -> "if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {606839481}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {606839481}" -> "l3#5 = 5 {1633247697}";
"if $z5 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {606839481}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 5 {1633247697}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {304024128}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {304024128}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"psd\") {287415819}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {932239663}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {932239663}" -> "if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2064046949}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2064046949}" -> "l3#5 = 6 {137211236}";
"if $z6 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2064046949}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 6 {137211236}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {367111084}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {367111084}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"gif\") {1655445751}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {2135174060}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {2135174060}" -> "if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2055758789}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2055758789}" -> "l3#5 = 7 {1475881139}";
"if $z7 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {2055758789}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 7 {1475881139}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1435625755}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5)] {1435625755}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"$z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>(\"bmp\") {1545022975}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {1524857049}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {1524857049}" -> "if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {102026839}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {102026839}" -> "l3#5 = 8 {815568006}";
"if $z8 == 0 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {102026839}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"l3#5 = 8 {815568006}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}" -> "tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {1511257877}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {1382009554}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {1527979255}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {46097763}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {811595411}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {911110313}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {1332846186}";
"tableswitch(l3#5) {     case 0: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 1: goto $r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG>;     case 2: goto $r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG>;     case 3: goto $r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG>;     case 4: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 5: goto $r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF>;     case 6: goto $r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD>;     case 7: goto $r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF>;     case 8: goto $r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP>;     default: goto $r7 = new java.lang.IllegalArgumentException; } {1967600958}" -> "$r7 = new java.lang.IllegalArgumentException {1494044238}";
"$r0 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType JPG> {1511257877}" -> "return $r0 {243232885}";
"$r1 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PNG> {1382009554}" -> "return $r1 {519961442}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType SVG> {1527979255}" -> "return $r2 {781853496}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType TIFF> {46097763}" -> "return $r3 {1944631485}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType PSD> {811595411}" -> "return $r4 {1336115267}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType GIF> {911110313}" -> "return $r5 {13966221}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType BMP> {1332846186}" -> "return $r6 {470003295}";
"$r7 = new java.lang.IllegalArgumentException {1494044238}" -> "$r8 = new java.lang.StringBuilder {857558100}";
"$r8 = new java.lang.StringBuilder {857558100}" -> "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {1229784596}";
"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() {1229784596}" -> "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {417871596}";
"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown file extension \") {417871596}" -> "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {651802732}";
"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(extension) {651802732}" -> "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {857506687}";
"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" in srcFile \") {857506687}" -> "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1960659824}";
"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) {1960659824}" -> "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1246053578}";
"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() {1246053578}" -> "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {487928198}";
"specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) {487928198}" -> "throw $r7 {1720962327}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6) {932239663}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1044240448}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5) {644424785}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0) {1392434038}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8) {1524857049}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {159214227}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4) {1539669705}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#5) {328877120}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {213047793}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2) {1662402458}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7) {2135174060}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getOutCompressionForType {
"type := @parameter0: at.favre.tools.dconvert.arg.EOutputCompressionMode {922690459}" -> "imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {1515332191}";
"imageType := @parameter1: at.favre.tools.dconvert.arg.ImageType {1515332191}" -> "$r0 = new java.util.ArrayList {786781111}";
"$r0 = new java.util.ArrayList {786781111}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {1366745600}";
"specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2) {1366745600}" -> "list = $r0 {347303650}";
"list = $r0 {347303650}" -> "$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {251801167}";
"$r1 = <at.favre.tools.dconvert.arg.Arguments$1: int[] $SwitchMap$at$favre$tools$dconvert$arg$EOutputCompressionMode> {251801167}" -> "$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {1114572614}";
"$i0 = virtualinvoke type.<at.favre.tools.dconvert.arg.EOutputCompressionMode: int ordinal()>() {1114572614}" -> "$i1 = $r1[$i0] {1294251415}";
"$i1 = $r1[$i0] {1294251415}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {505254828}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {505254828}" -> "tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {352418897}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {1227351156}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {85528955}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {1883572694}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {554049881}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {312561606}";
"tableswitch($i1) {     case 1: goto $r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF>;     case 2: goto $r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG>;     case 3: goto $r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 4: goto $r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG>;     case 5: goto $r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP>;     case 6: goto $r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat>;     case 7: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>;     default: goto $r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict>; } {1397393962}" -> "$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {577797010}";
"$r2 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression GIF> {352418897}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {106333588}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r2) {106333588}" -> "goto [?= return list] {621963718}";
"goto [?= return list] {621963718}" -> "return list {763811487}";
"$r3 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {1227351156}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {1777744539}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r3) {1777744539}" -> "goto [?= return list] {745761803}";
"goto [?= return list] {745761803}" -> "return list {763811487}";
"$r4 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {85528955}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {1079473856}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r4) {1079473856}" -> "goto [?= return list] {1480639612}";
"goto [?= return list] {1480639612}" -> "return list {763811487}";
"$r5 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression JPG> {1883572694}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {1532125932}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5) {1532125932}" -> "$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {1821801575}";
"$r6 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression PNG> {1821801575}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {1771714103}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r6) {1771714103}" -> "goto [?= return list] {1119685981}";
"goto [?= return list] {1119685981}" -> "return list {763811487}";
"$r7 = <at.favre.tools.dconvert.arg.ImageType$ECompression: at.favre.tools.dconvert.arg.ImageType$ECompression BMP> {554049881}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {836823933}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r7) {836823933}" -> "goto [?= return list] {1104757005}";
"goto [?= return list] {1104757005}" -> "return list {763811487}";
"$r8 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionCompat> {312561606}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {1257925367}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r8) {1257925367}" -> "goto [?= return list] {722136171}";
"goto [?= return list] {722136171}" -> "return list {763811487}";
"$r9 = imageType.<at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType$ECompression outCompressionStrict> {577797010}" -> "interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {41362502}";
"interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r9) {41362502}" -> "return list {763811487}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1) {505254828}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: at.favre.tools.dconvert.arg.Arguments {1722550333}" -> "src := @parameter0: java.io.File {1341939464}";
"src := @parameter0: java.io.File {1341939464}" -> "dst := @parameter1: java.io.File {1766648629}";
"dst := @parameter1: java.io.File {1766648629}" -> "scale := @parameter2: float {2022183533}";
"scale := @parameter2: float {2022183533}" -> "platform := @parameter3: java.util.Set {649869961}";
"platform := @parameter3: java.util.Set {649869961}" -> "outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1132305567}";
"outputCompressionMode := @parameter4: at.favre.tools.dconvert.arg.EOutputCompressionMode {1132305567}" -> "scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {397008337}";
"scaleMode := @parameter5: at.favre.tools.dconvert.arg.EScaleMode {397008337}" -> "downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {878351035}";
"downScalingAlgorithm := @parameter6: at.favre.tools.dconvert.arg.EScalingAlgorithm {878351035}" -> "upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {198016713}";
"upScalingAlgorithm := @parameter7: at.favre.tools.dconvert.arg.EScalingAlgorithm {198016713}" -> "compressionQuality := @parameter8: float {320339359}";
"compressionQuality := @parameter8: float {320339359}" -> "threadCount := @parameter9: int {979817612}";
"threadCount := @parameter9: int {979817612}" -> "skipExistingFiles := @parameter10: boolean {646548006}";
"skipExistingFiles := @parameter10: boolean {646548006}" -> "skipUpscaling := @parameter11: boolean {509555931}";
"skipUpscaling := @parameter11: boolean {509555931}" -> "verboseLog := @parameter12: boolean {224785740}";
"verboseLog := @parameter12: boolean {224785740}" -> "includeAndroidLdpiTvdpi := @parameter13: boolean {1920446211}";
"includeAndroidLdpiTvdpi := @parameter13: boolean {1920446211}" -> "haltOnError := @parameter14: boolean {189737921}";
"haltOnError := @parameter14: boolean {189737921}" -> "createMipMapInsteadOfDrawableDir := @parameter15: boolean {486163842}";
"createMipMapInsteadOfDrawableDir := @parameter15: boolean {486163842}" -> "iosCreateImagesetFolders := @parameter16: boolean {1419798431}";
"iosCreateImagesetFolders := @parameter16: boolean {1419798431}" -> "enablePngCrush := @parameter17: boolean {515672950}";
"enablePngCrush := @parameter17: boolean {515672950}" -> "enableMozJpeg := @parameter18: boolean {1971665076}";
"enableMozJpeg := @parameter18: boolean {1971665076}" -> "postConvertWebp := @parameter19: boolean {2144989566}";
"postConvertWebp := @parameter19: boolean {2144989566}" -> "enableAntiAliasing := @parameter20: boolean {1890043156}";
"enableAntiAliasing := @parameter20: boolean {1890043156}" -> "dryRun := @parameter21: boolean {1690947348}";
"dryRun := @parameter21: boolean {1690947348}" -> "keepUnoptimizedFilesPostProcessor := @parameter22: boolean {1577231787}";
"keepUnoptimizedFilesPostProcessor := @parameter22: boolean {1577231787}" -> "roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {2081259738}";
"roundingHandler := @parameter23: at.favre.tools.dconvert.arg.RoundingHandler$Strategy {2081259738}" -> "guiAdvancedOptions := @parameter24: boolean {1036952391}";
"guiAdvancedOptions := @parameter24: boolean {1036952391}" -> "clearDirBeforeConvert := @parameter25: boolean {1233427960}";
"clearDirBeforeConvert := @parameter25: boolean {1233427960}" -> "scaleIsHeightdp := @parameter26: boolean {619273473}";
"scaleIsHeightdp := @parameter26: boolean {619273473}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {720788169}";
"specialinvoke this.<java.lang.Object: void <init>()>() {720788169}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {13481847}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File dst> = dst {13481847}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {916536548}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.io.File src> = src {916536548}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {1236465457}";
"this.<at.favre.tools.dconvert.arg.Arguments: float scale> = scale {1236465457}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {1844336835}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.Set platform> = platform {1844336835}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {2008730871}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EOutputCompressionMode outputCompressionMode> = outputCompressionMode {2008730871}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {2120929418}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScaleMode scaleMode> = scaleMode {2120929418}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {1972393201}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm downScalingAlgorithm> = downScalingAlgorithm {1972393201}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {1064209275}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.EScalingAlgorithm upScalingAlgorithm> = upScalingAlgorithm {1064209275}" -> "this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {1132524077}";
"this.<at.favre.tools.dconvert.arg.Arguments: float compressionQuality> = compressionQuality {1132524077}" -> "this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {541563809}";
"this.<at.favre.tools.dconvert.arg.Arguments: int threadCount> = threadCount {541563809}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {439107308}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipExistingFiles> = skipExistingFiles {439107308}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {1938872557}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean skipUpscaling> = skipUpscaling {1938872557}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {1308725447}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean verboseLog> = verboseLog {1308725447}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {595183124}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean includeAndroidLdpiTvdpi> = includeAndroidLdpiTvdpi {595183124}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {1940317309}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean haltOnError> = haltOnError {1940317309}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {902185225}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean createMipMapInsteadOfDrawableDir> = createMipMapInsteadOfDrawableDir {902185225}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {1737984927}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean iosCreateImagesetFolders> = iosCreateImagesetFolders {1737984927}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {1638670534}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enablePngCrush> = enablePngCrush {1638670534}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {69479256}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableMozJpeg> = enableMozJpeg {69479256}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {1840789298}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean postConvertWebp> = postConvertWebp {1840789298}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {32478266}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean enableAntiAliasing> = enableAntiAliasing {32478266}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {1862327818}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean dryRun> = dryRun {1862327818}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {995204368}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean keepUnoptimizedFilesPostProcessor> = keepUnoptimizedFilesPostProcessor {995204368}" -> "this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {964323904}";
"this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> = roundingHandler {964323904}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {452387285}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean guiAdvancedOptions> = guiAdvancedOptions {452387285}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {920245469}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean clearDirBeforeConvert> = clearDirBeforeConvert {920245469}" -> "this.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> = scaleIsHeightdp {214547355}";
"this.<at.favre.tools.dconvert.arg.Arguments: boolean scaleIsHeightdp> = scaleIsHeightdp {214547355}" -> "$r0 = new java.util.ArrayList {203867203}";
"$r0 = new java.util.ArrayList {203867203}" -> "specialinvoke $r0.<java.util.ArrayList: void <init>()>() {1138361740}";
"specialinvoke $r0.<java.util.ArrayList: void <init>()>() {1138361740}" -> "this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {2045035880}";
"this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> = $r0 {2045035880}" -> "supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {134317356}";
"supportedFileTypes = staticinvoke <at.favre.tools.dconvert.arg.Arguments: java.util.Set getSupportedFileTypes()>() {134317356}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {1391859553}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {1391859553}" -> "if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1417566015}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1417566015}" -> "$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {1797261820}";
"if src == null goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {1417566015}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {388487282}";
"$z0 = virtualinvoke src.<java.io.File: boolean isDirectory()>() {1797261820}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {633062499}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {633062499}" -> "if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {840873375}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {840873375}" -> "l29 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {834995913}";
"if $z0 == 0 goto $r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {840873375}" -> "$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {388487282}";
"l29 = virtualinvoke src.<java.io.File: java.io.File[] listFiles()>() {834995913}" -> "l30 = lengthof l29 {218530529}";
"l30 = lengthof l29 {218530529}" -> "l31#67 = 0 {267010441}";
"l31#67 = 0 {267010441}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {823345082}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {823345082}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {1933533886}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {1933533886}" -> "if l31#67 >= l30 goto (branch) {292805931}";
"if l31#67 >= l30 goto (branch) {292805931}" -> "file = l29[l31#67] {1952397020}";
"if l31#67 >= l30 goto (branch) {292805931}" -> "goto [?= return] {480144381}";
"file = l29[l31#67] {1952397020}" -> "extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {571311038}";
"extension = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(file) {571311038}" -> "$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {1524635575}";
"$z1 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>(extension) {1524635575}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {294661799}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {294661799}" -> "if $z1 == 0 goto l31#67 = l31#67 + 1 {339636006}";
"if $z1 == 0 goto l31#67 = l31#67 + 1 {339636006}" -> "$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1829046556}";
"if $z1 == 0 goto l31#67 = l31#67 + 1 {339636006}" -> "l31#67 = l31#67 + 1 {2074996000}";
"$r1 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1829046556}" -> "interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {1486302307}";
"interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(file) {1486302307}" -> "l31#67 = l31#67 + 1 {2074996000}";
"l31#67 = l31#67 + 1 {2074996000}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67)] {1530532647}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67)] {1530532647}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {823345082}";
"goto [?= return] {480144381}" -> "return {1589465977}";
"$r2 = staticinvoke <at.favre.tools.dconvert.util.MiscUtil: java.lang.String getFileExtensionLowerCase(java.io.File)>(src) {388487282}" -> "$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {2013890792}";
"$z3 = interfaceinvoke supportedFileTypes.<java.util.Set: boolean contains(java.lang.Object)>($r2) {2013890792}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1794336810}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1794336810}" -> "if $z3 == 0 goto return {192684659}";
"if $z3 == 0 goto return {192684659}" -> "$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1153939907}";
"if $z3 == 0 goto return {192684659}" -> "return {1589465977}";
"$r3 = this.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess> {1153939907}" -> "interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {630866518}";
"interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(src) {630866518}" -> "return {1589465977}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l30) {1933533886}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(src) {1391859553}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l31#67) {823345082}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {633062499}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {294661799}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3) {1794336810}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getSupportedFileTypes {
"$r0 = new java.util.HashSet {260625329}" -> "specialinvoke $r0.<java.util.HashSet: void <init>()>() {578850843}";
"specialinvoke $r0.<java.util.HashSet: void <init>()>() {578850843}" -> "set = $r0 {1834479719}";
"set = $r0 {1834479719}" -> "l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {1278662204}";
"l1 = staticinvoke <at.favre.tools.dconvert.arg.ImageType: at.favre.tools.dconvert.arg.ImageType[] values()>() {1278662204}" -> "l2 = lengthof l1 {1884992653}";
"l2 = lengthof l1 {1884992653}" -> "l3#7 = 0 {1601166336}";
"l3#7 = 0 {1601166336}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {1243075659}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {1243075659}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {1516388024}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {1516388024}" -> "if l3#7 >= l2 goto return set {1251654022}";
"if l3#7 >= l2 goto return set {1251654022}" -> "imageType = l1[l3#7] {1943280217}";
"if l3#7 >= l2 goto return set {1251654022}" -> "return set {632489536}";
"imageType = l1[l3#7] {1943280217}" -> "$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {146564179}";
"$z0 = imageType.<at.favre.tools.dconvert.arg.ImageType: boolean supportRead> {146564179}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1110799393}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1110799393}" -> "if $z0 == 0 goto l3#7 = l3#7 + 1 {323216299}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {323216299}" -> "$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {1958630947}";
"if $z0 == 0 goto l3#7 = l3#7 + 1 {323216299}" -> "l3#7 = l3#7 + 1 {1226726853}";
"$r1 = imageType.<at.favre.tools.dconvert.arg.ImageType: java.lang.String[] extensions> {1958630947}" -> "$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {2020388260}";
"$r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) {2020388260}" -> "interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {394514375}";
"interfaceinvoke set.<java.util.Set: boolean addAll(java.util.Collection)>($r2) {394514375}" -> "l3#7 = l3#7 + 1 {1226726853}";
"l3#7 = l3#7 + 1 {1226726853}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {1409472719}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7)] {1409472719}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {1243075659}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7) {1243075659}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l2) {1516388024}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1110799393}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph round {
"this := @this: at.favre.tools.dconvert.arg.Arguments {1483450364}" -> "raw := @parameter0: double {2084423453}";
"raw := @parameter0: double {2084423453}" -> "$r0 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {1893621487}";
"$r0 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {1893621487}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {116281467}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {116281467}" -> "if $r0 == null goto return raw {1657371334}";
"if $r0 == null goto return raw {1657371334}" -> "$r1 = new at.favre.tools.dconvert.arg.RoundingHandler {170307347}";
"if $r0 == null goto return raw {1657371334}" -> "return raw {471481169}";
"$r1 = new at.favre.tools.dconvert.arg.RoundingHandler {170307347}" -> "$r2 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {1739871850}";
"$r2 = this.<at.favre.tools.dconvert.arg.Arguments: at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingHandler> {1739871850}" -> "specialinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r2) {561138337}";
"specialinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: void <init>(at.favre.tools.dconvert.arg.RoundingHandler$Strategy)>($r2) {561138337}" -> "$l0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {355109919}";
"$l0 = virtualinvoke $r1.<at.favre.tools.dconvert.arg.RoundingHandler: long round(double)>(raw) {355109919}" -> "$d0 = (double) $l0 {1349033942}";
"$d0 = (double) $l0 {1349033942}" -> "return $d0 {1669128248}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0) {116281467}"[fontcolor="blue", penwidth=3, color="blue"];
}


