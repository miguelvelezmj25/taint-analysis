    public void <init>(boolean, boolean, boolean, boolean, boolean, boolean, boolean)
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean isIgnoreCase, isInvertMatch, isFixedStrings, isLineNumber, isCount, isMatchingFiles, isWholeLine, $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Boolean $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        isIgnoreCase := @parameter0: boolean;

        isInvertMatch := @parameter1: boolean;

        isFixedStrings := @parameter2: boolean;

        isLineNumber := @parameter3: boolean;

        isCount := @parameter4: boolean;

        isMatchingFiles := @parameter5: boolean;

        isWholeLine := @parameter6: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isIgnoreCase> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isInvertMatch> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isFixedStrings> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isLineNumber> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isCount> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isMatchingFiles> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isWholeLine> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean regexpIsSet> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean patternIsSet> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean pathsIsSet> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean filesIsSet> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean argsIsSet> = 0;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isIgnoreCase> = isIgnoreCase;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isInvertMatch> = isInvertMatch;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isFixedStrings> = isFixedStrings;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isLineNumber> = isLineNumber;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isCount> = isCount;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isMatchingFiles> = isMatchingFiles;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isWholeLine> = isWholeLine;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isIgnoreCase>;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        $z1 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isInvertMatch>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        $z2 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isFixedStrings>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        $z3 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isLineNumber>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        $z4 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isCount>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        $z5 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isMatchingFiles>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        $z6 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isWholeLine>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        return;
    }

    public void setRegexp(java.lang.String)
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        java.lang.String regexp;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        regexp := @parameter0: java.lang.String;

        this.<org.unix4j.grep.unix.grep.GrepArguments: java.lang.String regexp> = regexp;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean regexpIsSet> = 1;

        return;
    }

    public transient void setPaths(java.lang.String[])
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        java.lang.String[] paths;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        paths := @parameter0: java.lang.String[];

        this.<org.unix4j.grep.unix.grep.GrepArguments: java.lang.String[] paths> = paths;

        this.<org.unix4j.grep.unix.grep.GrepArguments: boolean pathsIsSet> = 1;

        return;
    }

    public boolean isFilesSet()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean filesIsSet>;

        return $z0;
    }

    public java.io.File[] getFiles()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;
        java.io.File[] $r0, $r4;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean filesIsSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.io.File[] files>;

        return $r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operand has not been set: ");

        $r4 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.io.File[] files>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public boolean isPathsSet()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean pathsIsSet>;

        return $z0;
    }

    public java.lang.String[] getPaths()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;
        java.lang.String[] $r0, $r4;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean pathsIsSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.lang.String[] paths>;

        return $r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operand has not been set: ");

        $r4 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.lang.String[] paths>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public boolean isCount()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isCount>;

        return $z0;
    }

    public boolean isMatchingFiles()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isMatchingFiles>;

        return $z0;
    }

    public boolean isFixedStrings()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isFixedStrings>;

        return $z0;
    }

    public boolean isWholeLine()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isWholeLine>;

        return $z0;
    }

    public boolean isIgnoreCase()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isIgnoreCase>;

        return $z0;
    }

    public boolean isInvertMatch()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean isInvertMatch>;

        return $z0;
    }

    public java.lang.String getRegexp()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;
        java.lang.String $r0, $r4, $r6;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean regexpIsSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.lang.String regexp>;

        return $r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operand has not been set: ");

        $r4 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.lang.String regexp>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public boolean isPatternSet()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean patternIsSet>;

        return $z0;
    }

    public java.util.regex.Pattern getPattern()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;
        java.util.regex.Pattern $r0, $r4;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean patternIsSet>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.util.regex.Pattern pattern>;

        return $r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operand has not been set: ");

        $r4 = this.<org.unix4j.grep.unix.grep.GrepArguments: java.util.regex.Pattern pattern>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public boolean isRegexpSet()
    {
        org.unix4j.grep.unix.grep.GrepArguments this;
        boolean $z0;

        this := @this: org.unix4j.grep.unix.grep.GrepArguments;

        $z0 = this.<org.unix4j.grep.unix.grep.GrepArguments: boolean regexpIsSet>;

        return $z0;
    }


