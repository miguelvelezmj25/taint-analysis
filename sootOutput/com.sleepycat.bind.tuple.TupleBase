    public static void outputToEntry(com.sleepycat.bind.tuple.TupleOutput, com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.bind.tuple.TupleOutput output;
        com.sleepycat.je.DatabaseEntry entry;
        byte[] $r0;
        int $i0, $i1;

        output := @parameter0: com.sleepycat.bind.tuple.TupleOutput;

        entry := @parameter1: com.sleepycat.je.DatabaseEntry;

        $r0 = virtualinvoke output.<com.sleepycat.bind.tuple.TupleOutput: byte[] getBufferBytes()>();

        $i0 = virtualinvoke output.<com.sleepycat.bind.tuple.TupleOutput: int getBufferOffset()>();

        $i1 = virtualinvoke output.<com.sleepycat.bind.tuple.TupleOutput: int getBufferLength()>();

        virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: void setData(byte[],int,int)>($r0, $i0, $i1);

        return;
    }

    public void <init>()
    {
        com.sleepycat.bind.tuple.TupleBase this;

        this := @this: com.sleepycat.bind.tuple.TupleBase;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.bind.tuple.TupleBase: int outputBufferSize> = 0;

        return;
    }

    public static com.sleepycat.bind.tuple.TupleInput entryToInput(com.sleepycat.je.DatabaseEntry)
    {
        com.sleepycat.je.DatabaseEntry entry;
        com.sleepycat.bind.tuple.TupleInput $r0;
        byte[] $r1;
        int $i0, $i1;

        entry := @parameter0: com.sleepycat.je.DatabaseEntry;

        $r0 = new com.sleepycat.bind.tuple.TupleInput;

        $r1 = virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: byte[] getData()>();

        $i0 = virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: int getOffset()>();

        $i1 = virtualinvoke entry.<com.sleepycat.je.DatabaseEntry: int getSize()>();

        specialinvoke $r0.<com.sleepycat.bind.tuple.TupleInput: void <init>(byte[],int,int)>($r1, $i0, $i1);

        return $r0;
    }


