    public static void applyFileConfig(java.io.File, java.util.Properties, boolean) throws java.lang.IllegalArgumentException
    {
        java.io.File envHome, paramFile#2, $r1;
        java.util.Properties props, fileProps, $r0;
        boolean forReplication, $z0, $z1;
        java.io.FileInputStream fis, $r2;
        java.util.Iterator iter;
        java.util.Map$Entry propPair;
        java.lang.String name, value, $r13;
        java.io.FileNotFoundException l4, $r7;
        java.io.IOException e, $r8;
        java.lang.IllegalArgumentException e2, $r9;
        java.util.Set $r3;
        java.lang.Object $r4, $r5, $r6;
        java.lang.StringBuilder $r10, $r11, $r12;

        envHome := @parameter0: java.io.File;

        props := @parameter1: java.util.Properties;

        forReplication := @parameter2: boolean;

        paramFile#2 = null;

     label1:
        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        fileProps = $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(envHome);

        if envHome == null goto label4;

        $z0 = virtualinvoke envHome.<java.io.File: boolean isFile()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        paramFile#2 = envHome;

        goto label3;

     label2:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(envHome, "je.properties");

        paramFile#2 = $r1;

     label3:
        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(paramFile#2);

        fis = $r2;

        virtualinvoke fileProps.<java.util.Properties: void load(java.io.InputStream)>(fis);

        virtualinvoke fis.<java.io.FileInputStream: void close()>();

     label4:
        staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: void validateProperties(java.util.Properties,boolean,java.lang.String)>(fileProps, 0, null);

        $r3 = virtualinvoke fileProps.<java.util.Properties: java.util.Set entrySet()>();

        iter = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        propPair = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke propPair.<java.util.Map$Entry: java.lang.Object getKey()>();

        name = (java.lang.String) $r5;

        $r6 = interfaceinvoke propPair.<java.util.Map$Entry: java.lang.Object getValue()>();

        value = (java.lang.String) $r6;

        staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: void setConfigParam(java.util.Properties,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>(props, name, value, 0, 0, forReplication, 0);

        goto label5;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        l4 = $r7;

        goto label9;

     label8:
        $r8 := @caughtexception;

        e = $r8;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occurred when reading ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(paramFile#2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        e2 = $r9;

        virtualinvoke e2.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(e);

        throw e2;

     label9:
        return;

        catch java.io.FileNotFoundException from label1 to label6 with label7;
        catch java.io.IOException from label1 to label6 with label8;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/dbi/DbConfigManager";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled> = $z1;

        return;
    }

    public static void setConfigParam(java.util.Properties, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean) throws java.lang.IllegalArgumentException
    {
        java.util.Properties props;
        java.lang.String paramName, value, mvParamName, $r8, $r14, $r19, $r24;
        boolean requireMutability, validateValue, forReplication, verifyForReplication, isMVParam#2, $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Map $r0, $r2;
        java.lang.Object $r1, $r3;
        berkeley.com.sleepycat.je.config.ConfigParam param#7;
        java.lang.IllegalArgumentException $r4, $r10, $r15, $r20;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r13, $r16, $r17, $r18, $r21, $r22, $r23;
        java.lang.AssertionError $r9;

        props := @parameter0: java.util.Properties;

        paramName := @parameter1: java.lang.String;

        value := @parameter2: java.lang.String;

        requireMutability := @parameter3: boolean;

        validateValue := @parameter4: boolean;

        forReplication := @parameter5: boolean;

        verifyForReplication := @parameter6: boolean;

        isMVParam#2 = 0;

        $r0 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(paramName);

        param#7 = (berkeley.com.sleepycat.je.config.ConfigParam) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(param#7);

        if param#7 != null goto label3;

        mvParamName = staticinvoke <berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String multiValueParamName(java.lang.String)>(paramName);

        $r2 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(mvParamName);

        param#7 = (berkeley.com.sleepycat.je.config.ConfigParam) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(param#7);

        if param#7 == null goto label1;

        $z0 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isMultiValueParam()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramName);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid BDBJE environment parameter");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        isMVParam#2 = 1;

        $z1 = <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isMultiValueParam()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(verifyForReplication);

        if verifyForReplication == 0 goto label5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(forReplication);

        if forReplication == 0 goto label4;

        $z3 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isForReplication()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 != 0 goto label5;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramName);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a replication parameter.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label4:
        $z4 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isForReplication()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label5;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramName);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a replication parameter and cannot be  set through this configuration class.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label5:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(requireMutability);

        if requireMutability == 0 goto label6;

        $z5 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isMutable()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 != 0 goto label6;

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramName);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a mutable BDBJE environment configuration");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label6:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isMVParam#2);

        if isMVParam#2 == 0 goto label7;

        staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: void setVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam,java.lang.String,java.lang.String,boolean)>(props, param#7, paramName, value, validateValue);

        goto label8;

     label7:
        staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: void setVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam,java.lang.String,boolean)>(props, param#7, value, validateValue);

     label8:
        return;
    }

    public static void validateProperties(java.util.Properties, boolean, java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.Properties props;
        boolean isRepConfigInstance, $z0, $z1, $z2, $z3;
        java.lang.String configClassName, name, mvParamName, $r10, $r16, $r22, $r23;
        java.util.Enumeration propNames;
        java.lang.Object $r0, $r2, $r4;
        java.util.Map $r1, $r3;
        berkeley.com.sleepycat.je.config.ConfigParam param#12;
        java.lang.IllegalArgumentException $r6, $r11, $r17;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21;

        props := @parameter0: java.util.Properties;

        isRepConfigInstance := @parameter1: boolean;

        configClassName := @parameter2: java.lang.String;

        propNames = virtualinvoke props.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label1:
        $z0 = interfaceinvoke propNames.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label6;

        $r0 = interfaceinvoke propNames.<java.util.Enumeration: java.lang.Object nextElement()>();

        name = (java.lang.String) $r0;

        $r1 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);

        param#12 = (berkeley.com.sleepycat.je.config.ConfigParam) $r2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(param#12);

        if param#12 != null goto label3;

        mvParamName = staticinvoke <berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String multiValueParamName(java.lang.String)>(name);

        $r3 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(mvParamName);

        param#12 = (berkeley.com.sleepycat.je.config.ConfigParam) $r4;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(param#12);

        if param#12 != null goto label3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(configClassName);

        if configClassName != null goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isRepConfigInstance);

        if isRepConfigInstance != 0 goto label2;

        $z1 = virtualinvoke name.<java.lang.String: boolean contains(java.lang.CharSequence)>("je.rep.");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label2;

        virtualinvoke props.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(name);

        goto label1;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid BDBJE environment configuration");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label3:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(configClassName);

        if configClassName == null goto label5;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isRepConfigInstance);

        if isRepConfigInstance == 0 goto label4;

        $z2 = virtualinvoke param#12.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isForReplication()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label5;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a replication parameter and cannot  be set through ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(configClassName);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label4:
        $z3 = virtualinvoke param#12.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isForReplication()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label5;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a replication parameter and cannot be set  through ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(configClassName);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label5:
        $r23 = virtualinvoke props.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(name);

        virtualinvoke param#12.<berkeley.com.sleepycat.je.config.ConfigParam: void validateValue(java.lang.String)>($r23);

        goto label1;

     label6:
        return;
    }

    public static void setVal(java.util.Properties, berkeley.com.sleepycat.je.config.ConfigParam, java.lang.String, boolean) throws java.lang.IllegalArgumentException
    {
        java.util.Properties props;
        berkeley.com.sleepycat.je.config.ConfigParam param;
        java.lang.String val, $r0;
        boolean validateValue;

        props := @parameter0: java.util.Properties;

        param := @parameter1: berkeley.com.sleepycat.je.config.ConfigParam;

        val := @parameter2: java.lang.String;

        validateValue := @parameter3: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(validateValue);

        if validateValue == 0 goto label1;

        virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: void validateValue(java.lang.String)>(val);

     label1:
        $r0 = virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String getName()>();

        virtualinvoke props.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r0, val);

        return;
    }

    public static void setVal(java.util.Properties, berkeley.com.sleepycat.je.config.ConfigParam, java.lang.String, java.lang.String, boolean) throws java.lang.IllegalArgumentException
    {
        java.util.Properties props;
        berkeley.com.sleepycat.je.config.ConfigParam param;
        java.lang.String paramName, val;
        boolean validateValue;

        props := @parameter0: java.util.Properties;

        param := @parameter1: berkeley.com.sleepycat.je.config.ConfigParam;

        paramName := @parameter2: java.lang.String;

        val := @parameter3: java.lang.String;

        validateValue := @parameter4: boolean;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(validateValue);

        if validateValue == 0 goto label1;

        virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: void validateValue(java.lang.String)>(val);

     label1:
        virtualinvoke props.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(paramName, val);

        return;
    }

    public boolean getBoolean(berkeley.com.sleepycat.je.config.BooleanConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.BooleanConfigParam configParam;
        java.lang.String val;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.BooleanConfigParam;

        val = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(berkeley.com.sleepycat.je.config.ConfigParam)>(configParam);

        $z0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean parseBoolean(java.lang.String)>(val);

        return $z0;
    }

    private static boolean parseBoolean(java.lang.String)
    {
        java.lang.String val, $r0;
        boolean $z0;

        val := @parameter0: java.lang.String;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val != null goto label1;

        return 0;

     label1:
        $r0 = virtualinvoke val.<java.lang.String: java.lang.String trim()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r0);

        return $z0;
    }

    public synchronized java.lang.String get(berkeley.com.sleepycat.je.config.ConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.ConfigParam configParam;
        java.util.Properties $r0;
        java.lang.String $r1, $r2;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.ConfigParam;

        $r0 = this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.util.Properties props>;

        $r1 = virtualinvoke configParam.<berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String getName()>();

        $r2 = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String getConfigParam(java.util.Properties,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static java.lang.String getConfigParam(java.util.Properties, java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.Properties props;
        java.lang.String paramName, mvParamName, $r8, $r11, $r12;
        boolean isMVParam#2, $z0, $z1, $z2;
        java.util.Map $r0, $r2;
        java.lang.Object $r1, $r3;
        berkeley.com.sleepycat.je.config.ConfigParam param#7;
        java.lang.IllegalArgumentException $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.AssertionError $r9;

        props := @parameter0: java.util.Properties;

        paramName := @parameter1: java.lang.String;

        isMVParam#2 = 0;

        $r0 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(paramName);

        param#7 = (berkeley.com.sleepycat.je.config.ConfigParam) $r1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(param#7);

        if param#7 != null goto label3;

        mvParamName = staticinvoke <berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String multiValueParamName(java.lang.String)>(paramName);

        $r2 = <berkeley.com.sleepycat.je.config.EnvironmentParams: java.util.Map SUPPORTED_PARAMS>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(mvParamName);

        param#7 = (berkeley.com.sleepycat.je.config.ConfigParam) $r3;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(param#7);

        if param#7 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(paramName);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid BDBJE environment configuration");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        isMVParam#2 = 1;

        $z0 = <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isMultiValueParam()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        goto label4;

     label3:
        $z2 = virtualinvoke param#7.<berkeley.com.sleepycat.je.config.ConfigParam: boolean isMultiValueParam()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label4;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use getMultiValueValues() to retrieve Multi-Value parameter values.");

        throw $r10;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isMVParam#2);

        if isMVParam#2 == 0 goto label5;

        $r11 = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String getVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam,java.lang.String)>(props, param#7, paramName);

        return $r11;

     label5:
        $r12 = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String getVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam)>(props, param#7);

        return $r12;
    }

    public static java.lang.String getVal(java.util.Properties, berkeley.com.sleepycat.je.config.ConfigParam)
    {
        java.util.Properties props;
        berkeley.com.sleepycat.je.config.ConfigParam param;
        java.lang.String $r0, val#5;

        props := @parameter0: java.util.Properties;

        param := @parameter1: berkeley.com.sleepycat.je.config.ConfigParam;

        $r0 = virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String getName()>();

        val#5 = virtualinvoke props.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val#5);

        if val#5 != null goto label1;

        val#5 = virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String getDefault()>();

     label1:
        return val#5;
    }

    public static java.lang.String getVal(java.util.Properties, berkeley.com.sleepycat.je.config.ConfigParam, java.lang.String)
    {
        java.util.Properties props;
        berkeley.com.sleepycat.je.config.ConfigParam param;
        java.lang.String paramName, val#3;

        props := @parameter0: java.util.Properties;

        param := @parameter1: berkeley.com.sleepycat.je.config.ConfigParam;

        paramName := @parameter2: java.lang.String;

        val#3 = virtualinvoke props.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(paramName);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val#3);

        if val#3 != null goto label1;

        val#3 = virtualinvoke param.<berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String getDefault()>();

     label1:
        return val#3;
    }

    public int getDuration(berkeley.com.sleepycat.je.config.DurationConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.DurationConfigParam configParam;
        java.lang.String val, $r2;
        java.lang.IllegalArgumentException e, $r0;
        int millis#5;
        boolean $z0;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.DurationConfigParam;

        val = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(berkeley.com.sleepycat.je.config.ConfigParam)>(configParam);

        millis#5 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val == null goto label4;

     label1:
        millis#5 = staticinvoke <berkeley.com.sleepycat.je.utilint.PropUtil: int parseDuration(java.lang.String)>(val);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        $z0 = <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        $r1 = new java.lang.AssertionError;

        $r2 = virtualinvoke e.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r1;

     label4:
        return millis#5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public int getInt(berkeley.com.sleepycat.je.config.IntConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.IntConfigParam configParam;
        java.lang.String val, $r2;
        java.lang.NumberFormatException e, $r0;
        int intValue#5;
        boolean $z0;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.IntConfigParam;

        val = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(berkeley.com.sleepycat.je.config.ConfigParam)>(configParam);

        intValue#5 = 0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val == null goto label4;

     label1:
        intValue#5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(val);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        $z0 = <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        $r1 = new java.lang.AssertionError;

        $r2 = virtualinvoke e.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r1;

     label4:
        return intValue#5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void <init>(berkeley.com.sleepycat.je.EnvironmentConfig)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.EnvironmentConfig config;
        java.util.Properties $r0, $r1;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        config := @parameter0: berkeley.com.sleepycat.je.EnvironmentConfig;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: berkeley.com.sleepycat.je.EnvironmentConfig environmentConfig> = config;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(config);

        if config != null goto label1;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.util.Properties props> = $r0;

        goto label2;

     label1:
        $r1 = staticinvoke <berkeley.com.sleepycat.je.DbInternal: java.util.Properties getProps(berkeley.com.sleepycat.je.EnvironmentMutableConfig)>(config);

        this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.util.Properties props> = $r1;

     label2:
        return;
    }

    public long getLong(berkeley.com.sleepycat.je.config.LongConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.LongConfigParam configParam;
        java.lang.String val, $r2;
        java.lang.NumberFormatException e, $r0;
        long longValue#5;
        boolean $z0;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.LongConfigParam;

        val = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(berkeley.com.sleepycat.je.config.ConfigParam)>(configParam);

        longValue#5 = 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val == null goto label4;

     label1:
        longValue#5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(val);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        $z0 = <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        $r1 = new java.lang.AssertionError;

        $r2 = virtualinvoke e.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r1;

     label4:
        return longValue#5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public berkeley.com.sleepycat.je.EnvironmentConfig getEnvironmentConfig()
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.EnvironmentConfig $r0;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        $r0 = this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: berkeley.com.sleepycat.je.EnvironmentConfig environmentConfig>;

        return $r0;
    }

    public synchronized boolean isSpecified(berkeley.com.sleepycat.je.config.ConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.ConfigParam configParam;
        java.util.Properties $r0;
        java.lang.String $r1;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.ConfigParam;

        $r0 = this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.util.Properties props>;

        $r1 = virtualinvoke configParam.<berkeley.com.sleepycat.je.config.ConfigParam: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.util.Properties: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean getBooleanVal(java.util.Properties, berkeley.com.sleepycat.je.config.BooleanConfigParam)
    {
        java.util.Properties props;
        berkeley.com.sleepycat.je.config.BooleanConfigParam param;
        java.lang.String val, $r2, $r4;
        java.lang.StringBuilder $r0, $r1, $r3;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r5;
        boolean $z0;

        props := @parameter0: java.util.Properties;

        param := @parameter1: berkeley.com.sleepycat.je.config.BooleanConfigParam;

        val = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String getVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam)>(props, param);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val != null goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No value for ");

        $r2 = virtualinvoke param.<berkeley.com.sleepycat.je.config.BooleanConfigParam: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(java.lang.String)>($r4);

        throw $r5;

     label1:
        $z0 = staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean parseBoolean(java.lang.String)>(val);

        return $z0;
    }

    public static void setBooleanVal(java.util.Properties, berkeley.com.sleepycat.je.config.BooleanConfigParam, boolean, boolean)
    {
        java.util.Properties props;
        berkeley.com.sleepycat.je.config.BooleanConfigParam param;
        boolean val, validateValue;
        java.lang.String $r0;

        props := @parameter0: java.util.Properties;

        param := @parameter1: berkeley.com.sleepycat.je.config.BooleanConfigParam;

        val := @parameter2: boolean;

        validateValue := @parameter3: boolean;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(val);

        staticinvoke <berkeley.com.sleepycat.je.dbi.DbConfigManager: void setVal(java.util.Properties,berkeley.com.sleepycat.je.config.ConfigParam,java.lang.String,boolean)>(props, param, $r0, validateValue);

        return;
    }

    public long getDurationNS(berkeley.com.sleepycat.je.config.DurationConfigParam)
    {
        berkeley.com.sleepycat.je.dbi.DbConfigManager this;
        berkeley.com.sleepycat.je.config.DurationConfigParam configParam;
        java.lang.String val, $r2;
        java.lang.IllegalArgumentException e, $r0;
        long nanos#5;
        boolean $z0;
        java.lang.AssertionError $r1;

        this := @this: berkeley.com.sleepycat.je.dbi.DbConfigManager;

        configParam := @parameter0: berkeley.com.sleepycat.je.config.DurationConfigParam;

        val = virtualinvoke this.<berkeley.com.sleepycat.je.dbi.DbConfigManager: java.lang.String get(berkeley.com.sleepycat.je.config.ConfigParam)>(configParam);

        nanos#5 = 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(val);

        if val == null goto label4;

     label1:
        nanos#5 = staticinvoke <berkeley.com.sleepycat.je.utilint.PropUtil: long parseDurationNS(java.lang.String)>(val);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        e = $r0;

        $z0 = <berkeley.com.sleepycat.je.dbi.DbConfigManager: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label4;

        $r1 = new java.lang.AssertionError;

        $r2 = virtualinvoke e.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r1;

     label4:
        return nanos#5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }


