    public static void main(java.lang.String[]) throws java.lang.InterruptedException
    {
        java.lang.String[] rawArgs;
        java.io.File src, dst, tmp$585355112, tmp$191359969;
        boolean scaleIsHeightdp, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, createMipMapInsteadOfDrawableDir, enablePNGCrush, enableMozJPEG, postConvertWEBP, enableAntiAliasing, dryRun, keepUnoptimizedFilesPostProcessor, iosCreateImageSetFolder, clearDirBeforeConvert, help, version, guiAdvancedOptions, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59;
        java.util.ResourceBundle strings;
        org.apache.commons.cli.Options options;
        at.favre.tools.dconvert.arg.Arguments args, tmp$1308672228;
        at.favre.tools.dconvert.DConvert dc, tmp$2040032417;
        at.favre.tools.dconvert.MyHandlerCallback hc, tmp$1298944527;
        java.lang.String $r2, $r5, $r8, $r11, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r74, $r76, $r84;
        java.lang.StringBuilder $r3, $r4, $r9, $r10, $r71, $r75, $r80, $r82, $r83, tmp$562447094, tmp$1603927060, tmp$385957202, tmp$472217946;
        java.lang.Boolean $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63;
        byte scale#178;
        at.favre.tools.dconvert.arg.EPlatform[] $r65;
        at.favre.tools.dconvert.arg.EPlatform $r66;
        java.util.List $r67, $r81;
        java.lang.Object platforms#187;
        at.favre.tools.dconvert.arg.EOutputCompressionMode compressionMode#189;
        at.favre.tools.dconvert.arg.EScaleMode scaleMode#191;
        at.favre.tools.dconvert.arg.EScalingAlgorithm downScaling#194, upScaling#196;
        float compressionQuality#198, $f0;
        at.favre.tools.dconvert.arg.RoundingHandler$Strategy roundingStrategy#212;
        java.util.Locale $r68;
        java.io.PrintStream $r69, $r78;
        java.lang.Class $r72;
        java.lang.Package $r73;
        int $i0;
        java.util.HashSet tmp$196181427;
        java.util.Set tmp$548284836;

        rawArgs := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        tmp$585355112 = new java.io.File;

        tmp$562447094 = new java.lang.StringBuilder;

        specialinvoke tmp$562447094.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r3 = virtualinvoke tmp$562447094.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/density/files/person.jpg");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$585355112.<java.io.File: void <init>(java.lang.String)>($r5);

        src = tmp$585355112;

        tmp$191359969 = new java.io.File;

        tmp$1603927060 = new java.lang.StringBuilder;

        specialinvoke tmp$1603927060.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r9 = virtualinvoke tmp$1603927060.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Documents/Programming/Java/Projects/performance-mapper-evaluation/original/density/output");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke tmp$191359969.<java.io.File: void <init>(java.lang.String)>($r11);

        dst = tmp$191359969;

        $r12 = rawArgs[0];

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        $z0 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALE(boolean)>($z0);

        <at.favre.tools.dconvert.Main: boolean SCALE> = $z1;

        $r14 = rawArgs[1];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        $z2 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPLATFORM(boolean)>($z2);

        <at.favre.tools.dconvert.Main: boolean PLATFORM> = $z3;

        $r16 = rawArgs[2];

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r16);

        $z4 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        $z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionOUTPUTCOMPRESSIONGMODE(boolean)>($z4);

        <at.favre.tools.dconvert.Main: boolean OUTPUTCOMPRESSIONGMODE> = $z5;

        $r18 = rawArgs[3];

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r18);

        $z6 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        $z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALEMODE(boolean)>($z6);

        <at.favre.tools.dconvert.Main: boolean SCALEMODE> = $z7;

        $r20 = rawArgs[4];

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r20);

        $z8 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        $z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSCALEISHEIGHTDP(boolean)>($z8);

        <at.favre.tools.dconvert.Main: boolean SCALEISHEIGHTDP> = $z9;

        $r22 = rawArgs[5];

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r22);

        $z10 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        $z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDOWNSCALINGALGORITHM(boolean)>($z10);

        <at.favre.tools.dconvert.Main: boolean DOWNSCALINGALGORITHM> = $z11;

        $r24 = rawArgs[6];

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r24);

        $z12 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        $z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionUPSCALINGALGORITHM(boolean)>($z12);

        <at.favre.tools.dconvert.Main: boolean UPSCALINGALGORITHM> = $z13;

        $r26 = rawArgs[7];

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r26);

        $z14 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        $z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCOMPRESSQUALITY(boolean)>($z14);

        <at.favre.tools.dconvert.Main: boolean COMPRESSQUALITY> = $z15;

        $r28 = rawArgs[8];

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r28);

        $z16 = virtualinvoke $r29.<java.lang.Boolean: boolean booleanValue()>();

        $z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSKIPEXISTINGFILES(boolean)>($z16);

        <at.favre.tools.dconvert.Main: boolean SKIPEXISTINGFILES> = $z17;

        $r30 = rawArgs[9];

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r30);

        $z18 = virtualinvoke $r31.<java.lang.Boolean: boolean booleanValue()>();

        $z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSKIPUPSCALING(boolean)>($z18);

        <at.favre.tools.dconvert.Main: boolean SKIPUPSCALING> = $z19;

        $r32 = rawArgs[10];

        $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r32);

        $z20 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        $z21 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERBOSELOG(boolean)>($z20);

        <at.favre.tools.dconvert.Main: boolean VERBOSELOG> = $z21;

        $r34 = rawArgs[11];

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r34);

        $z22 = virtualinvoke $r35.<java.lang.Boolean: boolean booleanValue()>();

        $z23 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionINCLUDEANDROIDLDPITVDPI(boolean)>($z22);

        <at.favre.tools.dconvert.Main: boolean INCLUDEANDROIDLDPITVDPI> = $z23;

        $r36 = rawArgs[12];

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r36);

        $z24 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>();

        $z25 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionHALTONERROR(boolean)>($z24);

        <at.favre.tools.dconvert.Main: boolean HALTONERROR> = $z25;

        $r38 = rawArgs[13];

        $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r38);

        $z26 = virtualinvoke $r39.<java.lang.Boolean: boolean booleanValue()>();

        $z27 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCREATEMIPMAPINSTEADOFDRAWABLEDIR(boolean)>($z26);

        <at.favre.tools.dconvert.Main: boolean CREATEMIPMAPINSTEADOFDRAWABLEDIR> = $z27;

        $r40 = rawArgs[14];

        $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r40);

        $z28 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>();

        $z29 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionENABLEPNGCRUSH(boolean)>($z28);

        <at.favre.tools.dconvert.Main: boolean ENABLEPNGCRUSH> = $z29;

        $r42 = rawArgs[15];

        $r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r42);

        $z30 = virtualinvoke $r43.<java.lang.Boolean: boolean booleanValue()>();

        $z31 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionENABLEMOZJPEG(boolean)>($z30);

        <at.favre.tools.dconvert.Main: boolean ENABLEMOZJPEG> = $z31;

        $r44 = rawArgs[16];

        $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r44);

        $z32 = virtualinvoke $r45.<java.lang.Boolean: boolean booleanValue()>();

        $z33 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPOSTCONVERTWEBP(boolean)>($z32);

        <at.favre.tools.dconvert.Main: boolean POSTCONVERTWEBP> = $z33;

        $r46 = rawArgs[17];

        $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r46);

        $z34 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();

        $z35 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionENABLEANTIALIASING(boolean)>($z34);

        <at.favre.tools.dconvert.Main: boolean ENABLEANTIALIASING> = $z35;

        $r48 = rawArgs[18];

        $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r48);

        $z36 = virtualinvoke $r49.<java.lang.Boolean: boolean booleanValue()>();

        $z37 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDRYRUN(boolean)>($z36);

        <at.favre.tools.dconvert.Main: boolean DRYRUN> = $z37;

        $r50 = rawArgs[19];

        $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r50);

        $z38 = virtualinvoke $r51.<java.lang.Boolean: boolean booleanValue()>();

        $z39 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionKEEPUNOPTIMIZEDFILESPOSTPROCESSOR(boolean)>($z38);

        <at.favre.tools.dconvert.Main: boolean KEEPUNOPTIMIZEDFILESPOSTPROCESSOR> = $z39;

        $r52 = rawArgs[20];

        $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r52);

        $z40 = virtualinvoke $r53.<java.lang.Boolean: boolean booleanValue()>();

        $z41 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionROUNDINGHANDLER(boolean)>($z40);

        <at.favre.tools.dconvert.Main: boolean ROUNDINGHANDLER> = $z41;

        $r54 = rawArgs[21];

        $r55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r54);

        $z42 = virtualinvoke $r55.<java.lang.Boolean: boolean booleanValue()>();

        $z43 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionIOSCREATEIMAGESETFOLDERS(boolean)>($z42);

        <at.favre.tools.dconvert.Main: boolean IOSCREATEIMAGESETFOLDERS> = $z43;

        $r56 = rawArgs[22];

        $r57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r56);

        $z44 = virtualinvoke $r57.<java.lang.Boolean: boolean booleanValue()>();

        $z45 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCLEARDIRBEFORECONVERT(boolean)>($z44);

        <at.favre.tools.dconvert.Main: boolean CLEARDIRBEFORECONVERT> = $z45;

        $r58 = rawArgs[23];

        $r59 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r58);

        $z46 = virtualinvoke $r59.<java.lang.Boolean: boolean booleanValue()>();

        $z47 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionHELP(boolean)>($z46);

        <at.favre.tools.dconvert.Main: boolean HELP> = $z47;

        $r60 = rawArgs[24];

        $r61 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r60);

        $z48 = virtualinvoke $r61.<java.lang.Boolean: boolean booleanValue()>();

        $z49 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionVERSION(boolean)>($z48);

        <at.favre.tools.dconvert.Main: boolean VERSION> = $z49;

        $r62 = rawArgs[25];

        $r63 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r62);

        $z50 = virtualinvoke $r63.<java.lang.Boolean: boolean booleanValue()>();

        $z51 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionGUIADVANCEDOPTIONS(boolean)>($z50);

        <at.favre.tools.dconvert.Main: boolean GUIADVANCEDOPTIONS> = $z51;

        scale#178 = 1;

        tmp$196181427 = new java.util.HashSet;

        $r65 = newarray (at.favre.tools.dconvert.arg.EPlatform)[1];

        $r66 = <at.favre.tools.dconvert.arg.EPlatform: at.favre.tools.dconvert.arg.EPlatform ANDROID>;

        $r65[0] = $r66;

        $r67 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r65);

        specialinvoke tmp$196181427.<java.util.HashSet: void <init>(java.util.Collection)>($r67);

        platforms#187 = tmp$196181427;

        compressionMode#189 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG>;

        scaleMode#191 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode FACTOR>;

        scaleIsHeightdp = <at.favre.tools.dconvert.Main: boolean SCALEISHEIGHTDP>;

        downScaling#194 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        upScaling#196 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm LANCZOS3>;

        compressionQuality#198 = 0.9F;

        skipExistingFiles = <at.favre.tools.dconvert.Main: boolean SKIPEXISTINGFILES>;

        skipUpScaling = <at.favre.tools.dconvert.Main: boolean SKIPUPSCALING>;

        verboseLog = <at.favre.tools.dconvert.Main: boolean VERBOSELOG>;

        includeAndroiddpiTvdpi = <at.favre.tools.dconvert.Main: boolean INCLUDEANDROIDLDPITVDPI>;

        haltOnError = <at.favre.tools.dconvert.Main: boolean HALTONERROR>;

        createMipMapInsteadOfDrawableDir = <at.favre.tools.dconvert.Main: boolean CREATEMIPMAPINSTEADOFDRAWABLEDIR>;

        enablePNGCrush = <at.favre.tools.dconvert.Main: boolean ENABLEPNGCRUSH>;

        enableMozJPEG = <at.favre.tools.dconvert.Main: boolean ENABLEMOZJPEG>;

        postConvertWEBP = <at.favre.tools.dconvert.Main: boolean POSTCONVERTWEBP>;

        enableAntiAliasing = <at.favre.tools.dconvert.Main: boolean ENABLEANTIALIASING>;

        dryRun = <at.favre.tools.dconvert.Main: boolean DRYRUN>;

        keepUnoptimizedFilesPostProcessor = <at.favre.tools.dconvert.Main: boolean KEEPUNOPTIMIZEDFILESPOSTPROCESSOR>;

        roundingStrategy#212 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy FLOOR>;

        iosCreateImageSetFolder = <at.favre.tools.dconvert.Main: boolean IOSCREATEIMAGESETFOLDERS>;

        clearDirBeforeConvert = <at.favre.tools.dconvert.Main: boolean CLEARDIRBEFORECONVERT>;

        help = <at.favre.tools.dconvert.Main: boolean HELP>;

        version = <at.favre.tools.dconvert.Main: boolean VERSION>;

        guiAdvancedOptions = <at.favre.tools.dconvert.Main: boolean GUIADVANCEDOPTIONS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(help);

        if help == 0 goto label01;

        $r68 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        strings = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("bundles.strings", $r68);

        options = staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: org.apache.commons.cli.Options setupOptions(java.util.ResourceBundle)>(strings);

        staticinvoke <at.favre.tools.dconvert.ui.CLIInterpreter: void printHelp(org.apache.commons.cli.Options)>(options);

        return;

     label01:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(version);

        if version == 0 goto label02;

        $r69 = <java.lang.System: java.io.PrintStream out>;

        tmp$385957202 = new java.lang.StringBuilder;

        specialinvoke tmp$385957202.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke tmp$385957202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version: ");

        $r72 = class "at/favre/tools/dconvert/ui/CLIInterpreter";

        $r73 = virtualinvoke $r72.<java.lang.Class: java.lang.Package getPackage()>();

        $r74 = virtualinvoke $r73.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $r75 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r76);

        return;

     label02:
        $z52 = <at.favre.tools.dconvert.Main: boolean SCALE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z52);

        if $z52 == 0 goto label03;

        scale#178 = 5;

     label03:
        $z53 = <at.favre.tools.dconvert.Main: boolean PLATFORM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z53);

        if $z53 == 0 goto label04;

        platforms#187 = staticinvoke <at.favre.tools.dconvert.arg.EPlatform: java.util.Set getAll()>();

     label04:
        $z54 = <at.favre.tools.dconvert.Main: boolean OUTPUTCOMPRESSIONGMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z54);

        if $z54 == 0 goto label05;

        compressionMode#189 = <at.favre.tools.dconvert.arg.EOutputCompressionMode: at.favre.tools.dconvert.arg.EOutputCompressionMode AS_JPG_AND_PNG>;

     label05:
        $z55 = <at.favre.tools.dconvert.Main: boolean SCALEMODE>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z55);

        if $z55 == 0 goto label06;

        scaleMode#191 = <at.favre.tools.dconvert.arg.EScaleMode: at.favre.tools.dconvert.arg.EScaleMode DP_HEIGHT>;

     label06:
        $z56 = <at.favre.tools.dconvert.Main: boolean DOWNSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z56);

        if $z56 == 0 goto label07;

        downScaling#194 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR_PROGRESSIVE>;

     label07:
        $z57 = <at.favre.tools.dconvert.Main: boolean UPSCALINGALGORITHM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z57);

        if $z57 == 0 goto label08;

        upScaling#196 = <at.favre.tools.dconvert.arg.EScalingAlgorithm: at.favre.tools.dconvert.arg.EScalingAlgorithm BILINEAR>;

     label08:
        $z58 = <at.favre.tools.dconvert.Main: boolean COMPRESSQUALITY>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z58);

        if $z58 == 0 goto label09;

        compressionQuality#198 = 0.1F;

     label09:
        $z59 = <at.favre.tools.dconvert.Main: boolean ROUNDINGHANDLER>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z59);

        if $z59 == 0 goto label10;

        roundingStrategy#212 = <at.favre.tools.dconvert.arg.RoundingHandler$Strategy: at.favre.tools.dconvert.arg.RoundingHandler$Strategy CEIL>;

     label10:
        tmp$1308672228 = new at.favre.tools.dconvert.arg.Arguments;

        $f0 = (float) scale#178;

        tmp$548284836 = (java.util.Set) platforms#187;

        specialinvoke tmp$1308672228.<at.favre.tools.dconvert.arg.Arguments: void <init>(java.io.File,java.io.File,float,java.util.Set,at.favre.tools.dconvert.arg.EOutputCompressionMode,at.favre.tools.dconvert.arg.EScaleMode,at.favre.tools.dconvert.arg.EScalingAlgorithm,at.favre.tools.dconvert.arg.EScalingAlgorithm,float,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,at.favre.tools.dconvert.arg.RoundingHandler$Strategy,boolean,boolean,boolean)>(src, dst, $f0, tmp$548284836, compressionMode#189, scaleMode#191, downScaling#194, upScaling#196, compressionQuality#198, 1, skipExistingFiles, skipUpScaling, verboseLog, includeAndroiddpiTvdpi, haltOnError, createMipMapInsteadOfDrawableDir, iosCreateImageSetFolder, enablePNGCrush, enableMozJPEG, postConvertWEBP, enableAntiAliasing, dryRun, keepUnoptimizedFilesPostProcessor, roundingStrategy#212, guiAdvancedOptions, clearDirBeforeConvert, scaleIsHeightdp);

        args = tmp$1308672228;

        staticinvoke <java.lang.Thread: void sleep(long)>(1500L);

        $r78 = <java.lang.System: java.io.PrintStream out>;

        tmp$472217946 = new java.lang.StringBuilder;

        specialinvoke tmp$472217946.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke tmp$472217946.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start converting ");

        $r81 = args.<at.favre.tools.dconvert.arg.Arguments: java.util.List filesToProcess>;

        $i0 = interfaceinvoke $r81.<java.util.List: int size()>();

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r84);

        tmp$2040032417 = new at.favre.tools.dconvert.DConvert;

        specialinvoke tmp$2040032417.<at.favre.tools.dconvert.DConvert: void <init>()>();

        dc = tmp$2040032417;

        tmp$1298944527 = new at.favre.tools.dconvert.MyHandlerCallback;

        specialinvoke tmp$1298944527.<at.favre.tools.dconvert.MyHandlerCallback: void <init>(at.favre.tools.dconvert.arg.Arguments)>(args);

        hc = tmp$1298944527;

        virtualinvoke dc.<at.favre.tools.dconvert.DConvert: void execute(at.favre.tools.dconvert.arg.Arguments,boolean,at.favre.tools.dconvert.DConvert$HandlerCallback)>(args, 1, hc);

        return;
    }

    public void <init>()
    {
        at.favre.tools.dconvert.Main this;

        this := @this: at.favre.tools.dconvert.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


