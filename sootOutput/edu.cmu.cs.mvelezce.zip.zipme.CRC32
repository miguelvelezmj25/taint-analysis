    static void <clinit>()
    {
        int[] $r0;

        $r0 = staticinvoke <edu.cmu.cs.mvelezce.zip.zipme.CRC32: int[] make_crc_table()>();

        <edu.cmu.cs.mvelezce.zip.zipme.CRC32: int[] crc_table> = $r0;

        return;
    }

    private static int[] make_crc_table()
    {
        int[] crc_table;
        int n#4, c#8, k#10, $i0, $i1;
        boolean $z0, $z1;

        crc_table = newarray (int)[256];

        n#4 = 0;

     label1:
        if n#4 >= 256 goto label7;

        c#8 = n#4;

        k#10 = 8;

     label2:
        k#10 = k#10 + -1;

        if k#10 < 0 goto label6;

        $i0 = c#8 & 1;

        if $i0 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: boolean getDecision(boolean)>($z0);

        if $z1 == 0 goto label5;

        $i1 = c#8 >>> 1;

        c#8 = -306674912 ^ $i1;

        goto label2;

     label5:
        c#8 = c#8 >>> 1;

        goto label2;

     label6:
        crc_table[n#4] = c#8;

        n#4 = n#4 + 1;

        goto label1;

     label7:
        return crc_table;
    }

    public void <init>()
    {
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc> = 0;

        return;
    }

    public void update(byte[], int, int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 this;
        byte[] buf;
        int $i0, off#1, len#2, $i1, c#7, $i3, $i4, $i5, $i6, $i7;
        int[] $r0;
        byte $b2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        buf := @parameter0: byte[];

        off#1 := @parameter1: int;

        len#2 := @parameter2: int;

        $i1 = this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc>;

        c#7 = $i1 ^ -1;

     label1:
        len#2 = len#2 + -1;

        if len#2 < 0 goto label2;

        $r0 = <edu.cmu.cs.mvelezce.zip.zipme.CRC32: int[] crc_table>;

        $i0 = off#1;

        off#1 = off#1 + 1;

        $b2 = buf[$i0];

        $i3 = c#7 ^ $b2;

        $i4 = $i3 & 255;

        $i5 = $r0[$i4];

        $i6 = c#7 >>> 8;

        c#7 = $i5 ^ $i6;

        goto label1;

     label2:
        $i7 = c#7 ^ -1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc> = $i7;

        return;
    }

    public long getValue()
    {
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 this;
        int $i0;
        long $l1, $l2;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc>;

        $l1 = (long) $i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    public void reset()
    {
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 this;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc> = 0;

        return;
    }

    public void update(int)
    {
        edu.cmu.cs.mvelezce.zip.zipme.CRC32 this;
        int bval, $i0, c#5, $i1, $i2, $i3, $i4, c#17, $i5;
        int[] $r0;

        this := @this: edu.cmu.cs.mvelezce.zip.zipme.CRC32;

        bval := @parameter0: int;

        $i0 = this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc>;

        c#5 = $i0 ^ -1;

        $r0 = <edu.cmu.cs.mvelezce.zip.zipme.CRC32: int[] crc_table>;

        $i1 = c#5 ^ bval;

        $i2 = $i1 & 255;

        $i3 = $r0[$i2];

        $i4 = c#5 >>> 8;

        c#17 = $i3 ^ $i4;

        $i5 = c#17 ^ -1;

        this.<edu.cmu.cs.mvelezce.zip.zipme.CRC32: int crc> = $i5;

        return;
    }


