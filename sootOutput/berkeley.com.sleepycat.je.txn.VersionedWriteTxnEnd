    void <init>(long, long, int, long)
    {
        berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd this;
        long id, lastLsn, dtvlsn;
        int masterId;

        this := @this: berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd;

        id := @parameter0: long;

        lastLsn := @parameter1: long;

        masterId := @parameter2: int;

        dtvlsn := @parameter3: long;

        specialinvoke this.<berkeley.com.sleepycat.je.txn.TxnEnd: void <init>(long,long,int,long)>(id, lastLsn, masterId, dtvlsn);

        return;
    }

    public void writeToLog(java.nio.ByteBuffer)
    {
        berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd this;
        java.nio.ByteBuffer logBuffer;

        this := @this: berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd;

        logBuffer := @parameter0: java.nio.ByteBuffer;

        virtualinvoke this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: void writeToLog(java.nio.ByteBuffer,int,boolean)>(logBuffer, 14, 0);

        return;
    }

    public void writeToLog(java.nio.ByteBuffer, int, boolean)
    {
        berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd this;
        java.nio.ByteBuffer logBuffer;
        int entryVersion, $i3;
        boolean forReplication;
        long $l0, $l1, $l2, $l4, $l6;
        berkeley.com.sleepycat.je.utilint.Timestamp $r1;
        byte $b5;
        java.lang.IllegalStateException $r3;

        this := @this: berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd;

        logBuffer := @parameter0: java.nio.ByteBuffer;

        entryVersion := @parameter1: int;

        forReplication := @parameter2: boolean;

        if entryVersion < 12 goto label3;

        if forReplication == 0 goto label1;

        $l0 = -1L;

        goto label2;

     label1:
        $l0 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long lastLsn>;

     label2:
        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuffer, $l0);

     label3:
        $l1 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long id>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuffer, $l1);

        $r1 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: berkeley.com.sleepycat.je.utilint.Timestamp time>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writeTimestamp(java.nio.ByteBuffer,berkeley.com.sleepycat.je.utilint.Timestamp)>(logBuffer, $r1);

        if entryVersion >= 12 goto label6;

        if forReplication == 0 goto label4;

        $l2 = -1L;

        goto label5;

     label4:
        $l2 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long lastLsn>;

     label5:
        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuffer, $l2);

     label6:
        $i3 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: int repMasterNodeId>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writePackedInt(java.nio.ByteBuffer,int)>(logBuffer, $i3);

        if entryVersion < 13 goto label8;

        $l4 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long dtvlsn>;

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label7;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected null dtvlsn");

        throw $r3;

     label7:
        $l6 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long dtvlsn>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuffer, $l6);

     label8:
        return;
    }

    public int getLogSize()
    {
        berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd this;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: int getLogSize(int,boolean)>(14, 0);

        return $i0;
    }

    public int getLogSize(int, boolean)
    {
        berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd this;
        int logVersion, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        boolean forReplication;
        long $l0, $l2, $l6, $l12;
        byte $b1;
        java.lang.IllegalStateException $r0;
        berkeley.com.sleepycat.je.utilint.Timestamp $r1;

        this := @this: berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd;

        logVersion := @parameter0: int;

        forReplication := @parameter1: boolean;

        $l0 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long dtvlsn>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DTVLSN is null");

        throw $r0;

     label1:
        $l2 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long id>;

        $i3 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getPackedLongLogSize(long)>($l2);

        $r1 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: berkeley.com.sleepycat.je.utilint.Timestamp time>;

        $i4 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getTimestampLogSize(berkeley.com.sleepycat.je.utilint.Timestamp)>($r1);

        $i5 = $i3 + $i4;

        if forReplication == 0 goto label2;

        $l6 = -1L;

        goto label3;

     label2:
        $l6 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long lastLsn>;

     label3:
        $i7 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getPackedLongLogSize(long)>($l6);

        $i8 = $i5 + $i7;

        $i9 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: int repMasterNodeId>;

        $i10 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getPackedIntLogSize(int)>($i9);

        $i11 = $i8 + $i10;

        if logVersion < 13 goto label4;

        $l12 = this.<berkeley.com.sleepycat.je.txn.VersionedWriteTxnEnd: long dtvlsn>;

        $i13 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int getPackedLongLogSize(long)>($l12);

        goto label5;

     label4:
        $i13 = 0;

     label5:
        $i14 = $i11 + $i13;

        return $i14;
    }


