    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.io.ObjectStreamField $r1, $r2;

        $r0 = newarray (java.io.ObjectStreamField)[2];

        $r1 = new java.io.ObjectStreamField;

        specialinvoke $r1.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("perms", class "java/util/Hashtable");

        $r0[0] = $r1;

        $r2 = new java.io.ObjectStreamField;

        specialinvoke $r2.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("allPermission", class "java/security/PermissionCollection");

        $r0[1] = $r2;

        <java.security.Permissions: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        return;
    }

    public void <init>()
    {
        java.security.Permissions l0;
        java.util.HashMap $r0;

        l0 := @this: java.security.Permissions;

        specialinvoke l0.<java.security.PermissionCollection: void <init>()>();

        l0.<java.security.Permissions: boolean hasUnresolved> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(11);

        l0.<java.security.Permissions: java.util.Map permsMap> = $r0;

        l0.<java.security.Permissions: java.security.PermissionCollection allPermission> = null;

        return;
    }


