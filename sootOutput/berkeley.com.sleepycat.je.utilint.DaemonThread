    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/utilint/DaemonThread";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.utilint.DaemonThread: boolean $assertionsDisabled> = $z1;

        <berkeley.com.sleepycat.je.utilint.DaemonThread: boolean stifleExceptionChatter> = 0;

        return;
    }

    public void <init>(long, java.lang.String, berkeley.com.sleepycat.je.dbi.EnvironmentImpl)
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        long waitTime;
        java.lang.String name, $r1;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        java.lang.Object $r0;
        java.util.logging.Logger $r2;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        waitTime := @parameter0: long;

        name := @parameter1: java.lang.String;

        envImpl := @parameter2: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Object synchronizer> = $r0;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean shutdownRequest> = 0;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean paused> = 0;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean running> = 0;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: long waitTime> = waitTime;

        $r1 = virtualinvoke envImpl.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: java.lang.String makeDaemonThreadName(java.lang.String)>(name);

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.String name> = $r1;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl> = envImpl;

        $r2 = virtualinvoke this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.util.logging.Logger createLogger()>();

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.util.logging.Logger logger> = $r2;

        return;
    }

    public void setWaitTime(long)
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        long waitTime;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        waitTime := @parameter0: long;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: long waitTime> = waitTime;

        return;
    }

    protected java.util.logging.Logger createLogger()
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        java.lang.Class $r0;
        java.util.logging.Logger $r1;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        $r0 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = staticinvoke <berkeley.com.sleepycat.je.utilint.LoggerUtils: java.util.logging.Logger getLogger(java.lang.Class)>($r0);

        return $r1;
    }

    public void shutdown()
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        java.lang.Throwable l2, $r4;
        java.lang.Thread $r0, $r1, $r5;
        boolean $z0;
        java.lang.Object $r2, l1#11, $r3;
        java.lang.InterruptedException $r6, l1#22;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread>;

        if $r0 == null goto label11;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean shutdownRequest> = 1;

     label01:
        $r1 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread>;

        $z0 = virtualinvoke $r1.<java.lang.Thread: boolean isAlive()>();

        if $z0 == 0 goto label10;

        $r2 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Object synchronizer>;

        l1#11 = $r2;

        entermonitor $r2;

     label02:
        $r3 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Object synchronizer>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor l1#11;

     label03:
        goto label07;

     label04:
        $r4 := @caughtexception;

     label05:
        l2 = $r4;

        exitmonitor l1#11;

     label06:
        throw l2;

     label07:
        $r5 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread>;

        virtualinvoke $r5.<java.lang.Thread: void join(long)>(10L);

     label08:
        goto label01;

     label09:
        $r6 := @caughtexception;

        l1#22 = $r6;

        goto label01;

     label10:
        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread> = null;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.InterruptedException from label07 to label08 with label09;
    }

    public void runOrPause(boolean)
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        boolean run;
        java.lang.Thread $r0, $r1, $r3, $r4;
        java.lang.String $r2;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        run := @parameter0: boolean;

        if run == 0 goto label2;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean paused> = 0;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread>;

        if $r0 == null goto label1;

        virtualinvoke this.<berkeley.com.sleepycat.je.utilint.DaemonThread: void wakeup()>();

        goto label3;

     label1:
        $r1 = new java.lang.Thread;

        $r2 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.String name>;

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(this, $r2);

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread> = $r1;

        $r3 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread>;

        virtualinvoke $r3.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r4 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Thread thread>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        goto label3;

     label2:
        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean paused> = 1;

     label3:
        return;
    }

    public void wakeup()
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        java.lang.Object l1, $r0, $r1;
        java.lang.Throwable l2, $r2;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        $z0 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean paused>;

        if $z0 != 0 goto label6;

        $r0 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Object synchronizer>;

        l1 = $r0;

        entermonitor $r0;

     label1:
        $r1 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: java.lang.Object synchronizer>;

        virtualinvoke $r1.<java.lang.Object: void notifyAll()>();

        exitmonitor l1;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        l2 = $r2;

        exitmonitor l1;

     label5:
        throw l2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void requestShutdown()
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean shutdownRequest> = 1;

        return;
    }

    public boolean isRunning()
    {
        berkeley.com.sleepycat.je.utilint.DaemonThread this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.utilint.DaemonThread;

        $z0 = this.<berkeley.com.sleepycat.je.utilint.DaemonThread: boolean running>;

        return $z0;
    }


