    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        berkeley.com.sleepycat.je.log.LogEntryType $r1;
        byte $b0;

        $r0 = class "berkeley/com/sleepycat/je/log/LogEntryHeader";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.log.LogEntryHeader: boolean $assertionsDisabled> = $z1;

        $r1 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        $b0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.LogEntryType: byte getTypeNum()>();

        <berkeley.com.sleepycat.je.log.LogEntryHeader: byte FILE_HEADER_TYPE_NUM> = $b0;

        return;
    }

    public static void turnOffInvisible(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer buffer;
        int logHeaderStartPosition, flagsPosition;
        byte flags#7, $b0, flags#12;

        buffer := @parameter0: java.nio.ByteBuffer;

        logHeaderStartPosition := @parameter1: int;

        flagsPosition = logHeaderStartPosition + 5;

        flags#7 = virtualinvoke buffer.<java.nio.ByteBuffer: byte get(int)>(flagsPosition);

        $b0 = flags#7 & -17;

        flags#12 = (byte) $b0;

        virtualinvoke buffer.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(flagsPosition, flags#12);

        return;
    }

    public void <init>(java.nio.ByteBuffer, int, long) throws berkeley.com.sleepycat.je.log.ChecksumException
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.nio.ByteBuffer entryBuffer;
        int logVersion, $i4, $i5, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i20, $i21, $i22, $i23, $i24;
        long lsn, $l0, $l19;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r0, $r26;
        byte $b1, $b2, $b3, $b6, $b7, $b9, $b12, $b18;
        berkeley.com.sleepycat.je.log.ChecksumException $r1, $r13, $r27;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r37;
        java.lang.String $r6, $r12, $r18, $r24, $r32, $r38;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        logVersion := @parameter1: int;

        lsn := @parameter2: long;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $z0 = <berkeley.com.sleepycat.je.log.LogEntryHeader: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion);

        if logVersion == -1 goto label2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion);

        if logVersion < 1 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion);

        if logVersion <= 14 goto label2;

     label1:
        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(int)>(logVersion);

        throw $r0;

     label2:
        $l0 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: long readUnsignedInt(java.nio.ByteBuffer)>(entryBuffer);

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long checksumVal> = $l0;

        $b1 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: byte get()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType> = $b1;

        $b2 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        $z1 = staticinvoke <berkeley.com.sleepycat.je.log.LogEntryType: boolean isValidType(byte)>($b2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label3;

        $r1 = new berkeley.com.sleepycat.je.log.ChecksumException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid log entry type: ");

        $b3 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lsn=");

        $r6 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(lsn);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bufPosition=");

        $i4 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bufRemaining=");

        $i5 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int remaining()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<berkeley.com.sleepycat.je.log.ChecksumException: void <init>(java.lang.String)>($r12);

        throw $r1;

     label3:
        $b6 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        $b7 = <berkeley.com.sleepycat.je.log.LogEntryHeader: byte FILE_HEADER_TYPE_NUM>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b6);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b7);

        if $b6 != $b7 goto label4;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion> = -1;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: byte get()>();

        specialinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: void initFlags(int)>(0);

        goto label8;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion);

        if logVersion != -1 goto label5;

        $r13 = new berkeley.com.sleepycat.je.log.ChecksumException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong entry type for header: ");

        $b9 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b9);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lsn=");

        $r18 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(lsn);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bufPosition=");

        $i10 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bufRemaining=");

        $i11 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int remaining()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<berkeley.com.sleepycat.je.log.ChecksumException: void <init>(java.lang.String)>($r24);

        throw $r13;

     label5:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion);

        if logVersion > 6 goto label7;

        $b12 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: byte get()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion> = $b12;

        $i13 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion>;

        $i14 = $i13 & -32;

        specialinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: void initFlags(int)>($i14);

        $i15 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion>;

        $i16 = $i15 & 31;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion> = $i16;

        $z2 = <berkeley.com.sleepycat.je.log.LogEntryHeader: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 != 0 goto label8;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(logVersion);

        if logVersion != 6 goto label8;

        $i17 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        if $i17 != 6 goto label6;

        goto label8;

     label6:
        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label7:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion> = logVersion;

        $b18 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: byte get()>();

        specialinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: void initFlags(int)>($b18);

     label8:
        $l19 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: long readUnsignedInt(java.nio.ByteBuffer)>(entryBuffer);

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long prevOffset> = $l19;

        $i20 = staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: int readInt(java.nio.ByteBuffer)>(entryBuffer);

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize> = $i20;

        $i21 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i21);

        if $i21 >= 0 goto label9;

        $r27 = new berkeley.com.sleepycat.je.log.ChecksumException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid log entry size: ");

        $i22 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lsn=");

        $r32 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: java.lang.String getNoFormatString(long)>(lsn);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bufPosition=");

        $i23 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bufRemaining=");

        $i24 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int remaining()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<berkeley.com.sleepycat.je.log.ChecksumException: void <init>(java.lang.String)>($r38);

        throw $r27;

     label9:
        return;
    }

    private void initFlags(int)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        int entryFlags, $i0, $i1, $i2, $i3, $i4;
        berkeley.com.sleepycat.je.log.Provisional $r0, $r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        entryFlags := @parameter0: int;

        $i0 = entryFlags & -128;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 == 0 goto label01;

        $r0 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional YES>;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional> = $r0;

        goto label03;

     label01:
        $i1 = entryFlags & 64;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 == 0 goto label02;

        $r1 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional BEFORE_CKPT_END>;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional> = $r1;

        goto label03;

     label02:
        $r2 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional NO>;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional> = $r2;

     label03:
        $i2 = entryFlags & 32;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 == 0 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean replicated> = $z0;

        $i3 = entryFlags & 16;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 == 0 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean invisible> = $z1;

        $i4 = entryFlags & 8;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 != 0 goto label08;

        $z2 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean replicated>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label09;

     label08:
        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent> = $z3;

        return;
    }

    public long getPrevOffset()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $l0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long prevOffset>;

        return $l0;
    }

    public boolean isInvisible()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $z0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean invisible>;

        return $z0;
    }

    public boolean getReplicated()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $z0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean replicated>;

        return $z0;
    }

    public int getEntrySize()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        int $i0, $i1, $i2;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $i1 = virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getSize()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $z0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        return 22;

     label1:
        return 14;
    }

    public int getItemSize()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $i0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize>;

        return $i0;
    }

    public void <init>(berkeley.com.sleepycat.je.log.entry.LogEntry, berkeley.com.sleepycat.je.log.Provisional, berkeley.com.sleepycat.je.log.ReplicationContext)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        berkeley.com.sleepycat.je.log.entry.LogEntry entry;
        berkeley.com.sleepycat.je.log.Provisional provisional;
        berkeley.com.sleepycat.je.log.ReplicationContext repContext;
        berkeley.com.sleepycat.je.log.LogEntryType logEntryType;
        byte $b0;
        int $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.AssertionError $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        berkeley.com.sleepycat.je.utilint.VLSN $r6;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        entry := @parameter0: berkeley.com.sleepycat.je.log.entry.LogEntry;

        provisional := @parameter1: berkeley.com.sleepycat.je.log.Provisional;

        repContext := @parameter2: berkeley.com.sleepycat.je.log.ReplicationContext;

        specialinvoke this.<java.lang.Object: void <init>()>();

        logEntryType = interfaceinvoke entry.<berkeley.com.sleepycat.je.log.entry.LogEntry: berkeley.com.sleepycat.je.log.LogEntryType getLogType()>();

        $b0 = virtualinvoke logEntryType.<berkeley.com.sleepycat.je.log.LogEntryType: byte getTypeNum()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType> = $b0;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion> = 14;

        $i1 = interfaceinvoke entry.<berkeley.com.sleepycat.je.log.entry.LogEntry: int getSize()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize> = $i1;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional> = provisional;

        $z0 = <berkeley.com.sleepycat.je.log.LogEntryHeader: boolean $assertionsDisabled>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke logEntryType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isReplicationPossible()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke repContext.<berkeley.com.sleepycat.je.log.ReplicationContext: boolean inReplicationStream()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label1;

        $r0 = new java.lang.AssertionError;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(logEntryType);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should never be replicated.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r0;

     label1:
        $z3 = virtualinvoke logEntryType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isReplicationPossible()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label2;

        $z4 = virtualinvoke repContext.<berkeley.com.sleepycat.je.log.ReplicationContext: boolean inReplicationStream()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean replicated> = $z4;

        goto label3;

     label2:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean replicated> = 0;

     label3:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean invisible> = 0;

        $r6 = virtualinvoke repContext.<berkeley.com.sleepycat.je.log.ReplicationContext: berkeley.com.sleepycat.je.utilint.VLSN getClientVLSN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r6 != null goto label4;

        $z5 = virtualinvoke repContext.<berkeley.com.sleepycat.je.log.ReplicationContext: boolean mustGenerateVLSN()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label5;

     label4:
        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent> = $z6;

        return;
    }

    public berkeley.com.sleepycat.je.utilint.VLSN getVLSN()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        berkeley.com.sleepycat.je.utilint.VLSN $r0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $r0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.utilint.VLSN vlsn>;

        return $r0;
    }

    public void writeToLog(java.nio.ByteBuffer)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.nio.ByteBuffer entryBuffer;
        byte $b0, flags#9, $b1, $b2, $b3, $b4;
        berkeley.com.sleepycat.je.log.Provisional $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        int $i5, $i6, $i7;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(4);

        $b0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b0);

        flags#9 = 0;

        $r2 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional>;

        $r3 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional YES>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        if $r2 != $r3 goto label1;

        $b1 = flags#9 | -128;

        flags#9 = (byte) $b1;

        goto label2;

     label1:
        $r4 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional>;

        $r5 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional BEFORE_CKPT_END>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        if $r4 != $r5 goto label2;

        $b2 = flags#9 | 64;

        flags#9 = (byte) $b2;

     label2:
        $z0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean replicated>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        $b3 = flags#9 | 32;

        flags#9 = (byte) $b3;

     label3:
        $z1 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label4;

        $b4 = flags#9 | 8;

        flags#9 = (byte) $b4;

     label4:
        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(flags#9);

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(10);

        $i5 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writeInt(java.nio.ByteBuffer,int)>(entryBuffer, $i5);

        $z2 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label5;

        $i6 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int position()>();

        $i7 = $i6 + 8;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i7);

     label5:
        return;
    }

    public java.nio.ByteBuffer addPostMarshallingInfo(java.nio.ByteBuffer, long, berkeley.com.sleepycat.je.utilint.VLSN)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.nio.ByteBuffer entryBuffer;
        long lastOffset, $l0, $l5, $l6;
        berkeley.com.sleepycat.je.utilint.VLSN vlsn;
        java.util.zip.Checksum checksum;
        byte[] $r2;
        int $i1, $i2, $i3, $i4;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        lastOffset := @parameter1: long;

        vlsn := @parameter2: berkeley.com.sleepycat.je.utilint.VLSN;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long prevOffset> = lastOffset;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(6);

        $l0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long prevOffset>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writeUnsignedInt(java.nio.ByteBuffer,long)>(entryBuffer, $l0);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(vlsn);

        if vlsn == null goto label1;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.utilint.VLSN vlsn> = vlsn;

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(14);

        virtualinvoke vlsn.<berkeley.com.sleepycat.je.utilint.VLSN: void writeToLog(java.nio.ByteBuffer)>(entryBuffer);

     label1:
        checksum = staticinvoke <berkeley.com.sleepycat.je.utilint.Adler32: java.util.zip.Checksum makeChecksum()>();

        $r2 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int arrayOffset()>();

        $i2 = $i1 + 4;

        $i3 = virtualinvoke entryBuffer.<java.nio.ByteBuffer: int limit()>();

        $i4 = $i3 - 4;

        interfaceinvoke checksum.<java.util.zip.Checksum: void update(byte[],int,int)>($r2, $i2, $i4);

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $l5 = interfaceinvoke checksum.<java.util.zip.Checksum: long getValue()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long checksumVal> = $l5;

        $l6 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long checksumVal>;

        staticinvoke <berkeley.com.sleepycat.je.log.LogUtils: void writeUnsignedInt(java.nio.ByteBuffer,long)>(entryBuffer, $l6);

        virtualinvoke entryBuffer.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        return entryBuffer;
    }

    int getSizeMinusChecksum()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        int $i0, $i1;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $i0 = virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $i1 = $i0 - 4;

        return $i1;
    }

    public long getChecksum()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $l0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long checksumVal>;

        return $l0;
    }

    public boolean isVariableLength()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $z0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent>;

        return $z0;
    }

    public int getVariablePortionSize()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        return 8;
    }

    public void readVariablePortion(java.nio.ByteBuffer)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.nio.ByteBuffer entryBuffer;
        boolean $z0;
        berkeley.com.sleepycat.je.utilint.VLSN $r0, $r1;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        $z0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean vlsnPresent>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        $r0 = new berkeley.com.sleepycat.je.utilint.VLSN;

        specialinvoke $r0.<berkeley.com.sleepycat.je.utilint.VLSN: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.utilint.VLSN vlsn> = $r0;

        $r1 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.utilint.VLSN vlsn>;

        $i0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.utilint.VLSN: void readFromLog(java.nio.ByteBuffer,int)>(entryBuffer, $i0);

     label1:
        return;
    }

    public byte getType()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        byte $b0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $b0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        return $b0;
    }

    public void setFileHeaderVersion(int)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        int logVersion;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        logVersion := @parameter0: int;

        this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion> = logVersion;

        return;
    }

    public int getVersion()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        int $i0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $i0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion>;

        return $i0;
    }

    public berkeley.com.sleepycat.je.log.Provisional getProvisional()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        berkeley.com.sleepycat.je.log.Provisional $r0;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $r0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional>;

        return $r0;
    }

    public java.lang.String toString()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.lang.StringBuilder sb, $r0;
        java.lang.String $r1;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        sb = $r0;

        virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: void dumpLog(java.lang.StringBuilder,boolean)>(sb, 1);

        $r1 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void dumpLog(java.lang.StringBuilder, boolean)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.lang.StringBuilder sb;
        boolean verbose;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        sb := @parameter0: java.lang.StringBuilder;

        verbose := @parameter1: boolean;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<hdr ");

        virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: void dumpLogNoTag(java.lang.StringBuilder,boolean)>(sb, verbose);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>");

        return;
    }

    void dumpLogNoTag(java.lang.StringBuilder, boolean)
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;
        java.lang.StringBuilder sb, $r0, $r2, $r3, $r16, $r19, $r21;
        boolean verbose, $z0, $z1;
        berkeley.com.sleepycat.je.log.LogEntryType lastEntryType;
        byte $b0;
        java.lang.String $r1, $r17;
        int $i1, $i3;
        berkeley.com.sleepycat.je.log.Provisional $r5, $r6, $r8;
        berkeley.com.sleepycat.je.utilint.VLSN $r10, $r12;
        long $l2, $l4;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        sb := @parameter0: java.lang.StringBuilder;

        verbose := @parameter1: boolean;

        $b0 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte entryType>;

        lastEntryType = staticinvoke <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType findType(byte)>($b0);

        $r0 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=\"");

        $r1 = virtualinvoke lastEntryType.<berkeley.com.sleepycat.je.log.LogEntryType: java.lang.String toStringNoVersion()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i1 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int entryVersion>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional>;

        $r6 = <berkeley.com.sleepycat.je.log.Provisional: berkeley.com.sleepycat.je.log.Provisional NO>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r5);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r6);

        if $r5 == $r6 goto label1;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" prov=\"");

        $r8 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional provisional>;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label1:
        $r10 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.utilint.VLSN vlsn>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r10);

        if $r10 == null goto label2;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r12 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.utilint.VLSN vlsn>;

        virtualinvoke $r12.<berkeley.com.sleepycat.je.utilint.VLSN: void dumpLog(java.lang.StringBuilder,boolean)>(sb, verbose);

        goto label3;

     label2:
        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label3:
        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean getReplicated()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label4;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isReplicated=\"1\"");

     label4:
        $z1 = virtualinvoke this.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean isInvisible()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label5;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isInvisible=\"1\"");

     label5:
        $r16 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prev=\"0x");

        $l2 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long prevOffset>;

        $r17 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(verbose);

        if verbose == 0 goto label6;

        $r19 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" size=\"");

        $i3 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: int itemSize>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" cksum=\"");

        $l4 = this.<berkeley.com.sleepycat.je.log.LogEntryHeader: long checksumVal>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

     label6:
        return;
    }

    int getInvariantSizeMinusChecksum()
    {
        berkeley.com.sleepycat.je.log.LogEntryHeader this;

        this := @this: berkeley.com.sleepycat.je.log.LogEntryHeader;

        return 10;
    }

    static byte makeInvisible(byte)
    {
        byte flags#1, $b0, $b1, flags#7;

        flags#1 := @parameter0: byte;

        $b0 = flags#1 | 16;

        $b1 = (byte) $b0;

        flags#7 = $b1;

        return $b1;
    }


