    public void <init>()
    {
        kanzi.entropy.CMPredictor this;
        int[][] $r0, $r1, $r2, $r4, $r6, $r8, $r10;
        int i#17, j#21, j#31, $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, $i13;
        int[] $r3, $r5, $r7, $r9, $r11;

        this := @this: kanzi.entropy.CMPredictor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<kanzi.entropy.CMPredictor: int ctx> = 1;

        this.<kanzi.entropy.CMPredictor: int run> = 1;

        this.<kanzi.entropy.CMPredictor: int idx> = 8;

        $r0 = newmultiarray (int)[256][257];

        this.<kanzi.entropy.CMPredictor: int[][] counter1> = $r0;

        $r1 = newmultiarray (int)[512][17];

        this.<kanzi.entropy.CMPredictor: int[][] counter2> = $r1;

        i#17 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#17);

        if i#17 >= 256 goto label6;

        j#21 = 0;

     label2:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#21);

        if j#21 > 256 goto label3;

        $r2 = this.<kanzi.entropy.CMPredictor: int[][] counter1>;

        $r3 = $r2[i#17];

        $r3[j#21] = 32768;

        j#21 = j#21 + 1;

        goto label2;

     label3:
        j#31 = 0;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(j#31);

        if j#31 > 16 goto label5;

        $r4 = this.<kanzi.entropy.CMPredictor: int[][] counter2>;

        $i0 = i#17 + i#17;

        $r5 = $r4[$i0];

        $i1 = j#31 << 12;

        $r5[j#31] = $i1;

        $r6 = this.<kanzi.entropy.CMPredictor: int[][] counter2>;

        $i2 = i#17 + i#17;

        $i3 = $i2 + 1;

        $r7 = $r6[$i3];

        $i4 = j#31 << 12;

        $r7[j#31] = $i4;

        j#31 = j#31 + 1;

        goto label4;

     label5:
        $r8 = this.<kanzi.entropy.CMPredictor: int[][] counter2>;

        $i5 = i#17 + i#17;

        $r9 = $r8[$i5];

        $i7 = $r9[16];

        $i8 = $i7 - 16;

        $r9[16] = $i8;

        $r10 = this.<kanzi.entropy.CMPredictor: int[][] counter2>;

        $i9 = i#17 + i#17;

        $i10 = $i9 + 1;

        $r11 = $r10[$i10];

        $i12 = $r11[16];

        $i13 = $i12 - 16;

        $r11[16] = $i13;

        i#17 = i#17 + 1;

        goto label1;

     label6:
        return;
    }

    public int get()
    {
        kanzi.entropy.CMPredictor this;
        int[] pc1, pc2;
        int p, x1, x2, ssep, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        int[][] $r0, $r1;

        this := @this: kanzi.entropy.CMPredictor;

        $r0 = this.<kanzi.entropy.CMPredictor: int[][] counter1>;

        $i0 = this.<kanzi.entropy.CMPredictor: int ctx>;

        pc1 = $r0[$i0];

        $i1 = pc1[256];

        $i2 = 13 * $i1;

        $i3 = this.<kanzi.entropy.CMPredictor: int c1>;

        $i4 = pc1[$i3];

        $i5 = 14 * $i4;

        $i6 = $i2 + $i5;

        $i7 = this.<kanzi.entropy.CMPredictor: int c2>;

        $i8 = pc1[$i7];

        $i9 = 5 * $i8;

        $i10 = $i6 + $i9;

        p = $i10 >> 5;

        $i11 = p >>> 12;

        this.<kanzi.entropy.CMPredictor: int idx> = $i11;

        $r1 = this.<kanzi.entropy.CMPredictor: int[][] counter2>;

        $i12 = this.<kanzi.entropy.CMPredictor: int ctx>;

        $i13 = $i12 << 1;

        $i14 = this.<kanzi.entropy.CMPredictor: int runMask>;

        $i15 = $i13 | $i14;

        pc2 = $r1[$i15];

        $i16 = this.<kanzi.entropy.CMPredictor: int idx>;

        x1 = pc2[$i16];

        $i17 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i18 = $i17 + 1;

        x2 = pc2[$i18];

        $i19 = x2 - x1;

        $i20 = p & 4095;

        $i21 = $i19 * $i20;

        $i22 = $i21 >> 12;

        ssep = x1 + $i22;

        $i23 = p + ssep;

        $i24 = $i23 + ssep;

        $i25 = $i24 + ssep;

        $i26 = $i25 + 32;

        $i27 = $i26 >>> 6;

        return $i27;
    }

    public void update(int)
    {
        kanzi.entropy.CMPredictor this;
        int bit, $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72;
        int[] counter1_, counter2_;
        int[][] $r0, $r2;

        this := @this: kanzi.entropy.CMPredictor;

        bit := @parameter0: int;

        $r0 = this.<kanzi.entropy.CMPredictor: int[][] counter1>;

        $i0 = this.<kanzi.entropy.CMPredictor: int ctx>;

        counter1_ = $r0[$i0];

        $i1 = this.<kanzi.entropy.CMPredictor: int ctx>;

        $i2 = $i1 << 1;

        this.<kanzi.entropy.CMPredictor: int ctx> = $i2;

        $r2 = this.<kanzi.entropy.CMPredictor: int[][] counter2>;

        $i3 = this.<kanzi.entropy.CMPredictor: int ctx>;

        $i4 = this.<kanzi.entropy.CMPredictor: int runMask>;

        $i5 = $i3 | $i4;

        counter2_ = $r2[$i5];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(bit);

        if bit != 0 goto label1;

        $i7 = counter1_[256];

        $i8 = counter1_[256];

        $i9 = $i8 >> 2;

        $i10 = $i7 - $i9;

        counter1_[256] = $i10;

        $i11 = this.<kanzi.entropy.CMPredictor: int c1>;

        $i12 = counter1_[$i11];

        $i13 = this.<kanzi.entropy.CMPredictor: int c1>;

        $i14 = counter1_[$i13];

        $i15 = $i14 >> 4;

        $i16 = $i12 - $i15;

        counter1_[$i11] = $i16;

        $i17 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i18 = $i17 + 1;

        $i19 = counter2_[$i18];

        $i20 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i21 = $i20 + 1;

        $i22 = counter2_[$i21];

        $i23 = $i22 >> 6;

        $i24 = $i19 - $i23;

        counter2_[$i18] = $i24;

        $i25 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i26 = counter2_[$i25];

        $i27 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i28 = counter2_[$i27];

        $i29 = $i28 >> 6;

        $i30 = $i26 - $i29;

        counter2_[$i25] = $i30;

        goto label2;

     label1:
        $i32 = counter1_[256];

        $i33 = counter1_[256];

        $i34 = $i33 ^ 65535;

        $i35 = $i34 >> 2;

        $i36 = $i32 + $i35;

        counter1_[256] = $i36;

        $i37 = this.<kanzi.entropy.CMPredictor: int c1>;

        $i38 = counter1_[$i37];

        $i39 = this.<kanzi.entropy.CMPredictor: int c1>;

        $i40 = counter1_[$i39];

        $i41 = $i40 ^ 65535;

        $i42 = $i41 >> 4;

        $i43 = $i38 + $i42;

        counter1_[$i37] = $i43;

        $i44 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i45 = $i44 + 1;

        $i46 = counter2_[$i45];

        $i47 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i48 = $i47 + 1;

        $i49 = counter2_[$i48];

        $i50 = $i49 ^ 65535;

        $i51 = $i50 >> 6;

        $i52 = $i46 + $i51;

        counter2_[$i45] = $i52;

        $i53 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i54 = counter2_[$i53];

        $i55 = this.<kanzi.entropy.CMPredictor: int idx>;

        $i56 = counter2_[$i55];

        $i57 = $i56 ^ 65535;

        $i58 = $i57 >> 6;

        $i59 = $i54 + $i58;

        counter2_[$i53] = $i59;

        $i60 = this.<kanzi.entropy.CMPredictor: int ctx>;

        $i61 = $i60 + 1;

        this.<kanzi.entropy.CMPredictor: int ctx> = $i61;

     label2:
        $i62 = this.<kanzi.entropy.CMPredictor: int ctx>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i62);

        if $i62 <= 255 goto label4;

        $i63 = this.<kanzi.entropy.CMPredictor: int c1>;

        this.<kanzi.entropy.CMPredictor: int c2> = $i63;

        $i64 = this.<kanzi.entropy.CMPredictor: int ctx>;

        $i65 = $i64 & 255;

        this.<kanzi.entropy.CMPredictor: int c1> = $i65;

        this.<kanzi.entropy.CMPredictor: int ctx> = 1;

        $i66 = this.<kanzi.entropy.CMPredictor: int c1>;

        $i67 = this.<kanzi.entropy.CMPredictor: int c2>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i66);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i67);

        if $i66 != $i67 goto label3;

        $i68 = this.<kanzi.entropy.CMPredictor: int run>;

        $i69 = $i68 + 1;

        this.<kanzi.entropy.CMPredictor: int run> = $i69;

        $i70 = this.<kanzi.entropy.CMPredictor: int run>;

        $i71 = 2 - $i70;

        $i72 = $i71 >>> 31;

        this.<kanzi.entropy.CMPredictor: int runMask> = $i72;

        goto label4;

     label3:
        this.<kanzi.entropy.CMPredictor: int run> = 0;

        this.<kanzi.entropy.CMPredictor: int runMask> = 0;

     label4:
        return;
    }


