digraph getStorageSize {
"bin := @parameter0: berkeley.com.sleepycat.je.tree.BIN {313345334}" -> "idx := @parameter1: int {175704334}";
"idx := @parameter1: int {175704334}" -> "storedKeySize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx) {899707}";
"storedKeySize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getStoredKeySize(int)>(idx) {899707}" -> "$r0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>() {108136328}";
"$r0 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>() {108136328}" -> "$z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>() {249447384}";
"$z0 = virtualinvoke $r0.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: boolean getSortedDuplicates()>() {249447384}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1165933323}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1165933323}" -> "if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {1676537370}";
"if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {1676537370}" -> "$i0 = storedKeySize - 1 {1982109382}";
"if $z0 == 0 goto $z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {1676537370}" -> "$z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {352493088}";
"$i0 = storedKeySize - 1 {1982109382}" -> "$i1 = $i0 + 12 {1612388095}";
"$i1 = $i0 + 12 {1612388095}" -> "return $i1 {753471622}";
"$z1 = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: boolean isEmbeddedLN(int)>(idx) {352493088}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1795757655}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1795757655}" -> "if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {1896599846}";
"if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {1896599846}" -> "$i2 = storedKeySize - 1 {1554899345}";
"if $z1 == 0 goto lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {1896599846}" -> "lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {7627384}";
"$i2 = storedKeySize - 1 {1554899345}" -> "$i3 = $i2 + 20 {1091047818}";
"$i3 = $i2 + 20 {1091047818}" -> "return $i3 {1623874968}";
"lastLoggedSize = virtualinvoke bin.<berkeley.com.sleepycat.je.tree.BIN: int getLastLoggedSize(int)>(idx) {7627384}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {1703812521}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {1703812521}" -> "if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {794071299}";
"if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {794071299}" -> "return 0 {518513131}";
"if lastLoggedSize != 0 goto $i4 = lastLoggedSize + storedKeySize {794071299}" -> "$i4 = lastLoggedSize + storedKeySize {1918524878}";
"$i4 = lastLoggedSize + storedKeySize {1918524878}" -> "$i5 = $i4 + 14 {1065376312}";
"$i5 = $i4 + 14 {1065376312}" -> "return $i5 {1644476403}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(lastLoggedSize) {1703812521}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0) {1165933323}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1) {1795757655}"[fontcolor="blue", penwidth=3, color="blue"];
}


