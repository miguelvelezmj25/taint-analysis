    public void <init>(int, boolean)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;
        int minLength;
        boolean allowSparseRep;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        minLength := @parameter0: int;

        allowSparseRep := @parameter1: boolean;

        specialinvoke this.<com.sleepycat.je.tree.INLongRep: void <init>()>();

        this.<com.sleepycat.je.tree.INLongRep$EmptyRep: int minLength> = minLength;

        this.<com.sleepycat.je.tree.INLongRep$EmptyRep: boolean allowSparseRep> = allowSparseRep;

        return;
    }

    public long getMemorySize()
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        return 0L;
    }

    public long get(int)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;
        int idx;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        idx := @parameter0: int;

        return 0L;
    }

    public com.sleepycat.je.tree.INLongRep resize(int)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;
        int capacity;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        capacity := @parameter0: int;

        return this;
    }

    public com.sleepycat.je.tree.INLongRep set(int, long, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;
        int idx, $i1, $i2;
        long val, $l3, $l4;
        com.sleepycat.je.tree.IN parent;
        com.sleepycat.je.tree.INLongRep$DefaultRep newCache, $r0;
        byte $b0;
        com.sleepycat.je.tree.INLongRep $r1;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        idx := @parameter0: int;

        val := @parameter1: long;

        parent := @parameter2: com.sleepycat.je.tree.IN;

        $b0 = val cmp 0L;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b0);

        if $b0 != 0 goto label1;

        return this;

     label1:
        $r0 = new com.sleepycat.je.tree.INLongRep$DefaultRep;

        $i1 = virtualinvoke parent.<com.sleepycat.je.tree.IN: int getMaxEntries()>();

        $i2 = this.<com.sleepycat.je.tree.INLongRep$EmptyRep: int minLength>;

        specialinvoke $r0.<com.sleepycat.je.tree.INLongRep$DefaultRep: void <init>(int,int)>($i1, $i2);

        newCache = $r0;

        $l3 = virtualinvoke this.<com.sleepycat.je.tree.INLongRep$EmptyRep: long getMemorySize()>();

        $l4 = virtualinvoke newCache.<com.sleepycat.je.tree.INLongRep: long getMemorySize()>();

        virtualinvoke parent.<com.sleepycat.je.tree.IN: void updateMemorySize(long,long)>($l3, $l4);

        $r1 = virtualinvoke newCache.<com.sleepycat.je.tree.INLongRep: com.sleepycat.je.tree.INLongRep set(int,long,com.sleepycat.je.tree.IN)>(idx, val, parent);

        return $r1;
    }

    public com.sleepycat.je.tree.INLongRep copy(int, int, int, com.sleepycat.je.tree.IN)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;
        int 'from', 'to', n;
        com.sleepycat.je.tree.IN parent;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        'from' := @parameter0: int;

        'to' := @parameter1: int;

        n := @parameter2: int;

        parent := @parameter3: com.sleepycat.je.tree.IN;

        return this;
    }

    public com.sleepycat.je.tree.INLongRep compact(com.sleepycat.je.tree.IN, com.sleepycat.je.tree.INLongRep$EmptyRep)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this, emptyRep;
        com.sleepycat.je.tree.IN parent;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        parent := @parameter0: com.sleepycat.je.tree.IN;

        emptyRep := @parameter1: com.sleepycat.je.tree.INLongRep$EmptyRep;

        return this;
    }

    public boolean isEmpty()
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        return 1;
    }

    public com.sleepycat.je.tree.INLongRep clear(com.sleepycat.je.tree.IN, com.sleepycat.je.tree.INLongRep$EmptyRep)
    {
        com.sleepycat.je.tree.INLongRep$EmptyRep this, emptyRep;
        com.sleepycat.je.tree.IN parent;

        this := @this: com.sleepycat.je.tree.INLongRep$EmptyRep;

        parent := @parameter0: com.sleepycat.je.tree.IN;

        emptyRep := @parameter1: com.sleepycat.je.tree.INLongRep$EmptyRep;

        return this;
    }


