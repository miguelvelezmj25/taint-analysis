    void <init>(com.sleepycat.je.dbi.EnvironmentImpl, com.sleepycat.je.cleaner.Cleaner)
    {
        com.sleepycat.je.cleaner.UtilizationCalculator this;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        com.sleepycat.je.cleaner.Cleaner cleaner;
        java.lang.Class $r0;
        java.util.logging.Logger $r1;
        com.sleepycat.je.cleaner.FilesToMigrate $r2;

        this := @this: com.sleepycat.je.cleaner.UtilizationCalculator;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        cleaner := @parameter1: com.sleepycat.je.cleaner.Cleaner;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: int currentMinUtilization> = -1;

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: int currentMaxUtilization> = -1;

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: int predictedMinUtilization> = -1;

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: int predictedMaxUtilization> = -1;

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: com.sleepycat.je.dbi.EnvironmentImpl env> = env;

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: com.sleepycat.je.cleaner.Cleaner cleaner> = cleaner;

        $r0 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = staticinvoke <com.sleepycat.je.utilint.LoggerUtils: java.util.logging.Logger getLogger(java.lang.Class)>($r0);

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: java.util.logging.Logger logger> = $r1;

        $r2 = new com.sleepycat.je.cleaner.FilesToMigrate;

        specialinvoke $r2.<com.sleepycat.je.cleaner.FilesToMigrate: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(env);

        this.<com.sleepycat.je.cleaner.UtilizationCalculator: com.sleepycat.je.cleaner.FilesToMigrate filesToMigrate> = $r2;

        virtualinvoke env.<com.sleepycat.je.dbi.EnvironmentImpl: void addConfigObserver(com.sleepycat.je.dbi.EnvConfigObserver)>(this);

        return;
    }

    int getCurrentMaxUtilization()
    {
        com.sleepycat.je.cleaner.UtilizationCalculator this;
        int $i0;

        this := @this: com.sleepycat.je.cleaner.UtilizationCalculator;

        $i0 = this.<com.sleepycat.je.cleaner.UtilizationCalculator: int currentMaxUtilization>;

        return $i0;
    }

    int getCurrentMinUtilization()
    {
        com.sleepycat.je.cleaner.UtilizationCalculator this;
        int $i0;

        this := @this: com.sleepycat.je.cleaner.UtilizationCalculator;

        $i0 = this.<com.sleepycat.je.cleaner.UtilizationCalculator: int currentMinUtilization>;

        return $i0;
    }


