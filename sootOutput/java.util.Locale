    public static java.util.Locale getDefault(java.util.Locale$Category)
    {
        java.util.Locale$Category l0;
        java.lang.Throwable l2, l3, $r5, $r11;
        int[] $r0;
        int $i0, $i1;
        java.util.Locale $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r14;
        java.lang.Class l1#8, l1#20;
        boolean $z0;
        java.lang.AssertionError $r13;

        l0 := @parameter0: java.util.Locale$Category;

        $r0 = <java.util.Locale$1: int[] $SwitchMap$java$util$Locale$Category>;

        $i0 = virtualinvoke l0.<java.util.Locale$Category: int ordinal()>();

        $i1 = $r0[$i0];

        lookupswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label09;
            default: goto label17;
        };

     label01:
        $r1 = <java.util.Locale: java.util.Locale defaultDisplayLocale>;

        if $r1 != null goto label08;

        l1#8 = class "java/util/Locale";

        entermonitor class "java/util/Locale";

     label02:
        $r3 = <java.util.Locale: java.util.Locale defaultDisplayLocale>;

        if $r3 != null goto label03;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale initDefault(java.util.Locale$Category)>(l0);

        <java.util.Locale: java.util.Locale defaultDisplayLocale> = $r4;

     label03:
        exitmonitor l1#8;

     label04:
        goto label08;

     label05:
        $r5 := @caughtexception;

     label06:
        l2 = $r5;

        exitmonitor l1#8;

     label07:
        throw l2;

     label08:
        $r6 = <java.util.Locale: java.util.Locale defaultDisplayLocale>;

        return $r6;

     label09:
        $r7 = <java.util.Locale: java.util.Locale defaultFormatLocale>;

        if $r7 != null goto label16;

        l1#20 = class "java/util/Locale";

        entermonitor class "java/util/Locale";

     label10:
        $r9 = <java.util.Locale: java.util.Locale defaultFormatLocale>;

        if $r9 != null goto label11;

        $r10 = staticinvoke <java.util.Locale: java.util.Locale initDefault(java.util.Locale$Category)>(l0);

        <java.util.Locale: java.util.Locale defaultFormatLocale> = $r10;

     label11:
        exitmonitor l1#20;

     label12:
        goto label16;

     label13:
        $r11 := @caughtexception;

     label14:
        l3 = $r11;

        exitmonitor l1#20;

     label15:
        throw l3;

     label16:
        $r12 = <java.util.Locale: java.util.Locale defaultFormatLocale>;

        return $r12;

     label17:
        $z0 = <java.util.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label18;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>("Unknown Category");

        throw $r13;

     label18:
        $r14 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r14;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r30;
        boolean $z0, $z1;
        java.util.Locale$Cache $r1;
        java.util.Locale $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.io.ObjectStreamField[] $r25;
        java.io.ObjectStreamField $r26, $r27, $r28, $r29, $r31, $r32;

        $r0 = class "java/util/Locale";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.util.Locale: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.Locale$Cache;

        specialinvoke $r1.<java.util.Locale$Cache: void <init>(java.util.Locale$1)>(null);

        <java.util.Locale: java.util.Locale$Cache LOCALECACHE> = $r1;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("en", "");

        <java.util.Locale: java.util.Locale ENGLISH> = $r2;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("fr", "");

        <java.util.Locale: java.util.Locale FRENCH> = $r3;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("de", "");

        <java.util.Locale: java.util.Locale GERMAN> = $r4;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("it", "");

        <java.util.Locale: java.util.Locale ITALIAN> = $r5;

        $r6 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("ja", "");

        <java.util.Locale: java.util.Locale JAPANESE> = $r6;

        $r7 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("ko", "");

        <java.util.Locale: java.util.Locale KOREAN> = $r7;

        $r8 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("zh", "");

        <java.util.Locale: java.util.Locale CHINESE> = $r8;

        $r9 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("zh", "CN");

        <java.util.Locale: java.util.Locale SIMPLIFIED_CHINESE> = $r9;

        $r10 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("zh", "TW");

        <java.util.Locale: java.util.Locale TRADITIONAL_CHINESE> = $r10;

        $r11 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("fr", "FR");

        <java.util.Locale: java.util.Locale FRANCE> = $r11;

        $r12 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("de", "DE");

        <java.util.Locale: java.util.Locale GERMANY> = $r12;

        $r13 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("it", "IT");

        <java.util.Locale: java.util.Locale ITALY> = $r13;

        $r14 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("ja", "JP");

        <java.util.Locale: java.util.Locale JAPAN> = $r14;

        $r15 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("ko", "KR");

        <java.util.Locale: java.util.Locale KOREA> = $r15;

        $r16 = <java.util.Locale: java.util.Locale SIMPLIFIED_CHINESE>;

        <java.util.Locale: java.util.Locale CHINA> = $r16;

        $r17 = <java.util.Locale: java.util.Locale SIMPLIFIED_CHINESE>;

        <java.util.Locale: java.util.Locale PRC> = $r17;

        $r18 = <java.util.Locale: java.util.Locale TRADITIONAL_CHINESE>;

        <java.util.Locale: java.util.Locale TAIWAN> = $r18;

        $r19 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("en", "GB");

        <java.util.Locale: java.util.Locale UK> = $r19;

        $r20 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("en", "US");

        <java.util.Locale: java.util.Locale US> = $r20;

        $r21 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("en", "CA");

        <java.util.Locale: java.util.Locale CANADA> = $r21;

        $r22 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("fr", "CA");

        <java.util.Locale: java.util.Locale CANADA_FRENCH> = $r22;

        $r23 = staticinvoke <java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>("", "");

        <java.util.Locale: java.util.Locale ROOT> = $r23;

        $r24 = staticinvoke <java.util.Locale: java.util.Locale initDefault()>();

        <java.util.Locale: java.util.Locale defaultLocale> = $r24;

        <java.util.Locale: java.util.Locale defaultDisplayLocale> = null;

        <java.util.Locale: java.util.Locale defaultFormatLocale> = null;

        $r25 = newarray (java.io.ObjectStreamField)[6];

        $r26 = new java.io.ObjectStreamField;

        specialinvoke $r26.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("language", class "java/lang/String");

        $r25[0] = $r26;

        $r27 = new java.io.ObjectStreamField;

        specialinvoke $r27.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("country", class "java/lang/String");

        $r25[1] = $r27;

        $r28 = new java.io.ObjectStreamField;

        specialinvoke $r28.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("variant", class "java/lang/String");

        $r25[2] = $r28;

        $r29 = new java.io.ObjectStreamField;

        $r30 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r29.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("hashcode", $r30);

        $r25[3] = $r29;

        $r31 = new java.io.ObjectStreamField;

        specialinvoke $r31.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("script", class "java/lang/String");

        $r25[4] = $r31;

        $r32 = new java.io.ObjectStreamField;

        specialinvoke $r32.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("extensions", class "java/lang/String");

        $r25[5] = $r32;

        <java.util.Locale: java.io.ObjectStreamField[] serialPersistentFields> = $r25;

        <java.util.Locale: java.lang.String[] isoLanguages> = null;

        <java.util.Locale: java.lang.String[] isoCountries> = null;

        return;
    }

    public static java.util.Locale getDefault()
    {
        java.util.Locale $r0;

        $r0 = <java.util.Locale: java.util.Locale defaultLocale>;

        return $r0;
    }

    private static java.util.Locale initDefault(java.util.Locale$Category)
    {
        java.util.Locale$Category l0;
        sun.security.action.GetPropertyAction $r0, $r6, $r12, $r18;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        java.util.Locale $r2, $r8, $r14, $r20, $r24;
        java.lang.Object $r4, $r10, $r16, $r22;

        l0 := @parameter0: java.util.Locale$Category;

        $r0 = new sun.security.action.GetPropertyAction;

        $r1 = l0.<java.util.Locale$Category: java.lang.String languageKey>;

        $r2 = <java.util.Locale: java.util.Locale defaultLocale>;

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String getLanguage()>();

        specialinvoke $r0.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r5 = (java.lang.String) $r4;

        $r6 = new sun.security.action.GetPropertyAction;

        $r7 = l0.<java.util.Locale$Category: java.lang.String scriptKey>;

        $r8 = <java.util.Locale: java.util.Locale defaultLocale>;

        $r9 = virtualinvoke $r8.<java.util.Locale: java.lang.String getScript()>();

        specialinvoke $r6.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>($r7, $r9);

        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);

        $r11 = (java.lang.String) $r10;

        $r12 = new sun.security.action.GetPropertyAction;

        $r13 = l0.<java.util.Locale$Category: java.lang.String countryKey>;

        $r14 = <java.util.Locale: java.util.Locale defaultLocale>;

        $r15 = virtualinvoke $r14.<java.util.Locale: java.lang.String getCountry()>();

        specialinvoke $r12.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>($r13, $r15);

        $r16 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r12);

        $r17 = (java.lang.String) $r16;

        $r18 = new sun.security.action.GetPropertyAction;

        $r19 = l0.<java.util.Locale$Category: java.lang.String variantKey>;

        $r20 = <java.util.Locale: java.util.Locale defaultLocale>;

        $r21 = virtualinvoke $r20.<java.util.Locale: java.lang.String getVariant()>();

        specialinvoke $r18.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>($r19, $r21);

        $r22 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r18);

        $r23 = (java.lang.String) $r22;

        $r24 = staticinvoke <java.util.Locale: java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.util.locale.LocaleExtensions)>($r5, $r11, $r17, $r23, null);

        return $r24;
    }

    private static java.util.Locale initDefault()
    {
        java.lang.String l0, l1, l3#21, l4#27, l2#31;
        int l5, $i0;
        sun.security.action.GetPropertyAction $r0, $r2, $r4, $r6, $r8;
        java.lang.Object $r1, $r3, $r5, $r7, $r9;
        java.util.Locale $r10;

        $r0 = new sun.security.action.GetPropertyAction;

        specialinvoke $r0.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("user.language", "en");

        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        l0 = (java.lang.String) $r1;

        $r2 = new sun.security.action.GetPropertyAction;

        specialinvoke $r2.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("user.region");

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        l1 = (java.lang.String) $r3;

        if l1 == null goto label3;

        l5 = virtualinvoke l1.<java.lang.String: int indexOf(int)>(95);

        if l5 < 0 goto label1;

        l3#21 = virtualinvoke l1.<java.lang.String: java.lang.String substring(int,int)>(0, l5);

        $i0 = l5 + 1;

        l4#27 = virtualinvoke l1.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label2;

     label1:
        l3#21 = l1;

        l4#27 = "";

     label2:
        l2#31 = "";

        goto label4;

     label3:
        $r4 = new sun.security.action.GetPropertyAction;

        specialinvoke $r4.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("user.script", "");

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);

        l2#31 = (java.lang.String) $r5;

        $r6 = new sun.security.action.GetPropertyAction;

        specialinvoke $r6.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("user.country", "");

        $r7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);

        l3#21 = (java.lang.String) $r7;

        $r8 = new sun.security.action.GetPropertyAction;

        specialinvoke $r8.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("user.variant", "");

        $r9 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r8);

        l4#27 = (java.lang.String) $r9;

     label4:
        $r10 = staticinvoke <java.util.Locale: java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.util.locale.LocaleExtensions)>(l0, l2#31, l3#21, l4#27, null);

        return $r10;
    }

    private static java.util.Locale createConstant(java.lang.String, java.lang.String)
    {
        java.lang.String l0, l1;
        sun.util.locale.BaseLocale l2;
        java.util.Locale $r0;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.lang.String;

        l2 = staticinvoke <sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>(l0, l1);

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getInstance(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>(l2, null);

        return $r0;
    }

    static java.util.Locale getInstance(java.lang.String, java.lang.String, java.lang.String, java.lang.String, sun.util.locale.LocaleExtensions)
    {
        java.lang.String l0, l1, l2, l3;
        sun.util.locale.BaseLocale l5;
        sun.util.locale.LocaleExtensions l4#1;
        java.lang.NullPointerException $r0;
        java.util.Locale $r1;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.lang.String;

        l2 := @parameter2: java.lang.String;

        l3 := @parameter3: java.lang.String;

        l4#1 := @parameter4: sun.util.locale.LocaleExtensions;

        if l0 == null goto label1;

        if l1 == null goto label1;

        if l2 == null goto label1;

        if l3 != null goto label2;

     label1:
        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>()>();

        throw $r0;

     label2:
        if l4#1 != null goto label3;

        l4#1 = staticinvoke <java.util.Locale: sun.util.locale.LocaleExtensions getCompatibilityExtensions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(l0, l1, l2, l3);

     label3:
        l5 = staticinvoke <sun.util.locale.BaseLocale: sun.util.locale.BaseLocale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(l0, l1, l2, l3);

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getInstance(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>(l5, l4#1);

        return $r1;
    }

    static java.util.Locale getInstance(sun.util.locale.BaseLocale, sun.util.locale.LocaleExtensions)
    {
        sun.util.locale.BaseLocale l0;
        sun.util.locale.LocaleExtensions l1;
        java.util.Locale$LocaleKey l2, $r0;
        java.util.Locale$Cache $r1;
        java.lang.Object $r2;
        java.util.Locale $r3;

        l0 := @parameter0: sun.util.locale.BaseLocale;

        l1 := @parameter1: sun.util.locale.LocaleExtensions;

        $r0 = new java.util.Locale$LocaleKey;

        specialinvoke $r0.<java.util.Locale$LocaleKey: void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions,java.util.Locale$1)>(l0, l1, null);

        l2 = $r0;

        $r1 = <java.util.Locale: java.util.Locale$Cache LOCALECACHE>;

        $r2 = virtualinvoke $r1.<java.util.Locale$Cache: java.lang.Object get(java.lang.Object)>(l2);

        $r3 = (java.util.Locale) $r2;

        return $r3;
    }

    private static sun.util.locale.LocaleExtensions getCompatibilityExtensions(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String l0, l1, l2, l3, $r0, $r1;
        sun.util.locale.LocaleExtensions l4#2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: java.lang.String;

        l2 := @parameter2: java.lang.String;

        l3 := @parameter3: java.lang.String;

        l4#2 = null;

        $z0 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(l0, "ja");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke l1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $z1 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(l2, "jp");

        if $z1 == 0 goto label1;

        $r0 = "JP";

        $z2 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(l3);

        if $z2 == 0 goto label1;

        l4#2 = <sun.util.locale.LocaleExtensions: sun.util.locale.LocaleExtensions CALENDAR_JAPANESE>;

        goto label2;

     label1:
        $z3 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(l0, "th");

        if $z3 == 0 goto label2;

        $i1 = virtualinvoke l1.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        $z4 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(l2, "th");

        if $z4 == 0 goto label2;

        $r1 = "TH";

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(l3);

        if $z5 == 0 goto label2;

        l4#2 = <sun.util.locale.LocaleExtensions: sun.util.locale.LocaleExtensions NUMBER_THAI>;

     label2:
        return l4#2;
    }


