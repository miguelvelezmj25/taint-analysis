    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/log/INFileReader";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.log.INFileReader: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void addTargetType(berkeley.com.sleepycat.je.log.LogEntryType) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.log.LogEntryType entryType;
        java.util.Map $r0;
        berkeley.com.sleepycat.je.log.entry.LogEntry $r1;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        entryType := @parameter0: berkeley.com.sleepycat.je.log.LogEntryType;

        $r0 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Map targetEntryMap>;

        $r1 = virtualinvoke entryType.<berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.entry.LogEntry getNewLogEntry()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(entryType, $r1);

        return;
    }

    public berkeley.com.sleepycat.je.dbi.DatabaseId getDatabaseId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.log.entry.LogEntry $r0;
        berkeley.com.sleepycat.je.log.entry.INContainingEntry $r1;
        berkeley.com.sleepycat.je.dbi.DatabaseId $r2;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (berkeley.com.sleepycat.je.log.entry.INContainingEntry) $r0;

        $r2 = interfaceinvoke $r1.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: berkeley.com.sleepycat.je.dbi.DatabaseId getDbId()>();

        return $r2;
    }

    public berkeley.com.sleepycat.je.tree.IN getIN(berkeley.com.sleepycat.je.dbi.DatabaseImpl) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl dbImpl;
        berkeley.com.sleepycat.je.log.entry.LogEntry $r0;
        berkeley.com.sleepycat.je.log.entry.INContainingEntry $r1;
        berkeley.com.sleepycat.je.tree.IN $r2;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        dbImpl := @parameter0: berkeley.com.sleepycat.je.dbi.DatabaseImpl;

        $r0 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r1 = (berkeley.com.sleepycat.je.log.entry.INContainingEntry) $r0;

        $r2 = interfaceinvoke $r1.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: berkeley.com.sleepycat.je.tree.IN getIN(berkeley.com.sleepycat.je.dbi.DatabaseImpl)>(dbImpl);

        return $r2;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, int, long, long, boolean, long, long, berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker)
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl env;
        int readBufferSize;
        long startLsn, finishLsn, partialCkptStart, ckptEnd;
        boolean trackIds;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        readBufferSize := @parameter1: int;

        startLsn := @parameter2: long;

        finishLsn := @parameter3: long;

        trackIds := @parameter4: boolean;

        partialCkptStart := @parameter5: long;

        ckptEnd := @parameter6: long;

        tracker := @parameter7: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker;

        specialinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,int,long,long,boolean,long,long,berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker,java.util.Set,java.util.concurrent.atomic.AtomicBoolean)>(env, readBufferSize, startLsn, finishLsn, 0, partialCkptStart, ckptEnd, null, null, null);

        return;
    }

    public void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl, int, long, long, boolean, long, long, berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker, java.util.Set, java.util.concurrent.atomic.AtomicBoolean) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl env, $r10;
        int readBufferSize;
        long startLsn, finishLsn, partialCkptStart, ckptEnd;
        boolean trackIds, $z0, $z1;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker;
        java.util.Set logVersion8UpgradeDbs, $r3, $r5, $r6, $r8, $r12;
        java.util.concurrent.atomic.AtomicBoolean logVersion8UpgradeDeltas;
        java.util.Iterator l15;
        berkeley.com.sleepycat.je.log.LogEntryType entryType, $r7, $r9, $r13;
        java.util.HashMap $r0, $r2;
        java.util.HashSet $r1;
        java.lang.Object $r4;
        berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy $r11;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        env := @parameter0: berkeley.com.sleepycat.je.dbi.EnvironmentImpl;

        readBufferSize := @parameter1: int;

        startLsn := @parameter2: long;

        finishLsn := @parameter3: long;

        trackIds := @parameter4: boolean;

        partialCkptStart := @parameter5: long;

        ckptEnd := @parameter6: long;

        tracker := @parameter7: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker;

        logVersion8UpgradeDbs := @parameter8: java.util.Set;

        logVersion8UpgradeDeltas := @parameter9: java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke this.<berkeley.com.sleepycat.je.log.FileReader: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,int,boolean,long,java.lang.Long,long,long)>(env, readBufferSize, 1, startLsn, null, -1L, finishLsn);

        this.<berkeley.com.sleepycat.je.log.INFileReader: boolean trackIds> = trackIds;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long ckptEnd> = ckptEnd;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Map targetEntryMap> = $r0;

        if trackIds == 0 goto label4;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long maxNodeId> = 0L;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long maxDbId> = 0L;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long maxTxnId> = 0L;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedNodeId> = 0L;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedDbId> = -256L;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedTxnId> = 0L;

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker> = tracker;

        this.<berkeley.com.sleepycat.je.log.INFileReader: long partialCkptStart> = partialCkptStart;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Map idTrackingMap> = $r2;

        $r3 = staticinvoke <berkeley.com.sleepycat.je.log.LogEntryType: java.util.Set getAllTypes()>();

        l15 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke l15.<java.util.Iterator: java.lang.Object next()>();

        entryType = (berkeley.com.sleepycat.je.log.LogEntryType) $r4;

        $z1 = virtualinvoke entryType.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isNodeType()>();

        if $z1 == 0 goto label2;

        $r5 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(entryType);

     label2:
        goto label1;

     label3:
        $r6 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet>;

        $r7 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r8 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet>;

        $r9 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r10 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r11 = virtualinvoke $r10.<berkeley.com.sleepycat.je.dbi.EnvironmentImpl: berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy getVLSNProxy()>();

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy vlsnProxy> = $r11;

        $r12 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet>;

        $r13 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_ROLLBACK_START>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r13);

        this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set logVersion8UpgradeDbs> = logVersion8UpgradeDbs;

        this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.concurrent.atomic.AtomicBoolean logVersion8UpgradeDeltas> = logVersion8UpgradeDeltas;

     label4:
        return;
    }

    public long getMinReplicatedNodeId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedNodeId>;

        return $l0;
    }

    public long getMaxNodeId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxNodeId>;

        return $l0;
    }

    public long getMinReplicatedDbId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedDbId>;

        return $l0;
    }

    public long getMaxDbId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxDbId>;

        return $l0;
    }

    public long getMinReplicatedTxnId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedTxnId>;

        return $l0;
    }

    public long getMaxTxnId()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        long $l0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $l0 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxTxnId>;

        return $l0;
    }

    public berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy getVLSNProxy()
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy $r0;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        $r0 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy vlsnProxy>;

        return $r0;
    }

    protected boolean isTargetEntry() throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        berkeley.com.sleepycat.je.log.entry.LogEntry possibleTarget, $r11, $r36;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r0, $r2, $r21, $r22, $r33, $r35;
        berkeley.com.sleepycat.je.log.Provisional $r1;
        long $l0, $l1, $l3, $l7, $l8, $l9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        byte $b2;
        berkeley.com.sleepycat.je.log.LogEntryType $r3, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r23, $r24, $r38;
        java.util.Map $r4;
        java.lang.Object $r6;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker $r19, $r25, $r27, $r29, $r31;
        int $i4, $i5, $i6;
        berkeley.com.sleepycat.je.dbi.DatabaseId $r26, $r28, $r30, $r32;
        berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy $r34;
        java.util.Set $r37;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        this.<berkeley.com.sleepycat.je.log.INFileReader: boolean lastEntryWasDelete> = 0;

        this.<berkeley.com.sleepycat.je.log.INFileReader: boolean lastEntryWasDupDelete> = 0;

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry> = null;

        $r0 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $r1 = virtualinvoke $r0.<berkeley.com.sleepycat.je.log.LogEntryHeader: berkeley.com.sleepycat.je.log.Provisional getProvisional()>();

        $l0 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        $l1 = this.<berkeley.com.sleepycat.je.log.INFileReader: long ckptEnd>;

        $z0 = virtualinvoke $r1.<berkeley.com.sleepycat.je.log.Provisional: boolean isProvisional(long,long)>($l0, $l1);

        this.<berkeley.com.sleepycat.je.log.INFileReader: boolean isProvisional> = $z0;

        $r2 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $b2 = virtualinvoke $r2.<berkeley.com.sleepycat.je.log.LogEntryHeader: byte getType()>();

        $r3 = staticinvoke <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType findType(byte)>($b2);

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType> = $r3;

        $r4 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Map targetEntryMap>;

        $r5 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        possibleTarget = (berkeley.com.sleepycat.je.log.entry.LogEntry) $r6;

        $z1 = this.<berkeley.com.sleepycat.je.log.INFileReader: boolean isProvisional>;

        if $z1 != 0 goto label01;

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry> = possibleTarget;

     label01:
        $r7 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_IN_DELETE_INFO>;

        $r8 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z2 = virtualinvoke $r7.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label02;

        this.<berkeley.com.sleepycat.je.log.INFileReader: boolean lastEntryWasDelete> = 1;

     label02:
        $r9 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_IN_DUPDELETE_INFO>;

        $r10 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z3 = virtualinvoke $r9.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label03;

        this.<berkeley.com.sleepycat.je.log.INFileReader: boolean lastEntryWasDupDelete> = 1;

     label03:
        $z4 = this.<berkeley.com.sleepycat.je.log.INFileReader: boolean trackIds>;

        if $z4 != 0 goto label06;

        $r11 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        if $r11 == null goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        return $z5;

     label06:
        $r12 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z6 = virtualinvoke $r12.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isNodeType()>();

        if $z6 != 0 goto label07;

        $r13 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r14 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        $z7 = virtualinvoke $r13.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r14);

        if $z7 != 0 goto label07;

        $r15 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r16 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        $z8 = virtualinvoke $r15.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r16);

        if $z8 != 0 goto label07;

        $r17 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_FILE_HEADER>;

        $r18 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z9 = virtualinvoke $r17.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r18);

        if $z9 != 0 goto label07;

        $r19 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $l3 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        $r20 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r21 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i4 = virtualinvoke $r21.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $r22 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i5 = virtualinvoke $r22.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i6 = $i4 + $i5;

        virtualinvoke $r19.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void countNewLogEntry(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseId)>($l3, $r20, $i6, null);

     label07:
        $r23 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_DBTREE>;

        $r24 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z10 = virtualinvoke $r23.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r24);

        if $z10 == 0 goto label08;

        $r25 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r26 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId ID_DB_ID>;

        $l7 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        virtualinvoke $r25.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void saveLastLoggedMapLN(berkeley.com.sleepycat.je.dbi.DatabaseId,long)>($r26, $l7);

        $r27 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r28 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId NAME_DB_ID>;

        $l8 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        virtualinvoke $r27.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void saveLastLoggedMapLN(berkeley.com.sleepycat.je.dbi.DatabaseId,long)>($r28, $l8);

        $r29 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r30 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId ID_DB_ID>;

        virtualinvoke $r29.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void resetDbInfo(berkeley.com.sleepycat.je.dbi.DatabaseId)>($r30);

        $r31 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r32 = <berkeley.com.sleepycat.je.dbi.DbTree: berkeley.com.sleepycat.je.dbi.DatabaseId NAME_DB_ID>;

        virtualinvoke $r31.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void resetDbInfo(berkeley.com.sleepycat.je.dbi.DatabaseId)>($r32);

     label08:
        $r33 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $z11 = virtualinvoke $r33.<berkeley.com.sleepycat.je.log.LogEntryHeader: boolean getReplicated()>();

        if $z11 == 0 goto label09;

        $r34 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy vlsnProxy>;

        $l9 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        $r35 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        interfaceinvoke $r34.<berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy: void trackMapping(long,berkeley.com.sleepycat.je.log.LogEntryHeader,berkeley.com.sleepycat.je.log.entry.LogEntry)>($l9, $r35, null);

     label09:
        $r36 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        if $r36 != null goto label10;

        $r37 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet>;

        $r38 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z12 = interfaceinvoke $r37.<java.util.Set: boolean contains(java.lang.Object)>($r38);

        if $z12 == 0 goto label11;

     label10:
        $z13 = 1;

        goto label12;

     label11:
        $z13 = 0;

     label12:
        return $z13;
    }

    protected boolean processEntry(java.nio.ByteBuffer) throws berkeley.com.sleepycat.je.DatabaseException
    {
        berkeley.com.sleepycat.je.log.INFileReader this;
        java.nio.ByteBuffer entryBuffer;
        berkeley.com.sleepycat.je.log.entry.LNLogEntry lnEntry;
        berkeley.com.sleepycat.je.tree.MapLN mapLN;
        berkeley.com.sleepycat.je.dbi.DatabaseId dbId, dbId, $r32, $r72, $r78;
        long dbIdVal, txnId, fileNum, nodeId, newLsn, $l0, $l4, $l5, $l7, $l8, $l10, $l11, $l12, $l14, $l15, $l17, $l18, $l20, $l22, $l23, $l25, oldLsn#215, oldLsn#231, $l28, $l30;
        boolean useEntry#2, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z19, $z20;
        berkeley.com.sleepycat.je.log.entry.LogEntry $r0, $r1, $r4, $r11, $r12, $r14, $r17, $r19, $r31, $r37, $r39, $r58, $r65, $r77;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2, $r20;
        berkeley.com.sleepycat.je.log.LogEntryHeader $r3, $r21, $r29, $r30, $r36, $r73;
        java.util.Set $r5, $r74, $r76;
        berkeley.com.sleepycat.je.log.LogEntryType $r6, $r9, $r13, $r16, $r22, $r23, $r24, $r25, $r26, $r28, $r33, $r34, $r38, $r40, $r41, $r48, $r52, $r53, $r57, $r62, $r63, $r64, $r67, $r69, $r71, $r75, $r80, $r81, $r82, $r83;
        java.lang.AssertionError $r7, $r59;
        java.util.Map $r8, $r15;
        java.lang.Object $r10;
        berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker $r27, $r46, $r47, $r55, $r56, $r66, $r68, $r70;
        int $i1, $i2, $i3, $i31, $i32;
        berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy $r35;
        berkeley.com.sleepycat.je.tree.LN $r42;
        berkeley.com.sleepycat.je.dbi.DatabaseImpl $r43;
        byte $b6, $b9, $b13, $b16, $b19, $b21, $b24, $b26, $b27, $b29;
        java.lang.Long $r49;
        byte[] $r54;
        berkeley.com.sleepycat.je.log.entry.INLogEntry inEntry#175;
        berkeley.com.sleepycat.je.log.entry.INContainingEntry inEntry#208;
        java.util.concurrent.atomic.AtomicBoolean $r79, $r84;

        this := @this: berkeley.com.sleepycat.je.log.INFileReader;

        entryBuffer := @parameter0: java.nio.ByteBuffer;

        useEntry#2 = 0;

        $r0 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        if $r0 == null goto label01;

        $r1 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r2 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r3 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        interfaceinvoke $r1.<berkeley.com.sleepycat.je.log.entry.LogEntry: void readEntry(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.log.LogEntryHeader,java.nio.ByteBuffer)>($r2, $r3, entryBuffer);

        useEntry#2 = 1;

     label01:
        $z0 = this.<berkeley.com.sleepycat.je.log.INFileReader: boolean trackIds>;

        if $z0 != 0 goto label02;

        return useEntry#2;

     label02:
        $r4 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        if $r4 != null goto label05;

        $z1 = <berkeley.com.sleepycat.je.log.INFileReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r5 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set idTrackingSet>;

        $r6 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z2 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z2 != 0 goto label03;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label03:
        $r8 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Map idTrackingMap>;

        $r9 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (berkeley.com.sleepycat.je.log.entry.LogEntry) $r10;

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry> = $r11;

        $r12 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        if $r12 != null goto label04;

        $r13 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r14 = virtualinvoke $r13.<berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.entry.LogEntry getNewLogEntry()>();

        this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry> = $r14;

        $r15 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Map idTrackingMap>;

        $r16 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r17 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

     label04:
        $r19 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r20 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r21 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        interfaceinvoke $r19.<berkeley.com.sleepycat.je.log.entry.LogEntry: void readEntry(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,berkeley.com.sleepycat.je.log.LogEntryHeader,java.nio.ByteBuffer)>($r20, $r21, entryBuffer);

     label05:
        $r22 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z3 = virtualinvoke $r22.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isNodeType()>();

        if $z3 != 0 goto label06;

        $r23 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r24 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_BIN_DELTA>;

        $z4 = virtualinvoke $r23.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r24);

        if $z4 != 0 goto label06;

        $r25 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r26 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        $z5 = virtualinvoke $r25.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label07;

     label06:
        $r27 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $l0 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        $r28 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r29 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i1 = virtualinvoke $r29.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getSize()>();

        $r30 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i2 = virtualinvoke $r30.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getItemSize()>();

        $i3 = $i1 + $i2;

        $r31 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r32 = interfaceinvoke $r31.<berkeley.com.sleepycat.je.log.entry.LogEntry: berkeley.com.sleepycat.je.dbi.DatabaseId getDbId()>();

        virtualinvoke $r27.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void countNewLogEntry(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseId)>($l0, $r28, $i3, $r32);

     label07:
        $r33 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r34 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_ROLLBACK_START>;

        $z6 = virtualinvoke $r33.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r34);

        if $z6 == 0 goto label08;

        $r35 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy vlsnProxy>;

        $l4 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        $r36 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $r37 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        interfaceinvoke $r35.<berkeley.com.sleepycat.je.recovery.VLSNRecoveryProxy: void trackMapping(long,berkeley.com.sleepycat.je.log.LogEntryHeader,berkeley.com.sleepycat.je.log.entry.LogEntry)>($l4, $r36, $r37);

     label08:
        $r38 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z7 = virtualinvoke $r38.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isLNType()>();

        if $z7 == 0 goto label19;

        $r39 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        lnEntry = (berkeley.com.sleepycat.je.log.entry.LNLogEntry) $r39;

        $r40 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r41 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_MAPLN>;

        $z8 = virtualinvoke $r40.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r41);

        if $z8 == 0 goto label13;

        $r42 = virtualinvoke lnEntry.<berkeley.com.sleepycat.je.log.entry.LNLogEntry: berkeley.com.sleepycat.je.tree.LN getMainItem()>();

        mapLN = (berkeley.com.sleepycat.je.tree.MapLN) $r42;

        $r43 = virtualinvoke mapLN.<berkeley.com.sleepycat.je.tree.MapLN: berkeley.com.sleepycat.je.dbi.DatabaseImpl getDatabase()>();

        dbId = virtualinvoke $r43.<berkeley.com.sleepycat.je.dbi.DatabaseImpl: berkeley.com.sleepycat.je.dbi.DatabaseId getId()>();

        dbIdVal = virtualinvoke dbId.<berkeley.com.sleepycat.je.dbi.DatabaseId: long getId()>();

        $l5 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxDbId>;

        $b6 = dbIdVal cmp $l5;

        if $b6 <= 0 goto label09;

        $l7 = dbIdVal;

        goto label10;

     label09:
        $l7 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxDbId>;

     label10:
        this.<berkeley.com.sleepycat.je.log.INFileReader: long maxDbId> = $l7;

        $l8 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedDbId>;

        $b9 = dbIdVal cmp $l8;

        if $b9 >= 0 goto label11;

        $l10 = dbIdVal;

        goto label12;

     label11:
        $l10 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedDbId>;

     label12:
        this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedDbId> = $l10;

        $r46 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        virtualinvoke $r46.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void resetDbInfo(berkeley.com.sleepycat.je.dbi.DatabaseId)>(dbId);

        $r47 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $l11 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        virtualinvoke $r47.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void saveLastLoggedMapLN(berkeley.com.sleepycat.je.dbi.DatabaseId,long)>(dbId, $l11);

     label13:
        $r48 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z9 = virtualinvoke $r48.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isTransactional()>();

        if $z9 == 0 goto label18;

        $r49 = virtualinvoke lnEntry.<berkeley.com.sleepycat.je.log.entry.LNLogEntry: java.lang.Long getTxnId()>();

        txnId = virtualinvoke $r49.<java.lang.Long: long longValue()>();

        $l12 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxTxnId>;

        $b13 = txnId cmp $l12;

        if $b13 <= 0 goto label14;

        $l14 = txnId;

        goto label15;

     label14:
        $l14 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxTxnId>;

     label15:
        this.<berkeley.com.sleepycat.je.log.INFileReader: long maxTxnId> = $l14;

        $l15 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedTxnId>;

        $b16 = txnId cmp $l15;

        if $b16 >= 0 goto label16;

        $l17 = txnId;

        goto label17;

     label16:
        $l17 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedTxnId>;

     label17:
        this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedTxnId> = $l17;

     label18:
        $r52 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_FILESUMMARYLN>;

        $r53 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z10 = virtualinvoke $r52.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r53);

        if $z10 == 0 goto label19;

        virtualinvoke lnEntry.<berkeley.com.sleepycat.je.log.entry.LNLogEntry: void postFetchInit(boolean)>(0);

        $r54 = virtualinvoke lnEntry.<berkeley.com.sleepycat.je.log.entry.LNLogEntry: byte[] getKey()>();

        fileNum = staticinvoke <berkeley.com.sleepycat.je.tree.FileSummaryLN: long getFileNumber(byte[])>($r54);

        $r55 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        virtualinvoke $r55.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void resetFileInfo(long)>(fileNum);

        $r56 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $l18 = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        virtualinvoke $r56.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void saveLastLoggedFileSummaryLN(long,long)>(fileNum, $l18);

     label19:
        $r57 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z11 = virtualinvoke $r57.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isINType()>();

        if $z11 == 0 goto label25;

        $r58 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        inEntry#175 = (berkeley.com.sleepycat.je.log.entry.INLogEntry) $r58;

        nodeId = virtualinvoke inEntry#175.<berkeley.com.sleepycat.je.log.entry.INLogEntry: long getNodeId()>();

        $z12 = <berkeley.com.sleepycat.je.log.INFileReader: boolean $assertionsDisabled>;

        if $z12 != 0 goto label20;

        $b19 = nodeId cmp -1L;

        if $b19 != 0 goto label20;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>()>();

        throw $r59;

     label20:
        $l20 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxNodeId>;

        $b21 = nodeId cmp $l20;

        if $b21 <= 0 goto label21;

        $l22 = nodeId;

        goto label22;

     label21:
        $l22 = this.<berkeley.com.sleepycat.je.log.INFileReader: long maxNodeId>;

     label22:
        this.<berkeley.com.sleepycat.je.log.INFileReader: long maxNodeId> = $l22;

        $l23 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedNodeId>;

        $b24 = nodeId cmp $l23;

        if $b24 >= 0 goto label23;

        $l25 = nodeId;

        goto label24;

     label23:
        $l25 = this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedNodeId>;

     label24:
        this.<berkeley.com.sleepycat.je.log.INFileReader: long minReplicatedNodeId> = $l25;

     label25:
        $r62 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z13 = virtualinvoke $r62.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isINType()>();

        if $z13 != 0 goto label26;

        $r63 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r64 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        $z14 = virtualinvoke $r63.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r64);

        if $z14 == 0 goto label29;

     label26:
        $r65 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        inEntry#208 = (berkeley.com.sleepycat.je.log.entry.INContainingEntry) $r65;

        dbId = interfaceinvoke inEntry#208.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: berkeley.com.sleepycat.je.dbi.DatabaseId getDbId()>();

        newLsn = virtualinvoke this.<berkeley.com.sleepycat.je.log.INFileReader: long getLastLsn()>();

        oldLsn#215 = interfaceinvoke inEntry#208.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: long getPrevFullLsn()>();

        $b26 = oldLsn#215 cmp -1L;

        if $b26 == 0 goto label27;

        $z15 = interfaceinvoke inEntry#208.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: boolean isBINDelta()>();

        if $z15 != 0 goto label27;

        $r66 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r67 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        virtualinvoke $r66.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void countObsoleteUnconditional(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseId,boolean)>(oldLsn#215, $r67, 0, dbId, 0);

     label27:
        oldLsn#231 = interfaceinvoke inEntry#208.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: long getPrevDeltaLsn()>();

        $b27 = oldLsn#231 cmp -1L;

        if $b27 == 0 goto label28;

        $r68 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r69 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        virtualinvoke $r68.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void countObsoleteUnconditional(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseId,boolean)>(oldLsn#231, $r69, 0, dbId, 0);

     label28:
        $z16 = this.<berkeley.com.sleepycat.je.log.INFileReader: boolean isProvisional>;

        if $z16 == 0 goto label29;

        $l28 = this.<berkeley.com.sleepycat.je.log.INFileReader: long partialCkptStart>;

        $b29 = $l28 cmp -1L;

        if $b29 == 0 goto label29;

        $l30 = this.<berkeley.com.sleepycat.je.log.INFileReader: long partialCkptStart>;

        $i31 = staticinvoke <berkeley.com.sleepycat.je.utilint.DbLsn: int compareTo(long,long)>($l30, newLsn);

        if $i31 >= 0 goto label29;

        $r70 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker tracker>;

        $r71 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r72 = interfaceinvoke inEntry#208.<berkeley.com.sleepycat.je.log.entry.INContainingEntry: berkeley.com.sleepycat.je.dbi.DatabaseId getDbId()>();

        virtualinvoke $r70.<berkeley.com.sleepycat.je.cleaner.RecoveryUtilizationTracker: void countObsoleteUnconditional(long,berkeley.com.sleepycat.je.log.LogEntryType,int,berkeley.com.sleepycat.je.dbi.DatabaseId,boolean)>(newLsn, $r71, 0, $r72, 0);

     label29:
        $r73 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryHeader currentEntryHeader>;

        $i32 = virtualinvoke $r73.<berkeley.com.sleepycat.je.log.LogEntryHeader: int getVersion()>();

        if $i32 >= 8 goto label32;

        $r74 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set logVersion8UpgradeDbs>;

        if $r74 == null goto label30;

        $r75 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $z17 = virtualinvoke $r75.<berkeley.com.sleepycat.je.log.LogEntryType: boolean isNodeType()>();

        if $z17 == 0 goto label30;

        $r76 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.Set logVersion8UpgradeDbs>;

        $r77 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.entry.LogEntry targetLogEntry>;

        $r78 = interfaceinvoke $r77.<berkeley.com.sleepycat.je.log.entry.LogEntry: berkeley.com.sleepycat.je.dbi.DatabaseId getDbId()>();

        interfaceinvoke $r76.<java.util.Set: boolean add(java.lang.Object)>($r78);

     label30:
        $r79 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.concurrent.atomic.AtomicBoolean logVersion8UpgradeDeltas>;

        if $r79 == null goto label32;

        $r80 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r81 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_OLD_BIN_DELTA>;

        $z19 = virtualinvoke $r80.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r81);

        if $z19 != 0 goto label31;

        $r82 = this.<berkeley.com.sleepycat.je.log.INFileReader: berkeley.com.sleepycat.je.log.LogEntryType fromLogType>;

        $r83 = <berkeley.com.sleepycat.je.log.LogEntryType: berkeley.com.sleepycat.je.log.LogEntryType LOG_OLD_DUP_BIN_DELTA>;

        $z20 = virtualinvoke $r82.<berkeley.com.sleepycat.je.log.LogEntryType: boolean equals(java.lang.Object)>($r83);

        if $z20 == 0 goto label32;

     label31:
        $r84 = this.<berkeley.com.sleepycat.je.log.INFileReader: java.util.concurrent.atomic.AtomicBoolean logVersion8UpgradeDeltas>;

        virtualinvoke $r84.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label32:
        return useEntry#2;
    }


