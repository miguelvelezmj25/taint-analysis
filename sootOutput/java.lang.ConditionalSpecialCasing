    static char[] toUpperCaseCharArray(java.lang.String, int, java.util.Locale)
    {
        java.lang.String l0;
        int l1, $i0;
        java.util.Locale l2;
        char[] l3, $r0;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        l3 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>(l0, l1, l2, 0);

        if l3 == null goto label1;

        return l3;

     label1:
        $i0 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        $r0 = staticinvoke <java.lang.Character: char[] toUpperCaseCharArray(int)>($i0);

        return $r0;
    }

    static int toUpperCaseEx(java.lang.String, int, java.util.Locale)
    {
        java.lang.String l0;
        int l1, $i0, $i2, $i3;
        java.util.Locale l2;
        char[] l3;
        char $c1;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        l3 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>(l0, l1, l2, 0);

        if l3 == null goto label2;

        $i0 = lengthof l3;

        if $i0 != 1 goto label1;

        $c1 = l3[0];

        return $c1;

     label1:
        return -1;

     label2:
        $i2 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        $i3 = staticinvoke <java.lang.Character: int toUpperCaseEx(int)>($i2);

        return $i3;
    }

    static void <clinit>()
    {
        java.lang.ConditionalSpecialCasing$Entry l1, $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49;
        java.lang.Integer l2, $r55;
        java.lang.ConditionalSpecialCasing$Entry[] $r0, $r53, $r54;
        char[] $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51;
        java.util.Hashtable $r52, $r56, $r59;
        int l0#316, $i0, $i1;
        java.lang.Object $r57;
        java.util.HashSet l3#331, $r58;

        $r0 = newarray (java.lang.ConditionalSpecialCasing$Entry)[17];

        $r1 = new java.lang.ConditionalSpecialCasing$Entry;

        $r2 = newarray (char)[1];

        $r2[0] = 962;

        $r3 = newarray (char)[1];

        $r3[0] = 931;

        specialinvoke $r1.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(931, $r2, $r3, null, 1);

        $r0[0] = $r1;

        $r4 = new java.lang.ConditionalSpecialCasing$Entry;

        $r5 = newarray (char)[2];

        $r5[0] = 105;

        $r5[1] = 775;

        $r6 = newarray (char)[1];

        $r6[0] = 304;

        specialinvoke $r4.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(304, $r5, $r6, null, 0);

        $r0[1] = $r4;

        $r7 = new java.lang.ConditionalSpecialCasing$Entry;

        $r8 = newarray (char)[1];

        $r8[0] = 775;

        $r9 = newarray (char)[0];

        specialinvoke $r7.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(775, $r8, $r9, "lt", 2);

        $r0[2] = $r7;

        $r10 = new java.lang.ConditionalSpecialCasing$Entry;

        $r11 = newarray (char)[2];

        $r11[0] = 105;

        $r11[1] = 775;

        $r12 = newarray (char)[1];

        $r12[0] = 73;

        specialinvoke $r10.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(73, $r11, $r12, "lt", 3);

        $r0[3] = $r10;

        $r13 = new java.lang.ConditionalSpecialCasing$Entry;

        $r14 = newarray (char)[2];

        $r14[0] = 106;

        $r14[1] = 775;

        $r15 = newarray (char)[1];

        $r15[0] = 74;

        specialinvoke $r13.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(74, $r14, $r15, "lt", 3);

        $r0[4] = $r13;

        $r16 = new java.lang.ConditionalSpecialCasing$Entry;

        $r17 = newarray (char)[2];

        $r17[0] = 303;

        $r17[1] = 775;

        $r18 = newarray (char)[1];

        $r18[0] = 302;

        specialinvoke $r16.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(302, $r17, $r18, "lt", 3);

        $r0[5] = $r16;

        $r19 = new java.lang.ConditionalSpecialCasing$Entry;

        $r20 = newarray (char)[3];

        $r20[0] = 105;

        $r20[1] = 775;

        $r20[2] = 768;

        $r21 = newarray (char)[1];

        $r21[0] = 204;

        specialinvoke $r19.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(204, $r20, $r21, "lt", 0);

        $r0[6] = $r19;

        $r22 = new java.lang.ConditionalSpecialCasing$Entry;

        $r23 = newarray (char)[3];

        $r23[0] = 105;

        $r23[1] = 775;

        $r23[2] = 769;

        $r24 = newarray (char)[1];

        $r24[0] = 205;

        specialinvoke $r22.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(205, $r23, $r24, "lt", 0);

        $r0[7] = $r22;

        $r25 = new java.lang.ConditionalSpecialCasing$Entry;

        $r26 = newarray (char)[3];

        $r26[0] = 105;

        $r26[1] = 775;

        $r26[2] = 771;

        $r27 = newarray (char)[1];

        $r27[0] = 296;

        specialinvoke $r25.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(296, $r26, $r27, "lt", 0);

        $r0[8] = $r25;

        $r28 = new java.lang.ConditionalSpecialCasing$Entry;

        $r29 = newarray (char)[1];

        $r29[0] = 105;

        $r30 = newarray (char)[1];

        $r30[0] = 304;

        specialinvoke $r28.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(304, $r29, $r30, "tr", 0);

        $r0[9] = $r28;

        $r31 = new java.lang.ConditionalSpecialCasing$Entry;

        $r32 = newarray (char)[1];

        $r32[0] = 105;

        $r33 = newarray (char)[1];

        $r33[0] = 304;

        specialinvoke $r31.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(304, $r32, $r33, "az", 0);

        $r0[10] = $r31;

        $r34 = new java.lang.ConditionalSpecialCasing$Entry;

        $r35 = newarray (char)[0];

        $r36 = newarray (char)[1];

        $r36[0] = 775;

        specialinvoke $r34.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(775, $r35, $r36, "tr", 4);

        $r0[11] = $r34;

        $r37 = new java.lang.ConditionalSpecialCasing$Entry;

        $r38 = newarray (char)[0];

        $r39 = newarray (char)[1];

        $r39[0] = 775;

        specialinvoke $r37.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(775, $r38, $r39, "az", 4);

        $r0[12] = $r37;

        $r40 = new java.lang.ConditionalSpecialCasing$Entry;

        $r41 = newarray (char)[1];

        $r41[0] = 305;

        $r42 = newarray (char)[1];

        $r42[0] = 73;

        specialinvoke $r40.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(73, $r41, $r42, "tr", 5);

        $r0[13] = $r40;

        $r43 = new java.lang.ConditionalSpecialCasing$Entry;

        $r44 = newarray (char)[1];

        $r44[0] = 305;

        $r45 = newarray (char)[1];

        $r45[0] = 73;

        specialinvoke $r43.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(73, $r44, $r45, "az", 5);

        $r0[14] = $r43;

        $r46 = new java.lang.ConditionalSpecialCasing$Entry;

        $r47 = newarray (char)[1];

        $r47[0] = 105;

        $r48 = newarray (char)[1];

        $r48[0] = 304;

        specialinvoke $r46.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(105, $r47, $r48, "tr", 0);

        $r0[15] = $r46;

        $r49 = new java.lang.ConditionalSpecialCasing$Entry;

        $r50 = newarray (char)[1];

        $r50[0] = 105;

        $r51 = newarray (char)[1];

        $r51[0] = 304;

        specialinvoke $r49.<java.lang.ConditionalSpecialCasing$Entry: void <init>(int,char[],char[],java.lang.String,int)>(105, $r50, $r51, "az", 0);

        $r0[16] = $r49;

        <java.lang.ConditionalSpecialCasing: java.lang.ConditionalSpecialCasing$Entry[] entry> = $r0;

        $r52 = new java.util.Hashtable;

        specialinvoke $r52.<java.util.Hashtable: void <init>()>();

        <java.lang.ConditionalSpecialCasing: java.util.Hashtable entryTable> = $r52;

        l0#316 = 0;

     label1:
        $r53 = <java.lang.ConditionalSpecialCasing: java.lang.ConditionalSpecialCasing$Entry[] entry>;

        $i0 = lengthof $r53;

        if l0#316 >= $i0 goto label3;

        $r54 = <java.lang.ConditionalSpecialCasing: java.lang.ConditionalSpecialCasing$Entry[] entry>;

        l1 = $r54[l0#316];

        $r55 = new java.lang.Integer;

        $i1 = virtualinvoke l1.<java.lang.ConditionalSpecialCasing$Entry: int getCodePoint()>();

        specialinvoke $r55.<java.lang.Integer: void <init>(int)>($i1);

        l2 = $r55;

        $r56 = <java.lang.ConditionalSpecialCasing: java.util.Hashtable entryTable>;

        $r57 = virtualinvoke $r56.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(l2);

        l3#331 = (java.util.HashSet) $r57;

        if l3#331 != null goto label2;

        $r58 = new java.util.HashSet;

        specialinvoke $r58.<java.util.HashSet: void <init>()>();

        l3#331 = $r58;

     label2:
        virtualinvoke l3#331.<java.util.HashSet: boolean add(java.lang.Object)>(l1);

        $r59 = <java.lang.ConditionalSpecialCasing: java.util.Hashtable entryTable>;

        virtualinvoke $r59.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(l2, l3#331);

        l0#316 = l0#316 + 1;

        goto label1;

     label3:
        return;
    }

    private static char[] lookUpTable(java.lang.String, int, java.util.Locale, boolean)
    {
        java.lang.String l0, l7, l9;
        int l1, $i0, $i1;
        java.util.Locale l2;
        boolean l3, $z0, $z1, $z2;
        java.util.HashSet l4;
        java.util.Iterator l6;
        java.lang.ConditionalSpecialCasing$Entry l8;
        java.util.Hashtable $r0;
        java.lang.Integer $r1;
        java.lang.Object $r2, $r3;
        char[] l5#9, $r4;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        l3 := @parameter3: boolean;

        $r0 = <java.lang.ConditionalSpecialCasing: java.util.Hashtable entryTable>;

        $r1 = new java.lang.Integer;

        $i0 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i0);

        $r2 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        l4 = (java.util.HashSet) $r2;

        l5#9 = null;

        if l4 == null goto label6;

        l6 = virtualinvoke l4.<java.util.HashSet: java.util.Iterator iterator()>();

        l7 = virtualinvoke l2.<java.util.Locale: java.lang.String getLanguage()>();

     label1:
        $z0 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        l8 = (java.lang.ConditionalSpecialCasing$Entry) $r3;

        l9 = virtualinvoke l8.<java.lang.ConditionalSpecialCasing$Entry: java.lang.String getLanguage()>();

        if l9 == null goto label2;

        $z1 = virtualinvoke l9.<java.lang.String: boolean equals(java.lang.Object)>(l7);

        if $z1 == 0 goto label5;

     label2:
        $i1 = virtualinvoke l8.<java.lang.ConditionalSpecialCasing$Entry: int getCondition()>();

        $z2 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isConditionMet(java.lang.String,int,java.util.Locale,int)>(l0, l1, l2, $i1);

        if $z2 == 0 goto label5;

        if l3 == 0 goto label3;

        $r4 = virtualinvoke l8.<java.lang.ConditionalSpecialCasing$Entry: char[] getLowerCase()>();

        goto label4;

     label3:
        $r4 = virtualinvoke l8.<java.lang.ConditionalSpecialCasing$Entry: char[] getUpperCase()>();

     label4:
        l5#9 = $r4;

        if l9 == null goto label5;

        goto label6;

     label5:
        goto label1;

     label6:
        return l5#9;
    }

    private static boolean isConditionMet(java.lang.String, int, java.util.Locale, int)
    {
        java.lang.String l0;
        int l1, l3;
        java.util.Locale l2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        l3 := @parameter3: int;

        tableswitch(l3)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label8;
        };

     label1:
        $z0 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isFinalCased(java.lang.String,int,java.util.Locale)>(l0, l1, l2);

        return $z0;

     label2:
        $z1 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isAfterSoftDotted(java.lang.String,int)>(l0, l1);

        return $z1;

     label3:
        $z2 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isMoreAbove(java.lang.String,int)>(l0, l1);

        return $z2;

     label4:
        $z3 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isAfterI(java.lang.String,int)>(l0, l1);

        return $z3;

     label5:
        $z4 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isBeforeDot(java.lang.String,int)>(l0, l1);

        if $z4 != 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        return $z5;

     label8:
        return 1;
    }

    private static boolean isBeforeDot(java.lang.String, int)
    {
        java.lang.String l0;
        int l1, l4, l2, l3, $i0, $i1, l5#8, $i2;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l4 = virtualinvoke l0.<java.lang.String: int length()>();

        $i0 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        $i1 = staticinvoke <java.lang.Character: int charCount(int)>($i0);

        l5#8 = l1 + $i1;

     label1:
        if l5#8 >= l4 goto label5;

        l2 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l5#8);

        if l2 != 775 goto label2;

        return 1;

     label2:
        l3 = staticinvoke <sun.text.Normalizer: int getCombiningClass(int)>(l2);

        if l3 == 0 goto label3;

        if l3 != 230 goto label4;

     label3:
        return 0;

     label4:
        $i2 = staticinvoke <java.lang.Character: int charCount(int)>(l2);

        l5#8 = l5#8 + $i2;

        goto label1;

     label5:
        return 0;
    }

    private static boolean isAfterI(java.lang.String, int)
    {
        java.lang.String l0;
        int l1, l2, l3, l4#2, $i0;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l4#2 = l1;

     label1:
        if l4#2 <= 0 goto label5;

        l2 = virtualinvoke l0.<java.lang.String: int codePointBefore(int)>(l4#2);

        if l2 != 73 goto label2;

        return 1;

     label2:
        l3 = staticinvoke <sun.text.Normalizer: int getCombiningClass(int)>(l2);

        if l3 == 0 goto label3;

        if l3 != 230 goto label4;

     label3:
        return 0;

     label4:
        $i0 = staticinvoke <java.lang.Character: int charCount(int)>(l2);

        l4#2 = l4#2 - $i0;

        goto label1;

     label5:
        return 0;
    }

    private static boolean isMoreAbove(java.lang.String, int)
    {
        java.lang.String l0;
        int l1, l4, l2, l3, $i0, $i1, l5#8, $i2;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l4 = virtualinvoke l0.<java.lang.String: int length()>();

        $i0 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        $i1 = staticinvoke <java.lang.Character: int charCount(int)>($i0);

        l5#8 = l1 + $i1;

     label1:
        if l5#8 >= l4 goto label4;

        l2 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l5#8);

        l3 = staticinvoke <sun.text.Normalizer: int getCombiningClass(int)>(l2);

        if l3 != 230 goto label2;

        return 1;

     label2:
        if l3 != 0 goto label3;

        return 0;

     label3:
        $i2 = staticinvoke <java.lang.Character: int charCount(int)>(l2);

        l5#8 = l5#8 + $i2;

        goto label1;

     label4:
        return 0;
    }

    private static boolean isAfterSoftDotted(java.lang.String, int)
    {
        java.lang.String l0;
        int l1, l2, l3, l4#2, $i0;
        boolean $z0;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l4#2 = l1;

     label1:
        if l4#2 <= 0 goto label5;

        l2 = virtualinvoke l0.<java.lang.String: int codePointBefore(int)>(l4#2);

        $z0 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isSoftDotted(int)>(l2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        l3 = staticinvoke <sun.text.Normalizer: int getCombiningClass(int)>(l2);

        if l3 == 0 goto label3;

        if l3 != 230 goto label4;

     label3:
        return 0;

     label4:
        $i0 = staticinvoke <java.lang.Character: int charCount(int)>(l2);

        l4#2 = l4#2 - $i0;

        goto label1;

     label5:
        return 0;
    }

    private static boolean isFinalCased(java.lang.String, int, java.util.Locale)
    {
        java.lang.String l0;
        int l1, l6, l5#6, l4#14, $i0, $i1, l5#24, l4#33, $i2, $i3;
        java.util.Locale l2;
        java.text.BreakIterator l3;
        boolean $z0, $z1, $z2, $z3;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        l3 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)>(l2);

        virtualinvoke l3.<java.text.BreakIterator: void setText(java.lang.String)>(l0);

        l5#6 = l1;

     label1:
        if l5#6 < 0 goto label6;

        $z0 = virtualinvoke l3.<java.text.BreakIterator: boolean isBoundary(int)>(l5#6);

        if $z0 != 0 goto label6;

        l4#14 = virtualinvoke l0.<java.lang.String: int codePointBefore(int)>(l5#6);

        $z1 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isCased(int)>(l4#14);

        if $z1 == 0 goto label5;

        l6 = virtualinvoke l0.<java.lang.String: int length()>();

        $i0 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        $i1 = staticinvoke <java.lang.Character: int charCount(int)>($i0);

        l5#24 = l1 + $i1;

     label2:
        if l5#24 >= l6 goto label4;

        $z2 = virtualinvoke l3.<java.text.BreakIterator: boolean isBoundary(int)>(l5#24);

        if $z2 != 0 goto label4;

        l4#33 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l5#24);

        $z3 = staticinvoke <java.lang.ConditionalSpecialCasing: boolean isCased(int)>(l4#33);

        if $z3 == 0 goto label3;

        return 0;

     label3:
        $i2 = staticinvoke <java.lang.Character: int charCount(int)>(l4#33);

        l5#24 = l5#24 + $i2;

        goto label2;

     label4:
        return 1;

     label5:
        $i3 = staticinvoke <java.lang.Character: int charCount(int)>(l4#14);

        l5#6 = l5#6 - $i3;

        goto label1;

     label6:
        return 0;
    }

    private static boolean isSoftDotted(int)
    {
        int l0;

        l0 := @parameter0: int;

        lookupswitch(l0)
        {
            case 105: goto label1;
            case 106: goto label1;
            case 303: goto label1;
            case 616: goto label1;
            case 1110: goto label1;
            case 1112: goto label1;
            case 7522: goto label1;
            case 7725: goto label1;
            case 7883: goto label1;
            case 8305: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isCased(int)
    {
        int l0, l1;

        l0 := @parameter0: int;

        l1 = staticinvoke <java.lang.Character: int getType(int)>(l0);

        if l1 == 2 goto label01;

        if l1 == 1 goto label01;

        if l1 != 3 goto label02;

     label01:
        return 1;

     label02:
        if l0 < 688 goto label03;

        if l0 > 696 goto label03;

        return 1;

     label03:
        if l0 < 704 goto label04;

        if l0 > 705 goto label04;

        return 1;

     label04:
        if l0 < 736 goto label05;

        if l0 > 740 goto label05;

        return 1;

     label05:
        if l0 != 837 goto label06;

        return 1;

     label06:
        if l0 != 890 goto label07;

        return 1;

     label07:
        if l0 < 7468 goto label08;

        if l0 > 7521 goto label08;

        return 1;

     label08:
        if l0 < 8544 goto label09;

        if l0 > 8575 goto label09;

        return 1;

     label09:
        if l0 < 9398 goto label10;

        if l0 > 9449 goto label10;

        return 1;

     label10:
        return 0;
    }

    static char[] toLowerCaseCharArray(java.lang.String, int, java.util.Locale)
    {
        java.lang.String l0;
        int l1;
        java.util.Locale l2;
        char[] $r0;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        $r0 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>(l0, l1, l2, 1);

        return $r0;
    }

    static int toLowerCaseEx(java.lang.String, int, java.util.Locale)
    {
        java.lang.String l0;
        int l1, $i0, $i2, $i3;
        java.util.Locale l2;
        char[] l3;
        char $c1;

        l0 := @parameter0: java.lang.String;

        l1 := @parameter1: int;

        l2 := @parameter2: java.util.Locale;

        l3 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>(l0, l1, l2, 1);

        if l3 == null goto label2;

        $i0 = lengthof l3;

        if $i0 != 1 goto label1;

        $c1 = l3[0];

        return $c1;

     label1:
        return -1;

     label2:
        $i2 = virtualinvoke l0.<java.lang.String: int codePointAt(int)>(l1);

        $i3 = staticinvoke <java.lang.Character: int toLowerCase(int)>($i2);

        return $i3;
    }


