digraph main {
"args#1 := @parameter0: java.lang.String[] {1147979186}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>() {255713524}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>() {255713524}" -> "$r0 = <java.lang.System: java.io.PrintStream out> {282592714}";
"$r0 = <java.lang.System: java.io.PrintStream out> {282592714}" -> "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Original\") {1381192210}";
"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"Original\") {1381192210}" -> "$r1 = args#1[0] {838582169}";
"$r1 = args#1[0] {838582169}" -> "$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1) {2045814902}";
"$r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1) {2045814902}" -> "$z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>() {1417072460}";
"$z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>() {1417072460}" -> "$z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFOLDS(boolean)>($z0) {1402741460}";
"$z1 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionFOLDS(boolean)>($z0) {1402741460}" -> "<weka.Test: boolean FOLDS> = $z1 {1073174601}";
"<weka.Test: boolean FOLDS> = $z1 {1073174601}" -> "$r3 = args#1[1] {325993265}";
"$r3 = args#1[1] {325993265}" -> "$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3) {383677445}";
"$r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3) {383677445}" -> "$z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>() {314856507}";
"$z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>() {314856507}" -> "$z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionOPTIMIZATIONS(boolean)>($z2) {24861961}";
"$z3 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionOPTIMIZATIONS(boolean)>($z2) {24861961}" -> "<weka.Test: boolean OPTIMIZATIONS> = $z3 {1626206684}";
"<weka.Test: boolean OPTIMIZATIONS> = $z3 {1626206684}" -> "$r5 = args#1[2] {1860941369}";
"$r5 = args#1[2] {1860941369}" -> "$r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5) {1636292905}";
"$r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5) {1636292905}" -> "$z4 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>() {1379815582}";
"$z4 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>() {1379815582}" -> "$z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPRUNE(boolean)>($z4) {2122675062}";
"$z5 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionPRUNE(boolean)>($z4) {2122675062}" -> "<weka.Test: boolean PRUNE> = $z5 {1298946273}";
"<weka.Test: boolean PRUNE> = $z5 {1298946273}" -> "$r7 = args#1[3] {1730960748}";
"$r7 = args#1[3] {1730960748}" -> "$r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r7) {1210624568}";
"$r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r7) {1210624568}" -> "$z6 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>() {920422391}";
"$z6 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>() {920422391}" -> "$z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSEED(boolean)>($z6) {948042903}";
"$z7 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionSEED(boolean)>($z6) {948042903}" -> "<weka.Test: boolean SEED> = $z7 {1027801558}";
"<weka.Test: boolean SEED> = $z7 {1027801558}" -> "$r9 = args#1[4] {1440019057}";
"$r9 = args#1[4] {1440019057}" -> "$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) {1891370156}";
"$r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9) {1891370156}" -> "$z8 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() {2024432098}";
"$z8 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>() {2024432098}" -> "$z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMINNO(boolean)>($z8) {747067466}";
"$z9 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionMINNO(boolean)>($z8) {747067466}" -> "<weka.Test: boolean MINNO> = $z9 {1580359889}";
"<weka.Test: boolean MINNO> = $z9 {1580359889}" -> "$r11 = args#1[5] {1944459903}";
"$r11 = args#1[5] {1944459903}" -> "$r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11) {1050658874}";
"$r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11) {1050658874}" -> "$z10 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() {738245704}";
"$z10 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>() {738245704}" -> "$z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDEBUG(boolean)>($z10) {1671873344}";
"$z11 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionDEBUG(boolean)>($z10) {1671873344}" -> "<weka.Test: boolean DEBUG> = $z11 {550508713}";
"<weka.Test: boolean DEBUG> = $z11 {550508713}" -> "$r13 = args#1[6] {476884623}";
"$r13 = args#1[6] {476884623}" -> "$r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) {1020913915}";
"$r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) {1020913915}" -> "$z12 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() {710260643}";
"$z12 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() {710260643}" -> "$z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCHECKERROR(boolean)>($z12) {1299631853}";
"$z13 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionCHECKERROR(boolean)>($z12) {1299631853}" -> "<weka.Test: boolean CHECKERROR> = $z13 {873924890}";
"<weka.Test: boolean CHECKERROR> = $z13 {873924890}" -> "$r15 = args#1[8] {997151225}";
"$r15 = args#1[8] {997151225}" -> "$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15) {935120983}";
"$r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15) {935120983}" -> "$z14 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>() {635310026}";
"$z14 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>() {635310026}" -> "$z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBATCHSIZE(boolean)>($z14) {1246823743}";
"$z15 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionBATCHSIZE(boolean)>($z14) {1246823743}" -> "<weka.Test: boolean BATCHSIZE> = $z15 {200307989}";
"<weka.Test: boolean BATCHSIZE> = $z15 {200307989}" -> "$r17 = args#1[9] {1297105581}";
"$r17 = args#1[9] {1297105581}" -> "$r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r17) {1166069455}";
"$r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r17) {1166069455}" -> "$z16 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>() {1722735017}";
"$z16 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>() {1722735017}" -> "$z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNOCHECKCAPABILITIES(boolean)>($z16) {1059704232}";
"$z17 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNOCHECKCAPABILITIES(boolean)>($z16) {1059704232}" -> "<weka.Test: boolean NOCHECKCAPABILITIES> = $z17 {1889777098}";
"<weka.Test: boolean NOCHECKCAPABILITIES> = $z17 {1889777098}" -> "$r19 = args#1[10] {1381024436}";
"$r19 = args#1[10] {1381024436}" -> "$r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r19) {1060118737}";
"$r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r19) {1060118737}" -> "$z18 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>() {998223699}";
"$z18 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>() {998223699}" -> "$z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNUMDECIMAL(boolean)>($z18) {820954534}";
"$z19 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getOptionNUMDECIMAL(boolean)>($z18) {820954534}" -> "<weka.Test: boolean NUMDECIMAL> = $z19 {1686107245}";
"<weka.Test: boolean NUMDECIMAL> = $z19 {1686107245}" -> "args#66 = newarray (java.lang.String)[2] {1513192052}";
"args#66 = newarray (java.lang.String)[2] {1513192052}" -> "args#66[0] = \"-t\" {1058549078}";
"args#66[0] = \"-t\" {1058549078}" -> "args#66[1] = \"/Users/mvelezce/Documents/Programming/Machine Learning/Projects/turtlebot-configurations-validity/datasets/dataset_cross_validation.arff\" {189017728}";
"args#66[1] = \"/Users/mvelezce/Documents/Programming/Machine Learning/Projects/turtlebot-configurations-validity/datasets/dataset_cross_validation.arff\" {189017728}" -> "folds#74 = 3 {226017512}";
"folds#74 = 3 {226017512}" -> "optimizations#76 = 2 {167252649}";
"optimizations#76 = 2 {167252649}" -> "seed#78 = 1L {437704714}";
"seed#78 = 1L {437704714}" -> "minNo#80 = 2.0 {48168839}";
"minNo#80 = 2.0 {48168839}" -> "debug#82 = 0 {2056443605}";
"debug#82 = 0 {2056443605}" -> "checkError#84 = 0 {1346085462}";
"checkError#84 = 0 {1346085462}" -> "prune#86 = 0 {403010059}";
"prune#86 = 0 {403010059}" -> "batchSize#88 = \"100\" {514654514}";
"batchSize#88 = \"100\" {514654514}" -> "noCheckCapabilities#90 = 0 {812805859}";
"noCheckCapabilities#90 = 0 {812805859}" -> "numDecimal#92 = 2 {1058221476}";
"numDecimal#92 = 2 {1058221476}" -> "$z20 = <weka.Test: boolean FOLDS> {481642963}";
"$z20 = <weka.Test: boolean FOLDS> {481642963}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20) {449904479}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20) {449904479}" -> "if $z20 == 0 goto $z21 = <weka.Test: boolean OPTIMIZATIONS> {1488661798}";
"if $z20 == 0 goto $z21 = <weka.Test: boolean OPTIMIZATIONS> {1488661798}" -> "folds#74 = 10 {1696838419}";
"if $z20 == 0 goto $z21 = <weka.Test: boolean OPTIMIZATIONS> {1488661798}" -> "$z21 = <weka.Test: boolean OPTIMIZATIONS> {1399756213}";
"folds#74 = 10 {1696838419}" -> "$z21 = <weka.Test: boolean OPTIMIZATIONS> {1399756213}";
"$z21 = <weka.Test: boolean OPTIMIZATIONS> {1399756213}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z21) {1091566561}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z21) {1091566561}" -> "if $z21 == 0 goto $z22 = <weka.Test: boolean SEED> {1379746019}";
"if $z21 == 0 goto $z22 = <weka.Test: boolean SEED> {1379746019}" -> "optimizations#76 = 10 {928947930}";
"if $z21 == 0 goto $z22 = <weka.Test: boolean SEED> {1379746019}" -> "$z22 = <weka.Test: boolean SEED> {272266937}";
"optimizations#76 = 10 {928947930}" -> "$z22 = <weka.Test: boolean SEED> {272266937}";
"$z22 = <weka.Test: boolean SEED> {272266937}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z22) {1351537242}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z22) {1351537242}" -> "if $z22 == 0 goto $z23 = <weka.Test: boolean MINNO> {683152901}";
"if $z22 == 0 goto $z23 = <weka.Test: boolean MINNO> {683152901}" -> "seed#78 = 100L {1280397055}";
"if $z22 == 0 goto $z23 = <weka.Test: boolean MINNO> {683152901}" -> "$z23 = <weka.Test: boolean MINNO> {253585010}";
"seed#78 = 100L {1280397055}" -> "$z23 = <weka.Test: boolean MINNO> {253585010}";
"$z23 = <weka.Test: boolean MINNO> {253585010}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z23) {333729492}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z23) {333729492}" -> "if $z23 == 0 goto $z24 = <weka.Test: boolean DEBUG> {1736266154}";
"if $z23 == 0 goto $z24 = <weka.Test: boolean DEBUG> {1736266154}" -> "minNo#80 = 10.0 {2066867555}";
"if $z23 == 0 goto $z24 = <weka.Test: boolean DEBUG> {1736266154}" -> "$z24 = <weka.Test: boolean DEBUG> {536556161}";
"minNo#80 = 10.0 {2066867555}" -> "$z24 = <weka.Test: boolean DEBUG> {536556161}";
"$z24 = <weka.Test: boolean DEBUG> {536556161}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z24) {929682814}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z24) {929682814}" -> "if $z24 == 0 goto $z25 = <weka.Test: boolean CHECKERROR> {310825173}";
"if $z24 == 0 goto $z25 = <weka.Test: boolean CHECKERROR> {310825173}" -> "debug#82 = 1 {1343985271}";
"if $z24 == 0 goto $z25 = <weka.Test: boolean CHECKERROR> {310825173}" -> "$z25 = <weka.Test: boolean CHECKERROR> {372427215}";
"debug#82 = 1 {1343985271}" -> "$z25 = <weka.Test: boolean CHECKERROR> {372427215}";
"$z25 = <weka.Test: boolean CHECKERROR> {372427215}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z25) {2081392788}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z25) {2081392788}" -> "if $z25 == 0 goto $z26 = <weka.Test: boolean PRUNE> {840348580}";
"if $z25 == 0 goto $z26 = <weka.Test: boolean PRUNE> {840348580}" -> "checkError#84 = 1 {836974509}";
"if $z25 == 0 goto $z26 = <weka.Test: boolean PRUNE> {840348580}" -> "$z26 = <weka.Test: boolean PRUNE> {824175855}";
"checkError#84 = 1 {836974509}" -> "$z26 = <weka.Test: boolean PRUNE> {824175855}";
"$z26 = <weka.Test: boolean PRUNE> {824175855}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26) {1384317685}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26) {1384317685}" -> "if $z26 == 0 goto $z27 = <weka.Test: boolean BATCHSIZE> {907277051}";
"if $z26 == 0 goto $z27 = <weka.Test: boolean BATCHSIZE> {907277051}" -> "prune#86 = 1 {512774301}";
"if $z26 == 0 goto $z27 = <weka.Test: boolean BATCHSIZE> {907277051}" -> "$z27 = <weka.Test: boolean BATCHSIZE> {1344716596}";
"prune#86 = 1 {512774301}" -> "$z27 = <weka.Test: boolean BATCHSIZE> {1344716596}";
"$z27 = <weka.Test: boolean BATCHSIZE> {1344716596}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z27) {1380481817}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z27) {1380481817}" -> "if $z27 == 0 goto $z28 = <weka.Test: boolean NOCHECKCAPABILITIES> {2039155681}";
"if $z27 == 0 goto $z28 = <weka.Test: boolean NOCHECKCAPABILITIES> {2039155681}" -> "batchSize#88 = \"10\" {1641853859}";
"if $z27 == 0 goto $z28 = <weka.Test: boolean NOCHECKCAPABILITIES> {2039155681}" -> "$z28 = <weka.Test: boolean NOCHECKCAPABILITIES> {82210739}";
"batchSize#88 = \"10\" {1641853859}" -> "$z28 = <weka.Test: boolean NOCHECKCAPABILITIES> {82210739}";
"$z28 = <weka.Test: boolean NOCHECKCAPABILITIES> {82210739}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z28) {1996226053}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z28) {1996226053}" -> "if $z28 == 0 goto $z29 = <weka.Test: boolean NUMDECIMAL> {630438093}";
"if $z28 == 0 goto $z29 = <weka.Test: boolean NUMDECIMAL> {630438093}" -> "noCheckCapabilities#90 = 1 {2094984248}";
"if $z28 == 0 goto $z29 = <weka.Test: boolean NUMDECIMAL> {630438093}" -> "$z29 = <weka.Test: boolean NUMDECIMAL> {1265799143}";
"noCheckCapabilities#90 = 1 {2094984248}" -> "$z29 = <weka.Test: boolean NUMDECIMAL> {1265799143}";
"$z29 = <weka.Test: boolean NUMDECIMAL> {1265799143}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z29) {728995339}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z29) {728995339}" -> "if $z29 == 0 goto $r21 = new weka.classifiers.rules.JRip {1931412372}";
"if $z29 == 0 goto $r21 = new weka.classifiers.rules.JRip {1931412372}" -> "numDecimal#92 = 5 {1482246076}";
"if $z29 == 0 goto $r21 = new weka.classifiers.rules.JRip {1931412372}" -> "$r21 = new weka.classifiers.rules.JRip {126613223}";
"numDecimal#92 = 5 {1482246076}" -> "$r21 = new weka.classifiers.rules.JRip {126613223}";
"$r21 = new weka.classifiers.rules.JRip {126613223}" -> "specialinvoke $r21.<weka.classifiers.rules.JRip: void <init>()>() {832944770}";
"specialinvoke $r21.<weka.classifiers.rules.JRip: void <init>()>() {832944770}" -> "jrip = $r21 {2075630062}";
"jrip = $r21 {2075630062}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setFolds(int)>(folds#74) {1239948264}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setFolds(int)>(folds#74) {1239948264}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setOptimizations(int)>(optimizations#76) {2096910872}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setOptimizations(int)>(optimizations#76) {2096910872}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setSeed(long)>(seed#78) {923653499}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setSeed(long)>(seed#78) {923653499}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setMinNo(double)>(minNo#80) {1104115056}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setMinNo(double)>(minNo#80) {1104115056}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setDebug(boolean)>(debug#82) {117248034}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setDebug(boolean)>(debug#82) {117248034}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setCheckErrorRate(boolean)>(checkError#84) {1438673377}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setCheckErrorRate(boolean)>(checkError#84) {1438673377}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setUsePruning(boolean)>(prune#86) {1483362431}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setUsePruning(boolean)>(prune#86) {1483362431}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setBatchSize(java.lang.String)>(batchSize#88) {1831513127}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setBatchSize(java.lang.String)>(batchSize#88) {1831513127}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setDoNotCheckCapabilities(boolean)>(noCheckCapabilities#90) {1594405985}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setDoNotCheckCapabilities(boolean)>(noCheckCapabilities#90) {1594405985}" -> "virtualinvoke jrip.<weka.classifiers.rules.JRip: void setNumDecimalPlaces(int)>(numDecimal#92) {230135380}";
"virtualinvoke jrip.<weka.classifiers.rules.JRip: void setNumDecimalPlaces(int)>(numDecimal#92) {230135380}" -> "staticinvoke <weka.classifiers.rules.JRip: void runClassifier(weka.classifiers.Classifier,java.lang.String[])>(jrip, args#66) {598606922}";
"staticinvoke <weka.classifiers.rules.JRip: void runClassifier(weka.classifiers.Classifier,java.lang.String[])>(jrip, args#66) {598606922}" -> "return {303706973}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z27) {1380481817}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z24) {929682814}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z20) {449904479}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z25) {2081392788}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z29) {728995339}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z26) {1384317685}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z22) {1351537242}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z23) {333729492}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z28) {1996226053}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z21) {1091566561}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph <init> {
"this := @this: weka.Test {295563517}" -> "specialinvoke this.<java.lang.Object: void <init>()>() {38410046}";
"specialinvoke this.<java.lang.Object: void <init>()>() {38410046}" -> "return {2083394962}";
}


