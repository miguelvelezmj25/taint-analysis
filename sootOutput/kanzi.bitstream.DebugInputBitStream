    public synchronized long readBits(int) throws kanzi.BitStreamException
    {
        kanzi.bitstream.DebugInputBitStream this;
        int length, i#6, $i0, $i2, $i3, $i5, $i10, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22;
        long res, bit, $l1, $l8, $l9;
        kanzi.InputBitStream $r0;
        byte $b4, $b6, $b7, $b11, $b12, $b17, $b20, $b23;
        java.io.PrintStream $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3;

        this := @this: kanzi.bitstream.DebugInputBitStream;

        length := @parameter0: int;

        $r0 = this.<kanzi.bitstream.DebugInputBitStream: kanzi.InputBitStream delegate>;

        res = interfaceinvoke $r0.<kanzi.InputBitStream: long readBits(int)>(length);

        i#6 = 1;

     label01:
        if i#6 > length goto label11;

        $i0 = length - i#6;

        $l1 = res >> $i0;

        bit = $l1 & 1L;

        $i2 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i3 = $i2 + 1;

        this.<kanzi.bitstream.DebugInputBitStream: int lineIndex> = $i3;

        $b4 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        $i5 = $b4 << 1;

        $b6 = (byte) $i5;

        this.<kanzi.bitstream.DebugInputBitStream: byte current> = $b6;

        $b7 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        $l8 = (long) $b7;

        $l9 = $l8 | bit;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        this.<kanzi.bitstream.DebugInputBitStream: byte current> = $b11;

        $r4 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        $b12 = bit cmp 1L;

        if $b12 != 0 goto label02;

        $r5 = "1";

        goto label03;

     label02:
        $r5 = "0";

     label03:
        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>($r5);

        $z0 = this.<kanzi.bitstream.DebugInputBitStream: boolean mark>;

        if $z0 != 1 goto label04;

        if i#6 != length goto label04;

        $r6 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>("r");

     label04:
        $i13 = this.<kanzi.bitstream.DebugInputBitStream: int width>;

        if $i13 == -1 goto label08;

        $i14 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i15 = this.<kanzi.bitstream.DebugInputBitStream: int width>;

        $i16 = $i14 % $i15;

        if $i16 != 0 goto label06;

        $z1 = virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: boolean showByte()>();

        if $z1 == 0 goto label05;

        $b17 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: void printByte(byte)>($b17);

     label05:
        $r7 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println()>();

        this.<kanzi.bitstream.DebugInputBitStream: int lineIndex> = 0;

        goto label10;

     label06:
        $i18 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i19 = $i18 & 7;

        if $i19 != 0 goto label10;

        $z2 = virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: boolean showByte()>();

        if $z2 == 0 goto label07;

        $b20 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: void printByte(byte)>($b20);

        goto label10;

     label07:
        $r8 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>(" ");

        goto label10;

     label08:
        $i21 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i22 = $i21 & 7;

        if $i22 != 0 goto label10;

        $z3 = virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: boolean showByte()>();

        if $z3 == 0 goto label09;

        $b23 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: void printByte(byte)>($b23);

        goto label10;

     label09:
        $r9 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label10:
        i#6 = i#6 + 1;

        goto label01;

     label11:
        return res;
    }

    public synchronized boolean showByte()
    {
        kanzi.bitstream.DebugInputBitStream this;
        boolean $z0;

        this := @this: kanzi.bitstream.DebugInputBitStream;

        $z0 = this.<kanzi.bitstream.DebugInputBitStream: boolean hexa>;

        return $z0;
    }

    protected synchronized void printByte(byte)
    {
        kanzi.bitstream.DebugInputBitStream this;
        byte val;
        java.io.PrintStream $r0, $r6, $r12;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16;
        short $s0, $s1, $s2;
        java.lang.String $r5, $r11, $r17;

        this := @this: kanzi.bitstream.DebugInputBitStream;

        val := @parameter0: byte;

        if val < 0 goto label1;

        if val >= 10 goto label1;

        $r0 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [00");

        $s0 = val & 255;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r5);

        goto label3;

     label1:
        if val < 0 goto label2;

        if val >= 100 goto label2;

        $r6 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [0");

        $s1 = val & 255;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>($r11);

        goto label3;

     label2:
        $r12 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $s2 = val & 255;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r17);

     label3:
        return;
    }

    public synchronized int readBit() throws kanzi.BitStreamException
    {
        kanzi.bitstream.DebugInputBitStream this;
        int res, $i1, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21;
        kanzi.InputBitStream $r0;
        byte $b0, $b2, $b3, $b5, $b16, $b19, $b22;
        java.io.PrintStream $r3, $r6, $r7, $r8, $r9;
        java.lang.String $r4;
        boolean $z0, $z1, $z2, $z3;

        this := @this: kanzi.bitstream.DebugInputBitStream;

        $r0 = this.<kanzi.bitstream.DebugInputBitStream: kanzi.InputBitStream delegate>;

        res = interfaceinvoke $r0.<kanzi.InputBitStream: int readBit()>();

        $b0 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        $i1 = $b0 << 1;

        $b2 = (byte) $i1;

        this.<kanzi.bitstream.DebugInputBitStream: byte current> = $b2;

        $b3 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        $i4 = $b3 | res;

        $b5 = (byte) $i4;

        this.<kanzi.bitstream.DebugInputBitStream: byte current> = $b5;

        $r3 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        $i6 = res & 1;

        if $i6 != 1 goto label1;

        $r4 = "1";

        goto label2;

     label1:
        $r4 = "0";

     label2:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r4);

        $i7 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i8 = $i7 + 1;

        this.<kanzi.bitstream.DebugInputBitStream: int lineIndex> = $i8;

        $z0 = this.<kanzi.bitstream.DebugInputBitStream: boolean mark>;

        if $z0 != 1 goto label3;

        $r6 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>("r");

     label3:
        $i9 = this.<kanzi.bitstream.DebugInputBitStream: int width>;

        if $i9 == -1 goto label7;

        $i10 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i11 = $i10 - 1;

        $i12 = this.<kanzi.bitstream.DebugInputBitStream: int width>;

        $i13 = $i11 % $i12;

        $i14 = this.<kanzi.bitstream.DebugInputBitStream: int width>;

        $i15 = $i14 - 1;

        if $i13 != $i15 goto label5;

        $z1 = virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: boolean showByte()>();

        if $z1 == 0 goto label4;

        $b16 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: void printByte(byte)>($b16);

     label4:
        $r7 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println()>();

        this.<kanzi.bitstream.DebugInputBitStream: int lineIndex> = 0;

        goto label9;

     label5:
        $i17 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i18 = $i17 & 7;

        if $i18 != 0 goto label9;

        $z2 = virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: boolean showByte()>();

        if $z2 == 0 goto label6;

        $b19 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: void printByte(byte)>($b19);

        goto label9;

     label6:
        $r8 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>(" ");

        goto label9;

     label7:
        $i20 = this.<kanzi.bitstream.DebugInputBitStream: int lineIndex>;

        $i21 = $i20 & 7;

        if $i21 != 0 goto label9;

        $z3 = virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: boolean showByte()>();

        if $z3 == 0 goto label8;

        $b22 = this.<kanzi.bitstream.DebugInputBitStream: byte current>;

        virtualinvoke this.<kanzi.bitstream.DebugInputBitStream: void printByte(byte)>($b22);

        goto label9;

     label8:
        $r9 = this.<kanzi.bitstream.DebugInputBitStream: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label9:
        return res;
    }

    public long read()
    {
        kanzi.bitstream.DebugInputBitStream this;
        kanzi.InputBitStream $r0;
        long $l0;

        this := @this: kanzi.bitstream.DebugInputBitStream;

        $r0 = this.<kanzi.bitstream.DebugInputBitStream: kanzi.InputBitStream delegate>;

        $l0 = interfaceinvoke $r0.<kanzi.InputBitStream: long read()>();

        return $l0;
    }

    public void close() throws kanzi.BitStreamException
    {
        kanzi.bitstream.DebugInputBitStream this;
        kanzi.InputBitStream $r0;

        this := @this: kanzi.bitstream.DebugInputBitStream;

        $r0 = this.<kanzi.bitstream.DebugInputBitStream: kanzi.InputBitStream delegate>;

        interfaceinvoke $r0.<kanzi.InputBitStream: void close()>();

        return;
    }


