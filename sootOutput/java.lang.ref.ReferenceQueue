    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.lang.ref.ReferenceQueue$Null $r1, $r2;

        $r0 = class "java/lang/ref/ReferenceQueue";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <java.lang.ref.ReferenceQueue: boolean $assertionsDisabled> = $z1;

        $r1 = new java.lang.ref.ReferenceQueue$Null;

        specialinvoke $r1.<java.lang.ref.ReferenceQueue$Null: void <init>(java.lang.ref.ReferenceQueue$1)>(null);

        <java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue NULL> = $r1;

        $r2 = new java.lang.ref.ReferenceQueue$Null;

        specialinvoke $r2.<java.lang.ref.ReferenceQueue$Null: void <init>(java.lang.ref.ReferenceQueue$1)>(null);

        <java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue ENQUEUED> = $r2;

        return;
    }

    public void <init>()
    {
        java.lang.ref.ReferenceQueue l0;
        java.lang.ref.ReferenceQueue$Lock $r0;

        l0 := @this: java.lang.ref.ReferenceQueue;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        $r0 = new java.lang.ref.ReferenceQueue$Lock;

        specialinvoke $r0.<java.lang.ref.ReferenceQueue$Lock: void <init>(java.lang.ref.ReferenceQueue$1)>(null);

        l0.<java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue$Lock lock> = $r0;

        l0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head> = null;

        l0.<java.lang.ref.ReferenceQueue: long queueLength> = 0L;

        return;
    }

    public java.lang.ref.Reference poll()
    {
        java.lang.ref.ReferenceQueue l0;
        java.lang.ref.ReferenceQueue$Lock l1, $r1;
        java.lang.Throwable l2, $r3;
        java.lang.ref.Reference $r0, $r2;

        l0 := @this: java.lang.ref.ReferenceQueue;

        $r0 = l0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = l0.<java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue$Lock lock>;

        l1 = $r1;

        entermonitor $r1;

     label2:
        $r2 = specialinvoke l0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference reallyPoll()>();

        exitmonitor l1;

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

     label5:
        l2 = $r3;

        exitmonitor l1;

     label6:
        throw l2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private java.lang.ref.Reference reallyPoll()
    {
        java.lang.ref.ReferenceQueue l0, $r3;
        java.lang.ref.Reference l1, $r1, $r2;
        long $l0, $l1;
        boolean $z0;

        l0 := @this: java.lang.ref.ReferenceQueue;

        l1 = l0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if l1 == null goto label4;

        $r1 = l1.<java.lang.ref.Reference: java.lang.ref.Reference next>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l1);

        if $r1 != l1 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = l1.<java.lang.ref.Reference: java.lang.ref.Reference next>;

     label2:
        l0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head> = $r2;

        $r3 = <java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue NULL>;

        l1.<java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue> = $r3;

        l1.<java.lang.ref.Reference: java.lang.ref.Reference next> = l1;

        $l0 = l0.<java.lang.ref.ReferenceQueue: long queueLength>;

        $l1 = $l0 - 1L;

        l0.<java.lang.ref.ReferenceQueue: long queueLength> = $l1;

        $z0 = l1 instanceof java.lang.ref.FinalReference;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label3;

        staticinvoke <sun.misc.VM: void addFinalRefCount(int)>(-1);

     label3:
        return l1;

     label4:
        return null;
    }


