    public static void intToEntry(int, com.sleepycat.je.DatabaseEntry)
    {
        int val;
        com.sleepycat.je.DatabaseEntry entry;
        com.sleepycat.bind.tuple.TupleOutput $r0, $r1;

        val := @parameter0: int;

        entry := @parameter1: com.sleepycat.je.DatabaseEntry;

        $r0 = staticinvoke <com.sleepycat.bind.tuple.IntegerBinding: com.sleepycat.bind.tuple.TupleOutput sizedOutput()>();

        $r1 = virtualinvoke $r0.<com.sleepycat.bind.tuple.TupleOutput: com.sleepycat.bind.tuple.TupleOutput writeInt(int)>(val);

        staticinvoke <com.sleepycat.bind.tuple.IntegerBinding: void outputToEntry(com.sleepycat.bind.tuple.TupleOutput,com.sleepycat.je.DatabaseEntry)>($r1, entry);

        return;
    }

    private static com.sleepycat.bind.tuple.TupleOutput sizedOutput()
    {
        com.sleepycat.bind.tuple.TupleOutput $r0;
        byte[] $r1;

        $r0 = new com.sleepycat.bind.tuple.TupleOutput;

        $r1 = newarray (byte)[4];

        specialinvoke $r0.<com.sleepycat.bind.tuple.TupleOutput: void <init>(byte[])>($r1);

        return $r0;
    }

    public void <init>()
    {
        com.sleepycat.bind.tuple.IntegerBinding this;

        this := @this: com.sleepycat.bind.tuple.IntegerBinding;

        specialinvoke this.<com.sleepycat.bind.tuple.TupleBinding: void <init>()>();

        return;
    }


