    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "berkeley/com/sleepycat/je/latch/LatchWithStatsImpl";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(berkeley.com.sleepycat.je.latch.LatchContext)
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        berkeley.com.sleepycat.je.latch.LatchContext context;
        berkeley.com.sleepycat.je.utilint.StatGroup $r0, $r2, $r5, $r8, $r11, $r14, $r17;
        berkeley.com.sleepycat.je.utilint.IntStat $r1, $r4, $r7, $r10, $r13, $r16;
        berkeley.com.sleepycat.je.utilint.StatDefinition $r3, $r6, $r9, $r12, $r15, $r18;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        context := @parameter0: berkeley.com.sleepycat.je.latch.LatchContext;

        specialinvoke this.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context> = context;

        $r0 = new berkeley.com.sleepycat.je.utilint.StatGroup;

        specialinvoke $r0.<berkeley.com.sleepycat.je.utilint.StatGroup: void <init>(java.lang.String,java.lang.String)>("Latch", "Latch characteristics");

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats> = $r0;

        $r1 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r2 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r3 = <berkeley.com.sleepycat.je.latch.LatchStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LATCH_NO_WAITERS>;

        specialinvoke $r1.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r2, $r3);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresNoWaiters> = $r1;

        $r4 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r5 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r6 = <berkeley.com.sleepycat.je.latch.LatchStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LATCH_SELF_OWNED>;

        specialinvoke $r4.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r5, $r6);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresSelfOwned> = $r4;

        $r7 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r8 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r9 = <berkeley.com.sleepycat.je.latch.LatchStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LATCH_CONTENTION>;

        specialinvoke $r7.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r8, $r9);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresWithContention> = $r7;

        $r10 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r11 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r12 = <berkeley.com.sleepycat.je.latch.LatchStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LATCH_NOWAIT_SUCCESS>;

        specialinvoke $r10.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r11, $r12);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresNoWaitSuccessful> = $r10;

        $r13 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r14 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r15 = <berkeley.com.sleepycat.je.latch.LatchStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LATCH_NOWAIT_UNSUCCESS>;

        specialinvoke $r13.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r14, $r15);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresNoWaitUnsuccessful> = $r13;

        $r16 = new berkeley.com.sleepycat.je.utilint.IntStat;

        $r17 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        $r18 = <berkeley.com.sleepycat.je.latch.LatchStatDefinition: berkeley.com.sleepycat.je.utilint.StatDefinition LATCH_RELEASES>;

        specialinvoke $r16.<berkeley.com.sleepycat.je.utilint.IntStat: void <init>(berkeley.com.sleepycat.je.utilint.StatGroup,berkeley.com.sleepycat.je.utilint.StatDefinition)>($r17, $r18);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nReleases> = $r16;

        return;
    }

    public void release()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.latch.LatchContext $r0, $r8;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r7;
        berkeley.com.sleepycat.je.utilint.IntStat $r9;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean isHeldByCurrentThread()>();

        if $z0 != 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r1 = interfaceinvoke $r0.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch not held: ");

        $r4 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: java.lang.String debugString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r1, $r6);

        throw $r7;

     label1:
        $z1 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z1 == 0 goto label2;

        $r8 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackRelease(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r8);

     label2:
        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z2 == 0 goto label3;

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = null;

     label3:
        virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: void unlock()>();

        $r9 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nReleases>;

        virtualinvoke $r9.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        return;
    }

    public java.lang.String debugString()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        berkeley.com.sleepycat.je.latch.LatchContext $r0;
        berkeley.com.sleepycat.je.latch.OwnerInfo $r1;
        java.lang.String $r2;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r1 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo>;

        $r2 = staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: java.lang.String debugString(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext,berkeley.com.sleepycat.je.latch.OwnerInfo)>(this, $r0, $r1);

        return $r2;
    }

    public java.lang.Thread getExclusiveOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        java.lang.Thread $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $r0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: java.lang.Thread getOwner()>();

        return $r0;
    }

    public void acquireExclusive()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        java.lang.InterruptedException e, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        berkeley.com.sleepycat.je.utilint.IntStat $r0, $r9, $r10;
        berkeley.com.sleepycat.je.latch.LatchContext $r1, $r11, $r13, $r17, $r19, $r21;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2, $r18;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r8, $r14;
        int $i0;
        long $l1;
        java.util.concurrent.TimeUnit $r12;
        berkeley.com.sleepycat.je.ThreadInterruptedException $r16;
        berkeley.com.sleepycat.je.latch.OwnerInfo $r20;
        java.lang.AssertionError $r22;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean isHeldByCurrentThread()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresSelfOwned>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        $r1 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r2 = interfaceinvoke $r1.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch already held: ");

        $r5 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: java.lang.String debugString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r2, $r7);

        throw $r8;

     label1:
        $z1 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean isLocked()>();

        if $z1 == 0 goto label2;

        $r9 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresWithContention>;

        virtualinvoke $r9.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        goto label3;

     label2:
        $r10 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresNoWaiters>;

        virtualinvoke $r10.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

     label3:
        $r11 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $i0 = interfaceinvoke $r11.<berkeley.com.sleepycat.je.latch.LatchContext: int getLatchTimeoutMs()>();

        $l1 = (long) $i0;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z2 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean tryLock(long,java.util.concurrent.TimeUnit)>($l1, $r12);

        if $z2 != 0 goto label4;

        $r13 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r14 = staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: berkeley.com.sleepycat.je.EnvironmentFailureException handleTimeout(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r13);

        throw $r14;

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        e = $r15;

        $r16 = new berkeley.com.sleepycat.je.ThreadInterruptedException;

        $r17 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r18 = interfaceinvoke $r17.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        specialinvoke $r16.<berkeley.com.sleepycat.je.ThreadInterruptedException: void <init>(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.Throwable)>($r18, e);

        throw $r16;

     label6:
        $z3 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z3 == 0 goto label7;

        $r19 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackAcquire(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r19);

     label7:
        $z4 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z4 == 0 goto label8;

        $r20 = new berkeley.com.sleepycat.je.latch.OwnerInfo;

        $r21 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        specialinvoke $r20.<berkeley.com.sleepycat.je.latch.OwnerInfo: void <init>(berkeley.com.sleepycat.je.latch.LatchContext)>($r21);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = $r20;

     label8:
        $z5 = <berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean $assertionsDisabled>;

        if $z5 != 0 goto label9;

        $z6 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean maybeForceYield()>();

        if $z6 != 0 goto label9;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label9:
        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    public boolean isExclusiveOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        boolean $z0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean isHeldByCurrentThread()>();

        return $z0;
    }

    public void releaseIfOwner()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        boolean $z0, $z1, $z2;
        berkeley.com.sleepycat.je.latch.LatchContext $r0;
        berkeley.com.sleepycat.je.utilint.IntStat $r1;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean isHeldByCurrentThread()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z1 == 0 goto label2;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackRelease(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r0);

     label2:
        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z2 == 0 goto label3;

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = null;

     label3:
        virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: void unlock()>();

        $r1 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nReleases>;

        virtualinvoke $r1.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        return;
    }

    public void clearStats()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        berkeley.com.sleepycat.je.utilint.StatGroup $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.StatGroup: void clear()>();

        return;
    }

    public berkeley.com.sleepycat.je.utilint.StatGroup getStats()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        berkeley.com.sleepycat.je.utilint.StatGroup $r0;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.StatGroup stats>;

        return $r0;
    }

    public boolean acquireExclusiveNoWait()
    {
        berkeley.com.sleepycat.je.latch.LatchWithStatsImpl this;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        berkeley.com.sleepycat.je.utilint.IntStat $r0, $r9, $r10;
        berkeley.com.sleepycat.je.latch.LatchContext $r1, $r11, $r13;
        berkeley.com.sleepycat.je.dbi.EnvironmentImpl $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        berkeley.com.sleepycat.je.EnvironmentFailureException $r8;
        berkeley.com.sleepycat.je.latch.OwnerInfo $r12;
        java.lang.AssertionError $r14;

        this := @this: berkeley.com.sleepycat.je.latch.LatchWithStatsImpl;

        $z0 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean isHeldByCurrentThread()>();

        if $z0 == 0 goto label1;

        $r0 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresSelfOwned>;

        virtualinvoke $r0.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        $r1 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        $r2 = interfaceinvoke $r1.<berkeley.com.sleepycat.je.latch.LatchContext: berkeley.com.sleepycat.je.dbi.EnvironmentImpl getEnvImplForFatalException()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch already held: ");

        $r5 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: java.lang.String debugString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <berkeley.com.sleepycat.je.EnvironmentFailureException: berkeley.com.sleepycat.je.EnvironmentFailureException unexpectedState(berkeley.com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>($r2, $r7);

        throw $r8;

     label1:
        $z1 = virtualinvoke this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean tryLock()>();

        if $z1 != 0 goto label2;

        $r9 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresNoWaitUnsuccessful>;

        virtualinvoke $r9.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        return 0;

     label2:
        $r10 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.utilint.IntStat nAcquiresNoWaitSuccessful>;

        virtualinvoke $r10.<berkeley.com.sleepycat.je.utilint.IntStat: void increment()>();

        $z2 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean TRACK_LATCHES>;

        if $z2 == 0 goto label3;

        $r11 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        staticinvoke <berkeley.com.sleepycat.je.latch.LatchSupport: void trackAcquire(berkeley.com.sleepycat.je.latch.Latch,berkeley.com.sleepycat.je.latch.LatchContext)>(this, $r11);

     label3:
        $z3 = <berkeley.com.sleepycat.je.latch.LatchSupport: boolean CAPTURE_OWNER>;

        if $z3 == 0 goto label4;

        $r12 = new berkeley.com.sleepycat.je.latch.OwnerInfo;

        $r13 = this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.LatchContext context>;

        specialinvoke $r12.<berkeley.com.sleepycat.je.latch.OwnerInfo: void <init>(berkeley.com.sleepycat.je.latch.LatchContext)>($r13);

        this.<berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: berkeley.com.sleepycat.je.latch.OwnerInfo lastOwnerInfo> = $r12;

     label4:
        $z4 = <berkeley.com.sleepycat.je.latch.LatchWithStatsImpl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label5;

        $z5 = staticinvoke <berkeley.com.sleepycat.je.dbi.EnvironmentImpl: boolean maybeForceYield()>();

        if $z5 != 0 goto label5;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label5:
        return 1;
    }


