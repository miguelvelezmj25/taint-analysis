    public short getType(java.lang.String)
    {
        kanzi.io.ByteFunctionFactory l0;
        java.lang.String l1, l8, $r4, $r9;
        java.lang.String[] l2, l5;
        int l6, $i0, $i2, $i4, $i5, l3#37, l4#39, l7#44, $i6;
        short l9, $s1, $s3, $s7;
        java.lang.IllegalArgumentException $r0, $r5;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r8;

        l0 := @this: kanzi.io.ByteFunctionFactory;

        l1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke l1.<java.lang.String: int indexOf(int)>(43);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 >= 0 goto label1;

        $s1 = specialinvoke l0.<kanzi.io.ByteFunctionFactory: short getTypeToken(java.lang.String)>(l1);

        $i2 = $s1 << 12;

        $s3 = (short) $i2;

        return $s3;

     label1:
        l2 = virtualinvoke l1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\+");

        $i4 = lengthof l2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 != 0 goto label2;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown transform type: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $i5 = lengthof l2;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 <= 4 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only 4 transforms allowed: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        l3#37 = 0;

        l4#39 = 12;

        l5 = l2;

        l6 = lengthof l5;

        l7#44 = 0;

     label4:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l7#44);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l6);

        if l7#44 >= l6 goto label6;

        l8 = l5[l7#44];

        l9 = specialinvoke l0.<kanzi.io.ByteFunctionFactory: short getTypeToken(java.lang.String)>(l8);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l9);

        if l9 == 0 goto label5;

        $i6 = l9 << l4#39;

        l3#37 = l3#37 | $i6;

        l4#39 = l4#39 + -4;

     label5:
        l7#44 = l7#44 + 1;

        goto label4;

     label6:
        $s7 = (short) l3#37;

        return $s7;
    }

    public java.lang.String getName(short)
    {
        kanzi.io.ByteFunctionFactory l0;
        short l1, l4, $s2;
        java.lang.StringBuilder l2, $r0;
        java.lang.String l5, $r3, $r5;
        int l3#4, $i0, $i1, $i3, $i4;

        l0 := @this: kanzi.io.ByteFunctionFactory;

        l1 := @parameter0: short;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        l2 = $r0;

        l3#4 = 0;

     label1:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#4);

        if l3#4 >= 4 goto label5;

        $i0 = 4 * l3#4;

        $i1 = 12 - $i0;

        l4 = l1 >>> $i1;

        $s2 = l4 & 15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2);

        if $s2 != 0 goto label2;

        goto label4;

     label2:
        l5 = staticinvoke <kanzi.io.ByteFunctionFactory: java.lang.String getNameToken(int)>(l4);

        $i3 = virtualinvoke l2.<java.lang.StringBuilder: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 == 0 goto label3;

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label3:
        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l5);

     label4:
        l3#4 = l3#4 + 1;

        goto label1;

     label5:
        $i4 = virtualinvoke l2.<java.lang.StringBuilder: int length()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 != 0 goto label6;

        $r3 = staticinvoke <kanzi.io.ByteFunctionFactory: java.lang.String getNameToken(int)>(0);

        virtualinvoke l2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label6:
        $r5 = virtualinvoke l2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String getNameToken(int)
    {
        int l0, $i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        l0 := @parameter0: int;

        $i0 = l0 & 15;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        tableswitch($i0)
        {
            case 0: goto label11;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label01;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label06;
            case 7: goto label05;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            default: goto label12;
        };

     label01:
        return "LZ4";

     label02:
        return "BWT";

     label03:
        return "BWTS";

     label04:
        return "SNAPPY";

     label05:
        return "MTFT";

     label06:
        return "ZRLT";

     label07:
        return "RLT";

     label08:
        return "RANK";

     label09:
        return "TIMESTAMP";

     label10:
        return "TEXT";

     label11:
        return "NONE";

     label12:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown transform type: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private short getTypeToken(java.lang.String)
    {
        kanzi.io.ByteFunctionFactory l0;
        java.lang.String l2, l1#1, l1#4, $r4;
        byte l3#7;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        l0 := @this: kanzi.io.ByteFunctionFactory;

        l1#1 := @parameter0: java.lang.String;

        l1#4 = virtualinvoke l1#1.<java.lang.String: java.lang.String toUpperCase()>();

        l2 = l1#4;

        l3#7 = -1;

        $i0 = virtualinvoke l2.<java.lang.String: int hashCode()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        lookupswitch($i0)
        {
            case -1844697261: goto label03;
            case -1453246218: goto label09;
            case 66207: goto label01;
            case 75878: goto label04;
            case 81242: goto label07;
            case 2052500: goto label02;
            case 2376885: goto label05;
            case 2402104: goto label11;
            case 2507820: goto label08;
            case 2571565: goto label10;
            case 2762432: goto label06;
            default: goto label12;
        };

     label01:
        $z0 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("BWT");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label12;

        l3#7 = 0;

        goto label12;

     label02:
        $z1 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("BWTS");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 == 0 goto label12;

        l3#7 = 1;

        goto label12;

     label03:
        $z2 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("SNAPPY");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z2);

        if $z2 == 0 goto label12;

        l3#7 = 2;

        goto label12;

     label04:
        $z3 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("LZ4");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z3);

        if $z3 == 0 goto label12;

        l3#7 = 3;

        goto label12;

     label05:
        $z4 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("MTFT");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z4);

        if $z4 == 0 goto label12;

        l3#7 = 4;

        goto label12;

     label06:
        $z5 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("ZRLT");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z5);

        if $z5 == 0 goto label12;

        l3#7 = 5;

        goto label12;

     label07:
        $z6 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("RLT");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z6);

        if $z6 == 0 goto label12;

        l3#7 = 6;

        goto label12;

     label08:
        $z7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("RANK");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z7);

        if $z7 == 0 goto label12;

        l3#7 = 7;

        goto label12;

     label09:
        $z8 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("TIMESTAMP");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z8);

        if $z8 == 0 goto label12;

        l3#7 = 8;

        goto label12;

     label10:
        $z9 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("TEXT");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z9);

        if $z9 == 0 goto label12;

        l3#7 = 9;

        goto label12;

     label11:
        $z10 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z10);

        if $z10 == 0 goto label12;

        l3#7 = 10;

     label12:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(l3#7);

        tableswitch(l3#7)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label18;
            case 6: goto label19;
            case 7: goto label20;
            case 8: goto label21;
            case 9: goto label22;
            case 10: goto label23;
            default: goto label24;
        };

     label13:
        return 1;

     label14:
        return 2;

     label15:
        return 4;

     label16:
        return 3;

     label17:
        return 7;

     label18:
        return 6;

     label19:
        return 5;

     label20:
        return 8;

     label21:
        return 9;

     label22:
        return 10;

     label23:
        return 0;

     label24:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown transform type: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1#4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public void <init>()
    {
        kanzi.io.ByteFunctionFactory l0;

        l0 := @this: kanzi.io.ByteFunctionFactory;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }


