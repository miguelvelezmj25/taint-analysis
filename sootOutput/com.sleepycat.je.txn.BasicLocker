    public static com.sleepycat.je.txn.BasicLocker createBasicLocker(com.sleepycat.je.dbi.EnvironmentImpl, boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl env;
        boolean noWait;
        com.sleepycat.je.txn.BasicLocker $r0;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        noWait := @parameter1: boolean;

        $r0 = new com.sleepycat.je.txn.BasicLocker;

        specialinvoke $r0.<com.sleepycat.je.txn.BasicLocker: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,boolean)>(env, noWait);

        return $r0;
    }

    public void operationEnd(boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.BasicLocker this;
        boolean operationOK;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        operationOK := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.txn.BasicLocker: void releaseNonTxnLocks()>();

        virtualinvoke this.<com.sleepycat.je.txn.BasicLocker: void close()>();

        return;
    }

    public synchronized void releaseNonTxnLocks() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.BasicLocker this;
        java.util.Iterator l1;
        java.lang.Long nid, $r0, $r2;
        com.sleepycat.je.txn.LockManager $r1, $r6;
        long $l0, $l1;
        java.util.Set $r3, $r4, $r7;
        boolean $z1;
        java.lang.Object $r5;
        java.util.Map $r8, $r9, $r11, $r13;
        int $i2;
        com.sleepycat.je.dbi.EnvironmentImpl $r10;
        java.util.Collection $r12;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        $r0 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.txn.BasicLocker: com.sleepycat.je.txn.LockManager lockManager>;

        $r2 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<com.sleepycat.je.txn.LockManager: boolean release(long,com.sleepycat.je.txn.Locker)>($l0, this);

        this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock> = null;

     label1:
        $r3 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        if $r3 == null goto label4;

        $r4 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        l1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        nid = (java.lang.Long) $r5;

        $r6 = this.<com.sleepycat.je.txn.BasicLocker: com.sleepycat.je.txn.LockManager lockManager>;

        $l1 = virtualinvoke nid.<java.lang.Long: long longValue()>();

        virtualinvoke $r6.<com.sleepycat.je.txn.LockManager: boolean release(long,com.sleepycat.je.txn.Locker)>($l1, this);

        goto label2;

     label3:
        $r7 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        interfaceinvoke $r7.<java.util.Set: void clear()>();

     label4:
        $r8 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Map deleteInfo>;

        if $r8 == null goto label5;

        $r9 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Map deleteInfo>;

        $i2 = interfaceinvoke $r9.<java.util.Map: int size()>();

        if $i2 <= 0 goto label5;

        $r10 = this.<com.sleepycat.je.txn.BasicLocker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r11 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Map deleteInfo>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>();

        virtualinvoke $r10.<com.sleepycat.je.dbi.EnvironmentImpl: void addToCompressorQueue(java.util.Collection)>($r12);

        $r13 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Map deleteInfo>;

        interfaceinvoke $r13.<java.util.Map: void clear()>();

     label5:
        return;
    }

    protected void <init>(com.sleepycat.je.dbi.EnvironmentImpl, boolean)
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.dbi.EnvironmentImpl env;
        boolean noWait;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        noWait := @parameter1: boolean;

        specialinvoke this.<com.sleepycat.je.txn.Locker: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,boolean,boolean,long)>(env, 0, noWait, 0L);

        return;
    }

    protected long generateId(com.sleepycat.je.txn.TxnManager, long)
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.txn.TxnManager txnManager;
        long ignore;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        txnManager := @parameter0: com.sleepycat.je.txn.TxnManager;

        ignore := @parameter1: long;

        return -1L;
    }

    public static com.sleepycat.je.txn.BasicLocker createBasicLocker(com.sleepycat.je.dbi.EnvironmentImpl) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.dbi.EnvironmentImpl env;
        com.sleepycat.je.txn.BasicLocker $r0;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        $r0 = new com.sleepycat.je.txn.BasicLocker;

        specialinvoke $r0.<com.sleepycat.je.txn.BasicLocker: void <init>(com.sleepycat.je.dbi.EnvironmentImpl)>(env);

        return $r0;
    }

    protected com.sleepycat.je.txn.LockResult lockInternal(long, com.sleepycat.je.txn.LockType, boolean, boolean, com.sleepycat.je.dbi.DatabaseImpl) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.BasicLocker this, l7, l10;
        long lsn, timeout#10;
        com.sleepycat.je.txn.LockType lockType;
        boolean noWait, jumpAheadOfWaiters, useNoWait, $z0, $z1;
        com.sleepycat.je.dbi.DatabaseImpl database;
        java.lang.Throwable l8, l11, $r1, $r3;
        com.sleepycat.je.txn.LockGrantType grant;
        com.sleepycat.je.txn.LockManager $r4;
        com.sleepycat.je.txn.LockResult $r5;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        lsn := @parameter0: long;

        lockType := @parameter1: com.sleepycat.je.txn.LockType;

        noWait := @parameter2: boolean;

        jumpAheadOfWaiters := @parameter3: boolean;

        database := @parameter4: com.sleepycat.je.dbi.DatabaseImpl;

        l7 = this;

        entermonitor this;

     label01:
        virtualinvoke this.<com.sleepycat.je.txn.BasicLocker: void checkState(boolean)>(0);

        exitmonitor l7;

     label02:
        goto label06;

     label03:
        $r1 := @caughtexception;

     label04:
        l8 = $r1;

        exitmonitor l7;

     label05:
        throw l8;

     label06:
        timeout#10 = 0L;

        if noWait != 0 goto label07;

        $z0 = this.<com.sleepycat.je.txn.BasicLocker: boolean defaultNoWait>;

        if $z0 == 0 goto label08;

     label07:
        $z1 = 1;

        goto label09;

     label08:
        $z1 = 0;

     label09:
        useNoWait = $z1;

        if useNoWait != 0 goto label15;

        l10 = this;

        entermonitor this;

     label10:
        timeout#10 = virtualinvoke this.<com.sleepycat.je.txn.BasicLocker: long getLockTimeout()>();

        exitmonitor l10;

     label11:
        goto label15;

     label12:
        $r3 := @caughtexception;

     label13:
        l11 = $r3;

        exitmonitor l10;

     label14:
        throw l11;

     label15:
        $r4 = this.<com.sleepycat.je.txn.BasicLocker: com.sleepycat.je.txn.LockManager lockManager>;

        grant = virtualinvoke $r4.<com.sleepycat.je.txn.LockManager: com.sleepycat.je.txn.LockGrantType lock(long,com.sleepycat.je.txn.Locker,com.sleepycat.je.txn.LockType,long,boolean,boolean,com.sleepycat.je.dbi.DatabaseImpl)>(lsn, this, lockType, timeout#10, useNoWait, jumpAheadOfWaiters, database);

        $r5 = new com.sleepycat.je.txn.LockResult;

        specialinvoke $r5.<com.sleepycat.je.txn.LockResult: void <init>(com.sleepycat.je.txn.LockGrantType,com.sleepycat.je.txn.WriteLockInfo)>(grant, null);

        return $r5;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    protected void checkState(boolean)
    {
        com.sleepycat.je.txn.BasicLocker this;
        boolean ignoreCalledByAbort;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        ignoreCalledByAbort := @parameter0: boolean;

        return;
    }

    protected void <init>(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.dbi.EnvironmentImpl env;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        env := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        specialinvoke this.<com.sleepycat.je.txn.Locker: void <init>(com.sleepycat.je.dbi.EnvironmentImpl,boolean,boolean,long)>(env, 0, 0, 0L);

        return;
    }

    public boolean isTransactional()
    {
        com.sleepycat.je.txn.BasicLocker this;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        return 0;
    }

    public void registerCursor(com.sleepycat.je.dbi.CursorImpl)
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.dbi.CursorImpl cursor;
        boolean $z0;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        cursor := @parameter0: com.sleepycat.je.dbi.CursorImpl;

        $z0 = virtualinvoke cursor.<com.sleepycat.je.dbi.CursorImpl: boolean isInternalDbCursor()>();

        this.<com.sleepycat.je.txn.BasicLocker: boolean lockingRequired> = $z0;

        return;
    }

    public boolean isSerializableIsolation()
    {
        com.sleepycat.je.txn.BasicLocker this;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        return 0;
    }

    public boolean lockingRequired()
    {
        com.sleepycat.je.txn.BasicLocker this;
        boolean $z0;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        $z0 = this.<com.sleepycat.je.txn.BasicLocker: boolean lockingRequired>;

        return $z0;
    }

    protected void addLock(java.lang.Long, com.sleepycat.je.txn.LockType, com.sleepycat.je.txn.LockGrantType)
    {
        com.sleepycat.je.txn.BasicLocker this;
        java.lang.Long lsn, $r0, $r1, $r4;
        com.sleepycat.je.txn.LockType type;
        com.sleepycat.je.txn.LockGrantType grantStatus;
        boolean $z0, $z1;
        java.util.Set $r2, $r3, $r5, $r7;
        java.util.HashSet $r6;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        lsn := @parameter0: java.lang.Long;

        type := @parameter1: com.sleepycat.je.txn.LockType;

        grantStatus := @parameter2: com.sleepycat.je.txn.LockGrantType;

        $r0 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        $z0 = virtualinvoke $r1.<java.lang.Long: boolean equals(java.lang.Object)>(lsn);

        if $z0 != 0 goto label2;

     label1:
        $r2 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        if $r2 == null goto label3;

        $r3 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(lsn);

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        $r4 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        if $r4 != null goto label4;

        this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock> = lsn;

        goto label6;

     label4:
        $r5 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        if $r5 != null goto label5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet> = $r6;

     label5:
        $r7 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(lsn);

     label6:
        return;
    }

    public com.sleepycat.je.txn.Locker newNonTxnLocker() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.EnvironmentFailureException $r0;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        $r0 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState()>();

        throw $r0;
    }

    public com.sleepycat.je.txn.Txn getTxnLocker()
    {
        com.sleepycat.je.txn.BasicLocker this;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        return null;
    }

    public void preLogWithoutLock(com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.dbi.DatabaseImpl database;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        database := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        return;
    }

    void moveWriteToReadLock(long, com.sleepycat.je.txn.Lock)
    {
        com.sleepycat.je.txn.BasicLocker this;
        long lsn;
        com.sleepycat.je.txn.Lock lock;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        lsn := @parameter0: long;

        lock := @parameter1: com.sleepycat.je.txn.Lock;

        return;
    }

    void removeLock(long)
    {
        com.sleepycat.je.txn.BasicLocker this;
        long lsn, $l0;
        java.lang.Long $r0, $r1, $r4;
        byte $b1;
        java.util.Set $r2, $r3;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        lsn := @parameter0: long;

        $r0 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        if $r0 == null goto label1;

        $r1 = this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock>;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp lsn;

        if $b1 != 0 goto label1;

        this.<com.sleepycat.je.txn.BasicLocker: java.lang.Long ownedLock> = null;

        goto label2;

     label1:
        $r2 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        if $r2 == null goto label2;

        $r3 = this.<com.sleepycat.je.txn.BasicLocker: java.util.Set ownedLockSet>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(lsn);

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r4);

     label2:
        return;
    }

    public void nonTxnOperationEnd() throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.BasicLocker this;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        virtualinvoke this.<com.sleepycat.je.txn.BasicLocker: void operationEnd(boolean)>(1);

        return;
    }

    public void unRegisterCursor(com.sleepycat.je.dbi.CursorImpl)
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.dbi.CursorImpl cursor;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        cursor := @parameter0: com.sleepycat.je.dbi.CursorImpl;

        return;
    }

    public void markDeleteAtTxnEnd(com.sleepycat.je.dbi.DatabaseImpl, boolean) throws com.sleepycat.je.DatabaseException
    {
        com.sleepycat.je.txn.BasicLocker this;
        com.sleepycat.je.dbi.DatabaseImpl db;
        boolean deleteAtCommit;
        com.sleepycat.je.dbi.EnvironmentImpl $r0;
        com.sleepycat.je.dbi.DbTree $r1;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        db := @parameter0: com.sleepycat.je.dbi.DatabaseImpl;

        deleteAtCommit := @parameter1: boolean;

        if deleteAtCommit == 0 goto label1;

        virtualinvoke db.<com.sleepycat.je.dbi.DatabaseImpl: void startAndFinishDelete()>();

        goto label2;

     label1:
        $r0 = this.<com.sleepycat.je.txn.BasicLocker: com.sleepycat.je.dbi.EnvironmentImpl envImpl>;

        $r1 = virtualinvoke $r0.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.dbi.DbTree getDbTree()>();

        virtualinvoke $r1.<com.sleepycat.je.dbi.DbTree: void releaseDb(com.sleepycat.je.dbi.DatabaseImpl)>(db);

     label2:
        return;
    }

    public boolean isReadCommittedIsolation()
    {
        com.sleepycat.je.txn.BasicLocker this;

        this := @this: com.sleepycat.je.txn.BasicLocker;

        return 0;
    }


