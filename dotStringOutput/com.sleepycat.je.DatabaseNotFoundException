digraph <init> {
"this := @this: com.sleepycat.je.DatabaseNotFoundException {1135036030}" -> "message := @parameter0: java.lang.String {258856960}";
"message := @parameter0: java.lang.String {258856960}" -> "specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(com.sleepycat.je.txn.Locker,boolean,java.lang.String,java.lang.Throwable)>(null, 0, message, null) {1800084057}";
"specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(com.sleepycat.je.txn.Locker,boolean,java.lang.String,java.lang.Throwable)>(null, 0, message, null) {1800084057}" -> "return {2103355483}";
}

digraph wrapSelf {
"this := @this: com.sleepycat.je.DatabaseNotFoundException {1380643016}" -> "msg := @parameter0: java.lang.String {849351099}";
"msg := @parameter0: java.lang.String {849351099}" -> "$r0 = new com.sleepycat.je.DatabaseNotFoundException {385992387}";
"$r0 = new com.sleepycat.je.DatabaseNotFoundException {385992387}" -> "specialinvoke $r0.<com.sleepycat.je.DatabaseNotFoundException: void <init>(java.lang.String,com.sleepycat.je.DatabaseNotFoundException)>(msg, this) {371453219}";
"specialinvoke $r0.<com.sleepycat.je.DatabaseNotFoundException: void <init>(java.lang.String,com.sleepycat.je.DatabaseNotFoundException)>(msg, this) {371453219}" -> "return $r0 {361409153}";
}

digraph <init> {
"this := @this: com.sleepycat.je.DatabaseNotFoundException {1389775278}" -> "message := @parameter0: java.lang.String {1742042090}";
"message := @parameter0: java.lang.String {1742042090}" -> "cause := @parameter1: com.sleepycat.je.DatabaseNotFoundException {1662421632}";
"cause := @parameter1: com.sleepycat.je.DatabaseNotFoundException {1662421632}" -> "specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(java.lang.String,com.sleepycat.je.OperationFailureException)>(message, cause) {1735465432}";
"specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(java.lang.String,com.sleepycat.je.OperationFailureException)>(message, cause) {1735465432}" -> "return {720466111}";
}


