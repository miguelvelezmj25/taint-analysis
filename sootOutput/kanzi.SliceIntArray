    public static boolean isValid(kanzi.SliceIntArray)
    {
        kanzi.SliceIntArray sa;
        int[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        sa := @parameter0: kanzi.SliceIntArray;

        if sa != null goto label1;

        return 0;

     label1:
        $r0 = sa.<kanzi.SliceIntArray: int[] array>;

        if $r0 != null goto label2;

        return 0;

     label2:
        $i0 = sa.<kanzi.SliceIntArray: int index>;

        if $i0 >= 0 goto label3;

        return 0;

     label3:
        $i1 = sa.<kanzi.SliceIntArray: int length>;

        if $i1 >= 0 goto label4;

        return 0;

     label4:
        $i2 = sa.<kanzi.SliceIntArray: int index>;

        $i3 = sa.<kanzi.SliceIntArray: int length>;

        $i4 = $i2 + $i3;

        $r1 = sa.<kanzi.SliceIntArray: int[] array>;

        $i5 = lengthof $r1;

        if $i4 > $i5 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public void <init>(int[], int)
    {
        kanzi.SliceIntArray this;
        int[] array;
        int idx, $i0;
        java.lang.NullPointerException $r0, $r1;

        this := @this: kanzi.SliceIntArray;

        array := @parameter0: int[];

        idx := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if array != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("The array cannot be null");

        throw $r0;

     label1:
        if idx >= 0 goto label2;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("The index cannot be negative");

        throw $r1;

     label2:
        this.<kanzi.SliceIntArray: int[] array> = array;

        $i0 = lengthof array;

        this.<kanzi.SliceIntArray: int length> = $i0;

        this.<kanzi.SliceIntArray: int index> = idx;

        return;
    }

    public void <init>(int[], int, int)
    {
        kanzi.SliceIntArray this;
        int[] array;
        int length, idx;
        java.lang.NullPointerException $r0, $r2;
        java.lang.IllegalArgumentException $r1;

        this := @this: kanzi.SliceIntArray;

        array := @parameter0: int[];

        length := @parameter1: int;

        idx := @parameter2: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if array != null goto label1;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("The array cannot be null");

        throw $r0;

     label1:
        if length >= 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The length cannot be negative");

        throw $r1;

     label2:
        if idx >= 0 goto label3;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The index cannot be negative");

        throw $r2;

     label3:
        this.<kanzi.SliceIntArray: int[] array> = array;

        this.<kanzi.SliceIntArray: int length> = length;

        this.<kanzi.SliceIntArray: int index> = idx;

        return;
    }


