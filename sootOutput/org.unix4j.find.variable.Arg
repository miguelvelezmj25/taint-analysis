    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(0);

        <org.unix4j.find.variable.Arg: java.lang.String $0> = $r0;

        $r1 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(1);

        <org.unix4j.find.variable.Arg: java.lang.String $1> = $r1;

        $r2 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(2);

        <org.unix4j.find.variable.Arg: java.lang.String $2> = $r2;

        $r3 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(3);

        <org.unix4j.find.variable.Arg: java.lang.String $3> = $r3;

        $r4 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(4);

        <org.unix4j.find.variable.Arg: java.lang.String $4> = $r4;

        $r5 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(5);

        <org.unix4j.find.variable.Arg: java.lang.String $5> = $r5;

        $r6 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(6);

        <org.unix4j.find.variable.Arg: java.lang.String $6> = $r6;

        $r7 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(7);

        <org.unix4j.find.variable.Arg: java.lang.String $7> = $r7;

        $r8 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(8);

        <org.unix4j.find.variable.Arg: java.lang.String $8> = $r8;

        $r9 = staticinvoke <org.unix4j.find.variable.Arg: java.lang.String arg(int)>(9);

        <org.unix4j.find.variable.Arg: java.lang.String $9> = $r9;

        return;
    }

    public static boolean isVariable(java.lang.String)
    {
        java.lang.String expression;
        boolean $z0;

        expression := @parameter0: java.lang.String;

        $z0 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        return $z0;
    }

    public static final java.lang.String arg(int)
    {
        int i;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }


