    public static com.sleepycat.je.txn.UndoReader create(com.sleepycat.je.dbi.EnvironmentImpl, long, java.util.Map)
    {
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        long undoLsn, lsn;
        java.util.Map undoDatabases;
        com.sleepycat.je.log.WholeEntry wholeEntry;
        int logEntrySize;
        com.sleepycat.je.log.entry.LNLogEntry logEntry;
        com.sleepycat.je.dbi.DatabaseId dbId;
        com.sleepycat.je.dbi.DatabaseImpl db;
        com.sleepycat.je.tree.LN ln;
        com.sleepycat.je.log.LogManager $r0;
        com.sleepycat.je.log.LogEntryHeader $r1;
        com.sleepycat.je.log.entry.LogEntry $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        com.sleepycat.je.EnvironmentFailureException $r8;
        com.sleepycat.je.txn.UndoReader $r9;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        undoLsn := @parameter1: long;

        undoDatabases := @parameter2: java.util.Map;

        $r0 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: com.sleepycat.je.log.LogManager getLogManager()>();

        wholeEntry = virtualinvoke $r0.<com.sleepycat.je.log.LogManager: com.sleepycat.je.log.WholeEntry getWholeLogEntryHandleFileNotFound(long)>(undoLsn);

        $r1 = virtualinvoke wholeEntry.<com.sleepycat.je.log.WholeEntry: com.sleepycat.je.log.LogEntryHeader getHeader()>();

        logEntrySize = virtualinvoke $r1.<com.sleepycat.je.log.LogEntryHeader: int getEntrySize()>();

        $r2 = virtualinvoke wholeEntry.<com.sleepycat.je.log.WholeEntry: com.sleepycat.je.log.entry.LogEntry getEntry()>();

        logEntry = (com.sleepycat.je.log.entry.LNLogEntry) $r2;

        dbId = virtualinvoke logEntry.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        $r3 = interfaceinvoke undoDatabases.<java.util.Map: java.lang.Object get(java.lang.Object)>(dbId);

        db = (com.sleepycat.je.dbi.DatabaseImpl) $r3;

        if db != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB not found during non-recovery undo/rollback, id=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dbId);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <com.sleepycat.je.EnvironmentFailureException: com.sleepycat.je.EnvironmentFailureException unexpectedState(com.sleepycat.je.dbi.EnvironmentImpl,java.lang.String)>(envImpl, $r7);

        throw $r8;

     label1:
        virtualinvoke logEntry.<com.sleepycat.je.log.entry.LNLogEntry: void postFetchInit(com.sleepycat.je.dbi.DatabaseImpl)>(db);

        ln = virtualinvoke logEntry.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.tree.LN getLN()>();

        lsn = undoLsn;

        virtualinvoke ln.<com.sleepycat.je.tree.LN: void postFetchInit(com.sleepycat.je.dbi.DatabaseImpl,long)>(db, undoLsn);

        $r9 = new com.sleepycat.je.txn.UndoReader;

        specialinvoke $r9.<com.sleepycat.je.txn.UndoReader: void <init>(com.sleepycat.je.log.entry.LNLogEntry,com.sleepycat.je.tree.LN,long,int,com.sleepycat.je.dbi.DatabaseImpl)>(logEntry, ln, lsn, logEntrySize, db);

        return $r9;
    }

    private void <init>(com.sleepycat.je.log.entry.LNLogEntry, com.sleepycat.je.tree.LN, long, int, com.sleepycat.je.dbi.DatabaseImpl)
    {
        com.sleepycat.je.txn.UndoReader this;
        com.sleepycat.je.log.entry.LNLogEntry logEntry;
        com.sleepycat.je.tree.LN ln;
        long lsn;
        int logEntrySize;
        com.sleepycat.je.dbi.DatabaseImpl db;

        this := @this: com.sleepycat.je.txn.UndoReader;

        logEntry := @parameter0: com.sleepycat.je.log.entry.LNLogEntry;

        ln := @parameter1: com.sleepycat.je.tree.LN;

        lsn := @parameter2: long;

        logEntrySize := @parameter3: int;

        db := @parameter4: com.sleepycat.je.dbi.DatabaseImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.txn.UndoReader: com.sleepycat.je.log.entry.LNLogEntry logEntry> = logEntry;

        this.<com.sleepycat.je.txn.UndoReader: com.sleepycat.je.tree.LN ln> = ln;

        this.<com.sleepycat.je.txn.UndoReader: long lsn> = lsn;

        this.<com.sleepycat.je.txn.UndoReader: int logEntrySize> = logEntrySize;

        this.<com.sleepycat.je.txn.UndoReader: com.sleepycat.je.dbi.DatabaseImpl db> = db;

        return;
    }

    public static com.sleepycat.je.txn.UndoReader createForRecovery(com.sleepycat.je.log.LNFileReader, com.sleepycat.je.dbi.DbTree)
    {
        com.sleepycat.je.log.LNFileReader reader;
        com.sleepycat.je.dbi.DbTree dbMapTree;
        com.sleepycat.je.log.entry.LNLogEntry logEntry;
        com.sleepycat.je.dbi.DatabaseId dbId;
        com.sleepycat.je.dbi.DatabaseImpl db;
        com.sleepycat.je.tree.LN ln;
        long lsn;
        int logEntrySize;
        com.sleepycat.je.txn.UndoReader $r0;

        reader := @parameter0: com.sleepycat.je.log.LNFileReader;

        dbMapTree := @parameter1: com.sleepycat.je.dbi.DbTree;

        logEntry = virtualinvoke reader.<com.sleepycat.je.log.LNFileReader: com.sleepycat.je.log.entry.LNLogEntry getLNLogEntry()>();

        dbId = virtualinvoke logEntry.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.dbi.DatabaseId getDbId()>();

        db = virtualinvoke dbMapTree.<com.sleepycat.je.dbi.DbTree: com.sleepycat.je.dbi.DatabaseImpl getDb(com.sleepycat.je.dbi.DatabaseId)>(dbId);

        if db != null goto label1;

        return null;

     label1:
        virtualinvoke logEntry.<com.sleepycat.je.log.entry.LNLogEntry: void postFetchInit(com.sleepycat.je.dbi.DatabaseImpl)>(db);

        ln = virtualinvoke logEntry.<com.sleepycat.je.log.entry.LNLogEntry: com.sleepycat.je.tree.LN getLN()>();

        lsn = virtualinvoke reader.<com.sleepycat.je.log.LNFileReader: long getLastLsn()>();

        virtualinvoke ln.<com.sleepycat.je.tree.LN: void postFetchInit(com.sleepycat.je.dbi.DatabaseImpl,long)>(db, lsn);

        logEntrySize = virtualinvoke reader.<com.sleepycat.je.log.LNFileReader: int getLastEntrySize()>();

        $r0 = new com.sleepycat.je.txn.UndoReader;

        specialinvoke $r0.<com.sleepycat.je.txn.UndoReader: void <init>(com.sleepycat.je.log.entry.LNLogEntry,com.sleepycat.je.tree.LN,long,int,com.sleepycat.je.dbi.DatabaseImpl)>(logEntry, ln, lsn, logEntrySize, db);

        return $r0;
    }


