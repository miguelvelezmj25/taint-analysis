    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        long start, end, $l0;
        boolean isTypeDirectory, isTypeFile, isTypeSymlink, isTypeOther, isRegex, isIgnoreCase, isTimeNewer, isTimeOlder, isTimeCreate, isTimeAccess, isTimeModified, isPrint0, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.unix4j.find.unix.find.FindArguments findArgs, $r24;
        java.util.Date date;
        org.unix4j.find.unix.find.FindCommand find, $r26;
        org.unix4j.find.context.DefaultExecutionContext executionContext, $r27;
        org.unix4j.find.io.StdOutput out, $r28;
        org.unix4j.find.processor.LineProcessor exec;
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, name#84;
        java.lang.Boolean $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        java.util.GregorianCalendar $r25;
        java.io.PrintStream $r29;
        double $d0, $d1;

        args := @parameter0: java.lang.String[];

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void init()>();

        start = staticinvoke <java.lang.System: long nanoTime()>();

        $r0 = args[0];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        isTypeDirectory = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeDirectory(boolean)>($z0);

        $r2 = args[1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        isTypeFile = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeFile(boolean)>($z1);

        $r4 = args[2];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r4);

        $z2 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        isTypeSymlink = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeSymlink(boolean)>($z2);

        $r6 = args[3];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z3 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        isTypeOther = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTypeOther(boolean)>($z3);

        $r8 = args[4];

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

        $z4 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        isRegex = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsRegex(boolean)>($z4);

        $r10 = args[5];

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r10);

        $z5 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        isIgnoreCase = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsIgnoreCase(boolean)>($z5);

        $r12 = args[6];

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        $z6 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        isTimeNewer = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeNewer(boolean)>($z6);

        $r14 = args[7];

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        $z7 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        isTimeOlder = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeOlder(boolean)>($z7);

        $r16 = args[8];

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r16);

        $z8 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        isTimeCreate = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeCreate(boolean)>($z8);

        $r18 = args[9];

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r18);

        $z9 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        isTimeAccess = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeAccess(boolean)>($z9);

        $r20 = args[10];

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r20);

        $z10 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        isTimeModified = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsTimeModified(boolean)>($z10);

        $r22 = args[11];

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r22);

        $z11 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        isPrint0 = staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Source: boolean getIsPrint0(boolean)>($z11);

        $r24 = new org.unix4j.find.unix.find.FindArguments;

        specialinvoke $r24.<org.unix4j.find.unix.find.FindArguments: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)>(isTypeDirectory, isTypeFile, isTypeSymlink, isTypeOther, isRegex, isIgnoreCase, isTimeNewer, isTimeOlder, isTimeCreate, isTimeAccess, isTimeModified, isPrint0);

        findArgs = $r24;

        virtualinvoke findArgs.<org.unix4j.find.unix.find.FindArguments: void setPath(java.lang.String)>("/DATA/energy/sac_results/nbody100c");

        virtualinvoke findArgs.<org.unix4j.find.unix.find.FindArguments: void setSize(long)>(25000L);

        name#84 = "*E*";

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isRegex);

        if isRegex == 0 goto label1;

        name#84 = ".*E.*";

     label1:
        virtualinvoke findArgs.<org.unix4j.find.unix.find.FindArguments: void setName(java.lang.String)>(name#84);

        $r25 = new java.util.GregorianCalendar;

        specialinvoke $r25.<java.util.GregorianCalendar: void <init>(int,int,int)>(2017, 5, 11);

        date = virtualinvoke $r25.<java.util.GregorianCalendar: java.util.Date getTime()>();

        virtualinvoke findArgs.<org.unix4j.find.unix.find.FindArguments: void setTime(java.util.Date)>(date);

        $r26 = new org.unix4j.find.unix.find.FindCommand;

        specialinvoke $r26.<org.unix4j.find.unix.find.FindCommand: void <init>(org.unix4j.find.unix.find.FindArguments)>(findArgs);

        find = $r26;

        $r27 = new org.unix4j.find.context.DefaultExecutionContext;

        specialinvoke $r27.<org.unix4j.find.context.DefaultExecutionContext: void <init>()>();

        executionContext = $r27;

        $r28 = new org.unix4j.find.io.StdOutput;

        specialinvoke $r28.<org.unix4j.find.io.StdOutput: void <init>()>();

        out = $r28;

        exec = virtualinvoke find.<org.unix4j.find.unix.find.FindCommand: org.unix4j.find.processor.LineProcessor execute(org.unix4j.find.context.ExecutionContext,org.unix4j.find.processor.LineProcessor)>(executionContext, out);

        interfaceinvoke exec.<org.unix4j.find.processor.LineProcessor: void finish()>();

        end = staticinvoke <java.lang.System: long nanoTime()>();

        staticinvoke <org.unix4j.find.testing.Main: void main(java.lang.String[])>(args);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $l0 = end - start;

        $d0 = (double) $l0;

        $d1 = $d0 / 1.0E9;

        virtualinvoke $r29.<java.io.PrintStream: void println(double)>($d1);

        return;
    }

    public void <init>()
    {
        org.unix4j.find.Main this;

        this := @this: org.unix4j.find.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }


