    void <init>()
    {
        org.tukaani.xz.lzma.Optimum this;
        org.tukaani.xz.lzma.State $r0;
        int[] $r1;

        this := @this: org.tukaani.xz.lzma.Optimum;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new org.tukaani.xz.lzma.State;

        specialinvoke $r0.<org.tukaani.xz.lzma.State: void <init>()>();

        this.<org.tukaani.xz.lzma.Optimum: org.tukaani.xz.lzma.State state> = $r0;

        $r1 = newarray (int)[4];

        this.<org.tukaani.xz.lzma.Optimum: int[] reps> = $r1;

        return;
    }

    void set3(int, int, int, int, int)
    {
        org.tukaani.xz.lzma.Optimum this;
        int newPrice, optCur, back2, len2, back, $i0, $i1;

        this := @this: org.tukaani.xz.lzma.Optimum;

        newPrice := @parameter0: int;

        optCur := @parameter1: int;

        back2 := @parameter2: int;

        len2 := @parameter3: int;

        back := @parameter4: int;

        this.<org.tukaani.xz.lzma.Optimum: int price> = newPrice;

        $i0 = optCur + len2;

        $i1 = $i0 + 1;

        this.<org.tukaani.xz.lzma.Optimum: int optPrev> = $i1;

        this.<org.tukaani.xz.lzma.Optimum: int backPrev> = back;

        this.<org.tukaani.xz.lzma.Optimum: boolean prev1IsLiteral> = 1;

        this.<org.tukaani.xz.lzma.Optimum: boolean hasPrev2> = 1;

        this.<org.tukaani.xz.lzma.Optimum: int optPrev2> = optCur;

        this.<org.tukaani.xz.lzma.Optimum: int backPrev2> = back2;

        return;
    }

    void reset()
    {
        org.tukaani.xz.lzma.Optimum this;

        this := @this: org.tukaani.xz.lzma.Optimum;

        this.<org.tukaani.xz.lzma.Optimum: int price> = 1073741824;

        return;
    }

    void set1(int, int, int)
    {
        org.tukaani.xz.lzma.Optimum this;
        int newPrice, optCur, back;

        this := @this: org.tukaani.xz.lzma.Optimum;

        newPrice := @parameter0: int;

        optCur := @parameter1: int;

        back := @parameter2: int;

        this.<org.tukaani.xz.lzma.Optimum: int price> = newPrice;

        this.<org.tukaani.xz.lzma.Optimum: int optPrev> = optCur;

        this.<org.tukaani.xz.lzma.Optimum: int backPrev> = back;

        this.<org.tukaani.xz.lzma.Optimum: boolean prev1IsLiteral> = 0;

        return;
    }

    void set2(int, int, int)
    {
        org.tukaani.xz.lzma.Optimum this;
        int newPrice, optCur, back, $i0;

        this := @this: org.tukaani.xz.lzma.Optimum;

        newPrice := @parameter0: int;

        optCur := @parameter1: int;

        back := @parameter2: int;

        this.<org.tukaani.xz.lzma.Optimum: int price> = newPrice;

        $i0 = optCur + 1;

        this.<org.tukaani.xz.lzma.Optimum: int optPrev> = $i0;

        this.<org.tukaani.xz.lzma.Optimum: int backPrev> = back;

        this.<org.tukaani.xz.lzma.Optimum: boolean prev1IsLiteral> = 1;

        this.<org.tukaani.xz.lzma.Optimum: boolean hasPrev2> = 0;

        return;
    }


