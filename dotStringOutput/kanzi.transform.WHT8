digraph forward {
"this := @this: kanzi.transform.WHT8 {1960847825}" -> "src := @parameter0: kanzi.SliceIntArray {739078135}";
"src := @parameter0: kanzi.SliceIntArray {739078135}" -> "dst := @parameter1: kanzi.SliceIntArray {1427729460}";
"dst := @parameter1: kanzi.SliceIntArray {1427729460}" -> "$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {1239433347}";
"$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {1239433347}" -> "if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1468464455}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1468464455}" -> "return 0 {1036877638}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1468464455}" -> "$i0 = src.<kanzi.SliceIntArray: int length> {376333162}";
"$i0 = src.<kanzi.SliceIntArray: int length> {376333162}" -> "if $i0 == 64 goto (branch) {849442858}";
"if $i0 == 64 goto (branch) {849442858}" -> "return 0 {1310879019}";
"if $i0 == 64 goto (branch) {849442858}" -> "if src == dst goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1841197406}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1841197406}" -> "$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {1892938108}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1841197406}" -> "$r1 = this.<kanzi.transform.WHT8: int[] data> {1221119377}";
"$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {1892938108}" -> "if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {1128798370}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {1128798370}" -> "return 0 {766327781}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {1128798370}" -> "$i1 = dst.<kanzi.SliceIntArray: int index> {1091893956}";
"$i1 = dst.<kanzi.SliceIntArray: int index> {1091893956}" -> "$i2 = $i1 + 64 {1302388003}";
"$i2 = $i1 + 64 {1302388003}" -> "$r0 = dst.<kanzi.SliceIntArray: int[] array> {985066425}";
"$r0 = dst.<kanzi.SliceIntArray: int[] array> {985066425}" -> "$i3 = lengthof $r0 {116621325}";
"$i3 = lengthof $r0 {116621325}" -> "if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1307642933}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1307642933}" -> "return 0 {193977913}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1307642933}" -> "$r1 = this.<kanzi.transform.WHT8: int[] data> {1221119377}";
"$r1 = this.<kanzi.transform.WHT8: int[] data> {1221119377}" -> "$i4 = this.<kanzi.transform.WHT8: int fScale> {761193014}";
"$i4 = this.<kanzi.transform.WHT8: int fScale> {761193014}" -> "$z2 = staticinvoke <kanzi.transform.WHT8: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {603199049}";
"$z2 = staticinvoke <kanzi.transform.WHT8: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {603199049}" -> "return $z2 {620256392}";
}

digraph compute {
"src := @parameter0: kanzi.SliceIntArray {1939549103}" -> "dst := @parameter1: kanzi.SliceIntArray {1182942328}";
"dst := @parameter1: kanzi.SliceIntArray {1182942328}" -> "buffer := @parameter2: int[] {2037033211}";
"buffer := @parameter2: int[] {2037033211}" -> "shift := @parameter3: int {1963896258}";
"shift := @parameter3: int {1963896258}" -> "input = src.<kanzi.SliceIntArray: int[] array> {1561631652}";
"input = src.<kanzi.SliceIntArray: int[] array> {1561631652}" -> "output = dst.<kanzi.SliceIntArray: int[] array> {527539487}";
"output = dst.<kanzi.SliceIntArray: int[] array> {527539487}" -> "srcIdx = src.<kanzi.SliceIntArray: int index> {48190408}";
"srcIdx = src.<kanzi.SliceIntArray: int index> {48190408}" -> "dstIdx = dst.<kanzi.SliceIntArray: int index> {77943473}";
"dstIdx = dst.<kanzi.SliceIntArray: int index> {77943473}" -> "dataptr#10 = 0 {1263511368}";
"dataptr#10 = 0 {1263511368}" -> "i#12 = 0 {312569467}";
"i#12 = 0 {312569467}" -> "if i#12 >= 64 goto dataptr#183 = 0 {1194385511}";
"if i#12 >= 64 goto dataptr#183 = 0 {1194385511}" -> "si = srcIdx + i#12 {1359294641}";
"if i#12 >= 64 goto dataptr#183 = 0 {1194385511}" -> "dataptr#183 = 0 {1109724317}";
"si = srcIdx + i#12 {1359294641}" -> "x0#21 = input[si] {1320554297}";
"x0#21 = input[si] {1320554297}" -> "$i0 = si + 1 {655623348}";
"$i0 = si + 1 {655623348}" -> "x1#27 = input[$i0] {1352836185}";
"x1#27 = input[$i0] {1352836185}" -> "$i1 = si + 2 {1972314248}";
"$i1 = si + 2 {1972314248}" -> "x2#33 = input[$i1] {780234350}";
"x2#33 = input[$i1] {780234350}" -> "$i2 = si + 3 {891341699}";
"$i2 = si + 3 {891341699}" -> "x3#39 = input[$i2] {600942476}";
"x3#39 = input[$i2] {600942476}" -> "$i3 = si + 4 {27652275}";
"$i3 = si + 4 {27652275}" -> "x4#45 = input[$i3] {1223098695}";
"x4#45 = input[$i3] {1223098695}" -> "$i4 = si + 5 {1350861127}";
"$i4 = si + 5 {1350861127}" -> "x5#51 = input[$i4] {484576277}";
"x5#51 = input[$i4] {484576277}" -> "$i5 = si + 6 {117936780}";
"$i5 = si + 6 {117936780}" -> "x6#57 = input[$i5] {858061099}";
"x6#57 = input[$i5] {858061099}" -> "$i6 = si + 7 {1635281997}";
"$i6 = si + 7 {1635281997}" -> "x7#63 = input[$i6] {1414173788}";
"x7#63 = input[$i6] {1414173788}" -> "a0#67 = x0#21 + x1#27 {1579034357}";
"a0#67 = x0#21 + x1#27 {1579034357}" -> "a1#71 = x2#33 + x3#39 {149455015}";
"a1#71 = x2#33 + x3#39 {149455015}" -> "a2#75 = x4#45 + x5#51 {837988631}";
"a2#75 = x4#45 + x5#51 {837988631}" -> "a3#79 = x6#57 + x7#63 {1103040588}";
"a3#79 = x6#57 + x7#63 {1103040588}" -> "a4#83 = x0#21 - x1#27 {1541186886}";
"a4#83 = x0#21 - x1#27 {1541186886}" -> "a5#87 = x2#33 - x3#39 {1748248985}";
"a5#87 = x2#33 - x3#39 {1748248985}" -> "a6#91 = x4#45 - x5#51 {711796928}";
"a6#91 = x4#45 - x5#51 {711796928}" -> "a7#95 = x6#57 - x7#63 {344029875}";
"a7#95 = x6#57 - x7#63 {344029875}" -> "b0#99 = a0#67 + a1#71 {1451598391}";
"b0#99 = a0#67 + a1#71 {1451598391}" -> "b1#103 = a2#75 + a3#79 {1246152619}";
"b1#103 = a2#75 + a3#79 {1246152619}" -> "b2#107 = a4#83 + a5#87 {1509306610}";
"b2#107 = a4#83 + a5#87 {1509306610}" -> "b3#111 = a6#91 + a7#95 {1418807844}";
"b3#111 = a6#91 + a7#95 {1418807844}" -> "b4#115 = a0#67 - a1#71 {1498340871}";
"b4#115 = a0#67 - a1#71 {1498340871}" -> "b5#119 = a2#75 - a3#79 {1534435250}";
"b5#119 = a2#75 - a3#79 {1534435250}" -> "b6#123 = a4#83 - a5#87 {61988370}";
"b6#123 = a4#83 - a5#87 {61988370}" -> "b7#127 = a6#91 - a7#95 {1507805560}";
"b7#127 = a6#91 - a7#95 {1507805560}" -> "$i7 = b0#99 + b1#103 {360292923}";
"$i7 = b0#99 + b1#103 {360292923}" -> "buffer[dataptr#10] = $i7 {362580179}";
"buffer[dataptr#10] = $i7 {362580179}" -> "$i8 = dataptr#10 + 1 {1027277195}";
"$i8 = dataptr#10 + 1 {1027277195}" -> "$i9 = b2#107 + b3#111 {1519014124}";
"$i9 = b2#107 + b3#111 {1519014124}" -> "buffer[$i8] = $i9 {1062745455}";
"buffer[$i8] = $i9 {1062745455}" -> "$i10 = dataptr#10 + 2 {1327956014}";
"$i10 = dataptr#10 + 2 {1327956014}" -> "$i11 = b4#115 + b5#119 {132289207}";
"$i11 = b4#115 + b5#119 {132289207}" -> "buffer[$i10] = $i11 {1882444821}";
"buffer[$i10] = $i11 {1882444821}" -> "$i12 = dataptr#10 + 3 {764336735}";
"$i12 = dataptr#10 + 3 {764336735}" -> "$i13 = b6#123 + b7#127 {711010484}";
"$i13 = b6#123 + b7#127 {711010484}" -> "buffer[$i12] = $i13 {1902531461}";
"buffer[$i12] = $i13 {1902531461}" -> "$i14 = dataptr#10 + 4 {717945051}";
"$i14 = dataptr#10 + 4 {717945051}" -> "$i15 = b0#99 - b1#103 {949227997}";
"$i15 = b0#99 - b1#103 {949227997}" -> "buffer[$i14] = $i15 {1164261940}";
"buffer[$i14] = $i15 {1164261940}" -> "$i16 = dataptr#10 + 5 {1120576155}";
"$i16 = dataptr#10 + 5 {1120576155}" -> "$i17 = b2#107 - b3#111 {1439146717}";
"$i17 = b2#107 - b3#111 {1439146717}" -> "buffer[$i16] = $i17 {1108221060}";
"buffer[$i16] = $i17 {1108221060}" -> "$i18 = dataptr#10 + 6 {30063068}";
"$i18 = dataptr#10 + 6 {30063068}" -> "$i19 = b4#115 - b5#119 {2013988579}";
"$i19 = b4#115 - b5#119 {2013988579}" -> "buffer[$i18] = $i19 {744182887}";
"buffer[$i18] = $i19 {744182887}" -> "$i20 = dataptr#10 + 7 {2073686995}";
"$i20 = dataptr#10 + 7 {2073686995}" -> "$i21 = b6#123 - b7#127 {1025967532}";
"$i21 = b6#123 - b7#127 {1025967532}" -> "buffer[$i20] = $i21 {152334000}";
"buffer[$i20] = $i21 {152334000}" -> "dataptr#10 = dataptr#10 + 8 {1987665769}";
"dataptr#10 = dataptr#10 + 8 {1987665769}" -> "i#12 = i#12 + 8 {1365210630}";
"i#12 = i#12 + 8 {1365210630}" -> "goto [?= (branch)] {1414530020}";
"goto [?= (branch)] {1414530020}" -> "if i#12 >= 64 goto dataptr#183 = 0 {1194385511}";
"dataptr#183 = 0 {1109724317}" -> "$i22 = 1 << shift {510916603}";
"$i22 = 1 << shift {510916603}" -> "adjust = $i22 >> 1 {2047806526}";
"adjust = $i22 >> 1 {2047806526}" -> "i#190 = 0 {1956489774}";
"i#190 = 0 {1956489774}" -> "if i#190 >= 8 goto $i61 = src.<kanzi.SliceIntArray: int index> {1097120247}";
"if i#190 >= 8 goto $i61 = src.<kanzi.SliceIntArray: int index> {1097120247}" -> "x0#196 = buffer[dataptr#183] {1264363397}";
"if i#190 >= 8 goto $i61 = src.<kanzi.SliceIntArray: int index> {1097120247}" -> "$i61 = src.<kanzi.SliceIntArray: int index> {72068442}";
"x0#196 = buffer[dataptr#183] {1264363397}" -> "$i23 = dataptr#183 + 8 {1105308753}";
"$i23 = dataptr#183 + 8 {1105308753}" -> "x1#202 = buffer[$i23] {1891862121}";
"x1#202 = buffer[$i23] {1891862121}" -> "$i24 = dataptr#183 + 16 {1591361580}";
"$i24 = dataptr#183 + 16 {1591361580}" -> "x2#208 = buffer[$i24] {1870322366}";
"x2#208 = buffer[$i24] {1870322366}" -> "$i25 = dataptr#183 + 24 {432553177}";
"$i25 = dataptr#183 + 24 {432553177}" -> "x3#214 = buffer[$i25] {714745226}";
"x3#214 = buffer[$i25] {714745226}" -> "$i26 = dataptr#183 + 32 {678050667}";
"$i26 = dataptr#183 + 32 {678050667}" -> "x4#220 = buffer[$i26] {1188868750}";
"x4#220 = buffer[$i26] {1188868750}" -> "$i27 = dataptr#183 + 40 {790728610}";
"$i27 = dataptr#183 + 40 {790728610}" -> "x5#226 = buffer[$i27] {275574720}";
"x5#226 = buffer[$i27] {275574720}" -> "$i28 = dataptr#183 + 48 {1251577109}";
"$i28 = dataptr#183 + 48 {1251577109}" -> "x6#232 = buffer[$i28] {401526250}";
"x6#232 = buffer[$i28] {401526250}" -> "$i29 = dataptr#183 + 56 {1294984128}";
"$i29 = dataptr#183 + 56 {1294984128}" -> "x7#238 = buffer[$i29] {1971898500}";
"x7#238 = buffer[$i29] {1971898500}" -> "a0#242 = x0#196 + x1#202 {815539270}";
"a0#242 = x0#196 + x1#202 {815539270}" -> "a1#246 = x2#208 + x3#214 {1444014067}";
"a1#246 = x2#208 + x3#214 {1444014067}" -> "a2#250 = x4#220 + x5#226 {1406857635}";
"a2#250 = x4#220 + x5#226 {1406857635}" -> "a3#254 = x6#232 + x7#238 {97008207}";
"a3#254 = x6#232 + x7#238 {97008207}" -> "a4#258 = x0#196 - x1#202 {1153375041}";
"a4#258 = x0#196 - x1#202 {1153375041}" -> "a5#262 = x2#208 - x3#214 {1747287383}";
"a5#262 = x2#208 - x3#214 {1747287383}" -> "a6#266 = x4#220 - x5#226 {596084449}";
"a6#266 = x4#220 - x5#226 {596084449}" -> "a7#270 = x6#232 - x7#238 {1347321668}";
"a7#270 = x6#232 - x7#238 {1347321668}" -> "b0#274 = a0#242 + a1#246 {1715893680}";
"b0#274 = a0#242 + a1#246 {1715893680}" -> "b1#278 = a2#250 + a3#254 {1934953845}";
"b1#278 = a2#250 + a3#254 {1934953845}" -> "b2#282 = a4#258 + a5#262 {1258925203}";
"b2#282 = a4#258 + a5#262 {1258925203}" -> "b3#286 = a6#266 + a7#270 {906747679}";
"b3#286 = a6#266 + a7#270 {906747679}" -> "b4#290 = a0#242 - a1#246 {332016877}";
"b4#290 = a0#242 - a1#246 {332016877}" -> "b5#294 = a2#250 - a3#254 {1777387306}";
"b5#294 = a2#250 - a3#254 {1777387306}" -> "b6#298 = a4#258 - a5#262 {524770848}";
"b6#298 = a4#258 - a5#262 {524770848}" -> "b7#302 = a6#266 - a7#270 {2102470726}";
"b7#302 = a6#266 - a7#270 {2102470726}" -> "di = dstIdx + i#190 {1118018652}";
"di = dstIdx + i#190 {1118018652}" -> "$i30 = b0#274 + b1#278 {857121229}";
"$i30 = b0#274 + b1#278 {857121229}" -> "$i31 = $i30 + adjust {957195525}";
"$i31 = $i30 + adjust {957195525}" -> "$i32 = $i31 >> shift {402409148}";
"$i32 = $i31 >> shift {402409148}" -> "output[di] = $i32 {1381710675}";
"output[di] = $i32 {1381710675}" -> "$i33 = di + 8 {2111250857}";
"$i33 = di + 8 {2111250857}" -> "$i34 = b2#282 + b3#286 {967985324}";
"$i34 = b2#282 + b3#286 {967985324}" -> "$i35 = $i34 + adjust {1224088948}";
"$i35 = $i34 + adjust {1224088948}" -> "$i36 = $i35 >> shift {796472522}";
"$i36 = $i35 >> shift {796472522}" -> "output[$i33] = $i36 {900551491}";
"output[$i33] = $i36 {900551491}" -> "$i37 = di + 16 {1607034630}";
"$i37 = di + 16 {1607034630}" -> "$i38 = b4#290 + b5#294 {2123061508}";
"$i38 = b4#290 + b5#294 {2123061508}" -> "$i39 = $i38 + adjust {789557612}";
"$i39 = $i38 + adjust {789557612}" -> "$i40 = $i39 >> shift {782231552}";
"$i40 = $i39 >> shift {782231552}" -> "output[$i37] = $i40 {862476167}";
"output[$i37] = $i40 {862476167}" -> "$i41 = di + 24 {221789344}";
"$i41 = di + 24 {221789344}" -> "$i42 = b6#298 + b7#302 {1007248842}";
"$i42 = b6#298 + b7#302 {1007248842}" -> "$i43 = $i42 + adjust {1089645125}";
"$i43 = $i42 + adjust {1089645125}" -> "$i44 = $i43 >> shift {134583460}";
"$i44 = $i43 >> shift {134583460}" -> "output[$i41] = $i44 {1010247768}";
"output[$i41] = $i44 {1010247768}" -> "$i45 = di + 32 {461210657}";
"$i45 = di + 32 {461210657}" -> "$i46 = b0#274 - b1#278 {1714746254}";
"$i46 = b0#274 - b1#278 {1714746254}" -> "$i47 = $i46 + adjust {81801020}";
"$i47 = $i46 + adjust {81801020}" -> "$i48 = $i47 >> shift {953134146}";
"$i48 = $i47 >> shift {953134146}" -> "output[$i45] = $i48 {1346886841}";
"output[$i45] = $i48 {1346886841}" -> "$i49 = di + 40 {861376572}";
"$i49 = di + 40 {861376572}" -> "$i50 = b2#282 - b3#286 {1073554007}";
"$i50 = b2#282 - b3#286 {1073554007}" -> "$i51 = $i50 + adjust {811536651}";
"$i51 = $i50 + adjust {811536651}" -> "$i52 = $i51 >> shift {39358538}";
"$i52 = $i51 >> shift {39358538}" -> "output[$i49] = $i52 {376903766}";
"output[$i49] = $i52 {376903766}" -> "$i53 = di + 48 {1840066188}";
"$i53 = di + 48 {1840066188}" -> "$i54 = b4#290 - b5#294 {1360170212}";
"$i54 = b4#290 - b5#294 {1360170212}" -> "$i55 = $i54 + adjust {1808117387}";
"$i55 = $i54 + adjust {1808117387}" -> "$i56 = $i55 >> shift {2051224178}";
"$i56 = $i55 >> shift {2051224178}" -> "output[$i53] = $i56 {1462356751}";
"output[$i53] = $i56 {1462356751}" -> "$i57 = di + 56 {1269887406}";
"$i57 = di + 56 {1269887406}" -> "$i58 = b6#298 - b7#302 {1456683501}";
"$i58 = b6#298 - b7#302 {1456683501}" -> "$i59 = $i58 + adjust {1236104329}";
"$i59 = $i58 + adjust {1236104329}" -> "$i60 = $i59 >> shift {1441324050}";
"$i60 = $i59 >> shift {1441324050}" -> "output[$i57] = $i60 {1530676200}";
"output[$i57] = $i60 {1530676200}" -> "dataptr#183 = dataptr#183 + 1 {2039967034}";
"dataptr#183 = dataptr#183 + 1 {2039967034}" -> "i#190 = i#190 + 1 {1065190587}";
"i#190 = i#190 + 1 {1065190587}" -> "goto [?= (branch)] {753321738}";
"goto [?= (branch)] {753321738}" -> "if i#190 >= 8 goto $i61 = src.<kanzi.SliceIntArray: int index> {1097120247}";
"$i61 = src.<kanzi.SliceIntArray: int index> {72068442}" -> "$i62 = $i61 + 64 {1813152488}";
"$i62 = $i61 + 64 {1813152488}" -> "src.<kanzi.SliceIntArray: int index> = $i62 {1050336932}";
"src.<kanzi.SliceIntArray: int index> = $i62 {1050336932}" -> "$i63 = dst.<kanzi.SliceIntArray: int index> {2119395209}";
"$i63 = dst.<kanzi.SliceIntArray: int index> {2119395209}" -> "$i64 = $i63 + 64 {1701815958}";
"$i64 = $i63 + 64 {1701815958}" -> "dst.<kanzi.SliceIntArray: int index> = $i64 {380733261}";
"dst.<kanzi.SliceIntArray: int index> = $i64 {380733261}" -> "return 1 {1108801138}";
}

digraph inverse {
"this := @this: kanzi.transform.WHT8 {724940529}" -> "src := @parameter0: kanzi.SliceIntArray {62307396}";
"src := @parameter0: kanzi.SliceIntArray {62307396}" -> "dst := @parameter1: kanzi.SliceIntArray {149442014}";
"dst := @parameter1: kanzi.SliceIntArray {149442014}" -> "$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {984398725}";
"$z0 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(src) {984398725}" -> "if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1885378483}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1885378483}" -> "return 0 {1342249913}";
"if $z0 != 0 goto $i0 = src.<kanzi.SliceIntArray: int length> {1885378483}" -> "$i0 = src.<kanzi.SliceIntArray: int length> {2072457702}";
"$i0 = src.<kanzi.SliceIntArray: int length> {2072457702}" -> "if $i0 == 64 goto (branch) {1417530553}";
"if $i0 == 64 goto (branch) {1417530553}" -> "return 0 {903962920}";
"if $i0 == 64 goto (branch) {1417530553}" -> "if src == dst goto $r1 = this.<kanzi.transform.WHT8: int[] data> {2089237696}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT8: int[] data> {2089237696}" -> "$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {160672509}";
"if src == dst goto $r1 = this.<kanzi.transform.WHT8: int[] data> {2089237696}" -> "$r1 = this.<kanzi.transform.WHT8: int[] data> {1196740773}";
"$z1 = staticinvoke <kanzi.SliceIntArray: boolean isValid(kanzi.SliceIntArray)>(dst) {160672509}" -> "if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {1750266733}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {1750266733}" -> "return 0 {1622677342}";
"if $z1 != 0 goto $i1 = dst.<kanzi.SliceIntArray: int index> {1750266733}" -> "$i1 = dst.<kanzi.SliceIntArray: int index> {190763421}";
"$i1 = dst.<kanzi.SliceIntArray: int index> {190763421}" -> "$i2 = $i1 + 64 {864954058}";
"$i2 = $i1 + 64 {864954058}" -> "$r0 = dst.<kanzi.SliceIntArray: int[] array> {2115400115}";
"$r0 = dst.<kanzi.SliceIntArray: int[] array> {2115400115}" -> "$i3 = lengthof $r0 {197639062}";
"$i3 = lengthof $r0 {197639062}" -> "if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1237148754}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1237148754}" -> "return 0 {1271824278}";
"if $i2 <= $i3 goto $r1 = this.<kanzi.transform.WHT8: int[] data> {1237148754}" -> "$r1 = this.<kanzi.transform.WHT8: int[] data> {1196740773}";
"$r1 = this.<kanzi.transform.WHT8: int[] data> {1196740773}" -> "$i4 = this.<kanzi.transform.WHT8: int iScale> {119602149}";
"$i4 = this.<kanzi.transform.WHT8: int iScale> {119602149}" -> "$z2 = staticinvoke <kanzi.transform.WHT8: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {1720767068}";
"$z2 = staticinvoke <kanzi.transform.WHT8: boolean compute(kanzi.SliceIntArray,kanzi.SliceIntArray,int[],int)>(src, dst, $r1, $i4) {1720767068}" -> "return $z2 {952576148}";
}


