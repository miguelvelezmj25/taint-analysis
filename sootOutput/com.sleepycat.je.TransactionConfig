    static void <clinit>()
    {
        com.sleepycat.je.TransactionConfig $r0;

        $r0 = new com.sleepycat.je.TransactionConfig;

        specialinvoke $r0.<com.sleepycat.je.TransactionConfig: void <init>()>();

        <com.sleepycat.je.TransactionConfig: com.sleepycat.je.TransactionConfig DEFAULT> = $r0;

        return;
    }

    public void <init>()
    {
        com.sleepycat.je.TransactionConfig this;

        this := @this: com.sleepycat.je.TransactionConfig;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.sleepycat.je.TransactionConfig: boolean sync> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean noSync> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync> = 0;

        this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.Durability durability> = null;

        this.<com.sleepycat.je.TransactionConfig: boolean noWait> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean readUncommitted> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean readCommitted> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean serializableIsolation> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean readOnly> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean localWrite> = 0;

        return;
    }

    public com.sleepycat.je.TransactionConfig setReadCommitted(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean readCommitted;

        this := @this: com.sleepycat.je.TransactionConfig;

        readCommitted := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setReadCommittedVoid(boolean)>(readCommitted);

        return this;
    }

    public void setReadCommittedVoid(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean readCommitted;

        this := @this: com.sleepycat.je.TransactionConfig;

        readCommitted := @parameter0: boolean;

        this.<com.sleepycat.je.TransactionConfig: boolean readCommitted> = readCommitted;

        return;
    }

    public com.sleepycat.je.TransactionConfig setDurability(com.sleepycat.je.Durability)
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.Durability durability;

        this := @this: com.sleepycat.je.TransactionConfig;

        durability := @parameter0: com.sleepycat.je.Durability;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setDurabilityVoid(com.sleepycat.je.Durability)>(durability);

        return this;
    }

    public void setDurabilityVoid(com.sleepycat.je.Durability)
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.Durability durability;
        boolean $z0, $z1, $z2;

        this := @this: com.sleepycat.je.TransactionConfig;

        durability := @parameter0: com.sleepycat.je.Durability;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean sync>;

        $z1 = this.<com.sleepycat.je.TransactionConfig: boolean noSync>;

        $z2 = this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync>;

        staticinvoke <com.sleepycat.je.TransactionConfig: void checkMixedMode(boolean,boolean,boolean,com.sleepycat.je.Durability)>($z0, $z1, $z2, durability);

        this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.Durability durability> = durability;

        return;
    }

    static void checkMixedMode(boolean, boolean, boolean, com.sleepycat.je.Durability) throws java.lang.IllegalArgumentException
    {
        boolean sync, noSync, writeNoSync;
        com.sleepycat.je.Durability durability;
        java.lang.IllegalArgumentException $r0, $r1;

        sync := @parameter0: boolean;

        noSync := @parameter1: boolean;

        writeNoSync := @parameter2: boolean;

        durability := @parameter3: com.sleepycat.je.Durability;

        if sync != 0 goto label1;

        if noSync != 0 goto label1;

        if writeNoSync == 0 goto label2;

     label1:
        if durability == null goto label2;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Mixed use of deprecated and current durability APIs is not supported");

        throw $r0;

     label2:
        if sync == 0 goto label3;

        if noSync != 0 goto label5;

     label3:
        if sync == 0 goto label4;

        if writeNoSync != 0 goto label5;

     label4:
        if noSync == 0 goto label6;

        if writeNoSync == 0 goto label6;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only one of TxnSync, TxnNoSync, and TxnWriteNoSync can be set.");

        throw $r1;

     label6:
        return;
    }

    public com.sleepycat.je.TransactionConfig setConsistencyPolicy(com.sleepycat.je.ReplicaConsistencyPolicy)
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.ReplicaConsistencyPolicy consistencyPolicy;

        this := @this: com.sleepycat.je.TransactionConfig;

        consistencyPolicy := @parameter0: com.sleepycat.je.ReplicaConsistencyPolicy;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setConsistencyPolicyVoid(com.sleepycat.je.ReplicaConsistencyPolicy)>(consistencyPolicy);

        return this;
    }

    public com.sleepycat.je.TransactionConfig setLocalWrite(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean localWrite;

        this := @this: com.sleepycat.je.TransactionConfig;

        localWrite := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setLocalWriteVoid(boolean)>(localWrite);

        return this;
    }

    public void setLocalWriteVoid(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean localWrite, $z0;
        java.lang.IllegalArgumentException $r0;

        this := @this: com.sleepycat.je.TransactionConfig;

        localWrite := @parameter0: boolean;

        if localWrite == 0 goto label1;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean readOnly>;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("localWrite and readOnly may not both be true");

        throw $r0;

     label1:
        this.<com.sleepycat.je.TransactionConfig: boolean localWrite> = localWrite;

        return;
    }

    public void setConsistencyPolicyVoid(com.sleepycat.je.ReplicaConsistencyPolicy)
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.ReplicaConsistencyPolicy consistencyPolicy;

        this := @this: com.sleepycat.je.TransactionConfig;

        consistencyPolicy := @parameter0: com.sleepycat.je.ReplicaConsistencyPolicy;

        this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.ReplicaConsistencyPolicy consistencyPolicy> = consistencyPolicy;

        return;
    }

    public com.sleepycat.je.TransactionConfig setNoWait(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean noWait;

        this := @this: com.sleepycat.je.TransactionConfig;

        noWait := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setNoWaitVoid(boolean)>(noWait);

        return this;
    }

    public void setNoWaitVoid(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean noWait;

        this := @this: com.sleepycat.je.TransactionConfig;

        noWait := @parameter0: boolean;

        this.<com.sleepycat.je.TransactionConfig: boolean noWait> = noWait;

        return;
    }

    public boolean getReadUncommitted()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean readUncommitted>;

        return $z0;
    }

    public boolean getNoWait()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean noWait>;

        return $z0;
    }

    public boolean getSerializableIsolation()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean serializableIsolation>;

        return $z0;
    }

    public boolean getReadCommitted()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean readCommitted>;

        return $z0;
    }

    public com.sleepycat.je.Durability getDurability()
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.Durability $r0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $r0 = this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.Durability durability>;

        return $r0;
    }

    public com.sleepycat.je.Durability getDurabilityFromSync(com.sleepycat.je.dbi.EnvironmentImpl)
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.dbi.EnvironmentImpl envImpl;
        boolean $z0, $z1, $z2, $z3;
        com.sleepycat.je.Durability $r0, $r1, $r2, $r3, $r4;

        this := @this: com.sleepycat.je.TransactionConfig;

        envImpl := @parameter0: com.sleepycat.je.dbi.EnvironmentImpl;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean sync>;

        if $z0 == 0 goto label1;

        $r0 = <com.sleepycat.je.Durability: com.sleepycat.je.Durability COMMIT_SYNC>;

        return $r0;

     label1:
        $z1 = this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync>;

        if $z1 == 0 goto label2;

        $r1 = <com.sleepycat.je.Durability: com.sleepycat.je.Durability COMMIT_WRITE_NO_SYNC>;

        return $r1;

     label2:
        $z2 = this.<com.sleepycat.je.TransactionConfig: boolean noSync>;

        if $z2 == 0 goto label3;

        $r2 = <com.sleepycat.je.Durability: com.sleepycat.je.Durability COMMIT_NO_SYNC>;

        return $r2;

     label3:
        $z3 = virtualinvoke envImpl.<com.sleepycat.je.dbi.EnvironmentImpl: boolean isReplicated()>();

        if $z3 == 0 goto label4;

        $r3 = <com.sleepycat.je.Durability: com.sleepycat.je.Durability COMMIT_NO_SYNC>;

        return $r3;

     label4:
        $r4 = <com.sleepycat.je.Durability: com.sleepycat.je.Durability COMMIT_SYNC>;

        return $r4;
    }

    public boolean getSync()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean sync>;

        return $z0;
    }

    public boolean getNoSync()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean noSync>;

        return $z0;
    }

    public boolean getWriteNoSync()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync>;

        return $z0;
    }

    public boolean getReadOnly()
    {
        com.sleepycat.je.TransactionConfig this;
        boolean $z0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean readOnly>;

        return $z0;
    }

    public com.sleepycat.je.TransactionConfig clone()
    {
        com.sleepycat.je.TransactionConfig this, $r1;
        java.lang.CloneNotSupportedException willNeverOccur, $r2;
        java.lang.Object $r0;

        this := @this: com.sleepycat.je.TransactionConfig;

     label1:
        $r0 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.sleepycat.je.TransactionConfig) $r0;

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        willNeverOccur = $r2;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public com.sleepycat.je.TransactionConfig setNoSync(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean noSync;

        this := @this: com.sleepycat.je.TransactionConfig;

        noSync := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setNoSyncVoid(boolean)>(noSync);

        return this;
    }

    public com.sleepycat.je.TransactionConfig setWriteNoSync(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean writeNoSync;

        this := @this: com.sleepycat.je.TransactionConfig;

        writeNoSync := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setWriteNoSyncVoid(boolean)>(writeNoSync);

        return this;
    }

    public com.sleepycat.je.TransactionConfig setSerializableIsolation(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean serializableIsolation;

        this := @this: com.sleepycat.je.TransactionConfig;

        serializableIsolation := @parameter0: boolean;

        virtualinvoke this.<com.sleepycat.je.TransactionConfig: void setSerializableIsolationVoid(boolean)>(serializableIsolation);

        return this;
    }

    public void setSerializableIsolationVoid(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean serializableIsolation;

        this := @this: com.sleepycat.je.TransactionConfig;

        serializableIsolation := @parameter0: boolean;

        this.<com.sleepycat.je.TransactionConfig: boolean serializableIsolation> = serializableIsolation;

        return;
    }

    public void setWriteNoSyncVoid(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean writeNoSync, $z0, $z1;
        com.sleepycat.je.Durability $r0;

        this := @this: com.sleepycat.je.TransactionConfig;

        writeNoSync := @parameter0: boolean;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean sync>;

        $z1 = this.<com.sleepycat.je.TransactionConfig: boolean noSync>;

        $r0 = this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.Durability durability>;

        staticinvoke <com.sleepycat.je.TransactionConfig: void checkMixedMode(boolean,boolean,boolean,com.sleepycat.je.Durability)>($z0, $z1, writeNoSync, $r0);

        this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync> = writeNoSync;

        return;
    }

    public void setNoSyncVoid(boolean)
    {
        com.sleepycat.je.TransactionConfig this;
        boolean noSync, $z0, $z1;
        com.sleepycat.je.Durability $r0;

        this := @this: com.sleepycat.je.TransactionConfig;

        noSync := @parameter0: boolean;

        $z0 = this.<com.sleepycat.je.TransactionConfig: boolean sync>;

        $z1 = this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync>;

        $r0 = this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.Durability durability>;

        staticinvoke <com.sleepycat.je.TransactionConfig: void checkMixedMode(boolean,boolean,boolean,com.sleepycat.je.Durability)>($z0, noSync, $z1, $r0);

        this.<com.sleepycat.je.TransactionConfig: boolean noSync> = noSync;

        return;
    }

    public com.sleepycat.je.ReplicaConsistencyPolicy getConsistencyPolicy()
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.ReplicaConsistencyPolicy $r0;

        this := @this: com.sleepycat.je.TransactionConfig;

        $r0 = this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.ReplicaConsistencyPolicy consistencyPolicy>;

        return $r0;
    }

    void overrideDurability(com.sleepycat.je.Durability)
    {
        com.sleepycat.je.TransactionConfig this;
        com.sleepycat.je.Durability durability;

        this := @this: com.sleepycat.je.TransactionConfig;

        durability := @parameter0: com.sleepycat.je.Durability;

        this.<com.sleepycat.je.TransactionConfig: boolean sync> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean noSync> = 0;

        this.<com.sleepycat.je.TransactionConfig: boolean writeNoSync> = 0;

        this.<com.sleepycat.je.TransactionConfig: com.sleepycat.je.Durability durability> = durability;

        return;
    }


