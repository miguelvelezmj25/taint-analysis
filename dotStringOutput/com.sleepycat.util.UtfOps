digraph <clinit> {
"$r0 = newarray (byte)[0] {651541403}" -> "<com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1786592974}";
"<com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1786592974}" -> "<com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1350469947}";
"<com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {1350469947}" -> "return {1534917068}";
}

digraph getByteLength {
"chars := @parameter0: char[] {1413587749}" -> "$i0 = lengthof chars {1860747684}";
"$i0 = lengthof chars {1860747684}" -> "$i1 = staticinvoke <com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1042118087}";
"$i1 = staticinvoke <com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1042118087}" -> "return $i1 {1942091113}";
}

digraph getByteLength {
"chars := @parameter0: char[] {507560326}" -> "offset := @parameter1: int {1202508598}";
"offset := @parameter1: int {1202508598}" -> "length#1 := @parameter2: int {906499224}";
"length#1 := @parameter2: int {906499224}" -> "len#3 = 0 {2014030555}";
"len#3 = 0 {2014030555}" -> "length#7 = length#1 + offset {1982325220}";
"length#7 = length#1 + offset {1982325220}" -> "i#9 = offset {947268587}";
"i#9 = offset {947268587}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {810697110}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {810697110}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1596397863}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1596397863}" -> "if i#9 >= length#7 goto return len#3 {996458505}";
"if i#9 >= length#7 goto return len#3 {996458505}" -> "c = chars[i#9] {1901231608}";
"if i#9 >= length#7 goto return len#3 {996458505}" -> "return len#3 {1026550595}";
"c = chars[i#9] {1901231608}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {689413321}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {689413321}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1292242602}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1292242602}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {103369965}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1292242602}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {744399159}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {103369965}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {557025501}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {557025501}" -> "len#3 = len#3 + 1 {1555931407}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {557025501}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {744399159}";
"len#3 = len#3 + 1 {1555931407}" -> "goto [?= i#9 = i#9 + 1] {1001993912}";
"goto [?= i#9 = i#9 + 1] {1001993912}" -> "i#9 = i#9 + 1 {417300597}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {744399159}" -> "if c <= 2047 goto len#3 = len#3 + 2 {823325781}";
"if c <= 2047 goto len#3 = len#3 + 2 {823325781}" -> "len#3 = len#3 + 3 {1139542073}";
"if c <= 2047 goto len#3 = len#3 + 2 {823325781}" -> "len#3 = len#3 + 2 {1053387685}";
"len#3 = len#3 + 3 {1139542073}" -> "goto [?= i#9 = i#9 + 1] {170866785}";
"goto [?= i#9 = i#9 + 1] {170866785}" -> "i#9 = i#9 + 1 {417300597}";
"len#3 = len#3 + 2 {1053387685}" -> "i#9 = i#9 + 1 {417300597}";
"i#9 = i#9 + 1 {417300597}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {1003617943}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9)] {1003617943}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {810697110}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {689413321}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {744399159}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {103369965}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#9) {810697110}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#7) {1596397863}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph charsToBytes {
"chars := @parameter0: char[] {599375613}" -> "charOffset := @parameter1: int {88873724}";
"charOffset := @parameter1: int {88873724}" -> "bytes := @parameter2: byte[] {71309384}";
"bytes := @parameter2: byte[] {71309384}" -> "byteOffset#1 := @parameter3: int {1525019486}";
"byteOffset#1 := @parameter3: int {1525019486}" -> "charLength#2 := @parameter4: int {872701144}";
"charLength#2 := @parameter4: int {872701144}" -> "charLength#6 = charLength#2 + charOffset {907449208}";
"charLength#6 = charLength#2 + charOffset {907449208}" -> "i#8 = charOffset {639548503}";
"i#8 = charOffset {639548503}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {1454902539}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {1454902539}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {440036629}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {440036629}" -> "if i#8 >= charLength#6 goto return {1044943033}";
"if i#8 >= charLength#6 goto return {1044943033}" -> "c = chars[i#8] {1615937120}";
"if i#8 >= charLength#6 goto return {1044943033}" -> "return {1080267822}";
"c = chars[i#8] {1615937120}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1657154486}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1657154486}" -> "if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {47107307}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {47107307}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1575562201}";
"if c < 1 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {47107307}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1269806394}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1575562201}" -> "if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {360527354}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {360527354}" -> "$i0 = byteOffset#1 {543372482}";
"if c > 127 goto staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {360527354}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1269806394}";
"$i0 = byteOffset#1 {543372482}" -> "byteOffset#1 = byteOffset#1 + 1 {1956237244}";
"byteOffset#1 = byteOffset#1 + 1 {1956237244}" -> "$b1 = (byte) c {1348149380}";
"$b1 = (byte) c {1348149380}" -> "bytes[$i0] = $b1 {1787158812}";
"bytes[$i0] = $b1 {1787158812}" -> "goto [?= i#8 = i#8 + 1] {1572113434}";
"goto [?= i#8 = i#8 + 1] {1572113434}" -> "i#8 = i#8 + 1 {1826060429}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1269806394}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1178139685}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1178139685}" -> "byteOffset#26 = byteOffset#1 + 1 {68031815}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1178139685}" -> "byteOffset#58 = byteOffset#1 + 1 {470746705}";
"byteOffset#26 = byteOffset#1 + 1 {68031815}" -> "$c2 = c >> 12 {837978232}";
"$c2 = c >> 12 {837978232}" -> "$c3 = $c2 & 15 {1105804281}";
"$c3 = $c2 & 15 {1105804281}" -> "$c4 = 224 | $c3 {1824399874}";
"$c4 = 224 | $c3 {1824399874}" -> "$b5 = (byte) $c4 {1227540133}";
"$b5 = (byte) $c4 {1227540133}" -> "bytes[byteOffset#1] = $b5 {653681249}";
"bytes[byteOffset#1] = $b5 {653681249}" -> "byteOffset#37 = byteOffset#26 + 1 {754703736}";
"byteOffset#37 = byteOffset#26 + 1 {754703736}" -> "$c6 = c >> 6 {1251241432}";
"$c6 = c >> 6 {1251241432}" -> "$c7 = $c6 & 63 {1400873500}";
"$c7 = $c6 & 63 {1400873500}" -> "$c8 = 128 | $c7 {1488948271}";
"$c8 = 128 | $c7 {1488948271}" -> "$b9 = (byte) $c8 {833409101}";
"$b9 = (byte) $c8 {833409101}" -> "bytes[byteOffset#26] = $b9 {132370502}";
"bytes[byteOffset#26] = $b9 {132370502}" -> "byteOffset#1 = byteOffset#37 + 1 {1520518469}";
"byteOffset#1 = byteOffset#37 + 1 {1520518469}" -> "$c10 = c >> 0 {1727195836}";
"$c10 = c >> 0 {1727195836}" -> "$c11 = $c10 & 63 {1155650259}";
"$c11 = $c10 & 63 {1155650259}" -> "$c12 = 128 | $c11 {988066700}";
"$c12 = 128 | $c11 {988066700}" -> "$b13 = (byte) $c12 {1261570406}";
"$b13 = (byte) $c12 {1261570406}" -> "bytes[byteOffset#37] = $b13 {2113032983}";
"bytes[byteOffset#37] = $b13 {2113032983}" -> "goto [?= i#8 = i#8 + 1] {936341808}";
"goto [?= i#8 = i#8 + 1] {936341808}" -> "i#8 = i#8 + 1 {1826060429}";
"byteOffset#58 = byteOffset#1 + 1 {470746705}" -> "$c14 = c >> 6 {2107474685}";
"$c14 = c >> 6 {2107474685}" -> "$c15 = $c14 & 31 {43455040}";
"$c15 = $c14 & 31 {43455040}" -> "$c16 = 192 | $c15 {989537530}";
"$c16 = 192 | $c15 {989537530}" -> "$b17 = (byte) $c16 {727761714}";
"$b17 = (byte) $c16 {727761714}" -> "bytes[byteOffset#1] = $b17 {103529121}";
"bytes[byteOffset#1] = $b17 {103529121}" -> "byteOffset#1 = byteOffset#58 + 1 {1920967486}";
"byteOffset#1 = byteOffset#58 + 1 {1920967486}" -> "$c18 = c >> 0 {1013603728}";
"$c18 = c >> 0 {1013603728}" -> "$c19 = $c18 & 63 {43580192}";
"$c19 = $c18 & 63 {43580192}" -> "$c20 = 128 | $c19 {709335784}";
"$c20 = 128 | $c19 {709335784}" -> "$b21 = (byte) $c20 {1152373997}";
"$b21 = (byte) $c20 {1152373997}" -> "bytes[byteOffset#58] = $b21 {693360508}";
"bytes[byteOffset#58] = $b21 {693360508}" -> "i#8 = i#8 + 1 {1826060429}";
"i#8 = i#8 + 1 {1826060429}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {2060533541}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8)] {2060533541}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {1454902539}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1269806394}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#8) {1454902539}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1575562201}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(c) {1657154486}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(charLength#6) {440036629}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getZeroTerminatedByteLength {
"bytes := @parameter0: byte[] {1464010212}" -> "offset#1 := @parameter1: int {621380334}";
"offset#1 := @parameter1: int {621380334}" -> "len#3 = 0 {1459855702}";
"len#3 = 0 {1459855702}" -> "$i0 = offset#1 {503963258}";
"$i0 = offset#1 {503963258}" -> "offset#1 = offset#1 + 1 {1414186492}";
"offset#1 = offset#1 + 1 {1414186492}" -> "$b1 = bytes[$i0] {1585310450}";
"$b1 = bytes[$i0] {1585310450}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {366512417}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {366512417}" -> "if $b1 == 0 goto return len#3 {1891694187}";
"if $b1 == 0 goto return len#3 {1891694187}" -> "len#3 = len#3 + 1 {543824903}";
"if $b1 == 0 goto return len#3 {1891694187}" -> "return len#3 {1687339965}";
"len#3 = len#3 + 1 {543824903}" -> "goto [?= $i0 = offset#1] {571295955}";
"goto [?= $i0 = offset#1] {571295955}" -> "$i0 = offset#1 {503963258}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($b1) {366512417}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToString {
"bytes := @parameter0: byte[] {253482661}" -> "offset := @parameter1: int {1744426237}";
"offset := @parameter1: int {1744426237}" -> "length := @parameter2: int {2049864800}";
"length := @parameter2: int {2049864800}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {227590397}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {227590397}" -> "if length != 0 goto charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1544750565}";
"if length != 0 goto charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1544750565}" -> "$r0 = <com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1427634035}";
"if length != 0 goto charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1544750565}" -> "charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1520260678}";
"$r0 = <com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1427634035}" -> "return $r0 {1857447843}";
"charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1520260678}" -> "chars = newarray (char)[charLen] {2044961974}";
"chars = newarray (char)[charLen] {2044961974}" -> "staticinvoke <com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1079173981}";
"staticinvoke <com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1079173981}" -> "$r1 = new java.lang.String {1230535118}";
"$r1 = new java.lang.String {1230535118}" -> "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {1074935710}";
"specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {1074935710}" -> "return $r1 {2089817472}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length) {227590397}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph bytesToChars {
"bytes := @parameter0: byte[] {891877322}" -> "byteOffset#1 := @parameter1: int {978136182}";
"byteOffset#1 := @parameter1: int {978136182}" -> "chars := @parameter2: char[] {967575816}";
"chars := @parameter2: char[] {967575816}" -> "charOffset#2 := @parameter3: int {342478989}";
"charOffset#2 := @parameter3: int {342478989}" -> "len#3 := @parameter4: int {1201565144}";
"len#3 := @parameter4: int {1201565144}" -> "isByteLen := @parameter5: boolean {2039293630}";
"isByteLen := @parameter5: boolean {2039293630}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1612676250}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1612676250}" -> "if isByteLen == 0 goto $i1 = charOffset#2 {1897796104}";
"if isByteLen == 0 goto $i1 = charOffset#2 {1897796104}" -> "$i1 = byteOffset#1 {997035192}";
"if isByteLen == 0 goto $i1 = charOffset#2 {1897796104}" -> "$i1 = charOffset#2 {1750614281}";
"$i1 = byteOffset#1 {997035192}" -> "goto [?= len#8 = len#3 + $i1] {694781744}";
"goto [?= len#8 = len#3 + $i1] {694781744}" -> "len#8 = len#3 + $i1 {1040767382}";
"$i1 = charOffset#2 {1750614281}" -> "len#8 = len#3 + $i1 {1040767382}";
"len#8 = len#3 + $i1 {1040767382}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {944530958}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {944530958}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1908923143}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1908923143}" -> "$i2 = byteOffset#1 {608686135}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1908923143}" -> "$i2 = charOffset#2 {1807355190}";
"$i2 = byteOffset#1 {608686135}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {1551591744}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2)] {1551591744}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {977525207}";
"$i2 = charOffset#2 {1807355190}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {977525207}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {977525207}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {1803800127}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {1803800127}" -> "if $i2 >= len#8 goto return byteOffset#1 {1052137063}";
"if $i2 >= len#8 goto return byteOffset#1 {1052137063}" -> "$i3 = byteOffset#1 {40398899}";
"if $i2 >= len#8 goto return byteOffset#1 {1052137063}" -> "return byteOffset#1 {1245963698}";
"$i3 = byteOffset#1 {40398899}" -> "byteOffset#1 = byteOffset#1 + 1 {1897184015}";
"byteOffset#1 = byteOffset#1 + 1 {1897184015}" -> "$b4 = bytes[$i3] {2099105316}";
"$b4 = bytes[$i3] {2099105316}" -> "char1 = $b4 & 255 {1109875221}";
"char1 = $b4 & 255 {1109875221}" -> "$s5 = char1 & 255 {1411130589}";
"$s5 = char1 & 255 {1411130589}" -> "$s6 = $s5 >> 4 {924874296}";
"$s6 = $s5 >> 4 {924874296}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {529658192}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {529658192}" -> "tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1351234806}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1351234806}" -> "$i7 = charOffset#2 {1350498572}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1351234806}" -> "$r2 = new java.lang.IllegalArgumentException {1328199405}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1351234806}" -> "$i9 = byteOffset#1 {1130739313}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1351234806}" -> "byteOffset#50 = byteOffset#1 + 1 {1469164601}";
"$i7 = charOffset#2 {1350498572}" -> "charOffset#2 = charOffset#2 + 1 {1683739789}";
"charOffset#2 = charOffset#2 + 1 {1683739789}" -> "$c8 = (char) char1 {166685982}";
"$c8 = (char) char1 {166685982}" -> "chars[$i7] = $c8 {858406674}";
"chars[$i7] = $c8 {858406674}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1829278914}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1829278914}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {944530958}";
"$i9 = byteOffset#1 {1130739313}" -> "byteOffset#1 = byteOffset#1 + 1 {559272864}";
"byteOffset#1 = byteOffset#1 + 1 {559272864}" -> "char2#29 = bytes[$i9] {1385721831}";
"char2#29 = bytes[$i9] {1385721831}" -> "$s10 = char2#29 & 192 {2061864254}";
"$s10 = char2#29 & 192 {2061864254}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1779840683}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1779840683}" -> "if $s10 == 128 goto $i11 = charOffset#2 {1293729825}";
"if $s10 == 128 goto $i11 = charOffset#2 {1293729825}" -> "$r0 = new java.lang.IllegalArgumentException {1843505283}";
"if $s10 == 128 goto $i11 = charOffset#2 {1293729825}" -> "$i11 = charOffset#2 {1673956680}";
"$r0 = new java.lang.IllegalArgumentException {1843505283}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1229747307}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1229747307}" -> "throw $r0 {1652209835}";
"$i11 = charOffset#2 {1673956680}" -> "charOffset#2 = charOffset#2 + 1 {1233338999}";
"charOffset#2 = charOffset#2 + 1 {1233338999}" -> "$s12 = char1 & 31 {100475620}";
"$s12 = char1 & 31 {100475620}" -> "$i13 = $s12 << 6 {193306613}";
"$i13 = $s12 << 6 {193306613}" -> "$b14 = char2#29 & 63 {1156079501}";
"$b14 = char2#29 & 63 {1156079501}" -> "$i15 = $i13 | $b14 {1000451670}";
"$i15 = $i13 | $b14 {1000451670}" -> "$c16 = (char) $i15 {526215974}";
"$c16 = (char) $i15 {526215974}" -> "chars[$i11] = $c16 {1423075890}";
"chars[$i11] = $c16 {1423075890}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1379943186}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1379943186}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {944530958}";
"byteOffset#50 = byteOffset#1 + 1 {1469164601}" -> "char2#52 = bytes[byteOffset#1] {1339342079}";
"char2#52 = bytes[byteOffset#1] {1339342079}" -> "byteOffset#1 = byteOffset#50 + 1 {1695896350}";
"byteOffset#1 = byteOffset#50 + 1 {1695896350}" -> "char3 = bytes[byteOffset#50] {29044214}";
"char3 = bytes[byteOffset#50] {29044214}" -> "$s17 = char2#52 & 192 {520775338}";
"$s17 = char2#52 & 192 {520775338}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1903586527}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1903586527}" -> "if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1096987999}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1096987999}" -> "$s18 = char3 & 192 {64384639}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {1096987999}" -> "$r1 = new java.lang.IllegalArgumentException {51912931}";
"$s18 = char3 & 192 {64384639}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {993532545}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {993532545}" -> "if $s18 == 128 goto $i19 = charOffset#2 {1263092514}";
"if $s18 == 128 goto $i19 = charOffset#2 {1263092514}" -> "$r1 = new java.lang.IllegalArgumentException {51912931}";
"if $s18 == 128 goto $i19 = charOffset#2 {1263092514}" -> "$i19 = charOffset#2 {735982572}";
"$r1 = new java.lang.IllegalArgumentException {51912931}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {857719884}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {857719884}" -> "throw $r1 {844022110}";
"$i19 = charOffset#2 {735982572}" -> "charOffset#2 = charOffset#2 + 1 {1714335615}";
"charOffset#2 = charOffset#2 + 1 {1714335615}" -> "$s20 = char1 & 15 {391105753}";
"$s20 = char1 & 15 {391105753}" -> "$i21 = $s20 << 12 {1346742834}";
"$i21 = $s20 << 12 {1346742834}" -> "$b22 = char2#52 & 63 {413640736}";
"$b22 = char2#52 & 63 {413640736}" -> "$i23 = $b22 << 6 {2105296417}";
"$i23 = $b22 << 6 {2105296417}" -> "$i24 = $i21 | $i23 {229867917}";
"$i24 = $i21 | $i23 {229867917}" -> "$b25 = char3 & 63 {643095979}";
"$b25 = char3 & 63 {643095979}" -> "$i26 = $b25 << 0 {424790543}";
"$i26 = $b25 << 0 {424790543}" -> "$i27 = $i24 | $i26 {379021608}";
"$i27 = $i24 | $i26 {379021608}" -> "$c28 = (char) $i27 {372131796}";
"$c28 = (char) $i27 {372131796}" -> "chars[$i19] = $c28 {1968169123}";
"chars[$i19] = $c28 {1968169123}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1658408375}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen)] {1658408375}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {944530958}";
"$r2 = new java.lang.IllegalArgumentException {1328199405}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {555675419}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {555675419}" -> "throw $r2 {151169658}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s6) {529658192}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {944530958}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s10) {1779840683}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s17) {1903586527}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s18) {993532545}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(len#8) {1803800127}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(isByteLen) {1612676250}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2) {977525207}"[fontcolor="blue", penwidth=3, color="blue"];
}

digraph getCharLength {
"bytes := @parameter0: byte[] {690076669}" -> "offset#1 := @parameter1: int {339958581}";
"offset#1 := @parameter1: int {339958581}" -> "length#2 := @parameter2: int {1713535699}";
"length#2 := @parameter2: int {1713535699}" -> "charCount#4 = 0 {2046674858}";
"charCount#4 = 0 {2046674858}" -> "length#8 = length#2 + offset#1 {1225027918}";
"length#8 = length#2 + offset#1 {1225027918}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {451602191}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {451602191}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1100102039}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1100102039}" -> "if offset#1 >= length#8 goto return charCount#4 {1375283070}";
"if offset#1 >= length#8 goto return charCount#4 {1375283070}" -> "$b0 = bytes[offset#1] {700946371}";
"if offset#1 >= length#8 goto return charCount#4 {1375283070}" -> "return charCount#4 {1957787413}";
"$b0 = bytes[offset#1] {700946371}" -> "$s1 = $b0 & 255 {1732693693}";
"$s1 = $b0 & 255 {1732693693}" -> "$s2 = $s1 >> 4 {972618058}";
"$s2 = $s1 >> 4 {972618058}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {174165090}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {174165090}" -> "tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1677876784}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1677876784}" -> "offset#1 = offset#1 + 1 {903894827}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1677876784}" -> "$r0 = new java.lang.IllegalArgumentException {473685770}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1677876784}" -> "offset#1 = offset#1 + 2 {1205876591}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1677876784}" -> "offset#1 = offset#1 + 3 {109793893}";
"offset#1 = offset#1 + 1 {903894827}" -> "goto [?= charCount#4 = charCount#4 + 1] {967617465}";
"goto [?= charCount#4 = charCount#4 + 1] {967617465}" -> "charCount#4 = charCount#4 + 1 {2010674797}";
"offset#1 = offset#1 + 2 {1205876591}" -> "goto [?= charCount#4 = charCount#4 + 1] {837096061}";
"goto [?= charCount#4 = charCount#4 + 1] {837096061}" -> "charCount#4 = charCount#4 + 1 {2010674797}";
"offset#1 = offset#1 + 3 {109793893}" -> "goto [?= charCount#4 = charCount#4 + 1] {1512493166}";
"goto [?= charCount#4 = charCount#4 + 1] {1512493166}" -> "charCount#4 = charCount#4 + 1 {2010674797}";
"$r0 = new java.lang.IllegalArgumentException {473685770}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1494229679}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {1494229679}" -> "throw $r0 {895040579}";
"charCount#4 = charCount#4 + 1 {2010674797}" -> "goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {1353432204}";
"goto [?= staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1)] {1353432204}" -> "staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {451602191}";
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(offset#1) {451602191}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($s2) {174165090}"[fontcolor="blue", penwidth=3, color="blue"];
"staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(length#8) {1100102039}"[fontcolor="blue", penwidth=3, color="blue"];
}


