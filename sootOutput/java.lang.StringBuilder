    public void <init>()
    {
        java.lang.StringBuilder l0;

        l0 := @this: java.lang.StringBuilder;

        specialinvoke l0.<java.lang.AbstractStringBuilder: void <init>(int)>(16);

        return;
    }

    public java.lang.StringBuilder append(java.lang.String)
    {
        java.lang.StringBuilder l0;
        java.lang.String l1;

        l0 := @this: java.lang.StringBuilder;

        l1 := @parameter0: java.lang.String;

        specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>(l1);

        return l0;
    }

    public java.lang.StringBuilder append(int)
    {
        java.lang.StringBuilder l0;
        int l1;

        l0 := @this: java.lang.StringBuilder;

        l1 := @parameter0: int;

        specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>(l1);

        return l0;
    }

    public volatile java.lang.AbstractStringBuilder append(java.lang.String)
    {
        java.lang.StringBuilder l0, $r0;
        java.lang.String l1;

        l0 := @this: java.lang.StringBuilder;

        l1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke l0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l1);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder l0;
        java.lang.String $r0;
        char[] $r1;
        int $i0;

        l0 := @this: java.lang.StringBuilder;

        $r0 = new java.lang.String;

        $r1 = l0.<java.lang.StringBuilder: char[] value>;

        $i0 = l0.<java.lang.StringBuilder: int count>;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i0);

        return $r0;
    }

    public java.lang.StringBuilder append(char)
    {
        java.lang.StringBuilder l0;
        char l1;

        l0 := @this: java.lang.StringBuilder;

        l1 := @parameter0: char;

        specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(char)>(l1);

        return l0;
    }

    public java.lang.StringBuilder append(float)
    {
        java.lang.StringBuilder l0;
        float l1;

        l0 := @this: java.lang.StringBuilder;

        l1 := @parameter0: float;

        specialinvoke l0.<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(float)>(l1);

        return l0;
    }


