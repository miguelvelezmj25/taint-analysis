    static void <clinit>()
    {
        com.sleepycat.je.evictor.DummyAllocator $r0;

        $r0 = new com.sleepycat.je.evictor.DummyAllocator;

        specialinvoke $r0.<com.sleepycat.je.evictor.DummyAllocator: void <init>()>();

        <com.sleepycat.je.evictor.DummyAllocator: com.sleepycat.je.evictor.DummyAllocator INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.sleepycat.je.evictor.DummyAllocator this;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void setMaxBytes(long)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        long maxBytes;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        maxBytes := @parameter0: long;

        return;
    }

    public long getUsedBytes()
    {
        com.sleepycat.je.evictor.DummyAllocator this;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        return 0L;
    }

    public int free(long)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        long memId;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        memId := @parameter0: long;

        return 0;
    }

    public void copy(long, int, byte[], int, int)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        long memId;
        int memOff, bufOff, len;
        byte[] buf;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        memId := @parameter0: long;

        memOff := @parameter1: int;

        buf := @parameter2: byte[];

        bufOff := @parameter3: int;

        len := @parameter4: int;

        return;
    }

    public int size(long)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        long memId;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        memId := @parameter0: long;

        return 0;
    }

    public void copy(byte[], int, long, int, int)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        byte[] buf;
        int bufOff, memOff, len;
        long memId;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        buf := @parameter0: byte[];

        bufOff := @parameter1: int;

        memId := @parameter2: long;

        memOff := @parameter3: int;

        len := @parameter4: int;

        return;
    }

    public long allocate(int)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        int size;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        size := @parameter0: int;

        return 0L;
    }

    public int totalSize(long)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        long memId;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        memId := @parameter0: long;

        return 0;
    }

    public void copy(long, int, long, int, int)
    {
        com.sleepycat.je.evictor.DummyAllocator this;
        long fromMemId, toMemId;
        int fromMemOff, toMemOff, len;

        this := @this: com.sleepycat.je.evictor.DummyAllocator;

        fromMemId := @parameter0: long;

        fromMemOff := @parameter1: int;

        toMemId := @parameter2: long;

        toMemOff := @parameter3: int;

        len := @parameter4: int;

        return;
    }


