digraph <init> {
"this := @this: com.sleepycat.je.DatabaseNotFoundException {287390259}" -> "message := @parameter0: java.lang.String {1348307233}";
"message := @parameter0: java.lang.String {1348307233}" -> "specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(com.sleepycat.je.txn.Locker,boolean,java.lang.String,java.lang.Throwable)>(null, 0, message, null) {1187747244}";
"specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(com.sleepycat.je.txn.Locker,boolean,java.lang.String,java.lang.Throwable)>(null, 0, message, null) {1187747244}" -> "return {659921325}";
}

digraph wrapSelf {
"this := @this: com.sleepycat.je.DatabaseNotFoundException {1295497467}" -> "msg := @parameter0: java.lang.String {1660386314}";
"msg := @parameter0: java.lang.String {1660386314}" -> "$r0 = new com.sleepycat.je.DatabaseNotFoundException {276565056}";
"$r0 = new com.sleepycat.je.DatabaseNotFoundException {276565056}" -> "specialinvoke $r0.<com.sleepycat.je.DatabaseNotFoundException: void <init>(java.lang.String,com.sleepycat.je.DatabaseNotFoundException)>(msg, this) {1549331160}";
"specialinvoke $r0.<com.sleepycat.je.DatabaseNotFoundException: void <init>(java.lang.String,com.sleepycat.je.DatabaseNotFoundException)>(msg, this) {1549331160}" -> "return $r0 {1245766985}";
}

digraph <init> {
"this := @this: com.sleepycat.je.DatabaseNotFoundException {1705800484}" -> "message := @parameter0: java.lang.String {99669401}";
"message := @parameter0: java.lang.String {99669401}" -> "cause := @parameter1: com.sleepycat.je.DatabaseNotFoundException {1013063329}";
"cause := @parameter1: com.sleepycat.je.DatabaseNotFoundException {1013063329}" -> "specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(java.lang.String,com.sleepycat.je.OperationFailureException)>(message, cause) {1993074161}";
"specialinvoke this.<com.sleepycat.je.OperationFailureException: void <init>(java.lang.String,com.sleepycat.je.OperationFailureException)>(message, cause) {1993074161}" -> "return {2071052251}";
}


