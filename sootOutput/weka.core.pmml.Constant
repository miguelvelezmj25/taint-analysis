    public void <init>(org.w3c.dom.Element, weka.core.pmml.FieldMetaInfo$Optype, java.util.ArrayList) throws java.lang.Exception
    {
        weka.core.pmml.Constant this;
        org.w3c.dom.Element constant;
        weka.core.pmml.FieldMetaInfo$Optype opType, $r1, $r2, $r3, $r4;
        java.util.ArrayList fieldDefs;
        org.w3c.dom.NodeList constL;
        java.lang.String c, $r10;
        java.lang.IllegalArgumentException ex, $r5;
        org.w3c.dom.Node $r0;
        double $d0;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        this := @this: weka.core.pmml.Constant;

        constant := @parameter0: org.w3c.dom.Element;

        opType := @parameter1: weka.core.pmml.FieldMetaInfo$Optype;

        fieldDefs := @parameter2: java.util.ArrayList;

        specialinvoke this.<weka.core.pmml.Expression: void <init>(weka.core.pmml.FieldMetaInfo$Optype,java.util.ArrayList)>(opType, fieldDefs);

        this.<weka.core.pmml.Constant: java.lang.String m_categoricalConst> = null;

        this.<weka.core.pmml.Constant: double m_continuousConst> = #NaN;

        constL = interfaceinvoke constant.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r0 = interfaceinvoke constL.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        c = interfaceinvoke $r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r1 = this.<weka.core.pmml.Constant: weka.core.pmml.FieldMetaInfo$Optype m_opType>;

        $r2 = <weka.core.pmml.FieldMetaInfo$Optype: weka.core.pmml.FieldMetaInfo$Optype CATEGORICAL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r2);

        if $r1 == $r2 goto label1;

        $r3 = this.<weka.core.pmml.Constant: weka.core.pmml.FieldMetaInfo$Optype m_opType>;

        $r4 = <weka.core.pmml.FieldMetaInfo$Optype: weka.core.pmml.FieldMetaInfo$Optype ORDINAL>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r3);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r4);

        if $r3 != $r4 goto label2;

     label1:
        this.<weka.core.pmml.Constant: java.lang.String m_categoricalConst> = c;

        goto label5;

     label2:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(c);

        this.<weka.core.pmml.Constant: double m_continuousConst> = $d0;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        ex = $r5;

        $r6 = new java.lang.Exception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Constant] Unable to parse continuous constant: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(c);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>($r10);

        throw $r6;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public double getResult(double[])
    {
        weka.core.pmml.Constant this;
        double[] incoming;
        weka.core.pmml.FieldMetaInfo$Optype $r0, $r1;
        double $d0;

        this := @this: weka.core.pmml.Constant;

        incoming := @parameter0: double[];

        $r1 = this.<weka.core.pmml.Constant: weka.core.pmml.FieldMetaInfo$Optype m_opType>;

        $r0 = <weka.core.pmml.FieldMetaInfo$Optype: weka.core.pmml.FieldMetaInfo$Optype CONTINUOUS>;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r1);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($r0);

        if $r1 != $r0 goto label1;

        $d0 = this.<weka.core.pmml.Constant: double m_continuousConst>;

        return $d0;

     label1:
        return 0.0;
    }


