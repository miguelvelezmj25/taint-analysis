    void <init>(com.sleepycat.je.dbi.MemoryBudget$1)
    {
        com.sleepycat.je.dbi.MemoryBudget$SharedTotals this;
        com.sleepycat.je.dbi.MemoryBudget$1 x0;

        this := @this: com.sleepycat.je.dbi.MemoryBudget$SharedTotals;

        x0 := @parameter0: com.sleepycat.je.dbi.MemoryBudget$1;

        specialinvoke this.<com.sleepycat.je.dbi.MemoryBudget$SharedTotals: void <init>()>();

        return;
    }

    private void <init>()
    {
        com.sleepycat.je.dbi.MemoryBudget$SharedTotals this;
        java.util.concurrent.atomic.AtomicLong $r0;

        this := @this: com.sleepycat.je.dbi.MemoryBudget$SharedTotals;

        specialinvoke this.<com.sleepycat.je.dbi.MemoryBudget$Totals: void <init>(com.sleepycat.je.dbi.MemoryBudget$1)>(null);

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        this.<com.sleepycat.je.dbi.MemoryBudget$SharedTotals: java.util.concurrent.atomic.AtomicLong usage> = $r0;

        return;
    }

    final boolean updateCacheUsage(long)
    {
        com.sleepycat.je.dbi.MemoryBudget$SharedTotals this;
        long increment, $l0, $l1;
        java.util.concurrent.atomic.AtomicLong $r0;
        byte $b2;
        boolean $z0;

        this := @this: com.sleepycat.je.dbi.MemoryBudget$SharedTotals;

        increment := @parameter0: long;

        $r0 = this.<com.sleepycat.je.dbi.MemoryBudget$SharedTotals: java.util.concurrent.atomic.AtomicLong usage>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(increment);

        $l1 = this.<com.sleepycat.je.dbi.MemoryBudget$SharedTotals: long maxMemory>;

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final long getCacheUsage()
    {
        com.sleepycat.je.dbi.MemoryBudget$SharedTotals this;
        java.util.concurrent.atomic.AtomicLong $r0;
        long $l0;

        this := @this: com.sleepycat.je.dbi.MemoryBudget$SharedTotals;

        $r0 = this.<com.sleepycat.je.dbi.MemoryBudget$SharedTotals: java.util.concurrent.atomic.AtomicLong usage>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    final boolean isSharedCache()
    {
        com.sleepycat.je.dbi.MemoryBudget$SharedTotals this;

        this := @this: com.sleepycat.je.dbi.MemoryBudget$SharedTotals;

        return 1;
    }


