    void <init>(java.lang.String, int, java.lang.String)
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$2 this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$2;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction: void <init>(java.lang.String,int,java.lang.String,weka.classifiers.pmml.consumer.NeuralNetwork$1)>(l1, l2, name, null);

        return;
    }

    double eval(double, double, double, double)
    {
        weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$2 this;
        double z, threshold, altitude, fanIn, $d0, $d1, $d2, $d3;

        this := @this: weka.classifiers.pmml.consumer.NeuralNetwork$ActivationFunction$2;

        z := @parameter0: double;

        threshold := @parameter1: double;

        altitude := @parameter2: double;

        fanIn := @parameter3: double;

        $d0 = neg z;

        $d1 = staticinvoke <java.lang.Math: double exp(double)>($d0);

        $d2 = 1.0 + $d1;

        $d3 = 1.0 / $d2;

        return $d3;
    }


