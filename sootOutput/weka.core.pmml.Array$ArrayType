    static void <clinit>()
    {
        weka.core.pmml.Array$ArrayType $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        weka.core.pmml.Array$ArrayType[] $r6;

        $r0 = new weka.core.pmml.Array$ArrayType;

        specialinvoke $r0.<weka.core.pmml.Array$ArrayType: void <init>(java.lang.String,int,java.lang.String)>("NUM", 0, "NUM-ARRAY");

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType NUM> = $r0;

        $r1 = new weka.core.pmml.Array$ArrayType;

        specialinvoke $r1.<weka.core.pmml.Array$ArrayType: void <init>(java.lang.String,int,java.lang.String)>("INT", 1, "INT-ARRAY");

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType INT> = $r1;

        $r2 = new weka.core.pmml.Array$ArrayType;

        specialinvoke $r2.<weka.core.pmml.Array$ArrayType: void <init>(java.lang.String,int,java.lang.String)>("REAL", 2, "REAL-ARRAY");

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType REAL> = $r2;

        $r3 = new weka.core.pmml.Array$ArrayType;

        specialinvoke $r3.<weka.core.pmml.Array$ArrayType: void <init>(java.lang.String,int,java.lang.String)>("STRING", 3, "STRING-ARRAY");

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType STRING> = $r3;

        $r4 = new weka.core.pmml.Array$ArrayType;

        specialinvoke $r4.<weka.core.pmml.Array$ArrayType: void <init>(java.lang.String,int,java.lang.String)>("REAL_SPARSE", 4, "REAL-SparseArray");

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType REAL_SPARSE> = $r4;

        $r5 = new weka.core.pmml.Array$ArrayType;

        specialinvoke $r5.<weka.core.pmml.Array$ArrayType: void <init>(java.lang.String,int,java.lang.String)>("INT_SPARSE", 5, "INT-SparseArray");

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType INT_SPARSE> = $r5;

        $r6 = newarray (weka.core.pmml.Array$ArrayType)[6];

        $r7 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType NUM>;

        $r6[0] = $r7;

        $r8 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType INT>;

        $r6[1] = $r8;

        $r9 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType REAL>;

        $r6[2] = $r9;

        $r10 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType STRING>;

        $r6[3] = $r10;

        $r11 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType REAL_SPARSE>;

        $r6[4] = $r11;

        $r12 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType INT_SPARSE>;

        $r6[5] = $r12;

        <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType[] $VALUES> = $r6;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        weka.core.pmml.Array$ArrayType this;
        java.lang.String l1, name;
        int l2;

        this := @this: weka.core.pmml.Array$ArrayType;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        name := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<weka.core.pmml.Array$ArrayType: java.lang.String m_stringVal> = name;

        return;
    }

    public static weka.core.pmml.Array$ArrayType[] values()
    {
        weka.core.pmml.Array$ArrayType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <weka.core.pmml.Array$ArrayType: weka.core.pmml.Array$ArrayType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (weka.core.pmml.Array$ArrayType[]) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        weka.core.pmml.Array$ArrayType this;
        java.lang.String $r0;

        this := @this: weka.core.pmml.Array$ArrayType;

        $r0 = this.<weka.core.pmml.Array$ArrayType: java.lang.String m_stringVal>;

        return $r0;
    }


