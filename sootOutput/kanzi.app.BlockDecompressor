    public volatile java.lang.Object call() throws java.lang.Exception
    {
        kanzi.app.BlockDecompressor this;
        java.lang.Integer $r0;

        this := @this: kanzi.app.BlockDecompressor;

        $r0 = virtualinvoke this.<kanzi.app.BlockDecompressor: java.lang.Integer call()>();

        return $r0;
    }

    public java.lang.Integer call()
    {
        kanzi.app.BlockDecompressor this;
        kanzi.Event evt, evt, evt, evt, evt, evt#408, evt#445, tmp$1568659786, tmp$567815887, tmp$1712877981, tmp$1458939324, tmp$1097785162, tmp$1613333967, tmp$1303991023;
        kanzi.Listener[] array, array, array, array, array, $r33, $r123, $r144, $r154, $r166, array#417, $r179, array#454, $r189;
        java.io.File output, tmp$1848496765, tmp$972188031;
        java.nio.file.Path path1, path2, $r48, $r52;
        java.io.InputStream is, $r80;
        java.util.HashMap ctx, tmp$1492988146;
        java.util.Iterator l6;
        kanzi.Listener bl;
        long before, after, delta, read#70, $l12, $l14, $l16, $l20, $l24, $l27, $l30, $l32, $l34, $l35, $l38, $l39, $l40;
        kanzi.SliceByteArray sa, tmp$56227667;
        int decoded, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i28, $i29, $i31, $i33, $i36, $i41;
        java.lang.Exception e, $r55, e#149, $r92, e#230, $r100, e#243, $r127, $r168, e#422;
        java.io.IOException l11, l7, l14, $r68, e#172, $r116, l10#283, $r137, $r147, $r159, l9#397, $r172, l9#434, $r182;
        java.lang.Throwable l13, $r181;
        boolean $z0, printFlag#5, $z1, $z2, $z3, printFlag#75, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r14, $r15, $r18, $r19, $r22, $r23, $r24, $r26, $r58, $r60, $r61, $r63, $r71, $r73, $r74, $r76, $r95, $r97, $r103, $r105, $r106, $r108, $r130, $r132, $r133, $r193, $r194, $r195, $r198, $r200, $r203, $r204, $r207, $r209, $r210, $r211, $r212, $r213, $r214, $r217, $r218, tmp$999624880, tmp$150766979, tmp$13369027, tmp$1544255087, tmp$1393895411, tmp$273150695, tmp$1301810574, tmp$712830195, tmp$1815386185, tmp$1606589081, tmp$713675482, tmp$94495976, tmp$1991135274, tmp$971829667, tmp$89648828;
        java.lang.String $r3, $r6, $r9, $r12, $r16, $r20, $r25, $r27, $r35, $r37, $r40, $r46, $r50, $r59, $r62, $r64, $r67, $r72, $r75, $r77, $r79, $r82, $r96, $r98, $r104, $r107, $r109, $r131, $r134, $r136, $r158, $r171, $r196, $r201, $r205, $r215, $r219;
        java.util.List $r28, $r31, $r32, $r89, $r117, $r121, $r122, $r138, $r142, $r143, $r148, $r152, $r153, $r160, $r164, $r165, $r173, $r177, $r178, $r183, $r187, $r188;
        kanzi.Event$Type $r30, $r119, $r140, $r150, $r162, $r175, $r185;
        java.lang.Object[] $r34, $r124, $r145, $r155, $r167, $r180, $r190;
        java.io.PrintStream $r38, $r41, $r43, $r53, $r56, $r69, $r93, $r101, $r115, $r128, $r135, $r157, $r169, $r170;
        java.lang.Integer $r42, $r44, $r54, $r65, $r78, $r86, $r99, $r110, l9#279, l10#333, l8#393, l8#430, $r221;
        java.nio.file.FileSystem $r45, $r49;
        java.lang.String[] $r47, $r51;
        java.util.concurrent.ExecutorService $r84;
        java.lang.Object $r90;
        kanzi.io.CompressedInputStream $r91, $r113, $r120, $r141, $r151, $r163, $r176, $r186, $r199, $r208, tmp$426341557;
        byte[] $r112, $r114, $r126, $r146;
        java.io.OutputStream $r125;
        kanzi.io.IOException $r156, e#386;
        byte $b37;
        kanzi.io.NullOutputStream tmp$335641238;
        java.io.FileOutputStream tmp$48777412;
        java.io.FileInputStream tmp$1860808908;

        this := @this: kanzi.app.BlockDecompressor;

        $i0 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        if $i0 <= 2 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        printFlag#5 = $z0;

        $i1 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        if $i1 < 1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>("Kanzi 1.2 (C) 2017,  Frederic Langlet", $z1);

        tmp$999624880 = new java.lang.StringBuilder;

        specialinvoke tmp$999624880.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke tmp$999624880.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input file name set to \'");

        $r3 = this.<kanzi.app.BlockDecompressor: java.lang.String inputName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r6, printFlag#5);

        tmp$150766979 = new java.lang.StringBuilder;

        specialinvoke tmp$150766979.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke tmp$150766979.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output file name set to \'");

        $r9 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r12, printFlag#5);

        tmp$13369027 = new java.lang.StringBuilder;

        specialinvoke tmp$13369027.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke tmp$13369027.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verbosity set to ");

        $i2 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r16, printFlag#5);

        tmp$1544255087 = new java.lang.StringBuilder;

        specialinvoke tmp$1544255087.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke tmp$1544255087.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Overwrite set to ");

        $z2 = this.<kanzi.app.BlockDecompressor: boolean overwrite>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r20, printFlag#5);

        $i3 = this.<kanzi.app.BlockDecompressor: int jobs>;

        if $i3 <= 0 goto label07;

        tmp$1393895411 = new java.lang.StringBuilder;

        specialinvoke tmp$1393895411.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke tmp$1393895411.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ");

        $i4 = this.<kanzi.app.BlockDecompressor: int jobs>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" job");

        $i5 = this.<kanzi.app.BlockDecompressor: int jobs>;

        if $i5 <= 1 goto label05;

        $r25 = "s";

        goto label06;

     label05:
        $r25 = "";

     label06:
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r27, printFlag#5);

     label07:
        read#70 = 0L;

        $i6 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        if $i6 <= 1 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        printFlag#75 = $z3;

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>("Decoding ...", printFlag#75);

        $r28 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i7 = interfaceinvoke $r28.<java.util.List: int size()>();

        if $i7 <= 0 goto label10;

        tmp$1568659786 = new kanzi.Event;

        $r30 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_START>;

        specialinvoke tmp$1568659786.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r30, -1, 0L);

        evt = tmp$1568659786;

        $r31 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r32 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i8 = interfaceinvoke $r32.<java.util.List: int size()>();

        $r33 = newarray (kanzi.Listener)[$i8];

        $r34 = interfaceinvoke $r31.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r33);

        array = (kanzi.Listener[]) $r34;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label10:
        $r35 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $z4 = virtualinvoke $r35.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NONE");

        if $z4 == 0 goto label11;

        tmp$335641238 = new kanzi.io.NullOutputStream;

        specialinvoke tmp$335641238.<kanzi.io.NullOutputStream: void <init>()>();

        this.<kanzi.app.BlockDecompressor: java.io.OutputStream os> = tmp$335641238;

        goto label23;

     label11:
        $r37 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $z5 = virtualinvoke $r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STDOUT");

        if $z5 == 0 goto label12;

        $r38 = <java.lang.System: java.io.PrintStream out>;

        this.<kanzi.app.BlockDecompressor: java.io.OutputStream os> = $r38;

        goto label23;

     label12:
        tmp$1848496765 = new java.io.File;

        $r40 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        specialinvoke tmp$1848496765.<java.io.File: void <init>(java.lang.String)>($r40);

        output = tmp$1848496765;

        $z6 = virtualinvoke output.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label18;

        $z7 = virtualinvoke output.<java.io.File: boolean isDirectory()>();

        if $z7 == 0 goto label14;

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("The output file is a directory");

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-6);

     label13:
        return $r42;

     label14:
        $z8 = this.<kanzi.app.BlockDecompressor: boolean overwrite>;

        if $z8 != 0 goto label16;

        $r43 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("The output file exists and the \'force\' command line option has not been provided");

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7);

     label15:
        return $r44;

     label16:
        $r45 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        $r46 = this.<kanzi.app.BlockDecompressor: java.lang.String inputName>;

        $r47 = newarray (java.lang.String)[0];

        $r48 = virtualinvoke $r45.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r46, $r47);

        path1 = interfaceinvoke $r48.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        $r49 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        $r50 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $r51 = newarray (java.lang.String)[0];

        $r52 = virtualinvoke $r49.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r50, $r51);

        path2 = interfaceinvoke $r52.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        $z9 = interfaceinvoke path1.<java.nio.file.Path: boolean equals(java.lang.Object)>(path2);

        if $z9 == 0 goto label18;

        $r53 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("The input and output files must be different");

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

     label17:
        return $r54;

     label18:
        goto label20;

     label19:
        $r55 := @caughtexception;

        e#149 = $r55;

        $r56 = <java.lang.System: java.io.PrintStream err>;

        tmp$273150695 = new java.lang.StringBuilder;

        specialinvoke tmp$273150695.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke tmp$273150695.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open output file \'");

        $r59 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for writing: ");

        $r62 = virtualinvoke e#149.<java.lang.Exception: java.lang.String getMessage()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r64);

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

        return $r65;

     label20:
        tmp$48777412 = new java.io.FileOutputStream;

        $r67 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        specialinvoke tmp$48777412.<java.io.FileOutputStream: void <init>(java.lang.String)>($r67);

        this.<kanzi.app.BlockDecompressor: java.io.OutputStream os> = tmp$48777412;

     label21:
        goto label23;

     label22:
        $r68 := @caughtexception;

        e#172 = $r68;

        $r69 = <java.lang.System: java.io.PrintStream err>;

        tmp$1301810574 = new java.lang.StringBuilder;

        specialinvoke tmp$1301810574.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke tmp$1301810574.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open output file \'");

        $r72 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for writing: ");

        $r75 = virtualinvoke e#172.<java.io.IOException: java.lang.String getMessage()>();

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r77);

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8);

        return $r78;

     label23:
        $r79 = this.<kanzi.app.BlockDecompressor: java.lang.String inputName>;

        $z10 = virtualinvoke $r79.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STDIN");

        if $z10 == 0 goto label24;

        $r80 = <java.lang.System: java.io.InputStream in>;

        goto label25;

     label24:
        tmp$1860808908 = new java.io.FileInputStream;

        $r80 = tmp$1860808908;

        tmp$972188031 = new java.io.File;

        $r82 = this.<kanzi.app.BlockDecompressor: java.lang.String inputName>;

        specialinvoke tmp$972188031.<java.io.File: void <init>(java.lang.String)>($r82);

        specialinvoke tmp$1860808908.<java.io.FileInputStream: void <init>(java.io.File)>(tmp$972188031);

     label25:
        is = $r80;

     label26:
        tmp$1492988146 = new java.util.HashMap;

        specialinvoke tmp$1492988146.<java.util.HashMap: void <init>()>();

        ctx = tmp$1492988146;

        $r84 = this.<kanzi.app.BlockDecompressor: java.util.concurrent.ExecutorService pool>;

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pool", $r84);

        $i9 = this.<kanzi.app.BlockDecompressor: int jobs>;

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        interfaceinvoke ctx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jobs", $r86);

        tmp$426341557 = new kanzi.io.CompressedInputStream;

        specialinvoke tmp$426341557.<kanzi.io.CompressedInputStream: void <init>(java.io.InputStream,java.util.Map)>(is, ctx);

        this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis> = tmp$426341557;

        $r89 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        l6 = interfaceinvoke $r89.<java.util.List: java.util.Iterator iterator()>();

     label27:
        $z11 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label28;

        $r90 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        bl = (kanzi.Listener) $r90;

        $r91 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        virtualinvoke $r91.<kanzi.io.CompressedInputStream: boolean addListener(kanzi.Listener)>(bl);

        goto label27;

     label28:
        goto label31;

     label29:
        $r92 := @caughtexception;

        e#230 = $r92;

        $r93 = <java.lang.System: java.io.PrintStream err>;

        tmp$712830195 = new java.lang.StringBuilder;

        specialinvoke tmp$712830195.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke tmp$712830195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create compressed stream: ");

        $r96 = virtualinvoke e#230.<java.lang.Exception: java.lang.String getMessage()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r98);

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-5);

     label30:
        return $r99;

     label31:
        goto label33;

     label32:
        $r100 := @caughtexception;

        e#243 = $r100;

        $r101 = <java.lang.System: java.io.PrintStream err>;

        tmp$1815386185 = new java.lang.StringBuilder;

        specialinvoke tmp$1815386185.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke tmp$1815386185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open input file \'");

        $r104 = this.<kanzi.app.BlockDecompressor: java.lang.String inputName>;

        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r107 = virtualinvoke e#243.<java.lang.Exception: java.lang.String getMessage()>();

        $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r109);

        $r110 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10);

        return $r110;

     label33:
        before = staticinvoke <java.lang.System: long nanoTime()>();

     label34:
        tmp$56227667 = new kanzi.SliceByteArray;

        $r112 = newarray (byte)[32768];

        specialinvoke tmp$56227667.<kanzi.SliceByteArray: void <init>(byte[],int)>($r112, 0);

        sa = tmp$56227667;

     label35:
        $r113 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $r114 = sa.<kanzi.SliceByteArray: byte[] array>;

        $i10 = sa.<kanzi.SliceByteArray: int length>;

        decoded = virtualinvoke $r113.<kanzi.io.CompressedInputStream: int read(byte[],int,int)>($r114, 0, $i10);

        if decoded >= 0 goto label42;

        $r115 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>("Reached end of stream");

        l9#279 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-11);

     label36:
        virtualinvoke this.<kanzi.app.BlockDecompressor: void dispose()>();

     label37:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label38:
        goto label40;

     label39:
        $r116 := @caughtexception;

        l10#283 = $r116;

     label40:
        $r117 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i11 = interfaceinvoke $r117.<java.util.List: int size()>();

        if $i11 <= 0 goto label41;

        tmp$567815887 = new kanzi.Event;

        $r119 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_END>;

        $r120 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l12 = virtualinvoke $r120.<kanzi.io.CompressedInputStream: long getRead()>();

        specialinvoke tmp$567815887.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r119, -1, $l12);

        evt = tmp$567815887;

        $r121 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r122 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i13 = interfaceinvoke $r122.<java.util.List: int size()>();

        $r123 = newarray (kanzi.Listener)[$i13];

        $r124 = interfaceinvoke $r121.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r123);

        array = (kanzi.Listener[]) $r124;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label41:
        return l9#279;

     label42:
        if decoded <= 0 goto label43;

        $r125 = this.<kanzi.app.BlockDecompressor: java.io.OutputStream os>;

        $r126 = sa.<kanzi.SliceByteArray: byte[] array>;

        virtualinvoke $r125.<java.io.OutputStream: void write(byte[],int,int)>($r126, 0, decoded);

        $l14 = (long) decoded;

        read#70 = read#70 + $l14;

     label43:
        goto label51;

     label44:
        $r127 := @caughtexception;

        e = $r127;

        $r128 = <java.lang.System: java.io.PrintStream err>;

        tmp$1606589081 = new java.lang.StringBuilder;

        specialinvoke tmp$1606589081.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke tmp$1606589081.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write decompressed block to file \'");

        $r131 = this.<kanzi.app.BlockDecompressor: java.lang.String outputName>;

        $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r128.<java.io.PrintStream: void print(java.lang.String)>($r134);

        $r135 = <java.lang.System: java.io.PrintStream err>;

        $r136 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r135.<java.io.PrintStream: void println(java.lang.String)>($r136);

        l10#333 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-11);

     label45:
        virtualinvoke this.<kanzi.app.BlockDecompressor: void dispose()>();

     label46:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label47:
        goto label49;

     label48:
        $r137 := @caughtexception;

        l11 = $r137;

     label49:
        $r138 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i15 = interfaceinvoke $r138.<java.util.List: int size()>();

        if $i15 <= 0 goto label50;

        tmp$1712877981 = new kanzi.Event;

        $r140 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_END>;

        $r141 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l16 = virtualinvoke $r141.<kanzi.io.CompressedInputStream: long getRead()>();

        specialinvoke tmp$1712877981.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r140, -1, $l16);

        evt = tmp$1712877981;

        $r142 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r143 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i17 = interfaceinvoke $r143.<java.util.List: int size()>();

        $r144 = newarray (kanzi.Listener)[$i17];

        $r145 = interfaceinvoke $r142.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r144);

        array = (kanzi.Listener[]) $r145;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label50:
        return l10#333;

     label51:
        $r146 = sa.<kanzi.SliceByteArray: byte[] array>;

        $i18 = lengthof $r146;

        if decoded == $i18 goto label35;

     label52:
        virtualinvoke this.<kanzi.app.BlockDecompressor: void dispose()>();

     label53:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label54:
        goto label56;

     label55:
        $r147 := @caughtexception;

        l7 = $r147;

     label56:
        $r148 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i19 = interfaceinvoke $r148.<java.util.List: int size()>();

        if $i19 <= 0 goto label81;

        tmp$1458939324 = new kanzi.Event;

        $r150 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_END>;

        $r151 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l20 = virtualinvoke $r151.<kanzi.io.CompressedInputStream: long getRead()>();

        specialinvoke tmp$1458939324.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r150, -1, $l20);

        evt = tmp$1458939324;

        $r152 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r153 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i21 = interfaceinvoke $r153.<java.util.List: int size()>();

        $r154 = newarray (kanzi.Listener)[$i21];

        $r155 = interfaceinvoke $r152.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r154);

        array = (kanzi.Listener[]) $r155;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

        goto label81;

     label57:
        $r156 := @caughtexception;

     label58:
        e#386 = $r156;

        $r157 = <java.lang.System: java.io.PrintStream err>;

        $r158 = virtualinvoke e#386.<kanzi.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r157.<java.io.PrintStream: void println(java.lang.String)>($r158);

        $i22 = virtualinvoke e#386.<kanzi.io.IOException: int getErrorCode()>();

        l8#393 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

     label59:
        virtualinvoke this.<kanzi.app.BlockDecompressor: void dispose()>();

     label60:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label61:
        goto label63;

     label62:
        $r159 := @caughtexception;

        l9#397 = $r159;

     label63:
        $r160 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i23 = interfaceinvoke $r160.<java.util.List: int size()>();

        if $i23 <= 0 goto label64;

        tmp$1097785162 = new kanzi.Event;

        $r162 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_END>;

        $r163 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l24 = virtualinvoke $r163.<kanzi.io.CompressedInputStream: long getRead()>();

        specialinvoke tmp$1097785162.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r162, -1, $l24);

        evt#408 = tmp$1097785162;

        $r164 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r165 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i25 = interfaceinvoke $r165.<java.util.List: int size()>();

        $r166 = newarray (kanzi.Listener)[$i25];

        $r167 = interfaceinvoke $r164.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r166);

        array#417 = (kanzi.Listener[]) $r167;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array#417, evt#408);

     label64:
        return l8#393;

     label65:
        $r168 := @caughtexception;

     label66:
        e#422 = $r168;

        $r169 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r169.<java.io.PrintStream: void println(java.lang.String)>("An unexpected condition happened. Exiting ...");

        $r170 = <java.lang.System: java.io.PrintStream err>;

        $r171 = virtualinvoke e#422.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r170.<java.io.PrintStream: void println(java.lang.String)>($r171);

        l8#430 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-127);

     label67:
        virtualinvoke this.<kanzi.app.BlockDecompressor: void dispose()>();

     label68:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label69:
        goto label71;

     label70:
        $r172 := @caughtexception;

        l9#434 = $r172;

     label71:
        $r173 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i26 = interfaceinvoke $r173.<java.util.List: int size()>();

        if $i26 <= 0 goto label72;

        tmp$1613333967 = new kanzi.Event;

        $r175 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_END>;

        $r176 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l27 = virtualinvoke $r176.<kanzi.io.CompressedInputStream: long getRead()>();

        specialinvoke tmp$1613333967.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r175, -1, $l27);

        evt#445 = tmp$1613333967;

        $r177 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r178 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i28 = interfaceinvoke $r178.<java.util.List: int size()>();

        $r179 = newarray (kanzi.Listener)[$i28];

        $r180 = interfaceinvoke $r177.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r179);

        array#454 = (kanzi.Listener[]) $r180;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array#454, evt#445);

     label72:
        return l8#430;

     label73:
        $r181 := @caughtexception;

     label74:
        l13 = $r181;

     label75:
        virtualinvoke this.<kanzi.app.BlockDecompressor: void dispose()>();

     label76:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label77:
        goto label79;

     label78:
        $r182 := @caughtexception;

        l14 = $r182;

     label79:
        $r183 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i29 = interfaceinvoke $r183.<java.util.List: int size()>();

        if $i29 <= 0 goto label80;

        tmp$1303991023 = new kanzi.Event;

        $r185 = <kanzi.Event$Type: kanzi.Event$Type DECOMPRESSION_END>;

        $r186 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l30 = virtualinvoke $r186.<kanzi.io.CompressedInputStream: long getRead()>();

        specialinvoke tmp$1303991023.<kanzi.Event: void <init>(kanzi.Event$Type,int,long)>($r185, -1, $l30);

        evt = tmp$1303991023;

        $r187 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $r188 = this.<kanzi.app.BlockDecompressor: java.util.List listeners>;

        $i31 = interfaceinvoke $r188.<java.util.List: int size()>();

        $r189 = newarray (kanzi.Listener)[$i31];

        $r190 = interfaceinvoke $r187.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r189);

        array = (kanzi.Listener[]) $r190;

        staticinvoke <kanzi.app.BlockDecompressor: void notifyListeners(kanzi.Listener[],kanzi.Event)>(array, evt);

     label80:
        throw l13;

     label81:
        after = staticinvoke <java.lang.System: long nanoTime()>();

        $l32 = after - before;

        delta = $l32 / 1000000L;

        $i33 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        if $i33 < 1 goto label82;

        $z13 = 1;

        goto label83;

     label82:
        $z13 = 0;

     label83:
        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>("", $z13);

        tmp$713675482 = new java.lang.StringBuilder;

        specialinvoke tmp$713675482.<java.lang.StringBuilder: void <init>()>();

        $r193 = virtualinvoke tmp$713675482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decoding:          ");

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delta);

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r196, printFlag#75);

        tmp$94495976 = new java.lang.StringBuilder;

        specialinvoke tmp$94495976.<java.lang.StringBuilder: void <init>()>();

        $r198 = virtualinvoke tmp$94495976.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input size:        ");

        $r199 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l34 = virtualinvoke $r199.<kanzi.io.CompressedInputStream: long getRead()>();

        $r200 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l34);

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r201, printFlag#75);

        tmp$1991135274 = new java.lang.StringBuilder;

        specialinvoke tmp$1991135274.<java.lang.StringBuilder: void <init>()>();

        $r203 = virtualinvoke tmp$1991135274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output size:       ");

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(read#70);

        $r205 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r205, printFlag#75);

        tmp$971829667 = new java.lang.StringBuilder;

        specialinvoke tmp$971829667.<java.lang.StringBuilder: void <init>()>();

        $r207 = virtualinvoke tmp$971829667.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decoding: ");

        $r208 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        $l35 = virtualinvoke $r208.<kanzi.io.CompressedInputStream: long getRead()>();

        $r209 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(read#70);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes in ");

        $r213 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delta);

        $r214 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.String toString()>();

        $i36 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        if $i36 != 1 goto label84;

        $z14 = 1;

        goto label85;

     label84:
        $z14 = 0;

     label85:
        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r215, $z14);

        $b37 = delta cmp 0L;

        if $b37 <= 0 goto label86;

        tmp$89648828 = new java.lang.StringBuilder;

        specialinvoke tmp$89648828.<java.lang.StringBuilder: void <init>()>();

        $r217 = virtualinvoke tmp$89648828.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throughput (KB/s): ");

        $l38 = read#70 * 1000L;

        $l39 = $l38 >> 10;

        $l40 = $l39 / delta;

        $r218 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l40);

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>($r219, printFlag#75);

     label86:
        $i41 = this.<kanzi.app.BlockDecompressor: int verbosity>;

        if $i41 < 1 goto label87;

        $z15 = 1;

        goto label88;

     label87:
        $z15 = 0;

     label88:
        staticinvoke <kanzi.app.BlockDecompressor: void printOut(java.lang.String,boolean)>("", $z15);

        $r221 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r221;

        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label19;
        catch java.lang.Exception from label16 to label17 with label19;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Exception from label26 to label28 with label29;
        catch java.lang.Exception from label23 to label30 with label32;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.lang.Exception from label42 to label43 with label44;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.io.IOException from label53 to label54 with label55;
        catch kanzi.io.IOException from label34 to label36 with label57;
        catch kanzi.io.IOException from label42 to label45 with label57;
        catch kanzi.io.IOException from label51 to label52 with label57;
        catch java.io.IOException from label60 to label61 with label62;
        catch java.lang.Exception from label34 to label36 with label65;
        catch java.lang.Exception from label42 to label45 with label65;
        catch java.lang.Exception from label51 to label52 with label65;
        catch java.io.IOException from label68 to label69 with label70;
        catch java.lang.Throwable from label34 to label36 with label73;
        catch java.lang.Throwable from label42 to label45 with label73;
        catch java.lang.Throwable from label51 to label52 with label73;
        catch java.lang.Throwable from label58 to label59 with label73;
        catch java.lang.Throwable from label66 to label67 with label73;
        catch java.io.IOException from label76 to label77 with label78;
        catch java.lang.Throwable from label74 to label75 with label73;
    }

    private static void printOut(java.lang.String, boolean)
    {
        java.lang.String msg;
        boolean print;
        java.io.PrintStream $r0;

        msg := @parameter0: java.lang.String;

        print := @parameter1: boolean;

        if print != 1 goto label1;

        if msg == null goto label1;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(msg);

     label1:
        return;
    }

    static void notifyListeners(kanzi.Listener[], kanzi.Event)
    {
        kanzi.Listener[] listeners, l2;
        kanzi.Event evt;
        int l3, l4#5;
        kanzi.Listener bl;
        java.lang.Exception l6, $r0;

        listeners := @parameter0: kanzi.Listener[];

        evt := @parameter1: kanzi.Event;

        l2 = listeners;

        l3 = lengthof l2;

        l4#5 = 0;

     label1:
        if l4#5 >= l3 goto label6;

        bl = l2[l4#5];

     label2:
        interfaceinvoke bl.<kanzi.Listener: void processEvent(kanzi.Event)>(evt);

     label3:
        goto label5;

     label4:
        $r0 := @caughtexception;

        l6 = $r0;

     label5:
        l4#5 = l4#5 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void dispose()
    {
        kanzi.app.BlockDecompressor this;
        java.io.IOException ioe, l1, $r2, $r11;
        kanzi.io.CompressedInputStream $r0, $r1;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        java.io.OutputStream $r9, $r10;
        java.util.concurrent.ExecutorService $r12, $r13;
        boolean $z0;

        this := @this: kanzi.app.BlockDecompressor;

     label1:
        $r0 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        if $r0 == null goto label2;

        $r1 = this.<kanzi.app.BlockDecompressor: kanzi.io.CompressedInputStream cis>;

        virtualinvoke $r1.<kanzi.io.CompressedInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        ioe = $r2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decompression failure: ");

        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        staticinvoke <java.lang.System: void exit(int)>(-12);

     label4:
        $r9 = this.<kanzi.app.BlockDecompressor: java.io.OutputStream os>;

        if $r9 == null goto label5;

        $r10 = this.<kanzi.app.BlockDecompressor: java.io.OutputStream os>;

        virtualinvoke $r10.<java.io.OutputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        l1 = $r11;

     label7:
        $r12 = this.<kanzi.app.BlockDecompressor: java.util.concurrent.ExecutorService pool>;

        if $r12 == null goto label8;

        $z0 = this.<kanzi.app.BlockDecompressor: boolean ownPool>;

        if $z0 != 1 goto label8;

        $r13 = this.<kanzi.app.BlockDecompressor: java.util.concurrent.ExecutorService pool>;

        interfaceinvoke $r13.<java.util.concurrent.ExecutorService: void shutdown()>();

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }


