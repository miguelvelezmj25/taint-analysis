    public static weka.core.converters.AbstractFileSaver getSaverForFile(java.lang.String)
    {
        java.lang.String filename;
        java.util.Hashtable $r0;
        java.lang.Object $r1;
        weka.core.converters.AbstractFileSaver $r2;

        filename := @parameter0: java.lang.String;

        $r0 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers>;

        $r1 = staticinvoke <weka.core.converters.ConverterUtils: java.lang.Object getConverterForFile(java.lang.String,java.util.Hashtable)>(filename, $r0);

        $r2 = (weka.core.converters.AbstractFileSaver) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r25, $r28, $r29, $r32, $r33, $r36, $r37, $r40, $r41, $r44;
        java.lang.Class $r1, $r5, $r9, $r13, $r17, $r21, $r26, $r30, $r34, $r38, $r42;
        java.lang.String $r2, $r6, $r10, $r14, $r18, $r22, $r24, $r27, $r31, $r35, $r39, $r43, $r45;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "weka/core/converters/ArffLoader";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = class "weka/core/converters/CSVLoader";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r9 = class "weka/core/converters/DatabaseConverter";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r13 = class "weka/core/converters/SerializedInstancesLoader";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r17 = class "weka/core/converters/TextDirectoryLoader";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r21 = class "weka/core/converters/XRFFLoader";

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS> = $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = class "weka/core/converters/ArffSaver";

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r30 = class "weka/core/converters/CSVSaver";

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r34 = class "weka/core/converters/DatabaseConverter";

        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r38 = class "weka/core/converters/SerializedInstancesSaver";

        $r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r42 = class "weka/core/converters/XRFFSaver";

        $r43 = virtualinvoke $r42.<java.lang.Class: java.lang.String getName()>();

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_SAVERS> = $r45;

        staticinvoke <weka.core.converters.ConverterUtils: void initialize()>();

        return;
    }

    protected static java.lang.Object getConverterForFile(java.lang.String, java.util.Hashtable)
    {
        java.lang.String filename, $r0, extension#13, $r1, extension#31;
        java.util.Hashtable ht;
        java.lang.Object result#2;
        int index#6, $i0, index#26;
        boolean $z0;

        filename := @parameter0: java.lang.String;

        ht := @parameter1: java.util.Hashtable;

        result#2 = null;

        index#6 = virtualinvoke filename.<java.lang.String: int lastIndexOf(int)>(46);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(index#6);

        if index#6 <= -1 goto label1;

        $r0 = virtualinvoke filename.<java.lang.String: java.lang.String substring(int)>(index#6);

        extension#13 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        result#2 = staticinvoke <weka.core.converters.ConverterUtils: java.lang.Object getConverterForExtension(java.lang.String,java.util.Hashtable)>(extension#13, ht);

        $z0 = virtualinvoke extension#13.<java.lang.String: boolean equals(java.lang.Object)>(".gz");

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label1;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(result#2);

        if result#2 != null goto label1;

        $i0 = index#6 - 1;

        index#26 = virtualinvoke filename.<java.lang.String: int lastIndexOf(int,int)>(46, $i0);

        $r1 = virtualinvoke filename.<java.lang.String: java.lang.String substring(int)>(index#26);

        extension#31 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        result#2 = staticinvoke <weka.core.converters.ConverterUtils: java.lang.Object getConverterForExtension(java.lang.String,java.util.Hashtable)>(extension#31, ht);

     label1:
        return result#2;
    }

    public static void initialize()
    {
        weka.gui.GenericPropertiesCreator creator, $r3;
        java.lang.Exception e, $r70;
        java.lang.Throwable l3, $r111;
        java.util.Hashtable $r0, $r1, $r2, $r11, $r21, $r29, $r30, $r36, $r41, $r42, $r50, $r57, $r58, $r64, $r69, $r71, $r77, $r82, $r83, $r91, $r98, $r99, $r105, $r110, $r112, $r118, $r123, $r124, $r132, $r139, $r140, $r146, $r151;
        java.util.Properties props#8;
        java.lang.Class $r4, $r9, $r12, $r17, $r19, $r22, $r27, $r31, $r34, $r39, $r43, $r46, $r48, $r53, $r55, $r59, $r62, $r67, $r72, $r75, $r80, $r84, $r87, $r89, $r94, $r96, $r100, $r103, $r108, $r113, $r116, $r121, $r125, $r128, $r130, $r135, $r137, $r141, $r144, $r149;
        java.lang.String $r5, $r6, $r7, $r10, $r13, $r14, $r15, $r18, $r20, $r23, $r24, $r25, $r28, $r32, $r35, $r37, $r40, $r44, $r47, $r49, $r51, $r54, $r56, $r60, $r63, $r65, $r68, $r73, $r76, $r78, $r81, $r85, $r88, $r90, $r92, $r95, $r97, $r101, $r104, $r106, $r109, $r114, $r117, $r119, $r122, $r126, $r129, $r131, $r133, $r136, $r138, $r142, $r145, $r147, $r150;
        java.lang.String[] $r8, $r16, $r26, $r33, $r38, $r45, $r52, $r61, $r66, $r74, $r79, $r86, $r93, $r102, $r107, $r115, $r120, $r127, $r134, $r143, $r148;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.util.Vector classnames#61, classnames#85, classnames#117, classnames#143, classnames#167, classnames#199, classnames#224, classnames#248, classnames#280;

     label01:
        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r2;

        props#8 = staticinvoke <weka.gui.GenericPropertiesCreator: java.util.Properties getGlobalOutputProperties()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(props#8);

        if props#8 != null goto label02;

        $r3 = new weka.gui.GenericPropertiesCreator;

        specialinvoke $r3.<weka.gui.GenericPropertiesCreator: void <init>()>();

        creator = $r3;

        virtualinvoke creator.<weka.gui.GenericPropertiesCreator: void execute(boolean)>(0);

        props#8 = virtualinvoke creator.<weka.gui.GenericPropertiesCreator: java.util.Properties getOutputProperties()>();

     label02:
        $r4 = class "weka/core/converters/Loader";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r7 = virtualinvoke props#8.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r5, $r6);

        $r8 = newarray (java.lang.String)[1];

        $r9 = class "weka/core/converters/FileSourcedConverter";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r8[0] = $r10;

        $r11 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r7, $r8);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r11;

        $r12 = class "weka/core/converters/Loader";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r15 = virtualinvoke props#8.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r13, $r14);

        $r16 = newarray (java.lang.String)[2];

        $r17 = class "weka/core/converters/FileSourcedConverter";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r16[0] = $r18;

        $r19 = class "weka/core/converters/URLSourcedLoader";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $r16[1] = $r20;

        $r21 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r15, $r16);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r21;

        $r22 = class "weka/core/converters/Saver";

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        $r24 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_SAVERS>;

        $r25 = virtualinvoke props#8.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r23, $r24);

        $r26 = newarray (java.lang.String)[1];

        $r27 = class "weka/core/converters/FileSourcedConverter";

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r26[0] = $r28;

        $r29 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r25, $r26);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r29;

     label03:
        $r30 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders>;

        $i0 = virtualinvoke $r30.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if $i0 != 0 goto label05;

        $r31 = class "weka/core/converters/AbstractFileLoader";

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        classnames#61 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r32);

        $i1 = virtualinvoke classnames#61.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if $i1 <= 0 goto label04;

        $r33 = newarray (java.lang.String)[1];

        $r34 = class "weka/core/converters/FileSourcedConverter";

        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.String getName()>();

        $r33[0] = $r35;

        $r36 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#61, $r33);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r36;

        goto label05;

     label04:
        $r37 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r38 = newarray (java.lang.String)[1];

        $r39 = class "weka/core/converters/FileSourcedConverter";

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        $r38[0] = $r40;

        $r41 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r37, $r38);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r41;

     label05:
        $r42 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders>;

        $i2 = virtualinvoke $r42.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if $i2 != 0 goto label07;

        $r43 = class "weka/core/converters/AbstractFileLoader";

        $r44 = virtualinvoke $r43.<java.lang.Class: java.lang.String getName()>();

        classnames#85 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r44);

        $i3 = virtualinvoke classnames#85.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i3);

        if $i3 <= 0 goto label06;

        $r45 = newarray (java.lang.String)[2];

        $r46 = class "weka/core/converters/FileSourcedConverter";

        $r47 = virtualinvoke $r46.<java.lang.Class: java.lang.String getName()>();

        $r45[0] = $r47;

        $r48 = class "weka/core/converters/URLSourcedLoader";

        $r49 = virtualinvoke $r48.<java.lang.Class: java.lang.String getName()>();

        $r45[1] = $r49;

        $r50 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#85, $r45);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r50;

        goto label07;

     label06:
        $r51 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r52 = newarray (java.lang.String)[2];

        $r53 = class "weka/core/converters/FileSourcedConverter";

        $r54 = virtualinvoke $r53.<java.lang.Class: java.lang.String getName()>();

        $r52[0] = $r54;

        $r55 = class "weka/core/converters/URLSourcedLoader";

        $r56 = virtualinvoke $r55.<java.lang.Class: java.lang.String getName()>();

        $r52[1] = $r56;

        $r57 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r51, $r52);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r57;

     label07:
        $r58 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers>;

        $i4 = virtualinvoke $r58.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i4);

        if $i4 != 0 goto label24;

        $r59 = class "weka/core/converters/AbstractFileSaver";

        $r60 = virtualinvoke $r59.<java.lang.Class: java.lang.String getName()>();

        classnames#117 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r60);

        $i5 = virtualinvoke classnames#117.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i5);

        if $i5 <= 0 goto label08;

        $r61 = newarray (java.lang.String)[1];

        $r62 = class "weka/core/converters/FileSourcedConverter";

        $r63 = virtualinvoke $r62.<java.lang.Class: java.lang.String getName()>();

        $r61[0] = $r63;

        $r64 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#117, $r61);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r64;

        goto label24;

     label08:
        $r65 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_SAVERS>;

        $r66 = newarray (java.lang.String)[1];

        $r67 = class "weka/core/converters/FileSourcedConverter";

        $r68 = virtualinvoke $r67.<java.lang.Class: java.lang.String getName()>();

        $r66[0] = $r68;

        $r69 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r65, $r66);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r69;

        goto label24;

     label09:
        $r70 := @caughtexception;

     label10:
        e = $r70;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label11:
        $r71 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders>;

        $i6 = virtualinvoke $r71.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i6);

        if $i6 != 0 goto label13;

        $r72 = class "weka/core/converters/AbstractFileLoader";

        $r73 = virtualinvoke $r72.<java.lang.Class: java.lang.String getName()>();

        classnames#143 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r73);

        $i7 = virtualinvoke classnames#143.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i7);

        if $i7 <= 0 goto label12;

        $r74 = newarray (java.lang.String)[1];

        $r75 = class "weka/core/converters/FileSourcedConverter";

        $r76 = virtualinvoke $r75.<java.lang.Class: java.lang.String getName()>();

        $r74[0] = $r76;

        $r77 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#143, $r74);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r77;

        goto label13;

     label12:
        $r78 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r79 = newarray (java.lang.String)[1];

        $r80 = class "weka/core/converters/FileSourcedConverter";

        $r81 = virtualinvoke $r80.<java.lang.Class: java.lang.String getName()>();

        $r79[0] = $r81;

        $r82 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r78, $r79);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r82;

     label13:
        $r83 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders>;

        $i8 = virtualinvoke $r83.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i8);

        if $i8 != 0 goto label15;

        $r84 = class "weka/core/converters/AbstractFileLoader";

        $r85 = virtualinvoke $r84.<java.lang.Class: java.lang.String getName()>();

        classnames#167 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r85);

        $i9 = virtualinvoke classnames#167.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i9);

        if $i9 <= 0 goto label14;

        $r86 = newarray (java.lang.String)[2];

        $r87 = class "weka/core/converters/FileSourcedConverter";

        $r88 = virtualinvoke $r87.<java.lang.Class: java.lang.String getName()>();

        $r86[0] = $r88;

        $r89 = class "weka/core/converters/URLSourcedLoader";

        $r90 = virtualinvoke $r89.<java.lang.Class: java.lang.String getName()>();

        $r86[1] = $r90;

        $r91 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#167, $r86);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r91;

        goto label15;

     label14:
        $r92 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r93 = newarray (java.lang.String)[2];

        $r94 = class "weka/core/converters/FileSourcedConverter";

        $r95 = virtualinvoke $r94.<java.lang.Class: java.lang.String getName()>();

        $r93[0] = $r95;

        $r96 = class "weka/core/converters/URLSourcedLoader";

        $r97 = virtualinvoke $r96.<java.lang.Class: java.lang.String getName()>();

        $r93[1] = $r97;

        $r98 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r92, $r93);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r98;

     label15:
        $r99 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers>;

        $i10 = virtualinvoke $r99.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i10);

        if $i10 != 0 goto label24;

        $r100 = class "weka/core/converters/AbstractFileSaver";

        $r101 = virtualinvoke $r100.<java.lang.Class: java.lang.String getName()>();

        classnames#199 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r101);

        $i11 = virtualinvoke classnames#199.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i11);

        if $i11 <= 0 goto label16;

        $r102 = newarray (java.lang.String)[1];

        $r103 = class "weka/core/converters/FileSourcedConverter";

        $r104 = virtualinvoke $r103.<java.lang.Class: java.lang.String getName()>();

        $r102[0] = $r104;

        $r105 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#199, $r102);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r105;

        goto label24;

     label16:
        $r106 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_SAVERS>;

        $r107 = newarray (java.lang.String)[1];

        $r108 = class "weka/core/converters/FileSourcedConverter";

        $r109 = virtualinvoke $r108.<java.lang.Class: java.lang.String getName()>();

        $r107[0] = $r109;

        $r110 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r106, $r107);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r110;

        goto label24;

     label17:
        $r111 := @caughtexception;

        l3 = $r111;

        $r112 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders>;

        $i12 = virtualinvoke $r112.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i12);

        if $i12 != 0 goto label19;

        $r113 = class "weka/core/converters/AbstractFileLoader";

        $r114 = virtualinvoke $r113.<java.lang.Class: java.lang.String getName()>();

        classnames#224 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r114);

        $i13 = virtualinvoke classnames#224.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i13);

        if $i13 <= 0 goto label18;

        $r115 = newarray (java.lang.String)[1];

        $r116 = class "weka/core/converters/FileSourcedConverter";

        $r117 = virtualinvoke $r116.<java.lang.Class: java.lang.String getName()>();

        $r115[0] = $r117;

        $r118 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#224, $r115);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r118;

        goto label19;

     label18:
        $r119 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r120 = newarray (java.lang.String)[1];

        $r121 = class "weka/core/converters/FileSourcedConverter";

        $r122 = virtualinvoke $r121.<java.lang.Class: java.lang.String getName()>();

        $r120[0] = $r122;

        $r123 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r119, $r120);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders> = $r123;

     label19:
        $r124 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders>;

        $i14 = virtualinvoke $r124.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i14);

        if $i14 != 0 goto label21;

        $r125 = class "weka/core/converters/AbstractFileLoader";

        $r126 = virtualinvoke $r125.<java.lang.Class: java.lang.String getName()>();

        classnames#248 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r126);

        $i15 = virtualinvoke classnames#248.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i15);

        if $i15 <= 0 goto label20;

        $r127 = newarray (java.lang.String)[2];

        $r128 = class "weka/core/converters/FileSourcedConverter";

        $r129 = virtualinvoke $r128.<java.lang.Class: java.lang.String getName()>();

        $r127[0] = $r129;

        $r130 = class "weka/core/converters/URLSourcedLoader";

        $r131 = virtualinvoke $r130.<java.lang.Class: java.lang.String getName()>();

        $r127[1] = $r131;

        $r132 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#248, $r127);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r132;

        goto label21;

     label20:
        $r133 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_LOADERS>;

        $r134 = newarray (java.lang.String)[2];

        $r135 = class "weka/core/converters/FileSourcedConverter";

        $r136 = virtualinvoke $r135.<java.lang.Class: java.lang.String getName()>();

        $r134[0] = $r136;

        $r137 = class "weka/core/converters/URLSourcedLoader";

        $r138 = virtualinvoke $r137.<java.lang.Class: java.lang.String getName()>();

        $r134[1] = $r138;

        $r139 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r133, $r134);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders> = $r139;

     label21:
        $r140 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers>;

        $i16 = virtualinvoke $r140.<java.util.Hashtable: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i16);

        if $i16 != 0 goto label23;

        $r141 = class "weka/core/converters/AbstractFileSaver";

        $r142 = virtualinvoke $r141.<java.lang.Class: java.lang.String getName()>();

        classnames#280 = staticinvoke <weka.gui.GenericObjectEditor: java.util.Vector getClassnames(java.lang.String)>($r142);

        $i17 = virtualinvoke classnames#280.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i17);

        if $i17 <= 0 goto label22;

        $r143 = newarray (java.lang.String)[1];

        $r144 = class "weka/core/converters/FileSourcedConverter";

        $r145 = virtualinvoke $r144.<java.lang.Class: java.lang.String getName()>();

        $r143[0] = $r145;

        $r146 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(classnames#280, $r143);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r146;

        goto label23;

     label22:
        $r147 = <weka.core.converters.ConverterUtils: java.lang.String CORE_FILE_SAVERS>;

        $r148 = newarray (java.lang.String)[1];

        $r149 = class "weka/core/converters/FileSourcedConverter";

        $r150 = virtualinvoke $r149.<java.lang.Class: java.lang.String getName()>();

        $r148[0] = $r150;

        $r151 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.lang.String,java.lang.String[])>($r147, $r148);

        <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers> = $r151;

     label23:
        throw l3;

     label24:
        staticinvoke <weka.gui.ConverterFileChooser: void initDefaultFilters()>();

        return;

        catch java.lang.Exception from label01 to label03 with label09;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
    }

    protected static java.lang.Object getConverterForExtension(java.lang.String, java.util.Hashtable)
    {
        java.lang.String extension, classname;
        java.util.Hashtable ht;
        java.lang.Exception e, $r2;
        java.lang.Object result#2, $r0;
        java.lang.Class $r1;

        extension := @parameter0: java.lang.String;

        ht := @parameter1: java.util.Hashtable;

        result#2 = null;

        $r0 = virtualinvoke ht.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(extension);

        classname = (java.lang.String) $r0;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(classname);

        if classname == null goto label4;

     label1:
        $r1 = staticinvoke <weka.core.WekaPackageClassLoaderManager: java.lang.Class forName(java.lang.String)>(classname);

        result#2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        e = $r2;

        result#2 = null;

        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label4:
        return result#2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static java.util.Hashtable getFileConverters(java.lang.String, java.lang.String[])
    {
        java.lang.String classnames, $r1;
        java.lang.String[] intf, names;
        java.util.Vector list, $r0;
        int i#7, $i0;
        java.util.Hashtable $r2;

        classnames := @parameter0: java.lang.String;

        intf := @parameter1: java.lang.String[];

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        list = $r0;

        names = virtualinvoke classnames.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i#7 = 0;

     label1:
        $i0 = lengthof names;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#7);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#7 >= $i0 goto label2;

        $r1 = names[i#7];

        virtualinvoke list.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        i#7 = i#7 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Hashtable getFileConverters(java.util.Vector,java.lang.String[])>(list, intf);

        return $r2;
    }

    protected static java.util.Hashtable getFileConverters(java.util.Vector, java.lang.String[])
    {
        java.util.Vector classnames;
        java.lang.String[] intf, ext#31;
        java.util.Hashtable result, $r0;
        java.lang.String classname, $r2, $r5;
        int i#4, $i0, n#13, $i1, n#40, $i2;
        java.lang.Object $r1, $r3;
        boolean $z0;
        java.lang.Class cls#24;
        weka.core.converters.FileSourcedConverter converter#28;
        java.lang.Exception $r4;

        classnames := @parameter0: java.util.Vector;

        intf := @parameter1: java.lang.String[];

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        result = $r0;

        i#4 = 0;

     label01:
        $i0 = virtualinvoke classnames.<java.util.Vector: int size()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(i#4);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i0);

        if i#4 >= $i0 goto label11;

        $r1 = virtualinvoke classnames.<java.util.Vector: java.lang.Object get(int)>(i#4);

        classname = (java.lang.String) $r1;

        n#13 = 0;

     label02:
        $i1 = lengthof intf;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#13);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i1);

        if n#13 >= $i1 goto label04;

        $r2 = intf[n#13];

        $z0 = staticinvoke <weka.core.ClassDiscovery: boolean hasInterface(java.lang.String,java.lang.String)>($r2, classname);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 != 0 goto label03;

     label03:
        n#13 = n#13 + 1;

        goto label02;

     label04:
        cls#24 = staticinvoke <weka.core.WekaPackageClassLoaderManager: java.lang.Class forName(java.lang.String)>(classname);

        $r3 = virtualinvoke cls#24.<java.lang.Class: java.lang.Object newInstance()>();

        converter#28 = (weka.core.converters.FileSourcedConverter) $r3;

        ext#31 = interfaceinvoke converter#28.<weka.core.converters.FileSourcedConverter: java.lang.String[] getFileExtensions()>();

     label05:
        goto label07;

     label06:
        $r4 := @caughtexception;

        converter#28 = null;

        ext#31 = newarray (java.lang.String)[0];

     label07:
        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(converter#28);

        if converter#28 != null goto label08;

        goto label10;

     label08:
        n#40 = 0;

     label09:
        $i2 = lengthof ext#31;

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>(n#40);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($i2);

        if n#40 >= $i2 goto label10;

        $r5 = ext#31[n#40];

        virtualinvoke result.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, classname);

        n#40 = n#40 + 1;

        goto label09;

     label10:
        i#4 = i#4 + 1;

        goto label01;

     label11:
        return result;

        catch java.lang.Exception from label04 to label05 with label06;
    }

    public static java.util.Vector getFileSavers()
    {
        java.util.Hashtable $r0;
        java.util.Vector $r1;

        $r0 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileSavers>;

        $r1 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Vector getConverters(java.util.Hashtable)>($r0);

        return $r1;
    }

    public static java.util.Vector getFileLoaders()
    {
        java.util.Hashtable $r0;
        java.util.Vector $r1;

        $r0 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders>;

        $r1 = staticinvoke <weka.core.converters.ConverterUtils: java.util.Vector getConverters(java.util.Hashtable)>($r0);

        return $r1;
    }

    protected static java.util.Vector getConverters(java.util.Hashtable)
    {
        java.util.Hashtable ht;
        java.util.Vector result, $r0;
        java.util.Enumeration enm;
        java.lang.String converter;
        boolean $z0, $z1;
        java.lang.Object $r1;

        ht := @parameter0: java.util.Hashtable;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        result = $r0;

        enm = virtualinvoke ht.<java.util.Hashtable: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke enm.<java.util.Enumeration: boolean hasMoreElements()>();

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z0);

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke enm.<java.util.Enumeration: java.lang.Object nextElement()>();

        converter = (java.lang.String) $r1;

        $z1 = virtualinvoke result.<java.util.Vector: boolean contains(java.lang.Object)>(converter);

        staticinvoke <edu.cmu.cs.mvelezce.analysis.option.Sink: void sink(java.lang.Object)>($z1);

        if $z1 != 0 goto label1;

        virtualinvoke result.<java.util.Vector: boolean add(java.lang.Object)>(converter);

        goto label1;

     label2:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(result);

        return result;
    }

    public static weka.core.converters.AbstractFileLoader getURLLoaderForFile(java.lang.String)
    {
        java.lang.String filename;
        java.util.Hashtable $r0;
        java.lang.Object $r1;
        weka.core.converters.AbstractFileLoader $r2;

        filename := @parameter0: java.lang.String;

        $r0 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_URLFileLoaders>;

        $r1 = staticinvoke <weka.core.converters.ConverterUtils: java.lang.Object getConverterForFile(java.lang.String,java.util.Hashtable)>(filename, $r0);

        $r2 = (weka.core.converters.AbstractFileLoader) $r1;

        return $r2;
    }

    public static weka.core.converters.AbstractFileLoader getLoaderForFile(java.lang.String)
    {
        java.lang.String filename;
        java.util.Hashtable $r0;
        java.lang.Object $r1;
        weka.core.converters.AbstractFileLoader $r2;

        filename := @parameter0: java.lang.String;

        $r0 = <weka.core.converters.ConverterUtils: java.util.Hashtable m_FileLoaders>;

        $r1 = staticinvoke <weka.core.converters.ConverterUtils: java.lang.Object getConverterForFile(java.lang.String,java.util.Hashtable)>(filename, $r0);

        $r2 = (weka.core.converters.AbstractFileLoader) $r1;

        return $r2;
    }


