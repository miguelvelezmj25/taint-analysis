    public void <init>(long, java.lang.String)
    {
        com.sleepycat.je.recovery.CheckpointStart this;
        long id, $l0;
        java.lang.String invoker;
        java.util.Calendar cal;
        com.sleepycat.je.utilint.Timestamp $r0;
        java.util.Date $r1;

        this := @this: com.sleepycat.je.recovery.CheckpointStart;

        id := @parameter0: long;

        invoker := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        cal = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r0 = new com.sleepycat.je.utilint.Timestamp;

        $r1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        specialinvoke $r0.<com.sleepycat.je.utilint.Timestamp: void <init>(long)>($l0);

        this.<com.sleepycat.je.recovery.CheckpointStart: com.sleepycat.je.utilint.Timestamp startTime> = $r0;

        this.<com.sleepycat.je.recovery.CheckpointStart: long id> = id;

        if invoker != null goto label1;

        this.<com.sleepycat.je.recovery.CheckpointStart: java.lang.String invoker> = "";

        goto label2;

     label1:
        this.<com.sleepycat.je.recovery.CheckpointStart: java.lang.String invoker> = invoker;

     label2:
        return;
    }

    public void writeToLog(java.nio.ByteBuffer)
    {
        com.sleepycat.je.recovery.CheckpointStart this;
        java.nio.ByteBuffer logBuffer;
        com.sleepycat.je.utilint.Timestamp $r0;
        long $l0;
        java.lang.String $r1;

        this := @this: com.sleepycat.je.recovery.CheckpointStart;

        logBuffer := @parameter0: java.nio.ByteBuffer;

        $r0 = this.<com.sleepycat.je.recovery.CheckpointStart: com.sleepycat.je.utilint.Timestamp startTime>;

        staticinvoke <com.sleepycat.je.log.LogUtils: void writeTimestamp(java.nio.ByteBuffer,com.sleepycat.je.utilint.Timestamp)>(logBuffer, $r0);

        $l0 = this.<com.sleepycat.je.recovery.CheckpointStart: long id>;

        staticinvoke <com.sleepycat.je.log.LogUtils: void writePackedLong(java.nio.ByteBuffer,long)>(logBuffer, $l0);

        $r1 = this.<com.sleepycat.je.recovery.CheckpointStart: java.lang.String invoker>;

        staticinvoke <com.sleepycat.je.log.LogUtils: void writeString(java.nio.ByteBuffer,java.lang.String)>(logBuffer, $r1);

        return;
    }

    public int getLogSize()
    {
        com.sleepycat.je.recovery.CheckpointStart this;
        com.sleepycat.je.utilint.Timestamp $r0;
        int $i0, $i2, $i3, $i4, $i5;
        long $l1;
        java.lang.String $r1;

        this := @this: com.sleepycat.je.recovery.CheckpointStart;

        $r0 = this.<com.sleepycat.je.recovery.CheckpointStart: com.sleepycat.je.utilint.Timestamp startTime>;

        $i0 = staticinvoke <com.sleepycat.je.log.LogUtils: int getTimestampLogSize(com.sleepycat.je.utilint.Timestamp)>($r0);

        $l1 = this.<com.sleepycat.je.recovery.CheckpointStart: long id>;

        $i2 = staticinvoke <com.sleepycat.je.log.LogUtils: int getPackedLongLogSize(long)>($l1);

        $i3 = $i0 + $i2;

        $r1 = this.<com.sleepycat.je.recovery.CheckpointStart: java.lang.String invoker>;

        $i4 = staticinvoke <com.sleepycat.je.log.LogUtils: int getStringLogSize(java.lang.String)>($r1);

        $i5 = $i3 + $i4;

        return $i5;
    }


