digraph <clinit> {
"$r0 = newarray (byte)[0] {652644137}" -> "<com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1821720968}";
"<com.sleepycat.util.UtfOps: byte[] EMPTY_BYTES> = $r0 {1821720968}" -> "<com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {705865530}";
"<com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> = \"\" {705865530}" -> "return {950004374}";
}

digraph getByteLength {
"chars := @parameter0: char[] {906499224}" -> "$i0 = lengthof chars {2072103548}";
"$i0 = lengthof chars {2072103548}" -> "$i1 = staticinvoke <com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1585052325}";
"$i1 = staticinvoke <com.sleepycat.util.UtfOps: int getByteLength(char[],int,int)>(chars, 0, $i0) {1585052325}" -> "return $i1 {1982325220}";
}

digraph getByteLength {
"chars := @parameter0: char[] {170866785}" -> "offset := @parameter1: int {417300597}";
"offset := @parameter1: int {417300597}" -> "length#1 := @parameter2: int {1221469628}";
"length#1 := @parameter2: int {1221469628}" -> "len#3 = 0 {1415338881}";
"len#3 = 0 {1415338881}" -> "length#7 = length#1 + offset {1470818726}";
"length#7 = length#1 + offset {1470818726}" -> "i#9 = offset {1727718422}";
"i#9 = offset {1727718422}" -> "if i#9 >= length#7 goto return len#3 {2135606468}";
"if i#9 >= length#7 goto return len#3 {2135606468}" -> "c = chars[i#9] {30275490}";
"if i#9 >= length#7 goto return len#3 {2135606468}" -> "return len#3 {351826892}";
"c = chars[i#9] {30275490}" -> "if c < 1 goto (branch) {1324914953}";
"if c < 1 goto (branch) {1324914953}" -> "if c > 127 goto (branch) {1732116944}";
"if c < 1 goto (branch) {1324914953}" -> "if c <= 2047 goto len#3 = len#3 + 2 {36500906}";
"if c > 127 goto (branch) {1732116944}" -> "len#3 = len#3 + 1 {1829043439}";
"if c > 127 goto (branch) {1732116944}" -> "if c <= 2047 goto len#3 = len#3 + 2 {36500906}";
"len#3 = len#3 + 1 {1829043439}" -> "goto [?= i#9 = i#9 + 1] {2110698579}";
"goto [?= i#9 = i#9 + 1] {2110698579}" -> "i#9 = i#9 + 1 {1165257974}";
"if c <= 2047 goto len#3 = len#3 + 2 {36500906}" -> "len#3 = len#3 + 3 {180921744}";
"if c <= 2047 goto len#3 = len#3 + 2 {36500906}" -> "len#3 = len#3 + 2 {537939195}";
"len#3 = len#3 + 3 {180921744}" -> "goto [?= i#9 = i#9 + 1] {1152322620}";
"goto [?= i#9 = i#9 + 1] {1152322620}" -> "i#9 = i#9 + 1 {1165257974}";
"len#3 = len#3 + 2 {537939195}" -> "i#9 = i#9 + 1 {1165257974}";
"i#9 = i#9 + 1 {1165257974}" -> "goto [?= (branch)] {182433261}";
"goto [?= (branch)] {182433261}" -> "if i#9 >= length#7 goto return len#3 {2135606468}";
}

digraph charsToBytes {
"chars := @parameter0: char[] {1348149380}" -> "charOffset := @parameter1: int {1572113434}";
"charOffset := @parameter1: int {1572113434}" -> "bytes := @parameter2: byte[] {66084934}";
"bytes := @parameter2: byte[] {66084934}" -> "byteOffset#1 := @parameter3: int {1058368676}";
"byteOffset#1 := @parameter3: int {1058368676}" -> "charLength#2 := @parameter4: int {68031815}";
"charLength#2 := @parameter4: int {68031815}" -> "charLength#6 = charLength#2 + charOffset {837978232}";
"charLength#6 = charLength#2 + charOffset {837978232}" -> "i#8 = charOffset {1824399874}";
"i#8 = charOffset {1824399874}" -> "if i#8 >= charLength#6 goto return {784905141}";
"if i#8 >= charLength#6 goto return {784905141}" -> "c = chars[i#8] {947287987}";
"if i#8 >= charLength#6 goto return {784905141}" -> "return {1793824465}";
"c = chars[i#8] {947287987}" -> "if c < 1 goto (branch) {1400873500}";
"if c < 1 goto (branch) {1400873500}" -> "if c > 127 goto (branch) {132370502}";
"if c < 1 goto (branch) {1400873500}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1261570406}";
"if c > 127 goto (branch) {132370502}" -> "$i0 = byteOffset#1 {223920667}";
"if c > 127 goto (branch) {132370502}" -> "if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1261570406}";
"$i0 = byteOffset#1 {223920667}" -> "byteOffset#1 = byteOffset#1 + 1 {1520518469}";
"byteOffset#1 = byteOffset#1 + 1 {1520518469}" -> "$b1 = (byte) c {908663377}";
"$b1 = (byte) c {908663377}" -> "bytes[$i0] = $b1 {1727195836}";
"bytes[$i0] = $b1 {1727195836}" -> "goto [?= i#8 = i#8 + 1] {1809556898}";
"goto [?= i#8 = i#8 + 1] {1809556898}" -> "i#8 = i#8 + 1 {2133915374}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1261570406}" -> "byteOffset#26 = byteOffset#1 + 1 {673762454}";
"if c <= 2047 goto byteOffset#58 = byteOffset#1 + 1 {1261570406}" -> "byteOffset#58 = byteOffset#1 + 1 {1515553522}";
"byteOffset#26 = byteOffset#1 + 1 {673762454}" -> "$c2 = c >> 12 {2107474685}";
"$c2 = c >> 12 {2107474685}" -> "$c3 = $c2 & 15 {43455040}";
"$c3 = $c2 & 15 {43455040}" -> "$c4 = 224 | $c3 {989537530}";
"$c4 = 224 | $c3 {989537530}" -> "$b5 = (byte) $c4 {727761714}";
"$b5 = (byte) $c4 {727761714}" -> "bytes[byteOffset#1] = $b5 {103529121}";
"bytes[byteOffset#1] = $b5 {103529121}" -> "byteOffset#37 = byteOffset#26 + 1 {1920967486}";
"byteOffset#37 = byteOffset#26 + 1 {1920967486}" -> "$c6 = c >> 6 {1013603728}";
"$c6 = c >> 6 {1013603728}" -> "$c7 = $c6 & 63 {43580192}";
"$c7 = $c6 & 63 {43580192}" -> "$c8 = 128 | $c7 {709335784}";
"$c8 = 128 | $c7 {709335784}" -> "$b9 = (byte) $c8 {1152373997}";
"$b9 = (byte) $c8 {1152373997}" -> "bytes[byteOffset#26] = $b9 {693360508}";
"bytes[byteOffset#26] = $b9 {693360508}" -> "byteOffset#1 = byteOffset#37 + 1 {1080267822}";
"byteOffset#1 = byteOffset#37 + 1 {1080267822}" -> "$c10 = c >> 0 {264067472}";
"$c10 = c >> 0 {264067472}" -> "$c11 = $c10 & 63 {2028321025}";
"$c11 = $c10 & 63 {2028321025}" -> "$c12 = 128 | $c11 {807872950}";
"$c12 = 128 | $c11 {807872950}" -> "$b13 = (byte) $c12 {1429444603}";
"$b13 = (byte) $c12 {1429444603}" -> "bytes[byteOffset#37] = $b13 {821685908}";
"bytes[byteOffset#37] = $b13 {821685908}" -> "goto [?= i#8 = i#8 + 1] {1702978619}";
"goto [?= i#8 = i#8 + 1] {1702978619}" -> "i#8 = i#8 + 1 {2133915374}";
"byteOffset#58 = byteOffset#1 + 1 {1515553522}" -> "$c14 = c >> 6 {628910744}";
"$c14 = c >> 6 {628910744}" -> "$c15 = $c14 & 31 {1634457325}";
"$c15 = $c14 & 31 {1634457325}" -> "$c16 = 192 | $c15 {1932606185}";
"$c16 = 192 | $c15 {1932606185}" -> "$b17 = (byte) $c16 {903849661}";
"$b17 = (byte) $c16 {903849661}" -> "bytes[byteOffset#1] = $b17 {1300894970}";
"bytes[byteOffset#1] = $b17 {1300894970}" -> "byteOffset#1 = byteOffset#58 + 1 {1087848483}";
"byteOffset#1 = byteOffset#58 + 1 {1087848483}" -> "$c18 = c >> 0 {966742227}";
"$c18 = c >> 0 {966742227}" -> "$c19 = $c18 & 63 {1105699124}";
"$c19 = $c18 & 63 {1105699124}" -> "$c20 = 128 | $c19 {482314848}";
"$c20 = 128 | $c19 {482314848}" -> "$b21 = (byte) $c20 {1600473324}";
"$b21 = (byte) $c20 {1600473324}" -> "bytes[byteOffset#58] = $b21 {60955055}";
"bytes[byteOffset#58] = $b21 {60955055}" -> "i#8 = i#8 + 1 {2133915374}";
"i#8 = i#8 + 1 {2133915374}" -> "goto [?= (branch)] {532455394}";
"goto [?= (branch)] {532455394}" -> "if i#8 >= charLength#6 goto return {784905141}";
}

digraph getZeroTerminatedByteLength {
"bytes := @parameter0: byte[] {1945656444}" -> "offset#1 := @parameter1: int {329034269}";
"offset#1 := @parameter1: int {329034269}" -> "len#3 = 0 {1148956819}";
"len#3 = 0 {1148956819}" -> "$i0 = offset#1 {464846345}";
"$i0 = offset#1 {464846345}" -> "offset#1 = offset#1 + 1 {47327940}";
"offset#1 = offset#1 + 1 {47327940}" -> "$b1 = bytes[$i0] {236462}";
"$b1 = bytes[$i0] {236462}" -> "if $b1 == 0 goto return len#3 {2009230061}";
"if $b1 == 0 goto return len#3 {2009230061}" -> "len#3 = len#3 + 1 {1262126762}";
"if $b1 == 0 goto return len#3 {2009230061}" -> "return len#3 {538878001}";
"len#3 = len#3 + 1 {1262126762}" -> "goto [?= $i0 = offset#1] {1487732995}";
"goto [?= $i0 = offset#1] {1487732995}" -> "$i0 = offset#1 {464846345}";
}

digraph bytesToString {
"bytes := @parameter0: byte[] {110537652}" -> "offset := @parameter1: int {2089817472}";
"offset := @parameter1: int {2089817472}" -> "length := @parameter2: int {311451335}";
"length := @parameter2: int {311451335}" -> "if length != 0 goto charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1525717942}";
"if length != 0 goto charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1525717942}" -> "$r0 = <com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1241944137}";
"if length != 0 goto charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {1525717942}" -> "charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {489218941}";
"$r0 = <com.sleepycat.util.UtfOps: java.lang.String EMPTY_STRING> {1241944137}" -> "return $r0 {1895636368}";
"charLen = staticinvoke <com.sleepycat.util.UtfOps: int getCharLength(byte[],int,int)>(bytes, offset, length) {489218941}" -> "chars = newarray (char)[charLen] {1870132000}";
"chars = newarray (char)[charLen] {1870132000}" -> "staticinvoke <com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1109875221}";
"staticinvoke <com.sleepycat.util.UtfOps: int bytesToChars(byte[],int,char[],int,int,boolean)>(bytes, offset, chars, 0, length, 1) {1109875221}" -> "$r1 = new java.lang.String {1223234147}";
"$r1 = new java.lang.String {1223234147}" -> "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {1528528563}";
"specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(chars, 0, charLen) {1528528563}" -> "return $r1 {1825419846}";
}

digraph bytesToChars {
"bytes := @parameter0: byte[] {1128562995}" -> "byteOffset#1 := @parameter1: int {747842489}";
"byteOffset#1 := @parameter1: int {747842489}" -> "chars := @parameter2: char[] {1351234806}";
"chars := @parameter2: char[] {1351234806}" -> "charOffset#2 := @parameter3: int {1350498572}";
"charOffset#2 := @parameter3: int {1350498572}" -> "len#3 := @parameter4: int {1702322548}";
"len#3 := @parameter4: int {1702322548}" -> "isByteLen := @parameter5: boolean {166685982}";
"isByteLen := @parameter5: boolean {166685982}" -> "if isByteLen == 0 goto $i1 = charOffset#2 {559272864}";
"if isByteLen == 0 goto $i1 = charOffset#2 {559272864}" -> "$i1 = byteOffset#1 {139656652}";
"if isByteLen == 0 goto $i1 = charOffset#2 {559272864}" -> "$i1 = charOffset#2 {1385721831}";
"$i1 = byteOffset#1 {139656652}" -> "goto [?= len#8 = len#3 + $i1] {1017151548}";
"goto [?= len#8 = len#3 + $i1] {1017151548}" -> "len#8 = len#3 + $i1 {1115440173}";
"$i1 = charOffset#2 {1385721831}" -> "len#8 = len#3 + $i1 {1115440173}";
"len#8 = len#3 + $i1 {1115440173}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1796420306}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1796420306}" -> "$i2 = byteOffset#1 {1293729825}";
"if isByteLen == 0 goto $i2 = charOffset#2 {1796420306}" -> "$i2 = charOffset#2 {993743996}";
"$i2 = byteOffset#1 {1293729825}" -> "goto [?= (branch)] {1843505283}";
"goto [?= (branch)] {1843505283}" -> "if $i2 >= len#8 goto return byteOffset#1 {1652209835}";
"$i2 = charOffset#2 {993743996}" -> "if $i2 >= len#8 goto return byteOffset#1 {1652209835}";
"if $i2 >= len#8 goto return byteOffset#1 {1652209835}" -> "$i3 = byteOffset#1 {1673956680}";
"if $i2 >= len#8 goto return byteOffset#1 {1652209835}" -> "return byteOffset#1 {1728197195}";
"$i3 = byteOffset#1 {1673956680}" -> "byteOffset#1 = byteOffset#1 + 1 {1233338999}";
"byteOffset#1 = byteOffset#1 + 1 {1233338999}" -> "$b4 = bytes[$i3] {2114651148}";
"$b4 = bytes[$i3] {2114651148}" -> "char1 = $b4 & 255 {594570547}";
"char1 = $b4 & 255 {594570547}" -> "$s5 = char1 & 255 {1133312654}";
"$s5 = char1 & 255 {1133312654}" -> "$s6 = $s5 >> 4 {1156079501}";
"$s6 = $s5 >> 4 {1156079501}" -> "tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1000451670}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1000451670}" -> "$i7 = charOffset#2 {1423075890}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1000451670}" -> "$r2 = new java.lang.IllegalArgumentException {1289909587}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1000451670}" -> "$i9 = byteOffset#1 {724195852}";
"tableswitch($s6) {     case 0: goto $i7 = charOffset#2;     case 1: goto $i7 = charOffset#2;     case 2: goto $i7 = charOffset#2;     case 3: goto $i7 = charOffset#2;     case 4: goto $i7 = charOffset#2;     case 5: goto $i7 = charOffset#2;     case 6: goto $i7 = charOffset#2;     case 7: goto $i7 = charOffset#2;     case 8: goto $r2 = new java.lang.IllegalArgumentException;     case 9: goto $r2 = new java.lang.IllegalArgumentException;     case 10: goto $r2 = new java.lang.IllegalArgumentException;     case 11: goto $r2 = new java.lang.IllegalArgumentException;     case 12: goto $i9 = byteOffset#1;     case 13: goto $i9 = byteOffset#1;     case 14: goto byteOffset#50 = byteOffset#1 + 1;     default: goto $r2 = new java.lang.IllegalArgumentException; } {1000451670}" -> "byteOffset#50 = byteOffset#1 + 1 {686874291}";
"$i7 = charOffset#2 {1423075890}" -> "charOffset#2 = charOffset#2 + 1 {1379943186}";
"charOffset#2 = charOffset#2 + 1 {1379943186}" -> "$c8 = (char) char1 {1469164601}";
"$c8 = (char) char1 {1469164601}" -> "chars[$i7] = $c8 {119090442}";
"chars[$i7] = $c8 {119090442}" -> "goto [?= (branch)] {1339342079}";
"goto [?= (branch)] {1339342079}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1796420306}";
"$i9 = byteOffset#1 {724195852}" -> "byteOffset#1 = byteOffset#1 + 1 {1695896350}";
"byteOffset#1 = byteOffset#1 + 1 {1695896350}" -> "char2#29 = bytes[$i9] {29044214}";
"char2#29 = bytes[$i9] {29044214}" -> "$s10 = char2#29 & 192 {520775338}";
"$s10 = char2#29 & 192 {520775338}" -> "if $s10 == 128 goto $i11 = charOffset#2 {1096987999}";
"if $s10 == 128 goto $i11 = charOffset#2 {1096987999}" -> "$r0 = new java.lang.IllegalArgumentException {959751521}";
"if $s10 == 128 goto $i11 = charOffset#2 {1096987999}" -> "$i11 = charOffset#2 {51912931}";
"$r0 = new java.lang.IllegalArgumentException {959751521}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {64384639}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {64384639}" -> "throw $r0 {1472916247}";
"$i11 = charOffset#2 {51912931}" -> "charOffset#2 = charOffset#2 + 1 {856494953}";
"charOffset#2 = charOffset#2 + 1 {856494953}" -> "$s12 = char1 & 31 {735982572}";
"$s12 = char1 & 31 {735982572}" -> "$i13 = $s12 << 6 {573490901}";
"$i13 = $s12 << 6 {573490901}" -> "$b14 = char2#29 & 63 {1346742834}";
"$b14 = char2#29 & 63 {1346742834}" -> "$i15 = $i13 | $b14 {1002728897}";
"$i15 = $i13 | $b14 {1002728897}" -> "$c16 = (char) $i15 {1384400740}";
"$c16 = (char) $i15 {1384400740}" -> "chars[$i11] = $c16 {413640736}";
"chars[$i11] = $c16 {413640736}" -> "goto [?= (branch)] {1708037436}";
"goto [?= (branch)] {1708037436}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1796420306}";
"byteOffset#50 = byteOffset#1 + 1 {686874291}" -> "char2#52 = bytes[byteOffset#1] {643095979}";
"char2#52 = bytes[byteOffset#1] {643095979}" -> "byteOffset#1 = byteOffset#50 + 1 {379021608}";
"byteOffset#1 = byteOffset#50 + 1 {379021608}" -> "char3 = bytes[byteOffset#50] {1658408375}";
"char3 = bytes[byteOffset#50] {1658408375}" -> "$s17 = char2#52 & 192 {555675419}";
"$s17 = char2#52 & 192 {555675419}" -> "if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {327546985}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {327546985}" -> "$s18 = char3 & 192 {4097352}";
"if $s17 != 128 goto $r1 = new java.lang.IllegalArgumentException {327546985}" -> "$r1 = new java.lang.IllegalArgumentException {1751376429}";
"$s18 = char3 & 192 {4097352}" -> "if $s18 == 128 goto $i19 = charOffset#2 {1769963465}";
"if $s18 == 128 goto $i19 = charOffset#2 {1769963465}" -> "$r1 = new java.lang.IllegalArgumentException {1751376429}";
"if $s18 == 128 goto $i19 = charOffset#2 {1769963465}" -> "$i19 = charOffset#2 {1671552602}";
"$r1 = new java.lang.IllegalArgumentException {1751376429}" -> "specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {63190633}";
"specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>() {63190633}" -> "throw $r1 {290947311}";
"$i19 = charOffset#2 {1671552602}" -> "charOffset#2 = charOffset#2 + 1 {1106565945}";
"charOffset#2 = charOffset#2 + 1 {1106565945}" -> "$s20 = char1 & 15 {1950602210}";
"$s20 = char1 & 15 {1950602210}" -> "$i21 = $s20 << 12 {889183194}";
"$i21 = $s20 << 12 {889183194}" -> "$b22 = char2#52 & 63 {2011360077}";
"$b22 = char2#52 & 63 {2011360077}" -> "$i23 = $b22 << 6 {541314585}";
"$i23 = $b22 << 6 {541314585}" -> "$i24 = $i21 | $i23 {1734170076}";
"$i24 = $i21 | $i23 {1734170076}" -> "$b25 = char3 & 63 {1250554937}";
"$b25 = char3 & 63 {1250554937}" -> "$i26 = $b25 << 0 {1799986092}";
"$i26 = $b25 << 0 {1799986092}" -> "$i27 = $i24 | $i26 {962760844}";
"$i27 = $i24 | $i26 {962760844}" -> "$c28 = (char) $i27 {1011844005}";
"$c28 = (char) $i27 {1011844005}" -> "chars[$i19] = $c28 {1176115358}";
"chars[$i19] = $c28 {1176115358}" -> "goto [?= (branch)] {1630109450}";
"goto [?= (branch)] {1630109450}" -> "if isByteLen == 0 goto $i2 = charOffset#2 {1796420306}";
"$r2 = new java.lang.IllegalArgumentException {1289909587}" -> "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {448311849}";
"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>() {448311849}" -> "throw $r2 {818106203}";
}

digraph getCharLength {
"bytes := @parameter0: byte[] {150403436}" -> "offset#1 := @parameter1: int {1080954096}";
"offset#1 := @parameter1: int {1080954096}" -> "length#2 := @parameter2: int {1924016877}";
"length#2 := @parameter2: int {1924016877}" -> "charCount#4 = 0 {396600959}";
"charCount#4 = 0 {396600959}" -> "length#8 = length#2 + offset#1 {1881579788}";
"length#8 = length#2 + offset#1 {1881579788}" -> "if offset#1 >= length#8 goto return charCount#4 {1139775573}";
"if offset#1 >= length#8 goto return charCount#4 {1139775573}" -> "$b0 = bytes[offset#1] {1029998633}";
"if offset#1 >= length#8 goto return charCount#4 {1139775573}" -> "return charCount#4 {1206784493}";
"$b0 = bytes[offset#1] {1029998633}" -> "$s1 = $b0 & 255 {656948764}";
"$s1 = $b0 & 255 {656948764}" -> "$s2 = $s1 >> 4 {1857138187}";
"$s2 = $s1 >> 4 {1857138187}" -> "tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1491517615}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1491517615}" -> "offset#1 = offset#1 + 1 {1054395761}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1491517615}" -> "$r0 = new java.lang.IllegalArgumentException {617095271}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1491517615}" -> "offset#1 = offset#1 + 2 {1086456293}";
"tableswitch($s2) {     case 0: goto offset#1 = offset#1 + 1;     case 1: goto offset#1 = offset#1 + 1;     case 2: goto offset#1 = offset#1 + 1;     case 3: goto offset#1 = offset#1 + 1;     case 4: goto offset#1 = offset#1 + 1;     case 5: goto offset#1 = offset#1 + 1;     case 6: goto offset#1 = offset#1 + 1;     case 7: goto offset#1 = offset#1 + 1;     case 8: goto $r0 = new java.lang.IllegalArgumentException;     case 9: goto $r0 = new java.lang.IllegalArgumentException;     case 10: goto $r0 = new java.lang.IllegalArgumentException;     case 11: goto $r0 = new java.lang.IllegalArgumentException;     case 12: goto offset#1 = offset#1 + 2;     case 13: goto offset#1 = offset#1 + 2;     case 14: goto offset#1 = offset#1 + 3;     default: goto $r0 = new java.lang.IllegalArgumentException; } {1491517615}" -> "offset#1 = offset#1 + 3 {1451532567}";
"offset#1 = offset#1 + 1 {1054395761}" -> "goto [?= charCount#4 = charCount#4 + 1] {593506932}";
"goto [?= charCount#4 = charCount#4 + 1] {593506932}" -> "charCount#4 = charCount#4 + 1 {1019964375}";
"offset#1 = offset#1 + 2 {1086456293}" -> "goto [?= charCount#4 = charCount#4 + 1] {776950506}";
"goto [?= charCount#4 = charCount#4 + 1] {776950506}" -> "charCount#4 = charCount#4 + 1 {1019964375}";
"offset#1 = offset#1 + 3 {1451532567}" -> "goto [?= charCount#4 = charCount#4 + 1] {1951779361}";
"goto [?= charCount#4 = charCount#4 + 1] {1951779361}" -> "charCount#4 = charCount#4 + 1 {1019964375}";
"$r0 = new java.lang.IllegalArgumentException {617095271}" -> "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {62612752}";
"specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>() {62612752}" -> "throw $r0 {1499833220}";
"charCount#4 = charCount#4 + 1 {1019964375}" -> "goto [?= (branch)] {1797817878}";
"goto [?= (branch)] {1797817878}" -> "if offset#1 >= length#8 goto return charCount#4 {1139775573}";
}


